var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_skb_seglen\">tcp_skb_seglen</a>(<a class=\"id\" href=\"#skb\">skb</a>) &gt; <a class=\"id\" href=\"#mss\">mss</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !(<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#sacked\">sacked</a> &amp; <a class=\"id\" href=\"#TCPCB_SACKED_ACKED\">TCPCB_SACKED_ACKED</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#sacked\">sacked</a> &amp; <a class=\"id\" href=\"#TCPCB_SACKED_RETRANS\">TCPCB_SACKED_RETRANS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#sacked\">sacked</a> &= ~<a class=\"id\" href=\"#TCPCB_SACKED_RETRANS\">TCPCB_SACKED_RETRANS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#retrans_out\">retrans_out</a> -= <a class=\"id\" href=\"#tcp_skb_pcount\">tcp_skb_pcount</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_skb_mark_lost_uncond_verify\">tcp_skb_mark_lost_uncond_verify</a>(<a class=\"id\" href=\"#tp\">tp</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_clear_retrans_hints_partial\">tcp_clear_retrans_hints_partial</a>(<a class=\"id\" href=\"#tp\">tp</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#prior_lost\">prior_lost</a> == <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#lost_out\">lost_out</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_is_reno\">tcp_is_reno</a>(<a class=\"id\" href=\"#tp\">tp</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_limit_reno_sacked\">tcp_limit_reno_sacked</a>(<a class=\"id\" href=\"#tp\">tp</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_verify_left_out\">tcp_verify_left_out</a>(<a class=\"id\" href=\"#tp\">tp</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Don't muck with the congestion window here.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Reason is that we do not increase amount of _data_</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * in network, but units changed and effective</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * cwnd/ssthresh really reduced now.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ca_state\">icsk_ca_state</a> != <a class=\"id\" href=\"#TCP_CA_Loss\">TCP_CA_Loss</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#high_seq\">high_seq</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_nxt\">snd_nxt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_ssthresh\">snd_ssthresh</a> = <a class=\"id\" href=\"#tcp_current_ssthresh\">tcp_current_ssthresh</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#prior_ssthresh\">prior_ssthresh</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#undo_marker\">undo_marker</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_set_ca_state\">tcp_set_ca_state</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#TCP_CA_Loss\">TCP_CA_Loss</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_xmit_retransmit_queue\">tcp_xmit_retransmit_queue</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tcp_simple_retransmit\">tcp_simple_retransmit</a>);", 
"", 
"<span class=\"comment\">/* Process an event, which can update packets-in-flight not trivially.</span>", 
"<span class=\"comment\"> * Main goal of this function is to calculate new estimate for left_out,</span>", 
"<span class=\"comment\"> * taking into account both packets sitting in receiver's buffer and</span>", 
"<span class=\"comment\"> * packets lost by network.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Besides that it does CWND reduction, when packet loss is detected</span>", 
"<span class=\"comment\"> * and changes state of machine.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * It does _not_ decide what to send, it is made in function</span>", 
"<span class=\"comment\"> * tcp_xmit_retransmit_queue().</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#tcp_fastretrans_alert\">tcp_fastretrans_alert</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#pkts_acked\">pkts_acked</a>, int <a class=\"id\" href=\"#flag\">flag</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a> *<a class=\"id\" href=\"#icsk\">icsk</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#is_dupack\">is_dupack</a> = !(<a class=\"id\" href=\"#flag\">flag</a> &amp; (<a class=\"id\" href=\"#FLAG_SND_UNA_ADVANCED\">FLAG_SND_UNA_ADVANCED</a> | <a class=\"id\" href=\"#FLAG_NOT_DUP\">FLAG_NOT_DUP</a>));", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#do_lost\">do_lost</a> = <a class=\"id\" href=\"#is_dupack\">is_dupack</a> || ((<a class=\"id\" href=\"#flag\">flag</a> &amp; <a class=\"id\" href=\"#FLAG_DATA_SACKED\">FLAG_DATA_SACKED</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#tcp_fackets_out\">tcp_fackets_out</a>(<a class=\"id\" href=\"#tp\">tp</a>) &gt; <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#reordering\">reordering</a>));", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fast_rexmit\">fast_rexmit</a> = 0, <a class=\"id\" href=\"#mib_idx\">mib_idx</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#packets_out\">packets_out</a> && <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#sacked_out\">sacked_out</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#sacked_out\">sacked_out</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#sacked_out\">sacked_out</a> && <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#fackets_out\">fackets_out</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#fackets_out\">fackets_out</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Now state machine starts.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * A. ECE, hence prohibit cwnd undoing, the reduction is required. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flag\">flag</a> &amp; <a class=\"id\" href=\"#FLAG_ECE\">FLAG_ECE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#prior_ssthresh\">prior_ssthresh</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* B. In all the states check for reneging SACKs. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_check_sack_reneging\">tcp_check_sack_reneging</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#flag\">flag</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* C. Process data loss notification, provided it is valid. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_is_fack\">tcp_is_fack</a>(<a class=\"id\" href=\"#tp\">tp</a>) && (<a class=\"id\" href=\"#flag\">flag</a> &amp; <a class=\"id\" href=\"#FLAG_DATA_LOST\">FLAG_DATA_LOST</a>) &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#before\">before</a>(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_una\">snd_una</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#high_seq\">high_seq</a>) &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ca_state\">icsk_ca_state</a> != <a class=\"id\" href=\"#TCP_CA_Open\">TCP_CA_Open</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#fackets_out\">fackets_out</a> &gt; <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#reordering\">reordering</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_mark_head_lost\">tcp_mark_head_lost</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#fackets_out\">fackets_out</a> - <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#reordering\">reordering</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NET_INC_STATS_BH\">NET_INC_STATS_BH</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#LINUX_MIB_TCPLOSS\">LINUX_MIB_TCPLOSS</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* D. Check consistency of the current state. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_verify_left_out\">tcp_verify_left_out</a>(<a class=\"id\" href=\"#tp\">tp</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* E. Check state exit conditions. State can be terminated</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *    when high_seq is ACKed. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ca_state\">icsk_ca_state</a> == <a class=\"id\" href=\"#TCP_CA_Open\">TCP_CA_Open</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#retrans_out\">retrans_out</a> != 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#retrans_stamp\">retrans_stamp</a> = 0;", 
"<span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#before\">before</a>(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_una\">snd_una</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#high_seq\">high_seq</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ca_state\">icsk_ca_state</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#TCP_CA_Loss\">TCP_CA_Loss</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_retransmits\">icsk_retransmits</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_try_undo_recovery\">tcp_try_undo_recovery</a>(<a class=\"id\" href=\"#sk\">sk</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#TCP_CA_CWR\">TCP_CA_CWR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* CWR is to be held something *above* high_seq</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * is ACKed for CWR bit to reach receiver. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_una\">snd_una</a> != <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#high_seq\">high_seq</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_complete_cwr\">tcp_complete_cwr</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_set_ca_state\">tcp_set_ca_state</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#TCP_CA_Open\">TCP_CA_Open</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#TCP_CA_Disorder\">TCP_CA_Disorder</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_try_undo_dsack\">tcp_try_undo_dsack</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#undo_marker\">undo_marker</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <span class=\"comment\">/* For SACK case do not Open to allow to undo</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     * catching for all duplicate ACKs. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#tcp_is_reno\">tcp_is_reno</a>(<a class=\"id\" href=\"#tp\">tp</a>) || <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_una\">snd_una</a> != <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#high_seq\">high_seq</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#undo_marker\">undo_marker</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_set_ca_state\">tcp_set_ca_state</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#TCP_CA_Open\">TCP_CA_Open</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#TCP_CA_Recovery\">TCP_CA_Recovery</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_is_reno\">tcp_is_reno</a>(<a class=\"id\" href=\"#tp\">tp</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_reset_reno_sack\">tcp_reset_reno_sack</a>(<a class=\"id\" href=\"#tp\">tp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_try_undo_recovery\">tcp_try_undo_recovery</a>(<a class=\"id\" href=\"#sk\">sk</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_complete_cwr\">tcp_complete_cwr</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* F. Process state. */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ca_state\">icsk_ca_state</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TCP_CA_Recovery\">TCP_CA_Recovery</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#flag\">flag</a> &amp; <a class=\"id\" href=\"#FLAG_SND_UNA_ADVANCED\">FLAG_SND_UNA_ADVANCED</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_is_reno\">tcp_is_reno</a>(<a class=\"id\" href=\"#tp\">tp</a>) && <a class=\"id\" href=\"#is_dupack\">is_dupack</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_add_reno_sack\">tcp_add_reno_sack</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_lost\">do_lost</a> = <a class=\"id\" href=\"#tcp_try_undo_partial\">tcp_try_undo_partial</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#pkts_acked\">pkts_acked</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TCP_CA_Loss\">TCP_CA_Loss</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#flag\">flag</a> &amp; <a class=\"id\" href=\"#FLAG_DATA_ACKED\">FLAG_DATA_ACKED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_retransmits\">icsk_retransmits</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_is_reno\">tcp_is_reno</a>(<a class=\"id\" href=\"#tp\">tp</a>) && <a class=\"id\" href=\"#flag\">flag</a> &amp; <a class=\"id\" href=\"#FLAG_SND_UNA_ADVANCED\">FLAG_SND_UNA_ADVANCED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_reset_reno_sack\">tcp_reset_reno_sack</a>(<a class=\"id\" href=\"#tp\">tp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tcp_try_undo_loss\">tcp_try_undo_loss</a>(<a class=\"id\" href=\"#sk\">sk</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_moderate_cwnd\">tcp_moderate_cwnd</a>(<a class=\"id\" href=\"#tp\">tp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_xmit_retransmit_queue\">tcp_xmit_retransmit_queue</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ca_state\">icsk_ca_state</a> != <a class=\"id\" href=\"#TCP_CA_Open\">TCP_CA_Open</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Loss is undone; fall through to processing in Open state. */</span>", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_is_reno\">tcp_is_reno</a>(<a class=\"id\" href=\"#tp\">tp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#flag\">flag</a> &amp; <a class=\"id\" href=\"#FLAG_SND_UNA_ADVANCED\">FLAG_SND_UNA_ADVANCED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_reset_reno_sack\">tcp_reset_reno_sack</a>(<a class=\"id\" href=\"#tp\">tp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#is_dupack\">is_dupack</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_add_reno_sack\">tcp_add_reno_sack</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ca_state\">icsk_ca_state</a> == <a class=\"id\" href=\"#TCP_CA_Disorder\">TCP_CA_Disorder</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_try_undo_dsack\">tcp_try_undo_dsack</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tcp_time_to_recover\">tcp_time_to_recover</a>(<a class=\"id\" href=\"#sk\">sk</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_try_to_open\">tcp_try_to_open</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#flag\">flag</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* MTU probe failure: don't reduce cwnd */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ca_state\">icsk_ca_state</a> &lt; <a class=\"id\" href=\"#TCP_CA_CWR\">TCP_CA_CWR</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_mtup\">icsk_mtup</a>.<a class=\"id\" href=\"#probe_size\">probe_size</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_una\">snd_una</a> == <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#mtu_probe\">mtu_probe</a>.<a class=\"id\" href=\"#probe_seq_start\">probe_seq_start</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_mtup_probe_failed\">tcp_mtup_probe_failed</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Restores the reduction we did in tcp_mtup_probe() */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd\">snd_cwnd</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_simple_retransmit\">tcp_simple_retransmit</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Otherwise enter Recovery state */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_is_reno\">tcp_is_reno</a>(<a class=\"id\" href=\"#tp\">tp</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mib_idx\">mib_idx</a> = <a class=\"id\" href=\"#LINUX_MIB_TCPRENORECOVERY\">LINUX_MIB_TCPRENORECOVERY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mib_idx\">mib_idx</a> = <a class=\"id\" href=\"#LINUX_MIB_TCPSACKRECOVERY\">LINUX_MIB_TCPSACKRECOVERY</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NET_INC_STATS_BH\">NET_INC_STATS_BH</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#mib_idx\">mib_idx</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#high_seq\">high_seq</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_nxt\">snd_nxt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#prior_ssthresh\">prior_ssthresh</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#undo_marker\">undo_marker</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_una\">snd_una</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#undo_retrans\">undo_retrans</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#retrans_out\">retrans_out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ca_state\">icsk_ca_state</a> &lt; <a class=\"id\" href=\"#TCP_CA_CWR\">TCP_CA_CWR</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#flag\">flag</a> &amp; <a class=\"id\" href=\"#FLAG_ECE\">FLAG_ECE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#prior_ssthresh\">prior_ssthresh</a> = <a class=\"id\" href=\"#tcp_current_ssthresh\">tcp_current_ssthresh</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_ssthresh\">snd_ssthresh</a> = <a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ca_ops\">icsk_ca_ops</a>-><a class=\"id\" href=\"#ssthresh\">ssthresh</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#TCP_ECN_queue_cwr\">TCP_ECN_queue_cwr</a>(<a class=\"id\" href=\"#tp\">tp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#bytes_acked\">bytes_acked</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd_cnt\">snd_cwnd_cnt</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_set_ca_state\">tcp_set_ca_state</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#TCP_CA_Recovery\">TCP_CA_Recovery</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fast_rexmit\">fast_rexmit</a> = 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#do_lost\">do_lost</a> || (<a class=\"id\" href=\"#tcp_is_fack\">tcp_is_fack</a>(<a class=\"id\" href=\"#tp\">tp</a>) && <a class=\"id\" href=\"#tcp_head_timedout\">tcp_head_timedout</a>(<a class=\"id\" href=\"#sk\">sk</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_update_scoreboard\">tcp_update_scoreboard</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#fast_rexmit\">fast_rexmit</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_cwnd_down\">tcp_cwnd_down</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#flag\">flag</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_xmit_retransmit_queue\">tcp_xmit_retransmit_queue</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#tcp_valid_rtt_meas\">tcp_valid_rtt_meas</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#seq_rtt\">seq_rtt</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_rtt_estimator\">tcp_rtt_estimator</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#seq_rtt\">seq_rtt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_set_rto\">tcp_set_rto</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#icsk_backoff\">icsk_backoff</a> = 0;", 
"}", 
"", 
"<span class=\"comment\">/* Read draft-ietf-tcplw-high-performance before mucking</span>", 
"<span class=\"comment\"> * with this code. (Supersedes RFC1323)</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#tcp_ack_saw_tstamp\">tcp_ack_saw_tstamp</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#flag\">flag</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* RTTM Rule: A TSecr value received in a segment is used to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * update the averaged RTT measurement only if the segment</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * acknowledges some new data, i.e., only if it advances the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * left edge of the send window.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * See draft-ietf-tcplw-high-performance-00, section 3.3.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 1998/04/10 Andrey V. Savochkin &lt;saw@msu.ru&gt;</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Changed: reset backoff as soon as we see the first valid sample.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If we do not, we get strongly overestimated rto. With timestamps</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * samples are accepted even from very old segments: f.e., when rtt=1</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * increases to 8, we retransmit 5 times and after 8 seconds delayed</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * answer arrives rto becomes 120 seconds! If at least one of segments</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * in window is lost... Voila.<span class=\"ts\"/> <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>--ANK (010210)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_valid_rtt_meas\">tcp_valid_rtt_meas</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#tcp_time_stamp\">tcp_time_stamp</a> - <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#rcv_tsecr\">rcv_tsecr</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#tcp_ack_no_tstamp\">tcp_ack_no_tstamp</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#seq_rtt\">seq_rtt</a>, int <a class=\"id\" href=\"#flag\">flag</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* We don't have a timestamp. Can only use</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * packets that are not retransmitted to determine</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * rtt estimates. Also, we must not reset the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * backoff for rto until we get a non-retransmitted</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * packet. This allows us to deal with a situation</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * where the network delay has increased suddenly.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * I.e. Karn's algorithm. (SIGCOMM '87, p5.)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flag\">flag</a> &amp; <a class=\"id\" href=\"#FLAG_RETRANS_DATA_ACKED\">FLAG_RETRANS_DATA_ACKED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_valid_rtt_meas\">tcp_valid_rtt_meas</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#seq_rtt\">seq_rtt</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#tcp_ack_update_rtt\">tcp_ack_update_rtt</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, const int <a class=\"id\" href=\"#flag\">flag</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      const <a class=\"id\" href=\"#s32\">s32</a> <a class=\"id\" href=\"#seq_rtt\">seq_rtt</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Note that peer MAY send zero echo. In this case it is ignored. (rfc1323) */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#saw_tstamp\">saw_tstamp</a> && <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#rcv_tsecr\">rcv_tsecr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_ack_saw_tstamp\">tcp_ack_saw_tstamp</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#flag\">flag</a>);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#seq_rtt\">seq_rtt</a> >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_ack_no_tstamp\">tcp_ack_no_tstamp</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#seq_rtt\">seq_rtt</a>, <a class=\"id\" href=\"#flag\">flag</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#tcp_cong_avoid\">tcp_cong_avoid</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ack\">ack</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#in_flight\">in_flight</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a> *<a class=\"id\" href=\"#icsk\">icsk</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ca_ops\">icsk_ca_ops</a>-><a class=\"id\" href=\"#cong_avoid\">cong_avoid</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#ack\">ack</a>, <a class=\"id\" href=\"#in_flight\">in_flight</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#snd_cwnd_stamp\">snd_cwnd_stamp</a> = <a class=\"id\" href=\"#tcp_time_stamp\">tcp_time_stamp</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Restart timer after forward progress on connection.</span>", 
"<span class=\"comment\"> * RFC2988 recommends to restart timer to now+rto.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#tcp_rearm_rto\">tcp_rearm_rto</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#packets_out\">packets_out</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_csk_clear_xmit_timer\">inet_csk_clear_xmit_timer</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#ICSK_TIME_RETRANS\">ICSK_TIME_RETRANS</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_csk_reset_xmit_timer\">inet_csk_reset_xmit_timer</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#ICSK_TIME_RETRANS\">ICSK_TIME_RETRANS</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#icsk_rto\">icsk_rto</a>, <a class=\"id\" href=\"#TCP_RTO_MAX\">TCP_RTO_MAX</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/* If we get here, the whole TSO packet has not been acked. */</span>", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#tcp_tso_acked\">tcp_tso_acked</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#packets_acked\">packets_acked</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#after\">after</a>(<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_una\">snd_una</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#packets_acked\">packets_acked</a> = <a class=\"id\" href=\"#tcp_skb_pcount\">tcp_skb_pcount</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_trim_head\">tcp_trim_head</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_una\">snd_una</a> - <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#packets_acked\">packets_acked</a> -= <a class=\"id\" href=\"#tcp_skb_pcount\">tcp_skb_pcount</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#packets_acked\">packets_acked</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#tcp_skb_pcount\">tcp_skb_pcount</a>(<a class=\"id\" href=\"#skb\">skb</a>) == 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#before\">before</a>(<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>));", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#packets_acked\">packets_acked</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Remove acknowledged frames from the retransmission queue. If our packet</span>", 
"<span class=\"comment\"> * is before the ack sequence we can discard it as it's confirmed to have</span>", 
"<span class=\"comment\"> * arrived at the other end.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#tcp_clean_rtx_queue\">tcp_clean_rtx_queue</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#prior_fackets\">prior_fackets</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#prior_snd_una\">prior_snd_una</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a> *<a class=\"id\" href=\"#icsk\">icsk</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#now\">now</a> = <a class=\"id\" href=\"#tcp_time_stamp\">tcp_time_stamp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fully_acked\">fully_acked</a> = 1;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#flag\">flag</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pkts_acked\">pkts_acked</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#reord\">reord</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#packets_out\">packets_out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#prior_sacked\">prior_sacked</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#sacked_out\">sacked_out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s32\">s32</a> <a class=\"id\" href=\"#seq_rtt\">seq_rtt</a> = -1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s32\">s32</a> <a class=\"id\" href=\"#ca_seq_rtt\">ca_seq_rtt</a> = -1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#last_ackt\">last_ackt</a> = <a class=\"id\" href=\"#net_invalid_timestamp\">net_invalid_timestamp</a>();", 
"", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#tcp_write_queue_head\">tcp_write_queue_head</a>(<a class=\"id\" href=\"#sk\">sk</a>)) && <a class=\"id\" href=\"#skb\">skb</a> != <a class=\"id\" href=\"#tcp_send_head\">tcp_send_head</a>(<a class=\"id\" href=\"#sk\">sk</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_skb_cb\">tcp_skb_cb</a> *<a class=\"id\" href=\"#scb\">scb</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#acked_pcount\">acked_pcount</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#sacked\">sacked</a> = <a class=\"id\" href=\"#scb\">scb</a>-><a class=\"id\" href=\"#sacked\">sacked</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Determine how many packets and what bytes were acked, tso and else */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#after\">after</a>(<a class=\"id\" href=\"#scb\">scb</a>-><a class=\"id\" href=\"#end_seq\">end_seq</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_una\">snd_una</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_skb_pcount\">tcp_skb_pcount</a>(<a class=\"id\" href=\"#skb\">skb</a>) == 1 ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#after\">after</a>(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_una\">snd_una</a>, <a class=\"id\" href=\"#scb\">scb</a>-><a class=\"id\" href=\"#seq\">seq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acked_pcount\">acked_pcount</a> = <a class=\"id\" href=\"#tcp_tso_acked\">tcp_tso_acked</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#acked_pcount\">acked_pcount</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fully_acked\">fully_acked</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acked_pcount\">acked_pcount</a> = <a class=\"id\" href=\"#tcp_skb_pcount\">tcp_skb_pcount</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sacked\">sacked</a> &amp; <a class=\"id\" href=\"#TCPCB_RETRANS\">TCPCB_RETRANS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sacked\">sacked</a> &amp; <a class=\"id\" href=\"#TCPCB_SACKED_RETRANS\">TCPCB_SACKED_RETRANS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#retrans_out\">retrans_out</a> -= <a class=\"id\" href=\"#acked_pcount\">acked_pcount</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flag\">flag</a> |= <a class=\"id\" href=\"#FLAG_RETRANS_DATA_ACKED\">FLAG_RETRANS_DATA_ACKED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ca_seq_rtt\">ca_seq_rtt</a> = -1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_rtt\">seq_rtt</a> = -1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#flag\">flag</a> &amp; <a class=\"id\" href=\"#FLAG_DATA_ACKED\">FLAG_DATA_ACKED</a>) || (<a class=\"id\" href=\"#acked_pcount\">acked_pcount</a> &gt; 1))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flag\">flag</a> |= <a class=\"id\" href=\"#FLAG_NONHEAD_RETRANS_ACKED\">FLAG_NONHEAD_RETRANS_ACKED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ca_seq_rtt\">ca_seq_rtt</a> = <a class=\"id\" href=\"#now\">now</a> - <a class=\"id\" href=\"#scb\">scb</a>-><a class=\"id\" href=\"#when\">when</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_ackt\">last_ackt</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#tstamp\">tstamp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#seq_rtt\">seq_rtt</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_rtt\">seq_rtt</a> = <a class=\"id\" href=\"#ca_seq_rtt\">ca_seq_rtt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#sacked\">sacked</a> &amp; <a class=\"id\" href=\"#TCPCB_SACKED_ACKED\">TCPCB_SACKED_ACKED</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reord\">reord</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#pkts_acked\">pkts_acked</a>, <a class=\"id\" href=\"#reord\">reord</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sacked\">sacked</a> &amp; <a class=\"id\" href=\"#TCPCB_SACKED_ACKED\">TCPCB_SACKED_ACKED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#sacked_out\">sacked_out</a> -= <a class=\"id\" href=\"#acked_pcount\">acked_pcount</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sacked\">sacked</a> &amp; <a class=\"id\" href=\"#TCPCB_LOST\">TCPCB_LOST</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#lost_out\">lost_out</a> -= <a class=\"id\" href=\"#acked_pcount\">acked_pcount</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#packets_out\">packets_out</a> -= <a class=\"id\" href=\"#acked_pcount\">acked_pcount</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkts_acked\">pkts_acked</a> += <a class=\"id\" href=\"#acked_pcount\">acked_pcount</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Initial outgoing SYN's get put onto the write_queue</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * just like anything else we transmit.  It is not</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * true data, and if we misinform our callers that</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * this ACK acks real data, we will erroneously exit</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * connection startup slow start one packet too</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * quickly.  This is severely frowned upon behavior.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#scb\">scb</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TCPHDR_SYN\">TCPHDR_SYN</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flag\">flag</a> |= <a class=\"id\" href=\"#FLAG_DATA_ACKED\">FLAG_DATA_ACKED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flag\">flag</a> |= <a class=\"id\" href=\"#FLAG_SYN_ACKED\">FLAG_SYN_ACKED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#retrans_stamp\">retrans_stamp</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#fully_acked\">fully_acked</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_unlink_write_queue\">tcp_unlink_write_queue</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_wmem_free_skb\">sk_wmem_free_skb</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#scoreboard_skb_hint\">scoreboard_skb_hint</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a> == <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#retransmit_skb_hint\">retransmit_skb_hint</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#retransmit_skb_hint\">retransmit_skb_hint</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a> == <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#lost_skb_hint\">lost_skb_hint</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#lost_skb_hint\">lost_skb_hint</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#between\">between</a>(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_up\">snd_up</a>, <a class=\"id\" href=\"#prior_snd_una\">prior_snd_una</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_una\">snd_una</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_up\">snd_up</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_una\">snd_una</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a> && (<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#sacked\">sacked</a> &amp; <a class=\"id\" href=\"#TCPCB_SACKED_ACKED\">TCPCB_SACKED_ACKED</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flag\">flag</a> |= <a class=\"id\" href=\"#FLAG_SACK_RENEGING\">FLAG_SACK_RENEGING</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flag\">flag</a> &amp; <a class=\"id\" href=\"#FLAG_ACKED\">FLAG_ACKED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#tcp_congestion_ops\">tcp_congestion_ops</a> *<a class=\"id\" href=\"#ca_ops\">ca_ops</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#icsk_ca_ops\">icsk_ca_ops</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_mtup\">icsk_mtup</a>.<a class=\"id\" href=\"#probe_size\">probe_size</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     !<a class=\"id\" href=\"#after\">after</a>(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#mtu_probe\">mtu_probe</a>.<a class=\"id\" href=\"#probe_seq_end\">probe_seq_end</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_una\">snd_una</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_mtup_probe_success\">tcp_mtup_probe_success</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_ack_update_rtt\">tcp_ack_update_rtt</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#flag\">flag</a>, <a class=\"id\" href=\"#seq_rtt\">seq_rtt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_rearm_rto\">tcp_rearm_rto</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_is_reno\">tcp_is_reno</a>(<a class=\"id\" href=\"#tp\">tp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_remove_reno_sacks\">tcp_remove_reno_sacks</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#pkts_acked\">pkts_acked</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#delta\">delta</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Non-retransmitted hole got filled? That's reordering */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#reord\">reord</a> &lt; <a class=\"id\" href=\"#prior_fackets\">prior_fackets</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_update_reordering\">tcp_update_reordering</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#fackets_out\">fackets_out</a> - <a class=\"id\" href=\"#reord\">reord</a>, 0);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#delta\">delta</a> = <a class=\"id\" href=\"#tcp_is_fack\">tcp_is_fack</a>(<a class=\"id\" href=\"#tp\">tp</a>) ? <a class=\"id\" href=\"#pkts_acked\">pkts_acked</a> :", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#prior_sacked\">prior_sacked</a> - <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#sacked_out\">sacked_out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#lost_cnt_hint\">lost_cnt_hint</a> -= <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#lost_cnt_hint\">lost_cnt_hint</a>, <a class=\"id\" href=\"#delta\">delta</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#fackets_out\">fackets_out</a> -= <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#pkts_acked\">pkts_acked</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#fackets_out\">fackets_out</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ca_ops\">ca_ops</a>-><a class=\"id\" href=\"#pkts_acked\">pkts_acked</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s32\">s32</a> <a class=\"id\" href=\"#rtt_us\">rtt_us</a> = -1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Is the ACK triggering packet unambiguous? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#flag\">flag</a> &amp; <a class=\"id\" href=\"#FLAG_RETRANS_DATA_ACKED\">FLAG_RETRANS_DATA_ACKED</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* High resolution needed and available? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ca_ops\">ca_ops</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TCP_CONG_RTT_STAMP\">TCP_CONG_RTT_STAMP</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#ktime_equal\">ktime_equal</a>(<a class=\"id\" href=\"#last_ackt\">last_ackt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#net_invalid_timestamp\">net_invalid_timestamp</a>()))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtt_us\">rtt_us</a> = <a class=\"id\" href=\"#ktime_us_delta\">ktime_us_delta</a>(<a class=\"id\" href=\"#ktime_get_real\">ktime_get_real</a>(),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_ackt\">last_ackt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#ca_seq_rtt\">ca_seq_rtt</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtt_us\">rtt_us</a> = <a class=\"id\" href=\"#jiffies_to_usecs\">jiffies_to_usecs</a>(<a class=\"id\" href=\"#ca_seq_rtt\">ca_seq_rtt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ca_ops\">ca_ops</a>-><a class=\"id\" href=\"#pkts_acked\">pkts_acked</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#pkts_acked\">pkts_acked</a>, <a class=\"id\" href=\"#rtt_us\">rtt_us</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"#if <a class=\"id\" href=\"#FASTRETRANS_DEBUG\">FASTRETRANS_DEBUG</a> &gt; 0", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>((int)<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#sacked_out\">sacked_out</a> &lt; 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>((int)<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#lost_out\">lost_out</a> &lt; 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>((int)<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#retrans_out\">retrans_out</a> &lt; 0);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#packets_out\">packets_out</a> && <a class=\"id\" href=\"#tcp_is_sack\">tcp_is_sack</a>(<a class=\"id\" href=\"#tp\">tp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icsk\">icsk</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#lost_out\">lost_out</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"Leak l=%u %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#lost_out\">lost_out</a>, <a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ca_state\">icsk_ca_state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#lost_out\">lost_out</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#sacked_out\">sacked_out</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"Leak s=%u %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#sacked_out\">sacked_out</a>, <a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ca_state\">icsk_ca_state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#sacked_out\">sacked_out</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#retrans_out\">retrans_out</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"Leak r=%u %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#retrans_out\">retrans_out</a>, <a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ca_state\">icsk_ca_state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#retrans_out\">retrans_out</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#flag\">flag</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#tcp_ack_probe\">tcp_ack_probe</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a> *<a class=\"id\" href=\"#icsk\">icsk</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Was it a usable window open? */</span>", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#after\">after</a>(<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#tcp_send_head\">tcp_send_head</a>(<a class=\"id\" href=\"#sk\">sk</a>))-><a class=\"id\" href=\"#end_seq\">end_seq</a>, <a class=\"id\" href=\"#tcp_wnd_end\">tcp_wnd_end</a>(<a class=\"id\" href=\"#tp\">tp</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_backoff\">icsk_backoff</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_csk_clear_xmit_timer\">inet_csk_clear_xmit_timer</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#ICSK_TIME_PROBE0\">ICSK_TIME_PROBE0</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Socket must be waked up by subsequent tcp_data_snd_check().</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * This function is not for random using!</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_csk_reset_xmit_timer\">inet_csk_reset_xmit_timer</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#ICSK_TIME_PROBE0\">ICSK_TIME_PROBE0</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_rto\">icsk_rto</a> << <a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_backoff\">icsk_backoff</a>, <a class=\"id\" href=\"#TCP_RTO_MAX\">TCP_RTO_MAX</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#TCP_RTO_MAX\">TCP_RTO_MAX</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#tcp_ack_is_dubious\">tcp_ack_is_dubious</a>(const struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, const int <a class=\"id\" href=\"#flag\">flag</a>)", 
"{", 
"<span class=\"ts\"/>return (!(<a class=\"id\" href=\"#flag\">flag</a> &amp; <a class=\"id\" href=\"#FLAG_NOT_DUP\">FLAG_NOT_DUP</a>) || (<a class=\"id\" href=\"#flag\">flag</a> &amp; <a class=\"id\" href=\"#FLAG_CA_ALERT\">FLAG_CA_ALERT</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#icsk_ca_state\">icsk_ca_state</a> != <a class=\"id\" href=\"#TCP_CA_Open\">TCP_CA_Open</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#tcp_may_raise_cwnd\">tcp_may_raise_cwnd</a>(const struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, const int <a class=\"id\" href=\"#flag\">flag</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>return (!(<a class=\"id\" href=\"#flag\">flag</a> &amp; <a class=\"id\" href=\"#FLAG_ECE\">FLAG_ECE</a>) || <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd\">snd_cwnd</a> &lt; <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_ssthresh\">snd_ssthresh</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>!((1 << <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#icsk_ca_state\">icsk_ca_state</a>) &amp; (<a class=\"id\" href=\"#TCPF_CA_Recovery\">TCPF_CA_Recovery</a> | <a class=\"id\" href=\"#TCPF_CA_CWR\">TCPF_CA_CWR</a>));", 
"}", 
"", 
"<span class=\"comment\">/* Check that window update is acceptable.</span>", 
"<span class=\"comment\"> * The function assumes that snd_una&lt;=ack&lt;=snd_next.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#tcp_may_update_window\">tcp_may_update_window</a>(const struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ack\">ack</a>, const <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ack_seq\">ack_seq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#nwin\">nwin</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#after\">after</a>(<a class=\"id\" href=\"#ack\">ack</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_una\">snd_una</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#after\">after</a>(<a class=\"id\" href=\"#ack_seq\">ack_seq</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_wl1\">snd_wl1</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#ack_seq\">ack_seq</a> == <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_wl1\">snd_wl1</a> && <a class=\"id\" href=\"#nwin\">nwin</a> &gt; <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_wnd\">snd_wnd</a>));", 
"}", 
"", 
"<span class=\"comment\">/* Update our send window.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Window update algorithm, described in RFC793/RFC1122 (used in linux-2.2</span>", 
"<span class=\"comment\"> * and in FreeBSD. NetBSD's one is even worse.) is wrong.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#tcp_ack_update_window\">tcp_ack_update_window</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ack\">ack</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ack_seq\">ack_seq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#flag\">flag</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#nwin\">nwin</a> = <a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#window\">window</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(!<a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#syn\">syn</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nwin\">nwin</a> <<= <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#snd_wscale\">snd_wscale</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_may_update_window\">tcp_may_update_window</a>(<a class=\"id\" href=\"#tp\">tp</a>, <a class=\"id\" href=\"#ack\">ack</a>, <a class=\"id\" href=\"#ack_seq\">ack_seq</a>, <a class=\"id\" href=\"#nwin\">nwin</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flag\">flag</a> |= <a class=\"id\" href=\"#FLAG_WIN_UPDATE\">FLAG_WIN_UPDATE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_update_wl\">tcp_update_wl</a>(<a class=\"id\" href=\"#tp\">tp</a>, <a class=\"id\" href=\"#ack_seq\">ack_seq</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_wnd\">snd_wnd</a> != <a class=\"id\" href=\"#nwin\">nwin</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_wnd\">snd_wnd</a> = <a class=\"id\" href=\"#nwin\">nwin</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Note, it is the only place, where</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * fast path is recovered for sending TCP.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#pred_flags\">pred_flags</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_fast_path_check\">tcp_fast_path_check</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nwin\">nwin</a> &gt; <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#max_window\">max_window</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#max_window\">max_window</a> = <a class=\"id\" href=\"#nwin\">nwin</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_sync_mss\">tcp_sync_mss</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#icsk_pmtu_cookie\">icsk_pmtu_cookie</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_una\">snd_una</a> = <a class=\"id\" href=\"#ack\">ack</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#flag\">flag</a>;", 
"}", 
"", 
"<span class=\"comment\">/* A very conservative spurious RTO response algorithm: reduce cwnd and</span>", 
"<span class=\"comment\"> * continue in congestion avoidance.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#tcp_conservative_spur_to_response\">tcp_conservative_spur_to_response</a>(struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd\">snd_cwnd</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd\">snd_cwnd</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_ssthresh\">snd_ssthresh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd_cnt\">snd_cwnd_cnt</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#bytes_acked\">bytes_acked</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_ECN_queue_cwr\">TCP_ECN_queue_cwr</a>(<a class=\"id\" href=\"#tp\">tp</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_moderate_cwnd\">tcp_moderate_cwnd</a>(<a class=\"id\" href=\"#tp\">tp</a>);", 
"}", 
"", 
"<span class=\"comment\">/* A conservative spurious RTO response algorithm: reduce cwnd using</span>", 
"<span class=\"comment\"> * rate halving and continue in congestion avoidance.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#tcp_ratehalving_spur_to_response\">tcp_ratehalving_spur_to_response</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_enter_cwr\">tcp_enter_cwr</a>(<a class=\"id\" href=\"#sk\">sk</a>, 0);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#tcp_undo_spur_to_response\">tcp_undo_spur_to_response</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#flag\">flag</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flag\">flag</a> &amp; <a class=\"id\" href=\"#FLAG_ECE\">FLAG_ECE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_ratehalving_spur_to_response\">tcp_ratehalving_spur_to_response</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_undo_cwr\">tcp_undo_cwr</a>(<a class=\"id\" href=\"#sk\">sk</a>, 1);", 
"}", 
"", 
"<span class=\"comment\">/* F-RTO spurious RTO detection algorithm (RFC4138)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * F-RTO affects during two new ACKs following RTO (well, almost, see inline</span>", 
"<span class=\"comment\"> * comments). State (ACK number) is kept in frto_counter. When ACK advances</span>", 
"<span class=\"comment\"> * window (but not to or beyond highest sequence sent before RTO):</span>", 
"<span class=\"comment\"> *   On First ACK,  send two new segments out.</span>", 
"<span class=\"comment\"> *   On Second ACK, RTO was likely spurious. Do spurious response (response</span>", 
"<span class=\"comment\"> *                  algorithm is not part of the F-RTO detection algorithm</span>", 
"<span class=\"comment\"> *                  given in RFC4138 but can be selected separately).</span>", 
"<span class=\"comment\"> * Otherwise (basically on duplicate ACK), RTO was (likely) caused by a loss</span>", 
"<span class=\"comment\"> * and TCP falls back to conventional RTO recovery. F-RTO allows overriding</span>", 
"<span class=\"comment\"> * of Nagle, this is done using frto_counter states 2 and 3, when a new data</span>", 
"<span class=\"comment\"> * segment of any size sent during F-RTO, state 2 is upgraded to 3.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Rationale: if the RTO was spurious, new ACKs should arrive from the</span>", 
"<span class=\"comment\"> * original window even after we transmit two new data segments.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * SACK version:</span>", 
"<span class=\"comment\"> *   on first step, wait until first cumulative ACK arrives, then move to</span>", 
"<span class=\"comment\"> *   the second step. In second step, the next ACK decides.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * F-RTO is implemented (mainly) in four functions:</span>", 
"<span class=\"comment\"> *   - tcp_use_frto() is used to determine if TCP is can use F-RTO</span>", 
"<span class=\"comment\"> *   - tcp_enter_frto() prepares TCP state on RTO if F-RTO is used, it is</span>", 
"<span class=\"comment\"> *     called when tcp_use_frto() showed green light</span>", 
"<span class=\"comment\"> *   - tcp_process_frto() handles incoming ACKs during F-RTO algorithm</span>", 
"<span class=\"comment\"> *   - tcp_enter_frto_loss() is called if there is not enough evidence</span>", 
"<span class=\"comment\"> *     to prove that the RTO is indeed spurious. It transfers the control</span>", 
"<span class=\"comment\"> *     from F-RTO to the conventional RTO recovery</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#tcp_process_frto\">tcp_process_frto</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#flag\">flag</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_verify_left_out\">tcp_verify_left_out</a>(<a class=\"id\" href=\"#tp\">tp</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Duplicate the behavior from Loss state (fastretrans_alert) */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flag\">flag</a> &amp; <a class=\"id\" href=\"#FLAG_DATA_ACKED\">FLAG_DATA_ACKED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#icsk_retransmits\">icsk_retransmits</a> = 0;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#flag\">flag</a> &amp; <a class=\"id\" href=\"#FLAG_NONHEAD_RETRANS_ACKED\">FLAG_NONHEAD_RETRANS_ACKED</a>) ||", 
"<span class=\"ts\"/>    ((<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#frto_counter\">frto_counter</a> >= 2) && (<a class=\"id\" href=\"#flag\">flag</a> &amp; <a class=\"id\" href=\"#FLAG_RETRANS_DATA_ACKED\">FLAG_RETRANS_DATA_ACKED</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#undo_marker\">undo_marker</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#before\">before</a>(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_una\">snd_una</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#frto_highmark\">frto_highmark</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_enter_frto_loss\">tcp_enter_frto_loss</a>(<a class=\"id\" href=\"#sk\">sk</a>, (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#frto_counter\">frto_counter</a> == 1 ? 2 : 3), <a class=\"id\" href=\"#flag\">flag</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tcp_is_sackfrto\">tcp_is_sackfrto</a>(<a class=\"id\" href=\"#tp\">tp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* RFC4138 shortcoming in step 2; should also have case c):</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * ACK isn't duplicate nor advances window, e.g., opposite dir</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * data, winupdate</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#flag\">flag</a> &amp; <a class=\"id\" href=\"#FLAG_ANY_PROGRESS\">FLAG_ANY_PROGRESS</a>) && (<a class=\"id\" href=\"#flag\">flag</a> &amp; <a class=\"id\" href=\"#FLAG_NOT_DUP\">FLAG_NOT_DUP</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#flag\">flag</a> &amp; <a class=\"id\" href=\"#FLAG_DATA_ACKED\">FLAG_DATA_ACKED</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_enter_frto_loss\">tcp_enter_frto_loss</a>(<a class=\"id\" href=\"#sk\">sk</a>, (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#frto_counter\">frto_counter</a> == 1 ? 0 : 3),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#flag\">flag</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#flag\">flag</a> &amp; <a class=\"id\" href=\"#FLAG_DATA_ACKED\">FLAG_DATA_ACKED</a>) && (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#frto_counter\">frto_counter</a> == 1)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Prevent sending of new data. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd\">snd_cwnd</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd\">snd_cwnd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#tcp_packets_in_flight\">tcp_packets_in_flight</a>(<a class=\"id\" href=\"#tp\">tp</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#frto_counter\">frto_counter</a> >= 2) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (!(<a class=\"id\" href=\"#flag\">flag</a> &amp; <a class=\"id\" href=\"#FLAG_FORWARD_PROGRESS\">FLAG_FORWARD_PROGRESS</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>     ((<a class=\"id\" href=\"#flag\">flag</a> &amp; <a class=\"id\" href=\"#FLAG_DATA_SACKED\">FLAG_DATA_SACKED</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>      !(<a class=\"id\" href=\"#flag\">flag</a> &amp; <a class=\"id\" href=\"#FLAG_ONLY_ORIG_SACKED\">FLAG_ONLY_ORIG_SACKED</a>)))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* RFC4138 shortcoming (see comment above) */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#flag\">flag</a> &amp; <a class=\"id\" href=\"#FLAG_FORWARD_PROGRESS\">FLAG_FORWARD_PROGRESS</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#flag\">flag</a> &amp; <a class=\"id\" href=\"#FLAG_NOT_DUP\">FLAG_NOT_DUP</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_enter_frto_loss\">tcp_enter_frto_loss</a>(<a class=\"id\" href=\"#sk\">sk</a>, 3, <a class=\"id\" href=\"#flag\">flag</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#frto_counter\">frto_counter</a> == 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* tcp_may_send_now needs to see updated state */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd\">snd_cwnd</a> = <a class=\"id\" href=\"#tcp_packets_in_flight\">tcp_packets_in_flight</a>(<a class=\"id\" href=\"#tp\">tp</a>) + 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#frto_counter\">frto_counter</a> = 2;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tcp_may_send_now\">tcp_may_send_now</a>(<a class=\"id\" href=\"#sk\">sk</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_enter_frto_loss\">tcp_enter_frto_loss</a>(<a class=\"id\" href=\"#sk\">sk</a>, 2, <a class=\"id\" href=\"#flag\">flag</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#sysctl_tcp_frto_response\">sysctl_tcp_frto_response</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case 2:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_undo_spur_to_response\">tcp_undo_spur_to_response</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#flag\">flag</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 1:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_conservative_spur_to_response\">tcp_conservative_spur_to_response</a>(<a class=\"id\" href=\"#tp\">tp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_ratehalving_spur_to_response\">tcp_ratehalving_spur_to_response</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#frto_counter\">frto_counter</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#undo_marker\">undo_marker</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NET_INC_STATS_BH\">NET_INC_STATS_BH</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#LINUX_MIB_TCPSPURIOUSRTOS\">LINUX_MIB_TCPSPURIOUSRTOS</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* This routine deals with incoming acks, but not outgoing ones. */</span>", 
"static int <a class=\"id\" href=\"#tcp_ack\">tcp_ack</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#flag\">flag</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a> *<a class=\"id\" href=\"#icsk\">icsk</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#prior_snd_una\">prior_snd_una</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_una\">snd_una</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ack_seq\">ack_seq</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ack\">ack</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#ack_seq\">ack_seq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#prior_in_flight\">prior_in_flight</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#prior_fackets\">prior_fackets</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#prior_packets\">prior_packets</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#frto_cwnd\">frto_cwnd</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If the ack is older than previous acks</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * then we can probably ignore it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#before\">before</a>(<a class=\"id\" href=\"#ack\">ack</a>, <a class=\"id\" href=\"#prior_snd_una\">prior_snd_una</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#old_ack\">old_ack</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If the ack includes data we haven't sent yet, discard</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * this segment (RFC793 Section 3.9).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#after\">after</a>(<a class=\"id\" href=\"#ack\">ack</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_nxt\">snd_nxt</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#invalid_ack\">invalid_ack</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#after\">after</a>(<a class=\"id\" href=\"#ack\">ack</a>, <a class=\"id\" href=\"#prior_snd_una\">prior_snd_una</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flag\">flag</a> |= <a class=\"id\" href=\"#FLAG_SND_UNA_ADVANCED\">FLAG_SND_UNA_ADVANCED</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sysctl_tcp_abc\">sysctl_tcp_abc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ca_state\">icsk_ca_state</a> &lt; <a class=\"id\" href=\"#TCP_CA_CWR\">TCP_CA_CWR</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#bytes_acked\">bytes_acked</a> += <a class=\"id\" href=\"#ack\">ack</a> - <a class=\"id\" href=\"#prior_snd_una\">prior_snd_una</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ca_state\">icsk_ca_state</a> == <a class=\"id\" href=\"#TCP_CA_Loss\">TCP_CA_Loss</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* we assume just one segment left network */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#bytes_acked\">bytes_acked</a> += <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#ack\">ack</a> - <a class=\"id\" href=\"#prior_snd_una\">prior_snd_una</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#mss_cache\">mss_cache</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#prior_fackets\">prior_fackets</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#fackets_out\">fackets_out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#prior_in_flight\">prior_in_flight</a> = <a class=\"id\" href=\"#tcp_packets_in_flight\">tcp_packets_in_flight</a>(<a class=\"id\" href=\"#tp\">tp</a>);", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#flag\">flag</a> &amp; <a class=\"id\" href=\"#FLAG_SLOWPATH\">FLAG_SLOWPATH</a>) && <a class=\"id\" href=\"#after\">after</a>(<a class=\"id\" href=\"#ack\">ack</a>, <a class=\"id\" href=\"#prior_snd_una\">prior_snd_una</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Window is constant, pure forward advance.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * No more checks are required.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Note, we use the fact that SND.UNA&gt;=SND.WL2.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_update_wl\">tcp_update_wl</a>(<a class=\"id\" href=\"#tp\">tp</a>, <a class=\"id\" href=\"#ack_seq\">ack_seq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_una\">snd_una</a> = <a class=\"id\" href=\"#ack\">ack</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flag\">flag</a> |= <a class=\"id\" href=\"#FLAG_WIN_UPDATE\">FLAG_WIN_UPDATE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_ca_event\">tcp_ca_event</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#CA_EVENT_FAST_ACK\">CA_EVENT_FAST_ACK</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NET_INC_STATS_BH\">NET_INC_STATS_BH</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#LINUX_MIB_TCPHPACKS\">LINUX_MIB_TCPHPACKS</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ack_seq\">ack_seq</a> != <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flag\">flag</a> |= <a class=\"id\" href=\"#FLAG_DATA\">FLAG_DATA</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NET_INC_STATS_BH\">NET_INC_STATS_BH</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#LINUX_MIB_TCPPUREACKS\">LINUX_MIB_TCPPUREACKS</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flag\">flag</a> |= <a class=\"id\" href=\"#tcp_ack_update_window\">tcp_ack_update_window</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#ack\">ack</a>, <a class=\"id\" href=\"#ack_seq\">ack_seq</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#sacked\">sacked</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flag\">flag</a> |= <a class=\"id\" href=\"#tcp_sacktag_write_queue\">tcp_sacktag_write_queue</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#prior_snd_una\">prior_snd_una</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#TCP_ECN_rcv_ecn_echo\">TCP_ECN_rcv_ecn_echo</a>(<a class=\"id\" href=\"#tp\">tp</a>, <a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flag\">flag</a> |= <a class=\"id\" href=\"#FLAG_ECE\">FLAG_ECE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_ca_event\">tcp_ca_event</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#CA_EVENT_SLOW_ACK\">CA_EVENT_SLOW_ACK</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We passed data and got it acked, remove any soft error</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * log. Something worked...</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_err_soft\">sk_err_soft</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_probes_out\">icsk_probes_out</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_tstamp\">rcv_tstamp</a> = <a class=\"id\" href=\"#tcp_time_stamp\">tcp_time_stamp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#prior_packets\">prior_packets</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#packets_out\">packets_out</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#prior_packets\">prior_packets</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#no_queue\">no_queue</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* See if we can take anything off of the retransmit queue. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flag\">flag</a> |= <a class=\"id\" href=\"#tcp_clean_rtx_queue\">tcp_clean_rtx_queue</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#prior_fackets\">prior_fackets</a>, <a class=\"id\" href=\"#prior_snd_una\">prior_snd_una</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#frto_counter\">frto_counter</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#frto_cwnd\">frto_cwnd</a> = <a class=\"id\" href=\"#tcp_process_frto\">tcp_process_frto</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#flag\">flag</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Guarantee sacktag reordering detection against wrap-arounds */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#before\">before</a>(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#frto_highmark\">frto_highmark</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_una\">snd_una</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#frto_highmark\">frto_highmark</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_ack_is_dubious\">tcp_ack_is_dubious</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#flag\">flag</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Advance CWND, if state allows this. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#flag\">flag</a> &amp; <a class=\"id\" href=\"#FLAG_DATA_ACKED\">FLAG_DATA_ACKED</a>) && !<a class=\"id\" href=\"#frto_cwnd\">frto_cwnd</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#tcp_may_raise_cwnd\">tcp_may_raise_cwnd</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#flag\">flag</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_cong_avoid\">tcp_cong_avoid</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#ack\">ack</a>, <a class=\"id\" href=\"#prior_in_flight\">prior_in_flight</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_fastretrans_alert\">tcp_fastretrans_alert</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#prior_packets\">prior_packets</a> - <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#packets_out\">packets_out</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#flag\">flag</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#flag\">flag</a> &amp; <a class=\"id\" href=\"#FLAG_DATA_ACKED\">FLAG_DATA_ACKED</a>) && !<a class=\"id\" href=\"#frto_cwnd\">frto_cwnd</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_cong_avoid\">tcp_cong_avoid</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#ack\">ack</a>, <a class=\"id\" href=\"#prior_in_flight\">prior_in_flight</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#flag\">flag</a> &amp; <a class=\"id\" href=\"#FLAG_FORWARD_PROGRESS\">FLAG_FORWARD_PROGRESS</a>) || !(<a class=\"id\" href=\"#flag\">flag</a> &amp; <a class=\"id\" href=\"#FLAG_NOT_DUP\">FLAG_NOT_DUP</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_confirm\">dst_confirm</a>(<a class=\"id\" href=\"#__sk_dst_get\">__sk_dst_get</a>(<a class=\"id\" href=\"#sk\">sk</a>));", 
"", 
"<span class=\"ts\"/>return 1;", 
"", 
"<a class=\"id\" href=\"#no_queue\">no_queue</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/* If this ack opens up a zero window, clear backoff.  It was</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * being used to time the probes, and is probably far higher than</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * it needs to be for normal retransmission.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_send_head\">tcp_send_head</a>(<a class=\"id\" href=\"#sk\">sk</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_ack_probe\">tcp_ack_probe</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>return 1;", 
"", 
"<a class=\"id\" href=\"#invalid_ack\">invalid_ack</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SOCK_DEBUG\">SOCK_DEBUG</a>(<a class=\"id\" href=\"#sk\">sk</a>, \"Ack %u after %u:%u\\n\", <a class=\"id\" href=\"#ack\">ack</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_una\">snd_una</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_nxt\">snd_nxt</a>);", 
"<span class=\"ts\"/>return -1;", 
"", 
"<a class=\"id\" href=\"#old_ack\">old_ack</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#sacked\">sacked</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_sacktag_write_queue\">tcp_sacktag_write_queue</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#prior_snd_una\">prior_snd_una</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ca_state\">icsk_ca_state</a> == <a class=\"id\" href=\"#TCP_CA_Open\">TCP_CA_Open</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_try_keep_open\">tcp_try_keep_open</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SOCK_DEBUG\">SOCK_DEBUG</a>(<a class=\"id\" href=\"#sk\">sk</a>, \"Ack %u before %u:%u\\n\", <a class=\"id\" href=\"#ack\">ack</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_una\">snd_una</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_nxt\">snd_nxt</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* Look for tcp options. Normally only called on SYN and SYNACK packets.</span>", 
"<span class=\"comment\"> * But, this can also be called on packets in the established flow when</span>", 
"<span class=\"comment\"> * the fast version below fails.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#tcp_parse_options\">tcp_parse_options</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#tcp_options_received\">tcp_options_received</a> *<a class=\"id\" href=\"#opt_rx\">opt_rx</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#u8\">u8</a> **<a class=\"id\" href=\"#hvpp\">hvpp</a>, int <a class=\"id\" href=\"#estab\">estab</a>)", 
"{", 
"<span class=\"ts\"/>unsigned char *<a class=\"id\" href=\"#ptr\">ptr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a> *<a class=\"id\" href=\"#th\">th</a> = <a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#length\">length</a> = (<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#doff\">doff</a> * 4) - sizeof(struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ptr\">ptr</a> = (unsigned char *)(<a class=\"id\" href=\"#th\">th</a> + 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#opt_rx\">opt_rx</a>-><a class=\"id\" href=\"#saw_tstamp\">saw_tstamp</a> = 0;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#length\">length</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#opcode\">opcode</a> = *<a class=\"id\" href=\"#ptr\">ptr</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#opsize\">opsize</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#opcode\">opcode</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#TCPOPT_EOL\">TCPOPT_EOL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#TCPOPT_NOP\">TCPOPT_NOP</a>:<span class=\"ts\"/><span class=\"comment\">/* Ref: RFC 793 section 3.1 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opsize\">opsize</a> = *<a class=\"id\" href=\"#ptr\">ptr</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#opsize\">opsize</a> &lt; 2) <span class=\"comment\">/* \"silly options\" */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#opsize\">opsize</a> &gt; <a class=\"id\" href=\"#length\">length</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;<span class=\"ts\"/><span class=\"comment\">/* don't parse partial options */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#opcode\">opcode</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#TCPOPT_MSS\">TCPOPT_MSS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#opsize\">opsize</a> == <a class=\"id\" href=\"#TCPOLEN_MSS\">TCPOLEN_MSS</a> && <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#syn\">syn</a> && !<a class=\"id\" href=\"#estab\">estab</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#in_mss\">in_mss</a> = <a class=\"id\" href=\"#get_unaligned_be16\">get_unaligned_be16</a>(<a class=\"id\" href=\"#ptr\">ptr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#in_mss\">in_mss</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#opt_rx\">opt_rx</a>-><a class=\"id\" href=\"#user_mss\">user_mss</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#opt_rx\">opt_rx</a>-><a class=\"id\" href=\"#user_mss\">user_mss</a> &lt; <a class=\"id\" href=\"#in_mss\">in_mss</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in_mss\">in_mss</a> = <a class=\"id\" href=\"#opt_rx\">opt_rx</a>-><a class=\"id\" href=\"#user_mss\">user_mss</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opt_rx\">opt_rx</a>-><a class=\"id\" href=\"#mss_clamp\">mss_clamp</a> = <a class=\"id\" href=\"#in_mss\">in_mss</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#TCPOPT_WINDOW\">TCPOPT_WINDOW</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#opsize\">opsize</a> == <a class=\"id\" href=\"#TCPOLEN_WINDOW\">TCPOLEN_WINDOW</a> && <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#syn\">syn</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#estab\">estab</a> && <a class=\"id\" href=\"#sysctl_tcp_window_scaling\">sysctl_tcp_window_scaling</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#snd_wscale\">snd_wscale</a> = *(<a class=\"id\" href=\"#__u8\">__u8</a> *)<a class=\"id\" href=\"#ptr\">ptr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opt_rx\">opt_rx</a>-><a class=\"id\" href=\"#wscale_ok\">wscale_ok</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#snd_wscale\">snd_wscale</a> &gt; 14) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#net_ratelimit\">net_ratelimit</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"tcp_parse_options: Illegal window \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"scaling value %d >14 received.\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#snd_wscale\">snd_wscale</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#snd_wscale\">snd_wscale</a> = 14;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opt_rx\">opt_rx</a>-><a class=\"id\" href=\"#snd_wscale\">snd_wscale</a> = <a class=\"id\" href=\"#snd_wscale\">snd_wscale</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#TCPOPT_TIMESTAMP\">TCPOPT_TIMESTAMP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#opsize\">opsize</a> == <a class=\"id\" href=\"#TCPOLEN_TIMESTAMP\">TCPOLEN_TIMESTAMP</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    ((<a class=\"id\" href=\"#estab\">estab</a> && <a class=\"id\" href=\"#opt_rx\">opt_rx</a>-><a class=\"id\" href=\"#tstamp_ok\">tstamp_ok</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     (!<a class=\"id\" href=\"#estab\">estab</a> && <a class=\"id\" href=\"#sysctl_tcp_timestamps\">sysctl_tcp_timestamps</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opt_rx\">opt_rx</a>-><a class=\"id\" href=\"#saw_tstamp\">saw_tstamp</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opt_rx\">opt_rx</a>-><a class=\"id\" href=\"#rcv_tsval\">rcv_tsval</a> = <a class=\"id\" href=\"#get_unaligned_be32\">get_unaligned_be32</a>(<a class=\"id\" href=\"#ptr\">ptr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opt_rx\">opt_rx</a>-><a class=\"id\" href=\"#rcv_tsecr\">rcv_tsecr</a> = <a class=\"id\" href=\"#get_unaligned_be32\">get_unaligned_be32</a>(<a class=\"id\" href=\"#ptr\">ptr</a> + 4);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#TCPOPT_SACK_PERM\">TCPOPT_SACK_PERM</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#opsize\">opsize</a> == <a class=\"id\" href=\"#TCPOLEN_SACK_PERM\">TCPOLEN_SACK_PERM</a> && <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#syn\">syn</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#estab\">estab</a> && <a class=\"id\" href=\"#sysctl_tcp_sack\">sysctl_tcp_sack</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opt_rx\">opt_rx</a>-><a class=\"id\" href=\"#sack_ok\">sack_ok</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_sack_reset\">tcp_sack_reset</a>(<a class=\"id\" href=\"#opt_rx\">opt_rx</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#TCPOPT_SACK\">TCPOPT_SACK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#opsize\">opsize</a> >= (<a class=\"id\" href=\"#TCPOLEN_SACK_BASE\">TCPOLEN_SACK_BASE</a> + <a class=\"id\" href=\"#TCPOLEN_SACK_PERBLOCK\">TCPOLEN_SACK_PERBLOCK</a>)) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   !((<a class=\"id\" href=\"#opsize\">opsize</a> - <a class=\"id\" href=\"#TCPOLEN_SACK_BASE\">TCPOLEN_SACK_BASE</a>) % <a class=\"id\" href=\"#TCPOLEN_SACK_PERBLOCK\">TCPOLEN_SACK_PERBLOCK</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#opt_rx\">opt_rx</a>-><a class=\"id\" href=\"#sack_ok\">sack_ok</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#sacked\">sacked</a> = (<a class=\"id\" href=\"#ptr\">ptr</a> - 2) - (unsigned char *)<a class=\"id\" href=\"#th\">th</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TCP_MD5SIG\">CONFIG_TCP_MD5SIG</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#TCPOPT_MD5SIG\">TCPOPT_MD5SIG</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * The MD5 Hash has already been</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * checked (see tcp_v{4,6}_do_rcv()).</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#TCPOPT_COOKIE\">TCPOPT_COOKIE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* This option is variable length.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#opsize\">opsize</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#TCPOLEN_COOKIE_BASE\">TCPOLEN_COOKIE_BASE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* not yet implemented */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
];
xr_frag_insert('l/4a/3edff4eaf8868d115bc048b5dd7eb61ac4e18e.xr', __xr_tmp);
