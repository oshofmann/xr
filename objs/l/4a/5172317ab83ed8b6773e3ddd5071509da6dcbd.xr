var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_iloc\">ext3_iloc</a> *<a class=\"id\" href=\"#iloc\">iloc</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_inode\">ext3_inode</a> *<a class=\"id\" href=\"#raw_inode\">raw_inode</a> = <a class=\"id\" href=\"#ext3_raw_inode\">ext3_raw_inode</a>(<a class=\"id\" href=\"#iloc\">iloc</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_inode_info\">ext3_inode_info</a> *<a class=\"id\" href=\"#ei\">ei</a> = <a class=\"id\" href=\"#EXT3_I\">EXT3_I</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#iloc\">iloc</a>-><a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0, <a class=\"id\" href=\"#rc\">rc</a>, <a class=\"id\" href=\"#block\">block</a>;", 
"", 
"<a class=\"id\" href=\"#again\">again</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/* we can't allow multiple procs in here at once, its a bit racey */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_buffer\">lock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* For fields not not tracking in the in-memory inode,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * initialise them to zero for new inodes. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext3_test_inode_state\">ext3_test_inode_state</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT3_STATE_NEW\">EXT3_STATE_NEW</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#raw_inode\">raw_inode</a>, 0, <a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>)-><a class=\"id\" href=\"#s_inode_size\">s_inode_size</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_get_inode_flags\">ext3_get_inode_flags</a>(<a class=\"id\" href=\"#ei\">ei</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>);", 
"<span class=\"ts\"/>if(!(<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#NO_UID32\">NO_UID32</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#i_uid_low\">i_uid_low</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#low_16_bits\">low_16_bits</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_uid\">i_uid</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#i_gid_low\">i_gid_low</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#low_16_bits\">low_16_bits</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_gid\">i_gid</a>));", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Fix up interoperability with old kernels. Otherwise, old inodes get</span>", 
"<span class=\"comment\"> * re-used with the upper 16 bits of the uid/gid intact</span>", 
"<span class=\"comment\"> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if(!<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_dtime\">i_dtime</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#i_uid_high\">i_uid_high</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#high_16_bits\">high_16_bits</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_uid\">i_uid</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#i_gid_high\">i_gid_high</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#high_16_bits\">high_16_bits</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_gid\">i_gid</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#i_uid_high\">i_uid_high</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#i_gid_high\">i_gid_high</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#i_uid_low\">i_uid_low</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#fs_high2lowuid\">fs_high2lowuid</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_uid\">i_uid</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#i_gid_low\">i_gid_low</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#fs_high2lowgid\">fs_high2lowgid</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_gid\">i_gid</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#i_uid_high\">i_uid_high</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#i_gid_high\">i_gid_high</a> = 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#i_links_count\">i_links_count</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_nlink\">i_nlink</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_disksize\">i_disksize</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#i_atime\">i_atime</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_atime\">i_atime</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#i_ctime\">i_ctime</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ctime\">i_ctime</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#i_mtime\">i_mtime</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mtime\">i_mtime</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#i_blocks\">i_blocks</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_blocks\">i_blocks</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#i_dtime\">i_dtime</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_dtime\">i_dtime</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#i_flags\">i_flags</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_flags\">i_flags</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#EXT3_FRAGMENTS\">EXT3_FRAGMENTS</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#i_faddr\">i_faddr</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_faddr\">i_faddr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#i_frag\">i_frag</a> = <a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_frag_no\">i_frag_no</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#i_fsize\">i_fsize</a> = <a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_frag_size\">i_frag_size</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#S_ISREG\">S_ISREG</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#i_dir_acl\">i_dir_acl</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_dir_acl\">i_dir_acl</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#i_size_high\">i_size_high</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_disksize\">i_disksize</a> >> 32);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_disksize\">i_disksize</a> &gt; 0x7fffffffULL) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#EXT3_HAS_RO_COMPAT_FEATURE\">EXT3_HAS_RO_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT3_FEATURE_RO_COMPAT_LARGE_FILE\">EXT3_FEATURE_RO_COMPAT_LARGE_FILE</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_rev_level\">s_rev_level</a> ==", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#EXT3_GOOD_OLD_REV\">EXT3_GOOD_OLD_REV</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <span class=\"comment\">/* If this is the first large file</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>* created, add a flag to the superblock.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_buffer\">unlock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext3_journal_get_write_access\">ext3_journal_get_write_access</a>(<a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_sbh\">s_sbh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_brelse\">out_brelse</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_update_dynamic_rev\">ext3_update_dynamic_rev</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT3_SET_RO_COMPAT_FEATURE\">EXT3_SET_RO_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT3_FEATURE_RO_COMPAT_LARGE_FILE\">EXT3_FEATURE_RO_COMPAT_LARGE_FILE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#h_sync\">h_sync</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext3_journal_dirty_metadata\">ext3_journal_dirty_metadata</a>(<a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_sbh\">s_sbh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* get our lock and start over */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#again\">again</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#i_generation\">i_generation</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_generation\">i_generation</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#S_ISCHR\">S_ISCHR</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>) || <a class=\"id\" href=\"#S_ISBLK\">S_ISBLK</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#old_valid_dev\">old_valid_dev</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_rdev\">i_rdev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#i_block\">i_block</a>[0] =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#old_encode_dev\">old_encode_dev</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_rdev\">i_rdev</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#i_block\">i_block</a>[1] = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#i_block\">i_block</a>[0] = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#i_block\">i_block</a>[1] =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#new_encode_dev\">new_encode_dev</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_rdev\">i_rdev</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#i_block\">i_block</a>[2] = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else for (<a class=\"id\" href=\"#block\">block</a> = 0; <a class=\"id\" href=\"#block\">block</a> &lt; <a class=\"id\" href=\"#EXT3_N_BLOCKS\">EXT3_N_BLOCKS</a>; <a class=\"id\" href=\"#block\">block</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#i_block\">i_block</a>[<a class=\"id\" href=\"#block\">block</a>] = <a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_data\">i_data</a>[<a class=\"id\" href=\"#block\">block</a>];", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_extra_isize\">i_extra_isize</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#i_extra_isize\">i_extra_isize</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_extra_isize\">i_extra_isize</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUFFER_TRACE\">BUFFER_TRACE</a>(<a class=\"id\" href=\"#bh\">bh</a>, \"call ext3_journal_dirty_metadata\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_buffer\">unlock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ext3_journal_dirty_metadata\">ext3_journal_dirty_metadata</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_clear_inode_state\">ext3_clear_inode_state</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT3_STATE_NEW\">EXT3_STATE_NEW</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_sync_tid\">i_sync_tid</a>, <a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#h_transaction\">h_transaction</a>-><a class=\"id\" href=\"#t_tid\">t_tid</a>);", 
"<a class=\"id\" href=\"#out_brelse\">out_brelse</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a> (<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_std_error\">ext3_std_error</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext3_write_inode()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We are called from a few places:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * - Within generic_file_write() for O_SYNC files.</span>", 
"<span class=\"comment\"> *   Here, there will be no transaction running. We wait for any running</span>", 
"<span class=\"comment\"> *   trasnaction to commit.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * - Within sys_sync(), kupdate and such.</span>", 
"<span class=\"comment\"> *   We wait on commit, if tol to.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * - Within prune_icache() (PF_MEMALLOC == true)</span>", 
"<span class=\"comment\"> *   Here we simply return.  We can't afford to block kswapd on the</span>", 
"<span class=\"comment\"> *   journal commit.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * In all cases it is actually safe for us to return without doing anything,</span>", 
"<span class=\"comment\"> * because the inode has been copied into a raw inode buffer in</span>", 
"<span class=\"comment\"> * ext3_mark_inode_dirty().  This is a correctness thing for O_SYNC and for</span>", 
"<span class=\"comment\"> * knfsd.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Note that we are absolutely dependent upon all inode dirtiers doing the</span>", 
"<span class=\"comment\"> * right thing: they *must* call mark_inode_dirty() after dirtying info in</span>", 
"<span class=\"comment\"> * which we are interested.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * It would be a bug for them to not do this.  The code:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>mark_inode_dirty(inode)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>stuff();</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>inode-&gt;i_size = expr;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * is in error because a kswapd-driven write_inode() could occur while</span>", 
"<span class=\"comment\"> * `stuff()' is running, and the new i_size will be lost.  Plus the inode</span>", 
"<span class=\"comment\"> * will no longer be on the superblock's dirty inode list.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ext3_write_inode\">ext3_write_inode</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#writeback_control\">writeback_control</a> *<a class=\"id\" href=\"#wbc\">wbc</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#PF_MEMALLOC\">PF_MEMALLOC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext3_journal_current_handle\">ext3_journal_current_handle</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(1, \"called recursively, non-PF_MEMALLOC!\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dump_stack\">dump_stack</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>}", 
];
xr_frag_insert('l/4a/5172317ab83ed8b6773e3ddd5071509da6dcbd.xr', __xr_tmp);
