var __xr_tmp = [
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * SYNC_FILE_RANGE_WAIT_BEFORE|SYNC_FILE_RANGE_WRITE|SYNC_FILE_RANGE_WAIT_AFTER:</span>", 
"<span class=\"comment\"> * a traditional sync() operation.  This is a write-for-data-integrity operation</span>", 
"<span class=\"comment\"> * which will ensure that all pages in the range which were dirty on entry to</span>", 
"<span class=\"comment\"> * sys_sync_file_range() are committed to disk.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * SYNC_FILE_RANGE_WAIT_BEFORE and SYNC_FILE_RANGE_WAIT_AFTER will detect any</span>", 
"<span class=\"comment\"> * I/O errors or ENOSPC conditions and will return those to the caller, after</span>", 
"<span class=\"comment\"> * clearing the EIO and ENOSPC flags in the address_space.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * It should be noted that none of these operations write out the file's</span>", 
"<span class=\"comment\"> * metadata.  So unless the application is strictly performing overwrites of</span>", 
"<span class=\"comment\"> * already-instantiated disk blocks, there are no guarantees here that the data</span>", 
"<span class=\"comment\"> * will be available after a crash.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE\">SYSCALL_DEFINE</a>(<a class=\"id\" href=\"#sync_file_range\">sync_file_range</a>)(int <a class=\"id\" href=\"#fd\">fd</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#nbytes\">nbytes</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#address_space\">address_space</a> *<a class=\"id\" href=\"#mapping\">mapping</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#endbyte\">endbyte</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* inclusive */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fput_needed\">fput_needed</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#umode_t\">umode_t</a> <a class=\"id\" href=\"#i_mode\">i_mode</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; ~<a class=\"id\" href=\"#VALID_FLAGS\">VALID_FLAGS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#endbyte\">endbyte</a> = <a class=\"id\" href=\"#offset\">offset</a> + <a class=\"id\" href=\"#nbytes\">nbytes</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#s64\">s64</a>)<a class=\"id\" href=\"#offset\">offset</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#s64\">s64</a>)<a class=\"id\" href=\"#endbyte\">endbyte</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#endbyte\">endbyte</a> &lt; <a class=\"id\" href=\"#offset\">offset</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (sizeof(<a class=\"id\" href=\"#pgoff_t\">pgoff_t</a>) == 4) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#offset\">offset</a> >= (0x100000000ULL << <a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * The range starts outside a 32 bit machine's</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * pagecache addressing capabilities.  Let it \"succeed\"</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#endbyte\">endbyte</a> >= (0x100000000ULL << <a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Out to EOF</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nbytes\">nbytes</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nbytes\">nbytes</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#endbyte\">endbyte</a> = <a class=\"id\" href=\"#LLONG_MAX\">LLONG_MAX</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#endbyte\">endbyte</a>--;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* inclusive */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EBADF\">EBADF</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#fget_light\">fget_light</a>(<a class=\"id\" href=\"#fd\">fd</a>, &amp;<a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#file\">file</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i_mode\">i_mode</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ESPIPE\">ESPIPE</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#S_ISREG\">S_ISREG</a>(<a class=\"id\" href=\"#i_mode\">i_mode</a>) && !<a class=\"id\" href=\"#S_ISBLK\">S_ISBLK</a>(<a class=\"id\" href=\"#i_mode\">i_mode</a>) && !<a class=\"id\" href=\"#S_ISDIR\">S_ISDIR</a>(<a class=\"id\" href=\"#i_mode\">i_mode</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>!<a class=\"id\" href=\"#S_ISLNK\">S_ISLNK</a>(<a class=\"id\" href=\"#i_mode\">i_mode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_put\">out_put</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mapping\">mapping</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_mapping\">f_mapping</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mapping\">mapping</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_put\">out_put</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#SYNC_FILE_RANGE_WAIT_BEFORE\">SYNC_FILE_RANGE_WAIT_BEFORE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#filemap_fdatawait_range\">filemap_fdatawait_range</a>(<a class=\"id\" href=\"#mapping\">mapping</a>, <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#endbyte\">endbyte</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_put\">out_put</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#SYNC_FILE_RANGE_WRITE\">SYNC_FILE_RANGE_WRITE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#filemap_fdatawrite_range\">filemap_fdatawrite_range</a>(<a class=\"id\" href=\"#mapping\">mapping</a>, <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#endbyte\">endbyte</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_put\">out_put</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#SYNC_FILE_RANGE_WAIT_AFTER\">SYNC_FILE_RANGE_WAIT_AFTER</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#filemap_fdatawait_range\">filemap_fdatawait_range</a>(<a class=\"id\" href=\"#mapping\">mapping</a>, <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#endbyte\">endbyte</a>);", 
"", 
"<a class=\"id\" href=\"#out_put\">out_put</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fput_light\">fput_light</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HAVE_SYSCALL_WRAPPERS\">CONFIG_HAVE_SYSCALL_WRAPPERS</a>", 
"<a class=\"id\" href=\"#asmlinkage\">asmlinkage</a> long <a class=\"id\" href=\"#SyS_sync_file_range\">SyS_sync_file_range</a>(long <a class=\"id\" href=\"#fd\">fd</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#nbytes\">nbytes</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    long <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#SYSC_sync_file_range\">SYSC_sync_file_range</a>((int) <a class=\"id\" href=\"#fd\">fd</a>, <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#nbytes\">nbytes</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (unsigned int) <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"<a class=\"id\" href=\"#SYSCALL_ALIAS\">SYSCALL_ALIAS</a>(<a class=\"id\" href=\"#sys_sync_file_range\">sys_sync_file_range</a>, <a class=\"id\" href=\"#SyS_sync_file_range\">SyS_sync_file_range</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/* It would be nice if people remember that not all the world's an i386</span>", 
"<span class=\"comment\">   when they introduce new system calls */</span>", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE\">SYSCALL_DEFINE</a>(<a class=\"id\" href=\"#sync_file_range2\">sync_file_range2</a>)(int <a class=\"id\" href=\"#fd\">fd</a>, unsigned int <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#nbytes\">nbytes</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sys_sync_file_range\">sys_sync_file_range</a>(<a class=\"id\" href=\"#fd\">fd</a>, <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#nbytes\">nbytes</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HAVE_SYSCALL_WRAPPERS\">CONFIG_HAVE_SYSCALL_WRAPPERS</a>", 
"<a class=\"id\" href=\"#asmlinkage\">asmlinkage</a> long <a class=\"id\" href=\"#SyS_sync_file_range2\">SyS_sync_file_range2</a>(long <a class=\"id\" href=\"#fd\">fd</a>, long <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#nbytes\">nbytes</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#SYSC_sync_file_range2\">SYSC_sync_file_range2</a>((int) <a class=\"id\" href=\"#fd\">fd</a>, (unsigned int) <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#nbytes\">nbytes</a>);", 
"}", 
"<a class=\"id\" href=\"#SYSCALL_ALIAS\">SYSCALL_ALIAS</a>(<a class=\"id\" href=\"#sys_sync_file_range2\">sys_sync_file_range2</a>, <a class=\"id\" href=\"#SyS_sync_file_range2\">SyS_sync_file_range2</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/4a/7370f0940dad9569e5980ffe83ebaf939c3e77.xr', __xr_tmp);
