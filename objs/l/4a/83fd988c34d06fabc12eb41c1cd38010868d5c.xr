var __xr_tmp = [
"#<a class=\"id\" href=\"#elif\">elif</a> <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#__masix__\">__masix__</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#i_reserved1\">i_reserved1</a><span class=\"ts\"/><a class=\"id\" href=\"#osd1\">osd1</a>.<a class=\"id\" href=\"#masix1\">masix1</a>.<a class=\"id\" href=\"#m_i_reserved1\">m_i_reserved1</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#i_file_acl_high\">i_file_acl_high</a><span class=\"ts\"/><a class=\"id\" href=\"#osd2\">osd2</a>.<a class=\"id\" href=\"#masix2\">masix2</a>.<a class=\"id\" href=\"#m_i_file_acl_high\">m_i_file_acl_high</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#i_reserved2\">i_reserved2</a><span class=\"ts\"/><a class=\"id\" href=\"#osd2\">osd2</a>.<a class=\"id\" href=\"#masix2\">masix2</a>.<a class=\"id\" href=\"#m_i_reserved2\">m_i_reserved2</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* defined(__KERNEL__) || defined(__linux__) */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * storage for cached extent</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#ext4_ext_cache\">ext4_ext_cache</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a><span class=\"ts\"/><a class=\"id\" href=\"#ec_start\">ec_start</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a><span class=\"ts\"/><a class=\"id\" href=\"#ec_block\">ec_block</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ec_len\">ec_len</a>; <span class=\"comment\">/* must be 32bit to return holes */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ec_type\">ec_type</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * fourth extended file system inode data in memory</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#ext4_inode_info\">ext4_inode_info</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#i_data\">i_data</a>[15];<span class=\"ts\"/><span class=\"comment\">/* unconverted */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#i_dtime\">i_dtime</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a><span class=\"ts\"/><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * i_block_group is the number of the block group which contains</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * this file's inode.  Constant across the lifetime of the inode,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * it is ued for making block allocation decisions - we try to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * place a file's data blocks near its inode block, and new inodes</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * near to their parent directory's inode.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a><span class=\"ts\"/><a class=\"id\" href=\"#i_block_group\">i_block_group</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#i_state_flags\">i_state_flags</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Dynamic state flags */</span>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#i_flags\">i_flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i_dir_start_lookup\">i_dir_start_lookup</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EXT4_FS_XATTR\">CONFIG_EXT4_FS_XATTR</a>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Extended attributes can be read independently of the main file</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * data. Taking i_mutex even when reading would cause contention</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * between readers of EAs and writers of regular file data, so</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * instead we synchronize on xattr_sem when reading or changing</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * EAs.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rw_semaphore\">rw_semaphore</a> <a class=\"id\" href=\"#xattr_sem\">xattr_sem</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#i_orphan\">i_orphan</a>;<span class=\"ts\"/><span class=\"comment\">/* unlinked but open inodes */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * i_disksize keeps track of what the inode size is ON DISK, not</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * in memory.  During truncate, i_size is set to the new size by</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the VFS prior to calling ext4_truncate(), but the filesystem won't</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * set i_disksize to 0 until the truncate is actually under way.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The intent is that i_disksize always represents the blocks which</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * are used by this file.  This allows recovery to restart truncate</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * on orphans if we crash during truncate.  We actually write i_disksize</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * into the on-disk inode when writing inodes out, instead of i_size.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The only time when i_disksize and i_size may be different is when</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * a truncate is in progress.  The only things which change i_disksize</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * are ext4_get_block (growth) and ext4_truncate (shrinkth).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a><span class=\"ts\"/><a class=\"id\" href=\"#i_disksize\">i_disksize</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * i_data_sem is for serialising ext4_truncate() against</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ext4_getblock().  In the 2.4 ext2 design, great chunks of inode's</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * data tree are chopped off during truncate. We can't do that in</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ext4 because whenever we perform intermediate commits during</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * truncate, the inode and all the metadata blocks *must* be in a</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * consistent state which allows truncation of the orphans to restart</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * during recovery.  Hence we must fix the get_block-vs-truncate race</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * by other means, so we have i_data_sem.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rw_semaphore\">rw_semaphore</a> <a class=\"id\" href=\"#i_data_sem\">i_data_sem</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> <a class=\"id\" href=\"#vfs_inode\">vfs_inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#jbd2_inode\">jbd2_inode</a> <a class=\"id\" href=\"#jinode\">jinode</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_ext_cache\">ext4_ext_cache</a> <a class=\"id\" href=\"#i_cached_extent\">i_cached_extent</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * File creation time. Its function is same as that of</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * struct timespec i_{a,c,m}time in the generic inode.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#i_crtime\">i_crtime</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* mballoc */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#i_prealloc_list\">i_prealloc_list</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> <a class=\"id\" href=\"#i_prealloc_lock\">i_prealloc_lock</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* ialloc */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a><span class=\"ts\"/><a class=\"id\" href=\"#i_last_alloc_group\">i_last_alloc_group</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* allocation reservation info for delalloc */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i_reserved_data_blocks\">i_reserved_data_blocks</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i_reserved_meta_blocks\">i_reserved_meta_blocks</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i_allocated_meta_blocks\">i_allocated_meta_blocks</a>;", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#i_delalloc_reserved_flag\">i_delalloc_reserved_flag</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#i_da_metadata_calc_last_lblock\">i_da_metadata_calc_last_lblock</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i_da_metadata_calc_len\">i_da_metadata_calc_len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* on-disk additional length */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#i_extra_isize\">i_extra_isize</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> <a class=\"id\" href=\"#i_block_reservation_lock\">i_block_reservation_lock</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* quota space reservation, managed internally by quota code */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#i_reserved_quota\">i_reserved_quota</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* completed IOs that might need unwritten extents handling */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#i_completed_io_list\">i_completed_io_list</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> <a class=\"id\" href=\"#i_completed_io_lock\">i_completed_io_lock</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* current io_end structure for async DIO write*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_io_end_t\">ext4_io_end_t</a> *<a class=\"id\" href=\"#cur_aio_dio\">cur_aio_dio</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Transactions that contain inode's metadata needed to complete</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * fsync and fdatasync, respectively.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tid_t\">tid_t</a> <a class=\"id\" href=\"#i_sync_tid\">i_sync_tid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tid_t\">tid_t</a> <a class=\"id\" href=\"#i_datasync_tid\">i_datasync_tid</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * File system states</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_VALID_FS\">EXT4_VALID_FS</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0x0001<span class=\"ts\"/><span class=\"comment\">/* Unmounted cleanly */</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ERROR_FS\">EXT4_ERROR_FS</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0x0002<span class=\"ts\"/><span class=\"comment\">/* Errors detected */</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ORPHAN_FS\">EXT4_ORPHAN_FS</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0x0004<span class=\"ts\"/><span class=\"comment\">/* Orphans being recovered */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Misc. filesystem flags</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT2_FLAGS_SIGNED_HASH\">EXT2_FLAGS_SIGNED_HASH</a><span class=\"ts\"/><span class=\"ts\"/>0x0001  <span class=\"comment\">/* Signed dirhash in use */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT2_FLAGS_UNSIGNED_HASH\">EXT2_FLAGS_UNSIGNED_HASH</a><span class=\"ts\"/>0x0002  <span class=\"comment\">/* Unsigned dirhash in use */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT2_FLAGS_TEST_FILESYS\">EXT2_FLAGS_TEST_FILESYS</a><span class=\"ts\"/><span class=\"ts\"/>0x0004<span class=\"ts\"/><span class=\"comment\">/* to test development code */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Mount flags</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MOUNT_OLDALLOC\">EXT4_MOUNT_OLDALLOC</a><span class=\"ts\"/><span class=\"ts\"/>0x00002  <span class=\"comment\">/* Don't use the new Orlov allocator */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MOUNT_GRPID\">EXT4_MOUNT_GRPID</a><span class=\"ts\"/><span class=\"ts\"/>0x00004<span class=\"ts\"/><span class=\"comment\">/* Create files with directory's group */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MOUNT_DEBUG\">EXT4_MOUNT_DEBUG</a><span class=\"ts\"/><span class=\"ts\"/>0x00008<span class=\"ts\"/><span class=\"comment\">/* Some debugging messages */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MOUNT_ERRORS_CONT\">EXT4_MOUNT_ERRORS_CONT</a><span class=\"ts\"/><span class=\"ts\"/>0x00010<span class=\"ts\"/><span class=\"comment\">/* Continue on errors */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MOUNT_ERRORS_RO\">EXT4_MOUNT_ERRORS_RO</a><span class=\"ts\"/><span class=\"ts\"/>0x00020<span class=\"ts\"/><span class=\"comment\">/* Remount fs ro on errors */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MOUNT_ERRORS_PANIC\">EXT4_MOUNT_ERRORS_PANIC</a><span class=\"ts\"/><span class=\"ts\"/>0x00040<span class=\"ts\"/><span class=\"comment\">/* Panic on errors */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MOUNT_MINIX_DF\">EXT4_MOUNT_MINIX_DF</a><span class=\"ts\"/><span class=\"ts\"/>0x00080<span class=\"ts\"/><span class=\"comment\">/* Mimics the Minix statfs */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MOUNT_NOLOAD\">EXT4_MOUNT_NOLOAD</a><span class=\"ts\"/><span class=\"ts\"/>0x00100<span class=\"ts\"/><span class=\"comment\">/* Don't use existing journal*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MOUNT_DATA_FLAGS\">EXT4_MOUNT_DATA_FLAGS</a><span class=\"ts\"/><span class=\"ts\"/>0x00C00<span class=\"ts\"/><span class=\"comment\">/* Mode for data writes: */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MOUNT_JOURNAL_DATA\">EXT4_MOUNT_JOURNAL_DATA</a><span class=\"ts\"/><span class=\"ts\"/>0x00400<span class=\"ts\"/><span class=\"comment\">/* Write data to journal */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MOUNT_ORDERED_DATA\">EXT4_MOUNT_ORDERED_DATA</a><span class=\"ts\"/><span class=\"ts\"/>0x00800<span class=\"ts\"/><span class=\"comment\">/* Flush data before commit */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MOUNT_WRITEBACK_DATA\">EXT4_MOUNT_WRITEBACK_DATA</a><span class=\"ts\"/>0x00C00<span class=\"ts\"/><span class=\"comment\">/* No data ordering */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MOUNT_UPDATE_JOURNAL\">EXT4_MOUNT_UPDATE_JOURNAL</a><span class=\"ts\"/>0x01000<span class=\"ts\"/><span class=\"comment\">/* Update the journal format */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MOUNT_NO_UID32\">EXT4_MOUNT_NO_UID32</a><span class=\"ts\"/><span class=\"ts\"/>0x02000  <span class=\"comment\">/* Disable 32-bit UIDs */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MOUNT_XATTR_USER\">EXT4_MOUNT_XATTR_USER</a><span class=\"ts\"/><span class=\"ts\"/>0x04000<span class=\"ts\"/><span class=\"comment\">/* Extended user attributes */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MOUNT_POSIX_ACL\">EXT4_MOUNT_POSIX_ACL</a><span class=\"ts\"/><span class=\"ts\"/>0x08000<span class=\"ts\"/><span class=\"comment\">/* POSIX Access Control Lists */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MOUNT_NO_AUTO_DA_ALLOC\">EXT4_MOUNT_NO_AUTO_DA_ALLOC</a><span class=\"ts\"/>0x10000<span class=\"ts\"/><span class=\"comment\">/* No auto delalloc mapping */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MOUNT_BARRIER\">EXT4_MOUNT_BARRIER</a><span class=\"ts\"/><span class=\"ts\"/>0x20000 <span class=\"comment\">/* Use block barriers */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MOUNT_QUOTA\">EXT4_MOUNT_QUOTA</a><span class=\"ts\"/><span class=\"ts\"/>0x80000 <span class=\"comment\">/* Some quota option set */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MOUNT_USRQUOTA\">EXT4_MOUNT_USRQUOTA</a><span class=\"ts\"/><span class=\"ts\"/>0x100000 <span class=\"comment\">/* \"old\" user quota */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MOUNT_GRPQUOTA\">EXT4_MOUNT_GRPQUOTA</a><span class=\"ts\"/><span class=\"ts\"/>0x200000 <span class=\"comment\">/* \"old\" group quota */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MOUNT_DIOREAD_NOLOCK\">EXT4_MOUNT_DIOREAD_NOLOCK</a><span class=\"ts\"/>0x400000 <span class=\"comment\">/* Enable support for dio read nolocking */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MOUNT_JOURNAL_CHECKSUM\">EXT4_MOUNT_JOURNAL_CHECKSUM</a><span class=\"ts\"/>0x800000 <span class=\"comment\">/* Journal checksums */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MOUNT_JOURNAL_ASYNC_COMMIT\">EXT4_MOUNT_JOURNAL_ASYNC_COMMIT</a><span class=\"ts\"/>0x1000000 <span class=\"comment\">/* Journal Async Commit */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MOUNT_I_VERSION\">EXT4_MOUNT_I_VERSION</a>            0x2000000 <span class=\"comment\">/* i_version support */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MOUNT_DELALLOC\">EXT4_MOUNT_DELALLOC</a><span class=\"ts\"/><span class=\"ts\"/>0x8000000 <span class=\"comment\">/* Delalloc support */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MOUNT_DATA_ERR_ABORT\">EXT4_MOUNT_DATA_ERR_ABORT</a><span class=\"ts\"/>0x10000000 <span class=\"comment\">/* Abort on file data write */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MOUNT_BLOCK_VALIDITY\">EXT4_MOUNT_BLOCK_VALIDITY</a><span class=\"ts\"/>0x20000000 <span class=\"comment\">/* Block validity checking */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MOUNT_DISCARD\">EXT4_MOUNT_DISCARD</a><span class=\"ts\"/><span class=\"ts\"/>0x40000000 <span class=\"comment\">/* Issue DISCARD requests */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#o\">o</a>, <a class=\"id\" href=\"#opt\">opt</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#o\">o</a> &= ~<a class=\"id\" href=\"#EXT4_MOUNT_\">EXT4_MOUNT_</a>##<a class=\"id\" href=\"#opt\">opt</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#o\">o</a>, <a class=\"id\" href=\"#opt\">opt</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#o\">o</a> |= <a class=\"id\" href=\"#EXT4_MOUNT_\">EXT4_MOUNT_</a>##<a class=\"id\" href=\"#opt\">opt</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#opt\">opt</a>)<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a> &amp; \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_MOUNT_\">EXT4_MOUNT_</a>##<a class=\"id\" href=\"#opt\">opt</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ext4_set_bit\">ext4_set_bit</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_set_bit\">ext2_set_bit</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ext4_set_bit_atomic\">ext4_set_bit_atomic</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_set_bit_atomic\">ext2_set_bit_atomic</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ext4_clear_bit\">ext4_clear_bit</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_clear_bit\">ext2_clear_bit</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ext4_clear_bit_atomic\">ext4_clear_bit_atomic</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_clear_bit_atomic\">ext2_clear_bit_atomic</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ext4_test_bit\">ext4_test_bit</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_test_bit\">ext2_test_bit</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ext4_find_first_zero_bit\">ext4_find_first_zero_bit</a><span class=\"ts\"/><a class=\"id\" href=\"#ext2_find_first_zero_bit\">ext2_find_first_zero_bit</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ext4_find_next_zero_bit\">ext4_find_next_zero_bit</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_find_next_zero_bit\">ext2_find_next_zero_bit</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ext4_find_next_bit\">ext4_find_next_bit</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_find_next_bit\">ext2_find_next_bit</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Maximal mount counts between two filesystem checks</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_DFL_MAX_MNT_COUNT\">EXT4_DFL_MAX_MNT_COUNT</a><span class=\"ts\"/><span class=\"ts\"/>20<span class=\"ts\"/><span class=\"comment\">/* Allow 20 mounts */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_DFL_CHECKINTERVAL\">EXT4_DFL_CHECKINTERVAL</a><span class=\"ts\"/><span class=\"ts\"/>0<span class=\"ts\"/><span class=\"comment\">/* Don't use interval check */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Behaviour when detecting errors</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_ERRORS_CONTINUE\">EXT4_ERRORS_CONTINUE</a><span class=\"ts\"/><span class=\"ts\"/>1<span class=\"ts\"/><span class=\"comment\">/* Continue execution */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_ERRORS_RO\">EXT4_ERRORS_RO</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>2<span class=\"ts\"/><span class=\"comment\">/* Remount fs read-only */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_ERRORS_PANIC\">EXT4_ERRORS_PANIC</a><span class=\"ts\"/><span class=\"ts\"/>3<span class=\"ts\"/><span class=\"comment\">/* Panic */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_ERRORS_DEFAULT\">EXT4_ERRORS_DEFAULT</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ERRORS_CONTINUE\">EXT4_ERRORS_CONTINUE</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Structure of the super block</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a> {", 
"<span class=\"comment\">/*00*/</span><span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_inodes_count\">s_inodes_count</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Inodes count */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_blocks_count_lo\">s_blocks_count_lo</a>;<span class=\"ts\"/><span class=\"comment\">/* Blocks count */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_r_blocks_count_lo\">s_r_blocks_count_lo</a>;<span class=\"ts\"/><span class=\"comment\">/* Reserved blocks count */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_free_blocks_count_lo\">s_free_blocks_count_lo</a>;<span class=\"ts\"/><span class=\"comment\">/* Free blocks count */</span>", 
"<span class=\"comment\">/*10*/</span><span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_free_inodes_count\">s_free_inodes_count</a>;<span class=\"ts\"/><span class=\"comment\">/* Free inodes count */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_first_data_block\">s_first_data_block</a>;<span class=\"ts\"/><span class=\"comment\">/* First Data Block */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_log_block_size\">s_log_block_size</a>;<span class=\"ts\"/><span class=\"comment\">/* Block size */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_obso_log_frag_size\">s_obso_log_frag_size</a>;<span class=\"ts\"/><span class=\"comment\">/* Obsoleted fragment size */</span>", 
"<span class=\"comment\">/*20*/</span><span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_blocks_per_group\">s_blocks_per_group</a>;<span class=\"ts\"/><span class=\"comment\">/* # Blocks per group */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_obso_frags_per_group\">s_obso_frags_per_group</a>;<span class=\"ts\"/><span class=\"comment\">/* Obsoleted fragments per group */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_inodes_per_group\">s_inodes_per_group</a>;<span class=\"ts\"/><span class=\"comment\">/* # Inodes per group */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_mtime\">s_mtime</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Mount time */</span>", 
"<span class=\"comment\">/*30*/</span><span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_wtime\">s_wtime</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Write time */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#s_mnt_count\">s_mnt_count</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Mount count */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#s_max_mnt_count\">s_max_mnt_count</a>;<span class=\"ts\"/><span class=\"comment\">/* Maximal mount count */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#s_magic\">s_magic</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Magic signature */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#s_state\">s_state</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* File system state */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#s_errors\">s_errors</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Behaviour when detecting errors */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#s_minor_rev_level\">s_minor_rev_level</a>;<span class=\"ts\"/><span class=\"comment\">/* minor revision level */</span>", 
"<span class=\"comment\">/*40*/</span><span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_lastcheck\">s_lastcheck</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* time of last check */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_checkinterval\">s_checkinterval</a>;<span class=\"ts\"/><span class=\"comment\">/* max. time between checks */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_creator_os\">s_creator_os</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* OS */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_rev_level\">s_rev_level</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Revision level */</span>", 
"<span class=\"comment\">/*50*/</span><span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#s_def_resuid\">s_def_resuid</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Default uid for reserved blocks */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#s_def_resgid\">s_def_resgid</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Default gid for reserved blocks */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * These fields are for EXT4_DYNAMIC_REV superblocks only.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Note: the difference between the compatible feature set and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the incompatible feature set is that if there is a bit set</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * in the incompatible feature set that the kernel doesn't</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * know about, it should refuse to mount the filesystem.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * e2fsck's requirements are more strict; if it doesn't know</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * about a feature in either the compatible or incompatible</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * feature set, it must abort and not try to meddle with</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * things it doesn't understand...</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_first_ino\">s_first_ino</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* First non-reserved inode */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a>  <a class=\"id\" href=\"#s_inode_size\">s_inode_size</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* size of inode structure */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#s_block_group_nr\">s_block_group_nr</a>;<span class=\"ts\"/><span class=\"comment\">/* block group # of this superblock */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_feature_compat\">s_feature_compat</a>;<span class=\"ts\"/><span class=\"comment\">/* compatible feature set */</span>", 
"<span class=\"comment\">/*60*/</span><span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_feature_incompat\">s_feature_incompat</a>;<span class=\"ts\"/><span class=\"comment\">/* incompatible feature set */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_feature_ro_compat\">s_feature_ro_compat</a>;<span class=\"ts\"/><span class=\"comment\">/* readonly-compatible feature set */</span>", 
"<span class=\"comment\">/*68*/</span><span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#s_uuid\">s_uuid</a>[16];<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 128-bit uuid for volume */</span>", 
"<span class=\"comment\">/*78*/</span><span class=\"ts\"/>char<span class=\"ts\"/><a class=\"id\" href=\"#s_volume_name\">s_volume_name</a>[16];<span class=\"ts\"/><span class=\"comment\">/* volume name */</span>", 
"<span class=\"comment\">/*88*/</span><span class=\"ts\"/>char<span class=\"ts\"/><a class=\"id\" href=\"#s_last_mounted\">s_last_mounted</a>[64];<span class=\"ts\"/><span class=\"comment\">/* directory where last mounted */</span>", 
"<span class=\"comment\">/*C8*/</span><span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_algorithm_usage_bitmap\">s_algorithm_usage_bitmap</a>; <span class=\"comment\">/* For compression */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Performance hints.  Directory preallocation should only</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * happen if the EXT4_FEATURE_COMPAT_DIR_PREALLOC flag is on.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#s_prealloc_blocks\">s_prealloc_blocks</a>;<span class=\"ts\"/><span class=\"comment\">/* Nr of blocks to try to preallocate*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#s_prealloc_dir_blocks\">s_prealloc_dir_blocks</a>;<span class=\"ts\"/><span class=\"comment\">/* Nr to preallocate for dirs */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#s_reserved_gdt_blocks\">s_reserved_gdt_blocks</a>;<span class=\"ts\"/><span class=\"comment\">/* Per group desc for online growth */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Journaling support valid if EXT4_FEATURE_COMPAT_HAS_JOURNAL set.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"comment\">/*D0*/</span><span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#s_journal_uuid\">s_journal_uuid</a>[16];<span class=\"ts\"/><span class=\"comment\">/* uuid of journal superblock */</span>", 
"<span class=\"comment\">/*E0*/</span><span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_journal_inum\">s_journal_inum</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* inode number of journal file */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_journal_dev\">s_journal_dev</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* device number of journal file */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_last_orphan\">s_last_orphan</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* start of list of inodes to delete */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_hash_seed\">s_hash_seed</a>[4];<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* HTREE hash seed */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#s_def_hash_version\">s_def_hash_version</a>;<span class=\"ts\"/><span class=\"comment\">/* Default hash version to use */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#s_jnl_backup_type\">s_jnl_backup_type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a>  <a class=\"id\" href=\"#s_desc_size\">s_desc_size</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* size of group descriptor */</span>", 
"<span class=\"comment\">/*100*/</span><span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_default_mount_opts\">s_default_mount_opts</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_first_meta_bg\">s_first_meta_bg</a>;<span class=\"ts\"/><span class=\"comment\">/* First metablock block group */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_mkfs_time\">s_mkfs_time</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* When the filesystem was created */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_jnl_blocks\">s_jnl_blocks</a>[17];<span class=\"ts\"/><span class=\"comment\">/* Backup of the journal inode */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* 64bit support valid if EXT4_FEATURE_COMPAT_64BIT */</span>", 
"<span class=\"comment\">/*150*/</span><span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_blocks_count_hi\">s_blocks_count_hi</a>;<span class=\"ts\"/><span class=\"comment\">/* Blocks count */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_r_blocks_count_hi\">s_r_blocks_count_hi</a>;<span class=\"ts\"/><span class=\"comment\">/* Reserved blocks count */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_free_blocks_count_hi\">s_free_blocks_count_hi</a>;<span class=\"ts\"/><span class=\"comment\">/* Free blocks count */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#s_min_extra_isize\">s_min_extra_isize</a>;<span class=\"ts\"/><span class=\"comment\">/* All inodes have at least # bytes */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#s_want_extra_isize\">s_want_extra_isize</a>; <span class=\"ts\"/><span class=\"comment\">/* New inodes should reserve # bytes */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_flags\">s_flags</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Miscellaneous flags */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a>  <a class=\"id\" href=\"#s_raid_stride\">s_raid_stride</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* RAID stride */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a>  <a class=\"id\" href=\"#s_mmp_interval\">s_mmp_interval</a>;         <span class=\"comment\">/* # seconds to wait in MMP checking */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le64\">__le64</a>  <a class=\"id\" href=\"#s_mmp_block\">s_mmp_block</a>;            <span class=\"comment\">/* Block for multi-mount protection */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a>  <a class=\"id\" href=\"#s_raid_stripe_width\">s_raid_stripe_width</a>;    <span class=\"comment\">/* blocks on all data disks (N*stride)*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#s_log_groups_per_flex\">s_log_groups_per_flex</a>;  <span class=\"comment\">/* FLEX_BG group size */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#s_reserved_char_pad\">s_reserved_char_pad</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a>  <a class=\"id\" href=\"#s_reserved_pad\">s_reserved_pad</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le64\">__le64</a><span class=\"ts\"/><a class=\"id\" href=\"#s_kbytes_written\">s_kbytes_written</a>;<span class=\"ts\"/><span class=\"comment\">/* nr of lifetime kilobytes written */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_snapshot_inum\">s_snapshot_inum</a>;<span class=\"ts\"/><span class=\"comment\">/* Inode number of active snapshot */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_snapshot_id\">s_snapshot_id</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* sequential ID of active snapshot */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le64\">__le64</a><span class=\"ts\"/><a class=\"id\" href=\"#s_snapshot_r_blocks_count\">s_snapshot_r_blocks_count</a>; <span class=\"comment\">/* reserved blocks for active</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      snapshot's future use */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_snapshot_list\">s_snapshot_list</a>;<span class=\"ts\"/><span class=\"comment\">/* inode number of the head of the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   on-disk snapshot list */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_S_ERR_START\">EXT4_S_ERR_START</a> <a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a>, <a class=\"id\" href=\"#s_error_count\">s_error_count</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_error_count\">s_error_count</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* number of fs errors */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_first_error_time\">s_first_error_time</a>;<span class=\"ts\"/><span class=\"comment\">/* first time an error happened */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_first_error_ino\">s_first_error_ino</a>;<span class=\"ts\"/><span class=\"comment\">/* inode involved in first error */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le64\">__le64</a><span class=\"ts\"/><a class=\"id\" href=\"#s_first_error_block\">s_first_error_block</a>;<span class=\"ts\"/><span class=\"comment\">/* block involved of first error */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#s_first_error_func\">s_first_error_func</a>[32];<span class=\"ts\"/><span class=\"comment\">/* function where the error happened */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_first_error_line\">s_first_error_line</a>;<span class=\"ts\"/><span class=\"comment\">/* line number where error happened */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_last_error_time\">s_last_error_time</a>;<span class=\"ts\"/><span class=\"comment\">/* most recent time of an error */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_last_error_ino\">s_last_error_ino</a>;<span class=\"ts\"/><span class=\"comment\">/* inode involved in last error */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_last_error_line\">s_last_error_line</a>;<span class=\"ts\"/><span class=\"comment\">/* line number where error happened */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le64\">__le64</a><span class=\"ts\"/><a class=\"id\" href=\"#s_last_error_block\">s_last_error_block</a>;<span class=\"ts\"/><span class=\"comment\">/* block involved of last error */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#s_last_error_func\">s_last_error_func</a>[32];<span class=\"ts\"/><span class=\"comment\">/* function where the error happened */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_S_ERR_END\">EXT4_S_ERR_END</a> <a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a>, <a class=\"id\" href=\"#s_mount_opts\">s_mount_opts</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#s_mount_opts\">s_mount_opts</a>[64];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_reserved\">s_reserved</a>[112];        <span class=\"comment\">/* Padding to the end of the block */</span>", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_S_ERR_LEN\">EXT4_S_ERR_LEN</a> (<a class=\"id\" href=\"#EXT4_S_ERR_END\">EXT4_S_ERR_END</a> - <a class=\"id\" href=\"#EXT4_S_ERR_START\">EXT4_S_ERR_START</a>)", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * run-time mount flags</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MF_MNTDIR_SAMPLED\">EXT4_MF_MNTDIR_SAMPLED</a><span class=\"ts\"/>0x0001", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MF_FS_ABORTED\">EXT4_MF_FS_ABORTED</a><span class=\"ts\"/>0x0002<span class=\"ts\"/><span class=\"comment\">/* Fatal error detected */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * fourth extended-fs super-block data in memory</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> {", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_desc_size\">s_desc_size</a>;<span class=\"ts\"/><span class=\"comment\">/* Size of a group descriptor in bytes */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_inodes_per_block\">s_inodes_per_block</a>;<span class=\"comment\">/* Number of inodes per block */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_blocks_per_group\">s_blocks_per_group</a>;<span class=\"comment\">/* Number of blocks in a group */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_inodes_per_group\">s_inodes_per_group</a>;<span class=\"comment\">/* Number of inodes in a group */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_itb_per_group\">s_itb_per_group</a>;<span class=\"ts\"/><span class=\"comment\">/* Number of inode table blocks per group */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_gdb_count\">s_gdb_count</a>;<span class=\"ts\"/><span class=\"comment\">/* Number of group descriptor blocks */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_desc_per_block\">s_desc_per_block</a>;<span class=\"ts\"/><span class=\"comment\">/* Number of group descriptors per block */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#s_groups_count\">s_groups_count</a>;<span class=\"ts\"/><span class=\"comment\">/* Number of groups in the fs */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#s_blockfile_groups\">s_blockfile_groups</a>;<span class=\"comment\">/* Groups acceptable for non-extent files */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_overhead_last\">s_overhead_last</a>;  <span class=\"comment\">/* Last calculated overhead */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_blocks_last\">s_blocks_last</a>;    <span class=\"comment\">/* Last seen block count */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#s_bitmap_maxbytes\">s_bitmap_maxbytes</a>;<span class=\"ts\"/><span class=\"comment\">/* max bytes for bitmap files */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> * <a class=\"id\" href=\"#s_sbh\">s_sbh</a>;<span class=\"ts\"/><span class=\"comment\">/* Buffer containing the super block */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a> *<a class=\"id\" href=\"#s_es\">s_es</a>;<span class=\"ts\"/><span class=\"comment\">/* Pointer to the super block in the buffer */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> **<a class=\"id\" href=\"#s_group_desc\">s_group_desc</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#s_mount_flags\">s_mount_flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#s_sb_block\">s_sb_block</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uid_t\">uid_t</a> <a class=\"id\" href=\"#s_resuid\">s_resuid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gid_t\">gid_t</a> <a class=\"id\" href=\"#s_resgid\">s_resgid</a>;", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#s_mount_state\">s_mount_state</a>;", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#s_pad\">s_pad</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#s_addr_per_block_bits\">s_addr_per_block_bits</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#s_desc_per_block_bits\">s_desc_per_block_bits</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#s_inode_size\">s_inode_size</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#s_first_ino\">s_first_ino</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#s_inode_readahead_blks\">s_inode_readahead_blks</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#s_inode_goal\">s_inode_goal</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> <a class=\"id\" href=\"#s_next_gen_lock\">s_next_gen_lock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#s_next_generation\">s_next_generation</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#s_hash_seed\">s_hash_seed</a>[4];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#s_def_hash_version\">s_def_hash_version</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#s_hash_unsigned\">s_hash_unsigned</a>;<span class=\"ts\"/><span class=\"comment\">/* 3 if hash should be signed, 0 if not */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#percpu_counter\">percpu_counter</a> <a class=\"id\" href=\"#s_freeblocks_counter\">s_freeblocks_counter</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#percpu_counter\">percpu_counter</a> <a class=\"id\" href=\"#s_freeinodes_counter\">s_freeinodes_counter</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#percpu_counter\">percpu_counter</a> <a class=\"id\" href=\"#s_dirs_counter\">s_dirs_counter</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#percpu_counter\">percpu_counter</a> <a class=\"id\" href=\"#s_dirtyblocks_counter\">s_dirtyblocks_counter</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#blockgroup_lock\">blockgroup_lock</a> *<a class=\"id\" href=\"#s_blockgroup_lock\">s_blockgroup_lock</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proc_dir_entry\">proc_dir_entry</a> *<a class=\"id\" href=\"#s_proc\">s_proc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kobject\">kobject</a> <a class=\"id\" href=\"#s_kobj\">s_kobj</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#completion\">completion</a> <a class=\"id\" href=\"#s_kobj_unregister\">s_kobj_unregister</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Journaling */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#s_journal_inode\">s_journal_inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#journal_s\">journal_s</a> *<a class=\"id\" href=\"#s_journal\">s_journal</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#s_orphan\">s_orphan</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mutex\">mutex</a> <a class=\"id\" href=\"#s_orphan_lock\">s_orphan_lock</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mutex\">mutex</a> <a class=\"id\" href=\"#s_resize_lock\">s_resize_lock</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_commit_interval\">s_commit_interval</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#s_max_batch_time\">s_max_batch_time</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#s_min_batch_time\">s_min_batch_time</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#journal_bdev\">journal_bdev</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_JBD2_DEBUG\">CONFIG_JBD2_DEBUG</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timer_list\">timer_list</a> <a class=\"id\" href=\"#turn_ro_timer\">turn_ro_timer</a>;<span class=\"ts\"/><span class=\"comment\">/* For turning read-only (crash simulation) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wait_queue_head_t\">wait_queue_head_t</a> <a class=\"id\" href=\"#ro_wait_queue\">ro_wait_queue</a>;<span class=\"ts\"/><span class=\"comment\">/* For people waiting for the fs to go read-only */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>];<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Names of quota files with journalled quota */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#s_jquota_fmt\">s_jquota_fmt</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Format of quota to use */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#s_want_extra_isize\">s_want_extra_isize</a>; <span class=\"comment\">/* New inodes should reserve # bytes */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_root\">rb_root</a> <a class=\"id\" href=\"#system_blks\">system_blks</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#EXTENTS_STATS\">EXTENTS_STATS</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* ext4 extents stats */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_ext_min\">s_ext_min</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_ext_max\">s_ext_max</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_depth_max\">s_depth_max</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> <a class=\"id\" href=\"#s_ext_stats_lock\">s_ext_stats_lock</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_ext_blocks\">s_ext_blocks</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_ext_extents\">s_ext_extents</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* for buddy allocator */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_group_info\">ext4_group_info</a> ***<a class=\"id\" href=\"#s_group_info\">s_group_info</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#s_buddy_cache\">s_buddy_cache</a>;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#s_blocks_reserved\">s_blocks_reserved</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> <a class=\"id\" href=\"#s_reserve_lock\">s_reserve_lock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> <a class=\"id\" href=\"#s_md_lock\">s_md_lock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tid_t\">tid_t</a> <a class=\"id\" href=\"#s_last_transaction\">s_last_transaction</a>;", 
"<span class=\"ts\"/>unsigned short *<a class=\"id\" href=\"#s_mb_offsets\">s_mb_offsets</a>;", 
"<span class=\"ts\"/>unsigned int *<a class=\"id\" href=\"#s_mb_maxs\">s_mb_maxs</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* tunables */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_stripe\">s_stripe</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#s_mb_stream_request\">s_mb_stream_request</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#s_mb_max_to_scan\">s_mb_max_to_scan</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#s_mb_min_to_scan\">s_mb_min_to_scan</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#s_mb_stats\">s_mb_stats</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#s_mb_order2_reqs\">s_mb_order2_reqs</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#s_mb_group_prealloc\">s_mb_group_prealloc</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#s_max_writeback_mb_bump\">s_max_writeback_mb_bump</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* where last allocation was done - for stream allocation */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_mb_last_group\">s_mb_last_group</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_mb_last_start\">s_mb_last_start</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* stats for buddy allocator */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> <a class=\"id\" href=\"#s_mb_pa_lock\">s_mb_pa_lock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#s_bal_reqs\">s_bal_reqs</a>;<span class=\"ts\"/><span class=\"comment\">/* number of reqs with len &gt; 1 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#s_bal_success\">s_bal_success</a>;<span class=\"ts\"/><span class=\"comment\">/* we found long enough chunks */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#s_bal_allocated\">s_bal_allocated</a>;<span class=\"ts\"/><span class=\"comment\">/* in blocks */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#s_bal_ex_scanned\">s_bal_ex_scanned</a>;<span class=\"ts\"/><span class=\"comment\">/* total extents scanned */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#s_bal_goals\">s_bal_goals</a>;<span class=\"ts\"/><span class=\"comment\">/* goal hits */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#s_bal_breaks\">s_bal_breaks</a>;<span class=\"ts\"/><span class=\"comment\">/* too long searches */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#s_bal_2orders\">s_bal_2orders</a>;<span class=\"ts\"/><span class=\"comment\">/* 2^order hits */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> <a class=\"id\" href=\"#s_bal_lock\">s_bal_lock</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_mb_buddies_generated\">s_mb_buddies_generated</a>;", 
"<span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#s_mb_generation_time\">s_mb_generation_time</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#s_mb_lost_chunks\">s_mb_lost_chunks</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#s_mb_preallocated\">s_mb_preallocated</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#s_mb_discarded\">s_mb_discarded</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#s_lock_busy\">s_lock_busy</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* locality groups */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_locality_group\">ext4_locality_group</a> <a class=\"id\" href=\"#__percpu\">__percpu</a> *<a class=\"id\" href=\"#s_locality_groups\">s_locality_groups</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* for write statistics */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_sectors_written_start\">s_sectors_written_start</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#s_kbytes_written\">s_kbytes_written</a>;", 
"", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#s_log_groups_per_flex\">s_log_groups_per_flex</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#flex_groups\">flex_groups</a> *<a class=\"id\" href=\"#s_flex_groups\">s_flex_groups</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* workqueue for dio unwritten */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#workqueue_struct\">workqueue_struct</a> *<a class=\"id\" href=\"#dio_unwritten_wq\">dio_unwritten_wq</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* timer for periodic error stats printing */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timer_list\">timer_list</a> <a class=\"id\" href=\"#s_err_report\">s_err_report</a>;", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_fs_info\">s_fs_info</a>;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#ext4_inode_info\">ext4_inode_info</a> *<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#ext4_inode_info\">ext4_inode_info</a>, <a class=\"id\" href=\"#vfs_inode\">vfs_inode</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#ext4_current_time\">ext4_current_time</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_time_gran\">s_time_gran</a> &lt; <a class=\"id\" href=\"#NSEC_PER_SEC\">NSEC_PER_SEC</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#current_fs_time\">current_fs_time</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>) : <a class=\"id\" href=\"#CURRENT_TIME_SEC\">CURRENT_TIME_SEC</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ext4_valid_inum\">ext4_valid_inum</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, unsigned long <a class=\"id\" href=\"#ino\">ino</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ino\">ino</a> == <a class=\"id\" href=\"#EXT4_ROOT_INO\">EXT4_ROOT_INO</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ino\">ino</a> == <a class=\"id\" href=\"#EXT4_JOURNAL_INO\">EXT4_JOURNAL_INO</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ino\">ino</a> == <a class=\"id\" href=\"#EXT4_RESIZE_INO\">EXT4_RESIZE_INO</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#ino\">ino</a> >= <a class=\"id\" href=\"#EXT4_FIRST_INO\">EXT4_FIRST_INO</a>(<a class=\"id\" href=\"#sb\">sb</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#ino\">ino</a> <= <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_inodes_count\">s_inodes_count</a>));", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Inode dynamic state flags</span>", 
"<span class=\"comment\"> */</span>", 
"enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_STATE_JDATA\">EXT4_STATE_JDATA</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* journaled data exists */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_STATE_NEW\">EXT4_STATE_NEW</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* inode is newly created */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_STATE_XATTR\">EXT4_STATE_XATTR</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* has in-inode xattrs */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_STATE_NO_EXPAND\">EXT4_STATE_NO_EXPAND</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* No space for expansion */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_STATE_DA_ALLOC_CLOSE\">EXT4_STATE_DA_ALLOC_CLOSE</a>,<span class=\"ts\"/><span class=\"comment\">/* Alloc DA blks on close */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_STATE_EXT_MIGRATE\">EXT4_STATE_EXT_MIGRATE</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Inode is migrating */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_STATE_DIO_UNWRITTEN\">EXT4_STATE_DIO_UNWRITTEN</a>,<span class=\"ts\"/><span class=\"comment\">/* need convert on dio done*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_STATE_NEWENTRY\">EXT4_STATE_NEWENTRY</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* File just added to dir */</span>", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_INODE_BIT_FNS\">EXT4_INODE_BIT_FNS</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#field\">field</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ext4_test_inode_\">ext4_test_inode_</a>##<a class=\"id\" href=\"#name\">name</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, int <a class=\"id\" href=\"#bit\">bit</a>)<span class=\"ts\"/>\\", 
"{<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#bit\">bit</a>, &amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_\">i_</a>##<a class=\"id\" href=\"#field\">field</a>);<span class=\"ts\"/><span class=\"ts\"/>\\", 
"}<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ext4_set_inode_\">ext4_set_inode_</a>##<a class=\"id\" href=\"#name\">name</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, int <a class=\"id\" href=\"#bit\">bit</a>)<span class=\"ts\"/>\\", 
"{<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#bit\">bit</a>, &amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_\">i_</a>##<a class=\"id\" href=\"#field\">field</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"}<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ext4_clear_inode_\">ext4_clear_inode_</a>##<a class=\"id\" href=\"#name\">name</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, int <a class=\"id\" href=\"#bit\">bit</a>) \\", 
"{<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#bit\">bit</a>, &amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_\">i_</a>##<a class=\"id\" href=\"#field\">field</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"}", 
"", 
"<a class=\"id\" href=\"#EXT4_INODE_BIT_FNS\">EXT4_INODE_BIT_FNS</a>(<a class=\"id\" href=\"#flag\">flag</a>, <a class=\"id\" href=\"#flags\">flags</a>)", 
"<a class=\"id\" href=\"#EXT4_INODE_BIT_FNS\">EXT4_INODE_BIT_FNS</a>(<a class=\"id\" href=\"#state\">state</a>, <a class=\"id\" href=\"#state_flags\">state_flags</a>)", 
"#else", 
"<span class=\"comment\">/* Assume that user mode programs are passing in an ext4fs superblock, not</span>", 
"<span class=\"comment\"> * a kernel struct super_block.  This will allow us to call the feature-test</span>", 
"<span class=\"comment\"> * macros from user land. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)<span class=\"ts\"/>(<a class=\"id\" href=\"#sb\">sb</a>)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NEXT_ORPHAN\">NEXT_ORPHAN</a>(<a class=\"id\" href=\"#inode\">inode</a>) <a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_dtime\">i_dtime</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Codes for operating systems</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_OS_LINUX\">EXT4_OS_LINUX</a><span class=\"ts\"/><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_OS_HURD\">EXT4_OS_HURD</a><span class=\"ts\"/><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_OS_MASIX\">EXT4_OS_MASIX</a><span class=\"ts\"/><span class=\"ts\"/>2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_OS_FREEBSD\">EXT4_OS_FREEBSD</a><span class=\"ts\"/><span class=\"ts\"/>3", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_OS_LITES\">EXT4_OS_LITES</a><span class=\"ts\"/><span class=\"ts\"/>4", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Revision levels</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_GOOD_OLD_REV\">EXT4_GOOD_OLD_REV</a><span class=\"ts\"/>0<span class=\"ts\"/><span class=\"comment\">/* The good old (original) format */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_DYNAMIC_REV\">EXT4_DYNAMIC_REV</a><span class=\"ts\"/>1<span class=\"ts\"/><span class=\"comment\">/* V2 format w/ dynamic inode sizes */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_CURRENT_REV\">EXT4_CURRENT_REV</a><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_GOOD_OLD_REV\">EXT4_GOOD_OLD_REV</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MAX_SUPP_REV\">EXT4_MAX_SUPP_REV</a><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_DYNAMIC_REV\">EXT4_DYNAMIC_REV</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_GOOD_OLD_INODE_SIZE\">EXT4_GOOD_OLD_INODE_SIZE</a> 128", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Feature set definitions</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_HAS_COMPAT_FEATURE\">EXT4_HAS_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>,<a class=\"id\" href=\"#mask\">mask</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>((<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_feature_compat\">s_feature_compat</a> &amp; <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#mask\">mask</a>)) != 0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_HAS_RO_COMPAT_FEATURE\">EXT4_HAS_RO_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>,<a class=\"id\" href=\"#mask\">mask</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>((<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_feature_ro_compat\">s_feature_ro_compat</a> &amp; <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#mask\">mask</a>)) != 0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_HAS_INCOMPAT_FEATURE\">EXT4_HAS_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>,<a class=\"id\" href=\"#mask\">mask</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>((<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_feature_incompat\">s_feature_incompat</a> &amp; <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#mask\">mask</a>)) != 0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_SET_COMPAT_FEATURE\">EXT4_SET_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>,<a class=\"id\" href=\"#mask\">mask</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_feature_compat\">s_feature_compat</a> |= <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#mask\">mask</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_SET_RO_COMPAT_FEATURE\">EXT4_SET_RO_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>,<a class=\"id\" href=\"#mask\">mask</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_feature_ro_compat\">s_feature_ro_compat</a> |= <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#mask\">mask</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_SET_INCOMPAT_FEATURE\">EXT4_SET_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>,<a class=\"id\" href=\"#mask\">mask</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_feature_incompat\">s_feature_incompat</a> |= <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#mask\">mask</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_CLEAR_COMPAT_FEATURE\">EXT4_CLEAR_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>,<a class=\"id\" href=\"#mask\">mask</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_feature_compat\">s_feature_compat</a> &= ~<a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#mask\">mask</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_CLEAR_RO_COMPAT_FEATURE\">EXT4_CLEAR_RO_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>,<a class=\"id\" href=\"#mask\">mask</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_feature_ro_compat\">s_feature_ro_compat</a> &= ~<a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#mask\">mask</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_CLEAR_INCOMPAT_FEATURE\">EXT4_CLEAR_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>,<a class=\"id\" href=\"#mask\">mask</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_feature_incompat\">s_feature_incompat</a> &= ~<a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#mask\">mask</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FEATURE_COMPAT_DIR_PREALLOC\">EXT4_FEATURE_COMPAT_DIR_PREALLOC</a><span class=\"ts\"/>0x0001", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FEATURE_COMPAT_IMAGIC_INODES\">EXT4_FEATURE_COMPAT_IMAGIC_INODES</a><span class=\"ts\"/>0x0002", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FEATURE_COMPAT_HAS_JOURNAL\">EXT4_FEATURE_COMPAT_HAS_JOURNAL</a><span class=\"ts\"/><span class=\"ts\"/>0x0004", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FEATURE_COMPAT_EXT_ATTR\">EXT4_FEATURE_COMPAT_EXT_ATTR</a><span class=\"ts\"/><span class=\"ts\"/>0x0008", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FEATURE_COMPAT_RESIZE_INODE\">EXT4_FEATURE_COMPAT_RESIZE_INODE</a><span class=\"ts\"/>0x0010", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FEATURE_COMPAT_DIR_INDEX\">EXT4_FEATURE_COMPAT_DIR_INDEX</a><span class=\"ts\"/><span class=\"ts\"/>0x0020", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FEATURE_RO_COMPAT_SPARSE_SUPER\">EXT4_FEATURE_RO_COMPAT_SPARSE_SUPER</a><span class=\"ts\"/>0x0001", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FEATURE_RO_COMPAT_LARGE_FILE\">EXT4_FEATURE_RO_COMPAT_LARGE_FILE</a><span class=\"ts\"/>0x0002", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FEATURE_RO_COMPAT_BTREE_DIR\">EXT4_FEATURE_RO_COMPAT_BTREE_DIR</a><span class=\"ts\"/>0x0004", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FEATURE_RO_COMPAT_HUGE_FILE\">EXT4_FEATURE_RO_COMPAT_HUGE_FILE</a>        0x0008", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FEATURE_RO_COMPAT_GDT_CSUM\">EXT4_FEATURE_RO_COMPAT_GDT_CSUM</a><span class=\"ts\"/><span class=\"ts\"/>0x0010", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FEATURE_RO_COMPAT_DIR_NLINK\">EXT4_FEATURE_RO_COMPAT_DIR_NLINK</a><span class=\"ts\"/>0x0020", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FEATURE_RO_COMPAT_EXTRA_ISIZE\">EXT4_FEATURE_RO_COMPAT_EXTRA_ISIZE</a><span class=\"ts\"/>0x0040", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_COMPRESSION\">EXT4_FEATURE_INCOMPAT_COMPRESSION</a><span class=\"ts\"/>0x0001", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_FILETYPE\">EXT4_FEATURE_INCOMPAT_FILETYPE</a><span class=\"ts\"/><span class=\"ts\"/>0x0002", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_RECOVER\">EXT4_FEATURE_INCOMPAT_RECOVER</a><span class=\"ts\"/><span class=\"ts\"/>0x0004 <span class=\"comment\">/* Needs recovery */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_JOURNAL_DEV\">EXT4_FEATURE_INCOMPAT_JOURNAL_DEV</a><span class=\"ts\"/>0x0008 <span class=\"comment\">/* Journal device */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_META_BG\">EXT4_FEATURE_INCOMPAT_META_BG</a><span class=\"ts\"/><span class=\"ts\"/>0x0010", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_EXTENTS\">EXT4_FEATURE_INCOMPAT_EXTENTS</a><span class=\"ts\"/><span class=\"ts\"/>0x0040 <span class=\"comment\">/* extents support */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_64BIT\">EXT4_FEATURE_INCOMPAT_64BIT</a><span class=\"ts\"/><span class=\"ts\"/>0x0080", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_MMP\">EXT4_FEATURE_INCOMPAT_MMP</a>               0x0100", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_FLEX_BG\">EXT4_FEATURE_INCOMPAT_FLEX_BG</a><span class=\"ts\"/><span class=\"ts\"/>0x0200", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_EA_INODE\">EXT4_FEATURE_INCOMPAT_EA_INODE</a><span class=\"ts\"/><span class=\"ts\"/>0x0400 <span class=\"comment\">/* EA in inode */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_DIRDATA\">EXT4_FEATURE_INCOMPAT_DIRDATA</a><span class=\"ts\"/><span class=\"ts\"/>0x1000 <span class=\"comment\">/* data in dirent */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FEATURE_COMPAT_SUPP\">EXT4_FEATURE_COMPAT_SUPP</a><span class=\"ts\"/><a class=\"id\" href=\"#EXT2_FEATURE_COMPAT_EXT_ATTR\">EXT2_FEATURE_COMPAT_EXT_ATTR</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_SUPP\">EXT4_FEATURE_INCOMPAT_SUPP</a><span class=\"ts\"/>(<a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_FILETYPE\">EXT4_FEATURE_INCOMPAT_FILETYPE</a>| \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_RECOVER\">EXT4_FEATURE_INCOMPAT_RECOVER</a>| \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_META_BG\">EXT4_FEATURE_INCOMPAT_META_BG</a>| \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_EXTENTS\">EXT4_FEATURE_INCOMPAT_EXTENTS</a>| \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_64BIT\">EXT4_FEATURE_INCOMPAT_64BIT</a>| \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_FLEX_BG\">EXT4_FEATURE_INCOMPAT_FLEX_BG</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FEATURE_RO_COMPAT_SUPP\">EXT4_FEATURE_RO_COMPAT_SUPP</a><span class=\"ts\"/>(<a class=\"id\" href=\"#EXT4_FEATURE_RO_COMPAT_SPARSE_SUPER\">EXT4_FEATURE_RO_COMPAT_SPARSE_SUPER</a>| \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_FEATURE_RO_COMPAT_LARGE_FILE\">EXT4_FEATURE_RO_COMPAT_LARGE_FILE</a>| \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_FEATURE_RO_COMPAT_GDT_CSUM\">EXT4_FEATURE_RO_COMPAT_GDT_CSUM</a>| \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_FEATURE_RO_COMPAT_DIR_NLINK\">EXT4_FEATURE_RO_COMPAT_DIR_NLINK</a> | \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_FEATURE_RO_COMPAT_EXTRA_ISIZE\">EXT4_FEATURE_RO_COMPAT_EXTRA_ISIZE</a> | \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_FEATURE_RO_COMPAT_BTREE_DIR\">EXT4_FEATURE_RO_COMPAT_BTREE_DIR</a> |\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_FEATURE_RO_COMPAT_HUGE_FILE\">EXT4_FEATURE_RO_COMPAT_HUGE_FILE</a>)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Default values for user and/or group using reserved blocks</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_DEF_RESUID\">EXT4_DEF_RESUID</a><span class=\"ts\"/><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_DEF_RESGID\">EXT4_DEF_RESGID</a><span class=\"ts\"/><span class=\"ts\"/>0", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_DEF_INODE_READAHEAD_BLKS\">EXT4_DEF_INODE_READAHEAD_BLKS</a><span class=\"ts\"/>32", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Default mount options</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_DEFM_DEBUG\">EXT4_DEFM_DEBUG</a><span class=\"ts\"/><span class=\"ts\"/>0x0001", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_DEFM_BSDGROUPS\">EXT4_DEFM_BSDGROUPS</a><span class=\"ts\"/>0x0002", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_DEFM_XATTR_USER\">EXT4_DEFM_XATTR_USER</a><span class=\"ts\"/>0x0004", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_DEFM_ACL\">EXT4_DEFM_ACL</a><span class=\"ts\"/><span class=\"ts\"/>0x0008", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_DEFM_UID16\">EXT4_DEFM_UID16</a><span class=\"ts\"/><span class=\"ts\"/>0x0010", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_DEFM_JMODE\">EXT4_DEFM_JMODE</a><span class=\"ts\"/><span class=\"ts\"/>0x0060", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_DEFM_JMODE_DATA\">EXT4_DEFM_JMODE_DATA</a><span class=\"ts\"/>0x0020", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_DEFM_JMODE_ORDERED\">EXT4_DEFM_JMODE_ORDERED</a><span class=\"ts\"/>0x0040", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_DEFM_JMODE_WBACK\">EXT4_DEFM_JMODE_WBACK</a><span class=\"ts\"/>0x0060", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_DEFM_NOBARRIER\">EXT4_DEFM_NOBARRIER</a><span class=\"ts\"/>0x0100", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_DEFM_BLOCK_VALIDITY\">EXT4_DEFM_BLOCK_VALIDITY</a> 0x0200", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_DEFM_DISCARD\">EXT4_DEFM_DISCARD</a><span class=\"ts\"/>0x0400", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_DEFM_NODELALLOC\">EXT4_DEFM_NODELALLOC</a><span class=\"ts\"/>0x0800", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Default journal batch times</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_DEF_MIN_BATCH_TIME\">EXT4_DEF_MIN_BATCH_TIME</a><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_DEF_MAX_BATCH_TIME\">EXT4_DEF_MAX_BATCH_TIME</a><span class=\"ts\"/>15000 <span class=\"comment\">/* 15ms */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Minimum number of groups in a flexgroup before we separate out</span>", 
"<span class=\"comment\"> * directories into the first block group of a flexgroup</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FLEX_SIZE_DIR_ALLOC_SCHEME\">EXT4_FLEX_SIZE_DIR_ALLOC_SCHEME</a><span class=\"ts\"/>4", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Structure of a directory entry</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_NAME_LEN\">EXT4_NAME_LEN</a> 255", 
"", 
"struct <a class=\"id\" href=\"#ext4_dir_entry\">ext4_dir_entry</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Inode number */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#rec_len\">rec_len</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Directory entry length */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#name_len\">name_len</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Name length */</span>", 
"<span class=\"ts\"/>char<span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a>[<a class=\"id\" href=\"#EXT4_NAME_LEN\">EXT4_NAME_LEN</a>];<span class=\"ts\"/><span class=\"comment\">/* File name */</span>", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The new version of the directory entry.  Since EXT4 structures are</span>", 
"<span class=\"comment\"> * stored in intel byte order, and the name_len field could never be</span>", 
"<span class=\"comment\"> * bigger than 255 chars, it's safe to reclaim the extra byte for the</span>", 
"<span class=\"comment\"> * file_type field.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#ext4_dir_entry_2\">ext4_dir_entry_2</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Inode number */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#rec_len\">rec_len</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Directory entry length */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#name_len\">name_len</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Name length */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#file_type\">file_type</a>;", 
"<span class=\"ts\"/>char<span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a>[<a class=\"id\" href=\"#EXT4_NAME_LEN\">EXT4_NAME_LEN</a>];<span class=\"ts\"/><span class=\"comment\">/* File name */</span>", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Ext4 directory file types.  Only the low 3 bits are used.  The</span>", 
"<span class=\"comment\"> * other bits are reserved for now.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FT_UNKNOWN\">EXT4_FT_UNKNOWN</a><span class=\"ts\"/><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FT_REG_FILE\">EXT4_FT_REG_FILE</a><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FT_DIR\">EXT4_FT_DIR</a><span class=\"ts\"/><span class=\"ts\"/>2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FT_CHRDEV\">EXT4_FT_CHRDEV</a><span class=\"ts\"/><span class=\"ts\"/>3", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FT_BLKDEV\">EXT4_FT_BLKDEV</a><span class=\"ts\"/><span class=\"ts\"/>4", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FT_FIFO\">EXT4_FT_FIFO</a><span class=\"ts\"/><span class=\"ts\"/>5", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FT_SOCK\">EXT4_FT_SOCK</a><span class=\"ts\"/><span class=\"ts\"/>6", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FT_SYMLINK\">EXT4_FT_SYMLINK</a><span class=\"ts\"/><span class=\"ts\"/>7", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FT_MAX\">EXT4_FT_MAX</a><span class=\"ts\"/><span class=\"ts\"/>8", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * EXT4_DIR_PAD defines the directory entries boundaries</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NOTE: It must be a multiple of 4</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_DIR_PAD\">EXT4_DIR_PAD</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>4", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_DIR_ROUND\">EXT4_DIR_ROUND</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#EXT4_DIR_PAD\">EXT4_DIR_PAD</a> - 1)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_DIR_REC_LEN\">EXT4_DIR_REC_LEN</a>(<a class=\"id\" href=\"#name_len\">name_len</a>)<span class=\"ts\"/>(((<a class=\"id\" href=\"#name_len\">name_len</a>) + 8 + <a class=\"id\" href=\"#EXT4_DIR_ROUND\">EXT4_DIR_ROUND</a>) &amp; \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> ~<a class=\"id\" href=\"#EXT4_DIR_ROUND\">EXT4_DIR_ROUND</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MAX_REC_LEN\">EXT4_MAX_REC_LEN</a><span class=\"ts\"/><span class=\"ts\"/>((1<<16)-1)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * If we ever get support for fs block sizes &gt; page_size, we'll need</span>", 
"<span class=\"comment\"> * to remove the #if statements in the next two functions...</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int", 
"<a class=\"id\" href=\"#ext4_rec_len_from_disk\">ext4_rec_len_from_disk</a>(<a class=\"id\" href=\"#__le16\">__le16</a> <a class=\"id\" href=\"#dlen\">dlen</a>, unsigned <a class=\"id\" href=\"#blocksize\">blocksize</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#dlen\">dlen</a>);", 
"", 
"#if (<a class=\"id\" href=\"#PAGE_CACHE_SIZE\">PAGE_CACHE_SIZE</a> >= 65536)", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> == <a class=\"id\" href=\"#EXT4_MAX_REC_LEN\">EXT4_MAX_REC_LEN</a> || <a class=\"id\" href=\"#len\">len</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#blocksize\">blocksize</a>;", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#len\">len</a> &amp; 65532) | ((<a class=\"id\" href=\"#len\">len</a> &amp; 3) << 16);", 
"#else", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#__le16\">__le16</a> <a class=\"id\" href=\"#ext4_rec_len_to_disk\">ext4_rec_len_to_disk</a>(unsigned <a class=\"id\" href=\"#len\">len</a>, unsigned <a class=\"id\" href=\"#blocksize\">blocksize</a>)", 
"{", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#blocksize\">blocksize</a>) || (<a class=\"id\" href=\"#blocksize\">blocksize</a> &gt; (1 << 18)) || (<a class=\"id\" href=\"#len\">len</a> &amp; 3))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"#if (<a class=\"id\" href=\"#PAGE_CACHE_SIZE\">PAGE_CACHE_SIZE</a> >= 65536)", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &lt; 65536)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> == <a class=\"id\" href=\"#blocksize\">blocksize</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#blocksize\">blocksize</a> == 65536)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#EXT4_MAX_REC_LEN\">EXT4_MAX_REC_LEN</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(0);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>((<a class=\"id\" href=\"#len\">len</a> &amp; 65532) | ((<a class=\"id\" href=\"#len\">len</a> >> 16) &amp; 3));", 
"#else", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#len\">len</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Hash Tree Directory indexing</span>", 
"<span class=\"comment\"> * (c) Daniel Phillips, 2001</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#is_dx\">is_dx</a>(<a class=\"id\" href=\"#dir\">dir</a>) (<a class=\"id\" href=\"#EXT4_HAS_COMPAT_FEATURE\">EXT4_HAS_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#EXT4_FEATURE_COMPAT_DIR_INDEX\">EXT4_FEATURE_COMPAT_DIR_INDEX</a>) && \\", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ext4_test_inode_flag\">ext4_test_inode_flag</a>((<a class=\"id\" href=\"#dir\">dir</a>), <a class=\"id\" href=\"#EXT4_INODE_INDEX\">EXT4_INODE_INDEX</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_DIR_LINK_MAX\">EXT4_DIR_LINK_MAX</a>(<a class=\"id\" href=\"#dir\">dir</a>) (!<a class=\"id\" href=\"#is_dx\">is_dx</a>(<a class=\"id\" href=\"#dir\">dir</a>) && (<a class=\"id\" href=\"#dir\">dir</a>)-><a class=\"id\" href=\"#i_nlink\">i_nlink</a> >= <a class=\"id\" href=\"#EXT4_LINK_MAX\">EXT4_LINK_MAX</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_DIR_LINK_EMPTY\">EXT4_DIR_LINK_EMPTY</a>(<a class=\"id\" href=\"#dir\">dir</a>) ((<a class=\"id\" href=\"#dir\">dir</a>)-><a class=\"id\" href=\"#i_nlink\">i_nlink</a> == 2 || (<a class=\"id\" href=\"#dir\">dir</a>)-><a class=\"id\" href=\"#i_nlink\">i_nlink</a> == 1)", 
"", 
"<span class=\"comment\">/* Legal values for the dx_root hash_version field: */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DX_HASH_LEGACY\">DX_HASH_LEGACY</a><span class=\"ts\"/><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DX_HASH_HALF_MD4\">DX_HASH_HALF_MD4</a><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DX_HASH_TEA\">DX_HASH_TEA</a><span class=\"ts\"/><span class=\"ts\"/>2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DX_HASH_LEGACY_UNSIGNED\">DX_HASH_LEGACY_UNSIGNED</a><span class=\"ts\"/>3", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DX_HASH_HALF_MD4_UNSIGNED\">DX_HASH_HALF_MD4_UNSIGNED</a><span class=\"ts\"/>4", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DX_HASH_TEA_UNSIGNED\">DX_HASH_TEA_UNSIGNED</a><span class=\"ts\"/><span class=\"ts\"/>5", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"", 
"<span class=\"comment\">/* hash info structure used by the directory hash */</span>", 
"struct <a class=\"id\" href=\"#dx_hash_info\">dx_hash_info</a>", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#minor_hash\">minor_hash</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hash_version\">hash_version</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#seed\">seed</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_HTREE_EOF\">EXT4_HTREE_EOF</a><span class=\"ts\"/>0x7fffffff", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Control parameters used by ext4_htree_next_block</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HASH_NB_ALWAYS\">HASH_NB_ALWAYS</a><span class=\"ts\"/><span class=\"ts\"/>1", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Describe an inode's exact location on disk and in memory</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#ext4_iloc\">ext4_iloc</a>", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#block_group\">block_group</a>;", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#ext4_inode\">ext4_inode</a> *<a class=\"id\" href=\"#ext4_raw_inode\">ext4_raw_inode</a>(struct <a class=\"id\" href=\"#ext4_iloc\">ext4_iloc</a> *<a class=\"id\" href=\"#iloc\">iloc</a>)", 
"{", 
"<span class=\"ts\"/>return (struct <a class=\"id\" href=\"#ext4_inode\">ext4_inode</a> *) (<a class=\"id\" href=\"#iloc\">iloc</a>-><a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a> + <a class=\"id\" href=\"#iloc\">iloc</a>-><a class=\"id\" href=\"#offset\">offset</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This structure is stuffed into the struct file's private_data field</span>", 
"<span class=\"comment\"> * for directories.  It is where we put information so that we can do</span>", 
"<span class=\"comment\"> * readdir operations in hash tree order.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#dir_private_info\">dir_private_info</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_root\">rb_root</a><span class=\"ts\"/><a class=\"id\" href=\"#root\">root</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a><span class=\"ts\"/>*<a class=\"id\" href=\"#curr_node\">curr_node</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fname\">fname</a><span class=\"ts\"/>*<a class=\"id\" href=\"#extra_fname\">extra_fname</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_pos\">last_pos</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#curr_hash\">curr_hash</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#curr_minor_hash\">curr_minor_hash</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next_hash\">next_hash</a>;", 
"};", 
"", 
"<span class=\"comment\">/* calculate the first block number of the group */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a>", 
"<a class=\"id\" href=\"#ext4_group_first_block_no\">ext4_group_first_block_no</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#group_no\">group_no</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#group_no\">group_no</a> * (<a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a>)<a class=\"id\" href=\"#EXT4_BLOCKS_PER_GROUP\">EXT4_BLOCKS_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_first_data_block\">s_first_data_block</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Special error return code only used by dx_probe() and its callers.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ERR_BAD_DX_DIR\">ERR_BAD_DX_DIR</a><span class=\"ts\"/>-75000", 
"", 
"void <a class=\"id\" href=\"#ext4_get_group_no_and_offset\">ext4_get_group_no_and_offset</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#blocknr\">blocknr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> *<a class=\"id\" href=\"#blockgrpp\">blockgrpp</a>, <a class=\"id\" href=\"#ext4_grpblk_t\">ext4_grpblk_t</a> *<a class=\"id\" href=\"#offsetp\">offsetp</a>);", 
"", 
"extern struct <a class=\"id\" href=\"#proc_dir_entry\">proc_dir_entry</a> *<a class=\"id\" href=\"#ext4_proc_root\">ext4_proc_root</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Function prototypes</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Ok, these declarations are also in &lt;linux/kernel.h&gt; but none of the</span>", 
"<span class=\"comment\"> * ext4 source programs needs to include it so they are duplicated here.</span>", 
"<span class=\"comment\"> */</span>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NORET_TYPE\">NORET_TYPE</a><span class=\"ts\"/><span class=\"comment\">/**/</span>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ATTRIB_NORET\">ATTRIB_NORET</a><span class=\"ts\"/><a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#noreturn\">noreturn</a>))", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NORET_AND\">NORET_AND</a><span class=\"ts\"/><a class=\"id\" href=\"#noreturn\">noreturn</a>,", 
"", 
"<span class=\"comment\">/* bitmap.c */</span>", 
"extern unsigned int <a class=\"id\" href=\"#ext4_count_free\">ext4_count_free</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *, unsigned);", 
"", 
"<span class=\"comment\">/* balloc.c */</span>", 
"extern unsigned int <a class=\"id\" href=\"#ext4_block_group\">ext4_block_group</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#blocknr\">blocknr</a>);", 
"extern <a class=\"id\" href=\"#ext4_grpblk_t\">ext4_grpblk_t</a> <a class=\"id\" href=\"#ext4_block_group_offset\">ext4_block_group_offset</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#blocknr\">blocknr</a>);", 
"extern int <a class=\"id\" href=\"#ext4_bg_has_super\">ext4_bg_has_super</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#group\">group</a>);", 
"extern unsigned long <a class=\"id\" href=\"#ext4_bg_num_gdb\">ext4_bg_num_gdb</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#group\">group</a>);", 
"extern <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#ext4_new_meta_blocks\">ext4_new_meta_blocks</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#goal\">goal</a>, unsigned long *<a class=\"id\" href=\"#count\">count</a>, int *<a class=\"id\" href=\"#errp\">errp</a>);", 
"extern int <a class=\"id\" href=\"#ext4_claim_free_blocks\">ext4_claim_free_blocks</a>(struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a>, <a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#nblocks\">nblocks</a>);", 
"extern int <a class=\"id\" href=\"#ext4_has_free_blocks\">ext4_has_free_blocks</a>(struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a>, <a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#nblocks\">nblocks</a>);", 
"extern void <a class=\"id\" href=\"#ext4_add_groupblocks\">ext4_add_groupblocks</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#block\">block</a>, unsigned long <a class=\"id\" href=\"#count\">count</a>);", 
"extern <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#ext4_count_free_blocks\">ext4_count_free_blocks</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *);", 
"extern void <a class=\"id\" href=\"#ext4_check_blocks_bitmap\">ext4_check_blocks_bitmap</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *);", 
"extern struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> * <a class=\"id\" href=\"#ext4_get_group_desc\">ext4_get_group_desc</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> * <a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#block_group\">block_group</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> ** <a class=\"id\" href=\"#bh\">bh</a>);", 
"extern int <a class=\"id\" href=\"#ext4_should_retry_alloc\">ext4_should_retry_alloc</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int *<a class=\"id\" href=\"#retries\">retries</a>);", 
"struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#ext4_read_block_bitmap\">ext4_read_block_bitmap</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#block_group\">block_group</a>);", 
"extern unsigned <a class=\"id\" href=\"#ext4_init_block_bitmap\">ext4_init_block_bitmap</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#group\">group</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>);", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ext4_free_blocks_after_init\">ext4_free_blocks_after_init</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#desc\">desc</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_init_block_bitmap\">ext4_init_block_bitmap</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#desc\">desc</a>)", 
"", 
"<span class=\"comment\">/* dir.c */</span>", 
"extern int <a class=\"id\" href=\"#__ext4_check_dir_entry\">__ext4_check_dir_entry</a>(const char *, unsigned int, struct <a class=\"id\" href=\"#inode\">inode</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#ext4_dir_entry_2\">ext4_dir_entry_2</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *, unsigned int);", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ext4_check_dir_entry\">ext4_check_dir_entry</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#de\">de</a>, <a class=\"id\" href=\"#bh\">bh</a>, <a class=\"id\" href=\"#offset\">offset</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ext4_check_dir_entry\">__ext4_check_dir_entry</a>(<a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#__LINE__\">__LINE__</a>, (<a class=\"id\" href=\"#dir\">dir</a>), (<a class=\"id\" href=\"#de\">de</a>), (<a class=\"id\" href=\"#bh\">bh</a>), (<a class=\"id\" href=\"#offset\">offset</a>))", 
"extern int <a class=\"id\" href=\"#ext4_htree_store_dirent\">ext4_htree_store_dirent</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#dir_file\">dir_file</a>, <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#hash\">hash</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#minor_hash\">minor_hash</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#ext4_dir_entry_2\">ext4_dir_entry_2</a> *<a class=\"id\" href=\"#dirent\">dirent</a>);", 
"extern void <a class=\"id\" href=\"#ext4_htree_free_dir_info\">ext4_htree_free_dir_info</a>(struct <a class=\"id\" href=\"#dir_private_info\">dir_private_info</a> *<a class=\"id\" href=\"#p\">p</a>);", 
"", 
"<span class=\"comment\">/* fsync.c */</span>", 
"extern int <a class=\"id\" href=\"#ext4_sync_file\">ext4_sync_file</a>(struct <a class=\"id\" href=\"#file\">file</a> *, int);", 
"", 
"<span class=\"comment\">/* hash.c */</span>", 
"extern int <a class=\"id\" href=\"#ext4fs_dirhash\">ext4fs_dirhash</a>(const char *<a class=\"id\" href=\"#name\">name</a>, int <a class=\"id\" href=\"#len\">len</a>, struct", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#dx_hash_info\">dx_hash_info</a> *<a class=\"id\" href=\"#hinfo\">hinfo</a>);", 
"", 
"<span class=\"comment\">/* ialloc.c */</span>", 
"extern struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#ext4_new_inode\">ext4_new_inode</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *, struct <a class=\"id\" href=\"#inode\">inode</a> *, int,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const struct <a class=\"id\" href=\"#qstr\">qstr</a> *<a class=\"id\" href=\"#qstr\">qstr</a>, <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#goal\">goal</a>);", 
"extern void <a class=\"id\" href=\"#ext4_free_inode\">ext4_free_inode</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *, struct <a class=\"id\" href=\"#inode\">inode</a> *);", 
"extern struct <a class=\"id\" href=\"#inode\">inode</a> * <a class=\"id\" href=\"#ext4_orphan_get\">ext4_orphan_get</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *, unsigned long);", 
"extern unsigned long <a class=\"id\" href=\"#ext4_count_free_inodes\">ext4_count_free_inodes</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *);", 
"extern unsigned long <a class=\"id\" href=\"#ext4_count_dirs\">ext4_count_dirs</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *);", 
"extern void <a class=\"id\" href=\"#ext4_check_inodes_bitmap\">ext4_check_inodes_bitmap</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *);", 
"extern unsigned <a class=\"id\" href=\"#ext4_init_inode_bitmap\">ext4_init_inode_bitmap</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#group\">group</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>);", 
"extern void <a class=\"id\" href=\"#mark_bitmap_end\">mark_bitmap_end</a>(int <a class=\"id\" href=\"#start_bit\">start_bit</a>, int <a class=\"id\" href=\"#end_bit\">end_bit</a>, char *<a class=\"id\" href=\"#bitmap\">bitmap</a>);", 
"", 
"<span class=\"comment\">/* mballoc.c */</span>", 
"extern long <a class=\"id\" href=\"#ext4_mb_stats\">ext4_mb_stats</a>;", 
"extern long <a class=\"id\" href=\"#ext4_mb_max_to_scan\">ext4_mb_max_to_scan</a>;", 
"extern int <a class=\"id\" href=\"#ext4_mb_init\">ext4_mb_init</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *, int);", 
"extern int <a class=\"id\" href=\"#ext4_mb_release\">ext4_mb_release</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *);", 
"extern <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#ext4_mb_new_blocks\">ext4_mb_new_blocks</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_allocation_request\">ext4_allocation_request</a> *, int *);", 
"extern int <a class=\"id\" href=\"#ext4_mb_reserve_blocks\">ext4_mb_reserve_blocks</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *, int);", 
"extern void <a class=\"id\" href=\"#ext4_discard_preallocations\">ext4_discard_preallocations</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *);", 
"extern int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#init_ext4_mballoc\">init_ext4_mballoc</a>(void);", 
"extern void <a class=\"id\" href=\"#exit_ext4_mballoc\">exit_ext4_mballoc</a>(void);", 
"extern void <a class=\"id\" href=\"#ext4_free_blocks\">ext4_free_blocks</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>, <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#block\">block</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned long <a class=\"id\" href=\"#count\">count</a>, int <a class=\"id\" href=\"#flags\">flags</a>);", 
"extern int <a class=\"id\" href=\"#ext4_mb_add_groupinfo\">ext4_mb_add_groupinfo</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#i\">i</a>, struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>);", 
"extern int <a class=\"id\" href=\"#ext4_mb_get_buddy_cache_lock\">ext4_mb_get_buddy_cache_lock</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *, <a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a>);", 
"extern void <a class=\"id\" href=\"#ext4_mb_put_buddy_cache_lock\">ext4_mb_put_buddy_cache_lock</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a>, int);", 
"<span class=\"comment\">/* inode.c */</span>", 
"struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#ext4_getblk\">ext4_getblk</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *, struct <a class=\"id\" href=\"#inode\">inode</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a>, int, int *);", 
"struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#ext4_bread\">ext4_bread</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *, struct <a class=\"id\" href=\"#inode\">inode</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a>, int, int *);", 
"int <a class=\"id\" href=\"#ext4_get_block\">ext4_get_block</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#iblock\">iblock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh_result\">bh_result</a>, int <a class=\"id\" href=\"#create\">create</a>);", 
"", 
"extern struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#ext4_iget\">ext4_iget</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *, unsigned long);", 
"extern int  <a class=\"id\" href=\"#ext4_write_inode\">ext4_write_inode</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *, struct <a class=\"id\" href=\"#writeback_control\">writeback_control</a> *);", 
"extern int  <a class=\"id\" href=\"#ext4_setattr\">ext4_setattr</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *, struct <a class=\"id\" href=\"#iattr\">iattr</a> *);", 
"extern int  <a class=\"id\" href=\"#ext4_getattr\">ext4_getattr</a>(struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#mnt\">mnt</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#kstat\">kstat</a> *<a class=\"id\" href=\"#stat\">stat</a>);", 
"extern void <a class=\"id\" href=\"#ext4_evict_inode\">ext4_evict_inode</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *);", 
"extern void <a class=\"id\" href=\"#ext4_clear_inode\">ext4_clear_inode</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *);", 
"extern int  <a class=\"id\" href=\"#ext4_sync_inode\">ext4_sync_inode</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *, struct <a class=\"id\" href=\"#inode\">inode</a> *);", 
"extern void <a class=\"id\" href=\"#ext4_dirty_inode\">ext4_dirty_inode</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *);", 
"extern int <a class=\"id\" href=\"#ext4_change_inode_journal_flag\">ext4_change_inode_journal_flag</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *, int);", 
"extern int <a class=\"id\" href=\"#ext4_get_inode_loc\">ext4_get_inode_loc</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *, struct <a class=\"id\" href=\"#ext4_iloc\">ext4_iloc</a> *);", 
"extern int <a class=\"id\" href=\"#ext4_can_truncate\">ext4_can_truncate</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>);", 
"extern void <a class=\"id\" href=\"#ext4_truncate\">ext4_truncate</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *);", 
"extern int <a class=\"id\" href=\"#ext4_truncate_restart_trans\">ext4_truncate_restart_trans</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *, struct <a class=\"id\" href=\"#inode\">inode</a> *, int <a class=\"id\" href=\"#nblocks\">nblocks</a>);", 
"extern void <a class=\"id\" href=\"#ext4_set_inode_flags\">ext4_set_inode_flags</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *);", 
"extern void <a class=\"id\" href=\"#ext4_get_inode_flags\">ext4_get_inode_flags</a>(struct <a class=\"id\" href=\"#ext4_inode_info\">ext4_inode_info</a> *);", 
"extern int <a class=\"id\" href=\"#ext4_alloc_da_blocks\">ext4_alloc_da_blocks</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>);", 
"extern void <a class=\"id\" href=\"#ext4_set_aops\">ext4_set_aops</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>);", 
"extern int <a class=\"id\" href=\"#ext4_writepage_trans_blocks\">ext4_writepage_trans_blocks</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *);", 
"extern int <a class=\"id\" href=\"#ext4_meta_trans_blocks\">ext4_meta_trans_blocks</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *, int <a class=\"id\" href=\"#nrblocks\">nrblocks</a>, int <a class=\"id\" href=\"#idxblocks\">idxblocks</a>);", 
"extern int <a class=\"id\" href=\"#ext4_chunk_trans_blocks\">ext4_chunk_trans_blocks</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *, int <a class=\"id\" href=\"#nrblocks\">nrblocks</a>);", 
"extern int <a class=\"id\" href=\"#ext4_block_truncate_page\">ext4_block_truncate_page</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#address_space\">address_space</a> *<a class=\"id\" href=\"#mapping\">mapping</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#from\">from</a>);", 
"extern int <a class=\"id\" href=\"#ext4_page_mkwrite\">ext4_page_mkwrite</a>(struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>, struct <a class=\"id\" href=\"#vm_fault\">vm_fault</a> *<a class=\"id\" href=\"#vmf\">vmf</a>);", 
"extern <a class=\"id\" href=\"#qsize_t\">qsize_t</a> *<a class=\"id\" href=\"#ext4_get_reserved_space\">ext4_get_reserved_space</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>);", 
"extern int <a class=\"id\" href=\"#flush_completed_IO\">flush_completed_IO</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>);", 
"extern void <a class=\"id\" href=\"#ext4_da_update_reserve_space\">ext4_da_update_reserve_space</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#used\">used</a>, int <a class=\"id\" href=\"#quota_claim\">quota_claim</a>);", 
"<span class=\"comment\">/* ioctl.c */</span>", 
"extern long <a class=\"id\" href=\"#ext4_ioctl\">ext4_ioctl</a>(struct <a class=\"id\" href=\"#file\">file</a> *, unsigned int, unsigned long);", 
"extern long <a class=\"id\" href=\"#ext4_compat_ioctl\">ext4_compat_ioctl</a>(struct <a class=\"id\" href=\"#file\">file</a> *, unsigned int, unsigned long);", 
"", 
"<span class=\"comment\">/* migrate.c */</span>", 
"extern int <a class=\"id\" href=\"#ext4_ext_migrate\">ext4_ext_migrate</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *);", 
"", 
"<span class=\"comment\">/* namei.c */</span>", 
"extern int <a class=\"id\" href=\"#ext4_orphan_add\">ext4_orphan_add</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *, struct <a class=\"id\" href=\"#inode\">inode</a> *);", 
"extern int <a class=\"id\" href=\"#ext4_orphan_del\">ext4_orphan_del</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *, struct <a class=\"id\" href=\"#inode\">inode</a> *);", 
"extern int <a class=\"id\" href=\"#ext4_htree_fill_tree\">ext4_htree_fill_tree</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#dir_file\">dir_file</a>, <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#start_hash\">start_hash</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#start_minor_hash\">start_minor_hash</a>, <a class=\"id\" href=\"#__u32\">__u32</a> *<a class=\"id\" href=\"#next_hash\">next_hash</a>);", 
"", 
"<span class=\"comment\">/* resize.c */</span>", 
"extern int <a class=\"id\" href=\"#ext4_group_add\">ext4_group_add</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_new_group_data\">ext4_new_group_data</a> *<a class=\"id\" href=\"#input\">input</a>);", 
"extern int <a class=\"id\" href=\"#ext4_group_extend\">ext4_group_extend</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a> *<a class=\"id\" href=\"#es\">es</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#n_blocks_count\">n_blocks_count</a>);", 
"", 
"<span class=\"comment\">/* super.c */</span>", 
"extern void <a class=\"id\" href=\"#__ext4_error\">__ext4_error</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *, const char *, unsigned int,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const char *, ...)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__attribute__\">__attribute__</a> ((<a class=\"id\" href=\"#format\">format</a> (<a class=\"id\" href=\"#printf\">printf</a>, 4, 5)));", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ext4_error\">ext4_error</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#message\">message</a>...)<span class=\"ts\"/><a class=\"id\" href=\"#__ext4_error\">__ext4_error</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#__func__\">__func__</a>,<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#__LINE__\">__LINE__</a>, ## <a class=\"id\" href=\"#message\">message</a>)", 
"extern void <a class=\"id\" href=\"#ext4_error_inode\">ext4_error_inode</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *, const char *, unsigned int,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a>, const char *, ...)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__attribute__\">__attribute__</a> ((<a class=\"id\" href=\"#format\">format</a> (<a class=\"id\" href=\"#printf\">printf</a>, 5, 6)));", 
"extern void <a class=\"id\" href=\"#ext4_error_file\">ext4_error_file</a>(struct <a class=\"id\" href=\"#file\">file</a> *, const char *, unsigned int,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const char *, ...)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__attribute__\">__attribute__</a> ((<a class=\"id\" href=\"#format\">format</a> (<a class=\"id\" href=\"#printf\">printf</a>, 4, 5)));", 
"extern void <a class=\"id\" href=\"#__ext4_std_error\">__ext4_std_error</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *, const char *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned int, int);", 
"extern void <a class=\"id\" href=\"#__ext4_abort\">__ext4_abort</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *, const char *, unsigned int,", 
"<span class=\"ts\"/><span class=\"ts\"/>       const char *, ...)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__attribute__\">__attribute__</a> ((<a class=\"id\" href=\"#format\">format</a> (<a class=\"id\" href=\"#printf\">printf</a>, 4, 5)));", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ext4_abort\">ext4_abort</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#message\">message</a>...)<span class=\"ts\"/><a class=\"id\" href=\"#__ext4_abort\">__ext4_abort</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#__func__\">__func__</a>, \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#__LINE__\">__LINE__</a>, ## <a class=\"id\" href=\"#message\">message</a>)", 
"extern void <a class=\"id\" href=\"#__ext4_warning\">__ext4_warning</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *, const char *, unsigned int,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const char *, ...)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__attribute__\">__attribute__</a> ((<a class=\"id\" href=\"#format\">format</a> (<a class=\"id\" href=\"#printf\">printf</a>, 4, 5)));", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ext4_warning\">ext4_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#message\">message</a>...)<span class=\"ts\"/><a class=\"id\" href=\"#__ext4_warning\">__ext4_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#__func__\">__func__</a>, \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#__LINE__\">__LINE__</a>, ## <a class=\"id\" href=\"#message\">message</a>)", 
"extern void <a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *, const char *, const char *, ...)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__attribute__\">__attribute__</a> ((<a class=\"id\" href=\"#format\">format</a> (<a class=\"id\" href=\"#printf\">printf</a>, 3, 4)));", 
"extern void <a class=\"id\" href=\"#__ext4_grp_locked_error\">__ext4_grp_locked_error</a>(const char *, unsigned int, \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#super_block\">super_block</a> *, <a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a>, \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    unsigned long, <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a>, \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const char *, ...)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__attribute__\">__attribute__</a> ((<a class=\"id\" href=\"#format\">format</a> (<a class=\"id\" href=\"#printf\">printf</a>, 7, 8)));", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ext4_grp_locked_error\">ext4_grp_locked_error</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#grp\">grp</a>, <a class=\"id\" href=\"#message\">message</a>...) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ext4_grp_locked_error\">__ext4_grp_locked_error</a>(<a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#__LINE__\">__LINE__</a>, (<a class=\"id\" href=\"#sb\">sb</a>), (<a class=\"id\" href=\"#grp\">grp</a>), ## <a class=\"id\" href=\"#message\">message</a>)", 
"extern void <a class=\"id\" href=\"#ext4_update_dynamic_rev\">ext4_update_dynamic_rev</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>);", 
"extern int <a class=\"id\" href=\"#ext4_update_compat_feature\">ext4_update_compat_feature</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#compat\">compat</a>);", 
"extern int <a class=\"id\" href=\"#ext4_update_rocompat_feature\">ext4_update_rocompat_feature</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#rocompat\">rocompat</a>);", 
"extern int <a class=\"id\" href=\"#ext4_update_incompat_feature\">ext4_update_incompat_feature</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#incompat\">incompat</a>);", 
"extern <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#ext4_block_bitmap\">ext4_block_bitmap</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#bg\">bg</a>);", 
"extern <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#ext4_inode_bitmap\">ext4_inode_bitmap</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#bg\">bg</a>);", 
"extern <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#ext4_inode_table\">ext4_inode_table</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#bg\">bg</a>);", 
"extern <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#ext4_free_blks_count\">ext4_free_blks_count</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#bg\">bg</a>);", 
"extern <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#ext4_free_inodes_count\">ext4_free_inodes_count</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#bg\">bg</a>);", 
"extern <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#ext4_used_dirs_count\">ext4_used_dirs_count</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#bg\">bg</a>);", 
"extern <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#ext4_itable_unused_count\">ext4_itable_unused_count</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#bg\">bg</a>);", 
"extern void <a class=\"id\" href=\"#ext4_block_bitmap_set\">ext4_block_bitmap_set</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#bg\">bg</a>, <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#blk\">blk</a>);", 
"extern void <a class=\"id\" href=\"#ext4_inode_bitmap_set\">ext4_inode_bitmap_set</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#bg\">bg</a>, <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#blk\">blk</a>);", 
"extern void <a class=\"id\" href=\"#ext4_inode_table_set\">ext4_inode_table_set</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#bg\">bg</a>, <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#blk\">blk</a>);", 
"extern void <a class=\"id\" href=\"#ext4_free_blks_set\">ext4_free_blks_set</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#bg\">bg</a>, <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#count\">count</a>);", 
"extern void <a class=\"id\" href=\"#ext4_free_inodes_set\">ext4_free_inodes_set</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#bg\">bg</a>, <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#count\">count</a>);", 
"extern void <a class=\"id\" href=\"#ext4_used_dirs_set\">ext4_used_dirs_set</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#bg\">bg</a>, <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#count\">count</a>);", 
"extern void <a class=\"id\" href=\"#ext4_itable_unused_set\">ext4_itable_unused_set</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#bg\">bg</a>, <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#count\">count</a>);", 
"extern <a class=\"id\" href=\"#__le16\">__le16</a> <a class=\"id\" href=\"#ext4_group_desc_csum\">ext4_group_desc_csum</a>(struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a>, <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#group\">group</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#gdp\">gdp</a>);", 
"extern int <a class=\"id\" href=\"#ext4_group_desc_csum_verify\">ext4_group_desc_csum_verify</a>(struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a>, <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#group\">group</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#gdp\">gdp</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#ext4_blocks_count\">ext4_blocks_count</a>(struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a> *<a class=\"id\" href=\"#es\">es</a>)", 
"{", 
"<span class=\"ts\"/>return ((<a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a>)<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_blocks_count_hi\">s_blocks_count_hi</a>) << 32) |", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_blocks_count_lo\">s_blocks_count_lo</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#ext4_r_blocks_count\">ext4_r_blocks_count</a>(struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a> *<a class=\"id\" href=\"#es\">es</a>)", 
"{", 
"<span class=\"ts\"/>return ((<a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a>)<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_r_blocks_count_hi\">s_r_blocks_count_hi</a>) << 32) |", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_r_blocks_count_lo\">s_r_blocks_count_lo</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#ext4_free_blocks_count\">ext4_free_blocks_count</a>(struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a> *<a class=\"id\" href=\"#es\">es</a>)", 
"{", 
"<span class=\"ts\"/>return ((<a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a>)<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_free_blocks_count_hi\">s_free_blocks_count_hi</a>) << 32) |", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_free_blocks_count_lo\">s_free_blocks_count_lo</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ext4_blocks_count_set\">ext4_blocks_count_set</a>(struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a> *<a class=\"id\" href=\"#es\">es</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#blk\">blk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_blocks_count_lo\">s_blocks_count_lo</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>((<a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#blk\">blk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_blocks_count_hi\">s_blocks_count_hi</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#blk\">blk</a> >> 32);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ext4_free_blocks_count_set\">ext4_free_blocks_count_set</a>(struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a> *<a class=\"id\" href=\"#es\">es</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#blk\">blk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_free_blocks_count_lo\">s_free_blocks_count_lo</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>((<a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#blk\">blk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_free_blocks_count_hi\">s_free_blocks_count_hi</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#blk\">blk</a> >> 32);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ext4_r_blocks_count_set\">ext4_r_blocks_count_set</a>(struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a> *<a class=\"id\" href=\"#es\">es</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#blk\">blk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_r_blocks_count_lo\">s_r_blocks_count_lo</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>((<a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#blk\">blk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_r_blocks_count_hi\">s_r_blocks_count_hi</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#blk\">blk</a> >> 32);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#ext4_isize\">ext4_isize</a>(struct <a class=\"id\" href=\"#ext4_inode\">ext4_inode</a> *<a class=\"id\" href=\"#raw_inode\">raw_inode</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#S_ISREG\">S_ISREG</a>(<a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return ((<a class=\"id\" href=\"#loff_t\">loff_t</a>)<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#i_size_high\">i_size_high</a>) << 32) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#i_size_lo\">i_size_lo</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#loff_t\">loff_t</a>) <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#i_size_lo\">i_size_lo</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ext4_isize_set\">ext4_isize_set</a>(struct <a class=\"id\" href=\"#ext4_inode\">ext4_inode</a> *<a class=\"id\" href=\"#raw_inode\">raw_inode</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#i_size\">i_size</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#i_size_lo\">i_size_lo</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#i_size\">i_size</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#i_size_high\">i_size_high</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#i_size\">i_size</a> >> 32);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a>", 
"struct <a class=\"id\" href=\"#ext4_group_info\">ext4_group_info</a> *<a class=\"id\" href=\"#ext4_get_group_info\">ext4_get_group_info</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#group\">group</a>)", 
"{", 
"<span class=\"ts\"/> struct <a class=\"id\" href=\"#ext4_group_info\">ext4_group_info</a> ***<a class=\"id\" href=\"#grp_info\">grp_info</a>;", 
"<span class=\"ts\"/> long <a class=\"id\" href=\"#indexv\">indexv</a>, <a class=\"id\" href=\"#indexh\">indexh</a>;", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#grp_info\">grp_info</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_group_info\">s_group_info</a>;", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#indexv\">indexv</a> = <a class=\"id\" href=\"#group\">group</a> >> (<a class=\"id\" href=\"#EXT4_DESC_PER_BLOCK_BITS\">EXT4_DESC_PER_BLOCK_BITS</a>(<a class=\"id\" href=\"#sb\">sb</a>));", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#indexh\">indexh</a> = <a class=\"id\" href=\"#group\">group</a> &amp; ((<a class=\"id\" href=\"#EXT4_DESC_PER_BLOCK\">EXT4_DESC_PER_BLOCK</a>(<a class=\"id\" href=\"#sb\">sb</a>)) - 1);", 
"<span class=\"ts\"/> return <a class=\"id\" href=\"#grp_info\">grp_info</a>[<a class=\"id\" href=\"#indexv\">indexv</a>][<a class=\"id\" href=\"#indexh\">indexh</a>];", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Reading s_groups_count requires using smp_rmb() afterwards.  See</span>", 
"<span class=\"comment\"> * the locking protocol documented in the comments of ext4_group_add()</span>", 
"<span class=\"comment\"> * in resize.c</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#ext4_get_groups_count\">ext4_get_groups_count</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a><span class=\"ts\"/><a class=\"id\" href=\"#ngroups\">ngroups</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_groups_count\">s_groups_count</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#smp_rmb\">smp_rmb</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ngroups\">ngroups</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#ext4_flex_group\">ext4_flex_group</a>(struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#block_group\">block_group</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#block_group\">block_group</a> >> <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_log_groups_per_flex\">s_log_groups_per_flex</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#ext4_flex_bg_size\">ext4_flex_bg_size</a>(struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a>)", 
"{", 
"<span class=\"ts\"/>return 1 << <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_log_groups_per_flex\">s_log_groups_per_flex</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ext4_std_error\">ext4_std_error</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#errno\">errno</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#errno\">errno</a>))<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__ext4_std_error\">__ext4_std_error</a>((<a class=\"id\" href=\"#sb\">sb</a>), <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#__LINE__\">__LINE__</a>, (<a class=\"id\" href=\"#errno\">errno</a>));<span class=\"ts\"/>\\", 
"} while (0)", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"<span class=\"comment\">/* Each CPU can accumulate percpu_counter_batch blocks in their local</span>", 
"<span class=\"comment\"> * counters. So we need to make sure we have free blocks more</span>", 
"<span class=\"comment\"> * than percpu_counter_batch  * nr_cpu_ids. Also add a window of 4 times.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FREEBLOCKS_WATERMARK\">EXT4_FREEBLOCKS_WATERMARK</a> (4 * (<a class=\"id\" href=\"#percpu_counter_batch\">percpu_counter_batch</a> * <a class=\"id\" href=\"#nr_cpu_ids\">nr_cpu_ids</a>))", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FREEBLOCKS_WATERMARK\">EXT4_FREEBLOCKS_WATERMARK</a> 0", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ext4_update_i_disksize\">ext4_update_i_disksize</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#newsize\">newsize</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * XXX: replace with spinlock if seen contended -bzzz</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_data_sem\">i_data_sem</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#newsize\">newsize</a> &gt; <a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_disksize\">i_disksize</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_disksize\">i_disksize</a> = <a class=\"id\" href=\"#newsize\">newsize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_data_sem\">i_data_sem</a>);", 
"<span class=\"ts\"/>return ;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#ext4_group_info\">ext4_group_info</a> {", 
"<span class=\"ts\"/>unsigned long   <a class=\"id\" href=\"#bb_state\">bb_state</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_root\">rb_root</a>  <a class=\"id\" href=\"#bb_free_root\">bb_free_root</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_grpblk_t\">ext4_grpblk_t</a><span class=\"ts\"/><a class=\"id\" href=\"#bb_first_free\">bb_first_free</a>;<span class=\"ts\"/><span class=\"comment\">/* first free block */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_grpblk_t\">ext4_grpblk_t</a><span class=\"ts\"/><a class=\"id\" href=\"#bb_free\">bb_free</a>;<span class=\"ts\"/><span class=\"comment\">/* total free blocks */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_grpblk_t\">ext4_grpblk_t</a><span class=\"ts\"/><a class=\"id\" href=\"#bb_fragments\">bb_fragments</a>;<span class=\"ts\"/><span class=\"comment\">/* nr of freespace fragments */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_grpblk_t\">ext4_grpblk_t</a><span class=\"ts\"/><a class=\"id\" href=\"#bb_largest_free_order\">bb_largest_free_order</a>;<span class=\"comment\">/* order of largest frag in BG */</span>", 
"<span class=\"ts\"/>struct          <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#bb_prealloc_list\">bb_prealloc_list</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#DOUBLE_CHECK\">DOUBLE_CHECK</a>", 
"<span class=\"ts\"/>void            *<a class=\"id\" href=\"#bb_bitmap\">bb_bitmap</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rw_semaphore\">rw_semaphore</a> <a class=\"id\" href=\"#alloc_sem\">alloc_sem</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_grpblk_t\">ext4_grpblk_t</a><span class=\"ts\"/><a class=\"id\" href=\"#bb_counters\">bb_counters</a>[];<span class=\"ts\"/><span class=\"comment\">/* Nr of free power-of-two-block</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * regions, index is order.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * bb_counters[3] = 5 means</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * 5 free 8-block regions. */</span>", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_GROUP_INFO_NEED_INIT_BIT\">EXT4_GROUP_INFO_NEED_INIT_BIT</a><span class=\"ts\"/>0", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MB_GRP_NEED_INIT\">EXT4_MB_GRP_NEED_INIT</a>(<a class=\"id\" href=\"#grp\">grp</a>)<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>(<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#EXT4_GROUP_INFO_NEED_INIT_BIT\">EXT4_GROUP_INFO_NEED_INIT_BIT</a>, &amp;((<a class=\"id\" href=\"#grp\">grp</a>)-><a class=\"id\" href=\"#bb_state\">bb_state</a>)))", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MAX_CONTENTION\">EXT4_MAX_CONTENTION</a><span class=\"ts\"/><span class=\"ts\"/>8", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_CONTENTION_THRESHOLD\">EXT4_CONTENTION_THRESHOLD</a><span class=\"ts\"/>2", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> *<a class=\"id\" href=\"#ext4_group_lock_ptr\">ext4_group_lock_ptr</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#group\">group</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bgl_lock_ptr\">bgl_lock_ptr</a>(<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_blockgroup_lock\">s_blockgroup_lock</a>, <a class=\"id\" href=\"#group\">group</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Returns true if the filesystem is busy enough that attempts to</span>", 
"<span class=\"comment\"> * access the block group locks has run into contention.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ext4_fs_is_busy\">ext4_fs_is_busy</a>(struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_lock_busy\">s_lock_busy</a>) &gt; <a class=\"id\" href=\"#EXT4_CONTENTION_THRESHOLD\">EXT4_CONTENTION_THRESHOLD</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ext4_lock_group\">ext4_lock_group</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#group\">group</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a> = <a class=\"id\" href=\"#ext4_group_lock_ptr\">ext4_group_lock_ptr</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#group\">group</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#spin_trylock\">spin_trylock</a>(<a class=\"id\" href=\"#lock\">lock</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We're able to grab the lock right away, so drop the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * lock contention counter.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_add_unless\">atomic_add_unless</a>(&amp;<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_lock_busy\">s_lock_busy</a>, -1, 0);", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The lock is busy, so bump the contention counter,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * and then wait on the spin lock.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_add_unless\">atomic_add_unless</a>(&amp;<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_lock_busy\">s_lock_busy</a>, 1,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#EXT4_MAX_CONTENTION\">EXT4_MAX_CONTENTION</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ext4_unlock_group\">ext4_unlock_group</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#group\">group</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(<a class=\"id\" href=\"#ext4_group_lock_ptr\">ext4_group_lock_ptr</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#group\">group</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ext4_mark_super_dirty\">ext4_mark_super_dirty</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_dirt\">s_dirt</a> =1;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Inodes and files operations</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/* dir.c */</span>", 
"extern const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#ext4_dir_operations\">ext4_dir_operations</a>;", 
"", 
"<span class=\"comment\">/* file.c */</span>", 
"extern const struct <a class=\"id\" href=\"#inode_operations\">inode_operations</a> <a class=\"id\" href=\"#ext4_file_inode_operations\">ext4_file_inode_operations</a>;", 
"extern const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#ext4_file_operations\">ext4_file_operations</a>;", 
"", 
"<span class=\"comment\">/* namei.c */</span>", 
"extern const struct <a class=\"id\" href=\"#inode_operations\">inode_operations</a> <a class=\"id\" href=\"#ext4_dir_inode_operations\">ext4_dir_inode_operations</a>;", 
"extern const struct <a class=\"id\" href=\"#inode_operations\">inode_operations</a> <a class=\"id\" href=\"#ext4_special_inode_operations\">ext4_special_inode_operations</a>;", 
"extern struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#ext4_get_parent\">ext4_get_parent</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#child\">child</a>);", 
"", 
"<span class=\"comment\">/* symlink.c */</span>", 
"extern const struct <a class=\"id\" href=\"#inode_operations\">inode_operations</a> <a class=\"id\" href=\"#ext4_symlink_inode_operations\">ext4_symlink_inode_operations</a>;", 
"extern const struct <a class=\"id\" href=\"#inode_operations\">inode_operations</a> <a class=\"id\" href=\"#ext4_fast_symlink_inode_operations\">ext4_fast_symlink_inode_operations</a>;", 
"", 
"<span class=\"comment\">/* block_validity */</span>", 
"extern void <a class=\"id\" href=\"#ext4_release_system_zone\">ext4_release_system_zone</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>);", 
"extern int <a class=\"id\" href=\"#ext4_setup_system_zone\">ext4_setup_system_zone</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>);", 
"extern int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#init_ext4_system_zone\">init_ext4_system_zone</a>(void);", 
"extern void <a class=\"id\" href=\"#exit_ext4_system_zone\">exit_ext4_system_zone</a>(void);", 
"extern int <a class=\"id\" href=\"#ext4_data_block_valid\">ext4_data_block_valid</a>(struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#start_blk\">start_blk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned int <a class=\"id\" href=\"#count\">count</a>);", 
"", 
"<span class=\"comment\">/* extents.c */</span>", 
"extern int <a class=\"id\" href=\"#ext4_ext_tree_init\">ext4_ext_tree_init</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *);", 
"extern int <a class=\"id\" href=\"#ext4_ext_writepage_trans_blocks\">ext4_ext_writepage_trans_blocks</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *, int);", 
"extern int <a class=\"id\" href=\"#ext4_ext_index_trans_blocks\">ext4_ext_index_trans_blocks</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, int <a class=\"id\" href=\"#nrblocks\">nrblocks</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       int <a class=\"id\" href=\"#chunk\">chunk</a>);", 
"extern int <a class=\"id\" href=\"#ext4_ext_map_blocks\">ext4_ext_map_blocks</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#ext4_map_blocks\">ext4_map_blocks</a> *<a class=\"id\" href=\"#map\">map</a>, int <a class=\"id\" href=\"#flags\">flags</a>);", 
"extern void <a class=\"id\" href=\"#ext4_ext_truncate\">ext4_ext_truncate</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *);", 
"extern void <a class=\"id\" href=\"#ext4_ext_init\">ext4_ext_init</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *);", 
"extern void <a class=\"id\" href=\"#ext4_ext_release\">ext4_ext_release</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *);", 
"extern long <a class=\"id\" href=\"#ext4_fallocate\">ext4_fallocate</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, int <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#offset\">offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#len\">len</a>);", 
"extern int <a class=\"id\" href=\"#ext4_convert_unwritten_extents\">ext4_convert_unwritten_extents</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#offset\">offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#len\">len</a>);", 
"extern int <a class=\"id\" href=\"#ext4_map_blocks\">ext4_map_blocks</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#ext4_map_blocks\">ext4_map_blocks</a> *<a class=\"id\" href=\"#map\">map</a>, int <a class=\"id\" href=\"#flags\">flags</a>);", 
"extern int <a class=\"id\" href=\"#ext4_fiemap\">ext4_fiemap</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#fiemap_extent_info\">fiemap_extent_info</a> *<a class=\"id\" href=\"#fieinfo\">fieinfo</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"comment\">/* move_extent.c */</span>", 
"extern int <a class=\"id\" href=\"#ext4_move_extents\">ext4_move_extents</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#o_filp\">o_filp</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#d_filp\">d_filp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#start_orig\">start_orig</a>, <a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#start_donor\">start_donor</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#__u64\">__u64</a> *<a class=\"id\" href=\"#moved_len\">moved_len</a>);", 
"", 
"", 
"<span class=\"comment\">/* BH_Uninit flag: blocks are allocated but uninitialized on disk */</span>", 
"enum <a class=\"id\" href=\"#ext4_state_bits\">ext4_state_bits</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BH_Uninit\">BH_Uninit</a><span class=\"ts\"/><span class=\"comment\">/* blocks are allocated but uninitialized on disk */</span>", 
"<span class=\"ts\"/>  = <a class=\"id\" href=\"#BH_JBDPrivateStart\">BH_JBDPrivateStart</a>,", 
"};", 
"", 
"<a class=\"id\" href=\"#BUFFER_FNS\">BUFFER_FNS</a>(<a class=\"id\" href=\"#Uninit\">Uninit</a>, <a class=\"id\" href=\"#uninit\">uninit</a>)", 
"<a class=\"id\" href=\"#TAS_BUFFER_FNS\">TAS_BUFFER_FNS</a>(<a class=\"id\" href=\"#Uninit\">Uninit</a>, <a class=\"id\" href=\"#uninit\">uninit</a>)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Add new method to test wether block and inode bitmaps are properly</span>", 
"<span class=\"comment\"> * initialized. With uninit_bg reading the block from disk is not enough</span>", 
"<span class=\"comment\"> * to mark the bitmap uptodate. We need to also zero-out the bitmap</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BH_BITMAP_UPTODATE\">BH_BITMAP_UPTODATE</a> <a class=\"id\" href=\"#BH_JBDPrivateStart\">BH_JBDPrivateStart</a>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#bitmap_uptodate\">bitmap_uptodate</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#buffer_uptodate\">buffer_uptodate</a>(<a class=\"id\" href=\"#bh\">bh</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#BH_BITMAP_UPTODATE\">BH_BITMAP_UPTODATE</a>, &amp;(<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#b_state\">b_state</a>));", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#set_bitmap_uptodate\">set_bitmap_uptodate</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#BH_BITMAP_UPTODATE\">BH_BITMAP_UPTODATE</a>, &amp;(<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#b_state\">b_state</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#in_range\">in_range</a>(<a class=\"id\" href=\"#b\">b</a>, <a class=\"id\" href=\"#first\">first</a>, <a class=\"id\" href=\"#len\">len</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#b\">b</a>) >= (<a class=\"id\" href=\"#first\">first</a>) && (<a class=\"id\" href=\"#b\">b</a>) <= (<a class=\"id\" href=\"#first\">first</a>) + (<a class=\"id\" href=\"#len\">len</a>) - 1)", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* __KERNEL__ */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* _EXT4_H */</span>", 
];
xr_frag_insert('l/4a/83fd988c34d06fabc12eb41c1cd38010868d5c.xr', __xr_tmp);
