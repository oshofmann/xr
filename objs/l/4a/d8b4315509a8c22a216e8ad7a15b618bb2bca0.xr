var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Fast batching percpu counters.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#percpu_counter\">percpu_counter</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#notifier\">notifier</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mutex\">mutex</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cpu\">cpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static <a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#percpu_counters\">percpu_counters</a>);", 
"static <a class=\"id\" href=\"#DEFINE_MUTEX\">DEFINE_MUTEX</a>(<a class=\"id\" href=\"#percpu_counters_lock\">percpu_counters_lock</a>);", 
"", 
"void <a class=\"id\" href=\"#percpu_counter_set\">percpu_counter_set</a>(struct <a class=\"id\" href=\"#percpu_counter\">percpu_counter</a> *<a class=\"id\" href=\"#fbc\">fbc</a>, <a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#amount\">amount</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#fbc\">fbc</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_possible_cpu\">for_each_possible_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s32\">s32</a> *<a class=\"id\" href=\"#pcount\">pcount</a> = <a class=\"id\" href=\"#per_cpu_ptr\">per_cpu_ptr</a>(<a class=\"id\" href=\"#fbc\">fbc</a>-><a class=\"id\" href=\"#counters\">counters</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#pcount\">pcount</a> = 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fbc\">fbc</a>-><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#amount\">amount</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#fbc\">fbc</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#percpu_counter_set\">percpu_counter_set</a>);", 
"", 
"void <a class=\"id\" href=\"#__percpu_counter_add\">__percpu_counter_add</a>(struct <a class=\"id\" href=\"#percpu_counter\">percpu_counter</a> *<a class=\"id\" href=\"#fbc\">fbc</a>, <a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#amount\">amount</a>, <a class=\"id\" href=\"#s32\">s32</a> <a class=\"id\" href=\"#batch\">batch</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s32\">s32</a> *<a class=\"id\" href=\"#pcount\">pcount</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#get_cpu\">get_cpu</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pcount\">pcount</a> = <a class=\"id\" href=\"#per_cpu_ptr\">per_cpu_ptr</a>(<a class=\"id\" href=\"#fbc\">fbc</a>-><a class=\"id\" href=\"#counters\">counters</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = *<a class=\"id\" href=\"#pcount\">pcount</a> + <a class=\"id\" href=\"#amount\">amount</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> >= <a class=\"id\" href=\"#batch\">batch</a> || <a class=\"id\" href=\"#count\">count</a> <= -<a class=\"id\" href=\"#batch\">batch</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#fbc\">fbc</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fbc\">fbc</a>-><a class=\"id\" href=\"#count\">count</a> += <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#pcount\">pcount</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#fbc\">fbc</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#pcount\">pcount</a> = <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_cpu\">put_cpu</a>();", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__percpu_counter_add\">__percpu_counter_add</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Add up all the per-cpu counts, return the result.  This is a more accurate</span>", 
"<span class=\"comment\"> * but much slower version of percpu_counter_read_positive()</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#__percpu_counter_sum\">__percpu_counter_sum</a>(struct <a class=\"id\" href=\"#percpu_counter\">percpu_counter</a> *<a class=\"id\" href=\"#fbc\">fbc</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#fbc\">fbc</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#fbc\">fbc</a>-><a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_online_cpu\">for_each_online_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s32\">s32</a> *<a class=\"id\" href=\"#pcount\">pcount</a> = <a class=\"id\" href=\"#per_cpu_ptr\">per_cpu_ptr</a>(<a class=\"id\" href=\"#fbc\">fbc</a>-><a class=\"id\" href=\"#counters\">counters</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> += *<a class=\"id\" href=\"#pcount\">pcount</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#fbc\">fbc</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__percpu_counter_sum\">__percpu_counter_sum</a>);", 
"", 
"int <a class=\"id\" href=\"#__percpu_counter_init\">__percpu_counter_init</a>(struct <a class=\"id\" href=\"#percpu_counter\">percpu_counter</a> *<a class=\"id\" href=\"#fbc\">fbc</a>, <a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#amount\">amount</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#lock_class_key\">lock_class_key</a> *<a class=\"id\" href=\"#key\">key</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#fbc\">fbc</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lockdep_set_class\">lockdep_set_class</a>(&amp;<a class=\"id\" href=\"#fbc\">fbc</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#key\">key</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fbc\">fbc</a>-><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#amount\">amount</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fbc\">fbc</a>-><a class=\"id\" href=\"#counters\">counters</a> = <a class=\"id\" href=\"#alloc_percpu\">alloc_percpu</a>(<a class=\"id\" href=\"#s32\">s32</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#fbc\">fbc</a>-><a class=\"id\" href=\"#counters\">counters</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HOTPLUG_CPU\">CONFIG_HOTPLUG_CPU</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#percpu_counters_lock\">percpu_counters_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#fbc\">fbc</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#percpu_counters\">percpu_counters</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#percpu_counters_lock\">percpu_counters_lock</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__percpu_counter_init\">__percpu_counter_init</a>);", 
"", 
"void <a class=\"id\" href=\"#percpu_counter_destroy\">percpu_counter_destroy</a>(struct <a class=\"id\" href=\"#percpu_counter\">percpu_counter</a> *<a class=\"id\" href=\"#fbc\">fbc</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#fbc\">fbc</a>-><a class=\"id\" href=\"#counters\">counters</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HOTPLUG_CPU\">CONFIG_HOTPLUG_CPU</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#percpu_counters_lock\">percpu_counters_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#fbc\">fbc</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#percpu_counters_lock\">percpu_counters_lock</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_percpu\">free_percpu</a>(<a class=\"id\" href=\"#fbc\">fbc</a>-><a class=\"id\" href=\"#counters\">counters</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fbc\">fbc</a>-><a class=\"id\" href=\"#counters\">counters</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#percpu_counter_destroy\">percpu_counter_destroy</a>);", 
"", 
"int <a class=\"id\" href=\"#percpu_counter_batch\">percpu_counter_batch</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = 32;", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#percpu_counter_batch\">percpu_counter_batch</a>);", 
"", 
"static void <a class=\"id\" href=\"#compute_batch_value\">compute_batch_value</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nr\">nr</a> = <a class=\"id\" href=\"#num_online_cpus\">num_online_cpus</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#percpu_counter_batch\">percpu_counter_batch</a> = <a class=\"id\" href=\"#max\">max</a>(32, <a class=\"id\" href=\"#nr\">nr</a>*2);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#percpu_counter_hotcpu_callback\">percpu_counter_hotcpu_callback</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nb\">nb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#action\">action</a>, void *<a class=\"id\" href=\"#hcpu\">hcpu</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HOTPLUG_CPU\">CONFIG_HOTPLUG_CPU</a>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#percpu_counter\">percpu_counter</a> *<a class=\"id\" href=\"#fbc\">fbc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compute_batch_value\">compute_batch_value</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#action\">action</a> != <a class=\"id\" href=\"#CPU_DEAD\">CPU_DEAD</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NOTIFY_OK\">NOTIFY_OK</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpu\">cpu</a> = (unsigned long)<a class=\"id\" href=\"#hcpu\">hcpu</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#percpu_counters_lock\">percpu_counters_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#fbc\">fbc</a>, &amp;<a class=\"id\" href=\"#percpu_counters\">percpu_counters</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s32\">s32</a> *<a class=\"id\" href=\"#pcount\">pcount</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#fbc\">fbc</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcount\">pcount</a> = <a class=\"id\" href=\"#per_cpu_ptr\">per_cpu_ptr</a>(<a class=\"id\" href=\"#fbc\">fbc</a>-><a class=\"id\" href=\"#counters\">counters</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fbc\">fbc</a>-><a class=\"id\" href=\"#count\">count</a> += *<a class=\"id\" href=\"#pcount\">pcount</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#pcount\">pcount</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#fbc\">fbc</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#percpu_counters_lock\">percpu_counters_lock</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NOTIFY_OK\">NOTIFY_OK</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Compare counter against given value.</span>", 
"<span class=\"comment\"> * Return 1 if greater, 0 if equal and -1 if less</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#percpu_counter_compare\">percpu_counter_compare</a>(struct <a class=\"id\" href=\"#percpu_counter\">percpu_counter</a> *<a class=\"id\" href=\"#fbc\">fbc</a>, <a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#rhs\">rhs</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s64\">s64</a><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#percpu_counter_read\">percpu_counter_read</a>(<a class=\"id\" href=\"#fbc\">fbc</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Check to see if rough count will be sufficient for comparison */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#abs\">abs</a>(<a class=\"id\" href=\"#count\">count</a> - <a class=\"id\" href=\"#rhs\">rhs</a>) &gt; (<a class=\"id\" href=\"#percpu_counter_batch\">percpu_counter_batch</a>*<a class=\"id\" href=\"#num_online_cpus\">num_online_cpus</a>())) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> &gt; <a class=\"id\" href=\"#rhs\">rhs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* Need to use precise count */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#percpu_counter_sum\">percpu_counter_sum</a>(<a class=\"id\" href=\"#fbc\">fbc</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> &gt; <a class=\"id\" href=\"#rhs\">rhs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#count\">count</a> &lt; <a class=\"id\" href=\"#rhs\">rhs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#percpu_counter_compare\">percpu_counter_compare</a>);", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#percpu_counter_startup\">percpu_counter_startup</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compute_batch_value\">compute_batch_value</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hotcpu_notifier\">hotcpu_notifier</a>(<a class=\"id\" href=\"#percpu_counter_hotcpu_callback\">percpu_counter_hotcpu_callback</a>, 0);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#percpu_counter_startup\">percpu_counter_startup</a>);", 
];
xr_frag_insert('l/4a/d8b4315509a8c22a216e8ad7a15b618bb2bca0.xr', __xr_tmp);
