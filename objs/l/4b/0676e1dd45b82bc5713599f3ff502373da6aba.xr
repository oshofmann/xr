var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * xfrm6_input.c: based on net/ipv4/xfrm4_input.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Authors:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Mitsuru KANDA @USAGI</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>Kazunori MIYAZAWA @USAGI</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>Kunihiro Ishiguro &lt;kunihiro@ipinfusion.com&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>YOSHIFUJI Hideaki @USAGI</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>IPv6 support</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netfilter\">netfilter</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netfilter_ipv6\">netfilter_ipv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#xfrm\">xfrm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"int <a class=\"id\" href=\"#xfrm6_extract_input\">xfrm6_extract_input</a>(struct <a class=\"id\" href=\"#xfrm_state\">xfrm_state</a> *<a class=\"id\" href=\"#x\">x</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#xfrm6_extract_header\">xfrm6_extract_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#xfrm6_rcv_spi\">xfrm6_rcv_spi</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#nexthdr\">nexthdr</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#spi\">spi</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#XFRM_SPI_SKB_CB\">XFRM_SPI_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#family\">family</a> = <a class=\"id\" href=\"#AF_INET6\">AF_INET6</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#XFRM_SPI_SKB_CB\">XFRM_SPI_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#daddroff\">daddroff</a> = <a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a>, <a class=\"id\" href=\"#daddr\">daddr</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#xfrm_input\">xfrm_input</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#nexthdr\">nexthdr</a>, <a class=\"id\" href=\"#spi\">spi</a>, 0);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#xfrm6_rcv_spi\">xfrm6_rcv_spi</a>);", 
"", 
"int <a class=\"id\" href=\"#xfrm6_transport_finish\">xfrm6_transport_finish</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#async\">async</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>)[<a class=\"id\" href=\"#IP6CB\">IP6CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#nhoff\">nhoff</a>] =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#XFRM_MODE_SKB_CB\">XFRM_MODE_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#protocol\">protocol</a>;", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_NETFILTER\">CONFIG_NETFILTER</a>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#async\">async</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#payload_len\">payload_len</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__skb_push\">__skb_push</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#data\">data</a> - <a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NF_HOOK\">NF_HOOK</a>(<a class=\"id\" href=\"#NFPROTO_IPV6\">NFPROTO_IPV6</a>, <a class=\"id\" href=\"#NF_INET_PRE_ROUTING\">NF_INET_PRE_ROUTING</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip6_rcv_finish\">ip6_rcv_finish</a>);", 
"<span class=\"ts\"/>return -1;", 
"}", 
"", 
"int <a class=\"id\" href=\"#xfrm6_rcv\">xfrm6_rcv</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#xfrm6_rcv_spi\">xfrm6_rcv_spi</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>)[<a class=\"id\" href=\"#IP6CB\">IP6CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#nhoff\">nhoff</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     0);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#xfrm6_rcv\">xfrm6_rcv</a>);", 
"", 
"int <a class=\"id\" href=\"#xfrm6_input_addr\">xfrm6_input_addr</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#xfrm_address_t\">xfrm_address_t</a> *<a class=\"id\" href=\"#daddr\">daddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#xfrm_address_t\">xfrm_address_t</a> *<a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#proto\">proto</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xfrm_state\">xfrm_state</a> *<a class=\"id\" href=\"#x\">x</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Allocate new secpath or COW existing one. */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sp\">sp</a> || <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sp\">sp</a>-><a class=\"id\" href=\"#refcnt\">refcnt</a>) != 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sec_path\">sec_path</a> *<a class=\"id\" href=\"#sp\">sp</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sp\">sp</a> = <a class=\"id\" href=\"#secpath_dup\">secpath_dup</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sp\">sp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#sp\">sp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#XFRM_INC_STATS\">XFRM_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#LINUX_MIB_XFRMINERROR\">LINUX_MIB_XFRMINERROR</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sp\">sp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#secpath_put\">secpath_put</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sp\">sp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sp\">sp</a> = <a class=\"id\" href=\"#sp\">sp</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (1 + <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sp\">sp</a>-><a class=\"id\" href=\"#len\">len</a> == <a class=\"id\" href=\"#XFRM_MAX_DEPTH\">XFRM_MAX_DEPTH</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#XFRM_INC_STATS\">XFRM_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#LINUX_MIB_XFRMINBUFFERERROR\">LINUX_MIB_XFRMINBUFFERERROR</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 3; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xfrm_address_t\">xfrm_address_t</a> *<a class=\"id\" href=\"#dst\">dst</a>, *<a class=\"id\" href=\"#src\">src</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case 0:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#daddr\">daddr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#src\">src</a> = <a class=\"id\" href=\"#saddr\">saddr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 1:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* lookup state with wild-card source address */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#daddr\">daddr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#src\">src</a> = (<a class=\"id\" href=\"#xfrm_address_t\">xfrm_address_t</a> *)&amp;<a class=\"id\" href=\"#in6addr_any\">in6addr_any</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* lookup state with wild-card addresses */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a> = (<a class=\"id\" href=\"#xfrm_address_t\">xfrm_address_t</a> *)&amp;<a class=\"id\" href=\"#in6addr_any\">in6addr_any</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#src\">src</a> = (<a class=\"id\" href=\"#xfrm_address_t\">xfrm_address_t</a> *)&amp;<a class=\"id\" href=\"#in6addr_any\">in6addr_any</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x\">x</a> = <a class=\"id\" href=\"#xfrm_state_lookup_byaddr\">xfrm_state_lookup_byaddr</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#mark\">mark</a>, <a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#src\">src</a>, <a class=\"id\" href=\"#proto\">proto</a>, <a class=\"id\" href=\"#AF_INET6\">AF_INET6</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#x\">x</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((!<a class=\"id\" href=\"#i\">i</a> || (<a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#props\">props</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#XFRM_STATE_WILDRECV\">XFRM_STATE_WILDRECV</a>)) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#km\">km</a>.<a class=\"id\" href=\"#state\">state</a> == <a class=\"id\" href=\"#XFRM_STATE_VALID\">XFRM_STATE_VALID</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#xfrm_state_check_expire\">xfrm_state_check_expire</a>(<a class=\"id\" href=\"#x\">x</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#type\">type</a>-><a class=\"id\" href=\"#input\">input</a>(<a class=\"id\" href=\"#x\">x</a>, <a class=\"id\" href=\"#skb\">skb</a>) &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* found a valid state */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xfrm_state_put\">xfrm_state_put</a>(<a class=\"id\" href=\"#x\">x</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x\">x</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#x\">x</a>) {", 
];
xr_frag_insert('l/4b/0676e1dd45b82bc5713599f3ff502373da6aba.xr', __xr_tmp);
