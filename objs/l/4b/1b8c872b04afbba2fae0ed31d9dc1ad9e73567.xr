var __xr_tmp = [
"<span class=\"comment\">/* taskstats.h - exporting per-task statistics</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) Shailabh Nagar, IBM Corp. 2006</span>", 
"<span class=\"comment\"> *           (C) Balbir Singh,   IBM Corp. 2006</span>", 
"<span class=\"comment\"> *           (C) Jay Lan,        SGI, 2006</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify it</span>", 
"<span class=\"comment\"> * under the terms of version 2.1 of the GNU Lesser General Public License</span>", 
"<span class=\"comment\"> * as published by the Free Software Foundation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is distributed in the hope that it would be useful, but</span>", 
"<span class=\"comment\"> * WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_TASKSTATS_H\">_LINUX_TASKSTATS_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_TASKSTATS_H\">_LINUX_TASKSTATS_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* Format for per-task data returned to userland when</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- a task exits</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- listener requests stats for a task</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The struct is versioned. Newer versions should only add fields to</span>", 
"<span class=\"comment\"> * the bottom of the struct to maintain backward compatibility.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * To add new fields</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>a) bump up TASKSTATS_VERSION</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>b) add comment indicating new version number at end of struct</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>c) add new fields after version comment; maintain 64-bit alignment</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TASKSTATS_VERSION\">TASKSTATS_VERSION</a><span class=\"ts\"/>7", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TS_COMM_LEN\">TS_COMM_LEN</a><span class=\"ts\"/><span class=\"ts\"/>32<span class=\"ts\"/><span class=\"comment\">/* should be &gt;= TASK_COMM_LEN</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * in linux/sched.h */</span>", 
"", 
"struct <a class=\"id\" href=\"#taskstats\">taskstats</a> {", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* The version number of this struct. This field is always set to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * TAKSTATS_VERSION, which is defined in &lt;linux/taskstats.h&gt;.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Each time the struct is changed, the value should be incremented.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><a class=\"id\" href=\"#version\">version</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#ac_exitcode\">ac_exitcode</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Exit status */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* The accounting flags of a task as defined in &lt;linux/acct.h&gt;</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Defined values are AFORK, ASU, ACOMPAT, ACORE, and AXSIG.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#ac_flag\">ac_flag</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Record flags */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#ac_nice\">ac_nice</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* task_nice */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Delay accounting fields start</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * All values, until comment \"Delay accounting fields end\" are</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * available only if delay accounting is enabled, even though the last</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * few fields are not delays</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * xxx_count is the number of delay values recorded</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * xxx_delay_total is the corresponding cumulative delay in nanoseconds</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * xxx_delay_total wraps around to zero on overflow</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * xxx_count incremented regardless of overflow</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Delay waiting for cpu, while runnable</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * count, delay_total NOT updated atomically</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a><span class=\"ts\"/><a class=\"id\" href=\"#cpu_count\">cpu_count</a> <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#aligned\">aligned</a>(8)));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a><span class=\"ts\"/><a class=\"id\" href=\"#cpu_delay_total\">cpu_delay_total</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Following four fields atomically updated using task-&gt;delays-&gt;lock */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Delay waiting for synchronous block I/O to complete</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * does not account for delays in I/O submission</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a><span class=\"ts\"/><a class=\"id\" href=\"#blkio_count\">blkio_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a><span class=\"ts\"/><a class=\"id\" href=\"#blkio_delay_total\">blkio_delay_total</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Delay waiting for page fault I/O (swap in only) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a><span class=\"ts\"/><a class=\"id\" href=\"#swapin_count\">swapin_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a><span class=\"ts\"/><a class=\"id\" href=\"#swapin_delay_total\">swapin_delay_total</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* cpu \"wall-clock\" running time</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * On some architectures, value will adjust for cpu time stolen</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * from the kernel in involuntary waits due to virtualization.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Value is cumulative, in nanoseconds, without a corresponding count</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and wraps around to zero silently on overflow</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a><span class=\"ts\"/><a class=\"id\" href=\"#cpu_run_real_total\">cpu_run_real_total</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* cpu \"virtual\" running time</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Uses time intervals seen by the kernel i.e. no adjustment</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * for kernel's involuntary waits due to virtualization.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Value is cumulative, in nanoseconds, without a corresponding count</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and wraps around to zero silently on overflow</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a><span class=\"ts\"/><a class=\"id\" href=\"#cpu_run_virtual_total\">cpu_run_virtual_total</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Delay accounting fields end */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* version 1 ends here */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Basic Accounting Fields start */</span>", 
"<span class=\"ts\"/>char<span class=\"ts\"/><a class=\"id\" href=\"#ac_comm\">ac_comm</a>[<a class=\"id\" href=\"#TS_COMM_LEN\">TS_COMM_LEN</a>];<span class=\"ts\"/><span class=\"comment\">/* Command name */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#ac_sched\">ac_sched</a> <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#aligned\">aligned</a>(8)));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Scheduling discipline */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#ac_pad\">ac_pad</a>[3];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#ac_uid\">ac_uid</a> <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#aligned\">aligned</a>(8)));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* User ID */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#ac_gid\">ac_gid</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Group ID */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#ac_pid\">ac_pid</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Process ID */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#ac_ppid\">ac_ppid</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Parent process ID */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#ac_btime\">ac_btime</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Begin time [sec since 1970] */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a><span class=\"ts\"/><a class=\"id\" href=\"#ac_etime\">ac_etime</a> <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#aligned\">aligned</a>(8)));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Elapsed time [usec] */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a><span class=\"ts\"/><a class=\"id\" href=\"#ac_utime\">ac_utime</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* User CPU time [usec] */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a><span class=\"ts\"/><a class=\"id\" href=\"#ac_stime\">ac_stime</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* SYstem CPU time [usec] */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a><span class=\"ts\"/><a class=\"id\" href=\"#ac_minflt\">ac_minflt</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Minor Page Fault Count */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a><span class=\"ts\"/><a class=\"id\" href=\"#ac_majflt\">ac_majflt</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Major Page Fault Count */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* Basic Accounting Fields end */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Extended accounting fields start */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* Accumulated RSS usage in duration of a task, in MBytes-usecs.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The current rss usage is added to this counter every time</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * a tick is charged to a task's system time. So, at the end we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * will have memory usage multiplied by system time. Thus an</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * average usage per system time unit can be calculated.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a><span class=\"ts\"/><a class=\"id\" href=\"#coremem\">coremem</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* accumulated RSS usage in MB-usec */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* Accumulated virtual memory usage in duration of a task.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Same as acct_rss_mem1 above except that we keep track of VM usage.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a><span class=\"ts\"/><a class=\"id\" href=\"#virtmem\">virtmem</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* accumulated VM  usage in MB-usec */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* High watermark of RSS and virtual memory usage in duration of</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * a task, in KBytes.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a><span class=\"ts\"/><a class=\"id\" href=\"#hiwater_rss\">hiwater_rss</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* High-watermark of RSS usage, in KB */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a><span class=\"ts\"/><a class=\"id\" href=\"#hiwater_vm\">hiwater_vm</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* High-water VM usage, in KB */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* The following four fields are I/O statistics of a task. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a><span class=\"ts\"/><a class=\"id\" href=\"#read_char\">read_char</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* bytes read */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a><span class=\"ts\"/><a class=\"id\" href=\"#write_char\">write_char</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* bytes written */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a><span class=\"ts\"/><a class=\"id\" href=\"#read_syscalls\">read_syscalls</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* read syscalls */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a><span class=\"ts\"/><a class=\"id\" href=\"#write_syscalls\">write_syscalls</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* write syscalls */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* Extended accounting fields end */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TASKSTATS_HAS_IO_ACCOUNTING\">TASKSTATS_HAS_IO_ACCOUNTING</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* Per-task storage I/O accounting starts */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a><span class=\"ts\"/><a class=\"id\" href=\"#read_bytes\">read_bytes</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* bytes of read I/O */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a><span class=\"ts\"/><a class=\"id\" href=\"#write_bytes\">write_bytes</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* bytes of write I/O */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a><span class=\"ts\"/><a class=\"id\" href=\"#cancelled_write_bytes\">cancelled_write_bytes</a>;<span class=\"ts\"/><span class=\"comment\">/* bytes of cancelled write I/O */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a>  <a class=\"id\" href=\"#nvcsw\">nvcsw</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* voluntary_ctxt_switches */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a>  <a class=\"id\" href=\"#nivcsw\">nivcsw</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* nonvoluntary_ctxt_switches */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* time accounting for SMT machines */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a><span class=\"ts\"/><a class=\"id\" href=\"#ac_utimescaled\">ac_utimescaled</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* utime scaled on frequency etc */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a><span class=\"ts\"/><a class=\"id\" href=\"#ac_stimescaled\">ac_stimescaled</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* stime scaled on frequency etc */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a><span class=\"ts\"/><a class=\"id\" href=\"#cpu_scaled_run_real_total\">cpu_scaled_run_real_total</a>; <span class=\"comment\">/* scaled cpu_run_real_total */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Delay waiting for memory reclaim */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a><span class=\"ts\"/><a class=\"id\" href=\"#freepages_count\">freepages_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a><span class=\"ts\"/><a class=\"id\" href=\"#freepages_delay_total\">freepages_delay_total</a>;", 
"};", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Commands sent from userspace</span>", 
"<span class=\"comment\"> * Not versioned. New commands should only be inserted at the enum's end</span>", 
"<span class=\"comment\"> * prior to __TASKSTATS_CMD_MAX</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TASKSTATS_CMD_UNSPEC\">TASKSTATS_CMD_UNSPEC</a> = 0,<span class=\"ts\"/><span class=\"comment\">/* Reserved */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TASKSTATS_CMD_GET\">TASKSTATS_CMD_GET</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* user-&gt;kernel request/get-response */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TASKSTATS_CMD_NEW\">TASKSTATS_CMD_NEW</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* kernel-&gt;user event */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__TASKSTATS_CMD_MAX\">__TASKSTATS_CMD_MAX</a>,", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TASKSTATS_CMD_MAX\">TASKSTATS_CMD_MAX</a> (<a class=\"id\" href=\"#__TASKSTATS_CMD_MAX\">__TASKSTATS_CMD_MAX</a> - 1)", 
"", 
"enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TASKSTATS_TYPE_UNSPEC\">TASKSTATS_TYPE_UNSPEC</a> = 0,<span class=\"ts\"/><span class=\"comment\">/* Reserved */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TASKSTATS_TYPE_PID\">TASKSTATS_TYPE_PID</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Process id */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TASKSTATS_TYPE_TGID\">TASKSTATS_TYPE_TGID</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Thread group id */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TASKSTATS_TYPE_STATS\">TASKSTATS_TYPE_STATS</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* taskstats structure */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TASKSTATS_TYPE_AGGR_PID\">TASKSTATS_TYPE_AGGR_PID</a>,<span class=\"ts\"/><span class=\"comment\">/* contains pid + stats */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TASKSTATS_TYPE_AGGR_TGID\">TASKSTATS_TYPE_AGGR_TGID</a>,<span class=\"ts\"/><span class=\"comment\">/* contains tgid + stats */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__TASKSTATS_TYPE_MAX\">__TASKSTATS_TYPE_MAX</a>,", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TASKSTATS_TYPE_MAX\">TASKSTATS_TYPE_MAX</a> (<a class=\"id\" href=\"#__TASKSTATS_TYPE_MAX\">__TASKSTATS_TYPE_MAX</a> - 1)", 
"", 
"enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TASKSTATS_CMD_ATTR_UNSPEC\">TASKSTATS_CMD_ATTR_UNSPEC</a> = 0,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TASKSTATS_CMD_ATTR_PID\">TASKSTATS_CMD_ATTR_PID</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TASKSTATS_CMD_ATTR_TGID\">TASKSTATS_CMD_ATTR_TGID</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TASKSTATS_CMD_ATTR_REGISTER_CPUMASK\">TASKSTATS_CMD_ATTR_REGISTER_CPUMASK</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TASKSTATS_CMD_ATTR_DEREGISTER_CPUMASK\">TASKSTATS_CMD_ATTR_DEREGISTER_CPUMASK</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__TASKSTATS_CMD_ATTR_MAX\">__TASKSTATS_CMD_ATTR_MAX</a>,", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TASKSTATS_CMD_ATTR_MAX\">TASKSTATS_CMD_ATTR_MAX</a> (<a class=\"id\" href=\"#__TASKSTATS_CMD_ATTR_MAX\">__TASKSTATS_CMD_ATTR_MAX</a> - 1)", 
"", 
"<span class=\"comment\">/* NETLINK_GENERIC related info */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TASKSTATS_GENL_NAME\">TASKSTATS_GENL_NAME</a><span class=\"ts\"/>\"TASKSTATS\"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TASKSTATS_GENL_VERSION\">TASKSTATS_GENL_VERSION</a><span class=\"ts\"/>0x1", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _LINUX_TASKSTATS_H */</span>", 
];
xr_frag_insert('l/4b/1b8c872b04afbba2fae0ed31d9dc1ad9e73567.xr', __xr_tmp);
