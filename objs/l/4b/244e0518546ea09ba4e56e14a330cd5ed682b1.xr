var __xr_tmp = [
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_dir_entry_2\">ext3_dir_entry_2</a> * <a class=\"id\" href=\"#de\">de</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> * <a class=\"id\" href=\"#bh\">bh</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_name\">d_name</a>.<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#EXT3_NAME_LEN\">EXT3_NAME_LEN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENAMETOOLONG\">ENAMETOOLONG</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#ext3_find_entry\">ext3_find_entry</a>(<a class=\"id\" href=\"#dir\">dir</a>, &amp;<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_name\">d_name</a>, &amp;<a class=\"id\" href=\"#de\">de</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bh\">bh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#ino\">ino</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#de\">de</a>-><a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a> (<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ext3_valid_inum\">ext3_valid_inum</a>(<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#ino\">ino</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_error\">ext3_error</a>(<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, \"ext3_lookup\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"bad inode number: %lu\", <a class=\"id\" href=\"#ino\">ino</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EIO\">EIO</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#ext3_iget\">ext3_iget</a>(<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#ino\">ino</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#inode\">inode</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#inode\">inode</a>) == -<a class=\"id\" href=\"#ESTALE\">ESTALE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_error\">ext3_error</a>(<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#__func__\">__func__</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"deleted inode referenced: %lu\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ino\">ino</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EIO\">EIO</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_CAST\">ERR_CAST</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#d_splice_alias\">d_splice_alias</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#dentry\">dentry</a>);", 
"}", 
"", 
"", 
"struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#ext3_get_parent\">ext3_get_parent</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#child\">child</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#ino\">ino</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#qstr\">qstr</a> <a class=\"id\" href=\"#dotdot\">dotdot</a> = {.<a class=\"id\" href=\"#name\">name</a> = \"..\", .<a class=\"id\" href=\"#len\">len</a> = 2};", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_dir_entry_2\">ext3_dir_entry_2</a> * <a class=\"id\" href=\"#de\">de</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#ext3_find_entry\">ext3_find_entry</a>(<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>, &amp;<a class=\"id\" href=\"#dotdot\">dotdot</a>, &amp;<a class=\"id\" href=\"#de\">de</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOENT\">ENOENT</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ino\">ino</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#de\">de</a>-><a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ext3_valid_inum\">ext3_valid_inum</a>(<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#ino\">ino</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_error\">ext3_error</a>(<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, \"ext3_get_parent\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"bad inode number: %lu\", <a class=\"id\" href=\"#ino\">ino</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EIO\">EIO</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#d_obtain_alias\">d_obtain_alias</a>(<a class=\"id\" href=\"#ext3_iget\">ext3_iget</a>(<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#ino\">ino</a>));", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#S_SHIFT\">S_SHIFT</a> 12", 
"static unsigned char <a class=\"id\" href=\"#ext3_type_by_mode\">ext3_type_by_mode</a>[<a class=\"id\" href=\"#S_IFMT\">S_IFMT</a> >> <a class=\"id\" href=\"#S_SHIFT\">S_SHIFT</a>] = {", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#S_IFREG\">S_IFREG</a> >> <a class=\"id\" href=\"#S_SHIFT\">S_SHIFT</a>]<span class=\"ts\"/>= <a class=\"id\" href=\"#EXT3_FT_REG_FILE\">EXT3_FT_REG_FILE</a>,", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#S_IFDIR\">S_IFDIR</a> >> <a class=\"id\" href=\"#S_SHIFT\">S_SHIFT</a>]<span class=\"ts\"/>= <a class=\"id\" href=\"#EXT3_FT_DIR\">EXT3_FT_DIR</a>,", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#S_IFCHR\">S_IFCHR</a> >> <a class=\"id\" href=\"#S_SHIFT\">S_SHIFT</a>]<span class=\"ts\"/>= <a class=\"id\" href=\"#EXT3_FT_CHRDEV\">EXT3_FT_CHRDEV</a>,", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#S_IFBLK\">S_IFBLK</a> >> <a class=\"id\" href=\"#S_SHIFT\">S_SHIFT</a>]<span class=\"ts\"/>= <a class=\"id\" href=\"#EXT3_FT_BLKDEV\">EXT3_FT_BLKDEV</a>,", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#S_IFIFO\">S_IFIFO</a> >> <a class=\"id\" href=\"#S_SHIFT\">S_SHIFT</a>]<span class=\"ts\"/>= <a class=\"id\" href=\"#EXT3_FT_FIFO\">EXT3_FT_FIFO</a>,", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#S_IFSOCK\">S_IFSOCK</a> >> <a class=\"id\" href=\"#S_SHIFT\">S_SHIFT</a>]<span class=\"ts\"/>= <a class=\"id\" href=\"#EXT3_FT_SOCK\">EXT3_FT_SOCK</a>,", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#S_IFLNK\">S_IFLNK</a> >> <a class=\"id\" href=\"#S_SHIFT\">S_SHIFT</a>]<span class=\"ts\"/>= <a class=\"id\" href=\"#EXT3_FT_SYMLINK\">EXT3_FT_SYMLINK</a>,", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ext3_set_de_type\">ext3_set_de_type</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_dir_entry_2\">ext3_dir_entry_2</a> *<a class=\"id\" href=\"#de\">de</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#umode_t\">umode_t</a> <a class=\"id\" href=\"#mode\">mode</a>) {", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT3_HAS_INCOMPAT_FEATURE\">EXT3_HAS_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT3_FEATURE_INCOMPAT_FILETYPE\">EXT3_FEATURE_INCOMPAT_FILETYPE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#de\">de</a>-><a class=\"id\" href=\"#file_type\">file_type</a> = <a class=\"id\" href=\"#ext3_type_by_mode\">ext3_type_by_mode</a>[(<a class=\"id\" href=\"#mode\">mode</a> &amp; <a class=\"id\" href=\"#S_IFMT\">S_IFMT</a>)>><a class=\"id\" href=\"#S_SHIFT\">S_SHIFT</a>];", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Move count entries from end of map between two memory locations.</span>", 
"<span class=\"comment\"> * Returns pointer to last entry moved.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#ext3_dir_entry_2\">ext3_dir_entry_2</a> *", 
"<a class=\"id\" href=\"#dx_move_dirents\">dx_move_dirents</a>(char *<a class=\"id\" href=\"#from\">from</a>, char *<a class=\"id\" href=\"#to\">to</a>, struct <a class=\"id\" href=\"#dx_map_entry\">dx_map_entry</a> *<a class=\"id\" href=\"#map\">map</a>, int <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#rec_len\">rec_len</a> = 0;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#count\">count</a>--) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_dir_entry_2\">ext3_dir_entry_2</a> *<a class=\"id\" href=\"#de\">de</a> = (struct <a class=\"id\" href=\"#ext3_dir_entry_2\">ext3_dir_entry_2</a> *) (<a class=\"id\" href=\"#from\">from</a> + <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#offs\">offs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rec_len\">rec_len</a> = <a class=\"id\" href=\"#EXT3_DIR_REC_LEN\">EXT3_DIR_REC_LEN</a>(<a class=\"id\" href=\"#de\">de</a>-><a class=\"id\" href=\"#name_len\">name_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a> (<a class=\"id\" href=\"#to\">to</a>, <a class=\"id\" href=\"#de\">de</a>, <a class=\"id\" href=\"#rec_len\">rec_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>((struct <a class=\"id\" href=\"#ext3_dir_entry_2\">ext3_dir_entry_2</a> *) <a class=\"id\" href=\"#to\">to</a>)-><a class=\"id\" href=\"#rec_len\">rec_len</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_rec_len_to_disk\">ext3_rec_len_to_disk</a>(<a class=\"id\" href=\"#rec_len\">rec_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#de\">de</a>-><a class=\"id\" href=\"#inode\">inode</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#map\">map</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#to\">to</a> += <a class=\"id\" href=\"#rec_len\">rec_len</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return (struct <a class=\"id\" href=\"#ext3_dir_entry_2\">ext3_dir_entry_2</a> *) (<a class=\"id\" href=\"#to\">to</a> - <a class=\"id\" href=\"#rec_len\">rec_len</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Compact each dir entry in the range to the minimal rec_len.</span>", 
"<span class=\"comment\"> * Returns pointer to last entry in range.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#ext3_dir_entry_2\">ext3_dir_entry_2</a> *<a class=\"id\" href=\"#dx_pack_dirents\">dx_pack_dirents</a>(char *<a class=\"id\" href=\"#base\">base</a>, unsigned <a class=\"id\" href=\"#blocksize\">blocksize</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_dir_entry_2\">ext3_dir_entry_2</a> *<a class=\"id\" href=\"#next\">next</a>, *<a class=\"id\" href=\"#to\">to</a>, *<a class=\"id\" href=\"#prev\">prev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_dir_entry_2\">ext3_dir_entry_2</a> *<a class=\"id\" href=\"#de\">de</a> = (struct <a class=\"id\" href=\"#ext3_dir_entry_2\">ext3_dir_entry_2</a> *)<a class=\"id\" href=\"#base\">base</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#rec_len\">rec_len</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#prev\">prev</a> = <a class=\"id\" href=\"#to\">to</a> = <a class=\"id\" href=\"#de\">de</a>;", 
"<span class=\"ts\"/>while ((char *)<a class=\"id\" href=\"#de\">de</a> &lt; <a class=\"id\" href=\"#base\">base</a> + <a class=\"id\" href=\"#blocksize\">blocksize</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#ext3_next_entry\">ext3_next_entry</a>(<a class=\"id\" href=\"#de\">de</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#de\">de</a>-><a class=\"id\" href=\"#inode\">inode</a> && <a class=\"id\" href=\"#de\">de</a>-><a class=\"id\" href=\"#name_len\">name_len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rec_len\">rec_len</a> = <a class=\"id\" href=\"#EXT3_DIR_REC_LEN\">EXT3_DIR_REC_LEN</a>(<a class=\"id\" href=\"#de\">de</a>-><a class=\"id\" href=\"#name_len\">name_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#de\">de</a> &gt; <a class=\"id\" href=\"#to\">to</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memmove\">memmove</a>(<a class=\"id\" href=\"#to\">to</a>, <a class=\"id\" href=\"#de\">de</a>, <a class=\"id\" href=\"#rec_len\">rec_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#rec_len\">rec_len</a> = <a class=\"id\" href=\"#ext3_rec_len_to_disk\">ext3_rec_len_to_disk</a>(<a class=\"id\" href=\"#rec_len\">rec_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prev\">prev</a> = <a class=\"id\" href=\"#to\">to</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#to\">to</a> = (struct <a class=\"id\" href=\"#ext3_dir_entry_2\">ext3_dir_entry_2</a> *) (((char *) <a class=\"id\" href=\"#to\">to</a>) + <a class=\"id\" href=\"#rec_len\">rec_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#de\">de</a> = <a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#prev\">prev</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Split a full leaf block to make room for a new dir entry.</span>", 
"<span class=\"comment\"> * Allocate a new block, and move entries so that they are approx. equally full.</span>", 
"<span class=\"comment\"> * Returns pointer to de in block into which the new entry will be inserted.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#ext3_dir_entry_2\">ext3_dir_entry_2</a> *<a class=\"id\" href=\"#do_split\">do_split</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> **<a class=\"id\" href=\"#bh\">bh</a>,struct <a class=\"id\" href=\"#dx_frame\">dx_frame</a> *<a class=\"id\" href=\"#frame\">frame</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#dx_hash_info\">dx_hash_info</a> *<a class=\"id\" href=\"#hinfo\">hinfo</a>, int *<a class=\"id\" href=\"#error\">error</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#blocksize\">blocksize</a> = <a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#continued\">continued</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh2\">bh2</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#newblock\">newblock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#hash2\">hash2</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dx_map_entry\">dx_map_entry</a> *<a class=\"id\" href=\"#map\">map</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#data1\">data1</a> = (*<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#b_data\">b_data</a>, *<a class=\"id\" href=\"#data2\">data2</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#split\">split</a>, <a class=\"id\" href=\"#move\">move</a>, <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_dir_entry_2\">ext3_dir_entry_2</a> *<a class=\"id\" href=\"#de\">de</a> = <a class=\"id\" href=\"#NULL\">NULL</a>, *<a class=\"id\" href=\"#de2\">de2</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0, <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh2\">bh2</a> = <a class=\"id\" href=\"#ext3_append\">ext3_append</a> (<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#dir\">dir</a>, &amp;<a class=\"id\" href=\"#newblock\">newblock</a>, &amp;<a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#bh2\">bh2</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(*<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#errout\">errout</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUFFER_TRACE\">BUFFER_TRACE</a>(*<a class=\"id\" href=\"#bh\">bh</a>, \"get_write_access\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext3_journal_get_write_access\">ext3_journal_get_write_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, *<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#journal_error\">journal_error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUFFER_TRACE\">BUFFER_TRACE</a>(<a class=\"id\" href=\"#frame\">frame</a>-><a class=\"id\" href=\"#bh\">bh</a>, \"get_write_access\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext3_journal_get_write_access\">ext3_journal_get_write_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#frame\">frame</a>-><a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#journal_error\">journal_error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data2\">data2</a> = <a class=\"id\" href=\"#bh2\">bh2</a>-><a class=\"id\" href=\"#b_data\">b_data</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* create map in the end of data2 block */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#map\">map</a> = (struct <a class=\"id\" href=\"#dx_map_entry\">dx_map_entry</a> *) (<a class=\"id\" href=\"#data2\">data2</a> + <a class=\"id\" href=\"#blocksize\">blocksize</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#dx_make_map\">dx_make_map</a> ((struct <a class=\"id\" href=\"#ext3_dir_entry_2\">ext3_dir_entry_2</a> *) <a class=\"id\" href=\"#data1\">data1</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#blocksize\">blocksize</a>, <a class=\"id\" href=\"#hinfo\">hinfo</a>, <a class=\"id\" href=\"#map\">map</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#map\">map</a> -= <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dx_sort_map\">dx_sort_map</a> (<a class=\"id\" href=\"#map\">map</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Split the existing block in the middle, size-wise */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#move\">move</a> = 0;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#count\">count</a>-1; <a class=\"id\" href=\"#i\">i</a> >= 0; <a class=\"id\" href=\"#i\">i</a>--) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* is more than half of this entry in 2nd half of the block? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> + <a class=\"id\" href=\"#map\">map</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#size\">size</a>/2 &gt; <a class=\"id\" href=\"#blocksize\">blocksize</a>/2)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> += <a class=\"id\" href=\"#map\">map</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#move\">move</a>++;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* map index at which we will split */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#split\">split</a> = <a class=\"id\" href=\"#count\">count</a> - <a class=\"id\" href=\"#move\">move</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hash2\">hash2</a> = <a class=\"id\" href=\"#map\">map</a>[<a class=\"id\" href=\"#split\">split</a>].<a class=\"id\" href=\"#hash\">hash</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#continued\">continued</a> = <a class=\"id\" href=\"#hash2\">hash2</a> == <a class=\"id\" href=\"#map\">map</a>[<a class=\"id\" href=\"#split\">split</a> - 1].<a class=\"id\" href=\"#hash\">hash</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dxtrace\">dxtrace</a>(<a class=\"id\" href=\"#printk\">printk</a>(\"Split block %i at %x, %i/%i\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dx_get_block\">dx_get_block</a>(<a class=\"id\" href=\"#frame\">frame</a>-><a class=\"id\" href=\"#at\">at</a>), <a class=\"id\" href=\"#hash2\">hash2</a>, <a class=\"id\" href=\"#split\">split</a>, <a class=\"id\" href=\"#count\">count</a>-<a class=\"id\" href=\"#split\">split</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Fancy dance to stay within two buffers */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#de2\">de2</a> = <a class=\"id\" href=\"#dx_move_dirents\">dx_move_dirents</a>(<a class=\"id\" href=\"#data1\">data1</a>, <a class=\"id\" href=\"#data2\">data2</a>, <a class=\"id\" href=\"#map\">map</a> + <a class=\"id\" href=\"#split\">split</a>, <a class=\"id\" href=\"#count\">count</a> - <a class=\"id\" href=\"#split\">split</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#de\">de</a> = <a class=\"id\" href=\"#dx_pack_dirents\">dx_pack_dirents</a>(<a class=\"id\" href=\"#data1\">data1</a>,<a class=\"id\" href=\"#blocksize\">blocksize</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#de\">de</a>-><a class=\"id\" href=\"#rec_len\">rec_len</a> = <a class=\"id\" href=\"#ext3_rec_len_to_disk\">ext3_rec_len_to_disk</a>(<a class=\"id\" href=\"#data1\">data1</a> + <a class=\"id\" href=\"#blocksize\">blocksize</a> - (char *) <a class=\"id\" href=\"#de\">de</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#de2\">de2</a>-><a class=\"id\" href=\"#rec_len\">rec_len</a> = <a class=\"id\" href=\"#ext3_rec_len_to_disk\">ext3_rec_len_to_disk</a>(<a class=\"id\" href=\"#data2\">data2</a> + <a class=\"id\" href=\"#blocksize\">blocksize</a> - (char *) <a class=\"id\" href=\"#de2\">de2</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dxtrace\">dxtrace</a>(<a class=\"id\" href=\"#dx_show_leaf\">dx_show_leaf</a> (<a class=\"id\" href=\"#hinfo\">hinfo</a>, (struct <a class=\"id\" href=\"#ext3_dir_entry_2\">ext3_dir_entry_2</a> *) <a class=\"id\" href=\"#data1\">data1</a>, <a class=\"id\" href=\"#blocksize\">blocksize</a>, 1));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dxtrace\">dxtrace</a>(<a class=\"id\" href=\"#dx_show_leaf\">dx_show_leaf</a> (<a class=\"id\" href=\"#hinfo\">hinfo</a>, (struct <a class=\"id\" href=\"#ext3_dir_entry_2\">ext3_dir_entry_2</a> *) <a class=\"id\" href=\"#data2\">data2</a>, <a class=\"id\" href=\"#blocksize\">blocksize</a>, 1));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Which block gets the new entry? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hinfo\">hinfo</a>-><a class=\"id\" href=\"#hash\">hash</a> >= <a class=\"id\" href=\"#hash2\">hash2</a>)", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#swap\">swap</a>(*<a class=\"id\" href=\"#bh\">bh</a>, <a class=\"id\" href=\"#bh2\">bh2</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#de\">de</a> = <a class=\"id\" href=\"#de2\">de2</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dx_insert_block\">dx_insert_block</a> (<a class=\"id\" href=\"#frame\">frame</a>, <a class=\"id\" href=\"#hash2\">hash2</a> + <a class=\"id\" href=\"#continued\">continued</a>, <a class=\"id\" href=\"#newblock\">newblock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext3_journal_dirty_metadata\">ext3_journal_dirty_metadata</a> (<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#bh2\">bh2</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#journal_error\">journal_error</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext3_journal_dirty_metadata\">ext3_journal_dirty_metadata</a> (<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#frame\">frame</a>-><a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#journal_error\">journal_error</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a> (<a class=\"id\" href=\"#bh2\">bh2</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dxtrace\">dxtrace</a>(<a class=\"id\" href=\"#dx_show_index\">dx_show_index</a> (\"frame\", <a class=\"id\" href=\"#frame\">frame</a>-><a class=\"id\" href=\"#entries\">entries</a>));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#de\">de</a>;", 
"", 
"<a class=\"id\" href=\"#journal_error\">journal_error</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(*<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh2\">bh2</a>);", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_std_error\">ext3_std_error</a>(<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#err\">err</a>);", 
"<a class=\"id\" href=\"#errout\">errout</a>:", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Add a new entry into a directory (leaf) block.  If de is non-NULL,</span>", 
"<span class=\"comment\"> * it points to a directory entry which is guaranteed to be large</span>", 
"<span class=\"comment\"> * enough for new directory entry.  If de is NULL, then</span>", 
"<span class=\"comment\"> * add_dirent_to_buf will attempt search the directory block for</span>", 
"<span class=\"comment\"> * space.  It will return -ENOSPC if no space is available, and -EIO</span>", 
"<span class=\"comment\"> * and -EEXIST if directory entry already exists.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NOTE!  bh is NOT released in the case where ENOSPC is returned.  In</span>", 
"<span class=\"comment\"> * all other cases bh is released.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#add_dirent_to_buf\">add_dirent_to_buf</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#ext3_dir_entry_2\">ext3_dir_entry_2</a> *<a class=\"id\" href=\"#de\">de</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> * <a class=\"id\" href=\"#bh\">bh</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a><span class=\"ts\"/>*<a class=\"id\" href=\"#dir\">dir</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_parent\">d_parent</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>const char<span class=\"ts\"/>*<a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_name\">d_name</a>.<a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#namelen\">namelen</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_name\">d_name</a>.<a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><a class=\"id\" href=\"#reclen\">reclen</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nlen\">nlen</a>, <a class=\"id\" href=\"#rlen\">rlen</a>, <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#top\">top</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reclen\">reclen</a> = <a class=\"id\" href=\"#EXT3_DIR_REC_LEN\">EXT3_DIR_REC_LEN</a>(<a class=\"id\" href=\"#namelen\">namelen</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#de\">de</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#de\">de</a> = (struct <a class=\"id\" href=\"#ext3_dir_entry_2\">ext3_dir_entry_2</a> *)<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#top\">top</a> = <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a> + <a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> - <a class=\"id\" href=\"#reclen\">reclen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>while ((char *) <a class=\"id\" href=\"#de\">de</a> <= <a class=\"id\" href=\"#top\">top</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ext3_check_dir_entry\">ext3_check_dir_entry</a>(\"ext3_add_entry\", <a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#de\">de</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#bh\">bh</a>, <a class=\"id\" href=\"#offset\">offset</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a> (<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ext3_match\">ext3_match</a> (<a class=\"id\" href=\"#namelen\">namelen</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#de\">de</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a> (<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EEXIST\">EEXIST</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nlen\">nlen</a> = <a class=\"id\" href=\"#EXT3_DIR_REC_LEN\">EXT3_DIR_REC_LEN</a>(<a class=\"id\" href=\"#de\">de</a>-><a class=\"id\" href=\"#name_len\">name_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rlen\">rlen</a> = <a class=\"id\" href=\"#ext3_rec_len_from_disk\">ext3_rec_len_from_disk</a>(<a class=\"id\" href=\"#de\">de</a>-><a class=\"id\" href=\"#rec_len\">rec_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#de\">de</a>-><a class=\"id\" href=\"#inode\">inode</a>? <a class=\"id\" href=\"#rlen\">rlen</a> - <a class=\"id\" href=\"#nlen\">nlen</a>: <a class=\"id\" href=\"#rlen\">rlen</a>) >= <a class=\"id\" href=\"#reclen\">reclen</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#de\">de</a> = (struct <a class=\"id\" href=\"#ext3_dir_entry_2\">ext3_dir_entry_2</a> *)((char *)<a class=\"id\" href=\"#de\">de</a> + <a class=\"id\" href=\"#rlen\">rlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += <a class=\"id\" href=\"#rlen\">rlen</a>;", 
];
xr_frag_insert('l/4b/244e0518546ea09ba4e56e14a330cd5ed682b1.xr', __xr_tmp);
