var __xr_tmp = [
"<span class=\"comment\">/******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Module Name: utobject - ACPI object create/delete/size/cache routines</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *****************************************************************************/</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright (C) 2000 - 2010, Intel Corp.</span>", 
"<span class=\"comment\"> * All rights reserved.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Redistribution and use in source and binary forms, with or without</span>", 
"<span class=\"comment\"> * modification, are permitted provided that the following conditions</span>", 
"<span class=\"comment\"> * are met:</span>", 
"<span class=\"comment\"> * 1. Redistributions of source code must retain the above copyright</span>", 
"<span class=\"comment\"> *    notice, this list of conditions, and the following disclaimer,</span>", 
"<span class=\"comment\"> *    without modification.</span>", 
"<span class=\"comment\"> * 2. Redistributions in binary form must reproduce at minimum a disclaimer</span>", 
"<span class=\"comment\"> *    substantially similar to the \"NO WARRANTY\" disclaimer below</span>", 
"<span class=\"comment\"> *    (\"Disclaimer\") and any redistribution must be conditioned upon</span>", 
"<span class=\"comment\"> *    including a substantially similar Disclaimer requirement for further</span>", 
"<span class=\"comment\"> *    binary redistribution.</span>", 
"<span class=\"comment\"> * 3. Neither the names of the above-listed copyright holders nor the names</span>", 
"<span class=\"comment\"> *    of any contributors may be used to endorse or promote products derived</span>", 
"<span class=\"comment\"> *    from this software without specific prior written permission.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Alternatively, this software may be distributed under the terms of the</span>", 
"<span class=\"comment\"> * GNU General Public License (\"GPL\") version 2 as published by the Free</span>", 
"<span class=\"comment\"> * Software Foundation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NO WARRANTY</span>", 
"<span class=\"comment\"> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS</span>", 
"<span class=\"comment\"> * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT</span>", 
"<span class=\"comment\"> * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR</span>", 
"<span class=\"comment\"> * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT</span>", 
"<span class=\"comment\"> * HOLDERS OR CONTRIBUTORS BE LIABLE FOR SPECIAL, EXEMPLARY, OR CONSEQUENTIAL</span>", 
"<span class=\"comment\"> * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS</span>", 
"<span class=\"comment\"> * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)</span>", 
"<span class=\"comment\"> * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,</span>", 
"<span class=\"comment\"> * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING</span>", 
"<span class=\"comment\"> * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE</span>", 
"<span class=\"comment\"> * POSSIBILITY OF SUCH DAMAGES.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#acpi\">acpi</a>/<a class=\"id\" href=\"#acpi\">acpi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"accommon.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"acnamesp.h\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_COMPONENT\">_COMPONENT</a>          <a class=\"id\" href=\"#ACPI_UTILITIES\">ACPI_UTILITIES</a>", 
"<a class=\"id\" href=\"#ACPI_MODULE_NAME\">ACPI_MODULE_NAME</a>(\"utobject\")", 
"", 
"<span class=\"comment\">/* Local prototypes */</span>", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ut_get_simple_object_size\">acpi_ut_get_simple_object_size</a>(union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#obj\">obj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#acpi_size\">acpi_size</a> * <a class=\"id\" href=\"#obj_length\">obj_length</a>);", 
"", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ut_get_package_object_size\">acpi_ut_get_package_object_size</a>(union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#obj\">obj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_size\">acpi_size</a> * <a class=\"id\" href=\"#obj_length\">obj_length</a>);", 
"", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ut_get_element_length\">acpi_ut_get_element_length</a>(<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#object_type\">object_type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#source_object\">source_object</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   union <a class=\"id\" href=\"#acpi_generic_state\">acpi_generic_state</a> *<a class=\"id\" href=\"#state\">state</a>, void *<a class=\"id\" href=\"#context\">context</a>);", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ut_create_internal_object_dbg</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  module_name         - Source file name of caller</span>", 
"<span class=\"comment\"> *              line_number         - Line number of caller</span>", 
"<span class=\"comment\"> *              component_id        - Component type of caller</span>", 
"<span class=\"comment\"> *              Type                - ACPI Type of the new object</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      A new internal object, null on failure</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Create and initialize a new internal object.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NOTE:        We always allocate the worst-case object descriptor because</span>", 
"<span class=\"comment\"> *              these objects are cached, and we want them to be</span>", 
"<span class=\"comment\"> *              one-size-satisifies-any-request.  This in itself may not be</span>", 
"<span class=\"comment\"> *              the most memory efficient, but the efficiency of the object</span>", 
"<span class=\"comment\"> *              cache should more than make up for this!</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#acpi_ut_create_internal_object_dbg\">acpi_ut_create_internal_object_dbg</a>(const char", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      *<a class=\"id\" href=\"#module_name\">module_name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#line_number\">line_number</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#component_id\">component_id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#acpi_object_type\">acpi_object_type</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#object\">object</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#second_object\">second_object</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE_STR\">ACPI_FUNCTION_TRACE_STR</a>(<a class=\"id\" href=\"#ut_create_internal_object_dbg\">ut_create_internal_object_dbg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_get_type_name\">acpi_ut_get_type_name</a>(<a class=\"id\" href=\"#type\">type</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Allocate the raw object descriptor */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#object\">object</a> =", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ut_allocate_object_desc_dbg\">acpi_ut_allocate_object_desc_dbg</a>(<a class=\"id\" href=\"#module_name\">module_name</a>, <a class=\"id\" href=\"#line_number\">line_number</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#component_id\">component_id</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#object\">object</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_PTR\">return_PTR</a>(<a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_REGION\">ACPI_TYPE_REGION</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_BUFFER_FIELD\">ACPI_TYPE_BUFFER_FIELD</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_LOCAL_BANK_FIELD\">ACPI_TYPE_LOCAL_BANK_FIELD</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* These types require a secondary object */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#second_object\">second_object</a> = <a class=\"id\" href=\"#acpi_ut_allocate_object_desc_dbg\">acpi_ut_allocate_object_desc_dbg</a>(<a class=\"id\" href=\"#module_name\">module_name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#line_number\">line_number</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#component_id\">component_id</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#second_object\">second_object</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_delete_object_desc\">acpi_ut_delete_object_desc</a>(<a class=\"id\" href=\"#object\">object</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_PTR\">return_PTR</a>(<a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#second_object\">second_object</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#ACPI_TYPE_LOCAL_EXTRA\">ACPI_TYPE_LOCAL_EXTRA</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#second_object\">second_object</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#reference_count\">reference_count</a> = 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Link the second object to the first */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#object\">object</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#next_object\">next_object</a> = <a class=\"id\" href=\"#second_object\">second_object</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* All others have no secondary object */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Save the object type in the object descriptor */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#object\">object</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#type\">type</a> = (<a class=\"id\" href=\"#u8\">u8</a>) <a class=\"id\" href=\"#type\">type</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Init the reference count */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#object\">object</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#reference_count\">reference_count</a> = 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Any per-type initialization should go here */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_PTR\">return_PTR</a>(<a class=\"id\" href=\"#object\">object</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ut_create_package_object</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Count               - Number of package elements</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Pointer to a new Package object, null on failure</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Create a fully initialized package object</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#acpi_ut_create_package_object\">acpi_ut_create_package_object</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#package_desc\">package_desc</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> **<a class=\"id\" href=\"#package_elements\">package_elements</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE_U32\">ACPI_FUNCTION_TRACE_U32</a>(<a class=\"id\" href=\"#ut_create_package_object\">ut_create_package_object</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Create a new Package object */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#package_desc\">package_desc</a> = <a class=\"id\" href=\"#acpi_ut_create_internal_object\">acpi_ut_create_internal_object</a>(<a class=\"id\" href=\"#ACPI_TYPE_PACKAGE\">ACPI_TYPE_PACKAGE</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#package_desc\">package_desc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_PTR\">return_PTR</a>(<a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Create the element array. Count+1 allows the array to be null</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * terminated.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#package_elements\">package_elements</a> = <a class=\"id\" href=\"#ACPI_ALLOCATE_ZEROED\">ACPI_ALLOCATE_ZEROED</a>(((<a class=\"id\" href=\"#acpi_size\">acpi_size</a>) <a class=\"id\" href=\"#count\">count</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> 1) * sizeof(void *));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#package_elements\">package_elements</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_remove_reference\">acpi_ut_remove_reference</a>(<a class=\"id\" href=\"#package_desc\">package_desc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_PTR\">return_PTR</a>(<a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#package_desc\">package_desc</a>-><a class=\"id\" href=\"#package\">package</a>.<a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#package_desc\">package_desc</a>-><a class=\"id\" href=\"#package\">package</a>.<a class=\"id\" href=\"#elements\">elements</a> = <a class=\"id\" href=\"#package_elements\">package_elements</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_PTR\">return_PTR</a>(<a class=\"id\" href=\"#package_desc\">package_desc</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ut_create_integer_object</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  initial_value       - Initial value for the integer</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Pointer to a new Integer object, null on failure</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Create an initialized integer object</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#acpi_ut_create_integer_object\">acpi_ut_create_integer_object</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#initial_value\">initial_value</a>)", 
"{", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#integer_desc\">integer_desc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#ut_create_integer_object\">ut_create_integer_object</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Create and initialize a new integer object */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#integer_desc\">integer_desc</a> = <a class=\"id\" href=\"#acpi_ut_create_internal_object\">acpi_ut_create_internal_object</a>(<a class=\"id\" href=\"#ACPI_TYPE_INTEGER\">ACPI_TYPE_INTEGER</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#integer_desc\">integer_desc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_PTR\">return_PTR</a>(<a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#integer_desc\">integer_desc</a>-><a class=\"id\" href=\"#integer\">integer</a>.<a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#initial_value\">initial_value</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_PTR\">return_PTR</a>(<a class=\"id\" href=\"#integer_desc\">integer_desc</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ut_create_buffer_object</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  buffer_size            - Size of buffer to be created</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Pointer to a new Buffer object, null on failure</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Create a fully initialized buffer object</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#acpi_ut_create_buffer_object\">acpi_ut_create_buffer_object</a>(<a class=\"id\" href=\"#acpi_size\">acpi_size</a> <a class=\"id\" href=\"#buffer_size\">buffer_size</a>)", 
"{", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#buffer_desc\">buffer_desc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#buffer\">buffer</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE_U32\">ACPI_FUNCTION_TRACE_U32</a>(<a class=\"id\" href=\"#ut_create_buffer_object\">ut_create_buffer_object</a>, <a class=\"id\" href=\"#buffer_size\">buffer_size</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Create a new Buffer object */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buffer_desc\">buffer_desc</a> = <a class=\"id\" href=\"#acpi_ut_create_internal_object\">acpi_ut_create_internal_object</a>(<a class=\"id\" href=\"#ACPI_TYPE_BUFFER\">ACPI_TYPE_BUFFER</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#buffer_desc\">buffer_desc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_PTR\">return_PTR</a>(<a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Create an actual buffer only if size &gt; 0 */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#buffer_size\">buffer_size</a> &gt; 0) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Allocate the actual buffer */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a> = <a class=\"id\" href=\"#ACPI_ALLOCATE_ZEROED\">ACPI_ALLOCATE_ZEROED</a>(<a class=\"id\" href=\"#buffer_size\">buffer_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#buffer\">buffer</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, \"Could not allocate size %u\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#u32\">u32</a>) <a class=\"id\" href=\"#buffer_size\">buffer_size</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_remove_reference\">acpi_ut_remove_reference</a>(<a class=\"id\" href=\"#buffer_desc\">buffer_desc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_PTR\">return_PTR</a>(<a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Complete buffer object initialization */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buffer_desc\">buffer_desc</a>-><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#AOPOBJ_DATA_VALID\">AOPOBJ_DATA_VALID</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buffer_desc\">buffer_desc</a>-><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a> = <a class=\"id\" href=\"#buffer\">buffer</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buffer_desc\">buffer_desc</a>-><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#length\">length</a> = (<a class=\"id\" href=\"#u32\">u32</a>) <a class=\"id\" href=\"#buffer_size\">buffer_size</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Return the new buffer descriptor */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_PTR\">return_PTR</a>(<a class=\"id\" href=\"#buffer_desc\">buffer_desc</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ut_create_string_object</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  string_size         - Size of string to be created. Does not</span>", 
"<span class=\"comment\"> *                                    include NULL terminator, this is added</span>", 
"<span class=\"comment\"> *                                    automatically.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Pointer to a new String object</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Create a fully initialized string object</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#acpi_ut_create_string_object\">acpi_ut_create_string_object</a>(<a class=\"id\" href=\"#acpi_size\">acpi_size</a> <a class=\"id\" href=\"#string_size\">string_size</a>)", 
"{", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#string_desc\">string_desc</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#string\">string</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE_U32\">ACPI_FUNCTION_TRACE_U32</a>(<a class=\"id\" href=\"#ut_create_string_object\">ut_create_string_object</a>, <a class=\"id\" href=\"#string_size\">string_size</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Create a new String object */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#string_desc\">string_desc</a> = <a class=\"id\" href=\"#acpi_ut_create_internal_object\">acpi_ut_create_internal_object</a>(<a class=\"id\" href=\"#ACPI_TYPE_STRING\">ACPI_TYPE_STRING</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#string_desc\">string_desc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_PTR\">return_PTR</a>(<a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Allocate the actual string buffer -- (Size + 1) for NULL terminator.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * NOTE: Zero-length strings are NULL terminated</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#string\">string</a> = <a class=\"id\" href=\"#ACPI_ALLOCATE_ZEROED\">ACPI_ALLOCATE_ZEROED</a>(<a class=\"id\" href=\"#string_size\">string_size</a> + 1);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#string\">string</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, \"Could not allocate size %u\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#u32\">u32</a>) <a class=\"id\" href=\"#string_size\">string_size</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_remove_reference\">acpi_ut_remove_reference</a>(<a class=\"id\" href=\"#string_desc\">string_desc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_PTR\">return_PTR</a>(<a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Complete string object initialization */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#string_desc\">string_desc</a>-><a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#pointer\">pointer</a> = <a class=\"id\" href=\"#string\">string</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#string_desc\">string_desc</a>-><a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#length\">length</a> = (<a class=\"id\" href=\"#u32\">u32</a>) <a class=\"id\" href=\"#string_size\">string_size</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Return the new string descriptor */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_PTR\">return_PTR</a>(<a class=\"id\" href=\"#string_desc\">string_desc</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ut_valid_internal_object</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Object              - Object to be validated</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      TRUE if object is valid, FALSE otherwise</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Validate a pointer to be a union acpi_operand_object</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#acpi_ut_valid_internal_object\">acpi_ut_valid_internal_object</a>(void *<a class=\"id\" href=\"#object\">object</a>)", 
"{", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_NAME\">ACPI_FUNCTION_NAME</a>(<a class=\"id\" href=\"#ut_valid_internal_object\">ut_valid_internal_object</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check for a null pointer */</span>", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#object\">object</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_EXEC\">ACPI_DB_EXEC</a>, \"**** Null Object Ptr\\n\"));", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#FALSE\">FALSE</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check the descriptor type field */</span>", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#ACPI_GET_DESCRIPTOR_TYPE\">ACPI_GET_DESCRIPTOR_TYPE</a>(<a class=\"id\" href=\"#object\">object</a>)) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_DESC_TYPE_OPERAND\">ACPI_DESC_TYPE_OPERAND</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* The object appears to be a valid union acpi_operand_object    */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#TRUE\">TRUE</a>);", 
"", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_EXEC\">ACPI_DB_EXEC</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"%p is not not an ACPI operand obj [%s]\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#object\">object</a>, <a class=\"id\" href=\"#acpi_ut_get_descriptor_name\">acpi_ut_get_descriptor_name</a>(<a class=\"id\" href=\"#object\">object</a>)));", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#FALSE\">FALSE</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ut_allocate_object_desc_dbg</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  module_name         - Caller's module name (for error output)</span>", 
"<span class=\"comment\"> *              line_number         - Caller's line number (for error output)</span>", 
"<span class=\"comment\"> *              component_id        - Caller's component ID (for error output)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Pointer to newly allocated object descriptor.  Null on error</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Allocate a new object descriptor.  Gracefully handle</span>", 
"<span class=\"comment\"> *              error conditions.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"void *<a class=\"id\" href=\"#acpi_ut_allocate_object_desc_dbg\">acpi_ut_allocate_object_desc_dbg</a>(const char *<a class=\"id\" href=\"#module_name\">module_name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#line_number\">line_number</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#component_id\">component_id</a>)", 
"{", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#object\">object</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#ut_allocate_object_desc_dbg\">ut_allocate_object_desc_dbg</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#object\">object</a> = <a class=\"id\" href=\"#acpi_os_acquire_object\">acpi_os_acquire_object</a>(<a class=\"id\" href=\"#acpi_gbl_operand_cache\">acpi_gbl_operand_cache</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#object\">object</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#module_name\">module_name</a>, <a class=\"id\" href=\"#line_number\">line_number</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"Could not allocate an object descriptor\"));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_PTR\">return_PTR</a>(<a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Mark the descriptor type */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#object\">object</a>, 0, sizeof(union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_SET_DESCRIPTOR_TYPE\">ACPI_SET_DESCRIPTOR_TYPE</a>(<a class=\"id\" href=\"#object\">object</a>, <a class=\"id\" href=\"#ACPI_DESC_TYPE_OPERAND\">ACPI_DESC_TYPE_OPERAND</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_ALLOCATIONS\">ACPI_DB_ALLOCATIONS</a>, \"%p Size %X\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#object\">object</a>, (<a class=\"id\" href=\"#u32\">u32</a>) sizeof(union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a>)));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_PTR\">return_PTR</a>(<a class=\"id\" href=\"#object\">object</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ut_delete_object_desc</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Object          - An Acpi internal object to be deleted</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      None.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Free an ACPI object descriptor or add it to the object cache</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"void <a class=\"id\" href=\"#acpi_ut_delete_object_desc\">acpi_ut_delete_object_desc</a>(union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#object\">object</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE_PTR\">ACPI_FUNCTION_TRACE_PTR</a>(<a class=\"id\" href=\"#ut_delete_object_desc\">ut_delete_object_desc</a>, <a class=\"id\" href=\"#object\">object</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Object must be a union acpi_operand_object    */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_GET_DESCRIPTOR_TYPE\">ACPI_GET_DESCRIPTOR_TYPE</a>(<a class=\"id\" href=\"#object\">object</a>) != <a class=\"id\" href=\"#ACPI_DESC_TYPE_OPERAND\">ACPI_DESC_TYPE_OPERAND</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"%p is not an ACPI Operand object [%s]\", <a class=\"id\" href=\"#object\">object</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ut_get_descriptor_name\">acpi_ut_get_descriptor_name</a>(<a class=\"id\" href=\"#object\">object</a>)));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_VOID\">return_VOID</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>(void)<a class=\"id\" href=\"#acpi_os_release_object\">acpi_os_release_object</a>(<a class=\"id\" href=\"#acpi_gbl_operand_cache\">acpi_gbl_operand_cache</a>, <a class=\"id\" href=\"#object\">object</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_VOID\">return_VOID</a>;", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ut_get_simple_object_size</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  internal_object    - An ACPI operand object</span>", 
"<span class=\"comment\"> *              obj_length         - Where the length is returned</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: This function is called to determine the space required to</span>", 
"<span class=\"comment\"> *              contain a simple object for return to an external user.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *              The length includes the object structure plus any additional</span>", 
"<span class=\"comment\"> *              needed space.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ut_get_simple_object_size\">acpi_ut_get_simple_object_size</a>(union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#internal_object\">internal_object</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#acpi_size\">acpi_size</a> * <a class=\"id\" href=\"#obj_length\">obj_length</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_size\">acpi_size</a> <a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_size\">acpi_size</a> <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE_PTR\">ACPI_FUNCTION_TRACE_PTR</a>(<a class=\"id\" href=\"#ut_get_simple_object_size\">ut_get_simple_object_size</a>, <a class=\"id\" href=\"#internal_object\">internal_object</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Handle a null object (Could be a uninitialized package</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * element -- which is legal)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#internal_object\">internal_object</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#obj_length\">obj_length</a> = sizeof(union <a class=\"id\" href=\"#acpi_object\">acpi_object</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Start with the length of the Acpi object */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> = sizeof(union <a class=\"id\" href=\"#acpi_object\">acpi_object</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_GET_DESCRIPTOR_TYPE\">ACPI_GET_DESCRIPTOR_TYPE</a>(<a class=\"id\" href=\"#internal_object\">internal_object</a>) == <a class=\"id\" href=\"#ACPI_DESC_TYPE_NAMED\">ACPI_DESC_TYPE_NAMED</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Object is a named object (reference), just return the length */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#obj_length\">obj_length</a> = <a class=\"id\" href=\"#ACPI_ROUND_UP_TO_NATIVE_WORD\">ACPI_ROUND_UP_TO_NATIVE_WORD</a>(<a class=\"id\" href=\"#length\">length</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The final length depends on the object type</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Strings and Buffers are packed right up against the parent object and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * must be accessed bytewise or there may be alignment problems on</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * certain processors</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#internal_object\">internal_object</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_STRING\">ACPI_TYPE_STRING</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> += (<a class=\"id\" href=\"#acpi_size\">acpi_size</a>) <a class=\"id\" href=\"#internal_object\">internal_object</a>-><a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#length\">length</a> + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
];
xr_frag_insert('l/4c/0566a00b1475be8c2de8bc5f27b6038746052d.xr', __xr_tmp);
