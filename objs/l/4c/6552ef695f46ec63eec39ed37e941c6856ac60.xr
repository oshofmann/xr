var __xr_tmp = [
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>     * connection is not bidirectional, user drained</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>     * receive buffer and there was a small segment</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>     * in queue.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>     */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#copied\">copied</a> &gt; 0 &&", 
"<span class=\"ts\"/><span class=\"ts\"/>     ((<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ack\">icsk_ack</a>.<a class=\"id\" href=\"#pending\">pending</a> &amp; <a class=\"id\" href=\"#ICSK_ACK_PUSHED2\">ICSK_ACK_PUSHED2</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>      ((<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ack\">icsk_ack</a>.<a class=\"id\" href=\"#pending\">pending</a> &amp; <a class=\"id\" href=\"#ICSK_ACK_PUSHED\">ICSK_ACK_PUSHED</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>       !<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ack\">icsk_ack</a>.<a class=\"id\" href=\"#pingpong\">pingpong</a>)) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>      !<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rmem_alloc\">sk_rmem_alloc</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#time_to_ack\">time_to_ack</a> = 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We send an ACK if we can now advertise a non-zero window</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * which has been raised \"significantly\".</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Even if window raised up to infinity, do not send window open ACK</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * in states, where we will not receive more. It is useless.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copied\">copied</a> &gt; 0 && !<a class=\"id\" href=\"#time_to_ack\">time_to_ack</a> && !(<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_shutdown\">sk_shutdown</a> &amp; <a class=\"id\" href=\"#RCV_SHUTDOWN\">RCV_SHUTDOWN</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#rcv_window_now\">rcv_window_now</a> = <a class=\"id\" href=\"#tcp_receive_window\">tcp_receive_window</a>(<a class=\"id\" href=\"#tp\">tp</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Optimize, __tcp_select_window() is not cheap. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (2*<a class=\"id\" href=\"#rcv_window_now\">rcv_window_now</a> <= <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#window_clamp\">window_clamp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#new_window\">new_window</a> = <a class=\"id\" href=\"#__tcp_select_window\">__tcp_select_window</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Send ACK now, if this read freed lots of space</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * in our buffer. Certainly, new_window is new window.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * We can advertise it now, if it is not less than current one.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * \"Lots\" means \"at least twice\" here.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#new_window\">new_window</a> && <a class=\"id\" href=\"#new_window\">new_window</a> >= 2 * <a class=\"id\" href=\"#rcv_window_now\">rcv_window_now</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#time_to_ack\">time_to_ack</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#time_to_ack\">time_to_ack</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_send_ack\">tcp_send_ack</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#tcp_prequeue_process\">tcp_prequeue_process</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NET_INC_STATS_USER\">NET_INC_STATS_USER</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#LINUX_MIB_TCPPREQUEUED\">LINUX_MIB_TCPPREQUEUED</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* RX process wants to run with disabled BHs, though it is not</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * necessary */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_bh_disable\">local_bh_disable</a>();", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#__skb_dequeue\">__skb_dequeue</a>(&amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#prequeue\">prequeue</a>)) != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_backlog_rcv\">sk_backlog_rcv</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_bh_enable\">local_bh_enable</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Clear memory counter. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#memory\">memory</a> = 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET_DMA\">CONFIG_NET_DMA</a>", 
"static void <a class=\"id\" href=\"#tcp_service_net_dma\">tcp_service_net_dma</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#wait\">wait</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dma_cookie_t\">dma_cookie_t</a> <a class=\"id\" href=\"#done\">done</a>, <a class=\"id\" href=\"#used\">used</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dma_cookie_t\">dma_cookie_t</a> <a class=\"id\" href=\"#last_issued\">last_issued</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#dma_chan\">dma_chan</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#last_issued\">last_issued</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#dma_cookie\">dma_cookie</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dma_async_memcpy_issue_pending\">dma_async_memcpy_issue_pending</a>(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#dma_chan\">dma_chan</a>);", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dma_async_memcpy_complete\">dma_async_memcpy_complete</a>(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#dma_chan\">dma_chan</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#last_issued\">last_issued</a>, &amp;<a class=\"id\" href=\"#done\">done</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      &amp;<a class=\"id\" href=\"#used\">used</a>) == <a class=\"id\" href=\"#DMA_SUCCESS\">DMA_SUCCESS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Safe to free early-copied skbs now */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__skb_queue_purge\">__skb_queue_purge</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_async_wait_queue\">sk_async_wait_queue</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>while ((<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#skb_peek\">skb_peek</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_async_wait_queue\">sk_async_wait_queue</a>)) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#dma_async_is_complete\">dma_async_is_complete</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dma_cookie\">dma_cookie</a>, <a class=\"id\" href=\"#done\">done</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#used\">used</a>) == <a class=\"id\" href=\"#DMA_SUCCESS\">DMA_SUCCESS</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__skb_dequeue\">__skb_dequeue</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_async_wait_queue\">sk_async_wait_queue</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#wait\">wait</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#tcp_recv_skb\">tcp_recv_skb</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#off\">off</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#offset\">offset</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_queue_walk\">skb_queue_walk</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_receive_queue\">sk_receive_queue</a>, <a class=\"id\" href=\"#skb\">skb</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#seq\">seq</a> - <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#syn\">syn</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#offset\">offset</a> &lt; <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> || <a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#fin\">fin</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#off\">off</a> = <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This routine provides an alternative to tcp_recvmsg() for routines</span>", 
"<span class=\"comment\"> * that would like to handle copying from skbuffs directly in 'sendfile'</span>", 
"<span class=\"comment\"> * fashion.</span>", 
"<span class=\"comment\"> * Note:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- It is assumed that the socket was locked by the caller.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- The routine does not block.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- At present, there is no support for reading OOB data</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>  or for 'peeking' the socket using this routine</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>  (although both would be easy to implement).</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#tcp_read_sock\">tcp_read_sock</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#read_descriptor_t\">read_descriptor_t</a> *<a class=\"id\" href=\"#desc\">desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#sk_read_actor_t\">sk_read_actor_t</a> <a class=\"id\" href=\"#recv_actor\">recv_actor</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#seq\">seq</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#copied_seq\">copied_seq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#copied\">copied</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> == <a class=\"id\" href=\"#TCP_LISTEN\">TCP_LISTEN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOTCONN\">ENOTCONN</a>;", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#tcp_recv_skb\">tcp_recv_skb</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#seq\">seq</a>, &amp;<a class=\"id\" href=\"#offset\">offset</a>)) != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#offset\">offset</a> &lt; <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#used\">used</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> - <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Stop reading if we hit a patch of urgent data */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#urg_data\">urg_data</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#urg_offset\">urg_offset</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#urg_seq\">urg_seq</a> - <a class=\"id\" href=\"#seq\">seq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#urg_offset\">urg_offset</a> &lt; <a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#urg_offset\">urg_offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#used\">used</a> = <a class=\"id\" href=\"#recv_actor\">recv_actor</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#used\">used</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#copied\">copied</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copied\">copied</a> = <a class=\"id\" href=\"#used\">used</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#used\">used</a> <= <a class=\"id\" href=\"#len\">len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq\">seq</a> += <a class=\"id\" href=\"#used\">used</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copied\">copied</a> += <a class=\"id\" href=\"#used\">used</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += <a class=\"id\" href=\"#used\">used</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * If recv_actor drops the lock (e.g. TCP splice</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * receive) the skb pointer might be invalid when</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * getting here: tcp_collapse might have deleted it</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * while aggregating skbs from the socket queue.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#tcp_recv_skb\">tcp_recv_skb</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#seq\">seq</a>-1, &amp;<a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb\">skb</a> || (<a class=\"id\" href=\"#offset\">offset</a>+1 != <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#fin\">fin</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_eat_skb\">sk_eat_skb</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>++<a class=\"id\" href=\"#seq\">seq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_eat_skb\">sk_eat_skb</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#count\">count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#copied_seq\">copied_seq</a> = <a class=\"id\" href=\"#seq\">seq</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#copied_seq\">copied_seq</a> = <a class=\"id\" href=\"#seq\">seq</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_rcv_space_adjust\">tcp_rcv_space_adjust</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Clean up data we have read: This will do ACK frames. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copied\">copied</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_cleanup_rbuf\">tcp_cleanup_rbuf</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#copied\">copied</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#copied\">copied</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tcp_read_sock\">tcp_read_sock</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This routine copies from a sock struct into the user buffer.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Technical note: in 2.3 we work on _locked_ socket, so that</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tricks with *seq access order and skb-&gt;users are not required.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Probably, code can be easily improved even more.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#tcp_recvmsg\">tcp_recvmsg</a>(struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *<a class=\"id\" href=\"#iocb\">iocb</a>, struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#msghdr\">msghdr</a> *<a class=\"id\" href=\"#msg\">msg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>, int <a class=\"id\" href=\"#nonblock\">nonblock</a>, int <a class=\"id\" href=\"#flags\">flags</a>, int *<a class=\"id\" href=\"#addr_len\">addr_len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#copied\">copied</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#peek_seq\">peek_seq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#seq\">seq</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#used\">used</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#target\">target</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Read at least this many bytes */</span>", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#timeo\">timeo</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#user_recv\">user_recv</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#copied_early\">copied_early</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#urg_hole\">urg_hole</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_sock\">lock_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_CHECK_TIMER\">TCP_CHECK_TIMER</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOTCONN\">ENOTCONN</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> == <a class=\"id\" href=\"#TCP_LISTEN\">TCP_LISTEN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timeo\">timeo</a> = <a class=\"id\" href=\"#sock_rcvtimeo\">sock_rcvtimeo</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#nonblock\">nonblock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Urgent data needs to be handled specially. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#MSG_OOB\">MSG_OOB</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#recv_urg\">recv_urg</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq\">seq</a> = &amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#copied_seq\">copied_seq</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#MSG_PEEK\">MSG_PEEK</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#peek_seq\">peek_seq</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#copied_seq\">copied_seq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq\">seq</a> = &amp;<a class=\"id\" href=\"#peek_seq\">peek_seq</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#target\">target</a> = <a class=\"id\" href=\"#sock_rcvlowat\">sock_rcvlowat</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#MSG_WAITALL\">MSG_WAITALL</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET_DMA\">CONFIG_NET_DMA</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#dma_chan\">dma_chan</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#preempt_disable\">preempt_disable</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#skb_peek_tail\">skb_peek_tail</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_receive_queue\">sk_receive_queue</a>);", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#available\">available</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#available\">available</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a> + <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> - (*<a class=\"id\" href=\"#seq\">seq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#available\">available</a> &lt; <a class=\"id\" href=\"#target\">target</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#sysctl_tcp_dma_copybreak\">sysctl_tcp_dma_copybreak</a>) && !(<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#MSG_PEEK\">MSG_PEEK</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#sysctl_tcp_low_latency\">sysctl_tcp_low_latency</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#dma_find_channel\">dma_find_channel</a>(<a class=\"id\" href=\"#DMA_MEMCPY\">DMA_MEMCPY</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#preempt_enable_no_resched\">preempt_enable_no_resched</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#pinned_list\">pinned_list</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dma_pin_iovec_pages\">dma_pin_iovec_pages</a>(<a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#msg_iov\">msg_iov</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#preempt_enable_no_resched\">preempt_enable_no_resched</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#offset\">offset</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Are we at urgent data? Stop if we have read anything or have SIGURG pending. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#urg_data\">urg_data</a> && <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#urg_seq\">urg_seq</a> == *<a class=\"id\" href=\"#seq\">seq</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copied\">copied</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#signal_pending\">signal_pending</a>(<a class=\"id\" href=\"#current\">current</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copied\">copied</a> = <a class=\"id\" href=\"#timeo\">timeo</a> ? <a class=\"id\" href=\"#sock_intr_errno\">sock_intr_errno</a>(<a class=\"id\" href=\"#timeo\">timeo</a>) : -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Next get a buffer. */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_queue_walk\">skb_queue_walk</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_receive_queue\">sk_receive_queue</a>, <a class=\"id\" href=\"#skb\">skb</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Now that we have two receive queues this</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * shouldn't happen.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#WARN\">WARN</a>(<a class=\"id\" href=\"#before\">before</a>(*<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"recvmsg bug: copied %X \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"seq %X rcvnxt %X fl %X\\n\", *<a class=\"id\" href=\"#seq\">seq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_nxt\">rcv_nxt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#flags\">flags</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = *<a class=\"id\" href=\"#seq\">seq</a> - <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#syn\">syn</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#offset\">offset</a> &lt; <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#found_ok_skb\">found_ok_skb</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#fin\">fin</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#found_fin_ok\">found_fin_ok</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN\">WARN</a>(!(<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#MSG_PEEK\">MSG_PEEK</a>), <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"recvmsg bug 2: \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"copied %X seq %X rcvnxt %X fl %X\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_nxt\">rcv_nxt</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Well, if we have backlog, try to process it now yet. */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copied\">copied</a> >= <a class=\"id\" href=\"#target\">target</a> && !<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_backlog\">sk_backlog</a>.<a class=\"id\" href=\"#tail\">tail</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copied\">copied</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_err\">sk_err</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> == <a class=\"id\" href=\"#TCP_CLOSE\">TCP_CLOSE</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_shutdown\">sk_shutdown</a> &amp; <a class=\"id\" href=\"#RCV_SHUTDOWN\">RCV_SHUTDOWN</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#timeo\">timeo</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#signal_pending\">signal_pending</a>(<a class=\"id\" href=\"#current\">current</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sock_flag\">sock_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_DONE\">SOCK_DONE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_err\">sk_err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copied\">copied</a> = <a class=\"id\" href=\"#sock_error\">sock_error</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_shutdown\">sk_shutdown</a> &amp; <a class=\"id\" href=\"#RCV_SHUTDOWN\">RCV_SHUTDOWN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> == <a class=\"id\" href=\"#TCP_CLOSE\">TCP_CLOSE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#sock_flag\">sock_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_DONE\">SOCK_DONE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* This occurs when user tries to read</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * from never connected socket.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copied\">copied</a> = -<a class=\"id\" href=\"#ENOTCONN\">ENOTCONN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#timeo\">timeo</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copied\">copied</a> = -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#signal_pending\">signal_pending</a>(<a class=\"id\" href=\"#current\">current</a>)) {", 
];
xr_frag_insert('l/4c/6552ef695f46ec63eec39ed37e941c6856ac60.xr', __xr_tmp);
