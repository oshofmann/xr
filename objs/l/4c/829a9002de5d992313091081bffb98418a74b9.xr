var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * lib/debug_locks.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Generic place for common debugging facilities for various locks:</span>", 
"<span class=\"comment\"> * spinlocks, rwlocks, mutexes and rwsems.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Started by Ingo Molnar:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 2006 Red Hat, Inc., Ingo Molnar &lt;mingo@redhat.com&gt;</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rwsem\">rwsem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mutex\">mutex</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#debug_locks\">debug_locks</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * We want to turn all lock-debugging facilities on/off at once,</span>", 
"<span class=\"comment\"> * via a global flag. The reason is that once a single bug has been</span>", 
"<span class=\"comment\"> * detected and reported, there might be cascade of followup bugs</span>", 
"<span class=\"comment\"> * that would just muddy the log. So we report the first one and</span>", 
"<span class=\"comment\"> * shut up after that.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#debug_locks\">debug_locks</a> = 1;", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#debug_locks\">debug_locks</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The locking-testsuite uses &lt;debug_locks_silent&gt; to get a</span>", 
"<span class=\"comment\"> * 'silent failure': nothing is printed to the console when</span>", 
"<span class=\"comment\"> * a locking bug is detected.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#debug_locks_silent\">debug_locks_silent</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Generic 'turn off all lock debugging' function:</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#debug_locks_off\">debug_locks_off</a>(void)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#__debug_locks_off\">__debug_locks_off</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#debug_locks_silent\">debug_locks_silent</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#oops_in_progress\">oops_in_progress</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#console_verbose\">console_verbose</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
];
xr_frag_insert('l/4c/829a9002de5d992313091081bffb98418a74b9.xr', __xr_tmp);
