var __xr_tmp = [
"<span class=\"comment\">/******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Module Name: psxface - Parser external interfaces</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *****************************************************************************/</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright (C) 2000 - 2010, Intel Corp.</span>", 
"<span class=\"comment\"> * All rights reserved.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Redistribution and use in source and binary forms, with or without</span>", 
"<span class=\"comment\"> * modification, are permitted provided that the following conditions</span>", 
"<span class=\"comment\"> * are met:</span>", 
"<span class=\"comment\"> * 1. Redistributions of source code must retain the above copyright</span>", 
"<span class=\"comment\"> *    notice, this list of conditions, and the following disclaimer,</span>", 
"<span class=\"comment\"> *    without modification.</span>", 
"<span class=\"comment\"> * 2. Redistributions in binary form must reproduce at minimum a disclaimer</span>", 
"<span class=\"comment\"> *    substantially similar to the \"NO WARRANTY\" disclaimer below</span>", 
"<span class=\"comment\"> *    (\"Disclaimer\") and any redistribution must be conditioned upon</span>", 
"<span class=\"comment\"> *    including a substantially similar Disclaimer requirement for further</span>", 
"<span class=\"comment\"> *    binary redistribution.</span>", 
"<span class=\"comment\"> * 3. Neither the names of the above-listed copyright holders nor the names</span>", 
"<span class=\"comment\"> *    of any contributors may be used to endorse or promote products derived</span>", 
"<span class=\"comment\"> *    from this software without specific prior written permission.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Alternatively, this software may be distributed under the terms of the</span>", 
"<span class=\"comment\"> * GNU General Public License (\"GPL\") version 2 as published by the Free</span>", 
"<span class=\"comment\"> * Software Foundation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NO WARRANTY</span>", 
"<span class=\"comment\"> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS</span>", 
"<span class=\"comment\"> * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT</span>", 
"<span class=\"comment\"> * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR</span>", 
"<span class=\"comment\"> * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT</span>", 
"<span class=\"comment\"> * HOLDERS OR CONTRIBUTORS BE LIABLE FOR SPECIAL, EXEMPLARY, OR CONSEQUENTIAL</span>", 
"<span class=\"comment\"> * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS</span>", 
"<span class=\"comment\"> * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)</span>", 
"<span class=\"comment\"> * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,</span>", 
"<span class=\"comment\"> * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING</span>", 
"<span class=\"comment\"> * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE</span>", 
"<span class=\"comment\"> * POSSIBILITY OF SUCH DAMAGES.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#acpi\">acpi</a>/<a class=\"id\" href=\"#acpi\">acpi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"accommon.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"acparser.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"acdispat.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"acinterp.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"actables.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"amlcode.h\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_COMPONENT\">_COMPONENT</a>          <a class=\"id\" href=\"#ACPI_PARSER\">ACPI_PARSER</a>", 
"<a class=\"id\" href=\"#ACPI_MODULE_NAME\">ACPI_MODULE_NAME</a>(\"psxface\")", 
"", 
"<span class=\"comment\">/* Local Prototypes */</span>", 
"static void <a class=\"id\" href=\"#acpi_ps_start_trace\">acpi_ps_start_trace</a>(struct <a class=\"id\" href=\"#acpi_evaluate_info\">acpi_evaluate_info</a> *<a class=\"id\" href=\"#info\">info</a>);", 
"", 
"static void <a class=\"id\" href=\"#acpi_ps_stop_trace\">acpi_ps_stop_trace</a>(struct <a class=\"id\" href=\"#acpi_evaluate_info\">acpi_evaluate_info</a> *<a class=\"id\" href=\"#info\">info</a>);", 
"", 
"static void", 
"<a class=\"id\" href=\"#acpi_ps_update_parameter_list\">acpi_ps_update_parameter_list</a>(struct <a class=\"id\" href=\"#acpi_evaluate_info\">acpi_evaluate_info</a> *<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#action\">action</a>);", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_debug_trace</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  method_name     - Valid ACPI name string</span>", 
"<span class=\"comment\"> *              debug_level     - Optional level mask. 0 to use default</span>", 
"<span class=\"comment\"> *              debug_layer     - Optional layer mask. 0 to use default</span>", 
"<span class=\"comment\"> *              Flags           - bit 1: one shot(1) or persistent(0)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: External interface to enable debug tracing during control</span>", 
"<span class=\"comment\"> *              method execution</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_debug_trace\">acpi_debug_trace</a>(char *<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#debug_level\">debug_level</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#debug_layer\">debug_layer</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ut_acquire_mutex\">acpi_ut_acquire_mutex</a>(<a class=\"id\" href=\"#ACPI_MTX_NAMESPACE\">ACPI_MTX_NAMESPACE</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* TBDs: Validate name, allow full path or just nameseg */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_trace_method_name\">acpi_gbl_trace_method_name</a> = *<a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(<a class=\"id\" href=\"#u32\">u32</a>, <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_trace_flags\">acpi_gbl_trace_flags</a> = <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#debug_level\">debug_level</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_trace_dbg_level\">acpi_gbl_trace_dbg_level</a> = <a class=\"id\" href=\"#debug_level\">debug_level</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#debug_layer\">debug_layer</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_trace_dbg_layer\">acpi_gbl_trace_dbg_layer</a> = <a class=\"id\" href=\"#debug_layer\">debug_layer</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>(void)<a class=\"id\" href=\"#acpi_ut_release_mutex\">acpi_ut_release_mutex</a>(<a class=\"id\" href=\"#ACPI_MTX_NAMESPACE\">ACPI_MTX_NAMESPACE</a>);", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ps_start_trace</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Info        - Method info struct</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      None</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Start control method execution trace</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"static void <a class=\"id\" href=\"#acpi_ps_start_trace\">acpi_ps_start_trace</a>(struct <a class=\"id\" href=\"#acpi_evaluate_info\">acpi_evaluate_info</a> *<a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_ENTRY\">ACPI_FUNCTION_ENTRY</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ut_acquire_mutex\">acpi_ut_acquire_mutex</a>(<a class=\"id\" href=\"#ACPI_MTX_NAMESPACE\">ACPI_MTX_NAMESPACE</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if ((!<a class=\"id\" href=\"#acpi_gbl_trace_method_name\">acpi_gbl_trace_method_name</a>) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#acpi_gbl_trace_method_name\">acpi_gbl_trace_method_name</a> != <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#resolved_node\">resolved_node</a>-><a class=\"id\" href=\"#name\">name</a>.<a class=\"id\" href=\"#integer\">integer</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit\">exit</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_original_dbg_level\">acpi_gbl_original_dbg_level</a> = <a class=\"id\" href=\"#acpi_dbg_level\">acpi_dbg_level</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_original_dbg_layer\">acpi_gbl_original_dbg_layer</a> = <a class=\"id\" href=\"#acpi_dbg_layer\">acpi_dbg_layer</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_dbg_level\">acpi_dbg_level</a> = 0x00FFFFFF;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_dbg_layer\">acpi_dbg_layer</a> = <a class=\"id\" href=\"#ACPI_UINT32_MAX\">ACPI_UINT32_MAX</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_gbl_trace_dbg_level\">acpi_gbl_trace_dbg_level</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_dbg_level\">acpi_dbg_level</a> = <a class=\"id\" href=\"#acpi_gbl_trace_dbg_level\">acpi_gbl_trace_dbg_level</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_gbl_trace_dbg_layer\">acpi_gbl_trace_dbg_layer</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_dbg_layer\">acpi_dbg_layer</a> = <a class=\"id\" href=\"#acpi_gbl_trace_dbg_layer\">acpi_gbl_trace_dbg_layer</a>;", 
"<span class=\"ts\"/>}", 
"", 
"      <a class=\"id\" href=\"#exit\">exit</a>:", 
"<span class=\"ts\"/>(void)<a class=\"id\" href=\"#acpi_ut_release_mutex\">acpi_ut_release_mutex</a>(<a class=\"id\" href=\"#ACPI_MTX_NAMESPACE\">ACPI_MTX_NAMESPACE</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ps_stop_trace</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Info        - Method info struct</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      None</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Stop control method execution trace</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"static void <a class=\"id\" href=\"#acpi_ps_stop_trace\">acpi_ps_stop_trace</a>(struct <a class=\"id\" href=\"#acpi_evaluate_info\">acpi_evaluate_info</a> *<a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_ENTRY\">ACPI_FUNCTION_ENTRY</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ut_acquire_mutex\">acpi_ut_acquire_mutex</a>(<a class=\"id\" href=\"#ACPI_MTX_NAMESPACE\">ACPI_MTX_NAMESPACE</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if ((!<a class=\"id\" href=\"#acpi_gbl_trace_method_name\">acpi_gbl_trace_method_name</a>) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#acpi_gbl_trace_method_name\">acpi_gbl_trace_method_name</a> != <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#resolved_node\">resolved_node</a>-><a class=\"id\" href=\"#name\">name</a>.<a class=\"id\" href=\"#integer\">integer</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit\">exit</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Disable further tracing if type is one-shot */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_gbl_trace_flags\">acpi_gbl_trace_flags</a> &amp; 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_trace_method_name\">acpi_gbl_trace_method_name</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_trace_dbg_level\">acpi_gbl_trace_dbg_level</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_trace_dbg_layer\">acpi_gbl_trace_dbg_layer</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_dbg_level\">acpi_dbg_level</a> = <a class=\"id\" href=\"#acpi_gbl_original_dbg_level\">acpi_gbl_original_dbg_level</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_dbg_layer\">acpi_dbg_layer</a> = <a class=\"id\" href=\"#acpi_gbl_original_dbg_layer\">acpi_gbl_original_dbg_layer</a>;", 
"", 
"      <a class=\"id\" href=\"#exit\">exit</a>:", 
"<span class=\"ts\"/>(void)<a class=\"id\" href=\"#acpi_ut_release_mutex\">acpi_ut_release_mutex</a>(<a class=\"id\" href=\"#ACPI_MTX_NAMESPACE\">ACPI_MTX_NAMESPACE</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ps_execute_method</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Info            - Method info block, contains:</span>", 
"<span class=\"comment\"> *                  Node            - Method Node to execute</span>", 
"<span class=\"comment\"> *                  obj_desc        - Method object</span>", 
"<span class=\"comment\"> *                  Parameters      - List of parameters to pass to the method,</span>", 
"<span class=\"comment\"> *                                    terminated by NULL. Params itself may be</span>", 
"<span class=\"comment\"> *                                    NULL if no parameters are being passed.</span>", 
"<span class=\"comment\"> *                  return_object   - Where to put method's return value (if</span>", 
"<span class=\"comment\"> *                                    any). If NULL, no value is returned.</span>", 
"<span class=\"comment\"> *                  parameter_type  - Type of Parameter list</span>", 
"<span class=\"comment\"> *                  return_object   - Where to put method's return value (if</span>", 
"<span class=\"comment\"> *                                    any). If NULL, no value is returned.</span>", 
"<span class=\"comment\"> *                  pass_number     - Parse or execute pass</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Execute a control method</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_ps_execute_method\">acpi_ps_execute_method</a>(struct <a class=\"id\" href=\"#acpi_evaluate_info\">acpi_evaluate_info</a> *<a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_parse_object\">acpi_parse_object</a> *<a class=\"id\" href=\"#op\">op</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_walk_state\">acpi_walk_state</a> *<a class=\"id\" href=\"#walk_state\">walk_state</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#ps_execute_method\">ps_execute_method</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Quick validation of DSDT header */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_tb_check_dsdt_header\">acpi_tb_check_dsdt_header</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Validate the Info and method Node */</span>", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#info\">info</a> || !<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#resolved_node\">resolved_node</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_NULL_ENTRY\">AE_NULL_ENTRY</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Init for new method, wait on concurrency semaphore */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ds_begin_method_execution\">acpi_ds_begin_method_execution</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#resolved_node\">resolved_node</a>, <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#obj_desc\">obj_desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The caller \"owns\" the parameters, so give each one an extra reference</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_ps_update_parameter_list\">acpi_ps_update_parameter_list</a>(<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#REF_INCREMENT\">REF_INCREMENT</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Begin tracing if requested */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_ps_start_trace\">acpi_ps_start_trace</a>(<a class=\"id\" href=\"#info\">info</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Execute the method. Performs parse simultaneously</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_PARSE\">ACPI_DB_PARSE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"**** Begin Method Parse/Execute [%4.4s] **** Node=%p Obj=%p\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#resolved_node\">resolved_node</a>-><a class=\"id\" href=\"#name\">name</a>.<a class=\"id\" href=\"#ascii\">ascii</a>, <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#resolved_node\">resolved_node</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#obj_desc\">obj_desc</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Create and init a Root Node */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#op\">op</a> = <a class=\"id\" href=\"#acpi_ps_create_scope_op\">acpi_ps_create_scope_op</a>();", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#op\">op</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_NO_MEMORY\">AE_NO_MEMORY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Create and initialize a new walk state */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#pass_number\">pass_number</a> = <a class=\"id\" href=\"#ACPI_IMODE_EXECUTE\">ACPI_IMODE_EXECUTE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#walk_state\">walk_state</a> =", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ds_create_walk_state\">acpi_ds_create_walk_state</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#method\">method</a>.<a class=\"id\" href=\"#owner_id\">owner_id</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#walk_state\">walk_state</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_NO_MEMORY\">AE_NO_MEMORY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ds_init_aml_walk\">acpi_ds_init_aml_walk</a>(<a class=\"id\" href=\"#walk_state\">walk_state</a>, <a class=\"id\" href=\"#op\">op</a>, <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#resolved_node\">resolved_node</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#method\">method</a>.<a class=\"id\" href=\"#aml_start\">aml_start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#method\">method</a>.<a class=\"id\" href=\"#aml_length\">aml_length</a>, <a class=\"id\" href=\"#info\">info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#pass_number\">pass_number</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ds_delete_walk_state\">acpi_ds_delete_walk_state</a>(<a class=\"id\" href=\"#walk_state\">walk_state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#method\">method</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#AOPOBJ_MODULE_LEVEL\">AOPOBJ_MODULE_LEVEL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#walk_state\">walk_state</a>-><a class=\"id\" href=\"#parse_flags\">parse_flags</a> |= <a class=\"id\" href=\"#ACPI_PARSE_MODULE_LEVEL\">ACPI_PARSE_MODULE_LEVEL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Invoke an internal method if necessary */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#method\">method</a>.<a class=\"id\" href=\"#method_flags\">method_flags</a> &amp; <a class=\"id\" href=\"#AML_METHOD_INTERNAL_ONLY\">AML_METHOD_INTERNAL_ONLY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#method\">method</a>.<a class=\"id\" href=\"#extra\">extra</a>.<a class=\"id\" href=\"#implementation\">implementation</a>(<a class=\"id\" href=\"#walk_state\">walk_state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#return_object\">return_object</a> = <a class=\"id\" href=\"#walk_state\">walk_state</a>-><a class=\"id\" href=\"#return_desc\">return_desc</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Cleanup states */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ds_scope_stack_clear\">acpi_ds_scope_stack_clear</a>(<a class=\"id\" href=\"#walk_state\">walk_state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ps_cleanup_scope\">acpi_ps_cleanup_scope</a>(&amp;<a class=\"id\" href=\"#walk_state\">walk_state</a>-><a class=\"id\" href=\"#parser_state\">parser_state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ds_terminate_control_method\">acpi_ds_terminate_control_method</a>(<a class=\"id\" href=\"#walk_state\">walk_state</a>-><a class=\"id\" href=\"#method_desc\">method_desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#walk_state\">walk_state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ds_delete_walk_state\">acpi_ds_delete_walk_state</a>(<a class=\"id\" href=\"#walk_state\">walk_state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Start method evaluation with an implicit return of zero.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This is done for Windows compatibility.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_gbl_enable_interpreter_slack\">acpi_gbl_enable_interpreter_slack</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#walk_state\">walk_state</a>-><a class=\"id\" href=\"#implicit_return_obj\">implicit_return_obj</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ut_create_integer_object\">acpi_ut_create_integer_object</a>((<a class=\"id\" href=\"#u64\">u64</a>) 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#walk_state\">walk_state</a>-><a class=\"id\" href=\"#implicit_return_obj\">implicit_return_obj</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_NO_MEMORY\">AE_NO_MEMORY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ds_delete_walk_state\">acpi_ds_delete_walk_state</a>(<a class=\"id\" href=\"#walk_state\">walk_state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Parse the AML */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ps_parse_aml\">acpi_ps_parse_aml</a>(<a class=\"id\" href=\"#walk_state\">walk_state</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* walk_state was deleted by parse_aml */</span>", 
"", 
"      <a class=\"id\" href=\"#cleanup\">cleanup</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_ps_delete_parse_tree\">acpi_ps_delete_parse_tree</a>(<a class=\"id\" href=\"#op\">op</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* End optional tracing */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_ps_stop_trace\">acpi_ps_stop_trace</a>(<a class=\"id\" href=\"#info\">info</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Take away the extra reference that we gave the parameters above */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_ps_update_parameter_list\">acpi_ps_update_parameter_list</a>(<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#REF_DECREMENT\">REF_DECREMENT</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Exit now if error above */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the method has returned an object, signal this to the caller with</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * a control exception code</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#return_object\">return_object</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_PARSE\">ACPI_DB_PARSE</a>, \"Method returned ObjDesc=%p\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#return_object\">return_object</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DUMP_STACK_ENTRY\">ACPI_DUMP_STACK_ENTRY</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#return_object\">return_object</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_CTRL_RETURN_VALUE\">AE_CTRL_RETURN_VALUE</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ps_update_parameter_list</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Info            - See struct acpi_evaluate_info</span>", 
"<span class=\"comment\"> *                                (Used: parameter_type and Parameters)</span>", 
"<span class=\"comment\"> *              Action          - Add or Remove reference</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Update reference count on all method parameter objects</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"static void", 
"<a class=\"id\" href=\"#acpi_ps_update_parameter_list\">acpi_ps_update_parameter_list</a>(struct <a class=\"id\" href=\"#acpi_evaluate_info\">acpi_evaluate_info</a> *<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#action\">action</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#parameters\">parameters</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Update reference count for each parameter */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#parameters\">parameters</a>[<a class=\"id\" href=\"#i\">i</a>]; <a class=\"id\" href=\"#i\">i</a>++) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Ignore errors, just do them all */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(void)<a class=\"id\" href=\"#acpi_ut_update_object_reference\">acpi_ut_update_object_reference</a>(<a class=\"id\" href=\"#info\">info</a>->", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#parameters\">parameters</a>[<a class=\"id\" href=\"#i\">i</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#action\">action</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
];
xr_frag_insert('l/4d/38f9eb7841a7e82ac22e9fc37b1379f18ad3d3.xr', __xr_tmp);
