var __xr_tmp = [
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#pfn\">pfn</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fail\">fail</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#start_pfn\">start_pfn</a> &amp; ~(<a class=\"id\" href=\"#PAGES_PER_SECTION\">PAGES_PER_SECTION</a> - 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#ALIGN\">ALIGN</a>(<a class=\"id\" href=\"#start_pfn\">start_pfn</a> + <a class=\"id\" href=\"#nr_pages\">nr_pages</a>, <a class=\"id\" href=\"#PAGES_PER_SECTION\">PAGES_PER_SECTION</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#pfn\">pfn</a> = <a class=\"id\" href=\"#start\">start</a>; !<a class=\"id\" href=\"#fail\">fail</a> && <a class=\"id\" href=\"#pfn\">pfn</a> &lt; <a class=\"id\" href=\"#end\">end</a>; <a class=\"id\" href=\"#pfn\">pfn</a> += <a class=\"id\" href=\"#PAGES_PER_SECTION\">PAGES_PER_SECTION</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pfn_present\">pfn_present</a>(<a class=\"id\" href=\"#pfn\">pfn</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fail\">fail</a> = <a class=\"id\" href=\"#init_section_page_cgroup\">init_section_page_cgroup</a>(<a class=\"id\" href=\"#pfn\">pfn</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#fail\">fail</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* rollback */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#pfn\">pfn</a> = <a class=\"id\" href=\"#start\">start</a>; <a class=\"id\" href=\"#pfn\">pfn</a> &lt; <a class=\"id\" href=\"#end\">end</a>; <a class=\"id\" href=\"#pfn\">pfn</a> += <a class=\"id\" href=\"#PAGES_PER_SECTION\">PAGES_PER_SECTION</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__free_page_cgroup\">__free_page_cgroup</a>(<a class=\"id\" href=\"#pfn\">pfn</a>);", 
"", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#__meminit\">__meminit</a> <a class=\"id\" href=\"#offline_page_cgroup\">offline_page_cgroup</a>(unsigned long <a class=\"id\" href=\"#start_pfn\">start_pfn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#nr_pages\">nr_pages</a>, int <a class=\"id\" href=\"#nid\">nid</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#pfn\">pfn</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#start_pfn\">start_pfn</a> &amp; ~(<a class=\"id\" href=\"#PAGES_PER_SECTION\">PAGES_PER_SECTION</a> - 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#ALIGN\">ALIGN</a>(<a class=\"id\" href=\"#start_pfn\">start_pfn</a> + <a class=\"id\" href=\"#nr_pages\">nr_pages</a>, <a class=\"id\" href=\"#PAGES_PER_SECTION\">PAGES_PER_SECTION</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#pfn\">pfn</a> = <a class=\"id\" href=\"#start\">start</a>; <a class=\"id\" href=\"#pfn\">pfn</a> &lt; <a class=\"id\" href=\"#end\">end</a>; <a class=\"id\" href=\"#pfn\">pfn</a> += <a class=\"id\" href=\"#PAGES_PER_SECTION\">PAGES_PER_SECTION</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__free_page_cgroup\">__free_page_cgroup</a>(<a class=\"id\" href=\"#pfn\">pfn</a>);", 
"<span class=\"ts\"/>return 0;", 
"", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__meminit\">__meminit</a> <a class=\"id\" href=\"#page_cgroup_callback\">page_cgroup_callback</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#self\">self</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned long <a class=\"id\" href=\"#action\">action</a>, void *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#memory_notify\">memory_notify</a> *<a class=\"id\" href=\"#mn\">mn</a> = <a class=\"id\" href=\"#arg\">arg</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#action\">action</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MEM_GOING_ONLINE\">MEM_GOING_ONLINE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#online_page_cgroup\">online_page_cgroup</a>(<a class=\"id\" href=\"#mn\">mn</a>-><a class=\"id\" href=\"#start_pfn\">start_pfn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#mn\">mn</a>-><a class=\"id\" href=\"#nr_pages\">nr_pages</a>, <a class=\"id\" href=\"#mn\">mn</a>-><a class=\"id\" href=\"#status_change_nid\">status_change_nid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MEM_OFFLINE\">MEM_OFFLINE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offline_page_cgroup\">offline_page_cgroup</a>(<a class=\"id\" href=\"#mn\">mn</a>-><a class=\"id\" href=\"#start_pfn\">start_pfn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mn\">mn</a>-><a class=\"id\" href=\"#nr_pages\">nr_pages</a>, <a class=\"id\" href=\"#mn\">mn</a>-><a class=\"id\" href=\"#status_change_nid\">status_change_nid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MEM_CANCEL_ONLINE\">MEM_CANCEL_ONLINE</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MEM_GOING_OFFLINE\">MEM_GOING_OFFLINE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MEM_ONLINE\">MEM_ONLINE</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MEM_CANCEL_OFFLINE\">MEM_CANCEL_OFFLINE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#notifier_from_errno\">notifier_from_errno</a>(<a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#NOTIFY_OK\">NOTIFY_OK</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#page_cgroup_init\">page_cgroup_init</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#pfn\">pfn</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fail\">fail</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mem_cgroup_disabled\">mem_cgroup_disabled</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#pfn\">pfn</a> = 0; !<a class=\"id\" href=\"#fail\">fail</a> && <a class=\"id\" href=\"#pfn\">pfn</a> &lt; <a class=\"id\" href=\"#max_pfn\">max_pfn</a>; <a class=\"id\" href=\"#pfn\">pfn</a> += <a class=\"id\" href=\"#PAGES_PER_SECTION\">PAGES_PER_SECTION</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pfn_present\">pfn_present</a>(<a class=\"id\" href=\"#pfn\">pfn</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fail\">fail</a> = <a class=\"id\" href=\"#init_section_page_cgroup\">init_section_page_cgroup</a>(<a class=\"id\" href=\"#pfn\">pfn</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fail\">fail</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CRIT\">KERN_CRIT</a> \"try 'cgroup_disable=memory' boot option\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"Out of memory\");", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hotplug_memory_notifier\">hotplug_memory_notifier</a>(<a class=\"id\" href=\"#page_cgroup_callback\">page_cgroup_callback</a>, 0);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"allocated %ld bytes of page_cgroup\\n\", <a class=\"id\" href=\"#total_usage\">total_usage</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"please try 'cgroup_disable=memory' option if you don't\"", 
"<span class=\"ts\"/>\" want memory cgroups\\n\");", 
"}", 
"", 
"void <a class=\"id\" href=\"#__meminit\">__meminit</a> <a class=\"id\" href=\"#pgdat_page_cgroup_init\">pgdat_page_cgroup_init</a>(struct <a class=\"id\" href=\"#pglist_data\">pglist_data</a> *<a class=\"id\" href=\"#pgdat\">pgdat</a>)", 
"{", 
"<span class=\"ts\"/>return;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_CGROUP_MEM_RES_CTLR_SWAP\">CONFIG_CGROUP_MEM_RES_CTLR_SWAP</a>", 
"", 
"static <a class=\"id\" href=\"#DEFINE_MUTEX\">DEFINE_MUTEX</a>(<a class=\"id\" href=\"#swap_cgroup_mutex\">swap_cgroup_mutex</a>);", 
"struct <a class=\"id\" href=\"#swap_cgroup_ctrl\">swap_cgroup_ctrl</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> **<a class=\"id\" href=\"#map\">map</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a><span class=\"ts\"/><a class=\"id\" href=\"#lock\">lock</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#swap_cgroup_ctrl\">swap_cgroup_ctrl</a> <a class=\"id\" href=\"#swap_cgroup_ctrl\">swap_cgroup_ctrl</a>[<a class=\"id\" href=\"#MAX_SWAPFILES\">MAX_SWAPFILES</a>];", 
"", 
"struct <a class=\"id\" href=\"#swap_cgroup\">swap_cgroup</a> {", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a>;", 
"};", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SC_PER_PAGE\">SC_PER_PAGE</a><span class=\"ts\"/>(<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>/sizeof(struct <a class=\"id\" href=\"#swap_cgroup\">swap_cgroup</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SC_POS_MASK\">SC_POS_MASK</a><span class=\"ts\"/>(<a class=\"id\" href=\"#SC_PER_PAGE\">SC_PER_PAGE</a> - 1)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * SwapCgroup implements \"lookup\" and \"exchange\" operations.</span>", 
"<span class=\"comment\"> * In typical usage, this swap_cgroup is accessed via memcg's charge/uncharge</span>", 
"<span class=\"comment\"> * against SwapCache. At swap_free(), this is accessed directly from swap.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This means,</span>", 
"<span class=\"comment\"> *  - we have no race in \"exchange\" when we're accessed via SwapCache because</span>", 
"<span class=\"comment\"> *    SwapCache(and its swp_entry) is under lock.</span>", 
"<span class=\"comment\"> *  - When called via swap_free(), there is no user of this entry and no race.</span>", 
"<span class=\"comment\"> * Then, we don't need lock around \"exchange\".</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * TODO: we can push these buffers out to HIGHMEM.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
];
xr_frag_insert('l/4d/d42cd49417ba3f33cf7d5c28c60f3eded6f362.xr', __xr_tmp);
