var __xr_tmp = [
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * XXX sleazy hack: If we're being called in a lazy-cpu zone</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and lazy gs handling is enabled, it means we're in a</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * context switch, and %gs has just been saved.  This means we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * can zero it out to prevent faults on exit from the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * hypervisor if the next process has no %gs.  Either way, it</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * has been saved, and the new value will get loaded properly.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This will go away as soon as Xen has been modified to not</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * save/restore %gs for normal hypercalls.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * On x86_64, this hack is not used for %gs, because gs points</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to KERNEL_GS_BASE (and uses it for PDA references), so we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * must not zero %gs on x86_64</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * For x86_64, we need to zero %fs, otherwise we may get an</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * exception between the new %fs descriptor being loaded and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * %fs being effectively cleared at __switch_to().</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#paravirt_get_lazy_mode\">paravirt_get_lazy_mode</a>() == <a class=\"id\" href=\"#PARAVIRT_LAZY_CPU\">PARAVIRT_LAZY_CPU</a>) {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lazy_load_gs\">lazy_load_gs</a>(0);", 
"#else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#loadsegment\">loadsegment</a>(<a class=\"id\" href=\"#fs\">fs</a>, 0);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_mc_batch\">xen_mc_batch</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#load_TLS_descriptor\">load_TLS_descriptor</a>(<a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#cpu\">cpu</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#load_TLS_descriptor\">load_TLS_descriptor</a>(<a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#cpu\">cpu</a>, 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#load_TLS_descriptor\">load_TLS_descriptor</a>(<a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#cpu\">cpu</a>, 2);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_mc_issue\">xen_mc_issue</a>(<a class=\"id\" href=\"#PARAVIRT_LAZY_CPU\">PARAVIRT_LAZY_CPU</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"static void <a class=\"id\" href=\"#xen_load_gs_index\">xen_load_gs_index</a>(unsigned int <a class=\"id\" href=\"#idx\">idx</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#HYPERVISOR_set_segment_base\">HYPERVISOR_set_segment_base</a>(<a class=\"id\" href=\"#SEGBASE_GS_USER_SEL\">SEGBASE_GS_USER_SEL</a>, <a class=\"id\" href=\"#idx\">idx</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static void <a class=\"id\" href=\"#xen_write_ldt_entry\">xen_write_ldt_entry</a>(struct <a class=\"id\" href=\"#desc_struct\">desc_struct</a> *<a class=\"id\" href=\"#dt\">dt</a>, int <a class=\"id\" href=\"#entrynum\">entrynum</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const void *<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xmaddr_t\">xmaddr_t</a> <a class=\"id\" href=\"#mach_lp\">mach_lp</a> = <a class=\"id\" href=\"#arbitrary_virt_to_machine\">arbitrary_virt_to_machine</a>(&amp;<a class=\"id\" href=\"#dt\">dt</a>[<a class=\"id\" href=\"#entrynum\">entrynum</a>]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#entry\">entry</a> = *(<a class=\"id\" href=\"#u64\">u64</a> *)<a class=\"id\" href=\"#ptr\">ptr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#preempt_disable\">preempt_disable</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_mc_flush\">xen_mc_flush</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#HYPERVISOR_update_descriptor\">HYPERVISOR_update_descriptor</a>(<a class=\"id\" href=\"#mach_lp\">mach_lp</a>.<a class=\"id\" href=\"#maddr\">maddr</a>, <a class=\"id\" href=\"#entry\">entry</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#preempt_enable\">preempt_enable</a>();", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cvt_gate_to_trap\">cvt_gate_to_trap</a>(int <a class=\"id\" href=\"#vector\">vector</a>, const <a class=\"id\" href=\"#gate_desc\">gate_desc</a> *<a class=\"id\" href=\"#val\">val</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#trap_info\">trap_info</a> *<a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#addr\">addr</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#val\">val</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#GATE_TRAP\">GATE_TRAP</a> && <a class=\"id\" href=\"#val\">val</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#GATE_INTERRUPT\">GATE_INTERRUPT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#vector\">vector</a> = <a class=\"id\" href=\"#vector\">vector</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#gate_offset\">gate_offset</a>(*<a class=\"id\" href=\"#val\">val</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Look for known traps using IST, and substitute them</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * appropriately.  The debugger ones are the only ones we care</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * about.  Xen will handle faults like double_fault and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * machine_check, so we should never see them.  Warn if</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * there's an unexpected IST-using fault handler.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr\">addr</a> == (unsigned long)<a class=\"id\" href=\"#debug\">debug</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> = (unsigned long)<a class=\"id\" href=\"#xen_debug\">xen_debug</a>;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#addr\">addr</a> == (unsigned long)<a class=\"id\" href=\"#int3\">int3</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> = (unsigned long)<a class=\"id\" href=\"#xen_int3\">xen_int3</a>;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#addr\">addr</a> == (unsigned long)<a class=\"id\" href=\"#stack_segment\">stack_segment</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> = (unsigned long)<a class=\"id\" href=\"#xen_stack_segment\">xen_stack_segment</a>;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#addr\">addr</a> == (unsigned long)<a class=\"id\" href=\"#double_fault\">double_fault</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#addr\">addr</a> == (unsigned long)<a class=\"id\" href=\"#nmi\">nmi</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Don't need to handle these */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_MCE\">CONFIG_X86_MCE</a>", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#addr\">addr</a> == (unsigned long)<a class=\"id\" href=\"#machine_check\">machine_check</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Some other trap using IST? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#val\">val</a>-><a class=\"id\" href=\"#ist\">ist</a> != 0))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* CONFIG_X86_64 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#address\">address</a> = <a class=\"id\" href=\"#addr\">addr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#cs\">cs</a> = <a class=\"id\" href=\"#gate_segment\">gate_segment</a>(*<a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#val\">val</a>-><a class=\"id\" href=\"#dpl\">dpl</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* interrupt gates clear IF */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#val\">val</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#GATE_INTERRUPT\">GATE_INTERRUPT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#flags\">flags</a> |= 1 << 2;", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<span class=\"comment\">/* Locations of each CPU's IDT */</span>", 
"static <a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(struct <a class=\"id\" href=\"#desc_ptr\">desc_ptr</a>, <a class=\"id\" href=\"#idt_desc\">idt_desc</a>);", 
"", 
"<span class=\"comment\">/* Set an IDT entry.  If the entry is part of the current IDT, then</span>", 
"<span class=\"comment\">   also update Xen. */</span>", 
"static void <a class=\"id\" href=\"#xen_write_idt_entry\">xen_write_idt_entry</a>(<a class=\"id\" href=\"#gate_desc\">gate_desc</a> *<a class=\"id\" href=\"#dt\">dt</a>, int <a class=\"id\" href=\"#entrynum\">entrynum</a>, const <a class=\"id\" href=\"#gate_desc\">gate_desc</a> *<a class=\"id\" href=\"#g\">g</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#p\">p</a> = (unsigned long)&amp;<a class=\"id\" href=\"#dt\">dt</a>[<a class=\"id\" href=\"#entrynum\">entrynum</a>];", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#preempt_disable\">preempt_disable</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#idt_desc\">idt_desc</a>).<a class=\"id\" href=\"#address\">address</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#start\">start</a> + <a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#idt_desc\">idt_desc</a>).<a class=\"id\" href=\"#size\">size</a> + 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_mc_flush\">xen_mc_flush</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#native_write_idt_entry\">native_write_idt_entry</a>(<a class=\"id\" href=\"#dt\">dt</a>, <a class=\"id\" href=\"#entrynum\">entrynum</a>, <a class=\"id\" href=\"#g\">g</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a> >= <a class=\"id\" href=\"#start\">start</a> && (<a class=\"id\" href=\"#p\">p</a> + 8) <= <a class=\"id\" href=\"#end\">end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#trap_info\">trap_info</a> <a class=\"id\" href=\"#info\">info</a>[2];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>[1].<a class=\"id\" href=\"#address\">address</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cvt_gate_to_trap\">cvt_gate_to_trap</a>(<a class=\"id\" href=\"#entrynum\">entrynum</a>, <a class=\"id\" href=\"#g\">g</a>, &amp;<a class=\"id\" href=\"#info\">info</a>[0]))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#HYPERVISOR_set_trap_table\">HYPERVISOR_set_trap_table</a>(<a class=\"id\" href=\"#info\">info</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#preempt_enable\">preempt_enable</a>();", 
"}", 
"", 
"static void <a class=\"id\" href=\"#xen_convert_trap_info\">xen_convert_trap_info</a>(const struct <a class=\"id\" href=\"#desc_ptr\">desc_ptr</a> *<a class=\"id\" href=\"#desc\">desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#trap_info\">trap_info</a> *<a class=\"id\" href=\"#traps\">traps</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#in\">in</a>, <a class=\"id\" href=\"#out\">out</a>, <a class=\"id\" href=\"#count\">count</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = (<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#size\">size</a>+1) / sizeof(<a class=\"id\" href=\"#gate_desc\">gate_desc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#count\">count</a> &gt; 256);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#in\">in</a> = <a class=\"id\" href=\"#out\">out</a> = 0; <a class=\"id\" href=\"#in\">in</a> &lt; <a class=\"id\" href=\"#count\">count</a>; <a class=\"id\" href=\"#in\">in</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gate_desc\">gate_desc</a> *<a class=\"id\" href=\"#entry\">entry</a> = (<a class=\"id\" href=\"#gate_desc\">gate_desc</a>*)(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#address\">address</a>) + <a class=\"id\" href=\"#in\">in</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cvt_gate_to_trap\">cvt_gate_to_trap</a>(<a class=\"id\" href=\"#in\">in</a>, <a class=\"id\" href=\"#entry\">entry</a>, &amp;<a class=\"id\" href=\"#traps\">traps</a>[<a class=\"id\" href=\"#out\">out</a>]))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#out\">out</a>++;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#traps\">traps</a>[<a class=\"id\" href=\"#out\">out</a>].<a class=\"id\" href=\"#address\">address</a> = 0;", 
"}", 
"", 
"void <a class=\"id\" href=\"#xen_copy_trap_info\">xen_copy_trap_info</a>(struct <a class=\"id\" href=\"#trap_info\">trap_info</a> *<a class=\"id\" href=\"#traps\">traps</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#desc_ptr\">desc_ptr</a> *<a class=\"id\" href=\"#desc\">desc</a> = &amp;<a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#idt_desc\">idt_desc</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_convert_trap_info\">xen_convert_trap_info</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#traps\">traps</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Load a new IDT into Xen.  In principle this can be per-CPU, so we</span>", 
"<span class=\"comment\">   hold a spinlock to protect the static traps[] array (static because</span>", 
"<span class=\"comment\">   it avoids allocation, and saves stack space). */</span>", 
"static void <a class=\"id\" href=\"#xen_load_idt\">xen_load_idt</a>(const struct <a class=\"id\" href=\"#desc_ptr\">desc_ptr</a> *<a class=\"id\" href=\"#desc\">desc</a>)", 
"{", 
"<span class=\"ts\"/>static <a class=\"id\" href=\"#DEFINE_SPINLOCK\">DEFINE_SPINLOCK</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>static struct <a class=\"id\" href=\"#trap_info\">trap_info</a> <a class=\"id\" href=\"#traps\">traps</a>[257];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#idt_desc\">idt_desc</a>) = *<a class=\"id\" href=\"#desc\">desc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_convert_trap_info\">xen_convert_trap_info</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#traps\">traps</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_mc_flush\">xen_mc_flush</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#HYPERVISOR_set_trap_table\">HYPERVISOR_set_trap_table</a>(<a class=\"id\" href=\"#traps\">traps</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Write a GDT descriptor entry.  Ignore LDT descriptors, since</span>", 
"<span class=\"comment\">   they're handled differently. */</span>", 
"static void <a class=\"id\" href=\"#xen_write_gdt_entry\">xen_write_gdt_entry</a>(struct <a class=\"id\" href=\"#desc_struct\">desc_struct</a> *<a class=\"id\" href=\"#dt\">dt</a>, int <a class=\"id\" href=\"#entry\">entry</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const void *<a class=\"id\" href=\"#desc\">desc</a>, int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#preempt_disable\">preempt_disable</a>();", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DESC_LDT\">DESC_LDT</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DESC_TSS\">DESC_TSS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ignore */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>default: {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xmaddr_t\">xmaddr_t</a> <a class=\"id\" href=\"#maddr\">maddr</a> = <a class=\"id\" href=\"#arbitrary_virt_to_machine\">arbitrary_virt_to_machine</a>(&amp;<a class=\"id\" href=\"#dt\">dt</a>[<a class=\"id\" href=\"#entry\">entry</a>]);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xen_mc_flush\">xen_mc_flush</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#HYPERVISOR_update_descriptor\">HYPERVISOR_update_descriptor</a>(<a class=\"id\" href=\"#maddr\">maddr</a>.<a class=\"id\" href=\"#maddr\">maddr</a>, *(<a class=\"id\" href=\"#u64\">u64</a> *)<a class=\"id\" href=\"#desc\">desc</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#preempt_enable\">preempt_enable</a>();", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Version of write_gdt_entry for use at early boot-time needed to</span>", 
"<span class=\"comment\"> * update an entry as simply as possible.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#__init\">__init</a> void <a class=\"id\" href=\"#xen_write_gdt_entry_boot\">xen_write_gdt_entry_boot</a>(struct <a class=\"id\" href=\"#desc_struct\">desc_struct</a> *<a class=\"id\" href=\"#dt\">dt</a>, int <a class=\"id\" href=\"#entry\">entry</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const void *<a class=\"id\" href=\"#desc\">desc</a>, int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DESC_LDT\">DESC_LDT</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DESC_TSS\">DESC_TSS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ignore */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>default: {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xmaddr_t\">xmaddr_t</a> <a class=\"id\" href=\"#maddr\">maddr</a> = <a class=\"id\" href=\"#virt_to_machine\">virt_to_machine</a>(&amp;<a class=\"id\" href=\"#dt\">dt</a>[<a class=\"id\" href=\"#entry\">entry</a>]);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#HYPERVISOR_update_descriptor\">HYPERVISOR_update_descriptor</a>(<a class=\"id\" href=\"#maddr\">maddr</a>.<a class=\"id\" href=\"#maddr\">maddr</a>, *(<a class=\"id\" href=\"#u64\">u64</a> *)<a class=\"id\" href=\"#desc\">desc</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dt\">dt</a>[<a class=\"id\" href=\"#entry\">entry</a>] = *(struct <a class=\"id\" href=\"#desc_struct\">desc_struct</a> *)<a class=\"id\" href=\"#desc\">desc</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#xen_load_sp0\">xen_load_sp0</a>(struct <a class=\"id\" href=\"#tss_struct\">tss_struct</a> *<a class=\"id\" href=\"#tss\">tss</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#thread_struct\">thread_struct</a> *<a class=\"id\" href=\"#thread\">thread</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#multicall_space\">multicall_space</a> <a class=\"id\" href=\"#mcs\">mcs</a> = <a class=\"id\" href=\"#xen_mc_entry\">xen_mc_entry</a>(0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MULTI_stack_switch\">MULTI_stack_switch</a>(<a class=\"id\" href=\"#mcs\">mcs</a>.<a class=\"id\" href=\"#mc\">mc</a>, <a class=\"id\" href=\"#__KERNEL_DS\">__KERNEL_DS</a>, <a class=\"id\" href=\"#thread\">thread</a>-><a class=\"id\" href=\"#sp0\">sp0</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_mc_issue\">xen_mc_issue</a>(<a class=\"id\" href=\"#PARAVIRT_LAZY_CPU\">PARAVIRT_LAZY_CPU</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#xen_set_iopl_mask\">xen_set_iopl_mask</a>(unsigned <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#physdev_set_iopl\">physdev_set_iopl</a> <a class=\"id\" href=\"#set_iopl\">set_iopl</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Force the change at ring 0. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_iopl\">set_iopl</a>.<a class=\"id\" href=\"#iopl\">iopl</a> = (<a class=\"id\" href=\"#mask\">mask</a> == 0) ? 1 : (<a class=\"id\" href=\"#mask\">mask</a> >> 12) &amp; 3;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#HYPERVISOR_physdev_op\">HYPERVISOR_physdev_op</a>(<a class=\"id\" href=\"#PHYSDEVOP_set_iopl\">PHYSDEVOP_set_iopl</a>, &amp;<a class=\"id\" href=\"#set_iopl\">set_iopl</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#xen_io_delay\">xen_io_delay</a>(void)", 
"{", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_LOCAL_APIC\">CONFIG_X86_LOCAL_APIC</a>", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#xen_apic_read\">xen_apic_read</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#reg\">reg</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#xen_apic_write\">xen_apic_write</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#val\">val</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Warn to see if there's any stray references */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(1);", 
"}", 
"", 
"static <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#xen_apic_icr_read\">xen_apic_icr_read</a>(void)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#xen_apic_icr_write\">xen_apic_icr_write</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#low\">low</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Warn to see if there's any stray references */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(1);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#xen_apic_wait_icr_idle\">xen_apic_wait_icr_idle</a>(void)", 
"{", 
"        return;", 
"}", 
"", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#xen_safe_apic_wait_icr_idle\">xen_safe_apic_wait_icr_idle</a>(void)", 
"{", 
"        return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#set_xen_basic_apic_ops\">set_xen_basic_apic_ops</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic\">apic</a>-><a class=\"id\" href=\"#read\">read</a> = <a class=\"id\" href=\"#xen_apic_read\">xen_apic_read</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic\">apic</a>-><a class=\"id\" href=\"#write\">write</a> = <a class=\"id\" href=\"#xen_apic_write\">xen_apic_write</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic\">apic</a>-><a class=\"id\" href=\"#icr_read\">icr_read</a> = <a class=\"id\" href=\"#xen_apic_icr_read\">xen_apic_icr_read</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic\">apic</a>-><a class=\"id\" href=\"#icr_write\">icr_write</a> = <a class=\"id\" href=\"#xen_apic_icr_write\">xen_apic_icr_write</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic\">apic</a>-><a class=\"id\" href=\"#wait_icr_idle\">wait_icr_idle</a> = <a class=\"id\" href=\"#xen_apic_wait_icr_idle\">xen_apic_wait_icr_idle</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic\">apic</a>-><a class=\"id\" href=\"#safe_wait_icr_idle\">safe_wait_icr_idle</a> = <a class=\"id\" href=\"#xen_safe_apic_wait_icr_idle\">xen_safe_apic_wait_icr_idle</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static void <a class=\"id\" href=\"#xen_clts\">xen_clts</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#multicall_space\">multicall_space</a> <a class=\"id\" href=\"#mcs\">mcs</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mcs\">mcs</a> = <a class=\"id\" href=\"#xen_mc_entry\">xen_mc_entry</a>(0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MULTI_fpu_taskswitch\">MULTI_fpu_taskswitch</a>(<a class=\"id\" href=\"#mcs\">mcs</a>.<a class=\"id\" href=\"#mc\">mc</a>, 0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_mc_issue\">xen_mc_issue</a>(<a class=\"id\" href=\"#PARAVIRT_LAZY_CPU\">PARAVIRT_LAZY_CPU</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(unsigned long, <a class=\"id\" href=\"#xen_cr0_value\">xen_cr0_value</a>);", 
"", 
"static unsigned long <a class=\"id\" href=\"#xen_read_cr0\">xen_read_cr0</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#cr0\">cr0</a> = <a class=\"id\" href=\"#percpu_read\">percpu_read</a>(<a class=\"id\" href=\"#xen_cr0_value\">xen_cr0_value</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#cr0\">cr0</a> == 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cr0\">cr0</a> = <a class=\"id\" href=\"#native_read_cr0\">native_read_cr0</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#percpu_write\">percpu_write</a>(<a class=\"id\" href=\"#xen_cr0_value\">xen_cr0_value</a>, <a class=\"id\" href=\"#cr0\">cr0</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cr0\">cr0</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#xen_write_cr0\">xen_write_cr0</a>(unsigned long <a class=\"id\" href=\"#cr0\">cr0</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#multicall_space\">multicall_space</a> <a class=\"id\" href=\"#mcs\">mcs</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#percpu_write\">percpu_write</a>(<a class=\"id\" href=\"#xen_cr0_value\">xen_cr0_value</a>, <a class=\"id\" href=\"#cr0\">cr0</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Only pay attention to cr0.TS; everything else is</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   ignored. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mcs\">mcs</a> = <a class=\"id\" href=\"#xen_mc_entry\">xen_mc_entry</a>(0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MULTI_fpu_taskswitch\">MULTI_fpu_taskswitch</a>(<a class=\"id\" href=\"#mcs\">mcs</a>.<a class=\"id\" href=\"#mc\">mc</a>, (<a class=\"id\" href=\"#cr0\">cr0</a> &amp; <a class=\"id\" href=\"#X86_CR0_TS\">X86_CR0_TS</a>) != 0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_mc_issue\">xen_mc_issue</a>(<a class=\"id\" href=\"#PARAVIRT_LAZY_CPU\">PARAVIRT_LAZY_CPU</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#xen_write_cr4\">xen_write_cr4</a>(unsigned long <a class=\"id\" href=\"#cr4\">cr4</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cr4\">cr4</a> &= ~<a class=\"id\" href=\"#X86_CR4_PGE\">X86_CR4_PGE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cr4\">cr4</a> &= ~<a class=\"id\" href=\"#X86_CR4_PSE\">X86_CR4_PSE</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#native_write_cr4\">native_write_cr4</a>(<a class=\"id\" href=\"#cr4\">cr4</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#xen_write_msr_safe\">xen_write_msr_safe</a>(unsigned int <a class=\"id\" href=\"#msr\">msr</a>, unsigned <a class=\"id\" href=\"#low\">low</a>, unsigned <a class=\"id\" href=\"#high\">high</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#msr\">msr</a>) {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned <a class=\"id\" href=\"#which\">which</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#base\">base</a>;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MSR_FS_BASE\">MSR_FS_BASE</a>:<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#which\">which</a> = <a class=\"id\" href=\"#SEGBASE_FS\">SEGBASE_FS</a>; goto <a class=\"id\" href=\"#set\">set</a>;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MSR_KERNEL_GS_BASE\">MSR_KERNEL_GS_BASE</a>:<span class=\"ts\"/><a class=\"id\" href=\"#which\">which</a> = <a class=\"id\" href=\"#SEGBASE_GS_USER\">SEGBASE_GS_USER</a>; goto <a class=\"id\" href=\"#set\">set</a>;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MSR_GS_BASE\">MSR_GS_BASE</a>:<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#which\">which</a> = <a class=\"id\" href=\"#SEGBASE_GS_KERNEL\">SEGBASE_GS_KERNEL</a>; goto <a class=\"id\" href=\"#set\">set</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set\">set</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#base\">base</a> = ((<a class=\"id\" href=\"#u64\">u64</a>)<a class=\"id\" href=\"#high\">high</a> << 32) | <a class=\"id\" href=\"#low\">low</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#HYPERVISOR_set_segment_base\">HYPERVISOR_set_segment_base</a>(<a class=\"id\" href=\"#which\">which</a>, <a class=\"id\" href=\"#base\">base</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MSR_STAR\">MSR_STAR</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MSR_CSTAR\">MSR_CSTAR</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MSR_LSTAR\">MSR_LSTAR</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MSR_SYSCALL_MASK\">MSR_SYSCALL_MASK</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MSR_IA32_SYSENTER_CS\">MSR_IA32_SYSENTER_CS</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MSR_IA32_SYSENTER_ESP\">MSR_IA32_SYSENTER_ESP</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MSR_IA32_SYSENTER_EIP\">MSR_IA32_SYSENTER_EIP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Fast syscall setup is all done in hypercalls, so</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   these are all ignored.  Stub them out here to stop</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   Xen console noise. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#native_write_msr_safe\">native_write_msr_safe</a>(<a class=\"id\" href=\"#msr\">msr</a>, <a class=\"id\" href=\"#low\">low</a>, <a class=\"id\" href=\"#high\">high</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#xen_setup_shared_info\">xen_setup_shared_info</a>(void)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#xen_feature\">xen_feature</a>(<a class=\"id\" href=\"#XENFEAT_auto_translated_physmap\">XENFEAT_auto_translated_physmap</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_fixmap\">set_fixmap</a>(<a class=\"id\" href=\"#FIX_PARAVIRT_BOOTMAP\">FIX_PARAVIRT_BOOTMAP</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#xen_start_info\">xen_start_info</a>-><a class=\"id\" href=\"#shared_info\">shared_info</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#HYPERVISOR_shared_info\">HYPERVISOR_shared_info</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(struct <a class=\"id\" href=\"#shared_info\">shared_info</a> *)<a class=\"id\" href=\"#fix_to_virt\">fix_to_virt</a>(<a class=\"id\" href=\"#FIX_PARAVIRT_BOOTMAP\">FIX_PARAVIRT_BOOTMAP</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#HYPERVISOR_shared_info\">HYPERVISOR_shared_info</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(struct <a class=\"id\" href=\"#shared_info\">shared_info</a> *)<a class=\"id\" href=\"#__va\">__va</a>(<a class=\"id\" href=\"#xen_start_info\">xen_start_info</a>-><a class=\"id\" href=\"#shared_info\">shared_info</a>);", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* In UP this is as good a place as any to set up shared info */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_setup_vcpu_info_placement\">xen_setup_vcpu_info_placement</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_setup_mfn_list_list\">xen_setup_mfn_list_list</a>();", 
"}", 
"", 
"<span class=\"comment\">/* This is called once we have the cpu_possible_map */</span>", 
"void <a class=\"id\" href=\"#xen_setup_vcpu_info_placement\">xen_setup_vcpu_info_placement</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_possible_cpu\">for_each_possible_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xen_vcpu_setup\">xen_vcpu_setup</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* xen_vcpu_setup managed to place the vcpu_info within the</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   percpu area for all cpus, so make use of it */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#have_vcpu_info_placement\">have_vcpu_info_placement</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"Xen: using vcpu_info placement\\n\");", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pv_irq_ops\">pv_irq_ops</a>.<a class=\"id\" href=\"#save_fl\">save_fl</a> = <a class=\"id\" href=\"#__PV_IS_CALLEE_SAVE\">__PV_IS_CALLEE_SAVE</a>(<a class=\"id\" href=\"#xen_save_fl_direct\">xen_save_fl_direct</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pv_irq_ops\">pv_irq_ops</a>.<a class=\"id\" href=\"#restore_fl\">restore_fl</a> = <a class=\"id\" href=\"#__PV_IS_CALLEE_SAVE\">__PV_IS_CALLEE_SAVE</a>(<a class=\"id\" href=\"#xen_restore_fl_direct\">xen_restore_fl_direct</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pv_irq_ops\">pv_irq_ops</a>.<a class=\"id\" href=\"#irq_disable\">irq_disable</a> = <a class=\"id\" href=\"#__PV_IS_CALLEE_SAVE\">__PV_IS_CALLEE_SAVE</a>(<a class=\"id\" href=\"#xen_irq_disable_direct\">xen_irq_disable_direct</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pv_irq_ops\">pv_irq_ops</a>.<a class=\"id\" href=\"#irq_enable\">irq_enable</a> = <a class=\"id\" href=\"#__PV_IS_CALLEE_SAVE\">__PV_IS_CALLEE_SAVE</a>(<a class=\"id\" href=\"#xen_irq_enable_direct\">xen_irq_enable_direct</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pv_mmu_ops\">pv_mmu_ops</a>.<a class=\"id\" href=\"#read_cr2\">read_cr2</a> = <a class=\"id\" href=\"#xen_read_cr2_direct\">xen_read_cr2_direct</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static unsigned <a class=\"id\" href=\"#xen_patch\">xen_patch</a>(<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#clobbers\">clobbers</a>, void *<a class=\"id\" href=\"#insnbuf\">insnbuf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned long <a class=\"id\" href=\"#addr\">addr</a>, unsigned <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#start\">start</a>, *<a class=\"id\" href=\"#end\">end</a>, *<a class=\"id\" href=\"#reloc\">reloc</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#reloc\">reloc</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SITE\">SITE</a>(<a class=\"id\" href=\"#op\">op</a>, <a class=\"id\" href=\"#x\">x</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PARAVIRT_PATCH\">PARAVIRT_PATCH</a>(<a class=\"id\" href=\"#op\">op</a>.<a class=\"id\" href=\"#x\">x</a>):<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#have_vcpu_info_placement\">have_vcpu_info_placement</a>) {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = (char *)<a class=\"id\" href=\"#xen_\">xen_</a>##<a class=\"id\" href=\"#x\">x</a>##<a class=\"id\" href=\"#_direct\">_direct</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#xen_\">xen_</a>##<a class=\"id\" href=\"#x\">x</a>##<a class=\"id\" href=\"#_direct_end\">_direct_end</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reloc\">reloc</a> = <a class=\"id\" href=\"#xen_\">xen_</a>##<a class=\"id\" href=\"#x\">x</a>##<a class=\"id\" href=\"#_direct_reloc\">_direct_reloc</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>}<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#patch_site\">patch_site</a>", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SITE\">SITE</a>(<a class=\"id\" href=\"#pv_irq_ops\">pv_irq_ops</a>, <a class=\"id\" href=\"#irq_enable\">irq_enable</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SITE\">SITE</a>(<a class=\"id\" href=\"#pv_irq_ops\">pv_irq_ops</a>, <a class=\"id\" href=\"#irq_disable\">irq_disable</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SITE\">SITE</a>(<a class=\"id\" href=\"#pv_irq_ops\">pv_irq_ops</a>, <a class=\"id\" href=\"#save_fl\">save_fl</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SITE\">SITE</a>(<a class=\"id\" href=\"#pv_irq_ops\">pv_irq_ops</a>, <a class=\"id\" href=\"#restore_fl\">restore_fl</a>);", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#SITE\">SITE</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#patch_site\">patch_site</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#start\">start</a> == <a class=\"id\" href=\"#NULL\">NULL</a> || (<a class=\"id\" href=\"#end\">end</a>-<a class=\"id\" href=\"#start\">start</a>) &gt; <a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#default_patch\">default_patch</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#paravirt_patch_insns\">paravirt_patch_insns</a>(<a class=\"id\" href=\"#insnbuf\">insnbuf</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Note: because reloc is assigned from something that</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   appears to be an array, gcc assumes it's non-null,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   but doesn't know its relationship with start and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   end. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#reloc\">reloc</a> &gt; <a class=\"id\" href=\"#start\">start</a> && <a class=\"id\" href=\"#reloc\">reloc</a> &lt; <a class=\"id\" href=\"#end\">end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#reloc_off\">reloc_off</a> = <a class=\"id\" href=\"#reloc\">reloc</a> - <a class=\"id\" href=\"#start\">start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>long *<a class=\"id\" href=\"#relocp\">relocp</a> = (long *)(<a class=\"id\" href=\"#insnbuf\">insnbuf</a> + <a class=\"id\" href=\"#reloc_off\">reloc_off</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>long <a class=\"id\" href=\"#delta\">delta</a> = <a class=\"id\" href=\"#start\">start</a> - (char *)<a class=\"id\" href=\"#addr\">addr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#relocp\">relocp</a> += <a class=\"id\" href=\"#delta\">delta</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#default_patch\">default_patch</a>:", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#paravirt_patch_default\">paravirt_patch_default</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#clobbers\">clobbers</a>, <a class=\"id\" href=\"#insnbuf\">insnbuf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#pv_info\">pv_info</a> <a class=\"id\" href=\"#xen_info\">xen_info</a> <a class=\"id\" href=\"#__initdata\">__initdata</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#paravirt_enabled\">paravirt_enabled</a> = 1,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#shared_kernel_pmd\">shared_kernel_pmd</a> = 0,", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a> = \"Xen\",", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#pv_init_ops\">pv_init_ops</a> <a class=\"id\" href=\"#xen_init_ops\">xen_init_ops</a> <a class=\"id\" href=\"#__initdata\">__initdata</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#patch\">patch</a> = <a class=\"id\" href=\"#xen_patch\">xen_patch</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#pv_cpu_ops\">pv_cpu_ops</a> <a class=\"id\" href=\"#xen_cpu_ops\">xen_cpu_ops</a> <a class=\"id\" href=\"#__initdata\">__initdata</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#cpuid\">cpuid</a> = <a class=\"id\" href=\"#xen_cpuid\">xen_cpuid</a>,", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_debugreg\">set_debugreg</a> = <a class=\"id\" href=\"#xen_set_debugreg\">xen_set_debugreg</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#get_debugreg\">get_debugreg</a> = <a class=\"id\" href=\"#xen_get_debugreg\">xen_get_debugreg</a>,", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#clts\">clts</a> = <a class=\"id\" href=\"#xen_clts\">xen_clts</a>,", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read_cr0\">read_cr0</a> = <a class=\"id\" href=\"#xen_read_cr0\">xen_read_cr0</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write_cr0\">write_cr0</a> = <a class=\"id\" href=\"#xen_write_cr0\">xen_write_cr0</a>,", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read_cr4\">read_cr4</a> = <a class=\"id\" href=\"#native_read_cr4\">native_read_cr4</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read_cr4_safe\">read_cr4_safe</a> = <a class=\"id\" href=\"#native_read_cr4_safe\">native_read_cr4_safe</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write_cr4\">write_cr4</a> = <a class=\"id\" href=\"#xen_write_cr4\">xen_write_cr4</a>,", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#wbinvd\">wbinvd</a> = <a class=\"id\" href=\"#native_wbinvd\">native_wbinvd</a>,", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read_msr\">read_msr</a> = <a class=\"id\" href=\"#native_read_msr_safe\">native_read_msr_safe</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write_msr\">write_msr</a> = <a class=\"id\" href=\"#xen_write_msr_safe\">xen_write_msr_safe</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read_tsc\">read_tsc</a> = <a class=\"id\" href=\"#native_read_tsc\">native_read_tsc</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read_pmc\">read_pmc</a> = <a class=\"id\" href=\"#native_read_pmc\">native_read_pmc</a>,", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#iret\">iret</a> = <a class=\"id\" href=\"#xen_iret\">xen_iret</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#irq_enable_sysexit\">irq_enable_sysexit</a> = <a class=\"id\" href=\"#xen_sysexit\">xen_sysexit</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#usergs_sysret32\">usergs_sysret32</a> = <a class=\"id\" href=\"#xen_sysret32\">xen_sysret32</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#usergs_sysret64\">usergs_sysret64</a> = <a class=\"id\" href=\"#xen_sysret64\">xen_sysret64</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#load_tr_desc\">load_tr_desc</a> = <a class=\"id\" href=\"#paravirt_nop\">paravirt_nop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_ldt\">set_ldt</a> = <a class=\"id\" href=\"#xen_set_ldt\">xen_set_ldt</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#load_gdt\">load_gdt</a> = <a class=\"id\" href=\"#xen_load_gdt\">xen_load_gdt</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#load_idt\">load_idt</a> = <a class=\"id\" href=\"#xen_load_idt\">xen_load_idt</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#load_tls\">load_tls</a> = <a class=\"id\" href=\"#xen_load_tls\">xen_load_tls</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#load_gs_index\">load_gs_index</a> = <a class=\"id\" href=\"#xen_load_gs_index\">xen_load_gs_index</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#alloc_ldt\">alloc_ldt</a> = <a class=\"id\" href=\"#xen_alloc_ldt\">xen_alloc_ldt</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#free_ldt\">free_ldt</a> = <a class=\"id\" href=\"#xen_free_ldt\">xen_free_ldt</a>,", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#store_gdt\">store_gdt</a> = <a class=\"id\" href=\"#native_store_gdt\">native_store_gdt</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#store_idt\">store_idt</a> = <a class=\"id\" href=\"#native_store_idt\">native_store_idt</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#store_tr\">store_tr</a> = <a class=\"id\" href=\"#xen_store_tr\">xen_store_tr</a>,", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write_ldt_entry\">write_ldt_entry</a> = <a class=\"id\" href=\"#xen_write_ldt_entry\">xen_write_ldt_entry</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write_gdt_entry\">write_gdt_entry</a> = <a class=\"id\" href=\"#xen_write_gdt_entry\">xen_write_gdt_entry</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write_idt_entry\">write_idt_entry</a> = <a class=\"id\" href=\"#xen_write_idt_entry\">xen_write_idt_entry</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#load_sp0\">load_sp0</a> = <a class=\"id\" href=\"#xen_load_sp0\">xen_load_sp0</a>,", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_iopl_mask\">set_iopl_mask</a> = <a class=\"id\" href=\"#xen_set_iopl_mask\">xen_set_iopl_mask</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#io_delay\">io_delay</a> = <a class=\"id\" href=\"#xen_io_delay\">xen_io_delay</a>,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Xen takes care of %gs when switching to usermode for us */</span>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#swapgs\">swapgs</a> = <a class=\"id\" href=\"#paravirt_nop\">paravirt_nop</a>,", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start_context_switch\">start_context_switch</a> = <a class=\"id\" href=\"#paravirt_start_context_switch\">paravirt_start_context_switch</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#end_context_switch\">end_context_switch</a> = <a class=\"id\" href=\"#xen_end_context_switch\">xen_end_context_switch</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#pv_apic_ops\">pv_apic_ops</a> <a class=\"id\" href=\"#xen_apic_ops\">xen_apic_ops</a> <a class=\"id\" href=\"#__initdata\">__initdata</a> = {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_LOCAL_APIC\">CONFIG_X86_LOCAL_APIC</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#startup_ipi_hook\">startup_ipi_hook</a> = <a class=\"id\" href=\"#paravirt_nop\">paravirt_nop</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"static void <a class=\"id\" href=\"#xen_reboot\">xen_reboot</a>(int <a class=\"id\" href=\"#reason\">reason</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sched_shutdown\">sched_shutdown</a> <a class=\"id\" href=\"#r\">r</a> = { .<a class=\"id\" href=\"#reason\">reason</a> = <a class=\"id\" href=\"#reason\">reason</a> };", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#smp_send_stop\">smp_send_stop</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#HYPERVISOR_sched_op\">HYPERVISOR_sched_op</a>(<a class=\"id\" href=\"#SCHEDOP_shutdown\">SCHEDOP_shutdown</a>, &amp;<a class=\"id\" href=\"#r\">r</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"}", 
"", 
"static void <a class=\"id\" href=\"#xen_restart\">xen_restart</a>(char *<a class=\"id\" href=\"#msg\">msg</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_reboot\">xen_reboot</a>(<a class=\"id\" href=\"#SHUTDOWN_reboot\">SHUTDOWN_reboot</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#xen_emergency_restart\">xen_emergency_restart</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_reboot\">xen_reboot</a>(<a class=\"id\" href=\"#SHUTDOWN_reboot\">SHUTDOWN_reboot</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#xen_machine_halt\">xen_machine_halt</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_reboot\">xen_reboot</a>(<a class=\"id\" href=\"#SHUTDOWN_poweroff\">SHUTDOWN_poweroff</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#xen_crash_shutdown\">xen_crash_shutdown</a>(struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_reboot\">xen_reboot</a>(<a class=\"id\" href=\"#SHUTDOWN_crash\">SHUTDOWN_crash</a>);", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#xen_panic_event\">xen_panic_event</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#this\">this</a>, unsigned long <a class=\"id\" href=\"#event\">event</a>, void *<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_reboot\">xen_reboot</a>(<a class=\"id\" href=\"#SHUTDOWN_crash\">SHUTDOWN_crash</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NOTIFY_DONE\">NOTIFY_DONE</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> <a class=\"id\" href=\"#xen_panic_block\">xen_panic_block</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#notifier_call\">notifier_call</a>= <a class=\"id\" href=\"#xen_panic_event\">xen_panic_event</a>,", 
"};", 
"", 
"int <a class=\"id\" href=\"#xen_panic_handler_init\">xen_panic_handler_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_notifier_chain_register\">atomic_notifier_chain_register</a>(&amp;<a class=\"id\" href=\"#panic_notifier_list\">panic_notifier_list</a>, &amp;<a class=\"id\" href=\"#xen_panic_block\">xen_panic_block</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#machine_ops\">machine_ops</a> <a class=\"id\" href=\"#__initdata\">__initdata</a> <a class=\"id\" href=\"#xen_machine_ops\">xen_machine_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#restart\">restart</a> = <a class=\"id\" href=\"#xen_restart\">xen_restart</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#halt\">halt</a> = <a class=\"id\" href=\"#xen_machine_halt\">xen_machine_halt</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#power_off\">power_off</a> = <a class=\"id\" href=\"#xen_machine_halt\">xen_machine_halt</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#shutdown\">shutdown</a> = <a class=\"id\" href=\"#xen_machine_halt\">xen_machine_halt</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#crash_shutdown\">crash_shutdown</a> = <a class=\"id\" href=\"#xen_crash_shutdown\">xen_crash_shutdown</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#emergency_restart\">emergency_restart</a> = <a class=\"id\" href=\"#xen_emergency_restart\">xen_emergency_restart</a>,", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Set up the GDT and segment registers for -fstack-protector.  Until</span>", 
"<span class=\"comment\"> * we do this, we have to be careful not to call any stack-protected</span>", 
"<span class=\"comment\"> * function, which is most of the kernel.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#xen_setup_stackprotector\">xen_setup_stackprotector</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pv_cpu_ops\">pv_cpu_ops</a>.<a class=\"id\" href=\"#write_gdt_entry\">write_gdt_entry</a> = <a class=\"id\" href=\"#xen_write_gdt_entry_boot\">xen_write_gdt_entry_boot</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pv_cpu_ops\">pv_cpu_ops</a>.<a class=\"id\" href=\"#load_gdt\">load_gdt</a> = <a class=\"id\" href=\"#xen_load_gdt_boot\">xen_load_gdt_boot</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#setup_stack_canary_segment\">setup_stack_canary_segment</a>(0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#switch_to_new_gdt\">switch_to_new_gdt</a>(0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pv_cpu_ops\">pv_cpu_ops</a>.<a class=\"id\" href=\"#write_gdt_entry\">write_gdt_entry</a> = <a class=\"id\" href=\"#xen_write_gdt_entry\">xen_write_gdt_entry</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pv_cpu_ops\">pv_cpu_ops</a>.<a class=\"id\" href=\"#load_gdt\">load_gdt</a> = <a class=\"id\" href=\"#xen_load_gdt\">xen_load_gdt</a>;", 
"}", 
"", 
"<span class=\"comment\">/* First C function to be called on Xen boot */</span>", 
"<a class=\"id\" href=\"#asmlinkage\">asmlinkage</a> void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#xen_start_kernel\">xen_start_kernel</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgd_t\">pgd_t</a> *<a class=\"id\" href=\"#pgd\">pgd</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#xen_start_info\">xen_start_info</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_domain_type\">xen_domain_type</a> = <a class=\"id\" href=\"#XEN_PV_DOMAIN\">XEN_PV_DOMAIN</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Install Xen paravirt ops */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pv_info\">pv_info</a> = <a class=\"id\" href=\"#xen_info\">xen_info</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pv_init_ops\">pv_init_ops</a> = <a class=\"id\" href=\"#xen_init_ops\">xen_init_ops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pv_cpu_ops\">pv_cpu_ops</a> = <a class=\"id\" href=\"#xen_cpu_ops\">xen_cpu_ops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pv_apic_ops\">pv_apic_ops</a> = <a class=\"id\" href=\"#xen_apic_ops\">xen_apic_ops</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x86_init\">x86_init</a>.<a class=\"id\" href=\"#resources\">resources</a>.<a class=\"id\" href=\"#memory_setup\">memory_setup</a> = <a class=\"id\" href=\"#xen_memory_setup\">xen_memory_setup</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x86_init\">x86_init</a>.<a class=\"id\" href=\"#oem\">oem</a>.<a class=\"id\" href=\"#arch_setup\">arch_setup</a> = <a class=\"id\" href=\"#xen_arch_setup\">xen_arch_setup</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x86_init\">x86_init</a>.<a class=\"id\" href=\"#oem\">oem</a>.<a class=\"id\" href=\"#banner\">banner</a> = <a class=\"id\" href=\"#xen_banner\">xen_banner</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_init_time_ops\">xen_init_time_ops</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Set up some pagetable state before starting to set any ptes.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_init_mmu_ops\">xen_init_mmu_ops</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Prevent unwanted bits from being set in PTEs. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__supported_pte_mask\">__supported_pte_mask</a> &= ~<a class=\"id\" href=\"#_PAGE_GLOBAL\">_PAGE_GLOBAL</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#xen_initial_domain\">xen_initial_domain</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__supported_pte_mask\">__supported_pte_mask</a> &= ~(<a class=\"id\" href=\"#_PAGE_PWT\">_PAGE_PWT</a> | <a class=\"id\" href=\"#_PAGE_PCD\">_PAGE_PCD</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__supported_pte_mask\">__supported_pte_mask</a> |= <a class=\"id\" href=\"#_PAGE_IOMAP\">_PAGE_IOMAP</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Prevent page tables from being allocated in highmem, even</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * if CONFIG_HIGHPTE is enabled.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__userpte_alloc_gfp\">__userpte_alloc_gfp</a> &= ~<a class=\"id\" href=\"#__GFP_HIGHMEM\">__GFP_HIGHMEM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Work out if we support NX */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x86_configure_nx\">x86_configure_nx</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_setup_features\">xen_setup_features</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Get mfn list */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#xen_feature\">xen_feature</a>(<a class=\"id\" href=\"#XENFEAT_auto_translated_physmap\">XENFEAT_auto_translated_physmap</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xen_build_dynamic_phys_to_machine\">xen_build_dynamic_phys_to_machine</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Set up kernel GDT and segment registers, mainly so that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * -fstack-protector code can be executed.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_setup_stackprotector\">xen_setup_stackprotector</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_init_irq_ops\">xen_init_irq_ops</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_init_cpuid_mask\">xen_init_cpuid_mask</a>();", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_LOCAL_APIC\">CONFIG_X86_LOCAL_APIC</a>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * set up the basic apic ops.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_xen_basic_apic_ops\">set_xen_basic_apic_ops</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#xen_feature\">xen_feature</a>(<a class=\"id\" href=\"#XENFEAT_mmu_pt_update_preserve_ad\">XENFEAT_mmu_pt_update_preserve_ad</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pv_mmu_ops\">pv_mmu_ops</a>.<a class=\"id\" href=\"#ptep_modify_prot_start\">ptep_modify_prot_start</a> = <a class=\"id\" href=\"#xen_ptep_modify_prot_start\">xen_ptep_modify_prot_start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pv_mmu_ops\">pv_mmu_ops</a>.<a class=\"id\" href=\"#ptep_modify_prot_commit\">ptep_modify_prot_commit</a> = <a class=\"id\" href=\"#xen_ptep_modify_prot_commit\">xen_ptep_modify_prot_commit</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#machine_ops\">machine_ops</a> = <a class=\"id\" href=\"#xen_machine_ops\">xen_machine_ops</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The only reliable way to retain the initial address of the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * percpu gdt_page is to remember it here, so we can go and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * mark it RW later, when the initial percpu area is freed.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_initial_gdt\">xen_initial_gdt</a> = &amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#gdt_page\">gdt_page</a>, 0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_smp_init\">xen_smp_init</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgd\">pgd</a> = (<a class=\"id\" href=\"#pgd_t\">pgd_t</a> *)<a class=\"id\" href=\"#xen_start_info\">xen_start_info</a>-><a class=\"id\" href=\"#pt_base\">pt_base</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#xen_initial_domain\">xen_initial_domain</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__supported_pte_mask\">__supported_pte_mask</a> &= ~(<a class=\"id\" href=\"#_PAGE_PWT\">_PAGE_PWT</a> | <a class=\"id\" href=\"#_PAGE_PCD\">_PAGE_PCD</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__supported_pte_mask\">__supported_pte_mask</a> |= <a class=\"id\" href=\"#_PAGE_IOMAP\">_PAGE_IOMAP</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Don't do the full vcpu_info placement stuff until we have a</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   possible map and a non-dummy shared_info. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#xen_vcpu\">xen_vcpu</a>, 0) = &amp;<a class=\"id\" href=\"#HYPERVISOR_shared_info\">HYPERVISOR_shared_info</a>-><a class=\"id\" href=\"#vcpu_info\">vcpu_info</a>[0];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_disable\">local_irq_disable</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#early_boot_irqs_off\">early_boot_irqs_off</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_raw_console_write\">xen_raw_console_write</a>(\"mapping kernel into physical memory\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgd\">pgd</a> = <a class=\"id\" href=\"#xen_setup_kernel_pagetable\">xen_setup_kernel_pagetable</a>(<a class=\"id\" href=\"#pgd\">pgd</a>, <a class=\"id\" href=\"#xen_start_info\">xen_start_info</a>-><a class=\"id\" href=\"#nr_pages\">nr_pages</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_mm\">init_mm</a>.<a class=\"id\" href=\"#pgd\">pgd</a> = <a class=\"id\" href=\"#pgd\">pgd</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* keep using Xen gdt for now; no urgent need to change it */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pv_info\">pv_info</a>.<a class=\"id\" href=\"#kernel_rpl\">kernel_rpl</a> = 1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#xen_feature\">xen_feature</a>(<a class=\"id\" href=\"#XENFEAT_supervisor_mode_kernel\">XENFEAT_supervisor_mode_kernel</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pv_info\">pv_info</a>.<a class=\"id\" href=\"#kernel_rpl\">kernel_rpl</a> = 0;", 
"#else", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pv_info\">pv_info</a>.<a class=\"id\" href=\"#kernel_rpl\">kernel_rpl</a> = 0;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* set the limit of our address space */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_reserve_top\">xen_reserve_top</a>();", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* set up basic CPUID stuff */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpu_detect\">cpu_detect</a>(&amp;<a class=\"id\" href=\"#new_cpu_data\">new_cpu_data</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_cpu_data\">new_cpu_data</a>.<a class=\"id\" href=\"#hard_math\">hard_math</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_cpu_data\">new_cpu_data</a>.<a class=\"id\" href=\"#wp_works_ok\">wp_works_ok</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_cpu_data\">new_cpu_data</a>.<a class=\"id\" href=\"#x86_capability\">x86_capability</a>[0] = <a class=\"id\" href=\"#cpuid_edx\">cpuid_edx</a>(1);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Poke various useful things into boot_params */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#type_of_loader\">type_of_loader</a> = (9 << 4) | 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#ramdisk_image\">ramdisk_image</a> = <a class=\"id\" href=\"#xen_start_info\">xen_start_info</a>-><a class=\"id\" href=\"#mod_start\">mod_start</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>? <a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#xen_start_info\">xen_start_info</a>-><a class=\"id\" href=\"#mod_start\">mod_start</a>) : 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#ramdisk_size\">ramdisk_size</a> = <a class=\"id\" href=\"#xen_start_info\">xen_start_info</a>-><a class=\"id\" href=\"#mod_len\">mod_len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#cmd_line_ptr\">cmd_line_ptr</a> = <a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#xen_start_info\">xen_start_info</a>-><a class=\"id\" href=\"#cmd_line\">cmd_line</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#xen_initial_domain\">xen_initial_domain</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_preferred_console\">add_preferred_console</a>(\"xenboot\", 0, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_preferred_console\">add_preferred_console</a>(\"tty\", 0, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_preferred_console\">add_preferred_console</a>(\"hvc\", 0, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Make sure ACS will be enabled */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_request_acs\">pci_request_acs</a>();", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_raw_console_write\">xen_raw_console_write</a>(\"about to get started...\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_setup_runstate_info\">xen_setup_runstate_info</a>(0);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Start the world */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i386_start_kernel\">i386_start_kernel</a>();", 
"#else", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x86_64_start_reservations\">x86_64_start_reservations</a>((char *)<a class=\"id\" href=\"#__pa_symbol\">__pa_symbol</a>(&amp;<a class=\"id\" href=\"#boot_params\">boot_params</a>));", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"static <a class=\"id\" href=\"#uint32_t\">uint32_t</a> <a class=\"id\" href=\"#xen_cpuid_base\">xen_cpuid_base</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uint32_t\">uint32_t</a> <a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#eax\">eax</a>, <a class=\"id\" href=\"#ebx\">ebx</a>, <a class=\"id\" href=\"#ecx\">ecx</a>, <a class=\"id\" href=\"#edx\">edx</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#signature\">signature</a>[13];", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#base\">base</a> = 0x40000000; <a class=\"id\" href=\"#base\">base</a> &lt; 0x40010000; <a class=\"id\" href=\"#base\">base</a> += 0x100) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpuid\">cpuid</a>(<a class=\"id\" href=\"#base\">base</a>, &amp;<a class=\"id\" href=\"#eax\">eax</a>, &amp;<a class=\"id\" href=\"#ebx\">ebx</a>, &amp;<a class=\"id\" href=\"#ecx\">ecx</a>, &amp;<a class=\"id\" href=\"#edx\">edx</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>*(<a class=\"id\" href=\"#uint32_t\">uint32_t</a> *)(<a class=\"id\" href=\"#signature\">signature</a> + 0) = <a class=\"id\" href=\"#ebx\">ebx</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>*(<a class=\"id\" href=\"#uint32_t\">uint32_t</a> *)(<a class=\"id\" href=\"#signature\">signature</a> + 4) = <a class=\"id\" href=\"#ecx\">ecx</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>*(<a class=\"id\" href=\"#uint32_t\">uint32_t</a> *)(<a class=\"id\" href=\"#signature\">signature</a> + 8) = <a class=\"id\" href=\"#edx\">edx</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#signature\">signature</a>[12] = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(\"XenVMMXenVMM\", <a class=\"id\" href=\"#signature\">signature</a>) && ((<a class=\"id\" href=\"#eax\">eax</a> - <a class=\"id\" href=\"#base\">base</a>) >= 2))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#base\">base</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#init_hvm_pv_info\">init_hvm_pv_info</a>(int *<a class=\"id\" href=\"#major\">major</a>, int *<a class=\"id\" href=\"#minor\">minor</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uint32_t\">uint32_t</a> <a class=\"id\" href=\"#eax\">eax</a>, <a class=\"id\" href=\"#ebx\">ebx</a>, <a class=\"id\" href=\"#ecx\">ecx</a>, <a class=\"id\" href=\"#edx\">edx</a>, <a class=\"id\" href=\"#pages\">pages</a>, <a class=\"id\" href=\"#msr\">msr</a>, <a class=\"id\" href=\"#base\">base</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#pfn\">pfn</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#base\">base</a> = <a class=\"id\" href=\"#xen_cpuid_base\">xen_cpuid_base</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpuid\">cpuid</a>(<a class=\"id\" href=\"#base\">base</a> + 1, &amp;<a class=\"id\" href=\"#eax\">eax</a>, &amp;<a class=\"id\" href=\"#ebx\">ebx</a>, &amp;<a class=\"id\" href=\"#ecx\">ecx</a>, &amp;<a class=\"id\" href=\"#edx\">edx</a>);", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#major\">major</a> = <a class=\"id\" href=\"#eax\">eax</a> >> 16;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#minor\">minor</a> = <a class=\"id\" href=\"#eax\">eax</a> &amp; 0xffff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"Xen version %d.%d.\\n\", *<a class=\"id\" href=\"#major\">major</a>, *<a class=\"id\" href=\"#minor\">minor</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpuid\">cpuid</a>(<a class=\"id\" href=\"#base\">base</a> + 2, &amp;<a class=\"id\" href=\"#pages\">pages</a>, &amp;<a class=\"id\" href=\"#msr\">msr</a>, &amp;<a class=\"id\" href=\"#ecx\">ecx</a>, &amp;<a class=\"id\" href=\"#edx\">edx</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pfn\">pfn</a> = <a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#hypercall_page\">hypercall_page</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wrmsr_safe\">wrmsr_safe</a>(<a class=\"id\" href=\"#msr\">msr</a>, (<a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#pfn\">pfn</a>, (<a class=\"id\" href=\"#u32\">u32</a>)(<a class=\"id\" href=\"#pfn\">pfn</a> >> 32));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_setup_features\">xen_setup_features</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pv_info\">pv_info</a> = <a class=\"id\" href=\"#xen_info\">xen_info</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pv_info\">pv_info</a>.<a class=\"id\" href=\"#kernel_rpl\">kernel_rpl</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_domain_type\">xen_domain_type</a> = <a class=\"id\" href=\"#XEN_HVM_DOMAIN\">XEN_HVM_DOMAIN</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"void <a class=\"id\" href=\"#xen_hvm_init_shared_info\">xen_hvm_init_shared_info</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xen_add_to_physmap\">xen_add_to_physmap</a> <a class=\"id\" href=\"#xatp\">xatp</a>;", 
"<span class=\"ts\"/>static struct <a class=\"id\" href=\"#shared_info\">shared_info</a> *<a class=\"id\" href=\"#shared_info_page\">shared_info_page</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#shared_info_page\">shared_info_page</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shared_info_page\">shared_info_page</a> = (struct <a class=\"id\" href=\"#shared_info\">shared_info</a> *)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#extend_brk\">extend_brk</a>(<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xatp\">xatp</a>.<a class=\"id\" href=\"#domid\">domid</a> = <a class=\"id\" href=\"#DOMID_SELF\">DOMID_SELF</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xatp\">xatp</a>.<a class=\"id\" href=\"#idx\">idx</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xatp\">xatp</a>.<a class=\"id\" href=\"#space\">space</a> = <a class=\"id\" href=\"#XENMAPSPACE_shared_info\">XENMAPSPACE_shared_info</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xatp\">xatp</a>.<a class=\"id\" href=\"#gpfn\">gpfn</a> = <a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#shared_info_page\">shared_info_page</a>) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#HYPERVISOR_memory_op\">HYPERVISOR_memory_op</a>(<a class=\"id\" href=\"#XENMEM_add_to_physmap\">XENMEM_add_to_physmap</a>, &amp;<a class=\"id\" href=\"#xatp\">xatp</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#HYPERVISOR_shared_info\">HYPERVISOR_shared_info</a> = (struct <a class=\"id\" href=\"#shared_info\">shared_info</a> *)<a class=\"id\" href=\"#shared_info_page\">shared_info_page</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* xen_vcpu is a pointer to the vcpu_info struct in the shared_info</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * page, we use it in the event channel upcall and in some pvclock</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * related functions. We don't need the vcpu_info placement</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * optimizations because we don't use any pv_mmu or pv_irq op on</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * HVM.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * When xen_hvm_init_shared_info is run at boot time only vcpu 0 is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * online but xen_hvm_init_shared_info is run at resume time too and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * in that case multiple vcpus might be online. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_online_cpu\">for_each_online_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#xen_vcpu\">xen_vcpu</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) = &amp;<a class=\"id\" href=\"#HYPERVISOR_shared_info\">HYPERVISOR_shared_info</a>-><a class=\"id\" href=\"#vcpu_info\">vcpu_info</a>[<a class=\"id\" href=\"#cpu\">cpu</a>];", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_XEN_PVHVM\">CONFIG_XEN_PVHVM</a>", 
"static int <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#xen_hvm_cpu_notify\">xen_hvm_cpu_notify</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#self\">self</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    unsigned long <a class=\"id\" href=\"#action\">action</a>, void *<a class=\"id\" href=\"#hcpu\">hcpu</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a> = (long)<a class=\"id\" href=\"#hcpu\">hcpu</a>;", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#action\">action</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_UP_PREPARE\">CPU_UP_PREPARE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#xen_vcpu\">xen_vcpu</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) = &amp;<a class=\"id\" href=\"#HYPERVISOR_shared_info\">HYPERVISOR_shared_info</a>-><a class=\"id\" href=\"#vcpu_info\">vcpu_info</a>[<a class=\"id\" href=\"#cpu\">cpu</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NOTIFY_OK\">NOTIFY_OK</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> <a class=\"id\" href=\"#__cpuinitdata\">__cpuinitdata</a> <a class=\"id\" href=\"#xen_hvm_cpu_notifier\">xen_hvm_cpu_notifier</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#notifier_call\">notifier_call</a><span class=\"ts\"/>= <a class=\"id\" href=\"#xen_hvm_cpu_notify\">xen_hvm_cpu_notify</a>,", 
"};", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#xen_hvm_guest_init\">xen_hvm_guest_init</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#r\">r</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#major\">major</a>, <a class=\"id\" href=\"#minor\">minor</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#init_hvm_pv_info\">init_hvm_pv_info</a>(&amp;<a class=\"id\" href=\"#major\">major</a>, &amp;<a class=\"id\" href=\"#minor\">minor</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_hvm_init_shared_info\">xen_hvm_init_shared_info</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#xen_feature\">xen_feature</a>(<a class=\"id\" href=\"#XENFEAT_hvm_callback_vector\">XENFEAT_hvm_callback_vector</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xen_have_vector_callback\">xen_have_vector_callback</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#register_cpu_notifier\">register_cpu_notifier</a>(&amp;<a class=\"id\" href=\"#xen_hvm_cpu_notifier\">xen_hvm_cpu_notifier</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_unplug_emulated_devices\">xen_unplug_emulated_devices</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#have_vcpu_info_placement\">have_vcpu_info_placement</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x86_init\">x86_init</a>.<a class=\"id\" href=\"#irqs\">irqs</a>.<a class=\"id\" href=\"#intr_init\">intr_init</a> = <a class=\"id\" href=\"#xen_init_IRQ\">xen_init_IRQ</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_hvm_init_time_ops\">xen_hvm_init_time_ops</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_hvm_init_mmu_ops\">xen_hvm_init_mmu_ops</a>();", 
"}", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#xen_hvm_platform\">xen_hvm_platform</a>(void)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#xen_pv_domain\">xen_pv_domain</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#xen_cpuid_base\">xen_cpuid_base</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#true\">true</a>;", 
"}", 
"", 
"const <a class=\"id\" href=\"#__refconst\">__refconst</a> struct <a class=\"id\" href=\"#hypervisor_x86\">hypervisor_x86</a> <a class=\"id\" href=\"#x86_hyper_xen_hvm\">x86_hyper_xen_hvm</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= \"Xen HVM\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#detect\">detect</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#xen_hvm_platform\">xen_hvm_platform</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#init_platform\">init_platform</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#xen_hvm_guest_init\">xen_hvm_guest_init</a>,", 
"};", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#x86_hyper_xen_hvm\">x86_hyper_xen_hvm</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/4e/6381ad1ddd31db97e71f905dda5ea725425853.xr', __xr_tmp);
