var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * xfrm_input.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Changes:</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>YOSHIFUJI Hideaki @USAGI</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/><span class=\"ts\"/>Split up af-specific portion</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netdevice\">netdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip\">ip</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#xfrm\">xfrm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static struct <a class=\"id\" href=\"#kmem_cache\">kmem_cache</a> *<a class=\"id\" href=\"#secpath_cachep\">secpath_cachep</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a>;", 
"", 
"void <a class=\"id\" href=\"#__secpath_destroy\">__secpath_destroy</a>(struct <a class=\"id\" href=\"#sec_path\">sec_path</a> *<a class=\"id\" href=\"#sp\">sp</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#sp\">sp</a>-><a class=\"id\" href=\"#len\">len</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xfrm_state_put\">xfrm_state_put</a>(<a class=\"id\" href=\"#sp\">sp</a>-><a class=\"id\" href=\"#xvec\">xvec</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_free\">kmem_cache_free</a>(<a class=\"id\" href=\"#secpath_cachep\">secpath_cachep</a>, <a class=\"id\" href=\"#sp\">sp</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__secpath_destroy\">__secpath_destroy</a>);", 
"", 
"struct <a class=\"id\" href=\"#sec_path\">sec_path</a> *<a class=\"id\" href=\"#secpath_dup\">secpath_dup</a>(struct <a class=\"id\" href=\"#sec_path\">sec_path</a> *<a class=\"id\" href=\"#src\">src</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sec_path\">sec_path</a> *<a class=\"id\" href=\"#sp\">sp</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sp\">sp</a> = <a class=\"id\" href=\"#kmem_cache_alloc\">kmem_cache_alloc</a>(<a class=\"id\" href=\"#secpath_cachep\">secpath_cachep</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sp\">sp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sp\">sp</a>-><a class=\"id\" href=\"#len\">len</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#src\">src</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#sp\">sp</a>, <a class=\"id\" href=\"#src\">src</a>, sizeof(*<a class=\"id\" href=\"#sp\">sp</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#sp\">sp</a>-><a class=\"id\" href=\"#len\">len</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xfrm_state_hold\">xfrm_state_hold</a>(<a class=\"id\" href=\"#sp\">sp</a>-><a class=\"id\" href=\"#xvec\">xvec</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#sp\">sp</a>-><a class=\"id\" href=\"#refcnt\">refcnt</a>, 1);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sp\">sp</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#secpath_dup\">secpath_dup</a>);", 
"", 
"<span class=\"comment\">/* Fetch spi and seq from ipsec header */</span>", 
"", 
"int <a class=\"id\" href=\"#xfrm_parse_spi\">xfrm_parse_spi</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#nexthdr\">nexthdr</a>, <a class=\"id\" href=\"#__be32\">__be32</a> *<a class=\"id\" href=\"#spi\">spi</a>, <a class=\"id\" href=\"#__be32\">__be32</a> *<a class=\"id\" href=\"#seq\">seq</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#offset_seq\">offset_seq</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#hlen\">hlen</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#nexthdr\">nexthdr</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPPROTO_AH\">IPPROTO_AH</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlen\">hlen</a> = sizeof(struct <a class=\"id\" href=\"#ip_auth_hdr\">ip_auth_hdr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#ip_auth_hdr\">ip_auth_hdr</a>, <a class=\"id\" href=\"#spi\">spi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset_seq\">offset_seq</a> = <a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#ip_auth_hdr\">ip_auth_hdr</a>, <a class=\"id\" href=\"#seq_no\">seq_no</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPPROTO_ESP\">IPPROTO_ESP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlen\">hlen</a> = sizeof(struct <a class=\"id\" href=\"#ip_esp_hdr\">ip_esp_hdr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#ip_esp_hdr\">ip_esp_hdr</a>, <a class=\"id\" href=\"#spi\">spi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset_seq\">offset_seq</a> = <a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#ip_esp_hdr\">ip_esp_hdr</a>, <a class=\"id\" href=\"#seq_no\">seq_no</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPPROTO_COMP\">IPPROTO_COMP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pskb_may_pull\">pskb_may_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(struct <a class=\"id\" href=\"#ip_comp_hdr\">ip_comp_hdr</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#spi\">spi</a> = <a class=\"id\" href=\"#htonl\">htonl</a>(<a class=\"id\" href=\"#ntohs\">ntohs</a>(*(<a class=\"id\" href=\"#__be16\">__be16</a>*)(<a class=\"id\" href=\"#skb_transport_header\">skb_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>) + 2)));", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#seq\">seq</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pskb_may_pull\">pskb_may_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#hlen\">hlen</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#spi\">spi</a> = *(<a class=\"id\" href=\"#__be32\">__be32</a>*)(<a class=\"id\" href=\"#skb_transport_header\">skb_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>) + <a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#seq\">seq</a> = *(<a class=\"id\" href=\"#__be32\">__be32</a>*)(<a class=\"id\" href=\"#skb_transport_header\">skb_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>) + <a class=\"id\" href=\"#offset_seq\">offset_seq</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#xfrm_prepare_input\">xfrm_prepare_input</a>(struct <a class=\"id\" href=\"#xfrm_state\">xfrm_state</a> *<a class=\"id\" href=\"#x\">x</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xfrm_mode\">xfrm_mode</a> *<a class=\"id\" href=\"#inner_mode\">inner_mode</a> = <a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#inner_mode\">inner_mode</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#outer_mode\">outer_mode</a>-><a class=\"id\" href=\"#afinfo\">afinfo</a>-><a class=\"id\" href=\"#extract_input\">extract_input</a>(<a class=\"id\" href=\"#x\">x</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#sel\">sel</a>.<a class=\"id\" href=\"#family\">family</a> == <a class=\"id\" href=\"#AF_UNSPEC\">AF_UNSPEC</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inner_mode\">inner_mode</a> = <a class=\"id\" href=\"#xfrm_ip2inner_mode\">xfrm_ip2inner_mode</a>(<a class=\"id\" href=\"#x\">x</a>, <a class=\"id\" href=\"#XFRM_MODE_SKB_CB\">XFRM_MODE_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#protocol\">protocol</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inner_mode\">inner_mode</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EAFNOSUPPORT\">EAFNOSUPPORT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#protocol\">protocol</a> = <a class=\"id\" href=\"#inner_mode\">inner_mode</a>-><a class=\"id\" href=\"#afinfo\">afinfo</a>-><a class=\"id\" href=\"#eth_proto\">eth_proto</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#inner_mode\">inner_mode</a>-><a class=\"id\" href=\"#input2\">input2</a>(<a class=\"id\" href=\"#x\">x</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#xfrm_prepare_input\">xfrm_prepare_input</a>);", 
"", 
"int <a class=\"id\" href=\"#xfrm_input\">xfrm_input</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#nexthdr\">nexthdr</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#spi\">spi</a>, int <a class=\"id\" href=\"#encap_type\">encap_type</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#seq\">seq</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xfrm_state\">xfrm_state</a> *<a class=\"id\" href=\"#x\">x</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xfrm_address_t\">xfrm_address_t</a> *<a class=\"id\" href=\"#daddr\">daddr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xfrm_mode\">xfrm_mode</a> *<a class=\"id\" href=\"#inner_mode\">inner_mode</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#family\">family</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#decaps\">decaps</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#async\">async</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* A negative encap_type indicates async resumption. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#encap_type\">encap_type</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#async\">async</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x\">x</a> = <a class=\"id\" href=\"#xfrm_input_state\">xfrm_input_state</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq\">seq</a> = <a class=\"id\" href=\"#XFRM_SKB_CB\">XFRM_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>.<a class=\"id\" href=\"#input\">input</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#resume\">resume</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Allocate new secpath or COW existing one. */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sp\">sp</a> || <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sp\">sp</a>-><a class=\"id\" href=\"#refcnt\">refcnt</a>) != 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sec_path\">sec_path</a> *<a class=\"id\" href=\"#sp\">sp</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sp\">sp</a> = <a class=\"id\" href=\"#secpath_dup\">secpath_dup</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sp\">sp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#sp\">sp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#XFRM_INC_STATS\">XFRM_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#LINUX_MIB_XFRMINERROR\">LINUX_MIB_XFRMINERROR</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sp\">sp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#secpath_put\">secpath_put</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sp\">sp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sp\">sp</a> = <a class=\"id\" href=\"#sp\">sp</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#daddr\">daddr</a> = (<a class=\"id\" href=\"#xfrm_address_t\">xfrm_address_t</a> *)(<a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#XFRM_SPI_SKB_CB\">XFRM_SPI_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#daddroff\">daddroff</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#family\">family</a> = <a class=\"id\" href=\"#XFRM_SPI_SKB_CB\">XFRM_SPI_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#family\">family</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq\">seq</a> = 0;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#spi\">spi</a> && (<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#xfrm_parse_spi\">xfrm_parse_spi</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#nexthdr\">nexthdr</a>, &amp;<a class=\"id\" href=\"#spi\">spi</a>, &amp;<a class=\"id\" href=\"#seq\">seq</a>)) != 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#XFRM_INC_STATS\">XFRM_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#LINUX_MIB_XFRMINHDRERROR\">LINUX_MIB_XFRMINHDRERROR</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sp\">sp</a>-><a class=\"id\" href=\"#len\">len</a> == <a class=\"id\" href=\"#XFRM_MAX_DEPTH\">XFRM_MAX_DEPTH</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#XFRM_INC_STATS\">XFRM_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#LINUX_MIB_XFRMINBUFFERERROR\">LINUX_MIB_XFRMINBUFFERERROR</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x\">x</a> = <a class=\"id\" href=\"#xfrm_state_lookup\">xfrm_state_lookup</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#mark\">mark</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#spi\">spi</a>, <a class=\"id\" href=\"#nexthdr\">nexthdr</a>, <a class=\"id\" href=\"#family\">family</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#x\">x</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#XFRM_INC_STATS\">XFRM_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#LINUX_MIB_XFRMINNOSTATES\">LINUX_MIB_XFRMINNOSTATES</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xfrm_audit_state_notfound\">xfrm_audit_state_notfound</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#family\">family</a>, <a class=\"id\" href=\"#spi\">spi</a>, <a class=\"id\" href=\"#seq\">seq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sp\">sp</a>-><a class=\"id\" href=\"#xvec\">xvec</a>[<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sp\">sp</a>-><a class=\"id\" href=\"#len\">len</a>++] = <a class=\"id\" href=\"#x\">x</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#km\">km</a>.<a class=\"id\" href=\"#state\">state</a> != <a class=\"id\" href=\"#XFRM_STATE_VALID\">XFRM_STATE_VALID</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#XFRM_INC_STATS\">XFRM_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#LINUX_MIB_XFRMINSTATEINVALID\">LINUX_MIB_XFRMINSTATEINVALID</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop_unlock\">drop_unlock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#encap\">encap</a> ? <a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#encap\">encap</a>-><a class=\"id\" href=\"#encap_type\">encap_type</a> : 0) != <a class=\"id\" href=\"#encap_type\">encap_type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#XFRM_INC_STATS\">XFRM_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#LINUX_MIB_XFRMINSTATEMISMATCH\">LINUX_MIB_XFRMINSTATEMISMATCH</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop_unlock\">drop_unlock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#props\">props</a>.<a class=\"id\" href=\"#replay_window\">replay_window</a> && <a class=\"id\" href=\"#xfrm_replay_check\">xfrm_replay_check</a>(<a class=\"id\" href=\"#x\">x</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#seq\">seq</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#XFRM_INC_STATS\">XFRM_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#LINUX_MIB_XFRMINSTATESEQERROR\">LINUX_MIB_XFRMINSTATESEQERROR</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop_unlock\">drop_unlock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#xfrm_state_check_expire\">xfrm_state_check_expire</a>(<a class=\"id\" href=\"#x\">x</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#XFRM_INC_STATS\">XFRM_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#LINUX_MIB_XFRMINSTATEEXPIRED\">LINUX_MIB_XFRMINSTATEEXPIRED</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop_unlock\">drop_unlock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#XFRM_SKB_CB\">XFRM_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>.<a class=\"id\" href=\"#input\">input</a> = <a class=\"id\" href=\"#seq\">seq</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nexthdr\">nexthdr</a> = <a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#type\">type</a>-><a class=\"id\" href=\"#input\">input</a>(<a class=\"id\" href=\"#x\">x</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nexthdr\">nexthdr</a> == -<a class=\"id\" href=\"#EINPROGRESS\">EINPROGRESS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#resume\">resume</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nexthdr\">nexthdr</a> <= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nexthdr\">nexthdr</a> == -<a class=\"id\" href=\"#EBADMSG\">EBADMSG</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xfrm_audit_state_icvfail\">xfrm_audit_state_icvfail</a>(<a class=\"id\" href=\"#x\">x</a>, <a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#type\">type</a>-><a class=\"id\" href=\"#proto\">proto</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#integrity_failed\">integrity_failed</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#XFRM_INC_STATS\">XFRM_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#LINUX_MIB_XFRMINSTATEPROTOERROR\">LINUX_MIB_XFRMINSTATEPROTOERROR</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop_unlock\">drop_unlock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* only the first xfrm gets the encap type */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#encap_type\">encap_type</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#props\">props</a>.<a class=\"id\" href=\"#replay_window\">replay_window</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xfrm_replay_advance\">xfrm_replay_advance</a>(<a class=\"id\" href=\"#x\">x</a>, <a class=\"id\" href=\"#seq\">seq</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#curlft\">curlft</a>.<a class=\"id\" href=\"#bytes\">bytes</a> += <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#curlft\">curlft</a>.<a class=\"id\" href=\"#packets\">packets</a>++;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#XFRM_MODE_SKB_CB\">XFRM_MODE_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#protocol\">protocol</a> = <a class=\"id\" href=\"#nexthdr\">nexthdr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inner_mode\">inner_mode</a> = <a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#inner_mode\">inner_mode</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#sel\">sel</a>.<a class=\"id\" href=\"#family\">family</a> == <a class=\"id\" href=\"#AF_UNSPEC\">AF_UNSPEC</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inner_mode\">inner_mode</a> = <a class=\"id\" href=\"#xfrm_ip2inner_mode\">xfrm_ip2inner_mode</a>(<a class=\"id\" href=\"#x\">x</a>, <a class=\"id\" href=\"#XFRM_MODE_SKB_CB\">XFRM_MODE_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#protocol\">protocol</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inner_mode\">inner_mode</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inner_mode\">inner_mode</a>-><a class=\"id\" href=\"#input\">input</a>(<a class=\"id\" href=\"#x\">x</a>, <a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#XFRM_INC_STATS\">XFRM_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#LINUX_MIB_XFRMINSTATEMODEERROR\">LINUX_MIB_XFRMINSTATEMODEERROR</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#outer_mode\">outer_mode</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#XFRM_MODE_FLAG_TUNNEL\">XFRM_MODE_FLAG_TUNNEL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#decaps\">decaps</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We need the inner address.  However, we only get here for</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * transport mode so the outer address is identical.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#daddr\">daddr</a> = &amp;<a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#daddr\">daddr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#family\">family</a> = <a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#outer_mode\">outer_mode</a>-><a class=\"id\" href=\"#afinfo\">afinfo</a>-><a class=\"id\" href=\"#family\">family</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#xfrm_parse_spi\">xfrm_parse_spi</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#nexthdr\">nexthdr</a>, &amp;<a class=\"id\" href=\"#spi\">spi</a>, &amp;<a class=\"id\" href=\"#seq\">seq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#XFRM_INC_STATS\">XFRM_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#LINUX_MIB_XFRMINHDRERROR\">LINUX_MIB_XFRMINHDRERROR</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} while (!<a class=\"id\" href=\"#err\">err</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nf_reset\">nf_reset</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#decaps\">decaps</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_dst_drop\">skb_dst_drop</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netif_rx\">netif_rx</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#inner_mode\">inner_mode</a>-><a class=\"id\" href=\"#afinfo\">afinfo</a>-><a class=\"id\" href=\"#transport_finish\">transport_finish</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#async\">async</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#drop_unlock\">drop_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<a class=\"id\" href=\"#drop\">drop</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#xfrm_input\">xfrm_input</a>);", 
"", 
"int <a class=\"id\" href=\"#xfrm_input_resume\">xfrm_input_resume</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#nexthdr\">nexthdr</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#xfrm_input\">xfrm_input</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#nexthdr\">nexthdr</a>, 0, -1);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#xfrm_input_resume\">xfrm_input_resume</a>);", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#xfrm_input_init\">xfrm_input_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#secpath_cachep\">secpath_cachep</a> = <a class=\"id\" href=\"#kmem_cache_create\">kmem_cache_create</a>(\"secpath_cache\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   sizeof(struct <a class=\"id\" href=\"#sec_path\">sec_path</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   0, <a class=\"id\" href=\"#SLAB_HWCACHE_ALIGN\">SLAB_HWCACHE_ALIGN</a>|<a class=\"id\" href=\"#SLAB_PANIC\">SLAB_PANIC</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"}", 
];
xr_frag_insert('l/4e/aa23e6ba076e218b273c143c7621c74f662c62.xr', __xr_tmp);
