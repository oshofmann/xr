var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * linux/kernel/irq/manage.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 1992, 1998-2006 Linus Torvalds, Ingo Molnar</span>", 
"<span class=\"comment\"> * Copyright (C) 2005-2006 Thomas Gleixner</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file contains driver APIs to the irq subsystem.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#irq\">irq</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kthread\">kthread</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#random\">random</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"internals.h\"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>synchronize_irq - wait for pending IRQ handlers (on other CPUs)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@irq: interrupt number to wait for</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This function waits for any pending IRQ handlers for this interrupt</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>to complete before returning. If you use this function while</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>holding a resource the IRQ handler may need you will deadlock.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This function may be called - with care - from IRQ context.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#synchronize_irq\">synchronize_irq</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#irq_to_desc\">irq_to_desc</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#status\">status</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#desc\">desc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Wait until we're out of the critical section.  This might</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * give the wrong answer due to the lack of memory barriers.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#IRQ_INPROGRESS\">IRQ_INPROGRESS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu_relax\">cpu_relax</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Ok, that indicated we're done: double-check carefully. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock_irqsave\">raw_spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock_irqrestore\">raw_spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Oops, that failed? */</span>", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#IRQ_INPROGRESS\">IRQ_INPROGRESS</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We made sure that no hardirq handler is running. Now verify</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * that no threaded handlers are active.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wait_event\">wait_event</a>(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#wait_for_threads\">wait_for_threads</a>, !<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#threads_active\">threads_active</a>));", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#synchronize_irq\">synchronize_irq</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"<a class=\"id\" href=\"#cpumask_var_t\">cpumask_var_t</a> <a class=\"id\" href=\"#irq_default_affinity\">irq_default_affinity</a>;", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>irq_can_set_affinity - Check if the affinity of a given irq can be set</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@irq:<span class=\"ts\"/><span class=\"ts\"/>Interrupt to check</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#irq_can_set_affinity\">irq_can_set_affinity</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#irq_to_desc\">irq_to_desc</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#CHECK_IRQ_PER_CPU\">CHECK_IRQ_PER_CPU</a>(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#status\">status</a>) || !<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip\">chip</a> ||", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#set_affinity\">set_affinity</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>irq_set_thread_affinity - Notify irq threads to adjust affinity</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@desc:<span class=\"ts\"/><span class=\"ts\"/>irq descriptor which has affitnity changed</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>We just set IRQTF_AFFINITY and delegate the affinity setting</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>to the interrupt thread itself. We can not call</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>set_cpus_allowed_ptr() here as we hold desc-&gt;lock and this</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>code can be called from hard interrupt context.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#irq_set_thread_affinity\">irq_set_thread_affinity</a>(struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irqaction\">irqaction</a> *<a class=\"id\" href=\"#action\">action</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#action\">action</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#action\">action</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#action\">action</a>-><a class=\"id\" href=\"#thread\">thread</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#IRQTF_AFFINITY\">IRQTF_AFFINITY</a>, &amp;<a class=\"id\" href=\"#action\">action</a>-><a class=\"id\" href=\"#thread_flags\">thread_flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#action\">action</a> = <a class=\"id\" href=\"#action\">action</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>irq_set_affinity - Set the irq affinity of a given irq</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@irq:<span class=\"ts\"/><span class=\"ts\"/>Interrupt to set affinity</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@cpumask:<span class=\"ts\"/>cpumask</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#irq_set_affinity\">irq_set_affinity</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>, const struct <a class=\"id\" href=\"#cpumask\">cpumask</a> *<a class=\"id\" href=\"#cpumask\">cpumask</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#irq_to_desc\">irq_to_desc</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#set_affinity\">set_affinity</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock_irqsave\">raw_spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_GENERIC_PENDING_IRQ\">CONFIG_GENERIC_PENDING_IRQ</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#IRQ_MOVE_PCNTXT\">IRQ_MOVE_PCNTXT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#set_affinity\">set_affinity</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#cpumask\">cpumask</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpumask_copy\">cpumask_copy</a>(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#affinity\">affinity</a>, <a class=\"id\" href=\"#cpumask\">cpumask</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq_set_thread_affinity\">irq_set_thread_affinity</a>(<a class=\"id\" href=\"#desc\">desc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#status\">status</a> |= <a class=\"id\" href=\"#IRQ_MOVE_PENDING\">IRQ_MOVE_PENDING</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpumask_copy\">cpumask_copy</a>(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#pending_mask\">pending_mask</a>, <a class=\"id\" href=\"#cpumask\">cpumask</a>);", 
"<span class=\"ts\"/>}", 
"#else", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#set_affinity\">set_affinity</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#cpumask\">cpumask</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpumask_copy\">cpumask_copy</a>(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#affinity\">affinity</a>, <a class=\"id\" href=\"#cpumask\">cpumask</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq_set_thread_affinity\">irq_set_thread_affinity</a>(<a class=\"id\" href=\"#desc\">desc</a>);", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#status\">status</a> |= <a class=\"id\" href=\"#IRQ_AFFINITY_SET\">IRQ_AFFINITY_SET</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock_irqrestore\">raw_spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#irq_set_affinity_hint\">irq_set_affinity_hint</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>, const struct <a class=\"id\" href=\"#cpumask\">cpumask</a> *<a class=\"id\" href=\"#m\">m</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#irq_to_desc\">irq_to_desc</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#desc\">desc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock_irqsave\">raw_spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#affinity_hint\">affinity_hint</a> = <a class=\"id\" href=\"#m\">m</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock_irqrestore\">raw_spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#irq_set_affinity_hint\">irq_set_affinity_hint</a>);", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_AUTO_IRQ_AFFINITY\">CONFIG_AUTO_IRQ_AFFINITY</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Generic version of the affinity autoselector.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#setup_affinity\">setup_affinity</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>, struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#irq_can_set_affinity\">irq_can_set_affinity</a>(<a class=\"id\" href=\"#irq\">irq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Preserve an userspace affinity setup, but make sure that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * one of the targets is online.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#status\">status</a> &amp; (<a class=\"id\" href=\"#IRQ_AFFINITY_SET\">IRQ_AFFINITY_SET</a> | <a class=\"id\" href=\"#IRQ_NO_BALANCING\">IRQ_NO_BALANCING</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cpumask_any_and\">cpumask_any_and</a>(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#affinity\">affinity</a>, <a class=\"id\" href=\"#cpu_online_mask\">cpu_online_mask</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>    &lt; <a class=\"id\" href=\"#nr_cpu_ids\">nr_cpu_ids</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#set_affinity\">set_affinity</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#status\">status</a> &= ~<a class=\"id\" href=\"#IRQ_AFFINITY_SET\">IRQ_AFFINITY_SET</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpumask_and\">cpumask_and</a>(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#affinity\">affinity</a>, <a class=\"id\" href=\"#cpu_online_mask\">cpu_online_mask</a>, <a class=\"id\" href=\"#irq_default_affinity\">irq_default_affinity</a>);", 
"<a class=\"id\" href=\"#set_affinity\">set_affinity</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#set_affinity\">set_affinity</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#affinity\">affinity</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#setup_affinity\">setup_affinity</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>, struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#d\">d</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#irq_select_affinity\">irq_select_affinity</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Called when affinity is set via /proc/irq</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#irq_select_affinity_usr\">irq_select_affinity_usr</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#irq_to_desc\">irq_to_desc</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock_irqsave\">raw_spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#setup_affinity\">setup_affinity</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#desc\">desc</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq_set_thread_affinity\">irq_set_thread_affinity</a>(<a class=\"id\" href=\"#desc\">desc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock_irqrestore\">raw_spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#setup_affinity\">setup_affinity</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>, struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"void <a class=\"id\" href=\"#__disable_irq\">__disable_irq</a>(struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>, unsigned int <a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#suspend\">suspend</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#suspend\">suspend</a>) {", 
];
xr_frag_insert('l/4f/1c8877408010b32968f466dd688423b5293e47.xr', __xr_tmp);
