var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_SCSI_SCSI_DEVICE_H\">_SCSI_SCSI_DEVICE_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_SCSI_SCSI_DEVICE_H\">_SCSI_SCSI_DEVICE_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#device\">device</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#workqueue\">workqueue</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blkdev\">blkdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi\">scsi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#atomic\">atomic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#request_queue\">request_queue</a>;", 
"struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a>;", 
"struct <a class=\"id\" href=\"#scsi_lun\">scsi_lun</a>;", 
"struct <a class=\"id\" href=\"#scsi_sense_hdr\">scsi_sense_hdr</a>;", 
"", 
"struct <a class=\"id\" href=\"#scsi_mode_data\">scsi_mode_data</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><a class=\"id\" href=\"#block_descriptor_length\">block_descriptor_length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#medium_type\">medium_type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#device_specific\">device_specific</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#header_length\">header_length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#longlba\">longlba</a>:1;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * sdev state: If you alter this, you also need to alter scsi_sysfs.c</span>", 
"<span class=\"comment\"> * (for the ascii descriptions) and the state model enforcer:</span>", 
"<span class=\"comment\"> * scsi_lib:scsi_device_set_state().</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#scsi_device_state\">scsi_device_state</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SDEV_CREATED\">SDEV_CREATED</a> = 1,<span class=\"ts\"/><span class=\"comment\">/* device created but not added to sysfs</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Only internal commands allowed (for inq) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SDEV_RUNNING\">SDEV_RUNNING</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* device properly configured</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * All commands allowed */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SDEV_CANCEL\">SDEV_CANCEL</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* beginning to delete device</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Only error handler commands allowed */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SDEV_DEL\">SDEV_DEL</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* device deleted </span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * no commands allowed */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SDEV_QUIESCE\">SDEV_QUIESCE</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Device quiescent.  No block commands</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * will be accepted, only specials (which</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * originate in the mid-layer) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SDEV_OFFLINE\">SDEV_OFFLINE</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Device offlined (by error handling or</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * user request */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SDEV_BLOCK\">SDEV_BLOCK</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Device blocked by scsi lld.  No</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * scsi commands from user or midlayer</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * should be issued to the scsi</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * lld. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SDEV_CREATED_BLOCK\">SDEV_CREATED_BLOCK</a>,<span class=\"ts\"/><span class=\"comment\">/* same as above but for created devices */</span>", 
"};", 
"", 
"enum <a class=\"id\" href=\"#scsi_device_event\">scsi_device_event</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SDEV_EVT_MEDIA_CHANGE\">SDEV_EVT_MEDIA_CHANGE</a><span class=\"ts\"/>= 1,<span class=\"ts\"/><span class=\"comment\">/* media has changed */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SDEV_EVT_LAST\">SDEV_EVT_LAST</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#SDEV_EVT_MEDIA_CHANGE\">SDEV_EVT_MEDIA_CHANGE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SDEV_EVT_MAXBITS\">SDEV_EVT_MAXBITS</a><span class=\"ts\"/>= <a class=\"id\" href=\"#SDEV_EVT_LAST\">SDEV_EVT_LAST</a> + 1", 
"};", 
"", 
"struct <a class=\"id\" href=\"#scsi_event\">scsi_event</a> {", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#scsi_device_event\">scsi_device_event</a><span class=\"ts\"/><a class=\"id\" href=\"#evt_type\">evt_type</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* put union of data structures, for non-simple event types,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * here</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"};", 
"", 
"struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#Scsi_Host\">Scsi_Host</a> *<a class=\"id\" href=\"#host\">host</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#request_queue\">request_queue</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* the next two are protected by the host-&gt;host_lock */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a>    <a class=\"id\" href=\"#siblings\">siblings</a>;   <span class=\"comment\">/* list of all devices on this host */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a>    <a class=\"id\" href=\"#same_target_siblings\">same_target_siblings</a>; <span class=\"comment\">/* just the devices sharing same target id */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* this is now protected by the request_queue-&gt;queue_lock */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#device_busy\">device_busy</a>;<span class=\"ts\"/><span class=\"comment\">/* commands actually active on</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * low-level. protected by queue_lock. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> <a class=\"id\" href=\"#list_lock\">list_lock</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#cmd_list\">cmd_list</a>;<span class=\"ts\"/><span class=\"comment\">/* queue of in use SCSI Command structures */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#starved_entry\">starved_entry</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#current_cmnd\">current_cmnd</a>;<span class=\"ts\"/><span class=\"comment\">/* currently active command */</span>", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#queue_depth\">queue_depth</a>;<span class=\"ts\"/><span class=\"comment\">/* How deep of a queue we want */</span>", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#max_queue_depth\">max_queue_depth</a>;<span class=\"ts\"/><span class=\"comment\">/* max queue depth */</span>", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#last_queue_full_depth\">last_queue_full_depth</a>; <span class=\"comment\">/* These two are used by */</span>", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#last_queue_full_count\">last_queue_full_count</a>; <span class=\"comment\">/* scsi_track_queue_full() */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#last_queue_full_time\">last_queue_full_time</a>;<span class=\"ts\"/><span class=\"comment\">/* last queue full time */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#queue_ramp_up_period\">queue_ramp_up_period</a>;<span class=\"ts\"/><span class=\"comment\">/* ramp up period in jiffies */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SCSI_DEFAULT_RAMP_UP_PERIOD\">SCSI_DEFAULT_RAMP_UP_PERIOD</a><span class=\"ts\"/>(120 * <a class=\"id\" href=\"#HZ\">HZ</a>)", 
"", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#last_queue_ramp_up\">last_queue_ramp_up</a>;<span class=\"ts\"/><span class=\"comment\">/* last queue ramp up time */</span>", 
"", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#lun\">lun</a>, <a class=\"id\" href=\"#channel\">channel</a>;", 
"", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#manufacturer\">manufacturer</a>;<span class=\"ts\"/><span class=\"comment\">/* Manufacturer of device, for using </span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * vendor-specific cmd's */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#sector_size\">sector_size</a>;<span class=\"ts\"/><span class=\"comment\">/* size in bytes */</span>", 
"", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#hostdata\">hostdata</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* available to low-level driver */</span>", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#scsi_level\">scsi_level</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#inq_periph_qual\">inq_periph_qual</a>;<span class=\"ts\"/><span class=\"comment\">/* PQ from INQUIRY data */</span><span class=\"ts\"/>", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#inquiry_len\">inquiry_len</a>;<span class=\"ts\"/><span class=\"comment\">/* valid bytes in 'inquiry' */</span>", 
"<span class=\"ts\"/>unsigned char * <a class=\"id\" href=\"#inquiry\">inquiry</a>;<span class=\"ts\"/><span class=\"comment\">/* INQUIRY response data */</span>", 
"<span class=\"ts\"/>const char * <a class=\"id\" href=\"#vendor\">vendor</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* [back_compat] point into 'inquiry' ... */</span>", 
"<span class=\"ts\"/>const char * <a class=\"id\" href=\"#model\">model</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ... after scan; point to static string */</span>", 
"<span class=\"ts\"/>const char * <a class=\"id\" href=\"#rev\">rev</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ... \"nullnullnullnull\" before scan */</span>", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#current_tag\">current_tag</a>;<span class=\"ts\"/><span class=\"comment\">/* current tag */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_target\">scsi_target</a>      *<a class=\"id\" href=\"#sdev_target\">sdev_target</a>;   <span class=\"comment\">/* used only for single_lun */</span>", 
"", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#sdev_bflags\">sdev_bflags</a>; <span class=\"comment\">/* black/white flags as also found in</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * scsi_devinfo.[hc]. For now used only to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * pass settings from slave_alloc to scsi</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * core. */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#writeable\">writeable</a>:1;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#removable\">removable</a>:1;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#changed\">changed</a>:1;<span class=\"ts\"/><span class=\"comment\">/* Data invalid due to media change */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#busy\">busy</a>:1;<span class=\"ts\"/><span class=\"comment\">/* Used to prevent races */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#lockable\">lockable</a>:1;<span class=\"ts\"/><span class=\"comment\">/* Able to prevent media removal */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#locked\">locked</a>:1;      <span class=\"comment\">/* Media removal disabled */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#borken\">borken</a>:1;<span class=\"ts\"/><span class=\"comment\">/* Tell the Seagate driver to be </span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * painfully slow on this device */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#disconnect\">disconnect</a>:1;<span class=\"ts\"/><span class=\"comment\">/* can disconnect */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#soft_reset\">soft_reset</a>:1;<span class=\"ts\"/><span class=\"comment\">/* Uses soft reset option */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#sdtr\">sdtr</a>:1;<span class=\"ts\"/><span class=\"comment\">/* Device supports SDTR messages */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#wdtr\">wdtr</a>:1;<span class=\"ts\"/><span class=\"comment\">/* Device supports WDTR messages */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#ppr\">ppr</a>:1;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Device supports PPR messages */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#tagged_supported\">tagged_supported</a>:1;<span class=\"ts\"/><span class=\"comment\">/* Supports SCSI-II tagged queuing */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#simple_tags\">simple_tags</a>:1;<span class=\"ts\"/><span class=\"comment\">/* simple queue tag messages are enabled */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#ordered_tags\">ordered_tags</a>:1;<span class=\"comment\">/* ordered queue tag messages are enabled */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#was_reset\">was_reset</a>:1;<span class=\"ts\"/><span class=\"comment\">/* There was a bus reset on the bus for </span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * this device */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#expecting_cc_ua\">expecting_cc_ua</a>:1; <span class=\"comment\">/* Expecting a CHECK_CONDITION/UNIT_ATTN</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     * because we did a bus reset. */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#use_10_for_rw\">use_10_for_rw</a>:1; <span class=\"comment\">/* first try 10-byte read / write */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#use_10_for_ms\">use_10_for_ms</a>:1; <span class=\"comment\">/* first try 10-byte mode sense/select */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#skip_ms_page_8\">skip_ms_page_8</a>:1;<span class=\"ts\"/><span class=\"comment\">/* do not use MODE SENSE page 0x08 */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#skip_ms_page_3f\">skip_ms_page_3f</a>:1;<span class=\"ts\"/><span class=\"comment\">/* do not use MODE SENSE page 0x3f */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#use_192_bytes_for_3f\">use_192_bytes_for_3f</a>:1; <span class=\"comment\">/* ask for 192 bytes from page 0x3f */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#no_start_on_add\">no_start_on_add</a>:1;<span class=\"ts\"/><span class=\"comment\">/* do not issue start on add */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#allow_restart\">allow_restart</a>:1; <span class=\"comment\">/* issue START_UNIT in error handler */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#manage_start_stop\">manage_start_stop</a>:1;<span class=\"ts\"/><span class=\"comment\">/* Let HLD (sd) manage start/stop */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#start_stop_pwr_cond\">start_stop_pwr_cond</a>:1;<span class=\"ts\"/><span class=\"comment\">/* Set power cond. in START_STOP_UNIT */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#no_uld_attach\">no_uld_attach</a>:1; <span class=\"comment\">/* disable connecting to upper level drivers */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#select_no_atn\">select_no_atn</a>:1;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#fix_capacity\">fix_capacity</a>:1;<span class=\"ts\"/><span class=\"comment\">/* READ_CAPACITY is too high by 1 */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#guess_capacity\">guess_capacity</a>:1;<span class=\"ts\"/><span class=\"comment\">/* READ_CAPACITY might be too high by 1 */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#retry_hwerror\">retry_hwerror</a>:1;<span class=\"ts\"/><span class=\"comment\">/* Retry HARDWARE_ERROR */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#last_sector_bug\">last_sector_bug</a>:1;<span class=\"ts\"/><span class=\"comment\">/* do not use multisector accesses on</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   SD_LAST_BUGGY_SECTORS */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#is_visible\">is_visible</a>:1;<span class=\"ts\"/><span class=\"comment\">/* is the device visible in sysfs */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DECLARE_BITMAP\">DECLARE_BITMAP</a>(<a class=\"id\" href=\"#supported_events\">supported_events</a>, <a class=\"id\" href=\"#SDEV_EVT_MAXBITS\">SDEV_EVT_MAXBITS</a>); <span class=\"comment\">/* supported events */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#event_list\">event_list</a>;<span class=\"ts\"/><span class=\"comment\">/* asserted events */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#work_struct\">work_struct</a> <a class=\"id\" href=\"#event_work\">event_work</a>;", 
"", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#device_blocked\">device_blocked</a>;<span class=\"ts\"/><span class=\"comment\">/* Device returned QUEUE_FULL. */</span>", 
"", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#max_device_blocked\">max_device_blocked</a>; <span class=\"comment\">/* what device_blocked counts down from  */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SCSI_DEFAULT_DEVICE_BLOCKED\">SCSI_DEFAULT_DEVICE_BLOCKED</a><span class=\"ts\"/>3", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#iorequest_cnt\">iorequest_cnt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#iodone_cnt\">iodone_cnt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#ioerr_cnt\">ioerr_cnt</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sdev_gendev\">sdev_gendev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sdev_dev\">sdev_dev</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#execute_work\">execute_work</a><span class=\"ts\"/><a class=\"id\" href=\"#ew\">ew</a>; <span class=\"comment\">/* used to get process context on put */</span>", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_dh_data\">scsi_dh_data</a><span class=\"ts\"/>*<a class=\"id\" href=\"#scsi_dh_data\">scsi_dh_data</a>;", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#scsi_device_state\">scsi_device_state</a> <a class=\"id\" href=\"#sdev_state\">sdev_state</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sdev_data\">sdev_data</a>[0];", 
"} <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#aligned\">aligned</a>(sizeof(unsigned long))));", 
"", 
"struct <a class=\"id\" href=\"#scsi_dh_devlist\">scsi_dh_devlist</a> {", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#vendor\">vendor</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#model\">model</a>;", 
"};", 
"", 
"typedef void (*<a class=\"id\" href=\"#activate_complete\">activate_complete</a>)(void *, int);", 
"struct <a class=\"id\" href=\"#scsi_device_handler\">scsi_device_handler</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* Used by the infrastructure */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#list\">list</a>; <span class=\"comment\">/* list of scsi_device_handlers */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Filled by the hardware handler */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#module\">module</a>;", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#scsi_dh_devlist\">scsi_dh_devlist</a> *<a class=\"id\" href=\"#devlist\">devlist</a>;", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#check_sense\">check_sense</a>)(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *, struct <a class=\"id\" href=\"#scsi_sense_hdr\">scsi_sense_hdr</a> *);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#attach\">attach</a>)(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#detach\">detach</a>)(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#activate\">activate</a>)(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *, <a class=\"id\" href=\"#activate_complete\">activate_complete</a>, void *);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#prep_fn\">prep_fn</a>)(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *, struct <a class=\"id\" href=\"#request\">request</a> *);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#set_params\">set_params</a>)(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *, const char *);", 
"};", 
"", 
"struct <a class=\"id\" href=\"#scsi_dh_data\">scsi_dh_data</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_device_handler\">scsi_device_handler</a> *<a class=\"id\" href=\"#scsi_dh\">scsi_dh</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kref\">kref</a> <a class=\"id\" href=\"#kref\">kref</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buf\">buf</a>[0];", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#to_scsi_device\">to_scsi_device</a>(<a class=\"id\" href=\"#d\">d</a>)<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#d\">d</a>, struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a>, <a class=\"id\" href=\"#sdev_gendev\">sdev_gendev</a>)", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#class_to_sdev\">class_to_sdev</a>(<a class=\"id\" href=\"#d\">d</a>)<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#d\">d</a>, struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a>, <a class=\"id\" href=\"#sdev_dev\">sdev_dev</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#transport_class_to_sdev\">transport_class_to_sdev</a>(<a class=\"id\" href=\"#class_dev\">class_dev</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#to_scsi_device\">to_scsi_device</a>(<a class=\"id\" href=\"#class_dev\">class_dev</a>-><a class=\"id\" href=\"#parent\">parent</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#sdev_printk\">sdev_printk</a>(<a class=\"id\" href=\"#prefix\">prefix</a>, <a class=\"id\" href=\"#sdev\">sdev</a>, <a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#a\">a</a>...)<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_printk\">dev_printk</a>(<a class=\"id\" href=\"#prefix\">prefix</a>, &amp;(<a class=\"id\" href=\"#sdev\">sdev</a>)-><a class=\"id\" href=\"#sdev_gendev\">sdev_gendev</a>, <a class=\"id\" href=\"#fmt\">fmt</a>, ##<a class=\"id\" href=\"#a\">a</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#scmd_printk\">scmd_printk</a>(<a class=\"id\" href=\"#prefix\">prefix</a>, <a class=\"id\" href=\"#scmd\">scmd</a>, <a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#a\">a</a>...)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"        (<a class=\"id\" href=\"#scmd\">scmd</a>)-><a class=\"id\" href=\"#request\">request</a>-><a class=\"id\" href=\"#rq_disk\">rq_disk</a> ?<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sdev_printk\">sdev_printk</a>(<a class=\"id\" href=\"#prefix\">prefix</a>, (<a class=\"id\" href=\"#scmd\">scmd</a>)-><a class=\"id\" href=\"#device\">device</a>, \"[%s] \" <a class=\"id\" href=\"#fmt\">fmt</a>,<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#scmd\">scmd</a>)-><a class=\"id\" href=\"#request\">request</a>-><a class=\"id\" href=\"#rq_disk\">rq_disk</a>-><a class=\"id\" href=\"#disk_name\">disk_name</a>, ##<a class=\"id\" href=\"#a\">a</a>) :<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sdev_printk\">sdev_printk</a>(<a class=\"id\" href=\"#prefix\">prefix</a>, (<a class=\"id\" href=\"#scmd\">scmd</a>)-><a class=\"id\" href=\"#device\">device</a>, <a class=\"id\" href=\"#fmt\">fmt</a>, ##<a class=\"id\" href=\"#a\">a</a>)", 
"", 
"enum <a class=\"id\" href=\"#scsi_target_state\">scsi_target_state</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#STARGET_CREATED\">STARGET_CREATED</a> = 1,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#STARGET_RUNNING\">STARGET_RUNNING</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#STARGET_DEL\">STARGET_DEL</a>,", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * scsi_target: representation of a scsi target, for now, this is only</span>", 
"<span class=\"comment\"> * used for single_lun devices. If no one has active IO to the target,</span>", 
"<span class=\"comment\"> * starget_sdev_user is NULL, else it points to the active sdev.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#scsi_target\">scsi_target</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a><span class=\"ts\"/>*<a class=\"id\" href=\"#starget_sdev_user\">starget_sdev_user</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#siblings\">siblings</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#devices\">devices</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reap_ref\">reap_ref</a>; <span class=\"comment\">/* protected by the host lock */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#channel\">channel</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a>; <span class=\"comment\">/* target id ... replace</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     * scsi_device.id eventually */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#create\">create</a>:1; <span class=\"comment\">/* signal that it needs to be added */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#single_lun\">single_lun</a>:1;<span class=\"ts\"/><span class=\"comment\">/* Indicates we should only</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * allow I/O to one of the luns</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * for the device at a time. */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pdt_1f_for_no_lun\">pdt_1f_for_no_lun</a>;<span class=\"ts\"/><span class=\"comment\">/* PDT = 0x1f */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* means no lun present */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* commands actually active on LLD. protected by host lock. */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#target_busy\">target_busy</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * LLDs should set this in the slave_alloc host template callout.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If set to zero then there is not limit.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#can_queue\">can_queue</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#target_blocked\">target_blocked</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_target_blocked\">max_target_blocked</a>;", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SCSI_DEFAULT_TARGET_BLOCKED\">SCSI_DEFAULT_TARGET_BLOCKED</a><span class=\"ts\"/>3", 
"", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsi_level\">scsi_level</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#execute_work\">execute_work</a><span class=\"ts\"/><a class=\"id\" href=\"#ew\">ew</a>;", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#scsi_target_state\">scsi_target_state</a><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>;", 
"<span class=\"ts\"/>void <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#hostdata\">hostdata</a>; <span class=\"comment\">/* available to low-level driver */</span>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#starget_data\">starget_data</a>[0]; <span class=\"comment\">/* for the transport */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* starget_data must be the last element!!!! */</span>", 
"} <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#aligned\">aligned</a>(sizeof(unsigned long))));", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#to_scsi_target\">to_scsi_target</a>(<a class=\"id\" href=\"#d\">d</a>)<span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#d\">d</a>, struct <a class=\"id\" href=\"#scsi_target\">scsi_target</a>, <a class=\"id\" href=\"#dev\">dev</a>)", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#scsi_target\">scsi_target</a> *<a class=\"id\" href=\"#scsi_target\">scsi_target</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#to_scsi_target\">to_scsi_target</a>(<a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#sdev_gendev\">sdev_gendev</a>.<a class=\"id\" href=\"#parent\">parent</a>);", 
"}", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#transport_class_to_starget\">transport_class_to_starget</a>(<a class=\"id\" href=\"#class_dev\">class_dev</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#to_scsi_target\">to_scsi_target</a>(<a class=\"id\" href=\"#class_dev\">class_dev</a>-><a class=\"id\" href=\"#parent\">parent</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#starget_printk\">starget_printk</a>(<a class=\"id\" href=\"#prefix\">prefix</a>, <a class=\"id\" href=\"#starget\">starget</a>, <a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#a\">a</a>...)<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_printk\">dev_printk</a>(<a class=\"id\" href=\"#prefix\">prefix</a>, &amp;(<a class=\"id\" href=\"#starget\">starget</a>)-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#fmt\">fmt</a>, ##<a class=\"id\" href=\"#a\">a</a>)", 
"", 
"extern struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#__scsi_add_device\">__scsi_add_device</a>(struct <a class=\"id\" href=\"#Scsi_Host\">Scsi_Host</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uint\">uint</a>, <a class=\"id\" href=\"#uint\">uint</a>, <a class=\"id\" href=\"#uint\">uint</a>, void *<a class=\"id\" href=\"#hostdata\">hostdata</a>);", 
"extern int <a class=\"id\" href=\"#scsi_add_device\">scsi_add_device</a>(struct <a class=\"id\" href=\"#Scsi_Host\">Scsi_Host</a> *<a class=\"id\" href=\"#host\">host</a>, <a class=\"id\" href=\"#uint\">uint</a> <a class=\"id\" href=\"#channel\">channel</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#uint\">uint</a> <a class=\"id\" href=\"#target\">target</a>, <a class=\"id\" href=\"#uint\">uint</a> <a class=\"id\" href=\"#lun\">lun</a>);", 
"extern int <a class=\"id\" href=\"#scsi_register_device_handler\">scsi_register_device_handler</a>(struct <a class=\"id\" href=\"#scsi_device_handler\">scsi_device_handler</a> *<a class=\"id\" href=\"#scsi_dh\">scsi_dh</a>);", 
"extern void <a class=\"id\" href=\"#scsi_remove_device\">scsi_remove_device</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *);", 
"extern int <a class=\"id\" href=\"#scsi_unregister_device_handler\">scsi_unregister_device_handler</a>(struct <a class=\"id\" href=\"#scsi_device_handler\">scsi_device_handler</a> *<a class=\"id\" href=\"#scsi_dh\">scsi_dh</a>);", 
"", 
"extern int <a class=\"id\" href=\"#scsi_device_get\">scsi_device_get</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *);", 
"extern void <a class=\"id\" href=\"#scsi_device_put\">scsi_device_put</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *);", 
"extern struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#scsi_device_lookup\">scsi_device_lookup</a>(struct <a class=\"id\" href=\"#Scsi_Host\">Scsi_Host</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#uint\">uint</a>, <a class=\"id\" href=\"#uint\">uint</a>, <a class=\"id\" href=\"#uint\">uint</a>);", 
"extern struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#__scsi_device_lookup\">__scsi_device_lookup</a>(struct <a class=\"id\" href=\"#Scsi_Host\">Scsi_Host</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uint\">uint</a>, <a class=\"id\" href=\"#uint\">uint</a>, <a class=\"id\" href=\"#uint\">uint</a>);", 
"extern struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#scsi_device_lookup_by_target\">scsi_device_lookup_by_target</a>(struct <a class=\"id\" href=\"#scsi_target\">scsi_target</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uint\">uint</a>);", 
"extern struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#__scsi_device_lookup_by_target\">__scsi_device_lookup_by_target</a>(struct <a class=\"id\" href=\"#scsi_target\">scsi_target</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#uint\">uint</a>);", 
"extern void <a class=\"id\" href=\"#starget_for_each_device\">starget_for_each_device</a>(struct <a class=\"id\" href=\"#scsi_target\">scsi_target</a> *, void *,", 
"<span class=\"ts\"/><span class=\"ts\"/>     void (*<a class=\"id\" href=\"#fn\">fn</a>)(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *, void *));", 
"extern void <a class=\"id\" href=\"#__starget_for_each_device\">__starget_for_each_device</a>(struct <a class=\"id\" href=\"#scsi_target\">scsi_target</a> *, void *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      void (*<a class=\"id\" href=\"#fn\">fn</a>)(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> void *));", 
"", 
"<span class=\"comment\">/* only exposed to implement shost_for_each_device */</span>", 
"extern struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#__scsi_iterate_devices\">__scsi_iterate_devices</a>(struct <a class=\"id\" href=\"#Scsi_Host\">Scsi_Host</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * shost_for_each_device - iterate over all devices of a host</span>", 
"<span class=\"comment\"> * @sdev: the &amp;struct scsi_device to use as a cursor</span>", 
"<span class=\"comment\"> * @shost: the &amp;struct scsi_host to iterate over</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Iterator that returns each device attached to @shost.  This loop</span>", 
"<span class=\"comment\"> * takes a reference on each device and releases it at the end.  If</span>", 
"<span class=\"comment\"> * you break out of the loop, you must call scsi_device_put(sdev).</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#shost_for_each_device\">shost_for_each_device</a>(<a class=\"id\" href=\"#sdev\">sdev</a>, <a class=\"id\" href=\"#shost\">shost</a>) \\", 
"<span class=\"ts\"/>for ((<a class=\"id\" href=\"#sdev\">sdev</a>) = <a class=\"id\" href=\"#__scsi_iterate_devices\">__scsi_iterate_devices</a>((<a class=\"id\" href=\"#shost\">shost</a>), <a class=\"id\" href=\"#NULL\">NULL</a>); \\", 
"<span class=\"ts\"/>     (<a class=\"id\" href=\"#sdev\">sdev</a>); \\", 
"<span class=\"ts\"/>     (<a class=\"id\" href=\"#sdev\">sdev</a>) = <a class=\"id\" href=\"#__scsi_iterate_devices\">__scsi_iterate_devices</a>((<a class=\"id\" href=\"#shost\">shost</a>), (<a class=\"id\" href=\"#sdev\">sdev</a>)))", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * __shost_for_each_device - iterate over all devices of a host (UNLOCKED)</span>", 
"<span class=\"comment\"> * @sdev: the &amp;struct scsi_device to use as a cursor</span>", 
"<span class=\"comment\"> * @shost: the &amp;struct scsi_host to iterate over</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Iterator that returns each device attached to @shost.  It does _not_</span>", 
"<span class=\"comment\"> * take a reference on the scsi_device, so the whole loop must be</span>", 
"<span class=\"comment\"> * protected by shost-&gt;host_lock.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Note: The only reason to use this is because you need to access the</span>", 
"<span class=\"comment\"> * device list in interrupt context.  Otherwise you really want to use</span>", 
"<span class=\"comment\"> * shost_for_each_device instead.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__shost_for_each_device\">__shost_for_each_device</a>(<a class=\"id\" href=\"#sdev\">sdev</a>, <a class=\"id\" href=\"#shost\">shost</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>((<a class=\"id\" href=\"#sdev\">sdev</a>), &amp;((<a class=\"id\" href=\"#shost\">shost</a>)-><a class=\"id\" href=\"#__devices\">__devices</a>), <a class=\"id\" href=\"#siblings\">siblings</a>)", 
"", 
"extern void <a class=\"id\" href=\"#scsi_adjust_queue_depth\">scsi_adjust_queue_depth</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *, int, int);", 
"extern int <a class=\"id\" href=\"#scsi_track_queue_full\">scsi_track_queue_full</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *, int);", 
"", 
"extern int <a class=\"id\" href=\"#scsi_set_medium_removal\">scsi_set_medium_removal</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *, char);", 
"", 
"extern int <a class=\"id\" href=\"#scsi_mode_sense\">scsi_mode_sense</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a>, int <a class=\"id\" href=\"#dbd\">dbd</a>, int <a class=\"id\" href=\"#modepage\">modepage</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned char *<a class=\"id\" href=\"#buffer\">buffer</a>, int <a class=\"id\" href=\"#len\">len</a>, int <a class=\"id\" href=\"#timeout\">timeout</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   int <a class=\"id\" href=\"#retries\">retries</a>, struct <a class=\"id\" href=\"#scsi_mode_data\">scsi_mode_data</a> *<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#scsi_sense_hdr\">scsi_sense_hdr</a> *);", 
"extern int <a class=\"id\" href=\"#scsi_mode_select\">scsi_mode_select</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a>, int <a class=\"id\" href=\"#pf\">pf</a>, int <a class=\"id\" href=\"#sp\">sp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    int <a class=\"id\" href=\"#modepage\">modepage</a>, unsigned char *<a class=\"id\" href=\"#buffer\">buffer</a>, int <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    int <a class=\"id\" href=\"#timeout\">timeout</a>, int <a class=\"id\" href=\"#retries\">retries</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#scsi_mode_data\">scsi_mode_data</a> *<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#scsi_sense_hdr\">scsi_sense_hdr</a> *);", 
"extern int <a class=\"id\" href=\"#scsi_test_unit_ready\">scsi_test_unit_ready</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a>, int <a class=\"id\" href=\"#timeout\">timeout</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#retries\">retries</a>, struct <a class=\"id\" href=\"#scsi_sense_hdr\">scsi_sense_hdr</a> *<a class=\"id\" href=\"#sshdr\">sshdr</a>);", 
"extern int <a class=\"id\" href=\"#scsi_get_vpd_page\">scsi_get_vpd_page</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#page\">page</a>, unsigned char *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     int <a class=\"id\" href=\"#buf_len\">buf_len</a>);", 
"extern int <a class=\"id\" href=\"#scsi_device_set_state\">scsi_device_set_state</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> enum <a class=\"id\" href=\"#scsi_device_state\">scsi_device_state</a> <a class=\"id\" href=\"#state\">state</a>);", 
"extern struct <a class=\"id\" href=\"#scsi_event\">scsi_event</a> *<a class=\"id\" href=\"#sdev_evt_alloc\">sdev_evt_alloc</a>(enum <a class=\"id\" href=\"#scsi_device_event\">scsi_device_event</a> <a class=\"id\" href=\"#evt_type\">evt_type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfpflags\">gfpflags</a>);", 
"extern void <a class=\"id\" href=\"#sdev_evt_send\">sdev_evt_send</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a>, struct <a class=\"id\" href=\"#scsi_event\">scsi_event</a> *<a class=\"id\" href=\"#evt\">evt</a>);", 
"extern void <a class=\"id\" href=\"#sdev_evt_send_simple\">sdev_evt_send_simple</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  enum <a class=\"id\" href=\"#scsi_device_event\">scsi_device_event</a> <a class=\"id\" href=\"#evt_type\">evt_type</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfpflags\">gfpflags</a>);", 
"extern int <a class=\"id\" href=\"#scsi_device_quiesce\">scsi_device_quiesce</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a>);", 
"extern void <a class=\"id\" href=\"#scsi_device_resume\">scsi_device_resume</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a>);", 
"extern void <a class=\"id\" href=\"#scsi_target_quiesce\">scsi_target_quiesce</a>(struct <a class=\"id\" href=\"#scsi_target\">scsi_target</a> *);", 
"extern void <a class=\"id\" href=\"#scsi_target_resume\">scsi_target_resume</a>(struct <a class=\"id\" href=\"#scsi_target\">scsi_target</a> *);", 
"extern void <a class=\"id\" href=\"#scsi_scan_target\">scsi_scan_target</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#parent\">parent</a>, unsigned int <a class=\"id\" href=\"#channel\">channel</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned int <a class=\"id\" href=\"#id\">id</a>, unsigned int <a class=\"id\" href=\"#lun\">lun</a>, int <a class=\"id\" href=\"#rescan\">rescan</a>);", 
"extern void <a class=\"id\" href=\"#scsi_target_reap\">scsi_target_reap</a>(struct <a class=\"id\" href=\"#scsi_target\">scsi_target</a> *);", 
"extern void <a class=\"id\" href=\"#scsi_target_block\">scsi_target_block</a>(struct <a class=\"id\" href=\"#device\">device</a> *);", 
"extern void <a class=\"id\" href=\"#scsi_target_unblock\">scsi_target_unblock</a>(struct <a class=\"id\" href=\"#device\">device</a> *);", 
"extern void <a class=\"id\" href=\"#scsi_remove_target\">scsi_remove_target</a>(struct <a class=\"id\" href=\"#device\">device</a> *);", 
"extern void <a class=\"id\" href=\"#int_to_scsilun\">int_to_scsilun</a>(unsigned int, struct <a class=\"id\" href=\"#scsi_lun\">scsi_lun</a> *);", 
"extern int <a class=\"id\" href=\"#scsilun_to_int\">scsilun_to_int</a>(struct <a class=\"id\" href=\"#scsi_lun\">scsi_lun</a> *);", 
"extern const char *<a class=\"id\" href=\"#scsi_device_state_name\">scsi_device_state_name</a>(enum <a class=\"id\" href=\"#scsi_device_state\">scsi_device_state</a>);", 
"extern int <a class=\"id\" href=\"#scsi_is_sdev_device\">scsi_is_sdev_device</a>(const struct <a class=\"id\" href=\"#device\">device</a> *);", 
"extern int <a class=\"id\" href=\"#scsi_is_target_device\">scsi_is_target_device</a>(const struct <a class=\"id\" href=\"#device\">device</a> *);", 
"extern int <a class=\"id\" href=\"#scsi_execute\">scsi_execute</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a>, const unsigned char *<a class=\"id\" href=\"#cmd\">cmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#data_direction\">data_direction</a>, void *<a class=\"id\" href=\"#buffer\">buffer</a>, unsigned <a class=\"id\" href=\"#bufflen\">bufflen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned char *<a class=\"id\" href=\"#sense\">sense</a>, int <a class=\"id\" href=\"#timeout\">timeout</a>, int <a class=\"id\" href=\"#retries\">retries</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#flag\">flag</a>, int *<a class=\"id\" href=\"#resid\">resid</a>);", 
"extern int <a class=\"id\" href=\"#scsi_execute_req\">scsi_execute_req</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a>, const unsigned char *<a class=\"id\" href=\"#cmd\">cmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    int <a class=\"id\" href=\"#data_direction\">data_direction</a>, void *<a class=\"id\" href=\"#buffer\">buffer</a>, unsigned <a class=\"id\" href=\"#bufflen\">bufflen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#scsi_sense_hdr\">scsi_sense_hdr</a> *, int <a class=\"id\" href=\"#timeout\">timeout</a>, int <a class=\"id\" href=\"#retries\">retries</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    int *<a class=\"id\" href=\"#resid\">resid</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PM_RUNTIME\">CONFIG_PM_RUNTIME</a>", 
"extern int <a class=\"id\" href=\"#scsi_autopm_get_device\">scsi_autopm_get_device</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *);", 
"extern void <a class=\"id\" href=\"#scsi_autopm_put_device\">scsi_autopm_put_device</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#scsi_autopm_get_device\">scsi_autopm_get_device</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#d\">d</a>) { return 0; }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#scsi_autopm_put_device\">scsi_autopm_put_device</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#d\">d</a>) {}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_PM_RUNTIME */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#__must_check\">__must_check</a> <a class=\"id\" href=\"#scsi_device_reprobe\">scsi_device_reprobe</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#device_reprobe\">device_reprobe</a>(&amp;<a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#sdev_gendev\">sdev_gendev</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#sdev_channel\">sdev_channel</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#channel\">channel</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#sdev_id\">sdev_id</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#id\">id</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#scmd_id\">scmd_id</a>(<a class=\"id\" href=\"#scmd\">scmd</a>) <a class=\"id\" href=\"#sdev_id\">sdev_id</a>((<a class=\"id\" href=\"#scmd\">scmd</a>)-><a class=\"id\" href=\"#device\">device</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#scmd_channel\">scmd_channel</a>(<a class=\"id\" href=\"#scmd\">scmd</a>) <a class=\"id\" href=\"#sdev_channel\">sdev_channel</a>((<a class=\"id\" href=\"#scmd\">scmd</a>)-><a class=\"id\" href=\"#device\">device</a>)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * checks for positions of the SCSI state machine</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#scsi_device_online\">scsi_device_online</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#sdev_state\">sdev_state</a> != <a class=\"id\" href=\"#SDEV_OFFLINE\">SDEV_OFFLINE</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#sdev_state\">sdev_state</a> != <a class=\"id\" href=\"#SDEV_DEL\">SDEV_DEL</a>);", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#scsi_device_blocked\">scsi_device_blocked</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#sdev_state\">sdev_state</a> == <a class=\"id\" href=\"#SDEV_BLOCK\">SDEV_BLOCK</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#sdev_state\">sdev_state</a> == <a class=\"id\" href=\"#SDEV_CREATED_BLOCK\">SDEV_CREATED_BLOCK</a>;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#scsi_device_created\">scsi_device_created</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#sdev_state\">sdev_state</a> == <a class=\"id\" href=\"#SDEV_CREATED\">SDEV_CREATED</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#sdev_state\">sdev_state</a> == <a class=\"id\" href=\"#SDEV_CREATED_BLOCK\">SDEV_CREATED_BLOCK</a>;", 
"}", 
"", 
"<span class=\"comment\">/* accessor functions for the SCSI parameters */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#scsi_device_sync\">scsi_device_sync</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#sdtr\">sdtr</a>;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#scsi_device_wide\">scsi_device_wide</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#wdtr\">wdtr</a>;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#scsi_device_dt\">scsi_device_dt</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#ppr\">ppr</a>;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#scsi_device_dt_only\">scsi_device_dt_only</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#inquiry_len\">inquiry_len</a> &lt; 57)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#inquiry\">inquiry</a>[56] &amp; 0x0c) == 0x04;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#scsi_device_ius\">scsi_device_ius</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#inquiry_len\">inquiry_len</a> &lt; 57)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#inquiry\">inquiry</a>[56] &amp; 0x01;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#scsi_device_qas\">scsi_device_qas</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#inquiry_len\">inquiry_len</a> &lt; 57)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#inquiry\">inquiry</a>[56] &amp; 0x02;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#scsi_device_enclosure\">scsi_device_enclosure</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#inquiry\">inquiry</a>[6] &amp; (1<<6);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#scsi_device_protection\">scsi_device_protection</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#scsi_level\">scsi_level</a> &gt; <a class=\"id\" href=\"#SCSI_2\">SCSI_2</a> && <a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#inquiry\">inquiry</a>[5] &amp; (1<<0);", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MODULE_ALIAS_SCSI_DEVICE\">MODULE_ALIAS_SCSI_DEVICE</a>(<a class=\"id\" href=\"#type\">type</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MODULE_ALIAS\">MODULE_ALIAS</a>(\"scsi:t-\" <a class=\"id\" href=\"#__stringify\">__stringify</a>(<a class=\"id\" href=\"#type\">type</a>) \"*\")", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SCSI_DEVICE_MODALIAS_FMT\">SCSI_DEVICE_MODALIAS_FMT</a> \"scsi:t-0x%02x\"", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _SCSI_SCSI_DEVICE_H */</span>", 
];
xr_frag_insert('l/4f/b076dff4b5b2e28002a5bd55d2849f6e5becdd.xr', __xr_tmp);
