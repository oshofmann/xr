var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  scsi_error.c Copyright (C) 1997 Eric Youngdale</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  SCSI error/timeout handling</span>", 
"<span class=\"comment\"> *      Initial versions: Eric Youngdale.  Based upon conversations with</span>", 
"<span class=\"comment\"> *                        Leonard Zubkoff and David Miller at Linux Expo, </span>", 
"<span class=\"comment\"> *                        ideas originating from all over the place.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Restructured scsi_unjam_host and associated functions.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>September 04, 2002 Mike Anderson (andmike@us.ibm.com)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Forward port of Russell King's (rmk@arm.linux.org.uk) changes and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>minor  cleanups.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>September 30, 2002 Mike Anderson (andmike@us.ibm.com)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#gfp\">gfp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#freezer\">freezer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kthread\">kthread</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blkdev\">blkdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi\">scsi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_dbg\">scsi_dbg</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_device\">scsi_device</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_eh\">scsi_eh</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_transport\">scsi_transport</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_host\">scsi_host</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_ioctl\">scsi_ioctl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"scsi_priv.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"scsi_logging.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"scsi_transport_api.h\"", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#trace\">trace</a>/<a class=\"id\" href=\"#events\">events</a>/<a class=\"id\" href=\"#scsi\">scsi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SENSE_TIMEOUT\">SENSE_TIMEOUT</a><span class=\"ts\"/><span class=\"ts\"/>(10*<a class=\"id\" href=\"#HZ\">HZ</a>)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * These should *probably* be handled by the host itself.</span>", 
"<span class=\"comment\"> * Since it is allowed to sleep, it probably should.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BUS_RESET_SETTLE_TIME\">BUS_RESET_SETTLE_TIME</a>   (10)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HOST_RESET_SETTLE_TIME\">HOST_RESET_SETTLE_TIME</a>  (10)", 
"", 
"<span class=\"comment\">/* called with shost-&gt;host_lock held */</span>", 
"void <a class=\"id\" href=\"#scsi_eh_wakeup\">scsi_eh_wakeup</a>(struct <a class=\"id\" href=\"#Scsi_Host\">Scsi_Host</a> *<a class=\"id\" href=\"#shost\">shost</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#host_busy\">host_busy</a> == <a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#host_failed\">host_failed</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_scsi_eh_wakeup\">trace_scsi_eh_wakeup</a>(<a class=\"id\" href=\"#shost\">shost</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_process\">wake_up_process</a>(<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#ehandler\">ehandler</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_ERROR_RECOVERY\">SCSI_LOG_ERROR_RECOVERY</a>(5,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"Waking error handler thread\\n\"));", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * scsi_schedule_eh - schedule EH for SCSI host</span>", 
"<span class=\"comment\"> * @shost:<span class=\"ts\"/>SCSI host to invoke error handling on.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Schedule SCSI EH without scmd.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#scsi_schedule_eh\">scsi_schedule_eh</a>(struct <a class=\"id\" href=\"#Scsi_Host\">Scsi_Host</a> *<a class=\"id\" href=\"#shost\">shost</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#host_lock\">host_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#scsi_host_set_state\">scsi_host_set_state</a>(<a class=\"id\" href=\"#shost\">shost</a>, <a class=\"id\" href=\"#SHOST_RECOVERY\">SHOST_RECOVERY</a>) == 0 ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#scsi_host_set_state\">scsi_host_set_state</a>(<a class=\"id\" href=\"#shost\">shost</a>, <a class=\"id\" href=\"#SHOST_CANCEL_RECOVERY\">SHOST_CANCEL_RECOVERY</a>) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#host_eh_scheduled\">host_eh_scheduled</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsi_eh_wakeup\">scsi_eh_wakeup</a>(<a class=\"id\" href=\"#shost\">shost</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#host_lock\">host_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#scsi_schedule_eh\">scsi_schedule_eh</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * scsi_eh_scmd_add - add scsi cmd to error handling.</span>", 
"<span class=\"comment\"> * @scmd:<span class=\"ts\"/>scmd to run eh on.</span>", 
"<span class=\"comment\"> * @eh_flag:<span class=\"ts\"/>optional SCSI_EH flag.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Return value:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>0 on failure.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#scsi_eh_scmd_add\">scsi_eh_scmd_add</a>(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#scmd\">scmd</a>, int <a class=\"id\" href=\"#eh_flag\">eh_flag</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#Scsi_Host\">Scsi_Host</a> *<a class=\"id\" href=\"#shost\">shost</a> = <a class=\"id\" href=\"#scmd\">scmd</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#host\">host</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#ehandler\">ehandler</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#host_lock\">host_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#scsi_host_set_state\">scsi_host_set_state</a>(<a class=\"id\" href=\"#shost\">shost</a>, <a class=\"id\" href=\"#SHOST_RECOVERY\">SHOST_RECOVERY</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#scsi_host_set_state\">scsi_host_set_state</a>(<a class=\"id\" href=\"#shost\">shost</a>, <a class=\"id\" href=\"#SHOST_CANCEL_RECOVERY\">SHOST_CANCEL_RECOVERY</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scmd\">scmd</a>-><a class=\"id\" href=\"#eh_eflags\">eh_eflags</a> |= <a class=\"id\" href=\"#eh_flag\">eh_flag</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#scmd\">scmd</a>-><a class=\"id\" href=\"#eh_entry\">eh_entry</a>, &amp;<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#eh_cmd_q\">eh_cmd_q</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#host_failed\">host_failed</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scsi_eh_wakeup\">scsi_eh_wakeup</a>(<a class=\"id\" href=\"#shost\">shost</a>);", 
" <a class=\"id\" href=\"#out_unlock\">out_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#host_lock\">host_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * scsi_times_out - Timeout function for normal scsi commands.</span>", 
"<span class=\"comment\"> * @req:<span class=\"ts\"/>request that is timing out.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Notes:</span>", 
"<span class=\"comment\"> *     We do not need to lock this.  There is the potential for a race</span>", 
"<span class=\"comment\"> *     only in that the normal completion handling might run, but if the</span>", 
"<span class=\"comment\"> *     normal completion function determines that the timer has already</span>", 
"<span class=\"comment\"> *     fired, then it mustn't do anything.</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#blk_eh_timer_return\">blk_eh_timer_return</a> <a class=\"id\" href=\"#scsi_times_out\">scsi_times_out</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#req\">req</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#scmd\">scmd</a> = <a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#special\">special</a>;", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#blk_eh_timer_return\">blk_eh_timer_return</a> <a class=\"id\" href=\"#rtn\">rtn</a> = <a class=\"id\" href=\"#BLK_EH_NOT_HANDLED\">BLK_EH_NOT_HANDLED</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_scsi_dispatch_cmd_timeout\">trace_scsi_dispatch_cmd_timeout</a>(<a class=\"id\" href=\"#scmd\">scmd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scsi_log_completion\">scsi_log_completion</a>(<a class=\"id\" href=\"#scmd\">scmd</a>, <a class=\"id\" href=\"#TIMEOUT_ERROR\">TIMEOUT_ERROR</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#scmd\">scmd</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#transportt\">transportt</a>-><a class=\"id\" href=\"#eh_timed_out\">eh_timed_out</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtn\">rtn</a> = <a class=\"id\" href=\"#scmd\">scmd</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#transportt\">transportt</a>-><a class=\"id\" href=\"#eh_timed_out\">eh_timed_out</a>(<a class=\"id\" href=\"#scmd\">scmd</a>);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#scmd\">scmd</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#hostt\">hostt</a>-><a class=\"id\" href=\"#eh_timed_out\">eh_timed_out</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtn\">rtn</a> = <a class=\"id\" href=\"#scmd\">scmd</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#hostt\">hostt</a>-><a class=\"id\" href=\"#eh_timed_out\">eh_timed_out</a>(<a class=\"id\" href=\"#scmd\">scmd</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#rtn\">rtn</a> == <a class=\"id\" href=\"#BLK_EH_NOT_HANDLED\">BLK_EH_NOT_HANDLED</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>     !<a class=\"id\" href=\"#scsi_eh_scmd_add\">scsi_eh_scmd_add</a>(<a class=\"id\" href=\"#scmd\">scmd</a>, <a class=\"id\" href=\"#SCSI_EH_CANCEL_CMD\">SCSI_EH_CANCEL_CMD</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scmd\">scmd</a>-><a class=\"id\" href=\"#result\">result</a> |= <a class=\"id\" href=\"#DID_TIME_OUT\">DID_TIME_OUT</a> << 16;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtn\">rtn</a> = <a class=\"id\" href=\"#BLK_EH_HANDLED\">BLK_EH_HANDLED</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rtn\">rtn</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * scsi_block_when_processing_errors - Prevent cmds from being queued.</span>", 
"<span class=\"comment\"> * @sdev:<span class=\"ts\"/>Device on which we are performing recovery.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> *     We block until the host is out of error recovery, and then check to</span>", 
"<span class=\"comment\"> *     see whether the host or the device is offline.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Return value:</span>", 
"<span class=\"comment\"> *     0 when dev was taken offline by error recovery. 1 OK to proceed.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#scsi_block_when_processing_errors\">scsi_block_when_processing_errors</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#online\">online</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wait_event\">wait_event</a>(<a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#host_wait\">host_wait</a>, !<a class=\"id\" href=\"#scsi_host_in_recovery\">scsi_host_in_recovery</a>(<a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#host\">host</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#online\">online</a> = <a class=\"id\" href=\"#scsi_device_online\">scsi_device_online</a>(<a class=\"id\" href=\"#sdev\">sdev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_ERROR_RECOVERY\">SCSI_LOG_ERROR_RECOVERY</a>(5, <a class=\"id\" href=\"#printk\">printk</a>(\"%s: rtn: %d\\n\", <a class=\"id\" href=\"#__func__\">__func__</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#online\">online</a>));", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#online\">online</a>;", 
];
xr_frag_insert('l/4f/ca83ade9d81c8222092ee5da6d86742ab3e72b.xr', __xr_tmp);
