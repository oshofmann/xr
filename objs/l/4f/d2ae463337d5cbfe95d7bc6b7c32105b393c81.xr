var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_FUTEX_H\">_LINUX_FUTEX_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_FUTEX_H\">_LINUX_FUTEX_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#compiler\">compiler</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* Second argument to futex syscall */</span>", 
"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_WAIT\">FUTEX_WAIT</a><span class=\"ts\"/><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_WAKE\">FUTEX_WAKE</a><span class=\"ts\"/><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_FD\">FUTEX_FD</a><span class=\"ts\"/><span class=\"ts\"/>2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_REQUEUE\">FUTEX_REQUEUE</a><span class=\"ts\"/><span class=\"ts\"/>3", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_CMP_REQUEUE\">FUTEX_CMP_REQUEUE</a><span class=\"ts\"/>4", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_WAKE_OP\">FUTEX_WAKE_OP</a><span class=\"ts\"/><span class=\"ts\"/>5", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_LOCK_PI\">FUTEX_LOCK_PI</a><span class=\"ts\"/><span class=\"ts\"/>6", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_UNLOCK_PI\">FUTEX_UNLOCK_PI</a><span class=\"ts\"/><span class=\"ts\"/>7", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_TRYLOCK_PI\">FUTEX_TRYLOCK_PI</a><span class=\"ts\"/>8", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_WAIT_BITSET\">FUTEX_WAIT_BITSET</a><span class=\"ts\"/>9", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_WAKE_BITSET\">FUTEX_WAKE_BITSET</a><span class=\"ts\"/>10", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_WAIT_REQUEUE_PI\">FUTEX_WAIT_REQUEUE_PI</a><span class=\"ts\"/>11", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_CMP_REQUEUE_PI\">FUTEX_CMP_REQUEUE_PI</a><span class=\"ts\"/>12", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_PRIVATE_FLAG\">FUTEX_PRIVATE_FLAG</a><span class=\"ts\"/>128", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_CLOCK_REALTIME\">FUTEX_CLOCK_REALTIME</a><span class=\"ts\"/>256", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_CMD_MASK\">FUTEX_CMD_MASK</a><span class=\"ts\"/><span class=\"ts\"/>~(<a class=\"id\" href=\"#FUTEX_PRIVATE_FLAG\">FUTEX_PRIVATE_FLAG</a> | <a class=\"id\" href=\"#FUTEX_CLOCK_REALTIME\">FUTEX_CLOCK_REALTIME</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_WAIT_PRIVATE\">FUTEX_WAIT_PRIVATE</a><span class=\"ts\"/>(<a class=\"id\" href=\"#FUTEX_WAIT\">FUTEX_WAIT</a> | <a class=\"id\" href=\"#FUTEX_PRIVATE_FLAG\">FUTEX_PRIVATE_FLAG</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_WAKE_PRIVATE\">FUTEX_WAKE_PRIVATE</a><span class=\"ts\"/>(<a class=\"id\" href=\"#FUTEX_WAKE\">FUTEX_WAKE</a> | <a class=\"id\" href=\"#FUTEX_PRIVATE_FLAG\">FUTEX_PRIVATE_FLAG</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_REQUEUE_PRIVATE\">FUTEX_REQUEUE_PRIVATE</a><span class=\"ts\"/>(<a class=\"id\" href=\"#FUTEX_REQUEUE\">FUTEX_REQUEUE</a> | <a class=\"id\" href=\"#FUTEX_PRIVATE_FLAG\">FUTEX_PRIVATE_FLAG</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_CMP_REQUEUE_PRIVATE\">FUTEX_CMP_REQUEUE_PRIVATE</a> (<a class=\"id\" href=\"#FUTEX_CMP_REQUEUE\">FUTEX_CMP_REQUEUE</a> | <a class=\"id\" href=\"#FUTEX_PRIVATE_FLAG\">FUTEX_PRIVATE_FLAG</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_WAKE_OP_PRIVATE\">FUTEX_WAKE_OP_PRIVATE</a><span class=\"ts\"/>(<a class=\"id\" href=\"#FUTEX_WAKE_OP\">FUTEX_WAKE_OP</a> | <a class=\"id\" href=\"#FUTEX_PRIVATE_FLAG\">FUTEX_PRIVATE_FLAG</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_LOCK_PI_PRIVATE\">FUTEX_LOCK_PI_PRIVATE</a><span class=\"ts\"/>(<a class=\"id\" href=\"#FUTEX_LOCK_PI\">FUTEX_LOCK_PI</a> | <a class=\"id\" href=\"#FUTEX_PRIVATE_FLAG\">FUTEX_PRIVATE_FLAG</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_UNLOCK_PI_PRIVATE\">FUTEX_UNLOCK_PI_PRIVATE</a><span class=\"ts\"/>(<a class=\"id\" href=\"#FUTEX_UNLOCK_PI\">FUTEX_UNLOCK_PI</a> | <a class=\"id\" href=\"#FUTEX_PRIVATE_FLAG\">FUTEX_PRIVATE_FLAG</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_TRYLOCK_PI_PRIVATE\">FUTEX_TRYLOCK_PI_PRIVATE</a> (<a class=\"id\" href=\"#FUTEX_TRYLOCK_PI\">FUTEX_TRYLOCK_PI</a> | <a class=\"id\" href=\"#FUTEX_PRIVATE_FLAG\">FUTEX_PRIVATE_FLAG</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_WAIT_BITSET_PRIVATE\">FUTEX_WAIT_BITSET_PRIVATE</a><span class=\"ts\"/>(<a class=\"id\" href=\"#FUTEX_WAIT_BITSET\">FUTEX_WAIT_BITSET</a> | <a class=\"id\" href=\"#FUTEX_PRIVATE_FLAG\">FUTEX_PRIVATE_FLAG</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_WAKE_BITSET_PRIVATE\">FUTEX_WAKE_BITSET_PRIVATE</a><span class=\"ts\"/>(<a class=\"id\" href=\"#FUTEX_WAKE_BITSET\">FUTEX_WAKE_BITSET</a> | <a class=\"id\" href=\"#FUTEX_PRIVATE_FLAG\">FUTEX_PRIVATE_FLAG</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_WAIT_REQUEUE_PI_PRIVATE\">FUTEX_WAIT_REQUEUE_PI_PRIVATE</a><span class=\"ts\"/>(<a class=\"id\" href=\"#FUTEX_WAIT_REQUEUE_PI\">FUTEX_WAIT_REQUEUE_PI</a> | \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#FUTEX_PRIVATE_FLAG\">FUTEX_PRIVATE_FLAG</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_CMP_REQUEUE_PI_PRIVATE\">FUTEX_CMP_REQUEUE_PI_PRIVATE</a><span class=\"ts\"/>(<a class=\"id\" href=\"#FUTEX_CMP_REQUEUE_PI\">FUTEX_CMP_REQUEUE_PI</a> | \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#FUTEX_PRIVATE_FLAG\">FUTEX_PRIVATE_FLAG</a>)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Support for robust futexes: the kernel cleans up held futexes at</span>", 
"<span class=\"comment\"> * thread exit time.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Per-lock list entry - embedded in user-space locks, somewhere close</span>", 
"<span class=\"comment\"> * to the futex field. (Note: user-space uses a double-linked list to</span>", 
"<span class=\"comment\"> * achieve O(1) list add and remove, but the kernel only needs to know</span>", 
"<span class=\"comment\"> * about the forward link)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NOTE: this structure is part of the syscall ABI, and must not be</span>", 
"<span class=\"comment\"> * changed.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#robust_list\">robust_list</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#robust_list\">robust_list</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#next\">next</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Per-thread list head:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NOTE: this structure is part of the syscall ABI, and must only be</span>", 
"<span class=\"comment\"> * changed if the change is first communicated with the glibc folks.</span>", 
"<span class=\"comment\"> * (When an incompatible change is done, we'll increase the structure</span>", 
"<span class=\"comment\"> *  size, which glibc will detect)</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#robust_list_head\">robust_list_head</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The head of the list. Points back to itself if empty:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#robust_list\">robust_list</a> <a class=\"id\" href=\"#list\">list</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This relative offset is set by user-space, it gives the kernel</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the relative position of the futex field to examine. This way</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we keep userspace flexible, to freely shape its data-structure,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * without hardcoding any particular offset into the kernel:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#futex_offset\">futex_offset</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The death of the thread may race with userspace setting</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * up a lock's links. So to handle this race, userspace first</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * sets this field to the address of the to-be-taken lock,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * then does the lock acquire, and then adds itself to the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * list, and then clears this field. Hence the kernel will</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * always have full knowledge of all locks that the thread</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * _might_ have taken. We check the owner TID in any case,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so only truly owned locks will be handled.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#robust_list\">robust_list</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#list_op_pending\">list_op_pending</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Are there any waiters for this robust futex:</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_WAITERS\">FUTEX_WAITERS</a><span class=\"ts\"/><span class=\"ts\"/>0x80000000", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The kernel signals via this bit that a thread holding a futex</span>", 
"<span class=\"comment\"> * has exited without unlocking the futex. The kernel also does</span>", 
"<span class=\"comment\"> * a FUTEX_WAKE on such futexes, after setting the bit, to wake</span>", 
"<span class=\"comment\"> * up any possible waiters:</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_OWNER_DIED\">FUTEX_OWNER_DIED</a><span class=\"ts\"/>0x40000000", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The rest of the robust-futex field is for the TID:</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_TID_MASK\">FUTEX_TID_MASK</a><span class=\"ts\"/><span class=\"ts\"/>0x3fffffff", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This limit protects against a deliberately circular list.</span>", 
"<span class=\"comment\"> * (Not worth introducing an rlimit for it)</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ROBUST_LIST_LIMIT\">ROBUST_LIST_LIMIT</a><span class=\"ts\"/>2048", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * bitset with all bits set for the FUTEX_xxx_BITSET OPs to request a</span>", 
"<span class=\"comment\"> * match of any bit.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_BITSET_MATCH_ANY\">FUTEX_BITSET_MATCH_ANY</a><span class=\"ts\"/>0xffffffff", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"struct <a class=\"id\" href=\"#inode\">inode</a>;", 
"struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a>;", 
"struct <a class=\"id\" href=\"#task_struct\">task_struct</a>;", 
"union <a class=\"id\" href=\"#ktime\">ktime</a>;", 
"", 
"long <a class=\"id\" href=\"#do_futex\">do_futex</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#uaddr\">uaddr</a>, int <a class=\"id\" href=\"#op\">op</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#val\">val</a>, union <a class=\"id\" href=\"#ktime\">ktime</a> *<a class=\"id\" href=\"#timeout\">timeout</a>,", 
"<span class=\"ts\"/>      <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#uaddr2\">uaddr2</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#val2\">val2</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#val3\">val3</a>);", 
"", 
"extern int", 
"<a class=\"id\" href=\"#handle_futex_death\">handle_futex_death</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#uaddr\">uaddr</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#curr\">curr</a>, int <a class=\"id\" href=\"#pi\">pi</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Futexes are matched on equal values of this key.</span>", 
"<span class=\"comment\"> * The key type depends on whether it's a shared or private mapping.</span>", 
"<span class=\"comment\"> * Don't rearrange members without looking at hash_futex().</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * offset is aligned to a multiple of sizeof(u32) (== 4) by definition.</span>", 
"<span class=\"comment\"> * We use the two low order bits of offset to tell what is the kind of key :</span>", 
"<span class=\"comment\"> *  00 : Private process futex (PTHREAD_PROCESS_PRIVATE)</span>", 
"<span class=\"comment\"> *       (no reference on an inode or mm)</span>", 
"<span class=\"comment\"> *  01 : Shared futex (PTHREAD_PROCESS_SHARED)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>mapped on a file (reference on the underlying inode)</span>", 
"<span class=\"comment\"> *  10 : Shared futex (PTHREAD_PROCESS_SHARED)</span>", 
"<span class=\"comment\"> *       (but private mapping on an mm, and reference taken on it)</span>", 
"<span class=\"comment\">*/</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUT_OFF_INODE\">FUT_OFF_INODE</a>    1 <span class=\"comment\">/* We set bit 0 if key has a reference on inode */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUT_OFF_MMSHARED\">FUT_OFF_MMSHARED</a> 2 <span class=\"comment\">/* We set bit 1 if key has a reference on mm */</span>", 
"", 
"union <a class=\"id\" href=\"#futex_key\">futex_key</a> {", 
"<span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#pgoff\">pgoff</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#shared\">shared</a>;", 
"<span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#address\">address</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#word\">word</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#ptr\">ptr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#both\">both</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_KEY_INIT\">FUTEX_KEY_INIT</a> (union <a class=\"id\" href=\"#futex_key\">futex_key</a>) { .<a class=\"id\" href=\"#both\">both</a> = { .<a class=\"id\" href=\"#ptr\">ptr</a> = <a class=\"id\" href=\"#NULL\">NULL</a> } }", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_FUTEX\">CONFIG_FUTEX</a>", 
"extern void <a class=\"id\" href=\"#exit_robust_list\">exit_robust_list</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#curr\">curr</a>);", 
"extern void <a class=\"id\" href=\"#exit_pi_state_list\">exit_pi_state_list</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#curr\">curr</a>);", 
"extern int <a class=\"id\" href=\"#futex_cmpxchg_enabled\">futex_cmpxchg_enabled</a>;", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#exit_robust_list\">exit_robust_list</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#curr\">curr</a>)", 
"{", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#exit_pi_state_list\">exit_pi_state_list</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#curr\">curr</a>)", 
"{", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __KERNEL__ */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_OP_SET\">FUTEX_OP_SET</a><span class=\"ts\"/><span class=\"ts\"/>0<span class=\"ts\"/><span class=\"comment\">/* *(int *)UADDR2 = OPARG; */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_OP_ADD\">FUTEX_OP_ADD</a><span class=\"ts\"/><span class=\"ts\"/>1<span class=\"ts\"/><span class=\"comment\">/* *(int *)UADDR2 += OPARG; */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_OP_OR\">FUTEX_OP_OR</a><span class=\"ts\"/><span class=\"ts\"/>2<span class=\"ts\"/><span class=\"comment\">/* *(int *)UADDR2 |= OPARG; */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_OP_ANDN\">FUTEX_OP_ANDN</a><span class=\"ts\"/><span class=\"ts\"/>3<span class=\"ts\"/><span class=\"comment\">/* *(int *)UADDR2 &amp;= ~OPARG; */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_OP_XOR\">FUTEX_OP_XOR</a><span class=\"ts\"/><span class=\"ts\"/>4<span class=\"ts\"/><span class=\"comment\">/* *(int *)UADDR2 ^= OPARG; */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_OP_OPARG_SHIFT\">FUTEX_OP_OPARG_SHIFT</a><span class=\"ts\"/>8<span class=\"ts\"/><span class=\"comment\">/* Use (1 &lt;&lt; OPARG) instead of OPARG.  */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_OP_CMP_EQ\">FUTEX_OP_CMP_EQ</a><span class=\"ts\"/><span class=\"ts\"/>0<span class=\"ts\"/><span class=\"comment\">/* if (oldval == CMPARG) wake */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_OP_CMP_NE\">FUTEX_OP_CMP_NE</a><span class=\"ts\"/><span class=\"ts\"/>1<span class=\"ts\"/><span class=\"comment\">/* if (oldval != CMPARG) wake */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_OP_CMP_LT\">FUTEX_OP_CMP_LT</a><span class=\"ts\"/><span class=\"ts\"/>2<span class=\"ts\"/><span class=\"comment\">/* if (oldval &lt; CMPARG) wake */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_OP_CMP_LE\">FUTEX_OP_CMP_LE</a><span class=\"ts\"/><span class=\"ts\"/>3<span class=\"ts\"/><span class=\"comment\">/* if (oldval &lt;= CMPARG) wake */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_OP_CMP_GT\">FUTEX_OP_CMP_GT</a><span class=\"ts\"/><span class=\"ts\"/>4<span class=\"ts\"/><span class=\"comment\">/* if (oldval &gt; CMPARG) wake */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_OP_CMP_GE\">FUTEX_OP_CMP_GE</a><span class=\"ts\"/><span class=\"ts\"/>5<span class=\"ts\"/><span class=\"comment\">/* if (oldval &gt;= CMPARG) wake */</span>", 
"", 
"<span class=\"comment\">/* FUTEX_WAKE_OP will perform atomically</span>", 
"<span class=\"comment\">   int oldval = *(int *)UADDR2;</span>", 
"<span class=\"comment\">   *(int *)UADDR2 = oldval OP OPARG;</span>", 
"<span class=\"comment\">   if (oldval CMP CMPARG)</span>", 
"<span class=\"comment\">     wake UADDR2;  */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FUTEX_OP\">FUTEX_OP</a>(<a class=\"id\" href=\"#op\">op</a>, <a class=\"id\" href=\"#oparg\">oparg</a>, <a class=\"id\" href=\"#cmp\">cmp</a>, <a class=\"id\" href=\"#cmparg\">cmparg</a>) \\", 
"  (((<a class=\"id\" href=\"#op\">op</a> &amp; 0xf) << 28) | ((<a class=\"id\" href=\"#cmp\">cmp</a> &amp; 0xf) << 24)<span class=\"ts\"/><span class=\"ts\"/>\\", 
"   | ((<a class=\"id\" href=\"#oparg\">oparg</a> &amp; 0xfff) << 12) | (<a class=\"id\" href=\"#cmparg\">cmparg</a> &amp; 0xfff))", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/4f/d2ae463337d5cbfe95d7bc6b7c32105b393c81.xr', __xr_tmp);
