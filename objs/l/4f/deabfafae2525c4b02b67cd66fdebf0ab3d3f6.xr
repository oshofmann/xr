var __xr_tmp = [
"<span class=\"comment\">/* linux/drivers/cdrom/cdrom.c</span>", 
"<span class=\"comment\">   Copyright (c) 1996, 1997 David A. van Leeuwen.</span>", 
"<span class=\"comment\">   Copyright (c) 1997, 1998 Erik Andersen &lt;andersee@debian.org&gt;</span>", 
"<span class=\"comment\">   Copyright (c) 1998, 1999 Jens Axboe &lt;axboe@image.dk&gt;</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   May be copied or modified under the terms of the GNU General Public</span>", 
"<span class=\"comment\">   License.  See linux/COPYING for more information.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   Uniform CD-ROM driver for Linux.</span>", 
"<span class=\"comment\">   See Documentation/cdrom/cdrom-standard.tex for usage information.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   The routines in the file provide a uniform interface between the</span>", 
"<span class=\"comment\">   software that uses CD-ROMs and the various low-level drivers that</span>", 
"<span class=\"comment\">   actually talk to the hardware. Suggestions are welcome.</span>", 
"<span class=\"comment\">   Patches that work are more welcome though.  ;-)</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\"> To Do List:</span>", 
"<span class=\"comment\"> ----------------------------------</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\"> -- Modify sysctl/proc interface. I plan on having one directory per</span>", 
"<span class=\"comment\"> drive, with entries for outputing general drive information, and sysctl</span>", 
"<span class=\"comment\"> based tunable parameters such as whether the tray should auto-close for</span>", 
"<span class=\"comment\"> that drive. Suggestions (or patches) for this welcome!</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\"> Revision History</span>", 
"<span class=\"comment\"> ----------------------------------</span>", 
"<span class=\"comment\"> 1.00  Date Unknown -- David van Leeuwen &lt;david@tm.tno.nl&gt;</span>", 
"<span class=\"comment\"> -- Initial version by David A. van Leeuwen. I don't have a detailed</span>", 
"<span class=\"comment\">  changelog for the 1.x series, David?</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">2.00  Dec  2, 1997 -- Erik Andersen &lt;andersee@debian.org&gt;</span>", 
"<span class=\"comment\">  -- New maintainer! As David A. van Leeuwen has been too busy to activly</span>", 
"<span class=\"comment\">  maintain and improve this driver, I am now carrying on the torch. If</span>", 
"<span class=\"comment\">  you have a problem with this driver, please feel free to contact me.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">  -- Added (rudimentary) sysctl interface. I realize this is really weak</span>", 
"<span class=\"comment\">  right now, and is _very_ badly implemented. It will be improved...</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">  -- Modified CDROM_DISC_STATUS so that it is now incorporated into</span>", 
"<span class=\"comment\">  the Uniform CD-ROM driver via the cdrom_count_tracks function.</span>", 
"<span class=\"comment\">  The cdrom_count_tracks function helps resolve some of the false</span>", 
"<span class=\"comment\">  assumptions of the CDROM_DISC_STATUS ioctl, and is also used to check</span>", 
"<span class=\"comment\">  for the correct media type when mounting or playing audio from a CD.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">  -- Remove the calls to verify_area and only use the copy_from_user and</span>", 
"<span class=\"comment\">  copy_to_user stuff, since these calls now provide their own memory</span>", 
"<span class=\"comment\">  checking with the 2.1.x kernels.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">  -- Major update to return codes so that errors from low-level drivers</span>", 
"<span class=\"comment\">  are passed on through (thanks to Gerd Knorr for pointing out this</span>", 
"<span class=\"comment\">  problem).</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">  -- Made it so if a function isn't implemented in a low-level driver,</span>", 
"<span class=\"comment\">  ENOSYS is now returned instead of EINVAL.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">  -- Simplified some complex logic so that the source code is easier to read.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">  -- Other stuff I probably forgot to mention (lots of changes).</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">2.01 to 2.11 Dec 1997-Jan 1998</span>", 
"<span class=\"comment\">  -- TO-DO!  Write changelogs for 2.01 to 2.12.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">2.12  Jan  24, 1998 -- Erik Andersen &lt;andersee@debian.org&gt;</span>", 
"<span class=\"comment\">  -- Fixed a bug in the IOCTL_IN and IOCTL_OUT macros.  It turns out that</span>", 
"<span class=\"comment\">  copy_*_user does not return EFAULT on error, but instead returns the number </span>", 
"<span class=\"comment\">  of bytes not copied.  I was returning whatever non-zero stuff came back from </span>", 
"<span class=\"comment\">  the copy_*_user functions directly, which would result in strange errors.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">2.13  July 17, 1998 -- Erik Andersen &lt;andersee@debian.org&gt;</span>", 
"<span class=\"comment\">  -- Fixed a bug in CDROM_SELECT_SPEED where you couldn't lower the speed</span>", 
"<span class=\"comment\">  of the drive.  Thanks to Tobias Ringstr|m &lt;tori@prosolvia.se&gt; for pointing</span>", 
"<span class=\"comment\">  this out and providing a simple fix.</span>", 
"<span class=\"comment\">  -- Fixed the procfs-unload-module bug with the fill_inode procfs callback.</span>", 
"<span class=\"comment\">  thanks to Andrea Arcangeli</span>", 
"<span class=\"comment\">  -- Fixed it so that the /proc entry now also shows up when cdrom is</span>", 
"<span class=\"comment\">  compiled into the kernel.  Before it only worked when loaded as a module.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">  2.14 August 17, 1998 -- Erik Andersen &lt;andersee@debian.org&gt;</span>", 
"<span class=\"comment\">  -- Fixed a bug in cdrom_media_changed and handling of reporting that</span>", 
"<span class=\"comment\">  the media had changed for devices that _don't_ implement media_changed.  </span>", 
"<span class=\"comment\">  Thanks to Grant R. Guenther &lt;grant@torque.net&gt; for spotting this bug.</span>", 
"<span class=\"comment\">  -- Made a few things more pedanticly correct.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">2.50 Oct 19, 1998 - Jens Axboe &lt;axboe@image.dk&gt;</span>", 
"<span class=\"comment\">  -- New maintainers! Erik was too busy to continue the work on the driver,</span>", 
"<span class=\"comment\">  so now Chris Zwilling &lt;chris@cloudnet.com&gt; and Jens Axboe &lt;axboe@image.dk&gt;</span>", 
"<span class=\"comment\">  will do their best to follow in his footsteps</span>", 
"<span class=\"comment\">  </span>", 
"<span class=\"comment\">  2.51 Dec 20, 1998 - Jens Axboe &lt;axboe@image.dk&gt;</span>", 
"<span class=\"comment\">  -- Check if drive is capable of doing what we ask before blindly changing</span>", 
"<span class=\"comment\">  cdi-&gt;options in various ioctl.</span>", 
"<span class=\"comment\">  -- Added version to proc entry.</span>", 
"<span class=\"comment\">  </span>", 
"<span class=\"comment\">  2.52 Jan 16, 1999 - Jens Axboe &lt;axboe@image.dk&gt;</span>", 
"<span class=\"comment\">  -- Fixed an error in open_for_data where we would sometimes not return</span>", 
"<span class=\"comment\">  the correct error value. Thanks Huba Gaspar &lt;huba@softcell.hu&gt;.</span>", 
"<span class=\"comment\">  -- Fixed module usage count - usage was based on /proc/sys/dev</span>", 
"<span class=\"comment\">  instead of /proc/sys/dev/cdrom. This could lead to an oops when other</span>", 
"<span class=\"comment\">  modules had entries in dev. Feb 02 - real bug was in sysctl.c where</span>", 
"<span class=\"comment\">  dev would be removed even though it was used. cdrom.c just illuminated</span>", 
"<span class=\"comment\">  that bug.</span>", 
"<span class=\"comment\">  </span>", 
"<span class=\"comment\">  2.53 Feb 22, 1999 - Jens Axboe &lt;axboe@image.dk&gt;</span>", 
"<span class=\"comment\">  -- Fixup of several ioctl calls, in particular CDROM_SET_OPTIONS has</span>", 
"<span class=\"comment\">  been \"rewritten\" because capabilities and options aren't in sync. They</span>", 
"<span class=\"comment\">  should be...</span>", 
"<span class=\"comment\">  -- Added CDROM_LOCKDOOR ioctl. Locks the door and keeps it that way.</span>", 
"<span class=\"comment\">  -- Added CDROM_RESET ioctl.</span>", 
"<span class=\"comment\">  -- Added CDROM_DEBUG ioctl. Enable debug messages on-the-fly.</span>", 
"<span class=\"comment\">  -- Added CDROM_GET_CAPABILITY ioctl. This relieves userspace programs</span>", 
"<span class=\"comment\">  from parsing /proc/sys/dev/cdrom/info.</span>", 
"<span class=\"comment\">  </span>", 
"<span class=\"comment\">  2.54 Mar 15, 1999 - Jens Axboe &lt;axboe@image.dk&gt;</span>", 
"<span class=\"comment\">  -- Check capability mask from low level driver when counting tracks as</span>", 
"<span class=\"comment\">  per suggestion from Corey J. Scotts &lt;cstotts@blue.weeg.uiowa.edu&gt;.</span>", 
"<span class=\"comment\">  </span>", 
"<span class=\"comment\">  2.55 Apr 25, 1999 - Jens Axboe &lt;axboe@image.dk&gt;</span>", 
"<span class=\"comment\">  -- autoclose was mistakenly checked against CDC_OPEN_TRAY instead of</span>", 
"<span class=\"comment\">  CDC_CLOSE_TRAY.</span>", 
"<span class=\"comment\">  -- proc info didn't mask against capabilities mask.</span>", 
"<span class=\"comment\">  </span>", 
"<span class=\"comment\">  3.00 Aug 5, 1999 - Jens Axboe &lt;axboe@image.dk&gt;</span>", 
"<span class=\"comment\">  -- Unified audio ioctl handling across CD-ROM drivers. A lot of the</span>", 
"<span class=\"comment\">  code was duplicated before. Drives that support the generic packet</span>", 
"<span class=\"comment\">  interface are now being fed packets from here instead.</span>", 
"<span class=\"comment\">  -- First attempt at adding support for MMC2 commands - for DVD and</span>", 
"<span class=\"comment\">  CD-R(W) drives. Only the DVD parts are in now - the interface used is</span>", 
"<span class=\"comment\">  the same as for the audio ioctls.</span>", 
"<span class=\"comment\">  -- ioctl cleanups. if a drive couldn't play audio, it didn't get</span>", 
"<span class=\"comment\">  a change to perform device specific ioctls as well.</span>", 
"<span class=\"comment\">  -- Defined CDROM_CAN(CDC_XXX) for checking the capabilities.</span>", 
"<span class=\"comment\">  -- Put in sysctl files for autoclose, autoeject, check_media, debug,</span>", 
"<span class=\"comment\">  and lock.</span>", 
"<span class=\"comment\">  -- /proc/sys/dev/cdrom/info has been updated to also contain info about</span>", 
"<span class=\"comment\">  CD-Rx and DVD capabilities.</span>", 
"<span class=\"comment\">  -- Now default to checking media type.</span>", 
"<span class=\"comment\">  -- CDROM_SEND_PACKET ioctl added. The infrastructure was in place for</span>", 
"<span class=\"comment\">  doing this anyway, with the generic_packet addition.</span>", 
"<span class=\"comment\">  </span>", 
"<span class=\"comment\">  3.01 Aug 6, 1999 - Jens Axboe &lt;axboe@image.dk&gt;</span>", 
"<span class=\"comment\">  -- Fix up the sysctl handling so that the option flags get set</span>", 
"<span class=\"comment\">  correctly.</span>", 
"<span class=\"comment\">  -- Fix up ioctl handling so the device specific ones actually get</span>", 
"<span class=\"comment\">  called :).</span>", 
"<span class=\"comment\">  </span>", 
"<span class=\"comment\">  3.02 Aug 8, 1999 - Jens Axboe &lt;axboe@image.dk&gt;</span>", 
"<span class=\"comment\">  -- Fixed volume control on SCSI drives (or others with longer audio</span>", 
"<span class=\"comment\">  page).</span>", 
"<span class=\"comment\">  -- Fixed a couple of DVD minors. Thanks to Andrew T. Veliath</span>", 
"<span class=\"comment\">  &lt;andrewtv@usa.net&gt; for telling me and for having defined the various</span>", 
"<span class=\"comment\">  DVD structures and ioctls in the first place! He designed the original</span>", 
"<span class=\"comment\">  DVD patches for ide-cd and while I rearranged and unified them, the</span>", 
"<span class=\"comment\">  interface is still the same.</span>", 
"<span class=\"comment\">  </span>", 
"<span class=\"comment\">  3.03 Sep 1, 1999 - Jens Axboe &lt;axboe@image.dk&gt;</span>", 
"<span class=\"comment\">  -- Moved the rest of the audio ioctls from the CD-ROM drivers here. Only</span>", 
"<span class=\"comment\">  CDROMREADTOCENTRY and CDROMREADTOCHDR are left.</span>", 
"<span class=\"comment\">  -- Moved the CDROMREADxxx ioctls in here.</span>", 
"<span class=\"comment\">  -- Defined the cdrom_get_last_written and cdrom_get_next_block as ioctls</span>", 
"<span class=\"comment\">  and exported functions.</span>", 
"<span class=\"comment\">  -- Erik Andersen &lt;andersen@xmission.com&gt; modified all SCMD_ commands</span>", 
"<span class=\"comment\">  to now read GPCMD_ for the new generic packet interface. All low level</span>", 
"<span class=\"comment\">  drivers are updated as well.</span>", 
"<span class=\"comment\">  -- Various other cleanups.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">  3.04 Sep 12, 1999 - Jens Axboe &lt;axboe@image.dk&gt;</span>", 
"<span class=\"comment\">  -- Fixed a couple of possible memory leaks (if an operation failed and</span>", 
"<span class=\"comment\">  we didn't free the buffer before returning the error).</span>", 
"<span class=\"comment\">  -- Integrated Uniform CD Changer handling from Richard Sharman</span>", 
"<span class=\"comment\">  &lt;rsharman@pobox.com&gt;.</span>", 
"<span class=\"comment\">  -- Defined CD_DVD and CD_CHANGER log levels.</span>", 
"<span class=\"comment\">  -- Fixed the CDROMREADxxx ioctls.</span>", 
"<span class=\"comment\">  -- CDROMPLAYTRKIND uses the GPCMD_PLAY_AUDIO_MSF command - too few</span>", 
"<span class=\"comment\">  drives supported it. We lose the index part, however.</span>", 
"<span class=\"comment\">  -- Small modifications to accommodate opens of /dev/hdc1, required</span>", 
"<span class=\"comment\">  for ide-cd to handle multisession discs.</span>", 
"<span class=\"comment\">  -- Export cdrom_mode_sense and cdrom_mode_select.</span>", 
"<span class=\"comment\">  -- init_cdrom_command() for setting up a cgc command.</span>", 
"<span class=\"comment\">  </span>", 
"<span class=\"comment\">  3.05 Oct 24, 1999 - Jens Axboe &lt;axboe@image.dk&gt;</span>", 
"<span class=\"comment\">  -- Changed the interface for CDROM_SEND_PACKET. Before it was virtually</span>", 
"<span class=\"comment\">  impossible to send the drive data in a sensible way.</span>", 
"<span class=\"comment\">  -- Lowered stack usage in mmc_ioctl(), dvd_read_disckey(), and</span>", 
"<span class=\"comment\">  dvd_read_manufact.</span>", 
"<span class=\"comment\">  -- Added setup of write mode for packet writing.</span>", 
"<span class=\"comment\">  -- Fixed CDDA ripping with cdda2wav - accept much larger requests of</span>", 
"<span class=\"comment\">  number of frames and split the reads in blocks of 8.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">  3.06 Dec 13, 1999 - Jens Axboe &lt;axboe@image.dk&gt;</span>", 
"<span class=\"comment\">  -- Added support for changing the region of DVD drives.</span>", 
"<span class=\"comment\">  -- Added sense data to generic command.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">  3.07 Feb 2, 2000 - Jens Axboe &lt;axboe@suse.de&gt;</span>", 
"<span class=\"comment\">  -- Do same \"read header length\" trick in cdrom_get_disc_info() as</span>", 
"<span class=\"comment\">  we do in cdrom_get_track_info() -- some drive don't obey specs and</span>", 
"<span class=\"comment\">  fail if they can't supply the full Mt Fuji size table.</span>", 
"<span class=\"comment\">  -- Deleted stuff related to setting up write modes. It has a different</span>", 
"<span class=\"comment\">  home now.</span>", 
"<span class=\"comment\">  -- Clear header length in mode_select unconditionally.</span>", 
"<span class=\"comment\">  -- Removed the register_disk() that was added, not needed here.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">  3.08 May 1, 2000 - Jens Axboe &lt;axboe@suse.de&gt;</span>", 
"<span class=\"comment\">  -- Fix direction flag in setup_send_key and setup_report_key. This</span>", 
"<span class=\"comment\">  gave some SCSI adapters problems.</span>", 
"<span class=\"comment\">  -- Always return -EROFS for write opens</span>", 
"<span class=\"comment\">  -- Convert to module_init/module_exit style init and remove some</span>", 
"<span class=\"comment\">  of the #ifdef MODULE stuff</span>", 
"<span class=\"comment\">  -- Fix several dvd errors - DVD_LU_SEND_ASF should pass agid,</span>", 
"<span class=\"comment\">  DVD_HOST_SEND_RPC_STATE did not set buffer size in cdb, and</span>", 
"<span class=\"comment\">  dvd_do_auth passed uninitialized data to drive because init_cdrom_command</span>", 
"<span class=\"comment\">  did not clear a 0 sized buffer.</span>", 
"<span class=\"comment\">  </span>", 
"<span class=\"comment\">  3.09 May 12, 2000 - Jens Axboe &lt;axboe@suse.de&gt;</span>", 
"<span class=\"comment\">  -- Fix Video-CD on SCSI drives that don't support READ_CD command. In</span>", 
"<span class=\"comment\">  that case switch block size and issue plain READ_10 again, then switch</span>", 
"<span class=\"comment\">  back.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">  3.10 Jun 10, 2000 - Jens Axboe &lt;axboe@suse.de&gt;</span>", 
"<span class=\"comment\">  -- Fix volume control on CD's - old SCSI-II drives now use their own</span>", 
"<span class=\"comment\">  code, as doing MODE6 stuff in here is really not my intention.</span>", 
"<span class=\"comment\">  -- Use READ_DISC_INFO for more reliable end-of-disc.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">  3.11 Jun 12, 2000 - Jens Axboe &lt;axboe@suse.de&gt;</span>", 
"<span class=\"comment\">  -- Fix bug in getting rpc phase 2 region info.</span>", 
"<span class=\"comment\">  -- Reinstate \"correct\" CDROMPLAYTRKIND</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   3.12 Oct 18, 2000 - Jens Axboe &lt;axboe@suse.de&gt;</span>", 
"<span class=\"comment\">  -- Use quiet bit on packet commands not known to work</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   3.20 Dec 17, 2003 - Jens Axboe &lt;axboe@suse.de&gt;</span>", 
"<span class=\"comment\">  -- Various fixes and lots of cleanups not listed :-)</span>", 
"<span class=\"comment\">  -- Locking fixes</span>", 
"<span class=\"comment\">  -- Mt Rainier support</span>", 
"<span class=\"comment\">  -- DVD-RAM write open fixes</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">  Nov 5 2001, Aug 8 2002. Modified by Andy Polyakov</span>", 
"<span class=\"comment\">  &lt;appro@fy.chalmers.se&gt; to support MMC-3 compliant DVD+RW units.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">  Modified by Nigel Kukard &lt;nkukard@lbsd.net&gt; - support DVD+RW</span>", 
"<span class=\"comment\">  2.4.x patch by Andy Polyakov &lt;appro@fy.chalmers.se&gt;</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">-------------------------------------------------------------------------*/</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pr_fmt\">pr_fmt</a>(<a class=\"id\" href=\"#fmt\">fmt</a>) <a class=\"id\" href=\"#KBUILD_MODNAME\">KBUILD_MODNAME</a> \": \" <a class=\"id\" href=\"#fmt\">fmt</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REVISION\">REVISION</a> \"Revision: 3.20\"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VERSION\">VERSION</a> \"Id: cdrom.c 3.20 2003/12/17\"", 
"", 
"<span class=\"comment\">/* I use an error-log mask to give fine grain control over the type of</span>", 
"<span class=\"comment\">   messages dumped to the system logs.  The available masks include: */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CD_NOTHING\">CD_NOTHING</a>      0x0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CD_WARNING\">CD_WARNING</a><span class=\"ts\"/>0x1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CD_REG_UNREG\">CD_REG_UNREG</a><span class=\"ts\"/>0x2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CD_DO_IOCTL\">CD_DO_IOCTL</a><span class=\"ts\"/>0x4", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CD_OPEN\">CD_OPEN</a><span class=\"ts\"/><span class=\"ts\"/>0x8", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CD_CLOSE\">CD_CLOSE</a><span class=\"ts\"/>0x10", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CD_COUNT_TRACKS\">CD_COUNT_TRACKS</a> 0x20", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CD_CHANGER\">CD_CHANGER</a><span class=\"ts\"/>0x40", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CD_DVD\">CD_DVD</a><span class=\"ts\"/><span class=\"ts\"/>0x80", 
"", 
"<span class=\"comment\">/* Define this to remove _all_ the debugging messages */</span>", 
"<span class=\"comment\">/* #define ERRLOGMASK CD_NOTHING */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ERRLOGMASK\">ERRLOGMASK</a> <a class=\"id\" href=\"#CD_WARNING\">CD_WARNING</a>", 
"<span class=\"comment\">/* #define ERRLOGMASK (CD_WARNING|CD_OPEN|CD_COUNT_TRACKS|CD_CLOSE) */</span>", 
"<span class=\"comment\">/* #define ERRLOGMASK (CD_WARNING|CD_REG_UNREG|CD_DO_IOCTL|CD_OPEN|CD_CLOSE|CD_COUNT_TRACKS) */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#buffer_head\">buffer_head</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#major\">major</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt; ", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cdrom\">cdrom</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sysctl\">sysctl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blkpg\">blkpg</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fcntl\">fcntl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blkdev\">blkdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#times\">times</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* used to tell the module to turn on full debugging messages */</span>", 
"static int <a class=\"id\" href=\"#debug\">debug</a>;", 
"<span class=\"comment\">/* used to keep tray locked at all times */</span>", 
"static int <a class=\"id\" href=\"#keeplocked\">keeplocked</a>;", 
"<span class=\"comment\">/* default compatibility mode */</span>", 
"static int <a class=\"id\" href=\"#autoclose\">autoclose</a>=1;", 
"static int <a class=\"id\" href=\"#autoeject\">autoeject</a>;", 
"static int <a class=\"id\" href=\"#lockdoor\">lockdoor</a> = 1;", 
"<span class=\"comment\">/* will we ever get to use this... sigh. */</span>", 
"static int <a class=\"id\" href=\"#check_media_type\">check_media_type</a>;", 
"<span class=\"comment\">/* automatically restart mrw format */</span>", 
"static int <a class=\"id\" href=\"#mrw_format_restart\">mrw_format_restart</a> = 1;", 
"<a class=\"id\" href=\"#module_param\">module_param</a>(<a class=\"id\" href=\"#debug\">debug</a>, <a class=\"id\" href=\"#bool\">bool</a>, 0);", 
"<a class=\"id\" href=\"#module_param\">module_param</a>(<a class=\"id\" href=\"#autoclose\">autoclose</a>, <a class=\"id\" href=\"#bool\">bool</a>, 0);", 
"<a class=\"id\" href=\"#module_param\">module_param</a>(<a class=\"id\" href=\"#autoeject\">autoeject</a>, <a class=\"id\" href=\"#bool\">bool</a>, 0);", 
"<a class=\"id\" href=\"#module_param\">module_param</a>(<a class=\"id\" href=\"#lockdoor\">lockdoor</a>, <a class=\"id\" href=\"#bool\">bool</a>, 0);", 
"<a class=\"id\" href=\"#module_param\">module_param</a>(<a class=\"id\" href=\"#check_media_type\">check_media_type</a>, <a class=\"id\" href=\"#bool\">bool</a>, 0);", 
"<a class=\"id\" href=\"#module_param\">module_param</a>(<a class=\"id\" href=\"#mrw_format_restart\">mrw_format_restart</a>, <a class=\"id\" href=\"#bool\">bool</a>, 0);", 
"", 
"static <a class=\"id\" href=\"#DEFINE_MUTEX\">DEFINE_MUTEX</a>(<a class=\"id\" href=\"#cdrom_mutex\">cdrom_mutex</a>);", 
"", 
"static const char *<a class=\"id\" href=\"#mrw_format_status\">mrw_format_status</a>[] = {", 
"<span class=\"ts\"/>\"not mrw\",", 
"<span class=\"ts\"/>\"bgformat inactive\",", 
"<span class=\"ts\"/>\"bgformat active\",", 
"<span class=\"ts\"/>\"mrw complete\",", 
"};", 
"", 
"static const char *<a class=\"id\" href=\"#mrw_address_space\">mrw_address_space</a>[] = { \"DMA\", \"GAA\" };", 
"", 
"#if (<a class=\"id\" href=\"#ERRLOGMASK\">ERRLOGMASK</a>!=<a class=\"id\" href=\"#CD_NOTHING\">CD_NOTHING</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#args\">args</a>...)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ERRLOGMASK\">ERRLOGMASK</a> &amp; <a class=\"id\" href=\"#type\">type</a>) || <a class=\"id\" href=\"#debug\">debug</a> == 1)<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_info\">pr_info</a>(<a class=\"id\" href=\"#fmt\">fmt</a>, ##<a class=\"id\" href=\"#args\">args</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"} while (0)", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#args\">args</a>...)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>if (0 && (<a class=\"id\" href=\"#ERRLOGMASK\">ERRLOGMASK</a> &amp; <a class=\"id\" href=\"#type\">type</a>) || <a class=\"id\" href=\"#debug\">debug</a> == 1)<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_info\">pr_info</a>(<a class=\"id\" href=\"#fmt\">fmt</a>, ##<a class=\"id\" href=\"#args\">args</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"} while (0)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/* These are used to simplify getting data in from and back to user land */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IOCTL_IN\">IOCTL_IN</a>(<a class=\"id\" href=\"#arg\">arg</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#in\">in</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;(<a class=\"id\" href=\"#in\">in</a>), (<a class=\"id\" href=\"#type\">type</a> <a class=\"id\" href=\"#__user\">__user</a> *) (<a class=\"id\" href=\"#arg\">arg</a>), sizeof (<a class=\"id\" href=\"#in\">in</a>)))<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IOCTL_OUT\">IOCTL_OUT</a>(<a class=\"id\" href=\"#arg\">arg</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#out\">out</a>) \\", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>((<a class=\"id\" href=\"#type\">type</a> <a class=\"id\" href=\"#__user\">__user</a> *) (<a class=\"id\" href=\"#arg\">arg</a>), &amp;(<a class=\"id\" href=\"#out\">out</a>), sizeof (<a class=\"id\" href=\"#out\">out</a>)))<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"comment\">/* The (cdo-&gt;capability &amp; ~cdi-&gt;mask &amp; CDC_XXX) construct was used in</span>", 
"<span class=\"comment\">   a lot of places. This macro makes the code more clear. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CDROM_CAN\">CDROM_CAN</a>(<a class=\"id\" href=\"#type\">type</a>) (<a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#capability\">capability</a> &amp; ~<a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#mask\">mask</a> &amp; (<a class=\"id\" href=\"#type\">type</a>))", 
"", 
"<span class=\"comment\">/* used in the audio ioctls */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CHECKAUDIO\">CHECKAUDIO</a> if ((<a class=\"id\" href=\"#ret\">ret</a>=<a class=\"id\" href=\"#check_for_audio_disc\">check_for_audio_disc</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#cdo\">cdo</a>))) return <a class=\"id\" href=\"#ret\">ret</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Another popular OS uses 7 seconds as the hard timeout for default</span>", 
"<span class=\"comment\"> * commands, so it is a good choice for us as well.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CDROM_DEF_TIMEOUT\">CDROM_DEF_TIMEOUT</a><span class=\"ts\"/>(7 * <a class=\"id\" href=\"#HZ\">HZ</a>)", 
"", 
"<span class=\"comment\">/* Not-exported routines. */</span>", 
"static int <a class=\"id\" href=\"#open_for_data\">open_for_data</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> * <a class=\"id\" href=\"#cdi\">cdi</a>);", 
"static int <a class=\"id\" href=\"#check_for_audio_disc\">check_for_audio_disc</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> * <a class=\"id\" href=\"#cdi\">cdi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#cdrom_device_ops\">cdrom_device_ops</a> * <a class=\"id\" href=\"#cdo\">cdo</a>);", 
"static void <a class=\"id\" href=\"#sanitize_format\">sanitize_format</a>(union <a class=\"id\" href=\"#cdrom_addr\">cdrom_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>, ", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u_char\">u_char</a> * <a class=\"id\" href=\"#curr\">curr</a>, <a class=\"id\" href=\"#u_char\">u_char</a> <a class=\"id\" href=\"#requested\">requested</a>);", 
"static int <a class=\"id\" href=\"#mmc_ioctl\">mmc_ioctl</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>, unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     unsigned long <a class=\"id\" href=\"#arg\">arg</a>);", 
"", 
"int <a class=\"id\" href=\"#cdrom_get_last_written\">cdrom_get_last_written</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *, long *);", 
"static int <a class=\"id\" href=\"#cdrom_get_next_writable\">cdrom_get_next_writable</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *, long *);", 
"static void <a class=\"id\" href=\"#cdrom_count_tracks\">cdrom_count_tracks</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *, <a class=\"id\" href=\"#tracktype\">tracktype</a>*);", 
"", 
"static int <a class=\"id\" href=\"#cdrom_mrw_exit\">cdrom_mrw_exit</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>);", 
"", 
"static int <a class=\"id\" href=\"#cdrom_get_disc_info\">cdrom_get_disc_info</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#disc_information\">disc_information</a> *<a class=\"id\" href=\"#di\">di</a>);", 
"", 
"static void <a class=\"id\" href=\"#cdrom_sysctl_register\">cdrom_sysctl_register</a>(void);", 
"", 
"static <a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#cdrom_list\">cdrom_list</a>);", 
"", 
"static int <a class=\"id\" href=\"#cdrom_dummy_generic_packet\">cdrom_dummy_generic_packet</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#packet_command\">packet_command</a> *<a class=\"id\" href=\"#cgc\">cgc</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#sense\">sense</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#sense\">sense</a>-><a class=\"id\" href=\"#sense_key\">sense_key</a> = 0x05;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#sense\">sense</a>-><a class=\"id\" href=\"#asc\">asc</a> = 0x20;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#sense\">sense</a>-><a class=\"id\" href=\"#ascq\">ascq</a> = 0x00;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#stat\">stat</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"}", 
"", 
"<span class=\"comment\">/* This macro makes sure we don't have to check on cdrom_device_ops</span>", 
"<span class=\"comment\"> * existence in the run-time routines below. Change_capability is a</span>", 
"<span class=\"comment\"> * hack to have the capability flags defined const, while we can still</span>", 
"<span class=\"comment\"> * change it here without gcc complaining at every line.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ENSURE\">ENSURE</a>(<a class=\"id\" href=\"#call\">call</a>, <a class=\"id\" href=\"#bits\">bits</a>) if (<a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#call\">call</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) *<a class=\"id\" href=\"#change_capability\">change_capability</a> &= ~(<a class=\"id\" href=\"#bits\">bits</a>)", 
"", 
"int <a class=\"id\" href=\"#register_cdrom\">register_cdrom</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>)", 
"{", 
"<span class=\"ts\"/>static char <a class=\"id\" href=\"#banner_printed\">banner_printed</a>;", 
"        struct <a class=\"id\" href=\"#cdrom_device_ops\">cdrom_device_ops</a> *<a class=\"id\" href=\"#cdo\">cdo</a> = <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>;", 
"        int *<a class=\"id\" href=\"#change_capability\">change_capability</a> = (int *)&amp;<a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#capability\">capability</a>; <span class=\"comment\">/* hack */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_OPEN\">CD_OPEN</a>, \"entering register_cdrom\\n\"); ", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#open\">open</a> == <a class=\"id\" href=\"#NULL\">NULL</a> || <a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#release\">release</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#banner_printed\">banner_printed</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_info\">pr_info</a>(\"Uniform CD-ROM driver \" <a class=\"id\" href=\"#REVISION\">REVISION</a> \"\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#banner_printed\">banner_printed</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdrom_sysctl_register\">cdrom_sysctl_register</a>();", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ENSURE\">ENSURE</a>(<a class=\"id\" href=\"#drive_status\">drive_status</a>, <a class=\"id\" href=\"#CDC_DRIVE_STATUS\">CDC_DRIVE_STATUS</a> );", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ENSURE\">ENSURE</a>(<a class=\"id\" href=\"#media_changed\">media_changed</a>, <a class=\"id\" href=\"#CDC_MEDIA_CHANGED\">CDC_MEDIA_CHANGED</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ENSURE\">ENSURE</a>(<a class=\"id\" href=\"#tray_move\">tray_move</a>, <a class=\"id\" href=\"#CDC_CLOSE_TRAY\">CDC_CLOSE_TRAY</a> | <a class=\"id\" href=\"#CDC_OPEN_TRAY\">CDC_OPEN_TRAY</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ENSURE\">ENSURE</a>(<a class=\"id\" href=\"#lock_door\">lock_door</a>, <a class=\"id\" href=\"#CDC_LOCK\">CDC_LOCK</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ENSURE\">ENSURE</a>(<a class=\"id\" href=\"#select_speed\">select_speed</a>, <a class=\"id\" href=\"#CDC_SELECT_SPEED\">CDC_SELECT_SPEED</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ENSURE\">ENSURE</a>(<a class=\"id\" href=\"#get_last_session\">get_last_session</a>, <a class=\"id\" href=\"#CDC_MULTI_SESSION\">CDC_MULTI_SESSION</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ENSURE\">ENSURE</a>(<a class=\"id\" href=\"#get_mcn\">get_mcn</a>, <a class=\"id\" href=\"#CDC_MCN\">CDC_MCN</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ENSURE\">ENSURE</a>(<a class=\"id\" href=\"#reset\">reset</a>, <a class=\"id\" href=\"#CDC_RESET\">CDC_RESET</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ENSURE\">ENSURE</a>(<a class=\"id\" href=\"#generic_packet\">generic_packet</a>, <a class=\"id\" href=\"#CDC_GENERIC_PACKET\">CDC_GENERIC_PACKET</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#mc_flags\">mc_flags</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#n_minors\">n_minors</a> = 0;", 
"        <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#options\">options</a> = <a class=\"id\" href=\"#CDO_USE_FFLAGS\">CDO_USE_FFLAGS</a>;", 
"<span class=\"ts\"/>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#autoclose\">autoclose</a>==1 && <a class=\"id\" href=\"#CDROM_CAN\">CDROM_CAN</a>(<a class=\"id\" href=\"#CDC_CLOSE_TRAY\">CDC_CLOSE_TRAY</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#options\">options</a> |= (int) <a class=\"id\" href=\"#CDO_AUTO_CLOSE\">CDO_AUTO_CLOSE</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#autoeject\">autoeject</a>==1 && <a class=\"id\" href=\"#CDROM_CAN\">CDROM_CAN</a>(<a class=\"id\" href=\"#CDC_OPEN_TRAY\">CDC_OPEN_TRAY</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#options\">options</a> |= (int) <a class=\"id\" href=\"#CDO_AUTO_EJECT\">CDO_AUTO_EJECT</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lockdoor\">lockdoor</a>==1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#options\">options</a> |= (int) <a class=\"id\" href=\"#CDO_LOCK\">CDO_LOCK</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#check_media_type\">check_media_type</a>==1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#options\">options</a> |= (int) <a class=\"id\" href=\"#CDO_CHECK_TYPE\">CDO_CHECK_TYPE</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#CDROM_CAN\">CDROM_CAN</a>(<a class=\"id\" href=\"#CDC_MRW_W\">CDC_MRW_W</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#exit\">exit</a> = <a class=\"id\" href=\"#cdrom_mrw_exit\">cdrom_mrw_exit</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#disk\">disk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#cdda_method\">cdda_method</a> = <a class=\"id\" href=\"#CDDA_BPC_FULL\">CDDA_BPC_FULL</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#cdda_method\">cdda_method</a> = <a class=\"id\" href=\"#CDDA_OLD\">CDDA_OLD</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#generic_packet\">generic_packet</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#generic_packet\">generic_packet</a> = <a class=\"id\" href=\"#cdrom_dummy_generic_packet\">cdrom_dummy_generic_packet</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_REG_UNREG\">CD_REG_UNREG</a>, \"drive \\\"/dev/%s\\\" registered\\n\", <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#cdrom_mutex\">cdrom_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#cdrom_list\">cdrom_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#cdrom_mutex\">cdrom_mutex</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#ENSURE\">ENSURE</a>", 
"", 
"void <a class=\"id\" href=\"#unregister_cdrom\">unregister_cdrom</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_OPEN\">CD_OPEN</a>, \"entering unregister_cdrom\\n\"); ", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#cdrom_mutex\">cdrom_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#cdrom_mutex\">cdrom_mutex</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#exit\">exit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#exit\">exit</a>(<a class=\"id\" href=\"#cdi\">cdi</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#n_minors\">n_minors</a>--;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_REG_UNREG\">CD_REG_UNREG</a>, \"drive \\\"/dev/%s\\\" unregistered\\n\", <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#cdrom_get_media_event\">cdrom_get_media_event</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#media_event_desc\">media_event_desc</a> *<a class=\"id\" href=\"#med\">med</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> <a class=\"id\" href=\"#cgc\">cgc</a>;", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#buffer\">buffer</a>[8];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#event_header\">event_header</a> *<a class=\"id\" href=\"#eh\">eh</a> = (struct <a class=\"id\" href=\"#event_header\">event_header</a> *) <a class=\"id\" href=\"#buffer\">buffer</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_cdrom_command\">init_cdrom_command</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>), <a class=\"id\" href=\"#CGC_DATA_READ\">CGC_DATA_READ</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_GET_EVENT_STATUS_NOTIFICATION\">GPCMD_GET_EVENT_STATUS_NOTIFICATION</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[1] = 1;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* IMMED */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[4] = 1 << 4;<span class=\"ts\"/><span class=\"comment\">/* media event */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[8] = sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#quiet\">quiet</a> = 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#generic_packet\">generic_packet</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#be16_to_cpu\">be16_to_cpu</a>(<a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#data_len\">data_len</a>) &lt; sizeof(*<a class=\"id\" href=\"#med\">med</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#nea\">nea</a> || <a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#notification_class\">notification_class</a> != 0x4)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#med\">med</a>, &amp;<a class=\"id\" href=\"#buffer\">buffer</a>[sizeof(*<a class=\"id\" href=\"#eh\">eh</a>)], sizeof(*<a class=\"id\" href=\"#med\">med</a>));", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * the first prototypes used 0x2c as the page code for the mrw mode page,</span>", 
"<span class=\"comment\"> * subsequently this was changed to 0x03. probe the one used by this drive</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#cdrom_mrw_probe_pc\">cdrom_mrw_probe_pc</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> <a class=\"id\" href=\"#cgc\">cgc</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buffer\">buffer</a>[16];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_cdrom_command\">init_cdrom_command</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>), <a class=\"id\" href=\"#CGC_DATA_READ\">CGC_DATA_READ</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#timeout\">timeout</a> = <a class=\"id\" href=\"#HZ\">HZ</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#quiet\">quiet</a> = 1;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cdrom_mode_sense\">cdrom_mode_sense</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#MRW_MODE_PC\">MRW_MODE_PC</a>, 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#mrw_mode_page\">mrw_mode_page</a> = <a class=\"id\" href=\"#MRW_MODE_PC\">MRW_MODE_PC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#cdrom_mode_sense\">cdrom_mode_sense</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#MRW_MODE_PC_PRE1\">MRW_MODE_PC_PRE1</a>, 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#mrw_mode_page\">mrw_mode_page</a> = <a class=\"id\" href=\"#MRW_MODE_PC_PRE1\">MRW_MODE_PC_PRE1</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cdrom_is_mrw\">cdrom_is_mrw</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>, int *<a class=\"id\" href=\"#write\">write</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> <a class=\"id\" href=\"#cgc\">cgc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mrw_feature_desc\">mrw_feature_desc</a> *<a class=\"id\" href=\"#mfd\">mfd</a>;", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#buffer\">buffer</a>[16];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#write\">write</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_cdrom_command\">init_cdrom_command</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>), <a class=\"id\" href=\"#CGC_DATA_READ\">CGC_DATA_READ</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_GET_CONFIGURATION\">GPCMD_GET_CONFIGURATION</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[3] = <a class=\"id\" href=\"#CDF_MRW\">CDF_MRW</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[8] = sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#quiet\">quiet</a> = 1;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#generic_packet\">generic_packet</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mfd\">mfd</a> = (struct <a class=\"id\" href=\"#mrw_feature_desc\">mrw_feature_desc</a> *)&amp;<a class=\"id\" href=\"#buffer\">buffer</a>[sizeof(struct <a class=\"id\" href=\"#feature_header\">feature_header</a>)];", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#be16_to_cpu\">be16_to_cpu</a>(<a class=\"id\" href=\"#mfd\">mfd</a>-><a class=\"id\" href=\"#feature_code\">feature_code</a>) != <a class=\"id\" href=\"#CDF_MRW\">CDF_MRW</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#write\">write</a> = <a class=\"id\" href=\"#mfd\">mfd</a>-><a class=\"id\" href=\"#write\">write</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdrom_mrw_probe_pc\">cdrom_mrw_probe_pc</a>(<a class=\"id\" href=\"#cdi\">cdi</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#write\">write</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cdrom_mrw_bgformat\">cdrom_mrw_bgformat</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>, int <a class=\"id\" href=\"#cont\">cont</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> <a class=\"id\" href=\"#cgc\">cgc</a>;", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#buffer\">buffer</a>[12];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_info\">pr_info</a>(\"%sstarting format\\n\", <a class=\"id\" href=\"#cont\">cont</a> ? \"Re\" : \"\");", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * FmtData bit set (bit 4), format type is 1</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_cdrom_command\">init_cdrom_command</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>), <a class=\"id\" href=\"#CGC_DATA_WRITE\">CGC_DATA_WRITE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_FORMAT_UNIT\">GPCMD_FORMAT_UNIT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[1] = (1 << 4) | 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#timeout\">timeout</a> = 5 * 60 * <a class=\"id\" href=\"#HZ\">HZ</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 4 byte format list header, 8 byte format list descriptor</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a>[1] = 1 << 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a>[3] = 8;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * nr_blocks field</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a>[4] = 0xff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a>[5] = 0xff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a>[6] = 0xff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a>[7] = 0xff;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a>[8] = 0x24 << 2;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a>[11] = <a class=\"id\" href=\"#cont\">cont</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#generic_packet\">generic_packet</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_info\">pr_info</a>(\"bgformat failed\\n\");", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cdrom_mrw_bgformat_susp\">cdrom_mrw_bgformat_susp</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>, int <a class=\"id\" href=\"#immed\">immed</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> <a class=\"id\" href=\"#cgc\">cgc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_cdrom_command\">init_cdrom_command</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0, <a class=\"id\" href=\"#CGC_DATA_NONE\">CGC_DATA_NONE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_CLOSE_TRACK\">GPCMD_CLOSE_TRACK</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Session = 1, Track = 0</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[1] = !!<a class=\"id\" href=\"#immed\">immed</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[2] = 1 << 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#timeout\">timeout</a> = 5 * 60 * <a class=\"id\" href=\"#HZ\">HZ</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#generic_packet\">generic_packet</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cdrom_flush_cache\">cdrom_flush_cache</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> <a class=\"id\" href=\"#cgc\">cgc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_cdrom_command\">init_cdrom_command</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0, <a class=\"id\" href=\"#CGC_DATA_NONE\">CGC_DATA_NONE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_FLUSH_CACHE\">GPCMD_FLUSH_CACHE</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#timeout\">timeout</a> = 5 * 60 * <a class=\"id\" href=\"#HZ\">HZ</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#generic_packet\">generic_packet</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cdrom_mrw_exit\">cdrom_mrw_exit</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disc_information\">disc_information</a> <a class=\"id\" href=\"#di\">di</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdrom_get_disc_info\">cdrom_get_disc_info</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#di\">di</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0 || <a class=\"id\" href=\"#ret\">ret</a> &lt; (int)<a class=\"id\" href=\"#offsetof\">offsetof</a>(<a class=\"id\" href=\"#typeof\">typeof</a>(<a class=\"id\" href=\"#di\">di</a>),<a class=\"id\" href=\"#disc_type\">disc_type</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#di\">di</a>.<a class=\"id\" href=\"#mrw_status\">mrw_status</a> == <a class=\"id\" href=\"#CDM_MRW_BGFORMAT_ACTIVE\">CDM_MRW_BGFORMAT_ACTIVE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_info\">pr_info</a>(\"issuing MRW background format suspend\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdrom_mrw_bgformat_susp\">cdrom_mrw_bgformat_susp</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, 0);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a> && <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#media_written\">media_written</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdrom_flush_cache\">cdrom_flush_cache</a>(<a class=\"id\" href=\"#cdi\">cdi</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cdrom_mrw_set_lba_space\">cdrom_mrw_set_lba_space</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>, int <a class=\"id\" href=\"#space\">space</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> <a class=\"id\" href=\"#cgc\">cgc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mode_page_header\">mode_page_header</a> *<a class=\"id\" href=\"#mph\">mph</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buffer\">buffer</a>[16];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#size\">size</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_cdrom_command\">init_cdrom_command</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>), <a class=\"id\" href=\"#CGC_DATA_READ\">CGC_DATA_READ</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buffer\">buffer</a> = <a class=\"id\" href=\"#buffer\">buffer</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buflen\">buflen</a> = sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>);", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdrom_mode_sense\">cdrom_mode_sense</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#mrw_mode_page\">mrw_mode_page</a>, 0)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mph\">mph</a> = (struct <a class=\"id\" href=\"#mode_page_header\">mode_page_header</a> *) <a class=\"id\" href=\"#buffer\">buffer</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#be16_to_cpu\">be16_to_cpu</a>(<a class=\"id\" href=\"#mph\">mph</a>-><a class=\"id\" href=\"#desc_length\">desc_length</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#be16_to_cpu\">be16_to_cpu</a>(<a class=\"id\" href=\"#mph\">mph</a>-><a class=\"id\" href=\"#mode_data_length\">mode_data_length</a>) + 2;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#offset\">offset</a> + 3] = <a class=\"id\" href=\"#space\">space</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buflen\">buflen</a> = <a class=\"id\" href=\"#size\">size</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdrom_mode_select\">cdrom_mode_select</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_info\">pr_info</a>(\"%s: mrw address space %s selected\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#mrw_address_space\">mrw_address_space</a>[<a class=\"id\" href=\"#space\">space</a>]);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cdrom_get_random_writable\">cdrom_get_random_writable</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#rwrt_feature_desc\">rwrt_feature_desc</a> *<a class=\"id\" href=\"#rfd\">rfd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> <a class=\"id\" href=\"#cgc\">cgc</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buffer\">buffer</a>[24];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_cdrom_command\">init_cdrom_command</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>), <a class=\"id\" href=\"#CGC_DATA_READ\">CGC_DATA_READ</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_GET_CONFIGURATION\">GPCMD_GET_CONFIGURATION</a>;<span class=\"ts\"/><span class=\"comment\">/* often 0x46 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[3] = <a class=\"id\" href=\"#CDF_RWRT\">CDF_RWRT</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* often 0x0020 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[8] = sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* often 0x18 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#quiet\">quiet</a> = 1;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#generic_packet\">generic_packet</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#rfd\">rfd</a>, &amp;<a class=\"id\" href=\"#buffer\">buffer</a>[sizeof(struct <a class=\"id\" href=\"#feature_header\">feature_header</a>)], sizeof (*<a class=\"id\" href=\"#rfd\">rfd</a>));", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cdrom_has_defect_mgt\">cdrom_has_defect_mgt</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> <a class=\"id\" href=\"#cgc\">cgc</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buffer\">buffer</a>[16];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be16\">__be16</a> *<a class=\"id\" href=\"#feature_code\">feature_code</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_cdrom_command\">init_cdrom_command</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>), <a class=\"id\" href=\"#CGC_DATA_READ\">CGC_DATA_READ</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_GET_CONFIGURATION\">GPCMD_GET_CONFIGURATION</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[3] = <a class=\"id\" href=\"#CDF_HWDM\">CDF_HWDM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[8] = sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#quiet\">quiet</a> = 1;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#generic_packet\">generic_packet</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#feature_code\">feature_code</a> = (<a class=\"id\" href=\"#__be16\">__be16</a> *) &amp;<a class=\"id\" href=\"#buffer\">buffer</a>[sizeof(struct <a class=\"id\" href=\"#feature_header\">feature_header</a>)];", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#be16_to_cpu\">be16_to_cpu</a>(*<a class=\"id\" href=\"#feature_code\">feature_code</a>) == <a class=\"id\" href=\"#CDF_HWDM\">CDF_HWDM</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"", 
"static int <a class=\"id\" href=\"#cdrom_is_random_writable\">cdrom_is_random_writable</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>, int *<a class=\"id\" href=\"#write\">write</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rwrt_feature_desc\">rwrt_feature_desc</a> <a class=\"id\" href=\"#rfd\">rfd</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#write\">write</a> = 0;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdrom_get_random_writable\">cdrom_get_random_writable</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#rfd\">rfd</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#CDF_RWRT\">CDF_RWRT</a> == <a class=\"id\" href=\"#be16_to_cpu\">be16_to_cpu</a>(<a class=\"id\" href=\"#rfd\">rfd</a>.<a class=\"id\" href=\"#feature_code\">feature_code</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#write\">write</a> = 1;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cdrom_media_erasable\">cdrom_media_erasable</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disc_information\">disc_information</a> <a class=\"id\" href=\"#di\">di</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdrom_get_disc_info\">cdrom_get_disc_info</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#di\">di</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0 || <a class=\"id\" href=\"#ret\">ret</a> &lt; <a class=\"id\" href=\"#offsetof\">offsetof</a>(<a class=\"id\" href=\"#typeof\">typeof</a>(<a class=\"id\" href=\"#di\">di</a>), <a class=\"id\" href=\"#n_first_track\">n_first_track</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#di\">di</a>.<a class=\"id\" href=\"#erasable\">erasable</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * FIXME: check RO bit</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#cdrom_dvdram_open_write\">cdrom_dvdram_open_write</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdrom_media_erasable\">cdrom_media_erasable</a>(<a class=\"id\" href=\"#cdi\">cdi</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * allow writable open if media info read worked and media is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * erasable, _or_ if it fails since not all drives support it</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cdrom_mrw_open_write\">cdrom_mrw_open_write</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disc_information\">disc_information</a> <a class=\"id\" href=\"#di\">di</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * always reset to DMA lba space on open</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cdrom_mrw_set_lba_space\">cdrom_mrw_set_lba_space</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#MRW_LBA_DMA\">MRW_LBA_DMA</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(\"failed setting lba address space\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdrom_get_disc_info\">cdrom_get_disc_info</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#di\">di</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0 || <a class=\"id\" href=\"#ret\">ret</a> &lt; <a class=\"id\" href=\"#offsetof\">offsetof</a>(<a class=\"id\" href=\"#typeof\">typeof</a>(<a class=\"id\" href=\"#di\">di</a>),<a class=\"id\" href=\"#disc_type\">disc_type</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#di\">di</a>.<a class=\"id\" href=\"#erasable\">erasable</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * mrw_status</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 0<span class=\"ts\"/>-<span class=\"ts\"/>not MRW formatted</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 1<span class=\"ts\"/>-<span class=\"ts\"/>MRW bgformat started, but not running or complete</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 2<span class=\"ts\"/>-<span class=\"ts\"/>MRW bgformat in progress</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 3<span class=\"ts\"/>-<span class=\"ts\"/>MRW formatting complete</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_info\">pr_info</a>(\"open: mrw_status '%s'\\n\", <a class=\"id\" href=\"#mrw_format_status\">mrw_format_status</a>[<a class=\"id\" href=\"#di\">di</a>.<a class=\"id\" href=\"#mrw_status\">mrw_status</a>]);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#di\">di</a>.<a class=\"id\" href=\"#mrw_status\">mrw_status</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 1;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#di\">di</a>.<a class=\"id\" href=\"#mrw_status\">mrw_status</a> == <a class=\"id\" href=\"#CDM_MRW_BGFORMAT_INACTIVE\">CDM_MRW_BGFORMAT_INACTIVE</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mrw_format_restart\">mrw_format_restart</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdrom_mrw_bgformat\">cdrom_mrw_bgformat</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, 1);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#mo_open_write\">mo_open_write</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> <a class=\"id\" href=\"#cgc\">cgc</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buffer\">buffer</a>[255];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_cdrom_command\">init_cdrom_command</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, &amp;<a class=\"id\" href=\"#buffer\">buffer</a>, 4, <a class=\"id\" href=\"#CGC_DATA_READ\">CGC_DATA_READ</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#quiet\">quiet</a> = 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * obtain write protect information as per</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * drivers/scsi/sd.c:sd_read_write_protect_flag</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdrom_mode_sense\">cdrom_mode_sense</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#GPMODE_ALL_PAGES\">GPMODE_ALL_PAGES</a>, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdrom_mode_sense\">cdrom_mode_sense</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#GPMODE_VENDOR_PAGE\">GPMODE_VENDOR_PAGE</a>, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buflen\">buflen</a> = 255;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdrom_mode_sense\">cdrom_mode_sense</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#GPMODE_ALL_PAGES\">GPMODE_ALL_PAGES</a>, 0);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* drive gave us no info, let the user go ahead */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#buffer\">buffer</a>[3] &amp; 0x80;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cdrom_ram_open_write\">cdrom_ram_open_write</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rwrt_feature_desc\">rwrt_feature_desc</a> <a class=\"id\" href=\"#rfd\">rfd</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdrom_has_defect_mgt\">cdrom_has_defect_mgt</a>(<a class=\"id\" href=\"#cdi\">cdi</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdrom_get_random_writable\">cdrom_get_random_writable</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#rfd\">rfd</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#CDF_RWRT\">CDF_RWRT</a> == <a class=\"id\" href=\"#be16_to_cpu\">be16_to_cpu</a>(<a class=\"id\" href=\"#rfd\">rfd</a>.<a class=\"id\" href=\"#feature_code\">feature_code</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = !<a class=\"id\" href=\"#rfd\">rfd</a>.<a class=\"id\" href=\"#curr\">curr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_OPEN\">CD_OPEN</a>, \"can open for random write\\n\");", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#cdrom_mmc3_profile\">cdrom_mmc3_profile</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> <a class=\"id\" href=\"#cgc\">cgc</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buffer\">buffer</a>[32];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#mmc3_profile\">mmc3_profile</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_cdrom_command\">init_cdrom_command</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>), <a class=\"id\" href=\"#CGC_DATA_READ\">CGC_DATA_READ</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_GET_CONFIGURATION\">GPCMD_GET_CONFIGURATION</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[1] = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[2] = <a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[3] = 0;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Starting Feature Number */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[8] = sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Allocation Length */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#quiet\">quiet</a> = 1;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#generic_packet\">generic_packet</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mmc3_profile\">mmc3_profile</a> = 0xffff;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mmc3_profile\">mmc3_profile</a> = (<a class=\"id\" href=\"#buffer\">buffer</a>[6] << 8) | <a class=\"id\" href=\"#buffer\">buffer</a>[7];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#mmc3_profile\">mmc3_profile</a> = <a class=\"id\" href=\"#mmc3_profile\">mmc3_profile</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cdrom_is_dvd_rw\">cdrom_is_dvd_rw</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#mmc3_profile\">mmc3_profile</a>) {", 
"<span class=\"ts\"/>case 0x12:<span class=\"ts\"/><span class=\"comment\">/* DVD-RAM<span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>case 0x1A:<span class=\"ts\"/><span class=\"comment\">/* DVD+RW<span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * returns 0 for ok to open write, non-0 to disallow</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#cdrom_open_write\">cdrom_open_write</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#mrw\">mrw</a>, <a class=\"id\" href=\"#mrw_write\">mrw_write</a>, <a class=\"id\" href=\"#ram_write\">ram_write</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mrw\">mrw</a> = 0;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cdrom_is_mrw\">cdrom_is_mrw</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#mrw_write\">mrw_write</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mrw\">mrw</a> = 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#CDROM_CAN\">CDROM_CAN</a>(<a class=\"id\" href=\"#CDC_MO_DRIVE\">CDC_MO_DRIVE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ram_write\">ram_write</a> = 1;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>(void) <a class=\"id\" href=\"#cdrom_is_random_writable\">cdrom_is_random_writable</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#ram_write\">ram_write</a>);", 
"<span class=\"ts\"/>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mrw\">mrw</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#mask\">mask</a> &= ~<a class=\"id\" href=\"#CDC_MRW\">CDC_MRW</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#mask\">mask</a> |= <a class=\"id\" href=\"#CDC_MRW\">CDC_MRW</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mrw_write\">mrw_write</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#mask\">mask</a> &= ~<a class=\"id\" href=\"#CDC_MRW_W\">CDC_MRW_W</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#mask\">mask</a> |= <a class=\"id\" href=\"#CDC_MRW_W\">CDC_MRW_W</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ram_write\">ram_write</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#mask\">mask</a> &= ~<a class=\"id\" href=\"#CDC_RAM\">CDC_RAM</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#mask\">mask</a> |= <a class=\"id\" href=\"#CDC_RAM\">CDC_RAM</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#CDROM_CAN\">CDROM_CAN</a>(<a class=\"id\" href=\"#CDC_MRW_W\">CDC_MRW_W</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdrom_mrw_open_write\">cdrom_mrw_open_write</a>(<a class=\"id\" href=\"#cdi\">cdi</a>);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#CDROM_CAN\">CDROM_CAN</a>(<a class=\"id\" href=\"#CDC_DVD_RAM\">CDC_DVD_RAM</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdrom_dvdram_open_write\">cdrom_dvdram_open_write</a>(<a class=\"id\" href=\"#cdi\">cdi</a>);", 
" <span class=\"ts\"/>else if (<a class=\"id\" href=\"#CDROM_CAN\">CDROM_CAN</a>(<a class=\"id\" href=\"#CDC_RAM\">CDC_RAM</a>) &&", 
" <span class=\"ts\"/><span class=\"ts\"/> !<a class=\"id\" href=\"#CDROM_CAN\">CDROM_CAN</a>(<a class=\"id\" href=\"#CDC_CD_R\">CDC_CD_R</a>|<a class=\"id\" href=\"#CDC_CD_RW\">CDC_CD_RW</a>|<a class=\"id\" href=\"#CDC_DVD\">CDC_DVD</a>|<a class=\"id\" href=\"#CDC_DVD_R\">CDC_DVD_R</a>|<a class=\"id\" href=\"#CDC_MRW\">CDC_MRW</a>|<a class=\"id\" href=\"#CDC_MO_DRIVE\">CDC_MO_DRIVE</a>))", 
" <span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdrom_ram_open_write\">cdrom_ram_open_write</a>(<a class=\"id\" href=\"#cdi\">cdi</a>);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#CDROM_CAN\">CDROM_CAN</a>(<a class=\"id\" href=\"#CDC_MO_DRIVE\">CDC_MO_DRIVE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#mo_open_write\">mo_open_write</a>(<a class=\"id\" href=\"#cdi\">cdi</a>);", 
"<span class=\"ts\"/>else if (!<a class=\"id\" href=\"#cdrom_is_dvd_rw\">cdrom_is_dvd_rw</a>(<a class=\"id\" href=\"#cdi\">cdi</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#cdrom_dvd_rw_close_write\">cdrom_dvd_rw_close_write</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> <a class=\"id\" href=\"#cgc\">cgc</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#mmc3_profile\">mmc3_profile</a> != 0x1a) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_CLOSE\">CD_CLOSE</a>, \"%s: No DVD+RW\\n\", <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#media_written\">media_written</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_CLOSE\">CD_CLOSE</a>, \"%s: DVD+RW media clean\\n\", <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_info\">pr_info</a>(\"%s: dirty DVD+RW media, \\\"finalizing\\\"\\n\", <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_cdrom_command\">init_cdrom_command</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0, <a class=\"id\" href=\"#CGC_DATA_NONE\">CGC_DATA_NONE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_FLUSH_CACHE\">GPCMD_FLUSH_CACHE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#timeout\">timeout</a> = 30*<a class=\"id\" href=\"#HZ\">HZ</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#generic_packet\">generic_packet</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_cdrom_command\">init_cdrom_command</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0, <a class=\"id\" href=\"#CGC_DATA_NONE\">CGC_DATA_NONE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_CLOSE_TRACK\">GPCMD_CLOSE_TRACK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#timeout\">timeout</a> = 3000*<a class=\"id\" href=\"#HZ\">HZ</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#quiet\">quiet</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#generic_packet\">generic_packet</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_cdrom_command\">init_cdrom_command</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0, <a class=\"id\" href=\"#CGC_DATA_NONE\">CGC_DATA_NONE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_CLOSE_TRACK\">GPCMD_CLOSE_TRACK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[2] = 2;<span class=\"ts\"/> <span class=\"comment\">/* Close session */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#quiet\">quiet</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#timeout\">timeout</a> = 3000*<a class=\"id\" href=\"#HZ\">HZ</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#generic_packet\">generic_packet</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#media_written\">media_written</a> = 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cdrom_close_write\">cdrom_close_write</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>)", 
"{", 
"#if 0", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cdrom_flush_cache\">cdrom_flush_cache</a>(<a class=\"id\" href=\"#cdi\">cdi</a>);", 
"#else", 
"<span class=\"ts\"/>return 0;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"<span class=\"comment\">/* We use the open-option O_NONBLOCK to indicate that the</span>", 
"<span class=\"comment\"> * purpose of opening is only for subsequent ioctl() calls; no device</span>", 
"<span class=\"comment\"> * integrity checks are performed.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We hope that all cd-player programs will adopt this convention. It</span>", 
"<span class=\"comment\"> * is in their own interest: device control becomes a lot easier</span>", 
"<span class=\"comment\"> * this way.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#cdrom_open\">cdrom_open</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>, struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#fmode_t\">fmode_t</a> <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_OPEN\">CD_OPEN</a>, \"entering cdrom_open\\n\"); ", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* if this was a O_NONBLOCK open and we should honor the flags,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * do a quick open without drive/disc integrity checks. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#use_count\">use_count</a>++;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#mode\">mode</a> &amp; <a class=\"id\" href=\"#FMODE_NDELAY\">FMODE_NDELAY</a>) && (<a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#options\">options</a> &amp; <a class=\"id\" href=\"#CDO_USE_FFLAGS\">CDO_USE_FFLAGS</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#open\">open</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, 1);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#open_for_data\">open_for_data</a>(<a class=\"id\" href=\"#cdi\">cdi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdrom_mmc3_profile\">cdrom_mmc3_profile</a>(<a class=\"id\" href=\"#cdi\">cdi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mode\">mode</a> &amp; <a class=\"id\" href=\"#FMODE_WRITE\">FMODE_WRITE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EROFS\">EROFS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cdrom_open_write\">cdrom_open_write</a>(<a class=\"id\" href=\"#cdi\">cdi</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_release\">err_release</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#CDROM_CAN\">CDROM_CAN</a>(<a class=\"id\" href=\"#CDC_RAM\">CDC_RAM</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_release\">err_release</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#media_written\">media_written</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_OPEN\">CD_OPEN</a>, \"Use count for \\\"/dev/%s\\\" now %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#use_count\">use_count</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Do this on open.  Don't wait for mount, because they might</span>", 
"<span class=\"comment\"><span class=\"ts\"/>    not be mounting, but opening with O_NONBLOCK */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#check_disk_change\">check_disk_change</a>(<a class=\"id\" href=\"#bdev\">bdev</a>);", 
"<span class=\"ts\"/>return 0;", 
"<a class=\"id\" href=\"#err_release\">err_release</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#CDROM_CAN\">CDROM_CAN</a>(<a class=\"id\" href=\"#CDC_LOCK\">CDC_LOCK</a>) && <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#options\">options</a> &amp; <a class=\"id\" href=\"#CDO_LOCK\">CDO_LOCK</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#lock_door\">lock_door</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_OPEN\">CD_OPEN</a>, \"door unlocked.\\n\");", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#release\">release</a>(<a class=\"id\" href=\"#cdi\">cdi</a>);", 
"<a class=\"id\" href=\"#err\">err</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#use_count\">use_count</a>--;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static", 
"int <a class=\"id\" href=\"#open_for_data\">open_for_data</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> * <a class=\"id\" href=\"#cdi\">cdi</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cdrom_device_ops\">cdrom_device_ops</a> *<a class=\"id\" href=\"#cdo\">cdo</a> = <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tracktype\">tracktype</a> <a class=\"id\" href=\"#tracks\">tracks</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_OPEN\">CD_OPEN</a>, \"entering open_for_data\\n\");", 
"<span class=\"ts\"/><span class=\"comment\">/* Check if the driver can report drive status.  If it can, we</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   can do clever things.  If it can't, well, we at least tried! */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#drive_status\">drive_status</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#drive_status\">drive_status</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#CDSL_CURRENT\">CDSL_CURRENT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_OPEN\">CD_OPEN</a>, \"drive_status=%d\\n\", <a class=\"id\" href=\"#ret\">ret</a>); ", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> == <a class=\"id\" href=\"#CDS_TRAY_OPEN\">CDS_TRAY_OPEN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_OPEN\">CD_OPEN</a>, \"the tray is open...\\n\"); ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* can/may i close it? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#CDROM_CAN\">CDROM_CAN</a>(<a class=\"id\" href=\"#CDC_CLOSE_TRAY\">CDC_CLOSE_TRAY</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#options\">options</a> &amp; <a class=\"id\" href=\"#CDO_AUTO_CLOSE\">CDO_AUTO_CLOSE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_OPEN\">CD_OPEN</a>, \"trying to close the tray.\\n\"); ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a>=<a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#tray_move\">tray_move</a>(<a class=\"id\" href=\"#cdi\">cdi</a>,0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_OPEN\">CD_OPEN</a>, \"bummer. tried to close the tray but failed.\\n\"); ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Ignore the error from the low</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>level driver.  We don't care why it</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>couldn't close the tray.  We only care </span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>that there is no disc in the drive, </span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>since that is the _REAL_ problem here.*/</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a>=-<a class=\"id\" href=\"#ENOMEDIUM\">ENOMEDIUM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#clean_up_and_return\">clean_up_and_return</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_OPEN\">CD_OPEN</a>, \"bummer. this drive can't close the tray.\\n\"); ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a>=-<a class=\"id\" href=\"#ENOMEDIUM\">ENOMEDIUM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#clean_up_and_return\">clean_up_and_return</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Ok, the door should be closed now.. Check again */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#drive_status\">drive_status</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#CDSL_CURRENT\">CDSL_CURRENT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> == <a class=\"id\" href=\"#CDS_NO_DISC\">CDS_NO_DISC</a>) || (<a class=\"id\" href=\"#ret\">ret</a>==<a class=\"id\" href=\"#CDS_TRAY_OPEN\">CDS_TRAY_OPEN</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_OPEN\">CD_OPEN</a>, \"bummer. the tray is still not closed.\\n\"); ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_OPEN\">CD_OPEN</a>, \"tray might not contain a medium.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a>=-<a class=\"id\" href=\"#ENOMEDIUM\">ENOMEDIUM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#clean_up_and_return\">clean_up_and_return</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_OPEN\">CD_OPEN</a>, \"the tray is now closed.\\n\"); ", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* the door should be closed now, check for the disc */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#drive_status\">drive_status</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#CDSL_CURRENT\">CDSL_CURRENT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>!=<a class=\"id\" href=\"#CDS_DISC_OK\">CDS_DISC_OK</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEDIUM\">ENOMEDIUM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#clean_up_and_return\">clean_up_and_return</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdrom_count_tracks\">cdrom_count_tracks</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#tracks\">tracks</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tracks\">tracks</a>.<a class=\"id\" href=\"#error\">error</a> == <a class=\"id\" href=\"#CDS_NO_DISC\">CDS_NO_DISC</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_OPEN\">CD_OPEN</a>, \"bummer. no disc.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a>=-<a class=\"id\" href=\"#ENOMEDIUM\">ENOMEDIUM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#clean_up_and_return\">clean_up_and_return</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* CD-Players which don't use O_NONBLOCK, workman</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * for example, need bit CDO_CHECK_TYPE cleared! */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tracks\">tracks</a>.<a class=\"id\" href=\"#data\">data</a>==0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#options\">options</a> &amp; <a class=\"id\" href=\"#CDO_CHECK_TYPE\">CDO_CHECK_TYPE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>    <span class=\"comment\">/* give people a warning shot, now that CDO_CHECK_TYPE</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>       is the default case! */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_OPEN\">CD_OPEN</a>, \"bummer. wrong media type.\\n\"); ", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_WARNING\">CD_WARNING</a>, \"pid %d must open device O_NONBLOCK!\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned int)<a class=\"id\" href=\"#task_pid_nr\">task_pid_nr</a>(<a class=\"id\" href=\"#current\">current</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ret\">ret</a>=-<a class=\"id\" href=\"#EMEDIUMTYPE\">EMEDIUMTYPE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>    goto <a class=\"id\" href=\"#clean_up_and_return\">clean_up_and_return</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_OPEN\">CD_OPEN</a>, \"wrong media type, but CDO_CHECK_TYPE not set.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_OPEN\">CD_OPEN</a>, \"all seems well, opening the device.\\n\"); ", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* all seems well, we can open the device */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#open\">open</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, 0); <span class=\"comment\">/* open for data */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_OPEN\">CD_OPEN</a>, \"opening the device gave me %d.\\n\", <a class=\"id\" href=\"#ret\">ret</a>); ", 
"<span class=\"ts\"/><span class=\"comment\">/* After all this careful checking, we shouldn't have problems</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   opening the device, but we don't want the device locked if </span>", 
"<span class=\"comment\"><span class=\"ts\"/>   this somehow fails... */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_OPEN\">CD_OPEN</a>, \"open device failed.\\n\"); ", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#clean_up_and_return\">clean_up_and_return</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#CDROM_CAN\">CDROM_CAN</a>(<a class=\"id\" href=\"#CDC_LOCK\">CDC_LOCK</a>) && (<a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#options\">options</a> &amp; <a class=\"id\" href=\"#CDO_LOCK\">CDO_LOCK</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#lock_door\">lock_door</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_OPEN\">CD_OPEN</a>, \"door locked.\\n\");", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_OPEN\">CD_OPEN</a>, \"device opened successfully.\\n\"); ", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Something failed.  Try to unlock the drive, because some drivers</span>", 
"<span class=\"comment\"><span class=\"ts\"/>(notably ide-cd) lock the drive after every command.  This produced</span>", 
"<span class=\"comment\"><span class=\"ts\"/>a nasty bug where after mount failed, the drive would remain locked!  </span>", 
"<span class=\"comment\"><span class=\"ts\"/>This ensures that the drive gets unlocked after a mount fails.  This </span>", 
"<span class=\"comment\"><span class=\"ts\"/>is a goto to avoid bloating the driver with redundant code. */</span> ", 
"<a class=\"id\" href=\"#clean_up_and_return\">clean_up_and_return</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_OPEN\">CD_OPEN</a>, \"open failed.\\n\"); ", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#CDROM_CAN\">CDROM_CAN</a>(<a class=\"id\" href=\"#CDC_LOCK\">CDC_LOCK</a>) && <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#options\">options</a> &amp; <a class=\"id\" href=\"#CDO_LOCK\">CDO_LOCK</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#lock_door\">lock_door</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_OPEN\">CD_OPEN</a>, \"door unlocked.\\n\");", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/* This code is similar to that in open_for_data. The routine is called</span>", 
"<span class=\"comment\">   whenever an audio play operation is requested.</span>", 
"<span class=\"comment\">*/</span>", 
"static int <a class=\"id\" href=\"#check_for_audio_disc\">check_for_audio_disc</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> * <a class=\"id\" href=\"#cdi\">cdi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#cdrom_device_ops\">cdrom_device_ops</a> * <a class=\"id\" href=\"#cdo\">cdo</a>)", 
"{", 
"        int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tracktype\">tracktype</a> <a class=\"id\" href=\"#tracks\">tracks</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_OPEN\">CD_OPEN</a>, \"entering check_for_audio_disc\\n\");", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#options\">options</a> &amp; <a class=\"id\" href=\"#CDO_CHECK_TYPE\">CDO_CHECK_TYPE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#drive_status\">drive_status</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#drive_status\">drive_status</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#CDSL_CURRENT\">CDSL_CURRENT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_OPEN\">CD_OPEN</a>, \"drive_status=%d\\n\", <a class=\"id\" href=\"#ret\">ret</a>); ", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> == <a class=\"id\" href=\"#CDS_TRAY_OPEN\">CDS_TRAY_OPEN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_OPEN\">CD_OPEN</a>, \"the tray is open...\\n\"); ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* can/may i close it? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#CDROM_CAN\">CDROM_CAN</a>(<a class=\"id\" href=\"#CDC_CLOSE_TRAY\">CDC_CLOSE_TRAY</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#options\">options</a> &amp; <a class=\"id\" href=\"#CDO_AUTO_CLOSE\">CDO_AUTO_CLOSE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_OPEN\">CD_OPEN</a>, \"trying to close the tray.\\n\"); ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a>=<a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#tray_move\">tray_move</a>(<a class=\"id\" href=\"#cdi\">cdi</a>,0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_OPEN\">CD_OPEN</a>, \"bummer. tried to close tray but failed.\\n\"); ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Ignore the error from the low</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>level driver.  We don't care why it</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>couldn't close the tray.  We only care </span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>that there is no disc in the drive, </span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>since that is the _REAL_ problem here.*/</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEDIUM\">ENOMEDIUM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_OPEN\">CD_OPEN</a>, \"bummer. this driver can't close the tray.\\n\"); ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEDIUM\">ENOMEDIUM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Ok, the door should be closed now.. Check again */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#drive_status\">drive_status</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#CDSL_CURRENT\">CDSL_CURRENT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> == <a class=\"id\" href=\"#CDS_NO_DISC\">CDS_NO_DISC</a>) || (<a class=\"id\" href=\"#ret\">ret</a>==<a class=\"id\" href=\"#CDS_TRAY_OPEN\">CDS_TRAY_OPEN</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_OPEN\">CD_OPEN</a>, \"bummer. the tray is still not closed.\\n\"); ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEDIUM\">ENOMEDIUM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}<span class=\"ts\"/>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>!=<a class=\"id\" href=\"#CDS_DISC_OK\">CDS_DISC_OK</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_OPEN\">CD_OPEN</a>, \"bummer. disc isn't ready.\\n\"); ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}<span class=\"ts\"/>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_OPEN\">CD_OPEN</a>, \"the tray is now closed.\\n\"); ", 
"<span class=\"ts\"/><span class=\"ts\"/>}<span class=\"ts\"/>", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdrom_count_tracks\">cdrom_count_tracks</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#tracks\">tracks</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tracks\">tracks</a>.<a class=\"id\" href=\"#error\">error</a>) ", 
"<span class=\"ts\"/><span class=\"ts\"/>return(<a class=\"id\" href=\"#tracks\">tracks</a>.<a class=\"id\" href=\"#error\">error</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tracks\">tracks</a>.<a class=\"id\" href=\"#audio\">audio</a>==0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EMEDIUMTYPE\">EMEDIUMTYPE</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"void <a class=\"id\" href=\"#cdrom_release\">cdrom_release</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#fmode_t\">fmode_t</a> <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cdrom_device_ops\">cdrom_device_ops</a> *<a class=\"id\" href=\"#cdo\">cdo</a> = <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#opened_for_data\">opened_for_data</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_CLOSE\">CD_CLOSE</a>, \"entering cdrom_release\\n\");", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#use_count\">use_count</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#use_count\">use_count</a>--;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#use_count\">use_count</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_CLOSE\">CD_CLOSE</a>, \"Use count for \\\"/dev/%s\\\" now zero\\n\", <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdrom_dvd_rw_close_write\">cdrom_dvd_rw_close_write</a>(<a class=\"id\" href=\"#cdi\">cdi</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#capability\">capability</a> &amp; <a class=\"id\" href=\"#CDC_LOCK\">CDC_LOCK</a>) && !<a class=\"id\" href=\"#keeplocked\">keeplocked</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_CLOSE\">CD_CLOSE</a>, \"Unlocking door!\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#lock_door\">lock_door</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#opened_for_data\">opened_for_data</a> = !(<a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#options\">options</a> &amp; <a class=\"id\" href=\"#CDO_USE_FFLAGS\">CDO_USE_FFLAGS</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>!(<a class=\"id\" href=\"#mode\">mode</a> &amp; <a class=\"id\" href=\"#FMODE_NDELAY\">FMODE_NDELAY</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * flush cache on last write release</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#CDROM_CAN\">CDROM_CAN</a>(<a class=\"id\" href=\"#CDC_RAM\">CDC_RAM</a>) && !<a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#use_count\">use_count</a> && <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#for_data\">for_data</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdrom_close_write\">cdrom_close_write</a>(<a class=\"id\" href=\"#cdi\">cdi</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#release\">release</a>(<a class=\"id\" href=\"#cdi\">cdi</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#use_count\">use_count</a> == 0) {      <span class=\"comment\">/* last process that closes dev*/</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#opened_for_data\">opened_for_data</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#options\">options</a> &amp; <a class=\"id\" href=\"#CDO_AUTO_EJECT\">CDO_AUTO_EJECT</a> && <a class=\"id\" href=\"#CDROM_CAN\">CDROM_CAN</a>(<a class=\"id\" href=\"#CDC_OPEN_TRAY\">CDC_OPEN_TRAY</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#tray_move\">tray_move</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, 1);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cdrom_read_mech_status\">cdrom_read_mech_status</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>, ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#cdrom_changer_info\">cdrom_changer_info</a> *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> <a class=\"id\" href=\"#cgc\">cgc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cdrom_device_ops\">cdrom_device_ops</a> *<a class=\"id\" href=\"#cdo\">cdo</a> = <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#length\">length</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Sanyo changer isn't spec compliant (doesn't use regular change</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * LOAD_UNLOAD command, and it doesn't implement the mech status</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * command below</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#sanyo_slot\">sanyo_slot</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#nslots\">nslots</a> = 3;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#curslot\">curslot</a> = <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#sanyo_slot\">sanyo_slot</a> == 3 ? 0 : <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#sanyo_slot\">sanyo_slot</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#length\">length</a> = 0; <a class=\"id\" href=\"#length\">length</a> &lt; 3; <a class=\"id\" href=\"#length\">length</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#slots\">slots</a>[<a class=\"id\" href=\"#length\">length</a>].<a class=\"id\" href=\"#disc_present\">disc_present</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#slots\">slots</a>[<a class=\"id\" href=\"#length\">length</a>].<a class=\"id\" href=\"#change\">change</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> = sizeof(struct <a class=\"id\" href=\"#cdrom_mechstat_header\">cdrom_mechstat_header</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#capacity\">capacity</a> * sizeof(struct <a class=\"id\" href=\"#cdrom_slot\">cdrom_slot</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_cdrom_command\">init_cdrom_command</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#length\">length</a>, <a class=\"id\" href=\"#CGC_DATA_READ\">CGC_DATA_READ</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_MECHANISM_STATUS\">GPCMD_MECHANISM_STATUS</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[8] = (<a class=\"id\" href=\"#length\">length</a> >> 8) &amp; 0xff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[9] = <a class=\"id\" href=\"#length\">length</a> &amp; 0xff;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#generic_packet\">generic_packet</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cdrom_slot_status\">cdrom_slot_status</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>, int <a class=\"id\" href=\"#slot\">slot</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cdrom_changer_info\">cdrom_changer_info</a> *<a class=\"id\" href=\"#info\">info</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_CHANGER\">CD_CHANGER</a>, \"entering cdrom_slot_status()\\n\"); ", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#sanyo_slot\">sanyo_slot</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#CDS_NO_INFO\">CDS_NO_INFO</a>;", 
"<span class=\"ts\"/>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#info\">info</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#info\">info</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdrom_read_mech_status\">cdrom_read_mech_status</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#info\">info</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free\">out_free</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#slots\">slots</a>[<a class=\"id\" href=\"#slot\">slot</a>].<a class=\"id\" href=\"#disc_present\">disc_present</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#CDS_DISC_OK\">CDS_DISC_OK</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#CDS_NO_DISC\">CDS_NO_DISC</a>;", 
"", 
"<a class=\"id\" href=\"#out_free\">out_free</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#info\">info</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Return the number of slots for an ATAPI/SCSI cdrom, </span>", 
"<span class=\"comment\"> * return 1 if not a changer. </span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#cdrom_number_of_slots\">cdrom_number_of_slots</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>) ", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nslots\">nslots</a> = 1;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cdrom_changer_info\">cdrom_changer_info</a> *<a class=\"id\" href=\"#info\">info</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_CHANGER\">CD_CHANGER</a>, \"entering cdrom_number_of_slots()\\n\"); ", 
"<span class=\"ts\"/><span class=\"comment\">/* cdrom_read_mech_status requires a valid value for capacity: */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#capacity\">capacity</a> = 0; ", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#info\">info</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#info\">info</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#cdrom_read_mech_status\">cdrom_read_mech_status</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#info\">info</a>)) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nslots\">nslots</a> = <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#nslots\">nslots</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#info\">info</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nslots\">nslots</a>;", 
"}", 
"", 
"", 
"<span class=\"comment\">/* If SLOT &lt; 0, unload the current slot.  Otherwise, try to load SLOT. */</span>", 
"static int <a class=\"id\" href=\"#cdrom_load_unload\">cdrom_load_unload</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>, int <a class=\"id\" href=\"#slot\">slot</a>) ", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> <a class=\"id\" href=\"#cgc\">cgc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_CHANGER\">CD_CHANGER</a>, \"entering cdrom_load_unload()\\n\"); ", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#sanyo_slot\">sanyo_slot</a> && <a class=\"id\" href=\"#slot\">slot</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_cdrom_command\">init_cdrom_command</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0, <a class=\"id\" href=\"#CGC_DATA_NONE\">CGC_DATA_NONE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_LOAD_UNLOAD\">GPCMD_LOAD_UNLOAD</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[4] = 2 + (<a class=\"id\" href=\"#slot\">slot</a> >= 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[8] = <a class=\"id\" href=\"#slot\">slot</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#timeout\">timeout</a> = 60 * <a class=\"id\" href=\"#HZ\">HZ</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* The Sanyo 3 CD changer uses byte 7 of the </span>", 
"<span class=\"comment\"><span class=\"ts\"/>GPCMD_TEST_UNIT_READY to command to switch CDs instead of</span>", 
"<span class=\"comment\"><span class=\"ts\"/>using the GPCMD_LOAD_UNLOAD opcode. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#sanyo_slot\">sanyo_slot</a> && -1 &lt; <a class=\"id\" href=\"#slot\">slot</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_TEST_UNIT_READY\">GPCMD_TEST_UNIT_READY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[7] = <a class=\"id\" href=\"#slot\">slot</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[4] = <a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[8] = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#sanyo_slot\">sanyo_slot</a> = <a class=\"id\" href=\"#slot\">slot</a> ? <a class=\"id\" href=\"#slot\">slot</a> : 3;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#generic_packet\">generic_packet</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cdrom_select_disc\">cdrom_select_disc</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>, int <a class=\"id\" href=\"#slot\">slot</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cdrom_changer_info\">cdrom_changer_info</a> *<a class=\"id\" href=\"#info\">info</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#curslot\">curslot</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_CHANGER\">CD_CHANGER</a>, \"entering cdrom_select_disc()\\n\"); ", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#CDROM_CAN\">CDROM_CAN</a>(<a class=\"id\" href=\"#CDC_SELECT_DISC\">CDC_SELECT_DISC</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EDRIVE_CANT_DO_THIS\">EDRIVE_CANT_DO_THIS</a>;", 
"", 
"<span class=\"ts\"/>(void) <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#media_changed\">media_changed</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#slot\">slot</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#slot\">slot</a> == <a class=\"id\" href=\"#CDSL_NONE\">CDSL_NONE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* set media changed bits, on both queues */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#mc_flags\">mc_flags</a> = 0x3;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#cdrom_load_unload\">cdrom_load_unload</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, -1);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#info\">info</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#info\">info</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdrom_read_mech_status\">cdrom_read_mech_status</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#info\">info</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#info\">info</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#curslot\">curslot</a> = <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#curslot\">curslot</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#info\">info</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#use_count\">use_count</a> &gt; 1 || <a class=\"id\" href=\"#keeplocked\">keeplocked</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#slot\">slot</a> == <a class=\"id\" href=\"#CDSL_CURRENT\">CDSL_CURRENT</a>) {", 
"<span class=\"ts\"/>    <span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#curslot\">curslot</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Specifying CDSL_CURRENT will attempt to load the currnet slot,</span>", 
"<span class=\"comment\"><span class=\"ts\"/>which is useful if it had been previously unloaded.</span>", 
"<span class=\"comment\"><span class=\"ts\"/>Whether it can or not, it returns the current slot. </span>", 
"<span class=\"comment\"><span class=\"ts\"/>Similarly,  if slot happens to be the current one, we still</span>", 
"<span class=\"comment\"><span class=\"ts\"/>try and load it. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#slot\">slot</a> == <a class=\"id\" href=\"#CDSL_CURRENT\">CDSL_CURRENT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#slot\">slot</a> = <a class=\"id\" href=\"#curslot\">curslot</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* set media changed bits on both queues */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#mc_flags\">mc_flags</a> = 0x3;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdrom_load_unload\">cdrom_load_unload</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#slot\">slot</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#slot\">slot</a>;", 
"}", 
"", 
"<span class=\"comment\">/* We want to make media_changed accessible to the user through an</span>", 
"<span class=\"comment\"> * ioctl. The main problem now is that we must double-buffer the</span>", 
"<span class=\"comment\"> * low-level implementation, to assure that the VFS and the user both</span>", 
"<span class=\"comment\"> * see a medium change once.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static", 
"int <a class=\"id\" href=\"#media_changed\">media_changed</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>, int <a class=\"id\" href=\"#queue\">queue</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#mask\">mask</a> = (1 << (<a class=\"id\" href=\"#queue\">queue</a> &amp; 1));", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = !!(<a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#mc_flags\">mc_flags</a> &amp; <a class=\"id\" href=\"#mask\">mask</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#CDROM_CAN\">CDROM_CAN</a>(<a class=\"id\" href=\"#CDC_MEDIA_CHANGED\">CDC_MEDIA_CHANGED</a>))", 
"<span class=\"ts\"/>    return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* changed since last call? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#media_changed\">media_changed</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#CDSL_CURRENT\">CDSL_CURRENT</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#mc_flags\">mc_flags</a> = 0x3;    <span class=\"comment\">/* set bit on both queues */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> |= 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#media_written\">media_written</a> = 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#mc_flags\">mc_flags</a> &= ~<a class=\"id\" href=\"#mask\">mask</a>;         <span class=\"comment\">/* clear bit */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#cdrom_media_changed\">cdrom_media_changed</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* This talks to the VFS, which doesn't like errors - just 1 or 0.  </span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Returning \"0\" is always safe (media hasn't been changed). Do that </span>", 
"<span class=\"comment\"><span class=\"ts\"/> * if the low-level cdrom driver dosn't support media changed. */</span> ", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cdi\">cdi</a> == <a class=\"id\" href=\"#NULL\">NULL</a> || <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#media_changed\">media_changed</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#CDROM_CAN\">CDROM_CAN</a>(<a class=\"id\" href=\"#CDC_MEDIA_CHANGED\">CDC_MEDIA_CHANGED</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#media_changed\">media_changed</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, 0);", 
"}", 
"", 
"<span class=\"comment\">/* badly broken, I know. Is due for a fixup anytime. */</span>", 
"static void <a class=\"id\" href=\"#cdrom_count_tracks\">cdrom_count_tracks</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#tracktype\">tracktype</a>* <a class=\"id\" href=\"#tracks\">tracks</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cdrom_tochdr\">cdrom_tochdr</a> <a class=\"id\" href=\"#header\">header</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cdrom_tocentry\">cdrom_tocentry</a> <a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tracks\">tracks</a>-><a class=\"id\" href=\"#data\">data</a>=0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tracks\">tracks</a>-><a class=\"id\" href=\"#audio\">audio</a>=0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tracks\">tracks</a>-><a class=\"id\" href=\"#cdi\">cdi</a>=0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tracks\">tracks</a>-><a class=\"id\" href=\"#xa\">xa</a>=0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tracks\">tracks</a>-><a class=\"id\" href=\"#error\">error</a>=0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_COUNT_TRACKS\">CD_COUNT_TRACKS</a>, \"entering cdrom_count_tracks\\n\"); ", 
"<span class=\"ts\"/><span class=\"comment\">/* Grab the TOC header so we can see how many tracks there are */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#audio_ioctl\">audio_ioctl</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#CDROMREADTOCHDR\">CDROMREADTOCHDR</a>, &amp;<a class=\"id\" href=\"#header\">header</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> == -<a class=\"id\" href=\"#ENOMEDIUM\">ENOMEDIUM</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tracks\">tracks</a>-><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#CDS_NO_DISC\">CDS_NO_DISC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tracks\">tracks</a>-><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#CDS_NO_INFO\">CDS_NO_INFO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}<span class=\"ts\"/>", 
"<span class=\"ts\"/><span class=\"comment\">/* check what type of tracks are on this disc */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>.<a class=\"id\" href=\"#cdte_format\">cdte_format</a> = <a class=\"id\" href=\"#CDROM_MSF\">CDROM_MSF</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#header\">header</a>.<a class=\"id\" href=\"#cdth_trk0\">cdth_trk0</a>; <a class=\"id\" href=\"#i\">i</a> <= <a class=\"id\" href=\"#header\">header</a>.<a class=\"id\" href=\"#cdth_trk1\">cdth_trk1</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>.<a class=\"id\" href=\"#cdte_track\">cdte_track</a>  = <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#audio_ioctl\">audio_ioctl</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#CDROMREADTOCENTRY\">CDROMREADTOCENTRY</a>, &amp;<a class=\"id\" href=\"#entry\">entry</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tracks\">tracks</a>-><a class=\"id\" href=\"#error\">error</a>=<a class=\"id\" href=\"#CDS_NO_INFO\">CDS_NO_INFO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}<span class=\"ts\"/>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#entry\">entry</a>.<a class=\"id\" href=\"#cdte_ctrl\">cdte_ctrl</a> &amp; <a class=\"id\" href=\"#CDROM_DATA_TRACK\">CDROM_DATA_TRACK</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>    if (<a class=\"id\" href=\"#entry\">entry</a>.<a class=\"id\" href=\"#cdte_format\">cdte_format</a> == 0x10)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tracks\">tracks</a>-><a class=\"id\" href=\"#cdi\">cdi</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>    else if (<a class=\"id\" href=\"#entry\">entry</a>.<a class=\"id\" href=\"#cdte_format\">cdte_format</a> == 0x20) ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tracks\">tracks</a>-><a class=\"id\" href=\"#xa\">xa</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>    else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tracks\">tracks</a>-><a class=\"id\" href=\"#data\">data</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#tracks\">tracks</a>-><a class=\"id\" href=\"#audio\">audio</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_COUNT_TRACKS\">CD_COUNT_TRACKS</a>, \"track %d: format=%d, ctrl=%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#entry\">entry</a>.<a class=\"id\" href=\"#cdte_format\">cdte_format</a>, <a class=\"id\" href=\"#entry\">entry</a>.<a class=\"id\" href=\"#cdte_ctrl\">cdte_ctrl</a>);", 
"<span class=\"ts\"/>}<span class=\"ts\"/>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_COUNT_TRACKS\">CD_COUNT_TRACKS</a>, \"disc has %d tracks: %d=audio %d=data %d=Cd-I %d=XA\\n\", ", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#header\">header</a>.<a class=\"id\" href=\"#cdth_trk1\">cdth_trk1</a>, <a class=\"id\" href=\"#tracks\">tracks</a>-><a class=\"id\" href=\"#audio\">audio</a>, <a class=\"id\" href=\"#tracks\">tracks</a>-><a class=\"id\" href=\"#data\">data</a>, ", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tracks\">tracks</a>-><a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#tracks\">tracks</a>-><a class=\"id\" href=\"#xa\">xa</a>);", 
"}<span class=\"ts\"/>", 
"", 
"<span class=\"comment\">/* Requests to the low-level drivers will /always/ be done in the</span>", 
"<span class=\"comment\">   following format convention:</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   CDROM_LBA: all data-related requests.</span>", 
"<span class=\"comment\">   CDROM_MSF: all audio-related requests.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   However, a low-level implementation is allowed to refuse this</span>", 
"<span class=\"comment\">   request, and return information in its own favorite format.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   It doesn't make sense /at all/ to ask for a play_audio in LBA</span>", 
"<span class=\"comment\">   format, or ask for multi-session info in MSF format. However, for</span>", 
"<span class=\"comment\">   backward compatibility these format requests will be satisfied, but</span>", 
"<span class=\"comment\">   the requests to the low-level drivers will be sanitized in the more</span>", 
"<span class=\"comment\">   meaningful format indicated above.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static", 
"void <a class=\"id\" href=\"#sanitize_format\">sanitize_format</a>(union <a class=\"id\" href=\"#cdrom_addr\">cdrom_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#u_char\">u_char</a> * <a class=\"id\" href=\"#curr\">curr</a>, <a class=\"id\" href=\"#u_char\">u_char</a> <a class=\"id\" href=\"#requested\">requested</a>)", 
"{", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#curr\">curr</a> == <a class=\"id\" href=\"#requested\">requested</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;                 <span class=\"comment\">/* nothing to be done! */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#requested\">requested</a> == <a class=\"id\" href=\"#CDROM_LBA\">CDROM_LBA</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#lba\">lba</a> = (int) <a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#msf\">msf</a>.<a class=\"id\" href=\"#frame\">frame</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>75 * (<a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#msf\">msf</a>.<a class=\"id\" href=\"#second\">second</a> - 2 + 60 * <a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#msf\">msf</a>.<a class=\"id\" href=\"#minute\">minute</a>);", 
"<span class=\"ts\"/>} else {                        <span class=\"comment\">/* CDROM_MSF */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#lba\">lba</a> = <a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#lba\">lba</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#msf\">msf</a>.<a class=\"id\" href=\"#frame\">frame</a> = <a class=\"id\" href=\"#lba\">lba</a> % 75;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lba\">lba</a> /= 75;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lba\">lba</a> += 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#msf\">msf</a>.<a class=\"id\" href=\"#second\">second</a> = <a class=\"id\" href=\"#lba\">lba</a> % 60;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#msf\">msf</a>.<a class=\"id\" href=\"#minute\">minute</a> = <a class=\"id\" href=\"#lba\">lba</a> / 60;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#curr\">curr</a> = <a class=\"id\" href=\"#requested\">requested</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#init_cdrom_command\">init_cdrom_command</a>(struct <a class=\"id\" href=\"#packet_command\">packet_command</a> *<a class=\"id\" href=\"#cgc\">cgc</a>, void *<a class=\"id\" href=\"#buf\">buf</a>, int <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#cgc\">cgc</a>, 0, sizeof(struct <a class=\"id\" href=\"#packet_command\">packet_command</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#buf\">buf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#buf\">buf</a>, 0, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#buffer\">buffer</a> = (char *) <a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#buflen\">buflen</a> = <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#data_direction\">data_direction</a> = <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#timeout\">timeout</a> = <a class=\"id\" href=\"#CDROM_DEF_TIMEOUT\">CDROM_DEF_TIMEOUT</a>;", 
"}", 
"", 
"<span class=\"comment\">/* DVD handling */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#copy_key\">copy_key</a>(<a class=\"id\" href=\"#dest\">dest</a>,<a class=\"id\" href=\"#src\">src</a>)<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>((<a class=\"id\" href=\"#dest\">dest</a>), (<a class=\"id\" href=\"#src\">src</a>), sizeof(<a class=\"id\" href=\"#dvd_key\">dvd_key</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#copy_chal\">copy_chal</a>(<a class=\"id\" href=\"#dest\">dest</a>,<a class=\"id\" href=\"#src\">src</a>)<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>((<a class=\"id\" href=\"#dest\">dest</a>), (<a class=\"id\" href=\"#src\">src</a>), sizeof(<a class=\"id\" href=\"#dvd_challenge\">dvd_challenge</a>))", 
"", 
"static void <a class=\"id\" href=\"#setup_report_key\">setup_report_key</a>(struct <a class=\"id\" href=\"#packet_command\">packet_command</a> *<a class=\"id\" href=\"#cgc\">cgc</a>, unsigned <a class=\"id\" href=\"#agid\">agid</a>, unsigned <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_REPORT_KEY\">GPCMD_REPORT_KEY</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[10] = <a class=\"id\" href=\"#type\">type</a> | (<a class=\"id\" href=\"#agid\">agid</a> << 6);", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case 0: case 8: case 5: {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#buflen\">buflen</a> = 8;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>case 1: {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#buflen\">buflen</a> = 16;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>case 2: case 4: {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#buflen\">buflen</a> = 12;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[9] = <a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#buflen\">buflen</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#data_direction\">data_direction</a> = <a class=\"id\" href=\"#CGC_DATA_READ\">CGC_DATA_READ</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#setup_send_key\">setup_send_key</a>(struct <a class=\"id\" href=\"#packet_command\">packet_command</a> *<a class=\"id\" href=\"#cgc\">cgc</a>, unsigned <a class=\"id\" href=\"#agid\">agid</a>, unsigned <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_SEND_KEY\">GPCMD_SEND_KEY</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[10] = <a class=\"id\" href=\"#type\">type</a> | (<a class=\"id\" href=\"#agid\">agid</a> << 6);", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case 1: {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#buflen\">buflen</a> = 16;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>case 3: {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#buflen\">buflen</a> = 12;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>case 6: {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#buflen\">buflen</a> = 8;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[9] = <a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#buflen\">buflen</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#data_direction\">data_direction</a> = <a class=\"id\" href=\"#CGC_DATA_WRITE\">CGC_DATA_WRITE</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#dvd_do_auth\">dvd_do_auth</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#dvd_authinfo\">dvd_authinfo</a> *<a class=\"id\" href=\"#ai\">ai</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u_char\">u_char</a> <a class=\"id\" href=\"#buf\">buf</a>[20];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> <a class=\"id\" href=\"#cgc\">cgc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cdrom_device_ops\">cdrom_device_ops</a> *<a class=\"id\" href=\"#cdo\">cdo</a> = <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rpc_state_t\">rpc_state_t</a> <a class=\"id\" href=\"#rpc_state\">rpc_state</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#buf\">buf</a>, 0, sizeof(<a class=\"id\" href=\"#buf\">buf</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_cdrom_command\">init_cdrom_command</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#buf\">buf</a>, 0, <a class=\"id\" href=\"#CGC_DATA_READ\">CGC_DATA_READ</a>);", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#ai\">ai</a>-><a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/><span class=\"comment\">/* LU data send */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DVD_LU_SEND_AGID\">DVD_LU_SEND_AGID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_DVD\">CD_DVD</a>, \"entering DVD_LU_SEND_AGID\\n\"); ", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#quiet\">quiet</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#setup_report_key\">setup_report_key</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#ai\">ai</a>-><a class=\"id\" href=\"#lsa\">lsa</a>.<a class=\"id\" href=\"#agid\">agid</a>, 0);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#generic_packet\">generic_packet</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ai\">ai</a>-><a class=\"id\" href=\"#lsa\">lsa</a>.<a class=\"id\" href=\"#agid\">agid</a> = <a class=\"id\" href=\"#buf\">buf</a>[7] >> 6;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Returning data, let host change state */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DVD_LU_SEND_KEY1\">DVD_LU_SEND_KEY1</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_DVD\">CD_DVD</a>, \"entering DVD_LU_SEND_KEY1\\n\"); ", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#setup_report_key\">setup_report_key</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#ai\">ai</a>-><a class=\"id\" href=\"#lsk\">lsk</a>.<a class=\"id\" href=\"#agid\">agid</a>, 2);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#generic_packet\">generic_packet</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copy_key\">copy_key</a>(<a class=\"id\" href=\"#ai\">ai</a>-><a class=\"id\" href=\"#lsk\">lsk</a>.<a class=\"id\" href=\"#key\">key</a>, &amp;<a class=\"id\" href=\"#buf\">buf</a>[4]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Returning data, let host change state */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DVD_LU_SEND_CHALLENGE\">DVD_LU_SEND_CHALLENGE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_DVD\">CD_DVD</a>, \"entering DVD_LU_SEND_CHALLENGE\\n\"); ", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#setup_report_key\">setup_report_key</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#ai\">ai</a>-><a class=\"id\" href=\"#lsc\">lsc</a>.<a class=\"id\" href=\"#agid\">agid</a>, 1);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#generic_packet\">generic_packet</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copy_chal\">copy_chal</a>(<a class=\"id\" href=\"#ai\">ai</a>-><a class=\"id\" href=\"#lsc\">lsc</a>.<a class=\"id\" href=\"#chal\">chal</a>, &amp;<a class=\"id\" href=\"#buf\">buf</a>[4]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Returning data, let host change state */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Post-auth key */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DVD_LU_SEND_TITLE_KEY\">DVD_LU_SEND_TITLE_KEY</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_DVD\">CD_DVD</a>, \"entering DVD_LU_SEND_TITLE_KEY\\n\"); ", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#quiet\">quiet</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#setup_report_key\">setup_report_key</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#ai\">ai</a>-><a class=\"id\" href=\"#lstk\">lstk</a>.<a class=\"id\" href=\"#agid\">agid</a>, 4);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[5] = <a class=\"id\" href=\"#ai\">ai</a>-><a class=\"id\" href=\"#lstk\">lstk</a>.<a class=\"id\" href=\"#lba\">lba</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[4] = <a class=\"id\" href=\"#ai\">ai</a>-><a class=\"id\" href=\"#lstk\">lstk</a>.<a class=\"id\" href=\"#lba\">lba</a> >> 8;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[3] = <a class=\"id\" href=\"#ai\">ai</a>-><a class=\"id\" href=\"#lstk\">lstk</a>.<a class=\"id\" href=\"#lba\">lba</a> >> 16;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[2] = <a class=\"id\" href=\"#ai\">ai</a>-><a class=\"id\" href=\"#lstk\">lstk</a>.<a class=\"id\" href=\"#lba\">lba</a> >> 24;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#generic_packet\">generic_packet</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ai\">ai</a>-><a class=\"id\" href=\"#lstk\">lstk</a>.<a class=\"id\" href=\"#cpm\">cpm</a> = (<a class=\"id\" href=\"#buf\">buf</a>[4] >> 7) &amp; 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ai\">ai</a>-><a class=\"id\" href=\"#lstk\">lstk</a>.<a class=\"id\" href=\"#cp_sec\">cp_sec</a> = (<a class=\"id\" href=\"#buf\">buf</a>[4] >> 6) &amp; 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ai\">ai</a>-><a class=\"id\" href=\"#lstk\">lstk</a>.<a class=\"id\" href=\"#cgms\">cgms</a> = (<a class=\"id\" href=\"#buf\">buf</a>[4] >> 4) &amp; 3;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copy_key\">copy_key</a>(<a class=\"id\" href=\"#ai\">ai</a>-><a class=\"id\" href=\"#lstk\">lstk</a>.<a class=\"id\" href=\"#title_key\">title_key</a>, &amp;<a class=\"id\" href=\"#buf\">buf</a>[5]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Returning data, let host change state */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DVD_LU_SEND_ASF\">DVD_LU_SEND_ASF</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_DVD\">CD_DVD</a>, \"entering DVD_LU_SEND_ASF\\n\"); ", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#setup_report_key\">setup_report_key</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#ai\">ai</a>-><a class=\"id\" href=\"#lsasf\">lsasf</a>.<a class=\"id\" href=\"#agid\">agid</a>, 5);", 
"<span class=\"ts\"/><span class=\"ts\"/>", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#generic_packet\">generic_packet</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ai\">ai</a>-><a class=\"id\" href=\"#lsasf\">lsasf</a>.<a class=\"id\" href=\"#asf\">asf</a> = <a class=\"id\" href=\"#buf\">buf</a>[7] &amp; 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* LU data receive (LU changes state) */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DVD_HOST_SEND_CHALLENGE\">DVD_HOST_SEND_CHALLENGE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_DVD\">CD_DVD</a>, \"entering DVD_HOST_SEND_CHALLENGE\\n\"); ", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#setup_send_key\">setup_send_key</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#ai\">ai</a>-><a class=\"id\" href=\"#hsc\">hsc</a>.<a class=\"id\" href=\"#agid\">agid</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>[1] = 0xe;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copy_chal\">copy_chal</a>(&amp;<a class=\"id\" href=\"#buf\">buf</a>[4], <a class=\"id\" href=\"#ai\">ai</a>-><a class=\"id\" href=\"#hsc\">hsc</a>.<a class=\"id\" href=\"#chal\">chal</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#generic_packet\">generic_packet</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ai\">ai</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#DVD_LU_SEND_KEY1\">DVD_LU_SEND_KEY1</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DVD_HOST_SEND_KEY2\">DVD_HOST_SEND_KEY2</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_DVD\">CD_DVD</a>, \"entering DVD_HOST_SEND_KEY2\\n\"); ", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#setup_send_key\">setup_send_key</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#ai\">ai</a>-><a class=\"id\" href=\"#hsk\">hsk</a>.<a class=\"id\" href=\"#agid\">agid</a>, 3);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>[1] = 0xa;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copy_key\">copy_key</a>(&amp;<a class=\"id\" href=\"#buf\">buf</a>[4], <a class=\"id\" href=\"#ai\">ai</a>-><a class=\"id\" href=\"#hsk\">hsk</a>.<a class=\"id\" href=\"#key\">key</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#generic_packet\">generic_packet</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ai\">ai</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#DVD_AUTH_FAILURE\">DVD_AUTH_FAILURE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ai\">ai</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#DVD_AUTH_ESTABLISHED\">DVD_AUTH_ESTABLISHED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Misc */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DVD_INVALIDATE_AGID\">DVD_INVALIDATE_AGID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#quiet\">quiet</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_DVD\">CD_DVD</a>, \"entering DVD_INVALIDATE_AGID\\n\"); ", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#setup_report_key\">setup_report_key</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#ai\">ai</a>-><a class=\"id\" href=\"#lsa\">lsa</a>.<a class=\"id\" href=\"#agid\">agid</a>, 0x3f);", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#generic_packet\">generic_packet</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Get region settings */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DVD_LU_SEND_RPC_STATE\">DVD_LU_SEND_RPC_STATE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_DVD\">CD_DVD</a>, \"entering DVD_LU_SEND_RPC_STATE\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#setup_report_key\">setup_report_key</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, 0, 8);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#rpc_state\">rpc_state</a>, 0, sizeof(<a class=\"id\" href=\"#rpc_state_t\">rpc_state_t</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buffer\">buffer</a> = (char *) &amp;<a class=\"id\" href=\"#rpc_state\">rpc_state</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#generic_packet\">generic_packet</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ai\">ai</a>-><a class=\"id\" href=\"#lrpcs\">lrpcs</a>.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#rpc_state\">rpc_state</a>.<a class=\"id\" href=\"#type_code\">type_code</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ai\">ai</a>-><a class=\"id\" href=\"#lrpcs\">lrpcs</a>.<a class=\"id\" href=\"#vra\">vra</a> = <a class=\"id\" href=\"#rpc_state\">rpc_state</a>.<a class=\"id\" href=\"#vra\">vra</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ai\">ai</a>-><a class=\"id\" href=\"#lrpcs\">lrpcs</a>.<a class=\"id\" href=\"#ucca\">ucca</a> = <a class=\"id\" href=\"#rpc_state\">rpc_state</a>.<a class=\"id\" href=\"#ucca\">ucca</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ai\">ai</a>-><a class=\"id\" href=\"#lrpcs\">lrpcs</a>.<a class=\"id\" href=\"#region_mask\">region_mask</a> = <a class=\"id\" href=\"#rpc_state\">rpc_state</a>.<a class=\"id\" href=\"#region_mask\">region_mask</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ai\">ai</a>-><a class=\"id\" href=\"#lrpcs\">lrpcs</a>.<a class=\"id\" href=\"#rpc_scheme\">rpc_scheme</a> = <a class=\"id\" href=\"#rpc_state\">rpc_state</a>.<a class=\"id\" href=\"#rpc_scheme\">rpc_scheme</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Set region settings */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DVD_HOST_SEND_RPC_STATE\">DVD_HOST_SEND_RPC_STATE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_DVD\">CD_DVD</a>, \"entering DVD_HOST_SEND_RPC_STATE\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#setup_send_key\">setup_send_key</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, 0, 6);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>[1] = 6;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>[4] = <a class=\"id\" href=\"#ai\">ai</a>-><a class=\"id\" href=\"#hrpcs\">hrpcs</a>.<a class=\"id\" href=\"#pdrc\">pdrc</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#generic_packet\">generic_packet</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_WARNING\">CD_WARNING</a>, \"Invalid DVD key ioctl (%d)\\n\", <a class=\"id\" href=\"#ai\">ai</a>-><a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOTTY\">ENOTTY</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#dvd_read_physical\">dvd_read_physical</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#dvd_struct\">dvd_struct</a> *<a class=\"id\" href=\"#s\">s</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> *<a class=\"id\" href=\"#cgc\">cgc</a>)", 
"{", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#buf\">buf</a>[21], *<a class=\"id\" href=\"#base\">base</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dvd_layer\">dvd_layer</a> *<a class=\"id\" href=\"#layer\">layer</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cdrom_device_ops\">cdrom_device_ops</a> *<a class=\"id\" href=\"#cdo\">cdo</a> = <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#layer_num\">layer_num</a> = <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#physical\">physical</a>.<a class=\"id\" href=\"#layer_num\">layer_num</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#layer_num\">layer_num</a> >= <a class=\"id\" href=\"#DVD_LAYERS\">DVD_LAYERS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_cdrom_command\">init_cdrom_command</a>(<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#buf\">buf</a>, sizeof(<a class=\"id\" href=\"#buf\">buf</a>), <a class=\"id\" href=\"#CGC_DATA_READ\">CGC_DATA_READ</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_READ_DVD_STRUCTURE\">GPCMD_READ_DVD_STRUCTURE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[6] = <a class=\"id\" href=\"#layer_num\">layer_num</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[7] = <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[9] = <a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#buflen\">buflen</a> &amp; 0xff;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * refrain from reporting errors on non-existing layers (mainly)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#quiet\">quiet</a> = 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#generic_packet\">generic_packet</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#cgc\">cgc</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#base\">base</a> = &amp;<a class=\"id\" href=\"#buf\">buf</a>[4];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#layer\">layer</a> = &amp;<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#physical\">physical</a>.<a class=\"id\" href=\"#layer\">layer</a>[<a class=\"id\" href=\"#layer_num\">layer_num</a>];", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * place the data... really ugly, but at least we won't have to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * worry about endianess in userspace.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#layer\">layer</a>, 0, sizeof(*<a class=\"id\" href=\"#layer\">layer</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#layer\">layer</a>-><a class=\"id\" href=\"#book_version\">book_version</a> = <a class=\"id\" href=\"#base\">base</a>[0] &amp; 0xf;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#layer\">layer</a>-><a class=\"id\" href=\"#book_type\">book_type</a> = <a class=\"id\" href=\"#base\">base</a>[0] >> 4;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#layer\">layer</a>-><a class=\"id\" href=\"#min_rate\">min_rate</a> = <a class=\"id\" href=\"#base\">base</a>[1] &amp; 0xf;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#layer\">layer</a>-><a class=\"id\" href=\"#disc_size\">disc_size</a> = <a class=\"id\" href=\"#base\">base</a>[1] >> 4;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#layer\">layer</a>-><a class=\"id\" href=\"#layer_type\">layer_type</a> = <a class=\"id\" href=\"#base\">base</a>[2] &amp; 0xf;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#layer\">layer</a>-><a class=\"id\" href=\"#track_path\">track_path</a> = (<a class=\"id\" href=\"#base\">base</a>[2] >> 4) &amp; 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#layer\">layer</a>-><a class=\"id\" href=\"#nlayers\">nlayers</a> = (<a class=\"id\" href=\"#base\">base</a>[2] >> 5) &amp; 3;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#layer\">layer</a>-><a class=\"id\" href=\"#track_density\">track_density</a> = <a class=\"id\" href=\"#base\">base</a>[3] &amp; 0xf;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#layer\">layer</a>-><a class=\"id\" href=\"#linear_density\">linear_density</a> = <a class=\"id\" href=\"#base\">base</a>[3] >> 4;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#layer\">layer</a>-><a class=\"id\" href=\"#start_sector\">start_sector</a> = <a class=\"id\" href=\"#base\">base</a>[5] << 16 | <a class=\"id\" href=\"#base\">base</a>[6] << 8 | <a class=\"id\" href=\"#base\">base</a>[7];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#layer\">layer</a>-><a class=\"id\" href=\"#end_sector\">end_sector</a> = <a class=\"id\" href=\"#base\">base</a>[9] << 16 | <a class=\"id\" href=\"#base\">base</a>[10] << 8 | <a class=\"id\" href=\"#base\">base</a>[11];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#layer\">layer</a>-><a class=\"id\" href=\"#end_sector_l0\">end_sector_l0</a> = <a class=\"id\" href=\"#base\">base</a>[13] << 16 | <a class=\"id\" href=\"#base\">base</a>[14] << 8 | <a class=\"id\" href=\"#base\">base</a>[15];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#layer\">layer</a>-><a class=\"id\" href=\"#bca\">bca</a> = <a class=\"id\" href=\"#base\">base</a>[16] >> 7;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#dvd_read_copyright\">dvd_read_copyright</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#dvd_struct\">dvd_struct</a> *<a class=\"id\" href=\"#s\">s</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> *<a class=\"id\" href=\"#cgc\">cgc</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u_char\">u_char</a> <a class=\"id\" href=\"#buf\">buf</a>[8];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cdrom_device_ops\">cdrom_device_ops</a> *<a class=\"id\" href=\"#cdo\">cdo</a> = <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_cdrom_command\">init_cdrom_command</a>(<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#buf\">buf</a>, sizeof(<a class=\"id\" href=\"#buf\">buf</a>), <a class=\"id\" href=\"#CGC_DATA_READ\">CGC_DATA_READ</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_READ_DVD_STRUCTURE\">GPCMD_READ_DVD_STRUCTURE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[6] = <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#copyright\">copyright</a>.<a class=\"id\" href=\"#layer_num\">layer_num</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[7] = <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[8] = <a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#buflen\">buflen</a> >> 8;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[9] = <a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#buflen\">buflen</a> &amp; 0xff;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#generic_packet\">generic_packet</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#cgc\">cgc</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#copyright\">copyright</a>.<a class=\"id\" href=\"#cpst\">cpst</a> = <a class=\"id\" href=\"#buf\">buf</a>[4];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#copyright\">copyright</a>.<a class=\"id\" href=\"#rmi\">rmi</a> = <a class=\"id\" href=\"#buf\">buf</a>[5];", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#dvd_read_disckey\">dvd_read_disckey</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#dvd_struct\">dvd_struct</a> *<a class=\"id\" href=\"#s\">s</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> *<a class=\"id\" href=\"#cgc\">cgc</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u_char\">u_char</a> *<a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cdrom_device_ops\">cdrom_device_ops</a> *<a class=\"id\" href=\"#cdo\">cdo</a> = <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = sizeof(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#disckey\">disckey</a>.<a class=\"id\" href=\"#value\">value</a>) + 4;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#buf\">buf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_cdrom_command\">init_cdrom_command</a>(<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#CGC_DATA_READ\">CGC_DATA_READ</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_READ_DVD_STRUCTURE\">GPCMD_READ_DVD_STRUCTURE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[7] = <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[8] = <a class=\"id\" href=\"#size\">size</a> >> 8;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[9] = <a class=\"id\" href=\"#size\">size</a> &amp; 0xff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[10] = <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#disckey\">disckey</a>.<a class=\"id\" href=\"#agid\">agid</a> << 6;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#generic_packet\">generic_packet</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#cgc\">cgc</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#disckey\">disckey</a>.<a class=\"id\" href=\"#value\">value</a>, &amp;<a class=\"id\" href=\"#buf\">buf</a>[4], sizeof(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#disckey\">disckey</a>.<a class=\"id\" href=\"#value\">value</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#dvd_read_bca\">dvd_read_bca</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#dvd_struct\">dvd_struct</a> *<a class=\"id\" href=\"#s\">s</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> *<a class=\"id\" href=\"#cgc\">cgc</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#size\">size</a> = 4 + 188;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u_char\">u_char</a> *<a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cdrom_device_ops\">cdrom_device_ops</a> *<a class=\"id\" href=\"#cdo\">cdo</a> = <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#buf\">buf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_cdrom_command\">init_cdrom_command</a>(<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#CGC_DATA_READ\">CGC_DATA_READ</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_READ_DVD_STRUCTURE\">GPCMD_READ_DVD_STRUCTURE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[7] = <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[9] = <a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#buflen\">buflen</a> &amp; 0xff;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#generic_packet\">generic_packet</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#cgc\">cgc</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#bca\">bca</a>.<a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#buf\">buf</a>[0] << 8 | <a class=\"id\" href=\"#buf\">buf</a>[1];", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#bca\">bca</a>.<a class=\"id\" href=\"#len\">len</a> &lt; 12 || <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#bca\">bca</a>.<a class=\"id\" href=\"#len\">len</a> &gt; 188) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_WARNING\">CD_WARNING</a>, \"Received invalid BCA length (%d)\\n\", <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#bca\">bca</a>.<a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#bca\">bca</a>.<a class=\"id\" href=\"#value\">value</a>, &amp;<a class=\"id\" href=\"#buf\">buf</a>[4], <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#bca\">bca</a>.<a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#dvd_read_manufact\">dvd_read_manufact</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#dvd_struct\">dvd_struct</a> *<a class=\"id\" href=\"#s\">s</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> *<a class=\"id\" href=\"#cgc\">cgc</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0, <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u_char\">u_char</a> *<a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cdrom_device_ops\">cdrom_device_ops</a> *<a class=\"id\" href=\"#cdo\">cdo</a> = <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = sizeof(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#manufact\">manufact</a>.<a class=\"id\" href=\"#value\">value</a>) + 4;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#buf\">buf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_cdrom_command\">init_cdrom_command</a>(<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#CGC_DATA_READ\">CGC_DATA_READ</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_READ_DVD_STRUCTURE\">GPCMD_READ_DVD_STRUCTURE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[7] = <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[8] = <a class=\"id\" href=\"#size\">size</a> >> 8;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[9] = <a class=\"id\" href=\"#size\">size</a> &amp; 0xff;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#generic_packet\">generic_packet</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#cgc\">cgc</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#manufact\">manufact</a>.<a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#buf\">buf</a>[0] << 8 | <a class=\"id\" href=\"#buf\">buf</a>[1];", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#manufact\">manufact</a>.<a class=\"id\" href=\"#len\">len</a> &lt; 0 || <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#manufact\">manufact</a>.<a class=\"id\" href=\"#len\">len</a> &gt; 2048) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_WARNING\">CD_WARNING</a>, \"Received invalid manufacture info length\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \" (%d)\\n\", <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#manufact\">manufact</a>.<a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#manufact\">manufact</a>.<a class=\"id\" href=\"#value\">value</a>, &amp;<a class=\"id\" href=\"#buf\">buf</a>[4], <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#manufact\">manufact</a>.<a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#dvd_read_struct\">dvd_read_struct</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#dvd_struct\">dvd_struct</a> *<a class=\"id\" href=\"#s\">s</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> *<a class=\"id\" href=\"#cgc\">cgc</a>)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DVD_STRUCT_PHYSICAL\">DVD_STRUCT_PHYSICAL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#dvd_read_physical\">dvd_read_physical</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#cgc\">cgc</a>);", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DVD_STRUCT_COPYRIGHT\">DVD_STRUCT_COPYRIGHT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#dvd_read_copyright\">dvd_read_copyright</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#cgc\">cgc</a>);", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DVD_STRUCT_DISCKEY\">DVD_STRUCT_DISCKEY</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#dvd_read_disckey\">dvd_read_disckey</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#cgc\">cgc</a>);", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DVD_STRUCT_BCA\">DVD_STRUCT_BCA</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#dvd_read_bca\">dvd_read_bca</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#cgc\">cgc</a>);", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DVD_STRUCT_MANUFACT\">DVD_STRUCT_MANUFACT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#dvd_read_manufact\">dvd_read_manufact</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#cgc\">cgc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_WARNING\">CD_WARNING</a>, \": Invalid DVD structure read requested (%d)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"int <a class=\"id\" href=\"#cdrom_mode_sense\">cdrom_mode_sense</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#packet_command\">packet_command</a> *<a class=\"id\" href=\"#cgc\">cgc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     int <a class=\"id\" href=\"#page_code\">page_code</a>, int <a class=\"id\" href=\"#page_control\">page_control</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cdrom_device_ops\">cdrom_device_ops</a> *<a class=\"id\" href=\"#cdo\">cdo</a> = <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>, 0, sizeof(<a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_MODE_SENSE_10\">GPCMD_MODE_SENSE_10</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[2] = <a class=\"id\" href=\"#page_code\">page_code</a> | (<a class=\"id\" href=\"#page_control\">page_control</a> << 6);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[7] = <a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#buflen\">buflen</a> >> 8;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[8] = <a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#buflen\">buflen</a> &amp; 0xff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#data_direction\">data_direction</a> = <a class=\"id\" href=\"#CGC_DATA_READ\">CGC_DATA_READ</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#generic_packet\">generic_packet</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#cgc\">cgc</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#cdrom_mode_select\">cdrom_mode_select</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#packet_command\">packet_command</a> *<a class=\"id\" href=\"#cgc\">cgc</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cdrom_device_ops\">cdrom_device_ops</a> *<a class=\"id\" href=\"#cdo\">cdo</a> = <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>, 0, sizeof(<a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#buffer\">buffer</a>, 0, 2);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_MODE_SELECT_10\">GPCMD_MODE_SELECT_10</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[1] = 0x10;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* PF */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[7] = <a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#buflen\">buflen</a> >> 8;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[8] = <a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#buflen\">buflen</a> &amp; 0xff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#data_direction\">data_direction</a> = <a class=\"id\" href=\"#CGC_DATA_WRITE\">CGC_DATA_WRITE</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#generic_packet\">generic_packet</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#cgc\">cgc</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cdrom_read_subchannel\">cdrom_read_subchannel</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#cdrom_subchnl\">cdrom_subchnl</a> *<a class=\"id\" href=\"#subchnl\">subchnl</a>, int <a class=\"id\" href=\"#mcn\">mcn</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cdrom_device_ops\">cdrom_device_ops</a> *<a class=\"id\" href=\"#cdo\">cdo</a> = <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> <a class=\"id\" href=\"#cgc\">cgc</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buffer\">buffer</a>[32];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_cdrom_command\">init_cdrom_command</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, 16, <a class=\"id\" href=\"#CGC_DATA_READ\">CGC_DATA_READ</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_READ_SUBCHANNEL\">GPCMD_READ_SUBCHANNEL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[1] = 2;     <span class=\"comment\">/* MSF addressing */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[2] = 0x40;  <span class=\"comment\">/* request subQ data */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[3] = <a class=\"id\" href=\"#mcn\">mcn</a> ? 2 : 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[8] = 16;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#generic_packet\">generic_packet</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#subchnl\">subchnl</a>-><a class=\"id\" href=\"#cdsc_audiostatus\">cdsc_audiostatus</a> = <a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buffer\">buffer</a>[1];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#subchnl\">subchnl</a>-><a class=\"id\" href=\"#cdsc_format\">cdsc_format</a> = <a class=\"id\" href=\"#CDROM_MSF\">CDROM_MSF</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#subchnl\">subchnl</a>-><a class=\"id\" href=\"#cdsc_ctrl\">cdsc_ctrl</a> = <a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buffer\">buffer</a>[5] &amp; 0xf;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#subchnl\">subchnl</a>-><a class=\"id\" href=\"#cdsc_trk\">cdsc_trk</a> = <a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buffer\">buffer</a>[6];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#subchnl\">subchnl</a>-><a class=\"id\" href=\"#cdsc_ind\">cdsc_ind</a> = <a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buffer\">buffer</a>[7];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#subchnl\">subchnl</a>-><a class=\"id\" href=\"#cdsc_reladdr\">cdsc_reladdr</a>.<a class=\"id\" href=\"#msf\">msf</a>.<a class=\"id\" href=\"#minute\">minute</a> = <a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buffer\">buffer</a>[13];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#subchnl\">subchnl</a>-><a class=\"id\" href=\"#cdsc_reladdr\">cdsc_reladdr</a>.<a class=\"id\" href=\"#msf\">msf</a>.<a class=\"id\" href=\"#second\">second</a> = <a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buffer\">buffer</a>[14];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#subchnl\">subchnl</a>-><a class=\"id\" href=\"#cdsc_reladdr\">cdsc_reladdr</a>.<a class=\"id\" href=\"#msf\">msf</a>.<a class=\"id\" href=\"#frame\">frame</a> = <a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buffer\">buffer</a>[15];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#subchnl\">subchnl</a>-><a class=\"id\" href=\"#cdsc_absaddr\">cdsc_absaddr</a>.<a class=\"id\" href=\"#msf\">msf</a>.<a class=\"id\" href=\"#minute\">minute</a> = <a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buffer\">buffer</a>[9];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#subchnl\">subchnl</a>-><a class=\"id\" href=\"#cdsc_absaddr\">cdsc_absaddr</a>.<a class=\"id\" href=\"#msf\">msf</a>.<a class=\"id\" href=\"#second\">second</a> = <a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buffer\">buffer</a>[10];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#subchnl\">subchnl</a>-><a class=\"id\" href=\"#cdsc_absaddr\">cdsc_absaddr</a>.<a class=\"id\" href=\"#msf\">msf</a>.<a class=\"id\" href=\"#frame\">frame</a> = <a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buffer\">buffer</a>[11];", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Specific READ_10 interface</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#cdrom_read_cd\">cdrom_read_cd</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#packet_command\">packet_command</a> *<a class=\"id\" href=\"#cgc\">cgc</a>, int <a class=\"id\" href=\"#lba\">lba</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> int <a class=\"id\" href=\"#blocksize\">blocksize</a>, int <a class=\"id\" href=\"#nblocks\">nblocks</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cdrom_device_ops\">cdrom_device_ops</a> *<a class=\"id\" href=\"#cdo\">cdo</a> = <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>, 0, sizeof(<a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_READ_10\">GPCMD_READ_10</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[2] = (<a class=\"id\" href=\"#lba\">lba</a> >> 24) &amp; 0xff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[3] = (<a class=\"id\" href=\"#lba\">lba</a> >> 16) &amp; 0xff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[4] = (<a class=\"id\" href=\"#lba\">lba</a> >>  8) &amp; 0xff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[5] = <a class=\"id\" href=\"#lba\">lba</a> &amp; 0xff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[6] = (<a class=\"id\" href=\"#nblocks\">nblocks</a> >> 16) &amp; 0xff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[7] = (<a class=\"id\" href=\"#nblocks\">nblocks</a> >>  8) &amp; 0xff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[8] = <a class=\"id\" href=\"#nblocks\">nblocks</a> &amp; 0xff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#buflen\">buflen</a> = <a class=\"id\" href=\"#blocksize\">blocksize</a> * <a class=\"id\" href=\"#nblocks\">nblocks</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#generic_packet\">generic_packet</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#cgc\">cgc</a>);", 
"}", 
"", 
"<span class=\"comment\">/* very generic interface for reading the various types of blocks */</span>", 
"static int <a class=\"id\" href=\"#cdrom_read_block\">cdrom_read_block</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#packet_command\">packet_command</a> *<a class=\"id\" href=\"#cgc\">cgc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    int <a class=\"id\" href=\"#lba\">lba</a>, int <a class=\"id\" href=\"#nblocks\">nblocks</a>, int <a class=\"id\" href=\"#format\">format</a>, int <a class=\"id\" href=\"#blksize\">blksize</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cdrom_device_ops\">cdrom_device_ops</a> *<a class=\"id\" href=\"#cdo\">cdo</a> = <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>, 0, sizeof(<a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_READ_CD\">GPCMD_READ_CD</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* expected sector size - cdda,mode1,etc. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[1] = <a class=\"id\" href=\"#format\">format</a> << 2;", 
"<span class=\"ts\"/><span class=\"comment\">/* starting address */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[2] = (<a class=\"id\" href=\"#lba\">lba</a> >> 24) &amp; 0xff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[3] = (<a class=\"id\" href=\"#lba\">lba</a> >> 16) &amp; 0xff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[4] = (<a class=\"id\" href=\"#lba\">lba</a> >>  8) &amp; 0xff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[5] = <a class=\"id\" href=\"#lba\">lba</a> &amp; 0xff;", 
"<span class=\"ts\"/><span class=\"comment\">/* number of blocks */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[6] = (<a class=\"id\" href=\"#nblocks\">nblocks</a> >> 16) &amp; 0xff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[7] = (<a class=\"id\" href=\"#nblocks\">nblocks</a> >>  8) &amp; 0xff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[8] = <a class=\"id\" href=\"#nblocks\">nblocks</a> &amp; 0xff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#buflen\">buflen</a> = <a class=\"id\" href=\"#blksize\">blksize</a> * <a class=\"id\" href=\"#nblocks\">nblocks</a>;", 
"<span class=\"ts\"/>", 
"<span class=\"ts\"/><span class=\"comment\">/* set the header info returned */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#blksize\">blksize</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CD_FRAMESIZE_RAW0\">CD_FRAMESIZE_RAW0</a><span class=\"ts\"/>: <a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[9] = 0x58; break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CD_FRAMESIZE_RAW1\">CD_FRAMESIZE_RAW1</a><span class=\"ts\"/>: <a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[9] = 0x78; break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CD_FRAMESIZE_RAW\">CD_FRAMESIZE_RAW</a><span class=\"ts\"/>: <a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[9] = 0xf8; break;", 
"<span class=\"ts\"/>default<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>: <a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[9] = 0x10;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cdo\">cdo</a>-><a class=\"id\" href=\"#generic_packet\">generic_packet</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#cgc\">cgc</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cdrom_read_cdda_old\">cdrom_read_cdda_old</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ubuf\">ubuf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       int <a class=\"id\" href=\"#lba\">lba</a>, int <a class=\"id\" href=\"#nframes\">nframes</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> <a class=\"id\" href=\"#cgc\">cgc</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nr\">nr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#last_sense\">last_sense</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, 0, sizeof(<a class=\"id\" href=\"#cgc\">cgc</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * start with will ra.nframes size, back down if alloc fails</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nr\">nr</a> = <a class=\"id\" href=\"#nframes\">nframes</a>;", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buffer\">buffer</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#CD_FRAMESIZE_RAW\">CD_FRAMESIZE_RAW</a> * <a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buffer\">buffer</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr\">nr</a> >>= 1;", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#nr\">nr</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#nr\">nr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#access_ok\">access_ok</a>(<a class=\"id\" href=\"#VERIFY_WRITE\">VERIFY_WRITE</a>, <a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#nframes\">nframes</a> * <a class=\"id\" href=\"#CD_FRAMESIZE_RAW\">CD_FRAMESIZE_RAW</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#data_direction\">data_direction</a> = <a class=\"id\" href=\"#CGC_DATA_READ\">CGC_DATA_READ</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#nframes\">nframes</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nr\">nr</a> &gt; <a class=\"id\" href=\"#nframes\">nframes</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr\">nr</a> = <a class=\"id\" href=\"#nframes\">nframes</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdrom_read_block\">cdrom_read_block</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#lba\">lba</a>, <a class=\"id\" href=\"#nr\">nr</a>, 1, <a class=\"id\" href=\"#CD_FRAMESIZE_RAW\">CD_FRAMESIZE_RAW</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#__copy_to_user\">__copy_to_user</a>(<a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#CD_FRAMESIZE_RAW\">CD_FRAMESIZE_RAW</a> * <a class=\"id\" href=\"#nr\">nr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ubuf\">ubuf</a> += <a class=\"id\" href=\"#CD_FRAMESIZE_RAW\">CD_FRAMESIZE_RAW</a> * <a class=\"id\" href=\"#nr\">nr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nframes\">nframes</a> -= <a class=\"id\" href=\"#nr\">nr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lba\">lba</a> += <a class=\"id\" href=\"#nr\">nr</a>;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buffer\">buffer</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cdrom_read_cdda_bpc\">cdrom_read_cdda_bpc</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ubuf\">ubuf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       int <a class=\"id\" href=\"#lba\">lba</a>, int <a class=\"id\" href=\"#nframes\">nframes</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a> = <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#queue\">queue</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#q\">q</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#last_sense\">last_sense</a> = 0;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#nframes\">nframes</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr\">nr</a> = <a class=\"id\" href=\"#nframes\">nframes</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#cdda_method\">cdda_method</a> == <a class=\"id\" href=\"#CDDA_BPC_SINGLE\">CDDA_BPC_SINGLE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr\">nr</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nr\">nr</a> * <a class=\"id\" href=\"#CD_FRAMESIZE_RAW\">CD_FRAMESIZE_RAW</a> &gt; (<a class=\"id\" href=\"#queue_max_sectors\">queue_max_sectors</a>(<a class=\"id\" href=\"#q\">q</a>) << 9))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr\">nr</a> = (<a class=\"id\" href=\"#queue_max_sectors\">queue_max_sectors</a>(<a class=\"id\" href=\"#q\">q</a>) << 9) / <a class=\"id\" href=\"#CD_FRAMESIZE_RAW\">CD_FRAMESIZE_RAW</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#nr\">nr</a> * <a class=\"id\" href=\"#CD_FRAMESIZE_RAW\">CD_FRAMESIZE_RAW</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a> = <a class=\"id\" href=\"#blk_get_request\">blk_get_request</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#READ\">READ</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#rq\">rq</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#blk_rq_map_user\">blk_rq_map_user</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#rq\">rq</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_put_request\">blk_put_request</a>(<a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_READ_CD\">GPCMD_READ_CD</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[1] = 1 << 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[2] = (<a class=\"id\" href=\"#lba\">lba</a> >> 24) &amp; 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[3] = (<a class=\"id\" href=\"#lba\">lba</a> >> 16) &amp; 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[4] = (<a class=\"id\" href=\"#lba\">lba</a> >>  8) &amp; 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[5] = <a class=\"id\" href=\"#lba\">lba</a> &amp; 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[6] = (<a class=\"id\" href=\"#nr\">nr</a> >> 16) &amp; 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[7] = (<a class=\"id\" href=\"#nr\">nr</a> >>  8) &amp; 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[8] = <a class=\"id\" href=\"#nr\">nr</a> &amp; 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[9] = 0xf8;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_len\">cmd_len</a> = 12;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_type\">cmd_type</a> = <a class=\"id\" href=\"#REQ_TYPE_BLOCK_PC\">REQ_TYPE_BLOCK_PC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#timeout\">timeout</a> = 60 * <a class=\"id\" href=\"#HZ\">HZ</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#bio\">bio</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#blk_execute_rq\">blk_execute_rq</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#disk\">disk</a>, <a class=\"id\" href=\"#rq\">rq</a>, 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#request_sense\">request_sense</a> *<a class=\"id\" href=\"#s\">s</a> = <a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#sense\">sense</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#last_sense\">last_sense</a> = <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#sense_key\">sense_key</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#blk_rq_unmap_user\">blk_rq_unmap_user</a>(<a class=\"id\" href=\"#bio\">bio</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_put_request\">blk_put_request</a>(<a class=\"id\" href=\"#rq\">rq</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nframes\">nframes</a> -= <a class=\"id\" href=\"#nr\">nr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lba\">lba</a> += <a class=\"id\" href=\"#nr\">nr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ubuf\">ubuf</a> += <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cdrom_read_cdda\">cdrom_read_cdda</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ubuf\">ubuf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   int <a class=\"id\" href=\"#lba\">lba</a>, int <a class=\"id\" href=\"#nframes\">nframes</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#cdda_method\">cdda_method</a> == <a class=\"id\" href=\"#CDDA_OLD\">CDDA_OLD</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#cdrom_read_cdda_old\">cdrom_read_cdda_old</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#lba\">lba</a>, <a class=\"id\" href=\"#nframes\">nframes</a>);", 
"", 
"<a class=\"id\" href=\"#retry\">retry</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * for anything else than success and io error, we need to retry</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdrom_read_cdda_bpc\">cdrom_read_cdda_bpc</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#lba\">lba</a>, <a class=\"id\" href=\"#nframes\">nframes</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a> || <a class=\"id\" href=\"#ret\">ret</a> != -<a class=\"id\" href=\"#EIO\">EIO</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * I've seen drives get sense 4/8/3 udma crc errors on multi</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * frame dma, so drop to single frame dma if we need to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#cdda_method\">cdda_method</a> == <a class=\"id\" href=\"#CDDA_BPC_FULL\">CDDA_BPC_FULL</a> && <a class=\"id\" href=\"#nframes\">nframes</a> &gt; 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_info\">pr_info</a>(\"dropping to single frame dma\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#cdda_method\">cdda_method</a> = <a class=\"id\" href=\"#CDDA_BPC_SINGLE\">CDDA_BPC_SINGLE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#retry\">retry</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so we have an io error of some sort with multi frame dma. if the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * condition wasn't a hardware error</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * problems, not for any error</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#last_sense\">last_sense</a> != 0x04 && <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#last_sense\">last_sense</a> != 0x0b)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_info\">pr_info</a>(\"dropping to old style cdda (sense=%x)\\n\", <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#last_sense\">last_sense</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#cdda_method\">cdda_method</a> = <a class=\"id\" href=\"#CDDA_OLD\">CDDA_OLD</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cdrom_read_cdda_old\">cdrom_read_cdda_old</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#lba\">lba</a>, <a class=\"id\" href=\"#nframes\">nframes</a>);<span class=\"ts\"/>", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cdrom_ioctl_multisession\">cdrom_ioctl_multisession</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#argp\">argp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cdrom_multisession\">cdrom_multisession</a> <a class=\"id\" href=\"#ms_info\">ms_info</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#requested_format\">requested_format</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_DO_IOCTL\">CD_DO_IOCTL</a>, \"entering CDROMMULTISESSION\\n\");", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#capability\">capability</a> &amp; <a class=\"id\" href=\"#CDC_MULTI_SESSION\">CDC_MULTI_SESSION</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#ms_info\">ms_info</a>, <a class=\"id\" href=\"#argp\">argp</a>, sizeof(<a class=\"id\" href=\"#ms_info\">ms_info</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#requested_format\">requested_format</a> = <a class=\"id\" href=\"#ms_info\">ms_info</a>.<a class=\"id\" href=\"#addr_format\">addr_format</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#requested_format\">requested_format</a> != <a class=\"id\" href=\"#CDROM_MSF\">CDROM_MSF</a> && <a class=\"id\" href=\"#requested_format\">requested_format</a> != <a class=\"id\" href=\"#CDROM_LBA\">CDROM_LBA</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ms_info\">ms_info</a>.<a class=\"id\" href=\"#addr_format\">addr_format</a> = <a class=\"id\" href=\"#CDROM_LBA\">CDROM_LBA</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#get_last_session\">get_last_session</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#ms_info\">ms_info</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sanitize_format\">sanitize_format</a>(&amp;<a class=\"id\" href=\"#ms_info\">ms_info</a>.<a class=\"id\" href=\"#addr\">addr</a>, &amp;<a class=\"id\" href=\"#ms_info\">ms_info</a>.<a class=\"id\" href=\"#addr_format\">addr_format</a>, <a class=\"id\" href=\"#requested_format\">requested_format</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#argp\">argp</a>, &amp;<a class=\"id\" href=\"#ms_info\">ms_info</a>, sizeof(<a class=\"id\" href=\"#ms_info\">ms_info</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_DO_IOCTL\">CD_DO_IOCTL</a>, \"CDROMMULTISESSION successful\\n\");", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cdrom_ioctl_eject\">cdrom_ioctl_eject</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_DO_IOCTL\">CD_DO_IOCTL</a>, \"entering CDROMEJECT\\n\");", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#CDROM_CAN\">CDROM_CAN</a>(<a class=\"id\" href=\"#CDC_OPEN_TRAY\">CDC_OPEN_TRAY</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#use_count\">use_count</a> != 1 || <a class=\"id\" href=\"#keeplocked\">keeplocked</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#CDROM_CAN\">CDROM_CAN</a>(<a class=\"id\" href=\"#CDC_LOCK\">CDC_LOCK</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#lock_door\">lock_door</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#tray_move\">tray_move</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, 1);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cdrom_ioctl_closetray\">cdrom_ioctl_closetray</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_DO_IOCTL\">CD_DO_IOCTL</a>, \"entering CDROMCLOSETRAY\\n\");", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#CDROM_CAN\">CDROM_CAN</a>(<a class=\"id\" href=\"#CDC_CLOSE_TRAY\">CDC_CLOSE_TRAY</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#tray_move\">tray_move</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, 0);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cdrom_ioctl_eject_sw\">cdrom_ioctl_eject_sw</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_DO_IOCTL\">CD_DO_IOCTL</a>, \"entering CDROMEJECT_SW\\n\");", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#CDROM_CAN\">CDROM_CAN</a>(<a class=\"id\" href=\"#CDC_OPEN_TRAY\">CDC_OPEN_TRAY</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#keeplocked\">keeplocked</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#options\">options</a> &= ~(<a class=\"id\" href=\"#CDO_AUTO_CLOSE\">CDO_AUTO_CLOSE</a> | <a class=\"id\" href=\"#CDO_AUTO_EJECT\">CDO_AUTO_EJECT</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#arg\">arg</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#options\">options</a> |= <a class=\"id\" href=\"#CDO_AUTO_CLOSE\">CDO_AUTO_CLOSE</a> | <a class=\"id\" href=\"#CDO_AUTO_EJECT\">CDO_AUTO_EJECT</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cdrom_ioctl_media_changed\">cdrom_ioctl_media_changed</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cdrom_changer_info\">cdrom_changer_info</a> *<a class=\"id\" href=\"#info\">info</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_DO_IOCTL\">CD_DO_IOCTL</a>, \"entering CDROM_MEDIA_CHANGED\\n\");", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#CDROM_CAN\">CDROM_CAN</a>(<a class=\"id\" href=\"#CDC_MEDIA_CHANGED\">CDC_MEDIA_CHANGED</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* cannot select disc or select current disc */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#CDROM_CAN\">CDROM_CAN</a>(<a class=\"id\" href=\"#CDC_SELECT_DISC\">CDC_SELECT_DISC</a>) || <a class=\"id\" href=\"#arg\">arg</a> == <a class=\"id\" href=\"#CDSL_CURRENT\">CDSL_CURRENT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#media_changed\">media_changed</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, 1);", 
"", 
"<span class=\"ts\"/>if ((unsigned int)<a class=\"id\" href=\"#arg\">arg</a> >= <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#capacity\">capacity</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#info\">info</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#info\">info</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdrom_read_mech_status\">cdrom_read_mech_status</a>(<a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#info\">info</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#slots\">slots</a>[<a class=\"id\" href=\"#arg\">arg</a>].<a class=\"id\" href=\"#change\">change</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#info\">info</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cdrom_ioctl_set_options\">cdrom_ioctl_set_options</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdinfo\">cdinfo</a>(<a class=\"id\" href=\"#CD_DO_IOCTL\">CD_DO_IOCTL</a>, \"entering CDROM_SET_OPTIONS\\n\");", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Options need to be in sync with capability.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Too late for that, so we have to check each one separately.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#arg\">arg</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CDO_USE_FFLAGS\">CDO_USE_FFLAGS</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CDO_CHECK_TYPE\">CDO_CHECK_TYPE</a>:", 
];
xr_frag_insert('l/4f/deabfafae2525c4b02b67cd66fdebf0ab3d3f6.xr', __xr_tmp);
