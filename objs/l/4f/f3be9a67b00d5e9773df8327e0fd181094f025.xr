var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#queue_work\">queue_work</a>(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#wq\">wq</a>, &amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#barrier_work\">barrier_work</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ti\">ti</a> = <a class=\"id\" href=\"#dm_table_find_target\">dm_table_find_target</a>(<a class=\"id\" href=\"#map\">map</a>, <a class=\"id\" href=\"#blk_rq_pos\">blk_rq_pos</a>(<a class=\"id\" href=\"#rq\">rq</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ti\">ti</a>-><a class=\"id\" href=\"#type\">type</a>-><a class=\"id\" href=\"#busy\">busy</a> && <a class=\"id\" href=\"#ti\">ti</a>-><a class=\"id\" href=\"#type\">type</a>-><a class=\"id\" href=\"#busy\">busy</a>(<a class=\"id\" href=\"#ti\">ti</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#plug_and_out\">plug_and_out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_start_request\">blk_start_request</a>(<a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clone\">clone</a> = <a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#special\">special</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#pending\">pending</a>[<a class=\"id\" href=\"#rq_data_dir\">rq_data_dir</a>(<a class=\"id\" href=\"#clone\">clone</a>)]);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_lock\">queue_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#map_request\">map_request</a>(<a class=\"id\" href=\"#ti\">ti</a>, <a class=\"id\" href=\"#clone\">clone</a>, <a class=\"id\" href=\"#md\">md</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#requeued\">requeued</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_lock\">queue_lock</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<a class=\"id\" href=\"#requeued\">requeued</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_lock\">queue_lock</a>);", 
"", 
"<a class=\"id\" href=\"#plug_and_out\">plug_and_out</a>:", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#elv_queue_empty\">elv_queue_empty</a>(<a class=\"id\" href=\"#q\">q</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Some requests still remain, retry later */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_plug_device\">blk_plug_device</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_table_put\">dm_table_put</a>(<a class=\"id\" href=\"#map\">map</a>);", 
"", 
"<span class=\"ts\"/>return;", 
"}", 
"", 
"int <a class=\"id\" href=\"#dm_underlying_device_busy\">dm_underlying_device_busy</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#blk_lld_busy\">blk_lld_busy</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#dm_underlying_device_busy\">dm_underlying_device_busy</a>);", 
"", 
"static int <a class=\"id\" href=\"#dm_lld_busy\">dm_lld_busy</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#r\">r</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queuedata\">queuedata</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#map\">map</a> = <a class=\"id\" href=\"#dm_get_live_table\">dm_get_live_table</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#map\">map</a> || <a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#DMF_BLOCK_IO_FOR_SUSPEND\">DMF_BLOCK_IO_FOR_SUSPEND</a>, &amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#flags\">flags</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = 1;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#dm_table_any_busy_target\">dm_table_any_busy_target</a>(<a class=\"id\" href=\"#map\">map</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_table_put\">dm_table_put</a>(<a class=\"id\" href=\"#map\">map</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#dm_unplug_all\">dm_unplug_all</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queuedata\">queuedata</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#map\">map</a> = <a class=\"id\" href=\"#dm_get_live_table\">dm_get_live_table</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#map\">map</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dm_request_based\">dm_request_based</a>(<a class=\"id\" href=\"#md\">md</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#generic_unplug_device\">generic_unplug_device</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_table_unplug_all\">dm_table_unplug_all</a>(<a class=\"id\" href=\"#map\">map</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_table_put\">dm_table_put</a>(<a class=\"id\" href=\"#map\">map</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#dm_any_congested\">dm_any_congested</a>(void *<a class=\"id\" href=\"#congested_data\">congested_data</a>, int <a class=\"id\" href=\"#bdi_bits\">bdi_bits</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#bdi_bits\">bdi_bits</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a> = <a class=\"id\" href=\"#congested_data\">congested_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#map\">map</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#DMF_BLOCK_IO_FOR_SUSPEND\">DMF_BLOCK_IO_FOR_SUSPEND</a>, &amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#flags\">flags</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#map\">map</a> = <a class=\"id\" href=\"#dm_get_live_table\">dm_get_live_table</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#map\">map</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Request-based dm cares about only own queue for</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * the query about congestion status of request_queue</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dm_request_based\">dm_request_based</a>(<a class=\"id\" href=\"#md\">md</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#backing_dev_info\">backing_dev_info</a>.<a class=\"id\" href=\"#state\">state</a> &amp;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#bdi_bits\">bdi_bits</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#dm_table_any_congested\">dm_table_any_congested</a>(<a class=\"id\" href=\"#map\">map</a>, <a class=\"id\" href=\"#bdi_bits\">bdi_bits</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_table_put\">dm_table_put</a>(<a class=\"id\" href=\"#map\">map</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"}", 
"", 
"<span class=\"comment\">/*-----------------------------------------------------------------</span>", 
"<span class=\"comment\"> * An IDR is used to keep track of allocated minor numbers.</span>", 
"<span class=\"comment\"> *---------------------------------------------------------------*/</span>", 
"static <a class=\"id\" href=\"#DEFINE_IDR\">DEFINE_IDR</a>(<a class=\"id\" href=\"#_minor_idr\">_minor_idr</a>);", 
"", 
"static void <a class=\"id\" href=\"#free_minor\">free_minor</a>(int <a class=\"id\" href=\"#minor\">minor</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#_minor_lock\">_minor_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idr_remove\">idr_remove</a>(&amp;<a class=\"id\" href=\"#_minor_idr\">_minor_idr</a>, <a class=\"id\" href=\"#minor\">minor</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#_minor_lock\">_minor_lock</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * See if the device with a specific minor # is free.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#specific_minor\">specific_minor</a>(int <a class=\"id\" href=\"#minor\">minor</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#r\">r</a>, <a class=\"id\" href=\"#m\">m</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#minor\">minor</a> >= (1 << <a class=\"id\" href=\"#MINORBITS\">MINORBITS</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#idr_pre_get\">idr_pre_get</a>(&amp;<a class=\"id\" href=\"#_minor_idr\">_minor_idr</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#r\">r</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#_minor_lock\">_minor_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idr_find\">idr_find</a>(&amp;<a class=\"id\" href=\"#_minor_idr\">_minor_idr</a>, <a class=\"id\" href=\"#minor\">minor</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#idr_get_new_above\">idr_get_new_above</a>(&amp;<a class=\"id\" href=\"#_minor_idr\">_minor_idr</a>, <a class=\"id\" href=\"#MINOR_ALLOCED\">MINOR_ALLOCED</a>, <a class=\"id\" href=\"#minor\">minor</a>, &amp;<a class=\"id\" href=\"#m\">m</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#m\">m</a> != <a class=\"id\" href=\"#minor\">minor</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idr_remove\">idr_remove</a>(&amp;<a class=\"id\" href=\"#_minor_idr\">_minor_idr</a>, <a class=\"id\" href=\"#m\">m</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#_minor_lock\">_minor_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#next_free_minor\">next_free_minor</a>(int *<a class=\"id\" href=\"#minor\">minor</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#r\">r</a>, <a class=\"id\" href=\"#m\">m</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#idr_pre_get\">idr_pre_get</a>(&amp;<a class=\"id\" href=\"#_minor_idr\">_minor_idr</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#r\">r</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#_minor_lock\">_minor_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#idr_get_new\">idr_get_new</a>(&amp;<a class=\"id\" href=\"#_minor_idr\">_minor_idr</a>, <a class=\"id\" href=\"#MINOR_ALLOCED\">MINOR_ALLOCED</a>, &amp;<a class=\"id\" href=\"#m\">m</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#m\">m</a> >= (1 << <a class=\"id\" href=\"#MINORBITS\">MINORBITS</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idr_remove\">idr_remove</a>(&amp;<a class=\"id\" href=\"#_minor_idr\">_minor_idr</a>, <a class=\"id\" href=\"#m\">m</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#minor\">minor</a> = <a class=\"id\" href=\"#m\">m</a>;", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#_minor_lock\">_minor_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#block_device_operations\">block_device_operations</a> <a class=\"id\" href=\"#dm_blk_dops\">dm_blk_dops</a>;", 
"", 
"static void <a class=\"id\" href=\"#dm_wq_work\">dm_wq_work</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>);", 
"static void <a class=\"id\" href=\"#dm_rq_barrier_work\">dm_rq_barrier_work</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>);", 
"", 
"static void <a class=\"id\" href=\"#dm_init_md_queue\">dm_init_md_queue</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Request-based dm devices cannot be stacked on top of bio-based dm</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * devices.  The type of this dm device has not been decided yet.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The type is decided at the first table loading time.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * To prevent problematic device stacking, clear the queue flag</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * for request stacking support until then.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This queue is new, so no concurrency on the queue_flags.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#queue_flag_clear_unlocked\">queue_flag_clear_unlocked</a>(<a class=\"id\" href=\"#QUEUE_FLAG_STACKABLE\">QUEUE_FLAG_STACKABLE</a>, <a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#queue\">queue</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#queuedata\">queuedata</a> = <a class=\"id\" href=\"#md\">md</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#backing_dev_info\">backing_dev_info</a>.<a class=\"id\" href=\"#congested_fn\">congested_fn</a> = <a class=\"id\" href=\"#dm_any_congested\">dm_any_congested</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#backing_dev_info\">backing_dev_info</a>.<a class=\"id\" href=\"#congested_data\">congested_data</a> = <a class=\"id\" href=\"#md\">md</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_queue_make_request\">blk_queue_make_request</a>(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#queue\">queue</a>, <a class=\"id\" href=\"#dm_request\">dm_request</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_queue_bounce_limit\">blk_queue_bounce_limit</a>(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#queue\">queue</a>, <a class=\"id\" href=\"#BLK_BOUNCE_ANY\">BLK_BOUNCE_ANY</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#unplug_fn\">unplug_fn</a> = <a class=\"id\" href=\"#dm_unplug_all\">dm_unplug_all</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_queue_merge_bvec\">blk_queue_merge_bvec</a>(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#queue\">queue</a>, <a class=\"id\" href=\"#dm_merge_bvec\">dm_merge_bvec</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Allocate and initialise a blank device with a given minor.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#alloc_dev\">alloc_dev</a>(int <a class=\"id\" href=\"#minor\">minor</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#r\">r</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#md\">md</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#old_md\">old_md</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#md\">md</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMWARN\">DMWARN</a>(\"unable to allocate device, out of memory.\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#try_module_get\">try_module_get</a>(<a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad_module_get\">bad_module_get</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* get a minor number for the dev */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#minor\">minor</a> == <a class=\"id\" href=\"#DM_ANY_MINOR\">DM_ANY_MINOR</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#next_free_minor\">next_free_minor</a>(&amp;<a class=\"id\" href=\"#minor\">minor</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#specific_minor\">specific_minor</a>(<a class=\"id\" href=\"#minor\">minor</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad_minor\">bad_minor</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#DM_TYPE_NONE\">DM_TYPE_NONE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_rwsem\">init_rwsem</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#io_lock\">io_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_init\">mutex_init</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#suspend_lock\">suspend_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_init\">mutex_init</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#type_lock\">type_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#deferred_lock\">deferred_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#barrier_error_lock\">barrier_error_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rwlock_init\">rwlock_init</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#map_lock\">map_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#holders\">holders</a>, 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#open_count\">open_count</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#event_nr\">event_nr</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#uevent_seq\">uevent_seq</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#uevent_list\">uevent_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#uevent_lock\">uevent_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#queue\">queue</a> = <a class=\"id\" href=\"#blk_alloc_queue\">blk_alloc_queue</a>(<a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#queue\">queue</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad_queue\">bad_queue</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_init_md_queue\">dm_init_md_queue</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#disk\">disk</a> = <a class=\"id\" href=\"#alloc_disk\">alloc_disk</a>(1);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#disk\">disk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad_disk\">bad_disk</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#pending\">pending</a>[0], 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#pending\">pending</a>[1], 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_waitqueue_head\">init_waitqueue_head</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_WORK\">INIT_WORK</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#work\">work</a>, <a class=\"id\" href=\"#dm_wq_work\">dm_wq_work</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_WORK\">INIT_WORK</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#barrier_work\">barrier_work</a>, <a class=\"id\" href=\"#dm_rq_barrier_work\">dm_rq_barrier_work</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_waitqueue_head\">init_waitqueue_head</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#eventq\">eventq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#major\">major</a> = <a class=\"id\" href=\"#_major\">_major</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#first_minor\">first_minor</a> = <a class=\"id\" href=\"#minor\">minor</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#fops\">fops</a> = &amp;<a class=\"id\" href=\"#dm_blk_dops\">dm_blk_dops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#queue\">queue</a> = <a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#queue\">queue</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#private_data\">private_data</a> = <a class=\"id\" href=\"#md\">md</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#disk_name\">disk_name</a>, \"dm-%d\", <a class=\"id\" href=\"#minor\">minor</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#add_disk\">add_disk</a>(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#disk\">disk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#format_dev_t\">format_dev_t</a>(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#MKDEV\">MKDEV</a>(<a class=\"id\" href=\"#_major\">_major</a>, <a class=\"id\" href=\"#minor\">minor</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#wq\">wq</a> = <a class=\"id\" href=\"#create_singlethread_workqueue\">create_singlethread_workqueue</a>(\"kdmflush\");", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#wq\">wq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad_thread\">bad_thread</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#bdev\">bdev</a> = <a class=\"id\" href=\"#bdget_disk\">bdget_disk</a>(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#disk\">disk</a>, 0);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#bdev\">bdev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad_bdev\">bad_bdev</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Populate the mapping, nobody knows we exist yet */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#_minor_lock\">_minor_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_md\">old_md</a> = <a class=\"id\" href=\"#idr_replace\">idr_replace</a>(&amp;<a class=\"id\" href=\"#_minor_idr\">_minor_idr</a>, <a class=\"id\" href=\"#md\">md</a>, <a class=\"id\" href=\"#minor\">minor</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#_minor_lock\">_minor_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#old_md\">old_md</a> != <a class=\"id\" href=\"#MINOR_ALLOCED\">MINOR_ALLOCED</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#md\">md</a>;", 
"", 
"<a class=\"id\" href=\"#bad_bdev\">bad_bdev</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#destroy_workqueue\">destroy_workqueue</a>(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#wq\">wq</a>);", 
"<a class=\"id\" href=\"#bad_thread\">bad_thread</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#del_gendisk\">del_gendisk</a>(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#disk\">disk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_disk\">put_disk</a>(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#disk\">disk</a>);", 
"<a class=\"id\" href=\"#bad_disk\">bad_disk</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_cleanup_queue\">blk_cleanup_queue</a>(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#queue\">queue</a>);", 
"<a class=\"id\" href=\"#bad_queue\">bad_queue</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_minor\">free_minor</a>(<a class=\"id\" href=\"#minor\">minor</a>);", 
"<a class=\"id\" href=\"#bad_minor\">bad_minor</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>);", 
"<a class=\"id\" href=\"#bad_module_get\">bad_module_get</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#unlock_fs\">unlock_fs</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>);", 
"", 
"static void <a class=\"id\" href=\"#free_dev\">free_dev</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#minor\">minor</a> = <a class=\"id\" href=\"#MINOR\">MINOR</a>(<a class=\"id\" href=\"#disk_devt\">disk_devt</a>(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#disk\">disk</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_fs\">unlock_fs</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bdput\">bdput</a>(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#bdev\">bdev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#destroy_workqueue\">destroy_workqueue</a>(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#wq\">wq</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#tio_pool\">tio_pool</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mempool_destroy\">mempool_destroy</a>(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#tio_pool\">tio_pool</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#io_pool\">io_pool</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mempool_destroy\">mempool_destroy</a>(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#io_pool\">io_pool</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#bs\">bs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bioset_free\">bioset_free</a>(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#bs\">bs</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_integrity_unregister\">blk_integrity_unregister</a>(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#disk\">disk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#del_gendisk\">del_gendisk</a>(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#disk\">disk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_minor\">free_minor</a>(<a class=\"id\" href=\"#minor\">minor</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#_minor_lock\">_minor_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#private_data\">private_data</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#_minor_lock\">_minor_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_disk\">put_disk</a>(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#disk\">disk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_cleanup_queue\">blk_cleanup_queue</a>(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#queue\">queue</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__bind_mempools\">__bind_mempools</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>, struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#t\">t</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_md_mempools\">dm_md_mempools</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#io_pool\">io_pool</a> && <a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#tio_pool\">tio_pool</a> && <a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#bs\">bs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* the md already has necessary mempools */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#dm_table_get_md_mempools\">dm_table_get_md_mempools</a>(<a class=\"id\" href=\"#t\">t</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#p\">p</a> || <a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#io_pool\">io_pool</a> || <a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#tio_pool\">tio_pool</a> || <a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#bs\">bs</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#io_pool\">io_pool</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#io_pool\">io_pool</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#io_pool\">io_pool</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#tio_pool\">tio_pool</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#tio_pool\">tio_pool</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#tio_pool\">tio_pool</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#bs\">bs</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#bs\">bs</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#bs\">bs</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/* mempool bind completed, now no need any mempools in the table */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_table_free_md_mempools\">dm_table_free_md_mempools</a>(<a class=\"id\" href=\"#t\">t</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Bind a table to the device.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#event_callback\">event_callback</a>(void *<a class=\"id\" href=\"#context\">context</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#uevents\">uevents</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a> = (struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *) <a class=\"id\" href=\"#context\">context</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#uevent_lock\">uevent_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_splice_init\">list_splice_init</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#uevent_list\">uevent_list</a>, &amp;<a class=\"id\" href=\"#uevents\">uevents</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#uevent_lock\">uevent_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_send_uevents\">dm_send_uevents</a>(&amp;<a class=\"id\" href=\"#uevents\">uevents</a>, &amp;<a class=\"id\" href=\"#disk_to_dev\">disk_to_dev</a>(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#disk\">disk</a>)-><a class=\"id\" href=\"#kobj\">kobj</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#event_nr\">event_nr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wake_up\">wake_up</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#eventq\">eventq</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__set_size\">__set_size</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>, <a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_capacity\">set_capacity</a>(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#disk\">disk</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#bdev\">bdev</a>-><a class=\"id\" href=\"#bd_inode\">bd_inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i_size_write\">i_size_write</a>(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#bdev\">bdev</a>-><a class=\"id\" href=\"#bd_inode\">bd_inode</a>, (<a class=\"id\" href=\"#loff_t\">loff_t</a>)<a class=\"id\" href=\"#size\">size</a> << <a class=\"id\" href=\"#SECTOR_SHIFT\">SECTOR_SHIFT</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#bdev\">bdev</a>-><a class=\"id\" href=\"#bd_inode\">bd_inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Returns old map, which caller must destroy.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#__bind\">__bind</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>, struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#t\">t</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#queue_limits\">queue_limits</a> *<a class=\"id\" href=\"#limits\">limits</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#old_map\">old_map</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a> = <a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#queue\">queue</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#dm_table_get_size\">dm_table_get_size</a>(<a class=\"id\" href=\"#t\">t</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Wipe any geometry if the size of the table changed.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> != <a class=\"id\" href=\"#get_capacity\">get_capacity</a>(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#disk\">disk</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#geometry\">geometry</a>, 0, sizeof(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#geometry\">geometry</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__set_size\">__set_size</a>(<a class=\"id\" href=\"#md\">md</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_table_event_callback\">dm_table_event_callback</a>(<a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#event_callback\">event_callback</a>, <a class=\"id\" href=\"#md\">md</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The queue hasn't been stopped yet, if the old table type wasn't</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * for request-based during suspension.  So stop it to prevent</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * I/O mapping before resume.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This must be done before setting the queue restrictions,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * because request-based dm may be run just after the setting.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dm_table_request_based\">dm_table_request_based</a>(<a class=\"id\" href=\"#t\">t</a>) && !<a class=\"id\" href=\"#blk_queue_stopped\">blk_queue_stopped</a>(<a class=\"id\" href=\"#q\">q</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stop_queue\">stop_queue</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__bind_mempools\">__bind_mempools</a>(<a class=\"id\" href=\"#md\">md</a>, <a class=\"id\" href=\"#t\">t</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_irqsave\">write_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#map_lock\">map_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_map\">old_map</a> = <a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#map\">map</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#map\">map</a> = <a class=\"id\" href=\"#t\">t</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_table_set_restrictions\">dm_table_set_restrictions</a>(<a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#limits\">limits</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_irqrestore\">write_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#map_lock\">map_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#old_map\">old_map</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Returns unbound table for the caller to free.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#__unbind\">__unbind</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#map\">map</a> = <a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#map\">map</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#map\">map</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_table_event_callback\">dm_table_event_callback</a>(<a class=\"id\" href=\"#map\">map</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_irqsave\">write_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#map_lock\">map_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#map\">map</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_irqrestore\">write_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#map_lock\">map_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#map\">map</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Constructor for a new device.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#dm_create\">dm_create</a>(int <a class=\"id\" href=\"#minor\">minor</a>, struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> **<a class=\"id\" href=\"#result\">result</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a> = <a class=\"id\" href=\"#alloc_dev\">alloc_dev</a>(<a class=\"id\" href=\"#minor\">minor</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#md\">md</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_sysfs_init\">dm_sysfs_init</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#md\">md</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Functions to manage md-&gt;type.</span>", 
"<span class=\"comment\"> * All are required to hold md-&gt;type_lock.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#dm_lock_md_type\">dm_lock_md_type</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#type_lock\">type_lock</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#dm_unlock_md_type\">dm_unlock_md_type</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#type_lock\">type_lock</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#dm_set_md_type\">dm_set_md_type</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>, unsigned <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#type\">type</a>;", 
"}", 
"", 
"unsigned <a class=\"id\" href=\"#dm_get_md_type\">dm_get_md_type</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#type\">type</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Fully initialize a request-based queue (-&gt;elevator, -&gt;request_fn, etc).</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#dm_init_request_based_queue\">dm_init_request_based_queue</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#elevator\">elevator</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Fully initialize the queue */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a> = <a class=\"id\" href=\"#blk_init_allocated_queue\">blk_init_allocated_queue</a>(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#queue\">queue</a>, <a class=\"id\" href=\"#dm_request_fn\">dm_request_fn</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#q\">q</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#queue\">queue</a> = <a class=\"id\" href=\"#q\">q</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#saved_make_request_fn\">saved_make_request_fn</a> = <a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#make_request_fn\">make_request_fn</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_init_md_queue\">dm_init_md_queue</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_queue_softirq_done\">blk_queue_softirq_done</a>(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#queue\">queue</a>, <a class=\"id\" href=\"#dm_softirq_done\">dm_softirq_done</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_queue_prep_rq\">blk_queue_prep_rq</a>(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#queue\">queue</a>, <a class=\"id\" href=\"#dm_prep_fn\">dm_prep_fn</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_queue_lld_busy\">blk_queue_lld_busy</a>(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#queue\">queue</a>, <a class=\"id\" href=\"#dm_lld_busy\">dm_lld_busy</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_queue_ordered\">blk_queue_ordered</a>(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#queue\">queue</a>, <a class=\"id\" href=\"#QUEUE_ORDERED_DRAIN_FLUSH\">QUEUE_ORDERED_DRAIN_FLUSH</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elv_register_queue\">elv_register_queue</a>(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#queue\">queue</a>);", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Setup the DM device's queue based on md's type</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#dm_setup_md_queue\">dm_setup_md_queue</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>)", 
"{", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#dm_get_md_type\">dm_get_md_type</a>(<a class=\"id\" href=\"#md\">md</a>) == <a class=\"id\" href=\"#DM_TYPE_REQUEST_BASED\">DM_TYPE_REQUEST_BASED</a>) &&", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#dm_init_request_based_queue\">dm_init_request_based_queue</a>(<a class=\"id\" href=\"#md\">md</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMWARN\">DMWARN</a>(\"Cannot initialize queue for request-based mapped device\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#dm_find_md\">dm_find_md</a>(<a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#minor\">minor</a> = <a class=\"id\" href=\"#MINOR\">MINOR</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#MAJOR\">MAJOR</a>(<a class=\"id\" href=\"#dev\">dev</a>) != <a class=\"id\" href=\"#_major\">_major</a> || <a class=\"id\" href=\"#minor\">minor</a> >= (1 << <a class=\"id\" href=\"#MINORBITS\">MINORBITS</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#_minor_lock\">_minor_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a> = <a class=\"id\" href=\"#idr_find\">idr_find</a>(&amp;<a class=\"id\" href=\"#_minor_idr\">_minor_idr</a>, <a class=\"id\" href=\"#minor\">minor</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#md\">md</a> && (<a class=\"id\" href=\"#md\">md</a> == <a class=\"id\" href=\"#MINOR_ALLOCED\">MINOR_ALLOCED</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>   (<a class=\"id\" href=\"#MINOR\">MINOR</a>(<a class=\"id\" href=\"#disk_devt\">disk_devt</a>(<a class=\"id\" href=\"#dm_disk\">dm_disk</a>(<a class=\"id\" href=\"#md\">md</a>))) != <a class=\"id\" href=\"#minor\">minor</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#dm_deleting_md\">dm_deleting_md</a>(<a class=\"id\" href=\"#md\">md</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#DMF_FREEING\">DMF_FREEING</a>, &amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#flags\">flags</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#_minor_lock\">_minor_lock</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#md\">md</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#dm_get_md\">dm_get_md</a>(<a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a> = <a class=\"id\" href=\"#dm_find_md\">dm_find_md</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#md\">md</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_get\">dm_get</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#md\">md</a>;", 
"}", 
"", 
"void *<a class=\"id\" href=\"#dm_get_mdptr\">dm_get_mdptr</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#interface_ptr\">interface_ptr</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#dm_set_mdptr\">dm_set_mdptr</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>, void *<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#interface_ptr\">interface_ptr</a> = <a class=\"id\" href=\"#ptr\">ptr</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#dm_get\">dm_get</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#holders\">holders</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#DMF_FREEING\">DMF_FREEING</a>, &amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#flags\">flags</a>));", 
"}", 
"", 
"const char *<a class=\"id\" href=\"#dm_device_name\">dm_device_name</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#name\">name</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#dm_device_name\">dm_device_name</a>);", 
"", 
"static void <a class=\"id\" href=\"#__dm_destroy\">__dm_destroy</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#wait\">wait</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#map\">map</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#might_sleep\">might_sleep</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#_minor_lock\">_minor_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#map\">map</a> = <a class=\"id\" href=\"#dm_get_live_table\">dm_get_live_table</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idr_replace\">idr_replace</a>(&amp;<a class=\"id\" href=\"#_minor_idr\">_minor_idr</a>, <a class=\"id\" href=\"#MINOR_ALLOCED\">MINOR_ALLOCED</a>, <a class=\"id\" href=\"#MINOR\">MINOR</a>(<a class=\"id\" href=\"#disk_devt\">disk_devt</a>(<a class=\"id\" href=\"#dm_disk\">dm_disk</a>(<a class=\"id\" href=\"#md\">md</a>))));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#DMF_FREEING\">DMF_FREEING</a>, &amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#_minor_lock\">_minor_lock</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dm_suspended_md\">dm_suspended_md</a>(<a class=\"id\" href=\"#md\">md</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_table_presuspend_targets\">dm_table_presuspend_targets</a>(<a class=\"id\" href=\"#map\">map</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_table_postsuspend_targets\">dm_table_postsuspend_targets</a>(<a class=\"id\" href=\"#map\">map</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Rare, but there may be I/O requests still going to complete,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * for example.  Wait for all references to disappear.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * No one should increment the reference count of the mapped_device,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * after the mapped_device state becomes DMF_FREEING.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#wait\">wait</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#holders\">holders</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msleep\">msleep</a>(1);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#holders\">holders</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMWARN\">DMWARN</a>(\"%s: Forcibly removing mapped_device still in use! (%d users)\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#dm_device_name\">dm_device_name</a>(<a class=\"id\" href=\"#md\">md</a>), <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#holders\">holders</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_sysfs_exit\">dm_sysfs_exit</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_table_put\">dm_table_put</a>(<a class=\"id\" href=\"#map\">map</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_table_destroy\">dm_table_destroy</a>(<a class=\"id\" href=\"#__unbind\">__unbind</a>(<a class=\"id\" href=\"#md\">md</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_dev\">free_dev</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#dm_destroy\">dm_destroy</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__dm_destroy\">__dm_destroy</a>(<a class=\"id\" href=\"#md\">md</a>, <a class=\"id\" href=\"#true\">true</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#dm_destroy_immediate\">dm_destroy_immediate</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__dm_destroy\">__dm_destroy</a>(<a class=\"id\" href=\"#md\">md</a>, <a class=\"id\" href=\"#false\">false</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#dm_put\">dm_put</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_dec\">atomic_dec</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#holders\">holders</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#dm_put\">dm_put</a>);", 
"", 
"static int <a class=\"id\" href=\"#dm_wait_for_completion\">dm_wait_for_completion</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>, int <a class=\"id\" href=\"#interruptible\">interruptible</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#r\">r</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DECLARE_WAITQUEUE\">DECLARE_WAITQUEUE</a>(<a class=\"id\" href=\"#wait\">wait</a>, <a class=\"id\" href=\"#current\">current</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_unplug_all\">dm_unplug_all</a>(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#queue\">queue</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#add_wait_queue\">add_wait_queue</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#wait\">wait</a>, &amp;<a class=\"id\" href=\"#wait\">wait</a>);", 
"", 
"<span class=\"ts\"/>while (1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_current_state\">set_current_state</a>(<a class=\"id\" href=\"#interruptible\">interruptible</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smp_mb\">smp_mb</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#md_in_flight\">md_in_flight</a>(<a class=\"id\" href=\"#md\">md</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#interruptible\">interruptible</a> == <a class=\"id\" href=\"#TASK_INTERRUPTIBLE\">TASK_INTERRUPTIBLE</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#signal_pending\">signal_pending</a>(<a class=\"id\" href=\"#current\">current</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = -<a class=\"id\" href=\"#EINTR\">EINTR</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#io_schedule\">io_schedule</a>();", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_current_state\">set_current_state</a>(<a class=\"id\" href=\"#TASK_RUNNING\">TASK_RUNNING</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#remove_wait_queue\">remove_wait_queue</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#wait\">wait</a>, &amp;<a class=\"id\" href=\"#wait\">wait</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#dm_flush\">dm_flush</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_wait_for_completion\">dm_wait_for_completion</a>(<a class=\"id\" href=\"#md\">md</a>, <a class=\"id\" href=\"#TASK_UNINTERRUPTIBLE\">TASK_UNINTERRUPTIBLE</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio_init\">bio_init</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#barrier_bio\">barrier_bio</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#barrier_bio\">barrier_bio</a>.<a class=\"id\" href=\"#bi_bdev\">bi_bdev</a> = <a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#bdev\">bdev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#barrier_bio\">barrier_bio</a>.<a class=\"id\" href=\"#bi_rw\">bi_rw</a> = <a class=\"id\" href=\"#WRITE_BARRIER\">WRITE_BARRIER</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__split_and_process_bio\">__split_and_process_bio</a>(<a class=\"id\" href=\"#md\">md</a>, &amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#barrier_bio\">barrier_bio</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_wait_for_completion\">dm_wait_for_completion</a>(<a class=\"id\" href=\"#md\">md</a>, <a class=\"id\" href=\"#TASK_UNINTERRUPTIBLE\">TASK_UNINTERRUPTIBLE</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#process_barrier\">process_barrier</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>, struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#barrier_error\">barrier_error</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_flush\">dm_flush</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bio_empty_barrier\">bio_empty_barrier</a>(<a class=\"id\" href=\"#bio\">bio</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__split_and_process_bio\">__split_and_process_bio</a>(<a class=\"id\" href=\"#md\">md</a>, <a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If the request isn't supported, don't waste time with</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the second flush.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#barrier_error\">barrier_error</a> != -<a class=\"id\" href=\"#EOPNOTSUPP\">EOPNOTSUPP</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_flush\">dm_flush</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#barrier_error\">barrier_error</a> != <a class=\"id\" href=\"#DM_ENDIO_REQUEUE\">DM_ENDIO_REQUEUE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio_endio\">bio_endio</a>(<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#barrier_error\">barrier_error</a>);", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#deferred_lock\">deferred_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio_list_add_head\">bio_list_add_head</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#deferred\">deferred</a>, <a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#deferred_lock\">deferred_lock</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Process the deferred bios</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#dm_wq_work\">dm_wq_work</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#work\">work</a>, struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#work\">work</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#c\">c</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#io_lock\">io_lock</a>);", 
"", 
"<span class=\"ts\"/>while (!<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#DMF_BLOCK_IO_FOR_SUSPEND\">DMF_BLOCK_IO_FOR_SUSPEND</a>, &amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#flags\">flags</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#deferred_lock\">deferred_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#bio_list_pop\">bio_list_pop</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#deferred\">deferred</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#deferred_lock\">deferred_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#c\">c</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#DMF_QUEUE_IO_TO_THREAD\">DMF_QUEUE_IO_TO_THREAD</a>, &amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#io_lock\">io_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dm_request_based\">dm_request_based</a>(<a class=\"id\" href=\"#md\">md</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#generic_make_request\">generic_make_request</a>(<a class=\"id\" href=\"#c\">c</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#bi_rw\">bi_rw</a> &amp; <a class=\"id\" href=\"#REQ_HARDBARRIER\">REQ_HARDBARRIER</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#process_barrier\">process_barrier</a>(<a class=\"id\" href=\"#md\">md</a>, <a class=\"id\" href=\"#c\">c</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__split_and_process_bio\">__split_and_process_bio</a>(<a class=\"id\" href=\"#md\">md</a>, <a class=\"id\" href=\"#c\">c</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#io_lock\">io_lock</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#io_lock\">io_lock</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#dm_queue_flush\">dm_queue_flush</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#DMF_BLOCK_IO_FOR_SUSPEND\">DMF_BLOCK_IO_FOR_SUSPEND</a>, &amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#smp_mb__after_clear_bit\">smp_mb__after_clear_bit</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#queue_work\">queue_work</a>(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#wq\">wq</a>, &amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#work\">work</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#dm_rq_set_target_request_nr\">dm_rq_set_target_request_nr</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#clone\">clone</a>, unsigned <a class=\"id\" href=\"#request_nr\">request_nr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_rq_target_io\">dm_rq_target_io</a> *<a class=\"id\" href=\"#tio\">tio</a> = <a class=\"id\" href=\"#clone\">clone</a>-><a class=\"id\" href=\"#end_io_data\">end_io_data</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tio\">tio</a>-><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#target_request_nr\">target_request_nr</a> = <a class=\"id\" href=\"#request_nr\">request_nr</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Issue barrier requests to targets and wait for their completion. */</span>", 
"static int <a class=\"id\" href=\"#dm_rq_barrier\">dm_rq_barrier</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#j\">j</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#map\">map</a> = <a class=\"id\" href=\"#dm_get_live_table\">dm_get_live_table</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#num_targets\">num_targets</a> = <a class=\"id\" href=\"#dm_table_get_num_targets\">dm_table_get_num_targets</a>(<a class=\"id\" href=\"#map\">map</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_target\">dm_target</a> *<a class=\"id\" href=\"#ti\">ti</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#clone\">clone</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#barrier_error\">barrier_error</a> = 0;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#num_targets\">num_targets</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ti\">ti</a> = <a class=\"id\" href=\"#dm_table_get_target\">dm_table_get_target</a>(<a class=\"id\" href=\"#map\">map</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#ti\">ti</a>-><a class=\"id\" href=\"#num_flush_requests\">num_flush_requests</a>; <a class=\"id\" href=\"#j\">j</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clone\">clone</a> = <a class=\"id\" href=\"#clone_rq\">clone_rq</a>(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#flush_request\">flush_request</a>, <a class=\"id\" href=\"#md\">md</a>, <a class=\"id\" href=\"#GFP_NOIO\">GFP_NOIO</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_rq_set_target_request_nr\">dm_rq_set_target_request_nr</a>(<a class=\"id\" href=\"#clone\">clone</a>, <a class=\"id\" href=\"#j\">j</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#pending\">pending</a>[<a class=\"id\" href=\"#rq_data_dir\">rq_data_dir</a>(<a class=\"id\" href=\"#clone\">clone</a>)]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#map_request\">map_request</a>(<a class=\"id\" href=\"#ti\">ti</a>, <a class=\"id\" href=\"#clone\">clone</a>, <a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_wait_for_completion\">dm_wait_for_completion</a>(<a class=\"id\" href=\"#md\">md</a>, <a class=\"id\" href=\"#TASK_UNINTERRUPTIBLE\">TASK_UNINTERRUPTIBLE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_table_put\">dm_table_put</a>(<a class=\"id\" href=\"#map\">map</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#barrier_error\">barrier_error</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#dm_rq_barrier_work\">dm_rq_barrier_work</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#work\">work</a>, struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#barrier_work\">barrier_work</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a> = <a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#queue\">queue</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Hold the md reference here and leave it at the last part so that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the md can't be deleted by device opener when the barrier request</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * completes.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_get\">dm_get</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#dm_rq_barrier\">dm_rq_barrier</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a> = <a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#flush_request\">flush_request</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#flush_request\">flush_request</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> == <a class=\"id\" href=\"#DM_ENDIO_REQUEUE\">DM_ENDIO_REQUEUE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_lock\">queue_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_requeue_request\">blk_requeue_request</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_lock\">queue_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_end_request_all\">blk_end_request_all</a>(<a class=\"id\" href=\"#rq\">rq</a>, <a class=\"id\" href=\"#error\">error</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_run_queue\">blk_run_queue</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_put\">dm_put</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Swap in a new table, returning the old one for the caller to destroy.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#dm_swap_table\">dm_swap_table</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>, struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#table\">table</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#map\">map</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EINVAL\">EINVAL</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#queue_limits\">queue_limits</a> <a class=\"id\" href=\"#limits\">limits</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#r\">r</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#suspend_lock\">suspend_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* device must be suspended */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dm_suspended_md\">dm_suspended_md</a>(<a class=\"id\" href=\"#md\">md</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#dm_calculate_queue_limits\">dm_calculate_queue_limits</a>(<a class=\"id\" href=\"#table\">table</a>, &amp;<a class=\"id\" href=\"#limits\">limits</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#map\">map</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#r\">r</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#map\">map</a> = <a class=\"id\" href=\"#__bind\">__bind</a>(<a class=\"id\" href=\"#md\">md</a>, <a class=\"id\" href=\"#table\">table</a>, &amp;<a class=\"id\" href=\"#limits\">limits</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#suspend_lock\">suspend_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#map\">map</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Functions to lock and unlock any filesystem running on the</span>", 
"<span class=\"comment\"> * device.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#lock_fs\">lock_fs</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#r\">r</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#frozen_sb\">frozen_sb</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#frozen_sb\">frozen_sb</a> = <a class=\"id\" href=\"#freeze_bdev\">freeze_bdev</a>(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#bdev\">bdev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#frozen_sb\">frozen_sb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#frozen_sb\">frozen_sb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#frozen_sb\">frozen_sb</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
];
xr_frag_insert('l/4f/f3be9a67b00d5e9773df8327e0fd181094f025.xr', __xr_tmp);
