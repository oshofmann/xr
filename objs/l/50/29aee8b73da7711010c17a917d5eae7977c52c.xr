var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#handler\">handler</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Find the handler for the prefix and dispatch its get() operation.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#generic_getxattr\">generic_getxattr</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, const char *<a class=\"id\" href=\"#name\">name</a>, void *<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#xattr_handler\">xattr_handler</a> *<a class=\"id\" href=\"#handler\">handler</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handler\">handler</a> = <a class=\"id\" href=\"#xattr_resolve_name\">xattr_resolve_name</a>(<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_sb\">d_sb</a>-><a class=\"id\" href=\"#s_xattr\">s_xattr</a>, &amp;<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#handler\">handler</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EOPNOTSUPP\">EOPNOTSUPP</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#handler\">handler</a>-><a class=\"id\" href=\"#get\">get</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#handler\">handler</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Combine the results of the list() operation from every xattr_handler in the</span>", 
"<span class=\"comment\"> * list.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#generic_listxattr\">generic_listxattr</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, char *<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#buffer_size\">buffer_size</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#xattr_handler\">xattr_handler</a> *<a class=\"id\" href=\"#handler\">handler</a>, **<a class=\"id\" href=\"#handlers\">handlers</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_sb\">d_sb</a>-><a class=\"id\" href=\"#s_xattr\">s_xattr</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#size\">size</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#buffer\">buffer</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#for_each_xattr_handler\">for_each_xattr_handler</a>(<a class=\"id\" href=\"#handlers\">handlers</a>, <a class=\"id\" href=\"#handler\">handler</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> += <a class=\"id\" href=\"#handler\">handler</a>-><a class=\"id\" href=\"#list\">list</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0, <a class=\"id\" href=\"#NULL\">NULL</a>, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#handler\">handler</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#buffer\">buffer</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#for_each_xattr_handler\">for_each_xattr_handler</a>(<a class=\"id\" href=\"#handlers\">handlers</a>, <a class=\"id\" href=\"#handler\">handler</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#handler\">handler</a>-><a class=\"id\" href=\"#list\">list</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#buffer_size\">buffer_size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#NULL\">NULL</a>, 0, <a class=\"id\" href=\"#handler\">handler</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> &gt; <a class=\"id\" href=\"#buffer_size\">buffer_size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ERANGE\">ERANGE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> += <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buffer_size\">buffer_size</a> -= <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#buf\">buf</a> - <a class=\"id\" href=\"#buffer\">buffer</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#size\">size</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Find the handler for the prefix and dispatch its set() operation.</span>", 
"<span class=\"comment\"> */</span>", 
"int", 
"<a class=\"id\" href=\"#generic_setxattr\">generic_setxattr</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, const char *<a class=\"id\" href=\"#name\">name</a>, const void *<a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>, int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#xattr_handler\">xattr_handler</a> *<a class=\"id\" href=\"#handler\">handler</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#value\">value</a> = \"\";  <span class=\"comment\">/* empty EA, do not remove */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handler\">handler</a> = <a class=\"id\" href=\"#xattr_resolve_name\">xattr_resolve_name</a>(<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_sb\">d_sb</a>-><a class=\"id\" href=\"#s_xattr\">s_xattr</a>, &amp;<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#handler\">handler</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EOPNOTSUPP\">EOPNOTSUPP</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#handler\">handler</a>-><a class=\"id\" href=\"#set\">set</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#size\">size</a>, 0, <a class=\"id\" href=\"#handler\">handler</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Find the handler for the prefix and dispatch its set() operation to remove</span>", 
"<span class=\"comment\"> * any associated extended attribute.</span>", 
"<span class=\"comment\"> */</span>", 
"int", 
"<a class=\"id\" href=\"#generic_removexattr\">generic_removexattr</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, const char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#xattr_handler\">xattr_handler</a> *<a class=\"id\" href=\"#handler\">handler</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handler\">handler</a> = <a class=\"id\" href=\"#xattr_resolve_name\">xattr_resolve_name</a>(<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_sb\">d_sb</a>-><a class=\"id\" href=\"#s_xattr\">s_xattr</a>, &amp;<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#handler\">handler</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EOPNOTSUPP\">EOPNOTSUPP</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#handler\">handler</a>-><a class=\"id\" href=\"#set\">set</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#XATTR_REPLACE\">XATTR_REPLACE</a>, <a class=\"id\" href=\"#handler\">handler</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#generic_getxattr\">generic_getxattr</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#generic_listxattr\">generic_listxattr</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#generic_setxattr\">generic_setxattr</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#generic_removexattr\">generic_removexattr</a>);", 
];
xr_frag_insert('l/50/29aee8b73da7711010c17a917d5eae7977c52c.xr', __xr_tmp);
