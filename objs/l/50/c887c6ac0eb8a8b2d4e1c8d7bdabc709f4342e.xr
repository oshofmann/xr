var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Functions related to interrupt-poll handling in the block layer. This</span>", 
"<span class=\"comment\"> * is similar to NAPI for network devices.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bio\">bio</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blkdev\">blkdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cpu\">cpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blk\">blk</a>-<a class=\"id\" href=\"#iopoll\">iopoll</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"blk.h\"", 
"", 
"int <a class=\"id\" href=\"#blk_iopoll_enabled\">blk_iopoll_enabled</a> = 1;", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#blk_iopoll_enabled\">blk_iopoll_enabled</a>);", 
"", 
"static unsigned int <a class=\"id\" href=\"#blk_iopoll_budget\">blk_iopoll_budget</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = 256;", 
"", 
"static <a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(struct <a class=\"id\" href=\"#list_head\">list_head</a>, <a class=\"id\" href=\"#blk_cpu_iopoll\">blk_cpu_iopoll</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * blk_iopoll_sched - Schedule a run of the iopoll handler</span>", 
"<span class=\"comment\"> * @iop:      The parent iopoll structure</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> *     Add this blk_iopoll structure to the pending poll list and trigger the</span>", 
"<span class=\"comment\"> *     raise of the blk iopoll softirq. The driver must already have gotten a</span>", 
"<span class=\"comment\"> *     successful return from blk_iopoll_sched_prep() before calling this.</span>", 
"<span class=\"comment\"> **/</span>", 
"void <a class=\"id\" href=\"#blk_iopoll_sched\">blk_iopoll_sched</a>(struct <a class=\"id\" href=\"#blk_iopoll\">blk_iopoll</a> *<a class=\"id\" href=\"#iop\">iop</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_save\">local_irq_save</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#iop\">iop</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#blk_cpu_iopoll\">blk_cpu_iopoll</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__raise_softirq_irqoff\">__raise_softirq_irqoff</a>(<a class=\"id\" href=\"#BLOCK_IOPOLL_SOFTIRQ\">BLOCK_IOPOLL_SOFTIRQ</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_restore\">local_irq_restore</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#blk_iopoll_sched\">blk_iopoll_sched</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * __blk_iopoll_complete - Mark this @iop as un-polled again</span>", 
"<span class=\"comment\"> * @iop:      The parent iopoll structure</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> *     See blk_iopoll_complete(). This function must be called with interrupts</span>", 
"<span class=\"comment\"> *     disabled.</span>", 
"<span class=\"comment\"> **/</span>", 
"void <a class=\"id\" href=\"#__blk_iopoll_complete\">__blk_iopoll_complete</a>(struct <a class=\"id\" href=\"#blk_iopoll\">blk_iopoll</a> *<a class=\"id\" href=\"#iop\">iop</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#iop\">iop</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#smp_mb__before_clear_bit\">smp_mb__before_clear_bit</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_bit_unlock\">clear_bit_unlock</a>(<a class=\"id\" href=\"#IOPOLL_F_SCHED\">IOPOLL_F_SCHED</a>, &amp;<a class=\"id\" href=\"#iop\">iop</a>-><a class=\"id\" href=\"#state\">state</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__blk_iopoll_complete\">__blk_iopoll_complete</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * blk_iopoll_complete - Mark this @iop as un-polled again</span>", 
"<span class=\"comment\"> * @iop:      The parent iopoll structure</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> *     If a driver consumes less than the assigned budget in its run of the</span>", 
"<span class=\"comment\"> *     iopoll handler, it'll end the polled mode by calling this function. The</span>", 
"<span class=\"comment\"> *     iopoll handler will not be invoked again before blk_iopoll_sched_prep()</span>", 
"<span class=\"comment\"> *     is called.</span>", 
"<span class=\"comment\"> **/</span>", 
"void <a class=\"id\" href=\"#blk_iopoll_complete\">blk_iopoll_complete</a>(struct <a class=\"id\" href=\"#blk_iopoll\">blk_iopoll</a> *<a class=\"id\" href=\"#iopoll\">iopoll</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_save\">local_irq_save</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__blk_iopoll_complete\">__blk_iopoll_complete</a>(<a class=\"id\" href=\"#iopoll\">iopoll</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_restore\">local_irq_restore</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#blk_iopoll_complete\">blk_iopoll_complete</a>);", 
"", 
"static void <a class=\"id\" href=\"#blk_iopoll_softirq\">blk_iopoll_softirq</a>(struct <a class=\"id\" href=\"#softirq_action\">softirq_action</a> *<a class=\"id\" href=\"#h\">h</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#list\">list</a> = &amp;<a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#blk_cpu_iopoll\">blk_cpu_iopoll</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rearm\">rearm</a> = 0, <a class=\"id\" href=\"#budget\">budget</a> = <a class=\"id\" href=\"#blk_iopoll_budget\">blk_iopoll_budget</a>;", 
];
xr_frag_insert('l/50/c887c6ac0eb8a8b2d4e1c8d7bdabc709f4342e.xr', __xr_tmp);
