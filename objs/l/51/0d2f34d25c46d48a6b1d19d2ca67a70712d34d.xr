var __xr_tmp = [
"extern void<span class=\"ts\"/>   <a class=\"id\" href=\"#journal_destroy_revoke_caches\">journal_destroy_revoke_caches</a>(void);", 
"extern int<span class=\"ts\"/>   <a class=\"id\" href=\"#journal_init_revoke_caches\">journal_init_revoke_caches</a>(void);", 
"", 
"extern void<span class=\"ts\"/>   <a class=\"id\" href=\"#journal_destroy_revoke\">journal_destroy_revoke</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *);", 
"extern int<span class=\"ts\"/>   <a class=\"id\" href=\"#journal_revoke\">journal_revoke</a> (<a class=\"id\" href=\"#handle_t\">handle_t</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int, struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *);", 
"extern int<span class=\"ts\"/>   <a class=\"id\" href=\"#journal_cancel_revoke\">journal_cancel_revoke</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *, struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *);", 
"extern void<span class=\"ts\"/>   <a class=\"id\" href=\"#journal_write_revoke_records\">journal_write_revoke_records</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transaction_t\">transaction_t</a> *, int);", 
"", 
"<span class=\"comment\">/* Recovery revoke support */</span>", 
"extern int<span class=\"ts\"/><a class=\"id\" href=\"#journal_set_revoke\">journal_set_revoke</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *, unsigned int, <a class=\"id\" href=\"#tid_t\">tid_t</a>);", 
"extern int<span class=\"ts\"/><a class=\"id\" href=\"#journal_test_revoke\">journal_test_revoke</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *, unsigned int, <a class=\"id\" href=\"#tid_t\">tid_t</a>);", 
"extern void<span class=\"ts\"/><a class=\"id\" href=\"#journal_clear_revoke\">journal_clear_revoke</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *);", 
"extern void<span class=\"ts\"/><a class=\"id\" href=\"#journal_switch_revoke_table\">journal_switch_revoke_table</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The log thread user interface:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Request space in the current transaction, and force transaction commit</span>", 
"<span class=\"comment\"> * transitions on demand.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#__log_space_left\">__log_space_left</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *); <span class=\"comment\">/* Called with journal locked */</span>", 
"int <a class=\"id\" href=\"#log_start_commit\">log_start_commit</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#tid_t\">tid_t</a> <a class=\"id\" href=\"#tid\">tid</a>);", 
"int <a class=\"id\" href=\"#__log_start_commit\">__log_start_commit</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#tid_t\">tid_t</a> <a class=\"id\" href=\"#tid\">tid</a>);", 
"int <a class=\"id\" href=\"#journal_start_commit\">journal_start_commit</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#tid_t\">tid_t</a> *<a class=\"id\" href=\"#tid\">tid</a>);", 
"int <a class=\"id\" href=\"#journal_force_commit_nested\">journal_force_commit_nested</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>);", 
"int <a class=\"id\" href=\"#log_wait_commit\">log_wait_commit</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#tid_t\">tid_t</a> <a class=\"id\" href=\"#tid\">tid</a>);", 
"int <a class=\"id\" href=\"#log_do_checkpoint\">log_do_checkpoint</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>);", 
"int <a class=\"id\" href=\"#journal_trans_will_send_data_barrier\">journal_trans_will_send_data_barrier</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#tid_t\">tid_t</a> <a class=\"id\" href=\"#tid\">tid</a>);", 
"", 
"void <a class=\"id\" href=\"#__log_wait_for_space\">__log_wait_for_space</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>);", 
"extern void<span class=\"ts\"/><a class=\"id\" href=\"#__journal_drop_transaction\">__journal_drop_transaction</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *, <a class=\"id\" href=\"#transaction_t\">transaction_t</a> *);", 
"extern int<span class=\"ts\"/><a class=\"id\" href=\"#cleanup_journal_tail\">cleanup_journal_tail</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *);", 
"", 
"<span class=\"comment\">/* Debugging code only: */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#jbd_ENOSYS\">jbd_ENOSYS</a>() \\", 
"do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>           \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a> (<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"JBD unimplemented function %s\\n\", <a class=\"id\" href=\"#__func__\">__func__</a>); \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#TASK_UNINTERRUPTIBLE\">TASK_UNINTERRUPTIBLE</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>           \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#schedule\">schedule</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>           \\", 
"} while (1)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * is_journal_abort</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Simple test wrapper function to test the JFS_ABORT state flag.  This</span>", 
"<span class=\"comment\"> * bit, when set, indicates that we have had a fatal error somewhere,</span>", 
"<span class=\"comment\"> * either inside the journaling layer or indicated to us by the client</span>", 
"<span class=\"comment\"> * (eg. ext3), and that we and should not commit any further</span>", 
"<span class=\"comment\"> * transactions.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#is_journal_aborted\">is_journal_aborted</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_flags\">j_flags</a> &amp; <a class=\"id\" href=\"#JFS_ABORT\">JFS_ABORT</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#is_handle_aborted\">is_handle_aborted</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#h_aborted\">h_aborted</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#is_journal_aborted\">is_journal_aborted</a>(<a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#h_transaction\">h_transaction</a>-><a class=\"id\" href=\"#t_journal\">t_journal</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#journal_abort_handle\">journal_abort_handle</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#h_aborted\">h_aborted</a> = 1;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __KERNEL__   */</span>", 
"", 
"<span class=\"comment\">/* Comparison functions for transaction IDs: perform comparisons using</span>", 
"<span class=\"comment\"> * modulo arithmetic so that they work over sequence number wraps. */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#tid_gt\">tid_gt</a>(<a class=\"id\" href=\"#tid_t\">tid_t</a> <a class=\"id\" href=\"#x\">x</a>, <a class=\"id\" href=\"#tid_t\">tid_t</a> <a class=\"id\" href=\"#y\">y</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#difference\">difference</a> = (<a class=\"id\" href=\"#x\">x</a> - <a class=\"id\" href=\"#y\">y</a>);", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#difference\">difference</a> &gt; 0);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#tid_geq\">tid_geq</a>(<a class=\"id\" href=\"#tid_t\">tid_t</a> <a class=\"id\" href=\"#x\">x</a>, <a class=\"id\" href=\"#tid_t\">tid_t</a> <a class=\"id\" href=\"#y\">y</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#difference\">difference</a> = (<a class=\"id\" href=\"#x\">x</a> - <a class=\"id\" href=\"#y\">y</a>);", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#difference\">difference</a> >= 0);", 
"}", 
"", 
"extern int <a class=\"id\" href=\"#journal_blocks_per_page\">journal_blocks_per_page</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Return the minimum number of blocks which must be free in the journal</span>", 
"<span class=\"comment\"> * before a new transaction may be started.  Must be called under j_state_lock.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#jbd_space_needed\">jbd_space_needed</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nblocks\">nblocks</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_max_transaction_buffers\">j_max_transaction_buffers</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_committing_transaction\">j_committing_transaction</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nblocks\">nblocks</a> += <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_committing_transaction\">j_committing_transaction</a>->", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t_outstanding_credits\">t_outstanding_credits</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nblocks\">nblocks</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Definitions which augment the buffer_head layer</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/* journaling buffer types */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BJ_None\">BJ_None</a><span class=\"ts\"/><span class=\"ts\"/>0<span class=\"ts\"/><span class=\"comment\">/* Not journaled */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BJ_SyncData\">BJ_SyncData</a><span class=\"ts\"/>1<span class=\"ts\"/><span class=\"comment\">/* Normal data: flush before commit */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BJ_Metadata\">BJ_Metadata</a><span class=\"ts\"/>2<span class=\"ts\"/><span class=\"comment\">/* Normal journaled metadata */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BJ_Forget\">BJ_Forget</a><span class=\"ts\"/>3<span class=\"ts\"/><span class=\"comment\">/* Buffer superseded by this transaction */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BJ_IO\">BJ_IO</a><span class=\"ts\"/><span class=\"ts\"/>4<span class=\"ts\"/><span class=\"comment\">/* Buffer is for temporary IO use */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BJ_Shadow\">BJ_Shadow</a><span class=\"ts\"/>5<span class=\"ts\"/><span class=\"comment\">/* Buffer contents being shadowed to the log */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BJ_LogCtl\">BJ_LogCtl</a><span class=\"ts\"/>6<span class=\"ts\"/><span class=\"comment\">/* Buffer contains log descriptors */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BJ_Reserved\">BJ_Reserved</a><span class=\"ts\"/>7<span class=\"ts\"/><span class=\"comment\">/* Buffer is reserved for access by journal */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BJ_Locked\">BJ_Locked</a><span class=\"ts\"/>8<span class=\"ts\"/><span class=\"comment\">/* Locked for I/O during commit */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BJ_Types\">BJ_Types</a><span class=\"ts\"/>9", 
"", 
"extern int <a class=\"id\" href=\"#jbd_blocks_per_page\">jbd_blocks_per_page</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#buffer_trace_init\">buffer_trace_init</a>(<a class=\"id\" href=\"#bh\">bh</a>)<span class=\"ts\"/>do {} while (0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#print_buffer_fields\">print_buffer_fields</a>(<a class=\"id\" href=\"#bh\">bh</a>)<span class=\"ts\"/>do {} while (0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#print_buffer_trace\">print_buffer_trace</a>(<a class=\"id\" href=\"#bh\">bh</a>)<span class=\"ts\"/>do {} while (0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BUFFER_TRACE\">BUFFER_TRACE</a>(<a class=\"id\" href=\"#bh\">bh</a>, <a class=\"id\" href=\"#info\">info</a>)<span class=\"ts\"/>do {} while (0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BUFFER_TRACE2\">BUFFER_TRACE2</a>(<a class=\"id\" href=\"#bh\">bh</a>, <a class=\"id\" href=\"#bh2\">bh2</a>, <a class=\"id\" href=\"#info\">info</a>)<span class=\"ts\"/>do {} while (0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#JBUFFER_TRACE\">JBUFFER_TRACE</a>(<a class=\"id\" href=\"#jh\">jh</a>, <a class=\"id\" href=\"#info\">info</a>)<span class=\"ts\"/>do {} while (0)", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* __KERNEL__ */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* _LINUX_JBD_H */</span>", 
];
xr_frag_insert('l/51/0d2f34d25c46d48a6b1d19d2ca67a70712d34d.xr', __xr_tmp);
