var __xr_tmp = [
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BUS_ATARI\">BUS_ATARI</a><span class=\"ts\"/><span class=\"ts\"/>0x1B", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BUS_SPI\">BUS_SPI</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0x1C", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * MT_TOOL types</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MT_TOOL_FINGER\">MT_TOOL_FINGER</a><span class=\"ts\"/><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MT_TOOL_PEN\">MT_TOOL_PEN</a><span class=\"ts\"/><span class=\"ts\"/>1", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Values describing the status of a force-feedback effect</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FF_STATUS_STOPPED\">FF_STATUS_STOPPED</a><span class=\"ts\"/>0x00", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FF_STATUS_PLAYING\">FF_STATUS_PLAYING</a><span class=\"ts\"/>0x01", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FF_STATUS_MAX\">FF_STATUS_MAX</a><span class=\"ts\"/><span class=\"ts\"/>0x01", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Structures used in ioctls to upload effects to a device</span>", 
"<span class=\"comment\"> * They are pieces of a bigger structure (called ff_effect)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * All duration values are expressed in ms. Values above 32767 ms (0x7fff)</span>", 
"<span class=\"comment\"> * should not be used and have unspecified results.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * struct ff_replay - defines scheduling of the force-feedback effect</span>", 
"<span class=\"comment\"> * @length: duration of the effect</span>", 
"<span class=\"comment\"> * @delay: delay before effect should start playing</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#ff_replay\">ff_replay</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#delay\">delay</a>;", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * struct ff_trigger - defines what triggers the force-feedback effect</span>", 
"<span class=\"comment\"> * @button: number of the button triggering the effect</span>", 
"<span class=\"comment\"> * @interval: controls how soon the effect can be re-triggered</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#ff_trigger\">ff_trigger</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#button\">button</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#interval\">interval</a>;", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * struct ff_envelope - generic force-feedback effect envelope</span>", 
"<span class=\"comment\"> * @attack_length: duration of the attack (ms)</span>", 
"<span class=\"comment\"> * @attack_level: level at the beginning of the attack</span>", 
"<span class=\"comment\"> * @fade_length: duration of fade (ms)</span>", 
"<span class=\"comment\"> * @fade_level: level at the end of fade</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The @attack_level and @fade_level are absolute values; when applying</span>", 
"<span class=\"comment\"> * envelope force-feedback core will convert to positive/negative</span>", 
"<span class=\"comment\"> * value based on polarity of the default level of the effect.</span>", 
"<span class=\"comment\"> * Valid range for the attack and fade levels is 0x0000 - 0x7fff</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#ff_envelope\">ff_envelope</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#attack_length\">attack_length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#attack_level\">attack_level</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#fade_length\">fade_length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#fade_level\">fade_level</a>;", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * struct ff_constant_effect - defines parameters of a constant force-feedback effect</span>", 
"<span class=\"comment\"> * @level: strength of the effect; may be negative</span>", 
"<span class=\"comment\"> * @envelope: envelope data</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#ff_constant_effect\">ff_constant_effect</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__s16\">__s16</a> <a class=\"id\" href=\"#level\">level</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ff_envelope\">ff_envelope</a> <a class=\"id\" href=\"#envelope\">envelope</a>;", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * struct ff_ramp_effect - defines parameters of a ramp force-feedback effect</span>", 
"<span class=\"comment\"> * @start_level: beginning strength of the effect; may be negative</span>", 
"<span class=\"comment\"> * @end_level: final strength of the effect; may be negative</span>", 
"<span class=\"comment\"> * @envelope: envelope data</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#ff_ramp_effect\">ff_ramp_effect</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__s16\">__s16</a> <a class=\"id\" href=\"#start_level\">start_level</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__s16\">__s16</a> <a class=\"id\" href=\"#end_level\">end_level</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ff_envelope\">ff_envelope</a> <a class=\"id\" href=\"#envelope\">envelope</a>;", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * struct ff_condition_effect - defines a spring or friction force-feedback effect</span>", 
"<span class=\"comment\"> * @right_saturation: maximum level when joystick moved all way to the right</span>", 
"<span class=\"comment\"> * @left_saturation: same for the left side</span>", 
"<span class=\"comment\"> * @right_coeff: controls how fast the force grows when the joystick moves</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>to the right</span>", 
"<span class=\"comment\"> * @left_coeff: same for the left side</span>", 
"<span class=\"comment\"> * @deadband: size of the dead zone, where no force is produced</span>", 
"<span class=\"comment\"> * @center: position of the dead zone</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#ff_condition_effect\">ff_condition_effect</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#right_saturation\">right_saturation</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#left_saturation\">left_saturation</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__s16\">__s16</a> <a class=\"id\" href=\"#right_coeff\">right_coeff</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__s16\">__s16</a> <a class=\"id\" href=\"#left_coeff\">left_coeff</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#deadband\">deadband</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__s16\">__s16</a> <a class=\"id\" href=\"#center\">center</a>;", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * struct ff_periodic_effect - defines parameters of a periodic force-feedback effect</span>", 
"<span class=\"comment\"> * @waveform: kind of the effect (wave)</span>", 
"<span class=\"comment\"> * @period: period of the wave (ms)</span>", 
"<span class=\"comment\"> * @magnitude: peak value</span>", 
"<span class=\"comment\"> * @offset: mean value of the wave (roughly)</span>", 
"<span class=\"comment\"> * @phase: 'horizontal' shift</span>", 
"<span class=\"comment\"> * @envelope: envelope data</span>", 
"<span class=\"comment\"> * @custom_len: number of samples (FF_CUSTOM only)</span>", 
"<span class=\"comment\"> * @custom_data: buffer of samples (FF_CUSTOM only)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Known waveforms - FF_SQUARE, FF_TRIANGLE, FF_SINE, FF_SAW_UP,</span>", 
"<span class=\"comment\"> * FF_SAW_DOWN, FF_CUSTOM. The exact syntax FF_CUSTOM is undefined</span>", 
"<span class=\"comment\"> * for the time being as no driver supports it yet.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Note: the data pointed by custom_data is copied by the driver.</span>", 
"<span class=\"comment\"> * You can therefore dispose of the memory after the upload/update.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#ff_periodic_effect\">ff_periodic_effect</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#waveform\">waveform</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#period\">period</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__s16\">__s16</a> <a class=\"id\" href=\"#magnitude\">magnitude</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__s16\">__s16</a> <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#phase\">phase</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ff_envelope\">ff_envelope</a> <a class=\"id\" href=\"#envelope\">envelope</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#custom_len\">custom_len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__s16\">__s16</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#custom_data\">custom_data</a>;", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * struct ff_rumble_effect - defines parameters of a periodic force-feedback effect</span>", 
"<span class=\"comment\"> * @strong_magnitude: magnitude of the heavy motor</span>", 
"<span class=\"comment\"> * @weak_magnitude: magnitude of the light one</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Some rumble pads have two motors of different weight. Strong_magnitude</span>", 
"<span class=\"comment\"> * represents the magnitude of the vibration generated by the heavy one.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#ff_rumble_effect\">ff_rumble_effect</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#strong_magnitude\">strong_magnitude</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#weak_magnitude\">weak_magnitude</a>;", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * struct ff_effect - defines force feedback effect</span>", 
"<span class=\"comment\"> * @type: type of the effect (FF_CONSTANT, FF_PERIODIC, FF_RAMP, FF_SPRING,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>FF_FRICTION, FF_DAMPER, FF_RUMBLE, FF_INERTIA, or FF_CUSTOM)</span>", 
"<span class=\"comment\"> * @id: an unique id assigned to an effect</span>", 
"<span class=\"comment\"> * @direction: direction of the effect</span>", 
"<span class=\"comment\"> * @trigger: trigger conditions (struct ff_trigger)</span>", 
"<span class=\"comment\"> * @replay: scheduling of the effect (struct ff_replay)</span>", 
"<span class=\"comment\"> * @u: effect-specific structure (one of ff_constant_effect, ff_ramp_effect,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ff_periodic_effect, ff_condition_effect, ff_rumble_effect) further</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>defining effect parameters</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This structure is sent through ioctl from the application to the driver.</span>", 
"<span class=\"comment\"> * To create a new effect application should set its @id to -1; the kernel</span>", 
"<span class=\"comment\"> * will return assigned @id which can later be used to update or delete</span>", 
"<span class=\"comment\"> * this effect.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Direction of the effect is encoded as follows:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>0 deg -&gt; 0x0000 (down)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>90 deg -&gt; 0x4000 (left)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>180 deg -&gt; 0x8000 (up)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>270 deg -&gt; 0xC000 (right)</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#ff_effect\">ff_effect</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__s16\">__s16</a> <a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#direction\">direction</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ff_trigger\">ff_trigger</a> <a class=\"id\" href=\"#trigger\">trigger</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ff_replay\">ff_replay</a> <a class=\"id\" href=\"#replay\">replay</a>;", 
"", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ff_constant_effect\">ff_constant_effect</a> <a class=\"id\" href=\"#constant\">constant</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ff_ramp_effect\">ff_ramp_effect</a> <a class=\"id\" href=\"#ramp\">ramp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ff_periodic_effect\">ff_periodic_effect</a> <a class=\"id\" href=\"#periodic\">periodic</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ff_condition_effect\">ff_condition_effect</a> <a class=\"id\" href=\"#condition\">condition</a>[2]; <span class=\"comment\">/* One for each axis */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ff_rumble_effect\">ff_rumble_effect</a> <a class=\"id\" href=\"#rumble\">rumble</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#u\">u</a>;", 
"};", 
"", 
];
xr_frag_insert('l/51/f7c585eae2a635f6ca4d2fa7df6d6fe036b8cd.xr', __xr_tmp);
