var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * linux/fs/posix_acl.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 2002 by Andreas Gruenbacher &lt;a.gruenbacher@computer.org&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Fixes from William Schumacher incorporated on 15 March 2001.</span>", 
"<span class=\"comment\"> *     (Reported by Charles Bertsch, &lt;CBertsch@microtest.com&gt;).</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  This file contains generic functions for manipulating</span>", 
"<span class=\"comment\"> *  POSIX 1003.1e draft standard 17 ACLs.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#atomic\">atomic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#posix_acl\">posix_acl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#posix_acl_alloc\">posix_acl_alloc</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#posix_acl_clone\">posix_acl_clone</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#posix_acl_valid\">posix_acl_valid</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#posix_acl_equiv_mode\">posix_acl_equiv_mode</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#posix_acl_from_mode\">posix_acl_from_mode</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#posix_acl_create_masq\">posix_acl_create_masq</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#posix_acl_chmod_masq\">posix_acl_chmod_masq</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#posix_acl_permission\">posix_acl_permission</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Allocate a new ACL with the specified number of entries.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#posix_acl\">posix_acl</a> *", 
"<a class=\"id\" href=\"#posix_acl_alloc\">posix_acl_alloc</a>(int <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>const <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a> = sizeof(struct <a class=\"id\" href=\"#posix_acl\">posix_acl</a>) +", 
"<span class=\"ts\"/>                    <a class=\"id\" href=\"#count\">count</a> * sizeof(struct <a class=\"id\" href=\"#posix_acl_entry\">posix_acl_entry</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#posix_acl\">posix_acl</a> *<a class=\"id\" href=\"#acl\">acl</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acl\">acl</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#acl\">acl</a>-><a class=\"id\" href=\"#a_refcount\">a_refcount</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acl\">acl</a>-><a class=\"id\" href=\"#a_count\">a_count</a> = <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#acl\">acl</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Clone an ACL.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#posix_acl\">posix_acl</a> *", 
"<a class=\"id\" href=\"#posix_acl_clone\">posix_acl_clone</a>(const struct <a class=\"id\" href=\"#posix_acl\">posix_acl</a> *<a class=\"id\" href=\"#acl\">acl</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#posix_acl\">posix_acl</a> *<a class=\"id\" href=\"#clone\">clone</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acl\">acl</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#size\">size</a> = sizeof(struct <a class=\"id\" href=\"#posix_acl\">posix_acl</a>) + <a class=\"id\" href=\"#acl\">acl</a>-><a class=\"id\" href=\"#a_count\">a_count</a> *", 
"<span class=\"ts\"/><span class=\"ts\"/>           sizeof(struct <a class=\"id\" href=\"#posix_acl_entry\">posix_acl_entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clone\">clone</a> = <a class=\"id\" href=\"#kmemdup\">kmemdup</a>(<a class=\"id\" href=\"#acl\">acl</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#clone\">clone</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#clone\">clone</a>-><a class=\"id\" href=\"#a_refcount\">a_refcount</a>, 1);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#clone\">clone</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Check if an acl is valid. Returns 0 if it is, or -E... otherwise.</span>", 
"<span class=\"comment\"> */</span>", 
"int", 
"<a class=\"id\" href=\"#posix_acl_valid\">posix_acl_valid</a>(const struct <a class=\"id\" href=\"#posix_acl\">posix_acl</a> *<a class=\"id\" href=\"#acl\">acl</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#posix_acl_entry\">posix_acl_entry</a> *<a class=\"id\" href=\"#pa\">pa</a>, *<a class=\"id\" href=\"#pe\">pe</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#ACL_USER_OBJ\">ACL_USER_OBJ</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#id\">id</a> = 0;  <span class=\"comment\">/* keep gcc happy */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#needs_mask\">needs_mask</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#FOREACH_ACL_ENTRY\">FOREACH_ACL_ENTRY</a>(<a class=\"id\" href=\"#pa\">pa</a>, <a class=\"id\" href=\"#acl\">acl</a>, <a class=\"id\" href=\"#pe\">pe</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#e_perm\">e_perm</a> &amp; ~(<a class=\"id\" href=\"#ACL_READ\">ACL_READ</a>|<a class=\"id\" href=\"#ACL_WRITE\">ACL_WRITE</a>|<a class=\"id\" href=\"#ACL_EXECUTE\">ACL_EXECUTE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#e_tag\">e_tag</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACL_USER_OBJ\">ACL_USER_OBJ</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a> == <a class=\"id\" href=\"#ACL_USER_OBJ\">ACL_USER_OBJ</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#ACL_USER\">ACL_USER</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACL_USER\">ACL_USER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a> != <a class=\"id\" href=\"#ACL_USER\">ACL_USER</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#e_id\">e_id</a> == <a class=\"id\" href=\"#ACL_UNDEFINED_ID\">ACL_UNDEFINED_ID</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#e_id\">e_id</a> &lt; <a class=\"id\" href=\"#id\">id</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#e_id\">e_id</a> + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#needs_mask\">needs_mask</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACL_GROUP_OBJ\">ACL_GROUP_OBJ</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a> == <a class=\"id\" href=\"#ACL_USER\">ACL_USER</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#ACL_GROUP\">ACL_GROUP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACL_GROUP\">ACL_GROUP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a> != <a class=\"id\" href=\"#ACL_GROUP\">ACL_GROUP</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#e_id\">e_id</a> == <a class=\"id\" href=\"#ACL_UNDEFINED_ID\">ACL_UNDEFINED_ID</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#e_id\">e_id</a> &lt; <a class=\"id\" href=\"#id\">id</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#e_id\">e_id</a> + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#needs_mask\">needs_mask</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACL_MASK\">ACL_MASK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a> != <a class=\"id\" href=\"#ACL_GROUP\">ACL_GROUP</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#ACL_OTHER\">ACL_OTHER</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACL_OTHER\">ACL_OTHER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a> == <a class=\"id\" href=\"#ACL_OTHER\">ACL_OTHER</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#state\">state</a> == <a class=\"id\" href=\"#ACL_GROUP\">ACL_GROUP</a> && !<a class=\"id\" href=\"#needs_mask\">needs_mask</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Returns 0 if the acl can be exactly represented in the traditional</span>", 
"<span class=\"comment\"> * file mode permission bits, or else 1. Returns -E... on error.</span>", 
"<span class=\"comment\"> */</span>", 
"int", 
"<a class=\"id\" href=\"#posix_acl_equiv_mode\">posix_acl_equiv_mode</a>(const struct <a class=\"id\" href=\"#posix_acl\">posix_acl</a> *<a class=\"id\" href=\"#acl\">acl</a>, <a class=\"id\" href=\"#mode_t\">mode_t</a> *<a class=\"id\" href=\"#mode_p\">mode_p</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#posix_acl_entry\">posix_acl_entry</a> *<a class=\"id\" href=\"#pa\">pa</a>, *<a class=\"id\" href=\"#pe\">pe</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mode_t\">mode_t</a> <a class=\"id\" href=\"#mode\">mode</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#not_equiv\">not_equiv</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#FOREACH_ACL_ENTRY\">FOREACH_ACL_ENTRY</a>(<a class=\"id\" href=\"#pa\">pa</a>, <a class=\"id\" href=\"#acl\">acl</a>, <a class=\"id\" href=\"#pe\">pe</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#e_tag\">e_tag</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACL_USER_OBJ\">ACL_USER_OBJ</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mode\">mode</a> |= (<a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#e_perm\">e_perm</a> &amp; <a class=\"id\" href=\"#S_IRWXO\">S_IRWXO</a>) << 6;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACL_GROUP_OBJ\">ACL_GROUP_OBJ</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mode\">mode</a> |= (<a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#e_perm\">e_perm</a> &amp; <a class=\"id\" href=\"#S_IRWXO\">S_IRWXO</a>) << 3;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACL_OTHER\">ACL_OTHER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mode\">mode</a> |= <a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#e_perm\">e_perm</a> &amp; <a class=\"id\" href=\"#S_IRWXO\">S_IRWXO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACL_MASK\">ACL_MASK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mode\">mode</a> = (<a class=\"id\" href=\"#mode\">mode</a> &amp; ~<a class=\"id\" href=\"#S_IRWXG\">S_IRWXG</a>) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       ((<a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#e_perm\">e_perm</a> &amp; <a class=\"id\" href=\"#S_IRWXO\">S_IRWXO</a>) << 3);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#not_equiv\">not_equiv</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACL_USER\">ACL_USER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACL_GROUP\">ACL_GROUP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#not_equiv\">not_equiv</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"        if (<a class=\"id\" href=\"#mode_p\">mode_p</a>)", 
"                *<a class=\"id\" href=\"#mode_p\">mode_p</a> = (*<a class=\"id\" href=\"#mode_p\">mode_p</a> &amp; ~<a class=\"id\" href=\"#S_IRWXUGO\">S_IRWXUGO</a>) | <a class=\"id\" href=\"#mode\">mode</a>;", 
"        return <a class=\"id\" href=\"#not_equiv\">not_equiv</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Create an ACL representing the file mode permission bits of an inode.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#posix_acl\">posix_acl</a> *", 
"<a class=\"id\" href=\"#posix_acl_from_mode\">posix_acl_from_mode</a>(<a class=\"id\" href=\"#mode_t\">mode_t</a> <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#posix_acl\">posix_acl</a> *<a class=\"id\" href=\"#acl\">acl</a> = <a class=\"id\" href=\"#posix_acl_alloc\">posix_acl_alloc</a>(3, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#acl\">acl</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acl\">acl</a>-><a class=\"id\" href=\"#a_entries\">a_entries</a>[0].<a class=\"id\" href=\"#e_tag\">e_tag</a>  = <a class=\"id\" href=\"#ACL_USER_OBJ\">ACL_USER_OBJ</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acl\">acl</a>-><a class=\"id\" href=\"#a_entries\">a_entries</a>[0].<a class=\"id\" href=\"#e_id\">e_id</a>   = <a class=\"id\" href=\"#ACL_UNDEFINED_ID\">ACL_UNDEFINED_ID</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acl\">acl</a>-><a class=\"id\" href=\"#a_entries\">a_entries</a>[0].<a class=\"id\" href=\"#e_perm\">e_perm</a> = (<a class=\"id\" href=\"#mode\">mode</a> &amp; <a class=\"id\" href=\"#S_IRWXU\">S_IRWXU</a>) >> 6;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acl\">acl</a>-><a class=\"id\" href=\"#a_entries\">a_entries</a>[1].<a class=\"id\" href=\"#e_tag\">e_tag</a>  = <a class=\"id\" href=\"#ACL_GROUP_OBJ\">ACL_GROUP_OBJ</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acl\">acl</a>-><a class=\"id\" href=\"#a_entries\">a_entries</a>[1].<a class=\"id\" href=\"#e_id\">e_id</a>   = <a class=\"id\" href=\"#ACL_UNDEFINED_ID\">ACL_UNDEFINED_ID</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acl\">acl</a>-><a class=\"id\" href=\"#a_entries\">a_entries</a>[1].<a class=\"id\" href=\"#e_perm\">e_perm</a> = (<a class=\"id\" href=\"#mode\">mode</a> &amp; <a class=\"id\" href=\"#S_IRWXG\">S_IRWXG</a>) >> 3;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acl\">acl</a>-><a class=\"id\" href=\"#a_entries\">a_entries</a>[2].<a class=\"id\" href=\"#e_tag\">e_tag</a>  = <a class=\"id\" href=\"#ACL_OTHER\">ACL_OTHER</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acl\">acl</a>-><a class=\"id\" href=\"#a_entries\">a_entries</a>[2].<a class=\"id\" href=\"#e_id\">e_id</a>   = <a class=\"id\" href=\"#ACL_UNDEFINED_ID\">ACL_UNDEFINED_ID</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acl\">acl</a>-><a class=\"id\" href=\"#a_entries\">a_entries</a>[2].<a class=\"id\" href=\"#e_perm\">e_perm</a> = (<a class=\"id\" href=\"#mode\">mode</a> &amp; <a class=\"id\" href=\"#S_IRWXO\">S_IRWXO</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#acl\">acl</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Return 0 if current is granted want access to the inode</span>", 
"<span class=\"comment\"> * by the acl. Returns -E... otherwise.</span>", 
"<span class=\"comment\"> */</span>", 
"int", 
"<a class=\"id\" href=\"#posix_acl_permission\">posix_acl_permission</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, const struct <a class=\"id\" href=\"#posix_acl\">posix_acl</a> *<a class=\"id\" href=\"#acl\">acl</a>, int <a class=\"id\" href=\"#want\">want</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#posix_acl_entry\">posix_acl_entry</a> *<a class=\"id\" href=\"#pa\">pa</a>, *<a class=\"id\" href=\"#pe\">pe</a>, *<a class=\"id\" href=\"#mask_obj\">mask_obj</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#found\">found</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#FOREACH_ACL_ENTRY\">FOREACH_ACL_ENTRY</a>(<a class=\"id\" href=\"#pa\">pa</a>, <a class=\"id\" href=\"#acl\">acl</a>, <a class=\"id\" href=\"#pe\">pe</a>) {", 
"                switch(<a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#e_tag\">e_tag</a>) {", 
"                        case <a class=\"id\" href=\"#ACL_USER_OBJ\">ACL_USER_OBJ</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* (May have been checked already) */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_uid\">i_uid</a> == <a class=\"id\" href=\"#current_fsuid\">current_fsuid</a>())", 
"                                        goto <a class=\"id\" href=\"#check_perm\">check_perm</a>;", 
"                                break;", 
"                        case <a class=\"id\" href=\"#ACL_USER\">ACL_USER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#e_id\">e_id</a> == <a class=\"id\" href=\"#current_fsuid\">current_fsuid</a>())", 
"                                        goto <a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"                        case <a class=\"id\" href=\"#ACL_GROUP_OBJ\">ACL_GROUP_OBJ</a>:", 
"                                if (<a class=\"id\" href=\"#in_group_p\">in_group_p</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_gid\">i_gid</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#e_perm\">e_perm</a> &amp; <a class=\"id\" href=\"#want\">want</a>) == <a class=\"id\" href=\"#want\">want</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#mask\">mask</a>;", 
"                                }", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"                        case <a class=\"id\" href=\"#ACL_GROUP\">ACL_GROUP</a>:", 
"                                if (<a class=\"id\" href=\"#in_group_p\">in_group_p</a>(<a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#e_id\">e_id</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#e_perm\">e_perm</a> &amp; <a class=\"id\" href=\"#want\">want</a>) == <a class=\"id\" href=\"#want\">want</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#mask\">mask</a>;", 
"                                }", 
"                                break;", 
"                        case <a class=\"id\" href=\"#ACL_MASK\">ACL_MASK</a>:", 
"                                break;", 
"                        case <a class=\"id\" href=\"#ACL_OTHER\">ACL_OTHER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#found\">found</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#check_perm\">check_perm</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"                }", 
"        }", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"", 
"<a class=\"id\" href=\"#mask\">mask</a>:", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#mask_obj\">mask_obj</a> = <a class=\"id\" href=\"#pa\">pa</a>+1; <a class=\"id\" href=\"#mask_obj\">mask_obj</a> != <a class=\"id\" href=\"#pe\">pe</a>; <a class=\"id\" href=\"#mask_obj\">mask_obj</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mask_obj\">mask_obj</a>-><a class=\"id\" href=\"#e_tag\">e_tag</a> == <a class=\"id\" href=\"#ACL_MASK\">ACL_MASK</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#e_perm\">e_perm</a> &amp; <a class=\"id\" href=\"#mask_obj\">mask_obj</a>-><a class=\"id\" href=\"#e_perm\">e_perm</a> &amp; <a class=\"id\" href=\"#want\">want</a>) == <a class=\"id\" href=\"#want\">want</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#check_perm\">check_perm</a>:", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#e_perm\">e_perm</a> &amp; <a class=\"id\" href=\"#want\">want</a>) == <a class=\"id\" href=\"#want\">want</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Modify acl when creating a new inode. The caller must ensure the acl is</span>", 
"<span class=\"comment\"> * only referenced once.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * mode_p initially must contain the mode parameter to the open() / creat()</span>", 
"<span class=\"comment\"> * system calls. All permissions that are not granted by the acl are removed.</span>", 
"<span class=\"comment\"> * The permissions in the acl are changed to reflect the mode_p parameter.</span>", 
"<span class=\"comment\"> */</span>", 
"int", 
"<a class=\"id\" href=\"#posix_acl_create_masq\">posix_acl_create_masq</a>(struct <a class=\"id\" href=\"#posix_acl\">posix_acl</a> *<a class=\"id\" href=\"#acl\">acl</a>, <a class=\"id\" href=\"#mode_t\">mode_t</a> *<a class=\"id\" href=\"#mode_p\">mode_p</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#posix_acl_entry\">posix_acl_entry</a> *<a class=\"id\" href=\"#pa\">pa</a>, *<a class=\"id\" href=\"#pe\">pe</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#posix_acl_entry\">posix_acl_entry</a> *<a class=\"id\" href=\"#group_obj\">group_obj</a> = <a class=\"id\" href=\"#NULL\">NULL</a>, *<a class=\"id\" href=\"#mask_obj\">mask_obj</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mode_t\">mode_t</a> <a class=\"id\" href=\"#mode\">mode</a> = *<a class=\"id\" href=\"#mode_p\">mode_p</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#not_equiv\">not_equiv</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* assert(atomic_read(acl-&gt;a_refcount) == 1); */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#FOREACH_ACL_ENTRY\">FOREACH_ACL_ENTRY</a>(<a class=\"id\" href=\"#pa\">pa</a>, <a class=\"id\" href=\"#acl\">acl</a>, <a class=\"id\" href=\"#pe\">pe</a>) {", 
"                switch(<a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#e_tag\">e_tag</a>) {", 
"                        case <a class=\"id\" href=\"#ACL_USER_OBJ\">ACL_USER_OBJ</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#e_perm\">e_perm</a> &= (<a class=\"id\" href=\"#mode\">mode</a> >> 6) | ~<a class=\"id\" href=\"#S_IRWXO\">S_IRWXO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mode\">mode</a> &= (<a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#e_perm\">e_perm</a> << 6) | ~<a class=\"id\" href=\"#S_IRWXU\">S_IRWXU</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACL_USER\">ACL_USER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACL_GROUP\">ACL_GROUP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#not_equiv\">not_equiv</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"                        case <a class=\"id\" href=\"#ACL_GROUP_OBJ\">ACL_GROUP_OBJ</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#group_obj\">group_obj</a> = <a class=\"id\" href=\"#pa\">pa</a>;", 
"                                break;", 
"", 
"                        case <a class=\"id\" href=\"#ACL_OTHER\">ACL_OTHER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#e_perm\">e_perm</a> &= <a class=\"id\" href=\"#mode\">mode</a> | ~<a class=\"id\" href=\"#S_IRWXO\">S_IRWXO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mode\">mode</a> &= <a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#e_perm\">e_perm</a> | ~<a class=\"id\" href=\"#S_IRWXO\">S_IRWXO</a>;", 
"                                break;", 
"", 
"                        case <a class=\"id\" href=\"#ACL_MASK\">ACL_MASK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask_obj\">mask_obj</a> = <a class=\"id\" href=\"#pa\">pa</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#not_equiv\">not_equiv</a> = 1;", 
"                                break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"                }", 
"        }", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mask_obj\">mask_obj</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask_obj\">mask_obj</a>-><a class=\"id\" href=\"#e_perm\">e_perm</a> &= (<a class=\"id\" href=\"#mode\">mode</a> >> 3) | ~<a class=\"id\" href=\"#S_IRWXO\">S_IRWXO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mode\">mode</a> &= (<a class=\"id\" href=\"#mask_obj\">mask_obj</a>-><a class=\"id\" href=\"#e_perm\">e_perm</a> << 3) | ~<a class=\"id\" href=\"#S_IRWXG\">S_IRWXG</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#group_obj\">group_obj</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#group_obj\">group_obj</a>-><a class=\"id\" href=\"#e_perm\">e_perm</a> &= (<a class=\"id\" href=\"#mode\">mode</a> >> 3) | ~<a class=\"id\" href=\"#S_IRWXO\">S_IRWXO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mode\">mode</a> &= (<a class=\"id\" href=\"#group_obj\">group_obj</a>-><a class=\"id\" href=\"#e_perm\">e_perm</a> << 3) | ~<a class=\"id\" href=\"#S_IRWXG\">S_IRWXG</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#mode_p\">mode_p</a> = (*<a class=\"id\" href=\"#mode_p\">mode_p</a> &amp; ~<a class=\"id\" href=\"#S_IRWXUGO\">S_IRWXUGO</a>) | <a class=\"id\" href=\"#mode\">mode</a>;", 
"        return <a class=\"id\" href=\"#not_equiv\">not_equiv</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Modify the ACL for the chmod syscall.</span>", 
"<span class=\"comment\"> */</span>", 
"int", 
"<a class=\"id\" href=\"#posix_acl_chmod_masq\">posix_acl_chmod_masq</a>(struct <a class=\"id\" href=\"#posix_acl\">posix_acl</a> *<a class=\"id\" href=\"#acl\">acl</a>, <a class=\"id\" href=\"#mode_t\">mode_t</a> <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#posix_acl_entry\">posix_acl_entry</a> *<a class=\"id\" href=\"#group_obj\">group_obj</a> = <a class=\"id\" href=\"#NULL\">NULL</a>, *<a class=\"id\" href=\"#mask_obj\">mask_obj</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#posix_acl_entry\">posix_acl_entry</a> *<a class=\"id\" href=\"#pa\">pa</a>, *<a class=\"id\" href=\"#pe\">pe</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* assert(atomic_read(acl-&gt;a_refcount) == 1); */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#FOREACH_ACL_ENTRY\">FOREACH_ACL_ENTRY</a>(<a class=\"id\" href=\"#pa\">pa</a>, <a class=\"id\" href=\"#acl\">acl</a>, <a class=\"id\" href=\"#pe\">pe</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>switch(<a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#e_tag\">e_tag</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACL_USER_OBJ\">ACL_USER_OBJ</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#e_perm\">e_perm</a> = (<a class=\"id\" href=\"#mode\">mode</a> &amp; <a class=\"id\" href=\"#S_IRWXU\">S_IRWXU</a>) >> 6;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACL_USER\">ACL_USER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACL_GROUP\">ACL_GROUP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACL_GROUP_OBJ\">ACL_GROUP_OBJ</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#group_obj\">group_obj</a> = <a class=\"id\" href=\"#pa\">pa</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACL_MASK\">ACL_MASK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask_obj\">mask_obj</a> = <a class=\"id\" href=\"#pa\">pa</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACL_OTHER\">ACL_OTHER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#e_perm\">e_perm</a> = (<a class=\"id\" href=\"#mode\">mode</a> &amp; <a class=\"id\" href=\"#S_IRWXO\">S_IRWXO</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mask_obj\">mask_obj</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask_obj\">mask_obj</a>-><a class=\"id\" href=\"#e_perm\">e_perm</a> = (<a class=\"id\" href=\"#mode\">mode</a> &amp; <a class=\"id\" href=\"#S_IRWXG\">S_IRWXG</a>) >> 3;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#group_obj\">group_obj</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#group_obj\">group_obj</a>-><a class=\"id\" href=\"#e_perm\">e_perm</a> = (<a class=\"id\" href=\"#mode\">mode</a> &amp; <a class=\"id\" href=\"#S_IRWXG\">S_IRWXG</a>) >> 3;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
];
xr_frag_insert('l/52/0c2a7f5ea787eb7bb87fb894842d0e59fc9c4d.xr', __xr_tmp);
