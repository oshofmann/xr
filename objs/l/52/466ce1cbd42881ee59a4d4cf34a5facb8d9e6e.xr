var __xr_tmp = [
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#minix_fs\">minix_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ext2_fs\">ext2_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#romfs_fs\">romfs_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cramfs_fs\">cramfs_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#initrd\">initrd</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"do_mounts.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"../fs/squashfs/squashfs_fs.h\"", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#decompress\">decompress</a>/<a class=\"id\" href=\"#generic\">generic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"", 
"int <a class=\"id\" href=\"#__initdata\">__initdata</a> <a class=\"id\" href=\"#rd_prompt\">rd_prompt</a> = 1;<span class=\"comment\">/* 1 = prompt for RAM disk, 0 = don't prompt */</span>", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#prompt_ramdisk\">prompt_ramdisk</a>(char *<a class=\"id\" href=\"#str\">str</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rd_prompt\">rd_prompt</a> = <a class=\"id\" href=\"#simple_strtol\">simple_strtol</a>(<a class=\"id\" href=\"#str\">str</a>,<a class=\"id\" href=\"#NULL\">NULL</a>,0) &amp; 1;", 
"<span class=\"ts\"/>return 1;", 
"}", 
"<a class=\"id\" href=\"#__setup\">__setup</a>(\"prompt_ramdisk=\", <a class=\"id\" href=\"#prompt_ramdisk\">prompt_ramdisk</a>);", 
"", 
"int <a class=\"id\" href=\"#__initdata\">__initdata</a> <a class=\"id\" href=\"#rd_image_start\">rd_image_start</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* starting block # of image */</span>", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#ramdisk_start_setup\">ramdisk_start_setup</a>(char *<a class=\"id\" href=\"#str\">str</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rd_image_start\">rd_image_start</a> = <a class=\"id\" href=\"#simple_strtol\">simple_strtol</a>(<a class=\"id\" href=\"#str\">str</a>,<a class=\"id\" href=\"#NULL\">NULL</a>,0);", 
"<span class=\"ts\"/>return 1;", 
"}", 
"<a class=\"id\" href=\"#__setup\">__setup</a>(\"ramdisk_start=\", <a class=\"id\" href=\"#ramdisk_start_setup\">ramdisk_start_setup</a>);", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#crd_load\">crd_load</a>(int <a class=\"id\" href=\"#in_fd\">in_fd</a>, int <a class=\"id\" href=\"#out_fd\">out_fd</a>, <a class=\"id\" href=\"#decompress_fn\">decompress_fn</a> <a class=\"id\" href=\"#deco\">deco</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This routine tries to find a RAM disk image to load, and returns the</span>", 
"<span class=\"comment\"> * number of blocks to read for a non-compressed image, 0 if the image</span>", 
"<span class=\"comment\"> * is a compressed image, and -1 if an image with the right magic</span>", 
"<span class=\"comment\"> * numbers could not be found.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We currently check for the following magic numbers:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>minix</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ext2</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>romfs</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>cramfs</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>squashfs</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>gzip</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__init\">__init</a>", 
"<a class=\"id\" href=\"#identify_ramdisk_image\">identify_ramdisk_image</a>(int <a class=\"id\" href=\"#fd\">fd</a>, int <a class=\"id\" href=\"#start_block\">start_block</a>, <a class=\"id\" href=\"#decompress_fn\">decompress_fn</a> *<a class=\"id\" href=\"#decompressor\">decompressor</a>)", 
"{", 
"<span class=\"ts\"/>const int <a class=\"id\" href=\"#size\">size</a> = 512;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#minix_super_block\">minix_super_block</a> *<a class=\"id\" href=\"#minixsb\">minixsb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext2_super_block\">ext2_super_block</a> *<a class=\"id\" href=\"#ext2sb\">ext2sb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#romfs_super_block\">romfs_super_block</a> *<a class=\"id\" href=\"#romfsb\">romfsb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cramfs_super\">cramfs_super</a> *<a class=\"id\" href=\"#cramfsb\">cramfsb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#squashfs_super_block\">squashfs_super_block</a> *<a class=\"id\" href=\"#squashfsb\">squashfsb</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nblocks\">nblocks</a> = -1;", 
"<span class=\"ts\"/>unsigned char *<a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#compress_name\">compress_name</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#buf\">buf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#minixsb\">minixsb</a> = (struct <a class=\"id\" href=\"#minix_super_block\">minix_super_block</a> *) <a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext2sb\">ext2sb</a> = (struct <a class=\"id\" href=\"#ext2_super_block\">ext2_super_block</a> *) <a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#romfsb\">romfsb</a> = (struct <a class=\"id\" href=\"#romfs_super_block\">romfs_super_block</a> *) <a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cramfsb\">cramfsb</a> = (struct <a class=\"id\" href=\"#cramfs_super\">cramfs_super</a> *) <a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#squashfsb\">squashfsb</a> = (struct <a class=\"id\" href=\"#squashfs_super_block\">squashfs_super_block</a> *) <a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#buf\">buf</a>, 0xe5, <a class=\"id\" href=\"#size\">size</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Read block 0 to test for compressed kernel</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sys_lseek\">sys_lseek</a>(<a class=\"id\" href=\"#fd\">fd</a>, <a class=\"id\" href=\"#start_block\">start_block</a> * <a class=\"id\" href=\"#BLOCK_SIZE\">BLOCK_SIZE</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sys_read\">sys_read</a>(<a class=\"id\" href=\"#fd\">fd</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#decompressor\">decompressor</a> = <a class=\"id\" href=\"#decompress_method\">decompress_method</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size\">size</a>, &amp;<a class=\"id\" href=\"#compress_name\">compress_name</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#compress_name\">compress_name</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a> \"RAMDISK: %s image found at block %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#compress_name\">compress_name</a>, <a class=\"id\" href=\"#start_block\">start_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!*<a class=\"id\" href=\"#decompressor\">decompressor</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_EMERG\">KERN_EMERG</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"RAMDISK: %s decompressor not configured!\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#compress_name\">compress_name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nblocks\">nblocks</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* romfs is at block zero too */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#romfsb\">romfsb</a>-><a class=\"id\" href=\"#word0\">word0</a> == <a class=\"id\" href=\"#ROMSB_WORD0\">ROMSB_WORD0</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#romfsb\">romfsb</a>-><a class=\"id\" href=\"#word1\">word1</a> == <a class=\"id\" href=\"#ROMSB_WORD1\">ROMSB_WORD1</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"RAMDISK: romfs filesystem found at block %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#start_block\">start_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nblocks\">nblocks</a> = (<a class=\"id\" href=\"#ntohl\">ntohl</a>(<a class=\"id\" href=\"#romfsb\">romfsb</a>-><a class=\"id\" href=\"#size\">size</a>)+<a class=\"id\" href=\"#BLOCK_SIZE\">BLOCK_SIZE</a>-1)>><a class=\"id\" href=\"#BLOCK_SIZE_BITS\">BLOCK_SIZE_BITS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cramfsb\">cramfsb</a>-><a class=\"id\" href=\"#magic\">magic</a> == <a class=\"id\" href=\"#CRAMFS_MAGIC\">CRAMFS_MAGIC</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"RAMDISK: cramfs filesystem found at block %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#start_block\">start_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nblocks\">nblocks</a> = (<a class=\"id\" href=\"#cramfsb\">cramfsb</a>-><a class=\"id\" href=\"#size\">size</a> + <a class=\"id\" href=\"#BLOCK_SIZE\">BLOCK_SIZE</a> - 1) >> <a class=\"id\" href=\"#BLOCK_SIZE_BITS\">BLOCK_SIZE_BITS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* squashfs is at block zero too */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#squashfsb\">squashfsb</a>-><a class=\"id\" href=\"#s_magic\">s_magic</a>) == <a class=\"id\" href=\"#SQUASHFS_MAGIC\">SQUASHFS_MAGIC</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"RAMDISK: squashfs filesystem found at block %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#start_block\">start_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nblocks\">nblocks</a> = (<a class=\"id\" href=\"#le64_to_cpu\">le64_to_cpu</a>(<a class=\"id\" href=\"#squashfsb\">squashfsb</a>-><a class=\"id\" href=\"#bytes_used\">bytes_used</a>) + <a class=\"id\" href=\"#BLOCK_SIZE\">BLOCK_SIZE</a> - 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> >> <a class=\"id\" href=\"#BLOCK_SIZE_BITS\">BLOCK_SIZE_BITS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Read block 1 to test for minix and ext2 superblock</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sys_lseek\">sys_lseek</a>(<a class=\"id\" href=\"#fd\">fd</a>, (<a class=\"id\" href=\"#start_block\">start_block</a>+1) * <a class=\"id\" href=\"#BLOCK_SIZE\">BLOCK_SIZE</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sys_read\">sys_read</a>(<a class=\"id\" href=\"#fd\">fd</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Try minix */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#minixsb\">minixsb</a>-><a class=\"id\" href=\"#s_magic\">s_magic</a> == <a class=\"id\" href=\"#MINIX_SUPER_MAGIC\">MINIX_SUPER_MAGIC</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#minixsb\">minixsb</a>-><a class=\"id\" href=\"#s_magic\">s_magic</a> == <a class=\"id\" href=\"#MINIX_SUPER_MAGIC2\">MINIX_SUPER_MAGIC2</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"RAMDISK: Minix filesystem found at block %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#start_block\">start_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nblocks\">nblocks</a> = <a class=\"id\" href=\"#minixsb\">minixsb</a>-><a class=\"id\" href=\"#s_nzones\">s_nzones</a> << <a class=\"id\" href=\"#minixsb\">minixsb</a>-><a class=\"id\" href=\"#s_log_zone_size\">s_log_zone_size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Try ext2 */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext2sb\">ext2sb</a>-><a class=\"id\" href=\"#s_magic\">s_magic</a> == <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#EXT2_SUPER_MAGIC\">EXT2_SUPER_MAGIC</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"RAMDISK: ext2 filesystem found at block %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#start_block\">start_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nblocks\">nblocks</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ext2sb\">ext2sb</a>-><a class=\"id\" href=\"#s_blocks_count\">s_blocks_count</a>) <<", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ext2sb\">ext2sb</a>-><a class=\"id\" href=\"#s_log_block_size\">s_log_block_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a>", 
"<span class=\"ts\"/>       \"RAMDISK: Couldn't find valid RAM disk image starting at %d.\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#start_block\">start_block</a>);", 
"", 
"<a class=\"id\" href=\"#done\">done</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sys_lseek\">sys_lseek</a>(<a class=\"id\" href=\"#fd\">fd</a>, <a class=\"id\" href=\"#start_block\">start_block</a> * <a class=\"id\" href=\"#BLOCK_SIZE\">BLOCK_SIZE</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nblocks\">nblocks</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#rd_load_image\">rd_load_image</a>(char *<a class=\"id\" href=\"#from\">from</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#res\">res</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#in_fd\">in_fd</a>, <a class=\"id\" href=\"#out_fd\">out_fd</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#rd_blocks\">rd_blocks</a>, <a class=\"id\" href=\"#devblocks\">devblocks</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nblocks\">nblocks</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#disk\">disk</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#rotate\">rotate</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#decompress_fn\">decompress_fn</a> <a class=\"id\" href=\"#decompressor\">decompressor</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"#if !<a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_S390\">CONFIG_S390</a>) && !<a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_PPC_ISERIES\">CONFIG_PPC_ISERIES</a>)", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#rotator\">rotator</a>[4] = { '|' , '/' , '-' , '\\\\' };", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#out_fd\">out_fd</a> = <a class=\"id\" href=\"#sys_open\">sys_open</a>(\"/dev/ram\", <a class=\"id\" href=\"#O_RDWR\">O_RDWR</a>, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#out_fd\">out_fd</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in_fd\">in_fd</a> = <a class=\"id\" href=\"#sys_open\">sys_open</a>(<a class=\"id\" href=\"#from\">from</a>, <a class=\"id\" href=\"#O_RDONLY\">O_RDONLY</a>, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#in_fd\">in_fd</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#noclose_input\">noclose_input</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nblocks\">nblocks</a> = <a class=\"id\" href=\"#identify_ramdisk_image\">identify_ramdisk_image</a>(<a class=\"id\" href=\"#in_fd\">in_fd</a>, <a class=\"id\" href=\"#rd_image_start\">rd_image_start</a>, &amp;<a class=\"id\" href=\"#decompressor\">decompressor</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nblocks\">nblocks</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nblocks\">nblocks</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#crd_load\">crd_load</a>(<a class=\"id\" href=\"#in_fd\">in_fd</a>, <a class=\"id\" href=\"#out_fd\">out_fd</a>, <a class=\"id\" href=\"#decompressor\">decompressor</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#successful_load\">successful_load</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * NOTE NOTE: nblocks is not actually blocks but</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the number of kibibytes of data to load into a ramdisk.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * So any ramdisk block size that is a multiple of 1KiB should</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * work when the appropriate ramdisk_blocksize is specified</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * on the command line.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The default ramdisk_blocksize is 1KiB and it is generally</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * silly to use anything else, so make sure to use 1KiB</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * blocksize while generating ext2fs ramdisk-images.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sys_ioctl\">sys_ioctl</a>(<a class=\"id\" href=\"#out_fd\">out_fd</a>, <a class=\"id\" href=\"#BLKGETSIZE\">BLKGETSIZE</a>, (unsigned long)&amp;<a class=\"id\" href=\"#rd_blocks\">rd_blocks</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rd_blocks\">rd_blocks</a> = 0;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rd_blocks\">rd_blocks</a> >>= 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nblocks\">nblocks</a> &gt; <a class=\"id\" href=\"#rd_blocks\">rd_blocks</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"RAMDISK: image too big! (%dKiB/%ldKiB)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#nblocks\">nblocks</a>, <a class=\"id\" href=\"#rd_blocks\">rd_blocks</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * OK, time to copy in the data</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sys_ioctl\">sys_ioctl</a>(<a class=\"id\" href=\"#in_fd\">in_fd</a>, <a class=\"id\" href=\"#BLKGETSIZE\">BLKGETSIZE</a>, (unsigned long)&amp;<a class=\"id\" href=\"#devblocks\">devblocks</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#devblocks\">devblocks</a> = 0;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#devblocks\">devblocks</a> >>= 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#from\">from</a>, \"/initrd.image\") == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#devblocks\">devblocks</a> = <a class=\"id\" href=\"#nblocks\">nblocks</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#devblocks\">devblocks</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"RAMDISK: could not determine device size\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#BLOCK_SIZE\">BLOCK_SIZE</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#buf\">buf</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"RAMDISK: could not allocate buffer\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a> \"RAMDISK: Loading %dKiB [%ld disk%s] into ram disk... \",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nblocks\">nblocks</a>, ((<a class=\"id\" href=\"#nblocks\">nblocks</a>-1)/<a class=\"id\" href=\"#devblocks\">devblocks</a>)+1, <a class=\"id\" href=\"#nblocks\">nblocks</a>&gt;<a class=\"id\" href=\"#devblocks\">devblocks</a> ? \"s\" : \"\");", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0, <a class=\"id\" href=\"#disk\">disk</a> = 1; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nblocks\">nblocks</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> && (<a class=\"id\" href=\"#i\">i</a> % <a class=\"id\" href=\"#devblocks\">devblocks</a> == 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"done disk #%d.\\n\", <a class=\"id\" href=\"#disk\">disk</a>++);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rotate\">rotate</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sys_close\">sys_close</a>(<a class=\"id\" href=\"#in_fd\">in_fd</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"Error closing the disk.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#noclose_input\">noclose_input</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#change_floppy\">change_floppy</a>(\"disk #%d\", <a class=\"id\" href=\"#disk\">disk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in_fd\">in_fd</a> = <a class=\"id\" href=\"#sys_open\">sys_open</a>(<a class=\"id\" href=\"#from\">from</a>, <a class=\"id\" href=\"#O_RDONLY\">O_RDONLY</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#in_fd\">in_fd</a> &lt; 0)  {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"Error opening disk.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#noclose_input\">noclose_input</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"Loading disk #%d... \", <a class=\"id\" href=\"#disk\">disk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sys_read\">sys_read</a>(<a class=\"id\" href=\"#in_fd\">in_fd</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#BLOCK_SIZE\">BLOCK_SIZE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sys_write\">sys_write</a>(<a class=\"id\" href=\"#out_fd\">out_fd</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#BLOCK_SIZE\">BLOCK_SIZE</a>);", 
"#if !<a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_S390\">CONFIG_S390</a>) && !<a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_PPC_ISERIES\">CONFIG_PPC_ISERIES</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#i\">i</a> % 16)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"%c\\b\", <a class=\"id\" href=\"#rotator\">rotator</a>[<a class=\"id\" href=\"#rotate\">rotate</a> &amp; 0x3]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rotate\">rotate</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"done.\\n\");", 
"", 
"<a class=\"id\" href=\"#successful_load\">successful_load</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = 1;", 
"<a class=\"id\" href=\"#done\">done</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sys_close\">sys_close</a>(<a class=\"id\" href=\"#in_fd\">in_fd</a>);", 
"<a class=\"id\" href=\"#noclose_input\">noclose_input</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sys_close\">sys_close</a>(<a class=\"id\" href=\"#out_fd\">out_fd</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sys_unlink\">sys_unlink</a>(\"/dev/ram\");", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#rd_load_disk\">rd_load_disk</a>(int <a class=\"id\" href=\"#n\">n</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rd_prompt\">rd_prompt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#change_floppy\">change_floppy</a>(\"root floppy disk to be loaded into RAM disk\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#create_dev\">create_dev</a>(\"/dev/root\", <a class=\"id\" href=\"#ROOT_DEV\">ROOT_DEV</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#create_dev\">create_dev</a>(\"/dev/ram\", <a class=\"id\" href=\"#MKDEV\">MKDEV</a>(<a class=\"id\" href=\"#RAMDISK_MAJOR\">RAMDISK_MAJOR</a>, <a class=\"id\" href=\"#n\">n</a>));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rd_load_image\">rd_load_image</a>(\"/dev/root\");", 
"}", 
"", 
"static int <a class=\"id\" href=\"#exit_code\">exit_code</a>;", 
"static int <a class=\"id\" href=\"#decompress_error\">decompress_error</a>;", 
"static int <a class=\"id\" href=\"#crd_infd\">crd_infd</a>, <a class=\"id\" href=\"#crd_outfd\">crd_outfd</a>;", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#compr_fill\">compr_fill</a>(void *<a class=\"id\" href=\"#buf\">buf</a>, unsigned int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#sys_read\">sys_read</a>(<a class=\"id\" href=\"#crd_infd\">crd_infd</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"RAMDISK: error while reading compressed data\");", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#r\">r</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"RAMDISK: EOF while reading compressed data\");", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#compr_flush\">compr_flush</a>(void *<a class=\"id\" href=\"#window\">window</a>, unsigned int <a class=\"id\" href=\"#outcnt\">outcnt</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#written\">written</a> = <a class=\"id\" href=\"#sys_write\">sys_write</a>(<a class=\"id\" href=\"#crd_outfd\">crd_outfd</a>, <a class=\"id\" href=\"#window\">window</a>, <a class=\"id\" href=\"#outcnt\">outcnt</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#written\">written</a> != <a class=\"id\" href=\"#outcnt\">outcnt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#decompress_error\">decompress_error</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"RAMDISK: incomplete write (%d != %d)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#written\">written</a>, <a class=\"id\" href=\"#outcnt\">outcnt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#decompress_error\">decompress_error</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#outcnt\">outcnt</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#error\">error</a>(char *<a class=\"id\" href=\"#x\">x</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s\\n\", <a class=\"id\" href=\"#x\">x</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#exit_code\">exit_code</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#decompress_error\">decompress_error</a> = 1;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#crd_load\">crd_load</a>(int <a class=\"id\" href=\"#in_fd\">in_fd</a>, int <a class=\"id\" href=\"#out_fd\">out_fd</a>, <a class=\"id\" href=\"#decompress_fn\">decompress_fn</a> <a class=\"id\" href=\"#deco\">deco</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crd_infd\">crd_infd</a> = <a class=\"id\" href=\"#in_fd\">in_fd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crd_outfd\">crd_outfd</a> = <a class=\"id\" href=\"#out_fd\">out_fd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#deco\">deco</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, 0, <a class=\"id\" href=\"#compr_fill\">compr_fill</a>, <a class=\"id\" href=\"#compr_flush\">compr_flush</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#error\">error</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#decompress_error\">decompress_error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = 1;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"}", 
];
xr_frag_insert('l/52/466ce1cbd42881ee59a4d4cf34a5facb8d9e6e.xr', __xr_tmp);
