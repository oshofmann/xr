var __xr_tmp = [
"<span class=\"comment\">/******************************************************************************</span>", 
"<span class=\"comment\"> * sched.h</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Scheduler state interactions</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (c) 2005, Keir Fraser &lt;keir@xensource.com&gt;</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__XEN_PUBLIC_SCHED_H__\">__XEN_PUBLIC_SCHED_H__</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__XEN_PUBLIC_SCHED_H__\">__XEN_PUBLIC_SCHED_H__</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"event_channel.h\"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The prototype for this hypercall is:</span>", 
"<span class=\"comment\"> *  long sched_op_new(int cmd, void *arg)</span>", 
"<span class=\"comment\"> * @cmd == SCHEDOP_??? (scheduler operation).</span>", 
"<span class=\"comment\"> * @arg == Operation-specific extra argument(s), as described below.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * **NOTE**:</span>", 
"<span class=\"comment\"> * Versions of Xen prior to 3.0.2 provide only the following legacy version</span>", 
"<span class=\"comment\"> * of this hypercall, supporting only the commands yield, block and shutdown:</span>", 
"<span class=\"comment\"> *  long sched_op(int cmd, unsigned long arg)</span>", 
"<span class=\"comment\"> * @cmd == SCHEDOP_??? (scheduler operation).</span>", 
"<span class=\"comment\"> * @arg == 0               (SCHEDOP_yield and SCHEDOP_block)</span>", 
"<span class=\"comment\"> *      == SHUTDOWN_* code (SCHEDOP_shutdown)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Voluntarily yield the CPU.</span>", 
"<span class=\"comment\"> * @arg == NULL.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SCHEDOP_yield\">SCHEDOP_yield</a>       0", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Block execution of this VCPU until an event is received for processing.</span>", 
"<span class=\"comment\"> * If called with event upcalls masked, this operation will atomically</span>", 
"<span class=\"comment\"> * reenable event delivery and check for pending events before blocking the</span>", 
"<span class=\"comment\"> * VCPU. This avoids a \"wakeup waiting\" race.</span>", 
"<span class=\"comment\"> * @arg == NULL.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SCHEDOP_block\">SCHEDOP_block</a>       1", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Halt execution of this domain (all VCPUs) and notify the system controller.</span>", 
"<span class=\"comment\"> * @arg == pointer to sched_shutdown structure.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SCHEDOP_shutdown\">SCHEDOP_shutdown</a>    2", 
"struct <a class=\"id\" href=\"#sched_shutdown\">sched_shutdown</a> {", 
"    unsigned int <a class=\"id\" href=\"#reason\">reason</a>; <span class=\"comment\">/* SHUTDOWN_* */</span>", 
"};", 
"<a class=\"id\" href=\"#DEFINE_GUEST_HANDLE_STRUCT\">DEFINE_GUEST_HANDLE_STRUCT</a>(<a class=\"id\" href=\"#sched_shutdown\">sched_shutdown</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Poll a set of event-channel ports. Return when one or more are pending. An</span>", 
"<span class=\"comment\"> * optional timeout may be specified.</span>", 
"<span class=\"comment\"> * @arg == pointer to sched_poll structure.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SCHEDOP_poll\">SCHEDOP_poll</a>        3", 
"struct <a class=\"id\" href=\"#sched_poll\">sched_poll</a> {", 
"    <a class=\"id\" href=\"#GUEST_HANDLE\">GUEST_HANDLE</a>(<a class=\"id\" href=\"#evtchn_port_t\">evtchn_port_t</a>) <a class=\"id\" href=\"#ports\">ports</a>;", 
"    unsigned int <a class=\"id\" href=\"#nr_ports\">nr_ports</a>;", 
"    <a class=\"id\" href=\"#uint64_t\">uint64_t</a> <a class=\"id\" href=\"#timeout\">timeout</a>;", 
"};", 
"<a class=\"id\" href=\"#DEFINE_GUEST_HANDLE_STRUCT\">DEFINE_GUEST_HANDLE_STRUCT</a>(<a class=\"id\" href=\"#sched_poll\">sched_poll</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Reason codes for SCHEDOP_shutdown. These may be interpreted by control</span>", 
"<span class=\"comment\"> * software to determine the appropriate action. For the most part, Xen does</span>", 
"<span class=\"comment\"> * not care about the shutdown code.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SHUTDOWN_poweroff\">SHUTDOWN_poweroff</a>   0  <span class=\"comment\">/* Domain exited normally. Clean up and kill. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SHUTDOWN_reboot\">SHUTDOWN_reboot</a>     1  <span class=\"comment\">/* Clean up, kill, and then restart.          */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SHUTDOWN_suspend\">SHUTDOWN_suspend</a>    2  <span class=\"comment\">/* Clean up, save suspend info, kill.         */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SHUTDOWN_crash\">SHUTDOWN_crash</a>      3  <span class=\"comment\">/* Tell controller we've crashed.             */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __XEN_PUBLIC_SCHED_H__ */</span>", 
];
xr_frag_insert('l/54/2961b407e92c23d917f67b423883412f66738b.xr', __xr_tmp);
