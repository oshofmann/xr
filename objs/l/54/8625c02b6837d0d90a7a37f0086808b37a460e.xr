var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  History:</span>", 
"<span class=\"comment\"> *  Started: Aug 9 by Lawrence Foard (entropy@world.std.com),</span>", 
"<span class=\"comment\"> *           to allow user process control of SCSI devices.</span>", 
"<span class=\"comment\"> *  Development Sponsored by Killy Corp. NY NY</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Original driver (sg.c):</span>", 
"<span class=\"comment\"> *        Copyright (C) 1992 Lawrence Foard</span>", 
"<span class=\"comment\"> * Version 2 and 3 extensions to driver:</span>", 
"<span class=\"comment\"> *        Copyright (C) 1998 - 2005 Douglas Gilbert</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Modified  19-JAN-1998  Richard Gooch &lt;rgooch@atnf.csiro.au&gt;  Devfs support</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> * it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> * the Free Software Foundation; either version 2, or (at your option)</span>", 
"<span class=\"comment\"> * any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#sg_version_num\">sg_version_num</a> = 30534;<span class=\"ts\"/><span class=\"comment\">/* 2 digits for each component */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SG_VERSION_STR\">SG_VERSION_STR</a> \"3.5.34\"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  D. P. Gilbert (dgilbert@interlog.com, dougg@triode.net.au), notes:</span>", 
"<span class=\"comment\"> *      - scsi logging is available via SCSI_LOG_TIMEOUT macros. First</span>", 
"<span class=\"comment\"> *        the kernel/module needs to be built with CONFIG_SCSI_LOGGING</span>", 
"<span class=\"comment\"> *        (otherwise the macros compile to empty statements).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mtio\">mtio</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ioctl\">ioctl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fcntl\">fcntl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#poll\">poll</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#moduleparam\">moduleparam</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cdev\">cdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#idr\">idr</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blkdev\">blkdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blktrace_api\">blktrace_api</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#smp_lock\">smp_lock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"scsi.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_dbg\">scsi_dbg</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_host\">scsi_host</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_driver\">scsi_driver</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_ioctl\">scsi_ioctl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#sg\">sg</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"scsi_logging.h\"", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SCSI_PROC_FS\">CONFIG_SCSI_PROC_FS</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"static char *<a class=\"id\" href=\"#sg_version_date\">sg_version_date</a> = \"20061027\";", 
"", 
"static int <a class=\"id\" href=\"#sg_proc_init\">sg_proc_init</a>(void);", 
"static void <a class=\"id\" href=\"#sg_proc_cleanup\">sg_proc_cleanup</a>(void);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SG_ALLOW_DIO_DEF\">SG_ALLOW_DIO_DEF</a> 0", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SG_MAX_DEVS\">SG_MAX_DEVS</a> 32768", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Suppose you want to calculate the formula muldiv(x,m,d)=int(x * m / d)</span>", 
"<span class=\"comment\"> * Then when using 32 bit integers x * m may overflow during the calculation.</span>", 
"<span class=\"comment\"> * Replacing muldiv(x) by muldiv(x)=((x % d) * m) / d + int(x / d) * m</span>", 
"<span class=\"comment\"> * calculates the same, but prevents the overflow when both m and d</span>", 
"<span class=\"comment\"> * are \"small\" numbers (like HZ and USER_HZ).</span>", 
"<span class=\"comment\"> * Of course an overflow is inavoidable if the result of muldiv doesn't fit</span>", 
"<span class=\"comment\"> * in 32 bits.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MULDIV\">MULDIV</a>(<a class=\"id\" href=\"#X\">X</a>,<a class=\"id\" href=\"#MUL\">MUL</a>,<a class=\"id\" href=\"#DIV\">DIV</a>) ((((<a class=\"id\" href=\"#X\">X</a> % <a class=\"id\" href=\"#DIV\">DIV</a>) * <a class=\"id\" href=\"#MUL\">MUL</a>) / <a class=\"id\" href=\"#DIV\">DIV</a>) + ((<a class=\"id\" href=\"#X\">X</a> / <a class=\"id\" href=\"#DIV\">DIV</a>) * <a class=\"id\" href=\"#MUL\">MUL</a>))", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SG_DEFAULT_TIMEOUT\">SG_DEFAULT_TIMEOUT</a> <a class=\"id\" href=\"#MULDIV\">MULDIV</a>(<a class=\"id\" href=\"#SG_DEFAULT_TIMEOUT_USER\">SG_DEFAULT_TIMEOUT_USER</a>, <a class=\"id\" href=\"#HZ\">HZ</a>, <a class=\"id\" href=\"#USER_HZ\">USER_HZ</a>)", 
"", 
"int <a class=\"id\" href=\"#sg_big_buff\">sg_big_buff</a> = <a class=\"id\" href=\"#SG_DEF_RESERVED_SIZE\">SG_DEF_RESERVED_SIZE</a>;", 
"<span class=\"comment\">/* N.B. This variable is readable and writeable via</span>", 
"<span class=\"comment\">   /proc/scsi/sg/def_reserved_size . Each time sg_open() is called a buffer</span>", 
"<span class=\"comment\">   of this size (or less if there is not enough memory) will be reserved</span>", 
"<span class=\"comment\">   for use by this file descriptor. [Deprecated usage: this variable is also</span>", 
"<span class=\"comment\">   readable via /proc/sys/kernel/sg-big-buff if the sg driver is built into</span>", 
"<span class=\"comment\">   the kernel (i.e. it is not a module).] */</span>", 
"static int <a class=\"id\" href=\"#def_reserved_size\">def_reserved_size</a> = -1;<span class=\"ts\"/><span class=\"comment\">/* picks up init parameter */</span>", 
"static int <a class=\"id\" href=\"#sg_allow_dio\">sg_allow_dio</a> = <a class=\"id\" href=\"#SG_ALLOW_DIO_DEF\">SG_ALLOW_DIO_DEF</a>;", 
"", 
"static int <a class=\"id\" href=\"#scatter_elem_sz\">scatter_elem_sz</a> = <a class=\"id\" href=\"#SG_SCATTER_SZ\">SG_SCATTER_SZ</a>;", 
"static int <a class=\"id\" href=\"#scatter_elem_sz_prev\">scatter_elem_sz_prev</a> = <a class=\"id\" href=\"#SG_SCATTER_SZ\">SG_SCATTER_SZ</a>;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SG_SECTOR_SZ\">SG_SECTOR_SZ</a> 512", 
"", 
"static int <a class=\"id\" href=\"#sg_add\">sg_add</a>(struct <a class=\"id\" href=\"#device\">device</a> *, struct <a class=\"id\" href=\"#class_interface\">class_interface</a> *);", 
"static void <a class=\"id\" href=\"#sg_remove\">sg_remove</a>(struct <a class=\"id\" href=\"#device\">device</a> *, struct <a class=\"id\" href=\"#class_interface\">class_interface</a> *);", 
"", 
"static <a class=\"id\" href=\"#DEFINE_IDR\">DEFINE_IDR</a>(<a class=\"id\" href=\"#sg_index_idr\">sg_index_idr</a>);", 
"static <a class=\"id\" href=\"#DEFINE_RWLOCK\">DEFINE_RWLOCK</a>(<a class=\"id\" href=\"#sg_index_lock\">sg_index_lock</a>);<span class=\"ts\"/><span class=\"comment\">/* Also used to lock</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   file descriptor list for device */</span>", 
"", 
"static struct <a class=\"id\" href=\"#class_interface\">class_interface</a> <a class=\"id\" href=\"#sg_interface\">sg_interface</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#add_dev\">add_dev</a><span class=\"ts\"/>= <a class=\"id\" href=\"#sg_add\">sg_add</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#remove_dev\">remove_dev</a><span class=\"ts\"/>= <a class=\"id\" href=\"#sg_remove\">sg_remove</a>,", 
"};", 
"", 
"typedef struct <a class=\"id\" href=\"#sg_scatter_hold\">sg_scatter_hold</a> { <span class=\"comment\">/* holding area for scsi scatter gather info */</span>", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#k_use_sg\">k_use_sg</a>; <span class=\"comment\">/* Count of kernel scatter-gather pieces */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#sglist_len\">sglist_len</a>; <span class=\"comment\">/* size of malloc'd scatter-gather list ++ */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#bufflen\">bufflen</a>;<span class=\"ts\"/><span class=\"comment\">/* Size of (aggregate) data buffer */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> **<a class=\"id\" href=\"#pages\">pages</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#page_order\">page_order</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#dio_in_use\">dio_in_use</a>;<span class=\"ts\"/><span class=\"comment\">/* 0-&gt;indirect IO (or mmap), 1-&gt;dio */</span>", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#cmd_opcode\">cmd_opcode</a>; <span class=\"comment\">/* first byte of command */</span>", 
"} <a class=\"id\" href=\"#Sg_scatter_hold\">Sg_scatter_hold</a>;", 
"", 
"struct <a class=\"id\" href=\"#sg_device\">sg_device</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* forward declarations */</span>", 
"struct <a class=\"id\" href=\"#sg_fd\">sg_fd</a>;", 
"", 
"typedef struct <a class=\"id\" href=\"#sg_request\">sg_request</a> {<span class=\"ts\"/><span class=\"comment\">/* SG_MAX_QUEUE requests outstanding per file */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sg_request\">sg_request</a> *<a class=\"id\" href=\"#nextrp\">nextrp</a>;<span class=\"ts\"/><span class=\"comment\">/* NULL -&gt; tail request (slist) */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sg_fd\">sg_fd</a> *<a class=\"id\" href=\"#parentfp\">parentfp</a>;<span class=\"ts\"/><span class=\"comment\">/* NULL -&gt; not in use */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_scatter_hold\">Sg_scatter_hold</a> <a class=\"id\" href=\"#data\">data</a>;<span class=\"ts\"/><span class=\"comment\">/* hold buffer, perhaps scatter list */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_io_hdr_t\">sg_io_hdr_t</a> <a class=\"id\" href=\"#header\">header</a>;<span class=\"ts\"/><span class=\"comment\">/* scsi command+info, see &lt;scsi/sg.h&gt; */</span>", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#sense_b\">sense_b</a>[<a class=\"id\" href=\"#SCSI_SENSE_BUFFERSIZE\">SCSI_SENSE_BUFFERSIZE</a>];", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#res_used\">res_used</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 1 -&gt; using reserve buffer, 0 -&gt; not ... */</span>", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#orphan\">orphan</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 1 -&gt; drop on sight, 0 -&gt; normal */</span>", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#sg_io_owned\">sg_io_owned</a>;<span class=\"ts\"/><span class=\"comment\">/* 1 -&gt; packet belongs to SG_IO */</span>", 
"<span class=\"ts\"/>volatile char <a class=\"id\" href=\"#done\">done</a>;<span class=\"ts\"/><span class=\"comment\">/* 0-&gt;before bh, 1-&gt;before read, 2-&gt;read */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#execute_work\">execute_work</a> <a class=\"id\" href=\"#ew\">ew</a>;", 
"} <a class=\"id\" href=\"#Sg_request\">Sg_request</a>;", 
"", 
"typedef struct <a class=\"id\" href=\"#sg_fd\">sg_fd</a> {<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* holds the state of a file descriptor */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#sfd_siblings\">sfd_siblings</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sg_device\">sg_device</a> *<a class=\"id\" href=\"#parentdp\">parentdp</a>;<span class=\"ts\"/><span class=\"comment\">/* owning device */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wait_queue_head_t\">wait_queue_head_t</a> <a class=\"id\" href=\"#read_wait\">read_wait</a>;<span class=\"ts\"/><span class=\"comment\">/* queue read until command done */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rwlock_t\">rwlock_t</a> <a class=\"id\" href=\"#rq_list_lock\">rq_list_lock</a>;<span class=\"ts\"/><span class=\"comment\">/* protect access to list in req_arr */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#timeout\">timeout</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* defaults to SG_DEFAULT_TIMEOUT      */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#timeout_user\">timeout_user</a>;<span class=\"ts\"/><span class=\"comment\">/* defaults to SG_DEFAULT_TIMEOUT_USER */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_scatter_hold\">Sg_scatter_hold</a> <a class=\"id\" href=\"#reserve\">reserve</a>;<span class=\"ts\"/><span class=\"comment\">/* buffer held for this file descriptor */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#save_scat_len\">save_scat_len</a>;<span class=\"ts\"/><span class=\"comment\">/* original length of trunc. scat. element */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_request\">Sg_request</a> *<a class=\"id\" href=\"#headrp\">headrp</a>;<span class=\"ts\"/><span class=\"comment\">/* head of request slist, NULL-&gt;empty */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fasync_struct\">fasync_struct</a> *<a class=\"id\" href=\"#async_qp\">async_qp</a>;<span class=\"ts\"/><span class=\"comment\">/* used by asynchronous notification */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_request\">Sg_request</a> <a class=\"id\" href=\"#req_arr\">req_arr</a>[<a class=\"id\" href=\"#SG_MAX_QUEUE\">SG_MAX_QUEUE</a>];<span class=\"ts\"/><span class=\"comment\">/* used as singly-linked list */</span>", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#low_dma\">low_dma</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* as in parent but possibly overridden to 1 */</span>", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#force_packid\">force_packid</a>;<span class=\"ts\"/><span class=\"comment\">/* 1 -&gt; pack_id input to read(), 0 -&gt; ignored */</span>", 
"<span class=\"ts\"/>volatile char <a class=\"id\" href=\"#closed\">closed</a>;<span class=\"ts\"/><span class=\"comment\">/* 1 -&gt; fd closed but request(s) outstanding */</span>", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#cmd_q\">cmd_q</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 1 -&gt; allow command queuing, 0 -&gt; don't */</span>", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#next_cmd_len\">next_cmd_len</a>;<span class=\"ts\"/><span class=\"comment\">/* 0 -&gt; automatic (def), &gt;0 -&gt; use on next write() */</span>", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#keep_orphan\">keep_orphan</a>;<span class=\"ts\"/><span class=\"comment\">/* 0 -&gt; drop orphan (def), 1 -&gt; keep for read() */</span>", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#mmap_called\">mmap_called</a>;<span class=\"ts\"/><span class=\"comment\">/* 0 -&gt; mmap() never called on this fd */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kref\">kref</a> <a class=\"id\" href=\"#f_ref\">f_ref</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#execute_work\">execute_work</a> <a class=\"id\" href=\"#ew\">ew</a>;", 
"} <a class=\"id\" href=\"#Sg_fd\">Sg_fd</a>;", 
"", 
"typedef struct <a class=\"id\" href=\"#sg_device\">sg_device</a> { <span class=\"comment\">/* holds the state of each scsi generic device */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#device\">device</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wait_queue_head_t\">wait_queue_head_t</a> <a class=\"id\" href=\"#o_excl_wait\">o_excl_wait</a>;<span class=\"ts\"/><span class=\"comment\">/* queue open() when O_EXCL in use */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#sg_tablesize\">sg_tablesize</a>;<span class=\"ts\"/><span class=\"comment\">/* adapter's max scatter-gather table size */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#index\">index</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* device index number */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#sfds\">sfds</a>;", 
"<span class=\"ts\"/>volatile char <a class=\"id\" href=\"#detached\">detached</a>;<span class=\"ts\"/><span class=\"comment\">/* 0-&gt;attached, 1-&gt;detached pending removal */</span>", 
"<span class=\"ts\"/>volatile char <a class=\"id\" href=\"#exclude\">exclude</a>;<span class=\"ts\"/><span class=\"comment\">/* opened for exclusive access */</span>", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#sgdebug\">sgdebug</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 0-&gt;off, 1-&gt;sense, 9-&gt;dump dev, 10-&gt; all devs */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cdev\">cdev</a> * <a class=\"id\" href=\"#cdev\">cdev</a>;<span class=\"ts\"/><span class=\"comment\">/* char_dev [sysfs: /sys/cdev/major/sg&lt;n&gt;] */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kref\">kref</a> <a class=\"id\" href=\"#d_ref\">d_ref</a>;", 
"} <a class=\"id\" href=\"#Sg_device\">Sg_device</a>;", 
"", 
"<span class=\"comment\">/* tasklet or soft irq callback */</span>", 
"static void <a class=\"id\" href=\"#sg_rq_end_io\">sg_rq_end_io</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>, int <a class=\"id\" href=\"#uptodate\">uptodate</a>);", 
"static int <a class=\"id\" href=\"#sg_start_req\">sg_start_req</a>(<a class=\"id\" href=\"#Sg_request\">Sg_request</a> *<a class=\"id\" href=\"#srp\">srp</a>, unsigned char *<a class=\"id\" href=\"#cmd\">cmd</a>);", 
"static int <a class=\"id\" href=\"#sg_finish_rem_req\">sg_finish_rem_req</a>(<a class=\"id\" href=\"#Sg_request\">Sg_request</a> * <a class=\"id\" href=\"#srp\">srp</a>);", 
"static int <a class=\"id\" href=\"#sg_build_indirect\">sg_build_indirect</a>(<a class=\"id\" href=\"#Sg_scatter_hold\">Sg_scatter_hold</a> * <a class=\"id\" href=\"#schp\">schp</a>, <a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> * <a class=\"id\" href=\"#sfp\">sfp</a>, int <a class=\"id\" href=\"#buff_size\">buff_size</a>);", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#sg_new_read\">sg_new_read</a>(<a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> * <a class=\"id\" href=\"#sfp\">sfp</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#Sg_request\">Sg_request</a> * <a class=\"id\" href=\"#srp\">srp</a>);", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#sg_new_write\">sg_new_write</a>(<a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> *<a class=\"id\" href=\"#sfp\">sfp</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, int <a class=\"id\" href=\"#blocking\">blocking</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#read_only\">read_only</a>, int <a class=\"id\" href=\"#sg_io_owned\">sg_io_owned</a>, <a class=\"id\" href=\"#Sg_request\">Sg_request</a> **<a class=\"id\" href=\"#o_srp\">o_srp</a>);", 
"static int <a class=\"id\" href=\"#sg_common_write\">sg_common_write</a>(<a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> * <a class=\"id\" href=\"#sfp\">sfp</a>, <a class=\"id\" href=\"#Sg_request\">Sg_request</a> * <a class=\"id\" href=\"#srp\">srp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned char *<a class=\"id\" href=\"#cmnd\">cmnd</a>, int <a class=\"id\" href=\"#timeout\">timeout</a>, int <a class=\"id\" href=\"#blocking\">blocking</a>);", 
"static int <a class=\"id\" href=\"#sg_read_oxfer\">sg_read_oxfer</a>(<a class=\"id\" href=\"#Sg_request\">Sg_request</a> * <a class=\"id\" href=\"#srp\">srp</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#outp\">outp</a>, int <a class=\"id\" href=\"#num_read_xfer\">num_read_xfer</a>);", 
"static void <a class=\"id\" href=\"#sg_remove_scat\">sg_remove_scat</a>(<a class=\"id\" href=\"#Sg_scatter_hold\">Sg_scatter_hold</a> * <a class=\"id\" href=\"#schp\">schp</a>);", 
"static void <a class=\"id\" href=\"#sg_build_reserve\">sg_build_reserve</a>(<a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> * <a class=\"id\" href=\"#sfp\">sfp</a>, int <a class=\"id\" href=\"#req_size\">req_size</a>);", 
"static void <a class=\"id\" href=\"#sg_link_reserve\">sg_link_reserve</a>(<a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> * <a class=\"id\" href=\"#sfp\">sfp</a>, <a class=\"id\" href=\"#Sg_request\">Sg_request</a> * <a class=\"id\" href=\"#srp\">srp</a>, int <a class=\"id\" href=\"#size\">size</a>);", 
"static void <a class=\"id\" href=\"#sg_unlink_reserve\">sg_unlink_reserve</a>(<a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> * <a class=\"id\" href=\"#sfp\">sfp</a>, <a class=\"id\" href=\"#Sg_request\">Sg_request</a> * <a class=\"id\" href=\"#srp\">srp</a>);", 
"static <a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> *<a class=\"id\" href=\"#sg_add_sfp\">sg_add_sfp</a>(<a class=\"id\" href=\"#Sg_device\">Sg_device</a> * <a class=\"id\" href=\"#sdp\">sdp</a>, int <a class=\"id\" href=\"#dev\">dev</a>);", 
"static void <a class=\"id\" href=\"#sg_remove_sfp\">sg_remove_sfp</a>(struct <a class=\"id\" href=\"#kref\">kref</a> *);", 
"static <a class=\"id\" href=\"#Sg_request\">Sg_request</a> *<a class=\"id\" href=\"#sg_get_rq_mark\">sg_get_rq_mark</a>(<a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> * <a class=\"id\" href=\"#sfp\">sfp</a>, int <a class=\"id\" href=\"#pack_id\">pack_id</a>);", 
"static <a class=\"id\" href=\"#Sg_request\">Sg_request</a> *<a class=\"id\" href=\"#sg_add_request\">sg_add_request</a>(<a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> * <a class=\"id\" href=\"#sfp\">sfp</a>);", 
"static int <a class=\"id\" href=\"#sg_remove_request\">sg_remove_request</a>(<a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> * <a class=\"id\" href=\"#sfp\">sfp</a>, <a class=\"id\" href=\"#Sg_request\">Sg_request</a> * <a class=\"id\" href=\"#srp\">srp</a>);", 
"static int <a class=\"id\" href=\"#sg_res_in_use\">sg_res_in_use</a>(<a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> * <a class=\"id\" href=\"#sfp\">sfp</a>);", 
"static <a class=\"id\" href=\"#Sg_device\">Sg_device</a> *<a class=\"id\" href=\"#sg_get_dev\">sg_get_dev</a>(int <a class=\"id\" href=\"#dev\">dev</a>);", 
"static void <a class=\"id\" href=\"#sg_put_dev\">sg_put_dev</a>(<a class=\"id\" href=\"#Sg_device\">Sg_device</a> *<a class=\"id\" href=\"#sdp\">sdp</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SZ_SG_HEADER\">SZ_SG_HEADER</a> sizeof(struct <a class=\"id\" href=\"#sg_header\">sg_header</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SZ_SG_IO_HDR\">SZ_SG_IO_HDR</a> sizeof(<a class=\"id\" href=\"#sg_io_hdr_t\">sg_io_hdr_t</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SZ_SG_IOVEC\">SZ_SG_IOVEC</a> sizeof(<a class=\"id\" href=\"#sg_iovec_t\">sg_iovec_t</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SZ_SG_REQ_INFO\">SZ_SG_REQ_INFO</a> sizeof(<a class=\"id\" href=\"#sg_req_info_t\">sg_req_info_t</a>)", 
"", 
"static int <a class=\"id\" href=\"#sg_allow_access\">sg_allow_access</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, unsigned char *<a class=\"id\" href=\"#cmd\">cmd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sg_fd\">sg_fd</a> *<a class=\"id\" href=\"#sfp\">sfp</a> = (struct <a class=\"id\" href=\"#sg_fd\">sg_fd</a> *)<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#parentdp\">parentdp</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#TYPE_SCANNER\">TYPE_SCANNER</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#blk_verify_command\">blk_verify_command</a>(<a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_mode\">f_mode</a> &amp; <a class=\"id\" href=\"#FMODE_WRITE\">FMODE_WRITE</a>);", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#sg_open\">sg_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#iminor\">iminor</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_flags\">f_flags</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_device\">Sg_device</a> *<a class=\"id\" href=\"#sdp\">sdp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> *<a class=\"id\" href=\"#sfp\">sfp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_kernel\">lock_kernel</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nonseekable_open\">nonseekable_open</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#filp\">filp</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_TIMEOUT\">SCSI_LOG_TIMEOUT</a>(3, <a class=\"id\" href=\"#printk\">printk</a>(\"sg_open: dev=%d, flags=0x%x\\n\", <a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#flags\">flags</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sdp\">sdp</a> = <a class=\"id\" href=\"#sg_get_dev\">sg_get_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#sdp\">sdp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#sdp\">sdp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sdp\">sdp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#sg_put\">sg_put</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* This driver's module count bumped by fops_get in &lt;linux/fs.h&gt; */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* Prevent the device driver from vanishing while we sleep */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#scsi_device_get\">scsi_device_get</a>(<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#sg_put\">sg_put</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#scsi_autopm_get_device\">scsi_autopm_get_device</a>(<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#sdp_put\">sdp_put</a>;", 
"", 
"<span class=\"ts\"/>if (!((<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#O_NONBLOCK\">O_NONBLOCK</a>) ||", 
"<span class=\"ts\"/>      <a class=\"id\" href=\"#scsi_block_when_processing_errors\">scsi_block_when_processing_errors</a>(<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* we are in error recovery for this device */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_out\">error_out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#O_EXCL\">O_EXCL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#O_RDONLY\">O_RDONLY</a> == (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#O_ACCMODE\">O_ACCMODE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EPERM\">EPERM</a>; <span class=\"comment\">/* Can't lock it with read only access */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_out\">error_out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#sfds\">sfds</a>) && (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#O_NONBLOCK\">O_NONBLOCK</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_out\">error_out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__wait_event_interruptible\">__wait_event_interruptible</a>(<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#o_excl_wait\">o_excl_wait</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   ((!<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#sfds\">sfds</a>) || <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#exclude\">exclude</a>) ? 0 : (<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#exclude\">exclude</a> = 1)), <a class=\"id\" href=\"#res\">res</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#res\">res</a>;<span class=\"ts\"/><span class=\"comment\">/* -ERESTARTSYS because signal hit process */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_out\">error_out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#exclude\">exclude</a>) {<span class=\"ts\"/><span class=\"comment\">/* some other fd has an exclusive lock on dev */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#O_NONBLOCK\">O_NONBLOCK</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_out\">error_out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__wait_event_interruptible\">__wait_event_interruptible</a>(<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#o_excl_wait\">o_excl_wait</a>, (!<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#exclude\">exclude</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#res\">res</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#res\">res</a>;<span class=\"ts\"/><span class=\"comment\">/* -ERESTARTSYS because signal hit process */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_out\">error_out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#detached\">detached</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_out\">error_out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#sfds\">sfds</a>)) {<span class=\"ts\"/><span class=\"comment\">/* no existing opens on this device */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#sgdebug\">sgdebug</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a> = <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#request_queue\">request_queue</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#sg_tablesize\">sg_tablesize</a> = <a class=\"id\" href=\"#queue_max_segments\">queue_max_segments</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#sfp\">sfp</a> = <a class=\"id\" href=\"#sg_add_sfp\">sg_add_sfp</a>(<a class=\"id\" href=\"#sdp\">sdp</a>, <a class=\"id\" href=\"#dev\">dev</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a> = <a class=\"id\" href=\"#sfp\">sfp</a>;", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#O_EXCL\">O_EXCL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#exclude\">exclude</a> = 0;<span class=\"ts\"/><span class=\"comment\">/* undo if error */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible\">wake_up_interruptible</a>(&amp;<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#o_excl_wait\">o_excl_wait</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_out\">error_out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"<a class=\"id\" href=\"#error_out\">error_out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsi_autopm_put_device\">scsi_autopm_put_device</a>(<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>);", 
"<a class=\"id\" href=\"#sdp_put\">sdp_put</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsi_device_put\">scsi_device_put</a>(<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>);", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#sg_put\">sg_put</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sdp\">sdp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_put_dev\">sg_put_dev</a>(<a class=\"id\" href=\"#sdp\">sdp</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_kernel\">unlock_kernel</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Following function was formerly called 'sg_close' */</span>", 
"static int", 
"<a class=\"id\" href=\"#sg_release\">sg_release</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_device\">Sg_device</a> *<a class=\"id\" href=\"#sdp\">sdp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> *<a class=\"id\" href=\"#sfp\">sfp</a>;", 
"", 
"<span class=\"ts\"/>if ((!(<a class=\"id\" href=\"#sfp\">sfp</a> = (<a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> *) <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>)) || (!(<a class=\"id\" href=\"#sdp\">sdp</a> = <a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#parentdp\">parentdp</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_TIMEOUT\">SCSI_LOG_TIMEOUT</a>(3, <a class=\"id\" href=\"#printk\">printk</a>(\"sg_release: %s\\n\", <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#disk_name\">disk_name</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#closed\">closed</a> = 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#exclude\">exclude</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible\">wake_up_interruptible</a>(&amp;<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#o_excl_wait\">o_excl_wait</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scsi_autopm_put_device\">scsi_autopm_put_device</a>(<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kref_put\">kref_put</a>(&amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#f_ref\">f_ref</a>, <a class=\"id\" href=\"#sg_remove_sfp\">sg_remove_sfp</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#sg_read\">sg_read</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> * <a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_device\">Sg_device</a> *<a class=\"id\" href=\"#sdp\">sdp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> *<a class=\"id\" href=\"#sfp\">sfp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_request\">Sg_request</a> *<a class=\"id\" href=\"#srp\">srp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#req_pack_id\">req_pack_id</a> = -1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_io_hdr_t\">sg_io_hdr_t</a> *<a class=\"id\" href=\"#hp\">hp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sg_header\">sg_header</a> *<a class=\"id\" href=\"#old_hdr\">old_hdr</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"", 
"<span class=\"ts\"/>if ((!(<a class=\"id\" href=\"#sfp\">sfp</a> = (<a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> *) <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>)) || (!(<a class=\"id\" href=\"#sdp\">sdp</a> = <a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#parentdp\">parentdp</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_TIMEOUT\">SCSI_LOG_TIMEOUT</a>(3, <a class=\"id\" href=\"#printk\">printk</a>(\"sg_read: %s, count=%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#disk_name\">disk_name</a>, (int) <a class=\"id\" href=\"#count\">count</a>));", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#access_ok\">access_ok</a>(<a class=\"id\" href=\"#VERIFY_WRITE\">VERIFY_WRITE</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#force_packid\">force_packid</a> && (<a class=\"id\" href=\"#count\">count</a> >= <a class=\"id\" href=\"#SZ_SG_HEADER\">SZ_SG_HEADER</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_hdr\">old_hdr</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#SZ_SG_HEADER\">SZ_SG_HEADER</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#old_hdr\">old_hdr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#__copy_from_user\">__copy_from_user</a>(<a class=\"id\" href=\"#old_hdr\">old_hdr</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#SZ_SG_HEADER\">SZ_SG_HEADER</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#free_old_hdr\">free_old_hdr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#old_hdr\">old_hdr</a>-><a class=\"id\" href=\"#reply_len\">reply_len</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> >= <a class=\"id\" href=\"#SZ_SG_IO_HDR\">SZ_SG_IO_HDR</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_io_hdr_t\">sg_io_hdr_t</a> *<a class=\"id\" href=\"#new_hdr\">new_hdr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_hdr\">new_hdr</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#SZ_SG_IO_HDR\">SZ_SG_IO_HDR</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#new_hdr\">new_hdr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#free_old_hdr\">free_old_hdr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> =<a class=\"id\" href=\"#__copy_from_user\">__copy_from_user</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#new_hdr\">new_hdr</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#SZ_SG_IO_HDR\">SZ_SG_IO_HDR</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req_pack_id\">req_pack_id</a> = <a class=\"id\" href=\"#new_hdr\">new_hdr</a>-><a class=\"id\" href=\"#pack_id\">pack_id</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#new_hdr\">new_hdr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#free_old_hdr\">free_old_hdr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req_pack_id\">req_pack_id</a> = <a class=\"id\" href=\"#old_hdr\">old_hdr</a>-><a class=\"id\" href=\"#pack_id\">pack_id</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#srp\">srp</a> = <a class=\"id\" href=\"#sg_get_rq_mark\">sg_get_rq_mark</a>(<a class=\"id\" href=\"#sfp\">sfp</a>, <a class=\"id\" href=\"#req_pack_id\">req_pack_id</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#srp\">srp</a>) {<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* now wait on packet to arrive */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#detached\">detached</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#free_old_hdr\">free_old_hdr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_flags\">f_flags</a> &amp; <a class=\"id\" href=\"#O_NONBLOCK\">O_NONBLOCK</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#free_old_hdr\">free_old_hdr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>while (1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = 0; <span class=\"comment\">/* following macro beats race condition */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__wait_event_interruptible\">__wait_event_interruptible</a>(<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#read_wait\">read_wait</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#detached\">detached</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#srp\">srp</a> = <a class=\"id\" href=\"#sg_get_rq_mark\">sg_get_rq_mark</a>(<a class=\"id\" href=\"#sfp\">sfp</a>, <a class=\"id\" href=\"#req_pack_id\">req_pack_id</a>))), ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#detached\">detached</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#free_old_hdr\">free_old_hdr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (0 == <a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* -ERESTARTSYS as signal hit process */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#free_old_hdr\">free_old_hdr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#header\">header</a>.<a class=\"id\" href=\"#interface_id\">interface_id</a> != '\\0') {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#sg_new_read\">sg_new_read</a>(<a class=\"id\" href=\"#sfp\">sfp</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#srp\">srp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#free_old_hdr\">free_old_hdr</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hp\">hp</a> = &amp;<a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#header\">header</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#old_hdr\">old_hdr</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_hdr\">old_hdr</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#SZ_SG_HEADER\">SZ_SG_HEADER</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (! <a class=\"id\" href=\"#old_hdr\">old_hdr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#free_old_hdr\">free_old_hdr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#old_hdr\">old_hdr</a>, 0, <a class=\"id\" href=\"#SZ_SG_HEADER\">SZ_SG_HEADER</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_hdr\">old_hdr</a>-><a class=\"id\" href=\"#reply_len\">reply_len</a> = (int) <a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#timeout\">timeout</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_hdr\">old_hdr</a>-><a class=\"id\" href=\"#pack_len\">pack_len</a> = <a class=\"id\" href=\"#old_hdr\">old_hdr</a>-><a class=\"id\" href=\"#reply_len\">reply_len</a>; <span class=\"comment\">/* old, strange behaviour */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_hdr\">old_hdr</a>-><a class=\"id\" href=\"#pack_id\">pack_id</a> = <a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#pack_id\">pack_id</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_hdr\">old_hdr</a>-><a class=\"id\" href=\"#twelve_byte\">twelve_byte</a> =", 
"<span class=\"ts\"/>    ((<a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#cmd_opcode\">cmd_opcode</a> >= 0xc0) && (12 == <a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#cmd_len\">cmd_len</a>)) ? 1 : 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_hdr\">old_hdr</a>-><a class=\"id\" href=\"#target_status\">target_status</a> = <a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#masked_status\">masked_status</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_hdr\">old_hdr</a>-><a class=\"id\" href=\"#host_status\">host_status</a> = <a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#host_status\">host_status</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_hdr\">old_hdr</a>-><a class=\"id\" href=\"#driver_status\">driver_status</a> = <a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#driver_status\">driver_status</a>;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#CHECK_CONDITION\">CHECK_CONDITION</a> &amp; <a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#masked_status\">masked_status</a>) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#DRIVER_SENSE\">DRIVER_SENSE</a> &amp; <a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#driver_status\">driver_status</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#old_hdr\">old_hdr</a>-><a class=\"id\" href=\"#sense_buffer\">sense_buffer</a>, <a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#sense_b\">sense_b</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       sizeof (<a class=\"id\" href=\"#old_hdr\">old_hdr</a>-><a class=\"id\" href=\"#sense_buffer\">sense_buffer</a>));", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#host_status\">host_status</a>) {", 
"<span class=\"ts\"/><span class=\"comment\">/* This setup of 'result' is for backward compatibility and is best</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   ignored by the user who should use target, host + driver status */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DID_OK\">DID_OK</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DID_PASSTHROUGH\">DID_PASSTHROUGH</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DID_SOFT_ERROR\">DID_SOFT_ERROR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_hdr\">old_hdr</a>-><a class=\"id\" href=\"#result\">result</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DID_NO_CONNECT\">DID_NO_CONNECT</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DID_BUS_BUSY\">DID_BUS_BUSY</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DID_TIME_OUT\">DID_TIME_OUT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_hdr\">old_hdr</a>-><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DID_BAD_TARGET\">DID_BAD_TARGET</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DID_ABORT\">DID_ABORT</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DID_PARITY\">DID_PARITY</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DID_RESET\">DID_RESET</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DID_BAD_INTR\">DID_BAD_INTR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_hdr\">old_hdr</a>-><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DID_ERROR\">DID_ERROR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_hdr\">old_hdr</a>-><a class=\"id\" href=\"#result\">result</a> = (<a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#sense_b\">sense_b</a>[0] == 0 && ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#masked_status\">masked_status</a> == <a class=\"id\" href=\"#GOOD\">GOOD</a>) ? 0 : <a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_hdr\">old_hdr</a>-><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Now copy the result back to the user buffer.  */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> >= <a class=\"id\" href=\"#SZ_SG_HEADER\">SZ_SG_HEADER</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#__copy_to_user\">__copy_to_user</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#old_hdr\">old_hdr</a>, <a class=\"id\" href=\"#SZ_SG_HEADER\">SZ_SG_HEADER</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#free_old_hdr\">free_old_hdr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> += <a class=\"id\" href=\"#SZ_SG_HEADER\">SZ_SG_HEADER</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> &gt; <a class=\"id\" href=\"#old_hdr\">old_hdr</a>-><a class=\"id\" href=\"#reply_len\">reply_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#old_hdr\">old_hdr</a>-><a class=\"id\" href=\"#reply_len\">reply_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> &gt; <a class=\"id\" href=\"#SZ_SG_HEADER\">SZ_SG_HEADER</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sg_read_oxfer\">sg_read_oxfer</a>(<a class=\"id\" href=\"#srp\">srp</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a> - <a class=\"id\" href=\"#SZ_SG_HEADER\">SZ_SG_HEADER</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#free_old_hdr\">free_old_hdr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = (<a class=\"id\" href=\"#old_hdr\">old_hdr</a>-><a class=\"id\" href=\"#result\">result</a> == 0) ? 0 : -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_finish_rem_req\">sg_finish_rem_req</a>(<a class=\"id\" href=\"#srp\">srp</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#count\">count</a>;", 
"<a class=\"id\" href=\"#free_old_hdr\">free_old_hdr</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#old_hdr\">old_hdr</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#sg_new_read\">sg_new_read</a>(<a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> * <a class=\"id\" href=\"#sfp\">sfp</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#Sg_request\">Sg_request</a> * <a class=\"id\" href=\"#srp\">srp</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_io_hdr_t\">sg_io_hdr_t</a> *<a class=\"id\" href=\"#hp\">hp</a> = &amp;<a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#header\">header</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> &lt; <a class=\"id\" href=\"#SZ_SG_IO_HDR\">SZ_SG_IO_HDR</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_out\">err_out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#sb_len_wr\">sb_len_wr</a> = 0;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#mx_sb_len\">mx_sb_len</a> &gt; 0) && <a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#sbp\">sbp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#CHECK_CONDITION\">CHECK_CONDITION</a> &amp; <a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#masked_status\">masked_status</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#DRIVER_SENSE\">DRIVER_SENSE</a> &amp; <a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#driver_status\">driver_status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#sb_len\">sb_len</a> = <a class=\"id\" href=\"#SCSI_SENSE_BUFFERSIZE\">SCSI_SENSE_BUFFERSIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sb_len\">sb_len</a> = (<a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#mx_sb_len\">mx_sb_len</a> &gt; <a class=\"id\" href=\"#sb_len\">sb_len</a>) ? <a class=\"id\" href=\"#sb_len\">sb_len</a> : <a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#mx_sb_len\">mx_sb_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = 8 + (int) <a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#sense_b\">sense_b</a>[7];<span class=\"ts\"/><span class=\"comment\">/* Additional sense length field */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = (<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#sb_len\">sb_len</a>) ? <a class=\"id\" href=\"#sb_len\">sb_len</a> : <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#sbp\">sbp</a>, <a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#sense_b\">sense_b</a>, <a class=\"id\" href=\"#len\">len</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_out\">err_out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#sb_len_wr\">sb_len_wr</a> = <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#masked_status\">masked_status</a> || <a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#host_status\">host_status</a> || <a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#driver_status\">driver_status</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#info\">info</a> |= <a class=\"id\" href=\"#SG_INFO_CHECK\">SG_INFO_CHECK</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#hp\">hp</a>, <a class=\"id\" href=\"#SZ_SG_IO_HDR\">SZ_SG_IO_HDR</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_out\">err_out</a>;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#err_out\">err_out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sg_finish_rem_req\">sg_finish_rem_req</a>(<a class=\"id\" href=\"#srp\">srp</a>);", 
"<span class=\"ts\"/>return (0 == <a class=\"id\" href=\"#err\">err</a>) ? <a class=\"id\" href=\"#count\">count</a> : <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#sg_write\">sg_write</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> * <a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#mxsize\">mxsize</a>, <a class=\"id\" href=\"#cmd_size\">cmd_size</a>, <a class=\"id\" href=\"#k\">k</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#input_size\">input_size</a>, <a class=\"id\" href=\"#blocking\">blocking</a>;", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#opcode\">opcode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_device\">Sg_device</a> *<a class=\"id\" href=\"#sdp\">sdp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> *<a class=\"id\" href=\"#sfp\">sfp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_request\">Sg_request</a> *<a class=\"id\" href=\"#srp\">srp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sg_header\">sg_header</a> <a class=\"id\" href=\"#old_hdr\">old_hdr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_io_hdr_t\">sg_io_hdr_t</a> *<a class=\"id\" href=\"#hp\">hp</a>;", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#cmnd\">cmnd</a>[<a class=\"id\" href=\"#MAX_COMMAND_SIZE\">MAX_COMMAND_SIZE</a>];", 
"", 
"<span class=\"ts\"/>if ((!(<a class=\"id\" href=\"#sfp\">sfp</a> = (<a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> *) <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>)) || (!(<a class=\"id\" href=\"#sdp\">sdp</a> = <a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#parentdp\">parentdp</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_TIMEOUT\">SCSI_LOG_TIMEOUT</a>(3, <a class=\"id\" href=\"#printk\">printk</a>(\"sg_write: %s, count=%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#disk_name\">disk_name</a>, (int) <a class=\"id\" href=\"#count\">count</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#detached\">detached</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>if (!((<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_flags\">f_flags</a> &amp; <a class=\"id\" href=\"#O_NONBLOCK\">O_NONBLOCK</a>) ||", 
"<span class=\"ts\"/>      <a class=\"id\" href=\"#scsi_block_when_processing_errors\">scsi_block_when_processing_errors</a>(<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#access_ok\">access_ok</a>(<a class=\"id\" href=\"#VERIFY_READ\">VERIFY_READ</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;<span class=\"ts\"/><span class=\"comment\">/* protects following copy_from_user()s + get_user()s */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> &lt; <a class=\"id\" href=\"#SZ_SG_HEADER\">SZ_SG_HEADER</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#__copy_from_user\">__copy_from_user</a>(&amp;<a class=\"id\" href=\"#old_hdr\">old_hdr</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#SZ_SG_HEADER\">SZ_SG_HEADER</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blocking\">blocking</a> = !(<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_flags\">f_flags</a> &amp; <a class=\"id\" href=\"#O_NONBLOCK\">O_NONBLOCK</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#old_hdr\">old_hdr</a>.<a class=\"id\" href=\"#reply_len\">reply_len</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sg_new_write\">sg_new_write</a>(<a class=\"id\" href=\"#sfp\">sfp</a>, <a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#blocking\">blocking</a>, 0, 0, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> &lt; (<a class=\"id\" href=\"#SZ_SG_HEADER\">SZ_SG_HEADER</a> + 6))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;<span class=\"ts\"/><span class=\"comment\">/* The minimum scsi command length is 6 bytes. */</span>", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#srp\">srp</a> = <a class=\"id\" href=\"#sg_add_request\">sg_add_request</a>(<a class=\"id\" href=\"#sfp\">sfp</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_TIMEOUT\">SCSI_LOG_TIMEOUT</a>(1, <a class=\"id\" href=\"#printk\">printk</a>(\"sg_write: queue full\\n\"));", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EDOM\">EDOM</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> += <a class=\"id\" href=\"#SZ_SG_HEADER\">SZ_SG_HEADER</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__get_user\">__get_user</a>(<a class=\"id\" href=\"#opcode\">opcode</a>, <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#next_cmd_len\">next_cmd_len</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#next_cmd_len\">next_cmd_len</a> &gt; <a class=\"id\" href=\"#MAX_COMMAND_SIZE\">MAX_COMMAND_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_TIMEOUT\">SCSI_LOG_TIMEOUT</a>(1, <a class=\"id\" href=\"#printk\">printk</a>(\"sg_write: command length too long\\n\"));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#next_cmd_len\">next_cmd_len</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_remove_request\">sg_remove_request</a>(<a class=\"id\" href=\"#sfp\">sfp</a>, <a class=\"id\" href=\"#srp\">srp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmd_size\">cmd_size</a> = <a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#next_cmd_len\">next_cmd_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#next_cmd_len\">next_cmd_len</a> = 0;<span class=\"ts\"/><span class=\"comment\">/* reset so only this write() effected */</span>", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmd_size\">cmd_size</a> = <a class=\"id\" href=\"#COMMAND_SIZE\">COMMAND_SIZE</a>(<a class=\"id\" href=\"#opcode\">opcode</a>);<span class=\"ts\"/><span class=\"comment\">/* based on SCSI command group */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#opcode\">opcode</a> >= 0xc0) && <a class=\"id\" href=\"#old_hdr\">old_hdr</a>.<a class=\"id\" href=\"#twelve_byte\">twelve_byte</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmd_size\">cmd_size</a> = 12;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_TIMEOUT\">SCSI_LOG_TIMEOUT</a>(4, <a class=\"id\" href=\"#printk\">printk</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/>\"sg_write:   scsi opcode=0x%02x, cmd_size=%d\\n\", (int) <a class=\"id\" href=\"#opcode\">opcode</a>, <a class=\"id\" href=\"#cmd_size\">cmd_size</a>));", 
"<span class=\"comment\">/* Determine buffer size.  */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#input_size\">input_size</a> = <a class=\"id\" href=\"#count\">count</a> - <a class=\"id\" href=\"#cmd_size\">cmd_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mxsize\">mxsize</a> = (<a class=\"id\" href=\"#input_size\">input_size</a> &gt; <a class=\"id\" href=\"#old_hdr\">old_hdr</a>.<a class=\"id\" href=\"#reply_len\">reply_len</a>) ? <a class=\"id\" href=\"#input_size\">input_size</a> : <a class=\"id\" href=\"#old_hdr\">old_hdr</a>.<a class=\"id\" href=\"#reply_len\">reply_len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mxsize\">mxsize</a> -= <a class=\"id\" href=\"#SZ_SG_HEADER\">SZ_SG_HEADER</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#input_size\">input_size</a> -= <a class=\"id\" href=\"#SZ_SG_HEADER\">SZ_SG_HEADER</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#input_size\">input_size</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_remove_request\">sg_remove_request</a>(<a class=\"id\" href=\"#sfp\">sfp</a>, <a class=\"id\" href=\"#srp\">srp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;<span class=\"ts\"/><span class=\"comment\">/* User did not pass enough bytes for this command. */</span>", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hp\">hp</a> = &amp;<a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#header\">header</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#interface_id\">interface_id</a> = '\\0';<span class=\"ts\"/><span class=\"comment\">/* indicator of old interface tunnelled */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#cmd_len\">cmd_len</a> = (unsigned char) <a class=\"id\" href=\"#cmd_size\">cmd_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#iovec_count\">iovec_count</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#mx_sb_len\">mx_sb_len</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#input_size\">input_size</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#dxfer_direction\">dxfer_direction</a> = (<a class=\"id\" href=\"#old_hdr\">old_hdr</a>.<a class=\"id\" href=\"#reply_len\">reply_len</a> &gt; <a class=\"id\" href=\"#SZ_SG_HEADER\">SZ_SG_HEADER</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#SG_DXFER_TO_FROM_DEV\">SG_DXFER_TO_FROM_DEV</a> : <a class=\"id\" href=\"#SG_DXFER_TO_DEV\">SG_DXFER_TO_DEV</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#dxfer_direction\">dxfer_direction</a> = (<a class=\"id\" href=\"#mxsize\">mxsize</a> &gt; 0) ? <a class=\"id\" href=\"#SG_DXFER_FROM_DEV\">SG_DXFER_FROM_DEV</a> : <a class=\"id\" href=\"#SG_DXFER_NONE\">SG_DXFER_NONE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#dxfer_len\">dxfer_len</a> = <a class=\"id\" href=\"#mxsize\">mxsize</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#dxfer_direction\">dxfer_direction</a> == <a class=\"id\" href=\"#SG_DXFER_TO_DEV\">SG_DXFER_TO_DEV</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#dxferp\">dxferp</a> = (char <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#buf\">buf</a> + <a class=\"id\" href=\"#cmd_size\">cmd_size</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#dxferp\">dxferp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#sbp\">sbp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#timeout\">timeout</a> = <a class=\"id\" href=\"#old_hdr\">old_hdr</a>.<a class=\"id\" href=\"#reply_len\">reply_len</a>;<span class=\"ts\"/><span class=\"comment\">/* structure abuse ... */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#input_size\">input_size</a>;<span class=\"ts\"/><span class=\"comment\">/* structure abuse ... */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#pack_id\">pack_id</a> = <a class=\"id\" href=\"#old_hdr\">old_hdr</a>.<a class=\"id\" href=\"#pack_id\">pack_id</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#usr_ptr\">usr_ptr</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#__copy_from_user\">__copy_from_user</a>(<a class=\"id\" href=\"#cmnd\">cmnd</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#cmd_size\">cmd_size</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * SG_DXFER_TO_FROM_DEV is functionally equivalent to SG_DXFER_FROM_DEV,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * but is is possible that the app intended SG_DXFER_TO_DEV, because there</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * is a non-zero input_size, so emit a warning.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#dxfer_direction\">dxfer_direction</a> == <a class=\"id\" href=\"#SG_DXFER_TO_FROM_DEV\">SG_DXFER_TO_FROM_DEV</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>static char <a class=\"id\" href=\"#cmd\">cmd</a>[<a class=\"id\" href=\"#TASK_COMM_LEN\">TASK_COMM_LEN</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#comm\">comm</a>, <a class=\"id\" href=\"#cmd\">cmd</a>) && <a class=\"id\" href=\"#printk_ratelimit\">printk_ratelimit</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"sg_write: data in/out %d/%d bytes for SCSI command 0x%x--\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"guessing data in;\\n   \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"program %s not setting count and/or reply_len properly\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#old_hdr\">old_hdr</a>.<a class=\"id\" href=\"#reply_len\">reply_len</a> - (int)<a class=\"id\" href=\"#SZ_SG_HEADER\">SZ_SG_HEADER</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#input_size\">input_size</a>, (unsigned int) <a class=\"id\" href=\"#cmnd\">cmnd</a>[0],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#comm\">comm</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strcpy\">strcpy</a>(<a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#comm\">comm</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#k\">k</a> = <a class=\"id\" href=\"#sg_common_write\">sg_common_write</a>(<a class=\"id\" href=\"#sfp\">sfp</a>, <a class=\"id\" href=\"#srp\">srp</a>, <a class=\"id\" href=\"#cmnd\">cmnd</a>, <a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#timeout\">timeout</a>, <a class=\"id\" href=\"#blocking\">blocking</a>);", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#k\">k</a> &lt; 0) ? <a class=\"id\" href=\"#k\">k</a> : <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#sg_new_write\">sg_new_write</a>(<a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> *<a class=\"id\" href=\"#sfp\">sfp</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, int <a class=\"id\" href=\"#blocking\">blocking</a>, int <a class=\"id\" href=\"#read_only\">read_only</a>, int <a class=\"id\" href=\"#sg_io_owned\">sg_io_owned</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#Sg_request\">Sg_request</a> **<a class=\"id\" href=\"#o_srp\">o_srp</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#k\">k</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_request\">Sg_request</a> *<a class=\"id\" href=\"#srp\">srp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_io_hdr_t\">sg_io_hdr_t</a> *<a class=\"id\" href=\"#hp\">hp</a>;", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#cmnd\">cmnd</a>[<a class=\"id\" href=\"#MAX_COMMAND_SIZE\">MAX_COMMAND_SIZE</a>];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#timeout\">timeout</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#ul_timeout\">ul_timeout</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> &lt; <a class=\"id\" href=\"#SZ_SG_IO_HDR\">SZ_SG_IO_HDR</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#access_ok\">access_ok</a>(<a class=\"id\" href=\"#VERIFY_READ\">VERIFY_READ</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>; <span class=\"comment\">/* protects following copy_from_user()s + get_user()s */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#cmd_q\">cmd_q</a> = 1;<span class=\"ts\"/><span class=\"comment\">/* when sg_io_hdr seen, set command queuing on */</span>", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#srp\">srp</a> = <a class=\"id\" href=\"#sg_add_request\">sg_add_request</a>(<a class=\"id\" href=\"#sfp\">sfp</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_TIMEOUT\">SCSI_LOG_TIMEOUT</a>(1, <a class=\"id\" href=\"#printk\">printk</a>(\"sg_new_write: queue full\\n\"));", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EDOM\">EDOM</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#sg_io_owned\">sg_io_owned</a> = <a class=\"id\" href=\"#sg_io_owned\">sg_io_owned</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hp\">hp</a> = &amp;<a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#header\">header</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#__copy_from_user\">__copy_from_user</a>(<a class=\"id\" href=\"#hp\">hp</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#SZ_SG_IO_HDR\">SZ_SG_IO_HDR</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_remove_request\">sg_remove_request</a>(<a class=\"id\" href=\"#sfp\">sfp</a>, <a class=\"id\" href=\"#srp\">srp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#interface_id\">interface_id</a> != 'S') {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_remove_request\">sg_remove_request</a>(<a class=\"id\" href=\"#sfp\">sfp</a>, <a class=\"id\" href=\"#srp\">srp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#SG_FLAG_MMAP_IO\">SG_FLAG_MMAP_IO</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#dxfer_len\">dxfer_len</a> &gt; <a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#reserve\">reserve</a>.<a class=\"id\" href=\"#bufflen\">bufflen</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_remove_request\">sg_remove_request</a>(<a class=\"id\" href=\"#sfp\">sfp</a>, <a class=\"id\" href=\"#srp\">srp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;<span class=\"ts\"/><span class=\"comment\">/* MMAP_IO size must fit in reserve buffer */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#SG_FLAG_DIRECT_IO\">SG_FLAG_DIRECT_IO</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_remove_request\">sg_remove_request</a>(<a class=\"id\" href=\"#sfp\">sfp</a>, <a class=\"id\" href=\"#srp\">srp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;<span class=\"ts\"/><span class=\"comment\">/* either MMAP_IO or DIRECT_IO (not both) */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sg_res_in_use\">sg_res_in_use</a>(<a class=\"id\" href=\"#sfp\">sfp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_remove_request\">sg_remove_request</a>(<a class=\"id\" href=\"#sfp\">sfp</a>, <a class=\"id\" href=\"#srp\">srp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;<span class=\"ts\"/><span class=\"comment\">/* reserve buffer already being used */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ul_timeout\">ul_timeout</a> = <a class=\"id\" href=\"#msecs_to_jiffies\">msecs_to_jiffies</a>(<a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#header\">header</a>.<a class=\"id\" href=\"#timeout\">timeout</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timeout\">timeout</a> = (<a class=\"id\" href=\"#ul_timeout\">ul_timeout</a> &lt; <a class=\"id\" href=\"#INT_MAX\">INT_MAX</a>) ? <a class=\"id\" href=\"#ul_timeout\">ul_timeout</a> : <a class=\"id\" href=\"#INT_MAX\">INT_MAX</a>;", 
"<span class=\"ts\"/>if ((!<a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#cmdp\">cmdp</a>) || (<a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#cmd_len\">cmd_len</a> &lt; 6) || (<a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#cmd_len\">cmd_len</a> &gt; sizeof (<a class=\"id\" href=\"#cmnd\">cmnd</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_remove_request\">sg_remove_request</a>(<a class=\"id\" href=\"#sfp\">sfp</a>, <a class=\"id\" href=\"#srp\">srp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EMSGSIZE\">EMSGSIZE</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#access_ok\">access_ok</a>(<a class=\"id\" href=\"#VERIFY_READ\">VERIFY_READ</a>, <a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#cmdp\">cmdp</a>, <a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#cmd_len\">cmd_len</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_remove_request\">sg_remove_request</a>(<a class=\"id\" href=\"#sfp\">sfp</a>, <a class=\"id\" href=\"#srp\">srp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;<span class=\"ts\"/><span class=\"comment\">/* protects following copy_from_user()s + get_user()s */</span>", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#__copy_from_user\">__copy_from_user</a>(<a class=\"id\" href=\"#cmnd\">cmnd</a>, <a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#cmdp\">cmdp</a>, <a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#cmd_len\">cmd_len</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_remove_request\">sg_remove_request</a>(<a class=\"id\" href=\"#sfp\">sfp</a>, <a class=\"id\" href=\"#srp\">srp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#read_only\">read_only</a> && <a class=\"id\" href=\"#sg_allow_access\">sg_allow_access</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#cmnd\">cmnd</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_remove_request\">sg_remove_request</a>(<a class=\"id\" href=\"#sfp\">sfp</a>, <a class=\"id\" href=\"#srp\">srp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#k\">k</a> = <a class=\"id\" href=\"#sg_common_write\">sg_common_write</a>(<a class=\"id\" href=\"#sfp\">sfp</a>, <a class=\"id\" href=\"#srp\">srp</a>, <a class=\"id\" href=\"#cmnd\">cmnd</a>, <a class=\"id\" href=\"#timeout\">timeout</a>, <a class=\"id\" href=\"#blocking\">blocking</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#k\">k</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#k\">k</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#o_srp\">o_srp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#o_srp\">o_srp</a> = <a class=\"id\" href=\"#srp\">srp</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#sg_common_write\">sg_common_write</a>(<a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> * <a class=\"id\" href=\"#sfp\">sfp</a>, <a class=\"id\" href=\"#Sg_request\">Sg_request</a> * <a class=\"id\" href=\"#srp\">srp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned char *<a class=\"id\" href=\"#cmnd\">cmnd</a>, int <a class=\"id\" href=\"#timeout\">timeout</a>, int <a class=\"id\" href=\"#blocking\">blocking</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#data_dir\">data_dir</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_device\">Sg_device</a> *<a class=\"id\" href=\"#sdp\">sdp</a> = <a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#parentdp\">parentdp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_io_hdr_t\">sg_io_hdr_t</a> *<a class=\"id\" href=\"#hp\">hp</a> = &amp;<a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#header\">header</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#cmd_opcode\">cmd_opcode</a> = <a class=\"id\" href=\"#cmnd\">cmnd</a>[0];<span class=\"ts\"/><span class=\"comment\">/* hold opcode of command */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#status\">status</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#masked_status\">masked_status</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#msg_status\">msg_status</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#info\">info</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#host_status\">host_status</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#driver_status\">driver_status</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#resid\">resid</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_TIMEOUT\">SCSI_LOG_TIMEOUT</a>(4, <a class=\"id\" href=\"#printk\">printk</a>(\"sg_common_write:  scsi opcode=0x%02x, cmd_size=%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (int) <a class=\"id\" href=\"#cmnd\">cmnd</a>[0], (int) <a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#cmd_len\">cmd_len</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#k\">k</a> = <a class=\"id\" href=\"#sg_start_req\">sg_start_req</a>(<a class=\"id\" href=\"#srp\">srp</a>, <a class=\"id\" href=\"#cmnd\">cmnd</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#k\">k</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_TIMEOUT\">SCSI_LOG_TIMEOUT</a>(1, <a class=\"id\" href=\"#printk\">printk</a>(\"sg_common_write: start_req err=%d\\n\", <a class=\"id\" href=\"#k\">k</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_finish_rem_req\">sg_finish_rem_req</a>(<a class=\"id\" href=\"#srp\">srp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#k\">k</a>;<span class=\"ts\"/><span class=\"comment\">/* probably out of space --&gt; ENOMEM */</span>", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#detached\">detached</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#bio\">bio</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_end_request_all\">blk_end_request_all</a>(<a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#rq\">rq</a>, -<a class=\"id\" href=\"#EIO\">EIO</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_finish_rem_req\">sg_finish_rem_req</a>(<a class=\"id\" href=\"#srp\">srp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#dxfer_direction\">dxfer_direction</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SG_DXFER_TO_FROM_DEV\">SG_DXFER_TO_FROM_DEV</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SG_DXFER_FROM_DEV\">SG_DXFER_FROM_DEV</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data_dir\">data_dir</a> = <a class=\"id\" href=\"#DMA_FROM_DEVICE\">DMA_FROM_DEVICE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SG_DXFER_TO_DEV\">SG_DXFER_TO_DEV</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data_dir\">data_dir</a> = <a class=\"id\" href=\"#DMA_TO_DEVICE\">DMA_TO_DEVICE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SG_DXFER_UNKNOWN\">SG_DXFER_UNKNOWN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data_dir\">data_dir</a> = <a class=\"id\" href=\"#DMA_BIDIRECTIONAL\">DMA_BIDIRECTIONAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data_dir\">data_dir</a> = <a class=\"id\" href=\"#DMA_NONE\">DMA_NONE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#duration\">duration</a> = <a class=\"id\" href=\"#jiffies_to_msecs\">jiffies_to_msecs</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#timeout\">timeout</a> = <a class=\"id\" href=\"#timeout\">timeout</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kref_get\">kref_get</a>(&amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#f_ref\">f_ref</a>); <span class=\"comment\">/* sg_rq_end_io() does kref_put(). */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_execute_rq_nowait\">blk_execute_rq_nowait</a>(<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#request_queue\">request_queue</a>, <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#disk\">disk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#rq\">rq</a>, 1, <a class=\"id\" href=\"#sg_rq_end_io\">sg_rq_end_io</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#sg_ioctl\">sg_ioctl</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, unsigned int <a class=\"id\" href=\"#cmd_in\">cmd_in</a>, unsigned long <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#p\">p</a> = (void <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#arg\">arg</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ip\">ip</a> = <a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a>, <a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#read_only\">read_only</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_device\">Sg_device</a> *<a class=\"id\" href=\"#sdp\">sdp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> *<a class=\"id\" href=\"#sfp\">sfp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_request\">Sg_request</a> *<a class=\"id\" href=\"#srp\">srp</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#iflags\">iflags</a>;", 
"", 
"<span class=\"ts\"/>if ((!(<a class=\"id\" href=\"#sfp\">sfp</a> = (<a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> *) <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>)) || (!(<a class=\"id\" href=\"#sdp\">sdp</a> = <a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#parentdp\">parentdp</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_TIMEOUT\">SCSI_LOG_TIMEOUT</a>(3, <a class=\"id\" href=\"#printk\">printk</a>(\"sg_ioctl: %s, cmd=0x%x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#disk_name\">disk_name</a>, (int) <a class=\"id\" href=\"#cmd_in\">cmd_in</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_only\">read_only</a> = (<a class=\"id\" href=\"#O_RDWR\">O_RDWR</a> != (<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_flags\">f_flags</a> &amp; <a class=\"id\" href=\"#O_ACCMODE\">O_ACCMODE</a>));", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#cmd_in\">cmd_in</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SG_IO\">SG_IO</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#blocking\">blocking</a> = 1;<span class=\"ts\"/><span class=\"comment\">/* ignore O_NONBLOCK flag */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#detached\">detached</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#scsi_block_when_processing_errors\">scsi_block_when_processing_errors</a>(<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#access_ok\">access_ok</a>(<a class=\"id\" href=\"#VERIFY_WRITE\">VERIFY_WRITE</a>, <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#SZ_SG_IO_HDR\">SZ_SG_IO_HDR</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sg_new_write\">sg_new_write</a>(<a class=\"id\" href=\"#sfp\">sfp</a>, <a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#SZ_SG_IO_HDR\">SZ_SG_IO_HDR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#blocking\">blocking</a>, <a class=\"id\" href=\"#read_only\">read_only</a>, 1, &amp;<a class=\"id\" href=\"#srp\">srp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#result\">result</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>while (1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = 0;<span class=\"ts\"/><span class=\"comment\">/* following macro to beat race condition */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__wait_event_interruptible\">__wait_event_interruptible</a>(<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#read_wait\">read_wait</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#done\">done</a> || <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#detached\">detached</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#detached\">detached</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_lock_irq\">write_lock_irq</a>(&amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#rq_list_lock\">rq_list_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#done\">done</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#done\">done</a> = 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_irq\">write_unlock_irq</a>(&amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#rq_list_lock\">rq_list_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#orphan\">orphan</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_irq\">write_unlock_irq</a>(&amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#rq_list_lock\">rq_list_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;<span class=\"ts\"/><span class=\"comment\">/* -ERESTARTSYS because signal hit process */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#sg_new_read\">sg_new_read</a>(<a class=\"id\" href=\"#sfp\">sfp</a>, <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#SZ_SG_IO_HDR\">SZ_SG_IO_HDR</a>, <a class=\"id\" href=\"#srp\">srp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#result\">result</a> &lt; 0) ? <a class=\"id\" href=\"#result\">result</a> : 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SG_SET_TIMEOUT\">SG_SET_TIMEOUT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#result\">result</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#val\">val</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#val\">val</a> >= <a class=\"id\" href=\"#MULDIV\">MULDIV</a> (<a class=\"id\" href=\"#INT_MAX\">INT_MAX</a>, <a class=\"id\" href=\"#USER_HZ\">USER_HZ</a>, <a class=\"id\" href=\"#HZ\">HZ</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#MULDIV\">MULDIV</a> (<a class=\"id\" href=\"#INT_MAX\">INT_MAX</a>, <a class=\"id\" href=\"#USER_HZ\">USER_HZ</a>, <a class=\"id\" href=\"#HZ\">HZ</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#timeout_user\">timeout_user</a> = <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#timeout\">timeout</a> = <a class=\"id\" href=\"#MULDIV\">MULDIV</a> (<a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#HZ\">HZ</a>, <a class=\"id\" href=\"#USER_HZ\">USER_HZ</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SG_GET_TIMEOUT\">SG_GET_TIMEOUT</a>:<span class=\"ts\"/><span class=\"comment\">/* N.B. User receives timeout as return value */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* strange ..., for backward compatibility */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#timeout_user\">timeout_user</a>;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SG_SET_FORCE_LOW_DMA\">SG_SET_FORCE_LOW_DMA</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#result\">result</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#val\">val</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#low_dma\">low_dma</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((0 == <a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#low_dma\">low_dma</a>) && (0 == <a class=\"id\" href=\"#sg_res_in_use\">sg_res_in_use</a>(<a class=\"id\" href=\"#sfp\">sfp</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = (int) <a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#reserve\">reserve</a>.<a class=\"id\" href=\"#bufflen\">bufflen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_remove_scat\">sg_remove_scat</a>(&amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#reserve\">reserve</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_build_reserve\">sg_build_reserve</a>(<a class=\"id\" href=\"#sfp\">sfp</a>, <a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#detached\">detached</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#low_dma\">low_dma</a> = <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#unchecked_isa_dma\">unchecked_isa_dma</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SG_GET_LOW_DMA\">SG_GET_LOW_DMA</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#put_user\">put_user</a>((int) <a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#low_dma\">low_dma</a>, <a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SG_GET_SCSI_ID\">SG_GET_SCSI_ID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#access_ok\">access_ok</a>(<a class=\"id\" href=\"#VERIFY_WRITE\">VERIFY_WRITE</a>, <a class=\"id\" href=\"#p\">p</a>, sizeof (<a class=\"id\" href=\"#sg_scsi_id_t\">sg_scsi_id_t</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_scsi_id_t\">sg_scsi_id_t</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#sg_idp\">sg_idp</a> = <a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#detached\">detached</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__put_user\">__put_user</a>((int) <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#host_no\">host_no</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#sg_idp\">sg_idp</a>-><a class=\"id\" href=\"#host_no\">host_no</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__put_user\">__put_user</a>((int) <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#channel\">channel</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#sg_idp\">sg_idp</a>-><a class=\"id\" href=\"#channel\">channel</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__put_user\">__put_user</a>((int) <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#id\">id</a>, &amp;<a class=\"id\" href=\"#sg_idp\">sg_idp</a>-><a class=\"id\" href=\"#scsi_id\">scsi_id</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__put_user\">__put_user</a>((int) <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#lun\">lun</a>, &amp;<a class=\"id\" href=\"#sg_idp\">sg_idp</a>-><a class=\"id\" href=\"#lun\">lun</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__put_user\">__put_user</a>((int) <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#type\">type</a>, &amp;<a class=\"id\" href=\"#sg_idp\">sg_idp</a>-><a class=\"id\" href=\"#scsi_type\">scsi_type</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__put_user\">__put_user</a>((short) <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#cmd_per_lun\">cmd_per_lun</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#sg_idp\">sg_idp</a>-><a class=\"id\" href=\"#h_cmd_per_lun\">h_cmd_per_lun</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__put_user\">__put_user</a>((short) <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#queue_depth\">queue_depth</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#sg_idp\">sg_idp</a>-><a class=\"id\" href=\"#d_queue_depth\">d_queue_depth</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__put_user\">__put_user</a>(0, &amp;<a class=\"id\" href=\"#sg_idp\">sg_idp</a>-><a class=\"id\" href=\"#unused\">unused</a>[0]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__put_user\">__put_user</a>(0, &amp;<a class=\"id\" href=\"#sg_idp\">sg_idp</a>-><a class=\"id\" href=\"#unused\">unused</a>[1]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SG_SET_FORCE_PACK_ID\">SG_SET_FORCE_PACK_ID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#result\">result</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#force_packid\">force_packid</a> = <a class=\"id\" href=\"#val\">val</a> ? 1 : 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SG_GET_PACK_ID\">SG_GET_PACK_ID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#access_ok\">access_ok</a>(<a class=\"id\" href=\"#VERIFY_WRITE\">VERIFY_WRITE</a>, <a class=\"id\" href=\"#ip\">ip</a>, sizeof (int)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_lock_irqsave\">read_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#rq_list_lock\">rq_list_lock</a>, <a class=\"id\" href=\"#iflags\">iflags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#srp\">srp</a> = <a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#headrp\">headrp</a>; <a class=\"id\" href=\"#srp\">srp</a>; <a class=\"id\" href=\"#srp\">srp</a> = <a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#nextrp\">nextrp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((1 == <a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#done\">done</a>) && (!<a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#sg_io_owned\">sg_io_owned</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_irqrestore\">read_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#rq_list_lock\">rq_list_lock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#iflags\">iflags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#header\">header</a>.<a class=\"id\" href=\"#pack_id\">pack_id</a>, <a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_irqrestore\">read_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#rq_list_lock\">rq_list_lock</a>, <a class=\"id\" href=\"#iflags\">iflags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__put_user\">__put_user</a>(-1, <a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SG_GET_NUM_WAITING\">SG_GET_NUM_WAITING</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_lock_irqsave\">read_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#rq_list_lock\">rq_list_lock</a>, <a class=\"id\" href=\"#iflags\">iflags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#val\">val</a> = 0, <a class=\"id\" href=\"#srp\">srp</a> = <a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#headrp\">headrp</a>; <a class=\"id\" href=\"#srp\">srp</a>; <a class=\"id\" href=\"#srp\">srp</a> = <a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#nextrp\">nextrp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((1 == <a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#done\">done</a>) && (!<a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#sg_io_owned\">sg_io_owned</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>++<a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_irqrestore\">read_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#rq_list_lock\">rq_list_lock</a>, <a class=\"id\" href=\"#iflags\">iflags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SG_GET_SG_TABLESIZE\">SG_GET_SG_TABLESIZE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#sg_tablesize\">sg_tablesize</a>, <a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SG_SET_RESERVED_SIZE\">SG_SET_RESERVED_SIZE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#result\">result</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"                if (<a class=\"id\" href=\"#val\">val</a> &lt; 0)", 
"                        return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#min_t\">min_t</a>(int, <a class=\"id\" href=\"#val\">val</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#queue_max_sectors\">queue_max_sectors</a>(<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#request_queue\">request_queue</a>) * 512);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#val\">val</a> != <a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#reserve\">reserve</a>.<a class=\"id\" href=\"#bufflen\">bufflen</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sg_res_in_use\">sg_res_in_use</a>(<a class=\"id\" href=\"#sfp\">sfp</a>) || <a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#mmap_called\">mmap_called</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_remove_scat\">sg_remove_scat</a>(&amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#reserve\">reserve</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_build_reserve\">sg_build_reserve</a>(<a class=\"id\" href=\"#sfp\">sfp</a>, <a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SG_GET_RESERVED_SIZE\">SG_GET_RESERVED_SIZE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#min_t\">min_t</a>(int, <a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#reserve\">reserve</a>.<a class=\"id\" href=\"#bufflen\">bufflen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#queue_max_sectors\">queue_max_sectors</a>(<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#request_queue\">request_queue</a>) * 512);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SG_SET_COMMAND_Q\">SG_SET_COMMAND_Q</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#result\">result</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#cmd_q\">cmd_q</a> = <a class=\"id\" href=\"#val\">val</a> ? 1 : 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SG_GET_COMMAND_Q\">SG_GET_COMMAND_Q</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#put_user\">put_user</a>((int) <a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#cmd_q\">cmd_q</a>, <a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SG_SET_KEEP_ORPHAN\">SG_SET_KEEP_ORPHAN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#result\">result</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#keep_orphan\">keep_orphan</a> = <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SG_GET_KEEP_ORPHAN\">SG_GET_KEEP_ORPHAN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#put_user\">put_user</a>((int) <a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#keep_orphan\">keep_orphan</a>, <a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SG_NEXT_CMD_LEN\">SG_NEXT_CMD_LEN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#result\">result</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#next_cmd_len\">next_cmd_len</a> = (<a class=\"id\" href=\"#val\">val</a> &gt; 0) ? <a class=\"id\" href=\"#val\">val</a> : 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SG_GET_VERSION_NUM\">SG_GET_VERSION_NUM</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#sg_version_num\">sg_version_num</a>, <a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SG_GET_ACCESS_COUNT\">SG_GET_ACCESS_COUNT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* faked - we don't have a real access count anymore */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = (<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a> ? 1 : 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SG_GET_REQUEST_TABLE\">SG_GET_REQUEST_TABLE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#access_ok\">access_ok</a>(<a class=\"id\" href=\"#VERIFY_WRITE\">VERIFY_WRITE</a>, <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#SZ_SG_REQ_INFO\">SZ_SG_REQ_INFO</a> * <a class=\"id\" href=\"#SG_MAX_QUEUE\">SG_MAX_QUEUE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_req_info_t\">sg_req_info_t</a> *<a class=\"id\" href=\"#rinfo\">rinfo</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#ms\">ms</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rinfo\">rinfo</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#SZ_SG_REQ_INFO\">SZ_SG_REQ_INFO</a> * <a class=\"id\" href=\"#SG_MAX_QUEUE\">SG_MAX_QUEUE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#rinfo\">rinfo</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_lock_irqsave\">read_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#rq_list_lock\">rq_list_lock</a>, <a class=\"id\" href=\"#iflags\">iflags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#srp\">srp</a> = <a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#headrp\">headrp</a>, <a class=\"id\" href=\"#val\">val</a> = 0; <a class=\"id\" href=\"#val\">val</a> &lt; <a class=\"id\" href=\"#SG_MAX_QUEUE\">SG_MAX_QUEUE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     ++<a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#srp\">srp</a> = <a class=\"id\" href=\"#srp\">srp</a> ? <a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#nextrp\">nextrp</a> : <a class=\"id\" href=\"#srp\">srp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#rinfo\">rinfo</a>[<a class=\"id\" href=\"#val\">val</a>], 0, <a class=\"id\" href=\"#SZ_SG_REQ_INFO\">SZ_SG_REQ_INFO</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#srp\">srp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rinfo\">rinfo</a>[<a class=\"id\" href=\"#val\">val</a>].<a class=\"id\" href=\"#req_state\">req_state</a> = <a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#done\">done</a> + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rinfo\">rinfo</a>[<a class=\"id\" href=\"#val\">val</a>].<a class=\"id\" href=\"#problem\">problem</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#header\">header</a>.<a class=\"id\" href=\"#masked_status\">masked_status</a> &amp; ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#header\">header</a>.<a class=\"id\" href=\"#host_status\">host_status</a> &amp; ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#header\">header</a>.<a class=\"id\" href=\"#driver_status\">driver_status</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#done\">done</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rinfo\">rinfo</a>[<a class=\"id\" href=\"#val\">val</a>].<a class=\"id\" href=\"#duration\">duration</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#header\">header</a>.<a class=\"id\" href=\"#duration\">duration</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ms\">ms</a> = <a class=\"id\" href=\"#jiffies_to_msecs\">jiffies_to_msecs</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rinfo\">rinfo</a>[<a class=\"id\" href=\"#val\">val</a>].<a class=\"id\" href=\"#duration\">duration</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#ms\">ms</a> &gt; <a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#header\">header</a>.<a class=\"id\" href=\"#duration\">duration</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#ms\">ms</a> - <a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#header\">header</a>.<a class=\"id\" href=\"#duration\">duration</a>) : 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rinfo\">rinfo</a>[<a class=\"id\" href=\"#val\">val</a>].<a class=\"id\" href=\"#orphan\">orphan</a> = <a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#orphan\">orphan</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rinfo\">rinfo</a>[<a class=\"id\" href=\"#val\">val</a>].<a class=\"id\" href=\"#sg_io_owned\">sg_io_owned</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#sg_io_owned\">sg_io_owned</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rinfo\">rinfo</a>[<a class=\"id\" href=\"#val\">val</a>].<a class=\"id\" href=\"#pack_id\">pack_id</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#header\">header</a>.<a class=\"id\" href=\"#pack_id\">pack_id</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rinfo\">rinfo</a>[<a class=\"id\" href=\"#val\">val</a>].<a class=\"id\" href=\"#usr_ptr\">usr_ptr</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#header\">header</a>.<a class=\"id\" href=\"#usr_ptr\">usr_ptr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_irqrestore\">read_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#rq_list_lock\">rq_list_lock</a>, <a class=\"id\" href=\"#iflags\">iflags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#__copy_to_user\">__copy_to_user</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#rinfo\">rinfo</a>, ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SZ_SG_REQ_INFO\">SZ_SG_REQ_INFO</a> * <a class=\"id\" href=\"#SG_MAX_QUEUE\">SG_MAX_QUEUE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#result\">result</a> ? -<a class=\"id\" href=\"#EFAULT\">EFAULT</a> : 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#rinfo\">rinfo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SG_EMULATED_HOST\">SG_EMULATED_HOST</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#detached\">detached</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#hostt\">hostt</a>-><a class=\"id\" href=\"#emulated\">emulated</a>, <a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SG_SCSI_RESET\">SG_SCSI_RESET</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#detached\">detached</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_flags\">f_flags</a> &amp; <a class=\"id\" href=\"#O_NONBLOCK\">O_NONBLOCK</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#scsi_host_in_recovery\">scsi_host_in_recovery</a>(<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#host\">host</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#scsi_block_when_processing_errors\">scsi_block_when_processing_errors</a>(<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#result\">result</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#SG_SCSI_RESET_NOTHING\">SG_SCSI_RESET_NOTHING</a> == <a class=\"id\" href=\"#val\">val</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#val\">val</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#SG_SCSI_RESET_DEVICE\">SG_SCSI_RESET_DEVICE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#SCSI_TRY_RESET_DEVICE\">SCSI_TRY_RESET_DEVICE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#SG_SCSI_RESET_TARGET\">SG_SCSI_RESET_TARGET</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#SCSI_TRY_RESET_TARGET\">SCSI_TRY_RESET_TARGET</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#SG_SCSI_RESET_BUS\">SG_SCSI_RESET_BUS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#SCSI_TRY_RESET_BUS\">SCSI_TRY_RESET_BUS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#SG_SCSI_RESET_HOST\">SG_SCSI_RESET_HOST</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#SCSI_TRY_RESET_HOST\">SCSI_TRY_RESET_HOST</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_ADMIN\">CAP_SYS_ADMIN</a>) || !<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_RAWIO\">CAP_SYS_RAWIO</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#scsi_reset_provider\">scsi_reset_provider</a>(<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>, <a class=\"id\" href=\"#val\">val</a>) ==", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SUCCESS\">SUCCESS</a>) ? 0 : -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SCSI_IOCTL_SEND_COMMAND\">SCSI_IOCTL_SEND_COMMAND</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#detached\">detached</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#read_only\">read_only</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#opcode\">opcode</a> = <a class=\"id\" href=\"#WRITE_6\">WRITE_6</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#Scsi_Ioctl_Command\">Scsi_Ioctl_Command</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#siocp\">siocp</a> = <a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#opcode\">opcode</a>, <a class=\"id\" href=\"#siocp\">siocp</a>-><a class=\"id\" href=\"#data\">data</a>, 1))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sg_allow_access\">sg_allow_access</a>(<a class=\"id\" href=\"#filp\">filp</a>, &amp;<a class=\"id\" href=\"#opcode\">opcode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sg_scsi_ioctl\">sg_scsi_ioctl</a>(<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#request_queue\">request_queue</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_mode\">f_mode</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SG_SET_DEBUG\">SG_SET_DEBUG</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#result\">result</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#sgdebug\">sgdebug</a> = (char) <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SCSI_IOCTL_GET_IDLUN\">SCSI_IOCTL_GET_IDLUN</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SCSI_IOCTL_GET_BUS_NUMBER\">SCSI_IOCTL_GET_BUS_NUMBER</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SCSI_IOCTL_PROBE_HOST\">SCSI_IOCTL_PROBE_HOST</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SG_GET_TRANSFORM\">SG_GET_TRANSFORM</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#detached\">detached</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#scsi_ioctl\">scsi_ioctl</a>(<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>, <a class=\"id\" href=\"#cmd_in\">cmd_in</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#BLKSECTGET\">BLKSECTGET</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#queue_max_sectors\">queue_max_sectors</a>(<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#request_queue\">request_queue</a>) * 512,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#BLKTRACESETUP\">BLKTRACESETUP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#blk_trace_setup\">blk_trace_setup</a>(<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#request_queue\">request_queue</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#disk_name\">disk_name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#MKDEV\">MKDEV</a>(<a class=\"id\" href=\"#SCSI_GENERIC_MAJOR\">SCSI_GENERIC_MAJOR</a>, <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#index\">index</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (char *)<a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#BLKTRACESTART\">BLKTRACESTART</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#blk_trace_startstop\">blk_trace_startstop</a>(<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#request_queue\">request_queue</a>, 1);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#BLKTRACESTOP\">BLKTRACESTOP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#blk_trace_startstop\">blk_trace_startstop</a>(<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#request_queue\">request_queue</a>, 0);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#BLKTRACETEARDOWN\">BLKTRACETEARDOWN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#blk_trace_remove\">blk_trace_remove</a>(<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#request_queue\">request_queue</a>);", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#read_only\">read_only</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;<span class=\"ts\"/><span class=\"comment\">/* don't know so take safe approach */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#scsi_ioctl\">scsi_ioctl</a>(<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>, <a class=\"id\" href=\"#cmd_in\">cmd_in</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static long", 
"<a class=\"id\" href=\"#sg_unlocked_ioctl\">sg_unlocked_ioctl</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, unsigned int <a class=\"id\" href=\"#cmd_in\">cmd_in</a>, unsigned long <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_kernel\">lock_kernel</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#sg_ioctl\">sg_ioctl</a>(<a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#cmd_in\">cmd_in</a>, <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_kernel\">unlock_kernel</a>();", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>", 
"static long <a class=\"id\" href=\"#sg_compat_ioctl\">sg_compat_ioctl</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, unsigned int <a class=\"id\" href=\"#cmd_in\">cmd_in</a>, unsigned long <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_device\">Sg_device</a> *<a class=\"id\" href=\"#sdp\">sdp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> *<a class=\"id\" href=\"#sfp\">sfp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a>;", 
"", 
"<span class=\"ts\"/>if ((!(<a class=\"id\" href=\"#sfp\">sfp</a> = (<a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> *) <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>)) || (!(<a class=\"id\" href=\"#sdp\">sdp</a> = <a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#parentdp\">parentdp</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sdev\">sdev</a> = <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#hostt\">hostt</a>-><a class=\"id\" href=\"#compat_ioctl\">compat_ioctl</a>) { ", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#hostt\">hostt</a>-><a class=\"id\" href=\"#compat_ioctl\">compat_ioctl</a>(<a class=\"id\" href=\"#sdev\">sdev</a>, <a class=\"id\" href=\"#cmd_in\">cmd_in</a>, (void <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#arg\">arg</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOIOCTLCMD\">ENOIOCTLCMD</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static unsigned int", 
"<a class=\"id\" href=\"#sg_poll\">sg_poll</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#poll_table\">poll_table</a> * <a class=\"id\" href=\"#wait\">wait</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#res\">res</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_device\">Sg_device</a> *<a class=\"id\" href=\"#sdp\">sdp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> *<a class=\"id\" href=\"#sfp\">sfp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_request\">Sg_request</a> *<a class=\"id\" href=\"#srp\">srp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#count\">count</a> = 0;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#iflags\">iflags</a>;", 
"", 
"<span class=\"ts\"/>if ((!(<a class=\"id\" href=\"#sfp\">sfp</a> = (<a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> *) <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>)) || (!(<a class=\"id\" href=\"#sdp\">sdp</a> = <a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#parentdp\">parentdp</a>))", 
"<span class=\"ts\"/>    || <a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#closed\">closed</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#POLLERR\">POLLERR</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#poll_wait\">poll_wait</a>(<a class=\"id\" href=\"#filp\">filp</a>, &amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#read_wait\">read_wait</a>, <a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock_irqsave\">read_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#rq_list_lock\">rq_list_lock</a>, <a class=\"id\" href=\"#iflags\">iflags</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#srp\">srp</a> = <a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#headrp\">headrp</a>; <a class=\"id\" href=\"#srp\">srp</a>; <a class=\"id\" href=\"#srp\">srp</a> = <a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#nextrp\">nextrp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* if any read waiting, flag it */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((0 == <a class=\"id\" href=\"#res\">res</a>) && (1 == <a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#done\">done</a>) && (!<a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#sg_io_owned\">sg_io_owned</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#POLLIN\">POLLIN</a> | <a class=\"id\" href=\"#POLLRDNORM\">POLLRDNORM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>++<a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_irqrestore\">read_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#rq_list_lock\">rq_list_lock</a>, <a class=\"id\" href=\"#iflags\">iflags</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#detached\">detached</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> |= <a class=\"id\" href=\"#POLLHUP\">POLLHUP</a>;", 
"<span class=\"ts\"/>else if (!<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#cmd_q\">cmd_q</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (0 == <a class=\"id\" href=\"#count\">count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> |= <a class=\"id\" href=\"#POLLOUT\">POLLOUT</a> | <a class=\"id\" href=\"#POLLWRNORM\">POLLWRNORM</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#count\">count</a> &lt; <a class=\"id\" href=\"#SG_MAX_QUEUE\">SG_MAX_QUEUE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> |= <a class=\"id\" href=\"#POLLOUT\">POLLOUT</a> | <a class=\"id\" href=\"#POLLWRNORM\">POLLWRNORM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_TIMEOUT\">SCSI_LOG_TIMEOUT</a>(3, <a class=\"id\" href=\"#printk\">printk</a>(\"sg_poll: %s, res=0x%x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#disk_name\">disk_name</a>, (int) <a class=\"id\" href=\"#res\">res</a>));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#sg_fasync\">sg_fasync</a>(int <a class=\"id\" href=\"#fd\">fd</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, int <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_device\">Sg_device</a> *<a class=\"id\" href=\"#sdp\">sdp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> *<a class=\"id\" href=\"#sfp\">sfp</a>;", 
"", 
"<span class=\"ts\"/>if ((!(<a class=\"id\" href=\"#sfp\">sfp</a> = (<a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> *) <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>)) || (!(<a class=\"id\" href=\"#sdp\">sdp</a> = <a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#parentdp\">parentdp</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_TIMEOUT\">SCSI_LOG_TIMEOUT</a>(3, <a class=\"id\" href=\"#printk\">printk</a>(\"sg_fasync: %s, mode=%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#disk_name\">disk_name</a>, <a class=\"id\" href=\"#mode\">mode</a>));", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#fasync_helper\">fasync_helper</a>(<a class=\"id\" href=\"#fd\">fd</a>, <a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#mode\">mode</a>, &amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#async_qp\">async_qp</a>);", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#sg_vma_fault\">sg_vma_fault</a>(struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>, struct <a class=\"id\" href=\"#vm_fault\">vm_fault</a> *<a class=\"id\" href=\"#vmf\">vmf</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> *<a class=\"id\" href=\"#sfp\">sfp</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#sa\">sa</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_scatter_hold\">Sg_scatter_hold</a> *<a class=\"id\" href=\"#rsv_schp\">rsv_schp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#length\">length</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#NULL\">NULL</a> == <a class=\"id\" href=\"#vma\">vma</a>) || (!(<a class=\"id\" href=\"#sfp\">sfp</a> = (<a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> *) <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_private_data\">vm_private_data</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#VM_FAULT_SIGBUS\">VM_FAULT_SIGBUS</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rsv_schp\">rsv_schp</a> = &amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#reserve\">reserve</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#vmf\">vmf</a>-><a class=\"id\" href=\"#pgoff\">pgoff</a> << <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#offset\">offset</a> >= <a class=\"id\" href=\"#rsv_schp\">rsv_schp</a>-><a class=\"id\" href=\"#bufflen\">bufflen</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#VM_FAULT_SIGBUS\">VM_FAULT_SIGBUS</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_TIMEOUT\">SCSI_LOG_TIMEOUT</a>(3, <a class=\"id\" href=\"#printk\">printk</a>(\"sg_vma_fault: offset=%lu, scatg=%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#rsv_schp\">rsv_schp</a>-><a class=\"id\" href=\"#k_use_sg\">k_use_sg</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sa\">sa</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> = 1 << (<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a> + <a class=\"id\" href=\"#rsv_schp\">rsv_schp</a>-><a class=\"id\" href=\"#page_order\">page_order</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#k\">k</a> = 0; <a class=\"id\" href=\"#k\">k</a> &lt; <a class=\"id\" href=\"#rsv_schp\">rsv_schp</a>-><a class=\"id\" href=\"#k_use_sg\">k_use_sg</a> && <a class=\"id\" href=\"#sa\">sa</a> &lt; <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_end\">vm_end</a>; <a class=\"id\" href=\"#k\">k</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_end\">vm_end</a> - <a class=\"id\" href=\"#sa\">sa</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = (<a class=\"id\" href=\"#len\">len</a> &lt; <a class=\"id\" href=\"#length\">length</a>) ? <a class=\"id\" href=\"#len\">len</a> : <a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#offset\">offset</a> &lt; <a class=\"id\" href=\"#len\">len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#nth_page\">nth_page</a>(<a class=\"id\" href=\"#rsv_schp\">rsv_schp</a>-><a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#k\">k</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#offset\">offset</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_page\">get_page</a>(<a class=\"id\" href=\"#page\">page</a>);<span class=\"ts\"/><span class=\"comment\">/* increment page count */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vmf\">vmf</a>-><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0; <span class=\"comment\">/* success */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sa\">sa</a> += <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> -= <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#VM_FAULT_SIGBUS\">VM_FAULT_SIGBUS</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#vm_operations_struct\">vm_operations_struct</a> <a class=\"id\" href=\"#sg_mmap_vm_ops\">sg_mmap_vm_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#fault\">fault</a> = <a class=\"id\" href=\"#sg_vma_fault\">sg_vma_fault</a>,", 
"};", 
"", 
"static int", 
"<a class=\"id\" href=\"#sg_mmap\">sg_mmap</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> *<a class=\"id\" href=\"#sfp\">sfp</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#req_sz\">req_sz</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#sa\">sa</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_scatter_hold\">Sg_scatter_hold</a> *<a class=\"id\" href=\"#rsv_schp\">rsv_schp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#length\">length</a>;", 
"", 
"<span class=\"ts\"/>if ((!<a class=\"id\" href=\"#filp\">filp</a>) || (!<a class=\"id\" href=\"#vma\">vma</a>) || (!(<a class=\"id\" href=\"#sfp\">sfp</a> = (<a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> *) <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#req_sz\">req_sz</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_end\">vm_end</a> - <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_TIMEOUT\">SCSI_LOG_TIMEOUT</a>(3, <a class=\"id\" href=\"#printk\">printk</a>(\"sg_mmap starting, vm_start=%p, len=%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (void *) <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a>, (int) <a class=\"id\" href=\"#req_sz\">req_sz</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_pgoff\">vm_pgoff</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;<span class=\"ts\"/><span class=\"comment\">/* want no offset */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rsv_schp\">rsv_schp</a> = &amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#reserve\">reserve</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#req_sz\">req_sz</a> &gt; <a class=\"id\" href=\"#rsv_schp\">rsv_schp</a>-><a class=\"id\" href=\"#bufflen\">bufflen</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;<span class=\"ts\"/><span class=\"comment\">/* cannot map more than reserved buffer */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sa\">sa</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> = 1 << (<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a> + <a class=\"id\" href=\"#rsv_schp\">rsv_schp</a>-><a class=\"id\" href=\"#page_order\">page_order</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#k\">k</a> = 0; <a class=\"id\" href=\"#k\">k</a> &lt; <a class=\"id\" href=\"#rsv_schp\">rsv_schp</a>-><a class=\"id\" href=\"#k_use_sg\">k_use_sg</a> && <a class=\"id\" href=\"#sa\">sa</a> &lt; <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_end\">vm_end</a>; <a class=\"id\" href=\"#k\">k</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_end\">vm_end</a> - <a class=\"id\" href=\"#sa\">sa</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = (<a class=\"id\" href=\"#len\">len</a> &lt; <a class=\"id\" href=\"#length\">length</a>) ? <a class=\"id\" href=\"#len\">len</a> : <a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sa\">sa</a> += <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#mmap_called\">mmap_called</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_flags\">vm_flags</a> |= <a class=\"id\" href=\"#VM_RESERVED\">VM_RESERVED</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_private_data\">vm_private_data</a> = <a class=\"id\" href=\"#sfp\">sfp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_ops\">vm_ops</a> = &amp;<a class=\"id\" href=\"#sg_mmap_vm_ops\">sg_mmap_vm_ops</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#sg_rq_end_io_usercontext\">sg_rq_end_io_usercontext</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sg_request\">sg_request</a> *<a class=\"id\" href=\"#srp\">srp</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#work\">work</a>, struct <a class=\"id\" href=\"#sg_request\">sg_request</a>, <a class=\"id\" href=\"#ew\">ew</a>.<a class=\"id\" href=\"#work\">work</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sg_fd\">sg_fd</a> *<a class=\"id\" href=\"#sfp\">sfp</a> = <a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#parentfp\">parentfp</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_finish_rem_req\">sg_finish_rem_req</a>(<a class=\"id\" href=\"#srp\">srp</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kref_put\">kref_put</a>(&amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#f_ref\">f_ref</a>, <a class=\"id\" href=\"#sg_remove_sfp\">sg_remove_sfp</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This function is a \"bottom half\" handler that is called by the mid</span>", 
"<span class=\"comment\"> * level when a command is completed (or has failed).</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#sg_rq_end_io\">sg_rq_end_io</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>, int <a class=\"id\" href=\"#uptodate\">uptodate</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sg_request\">sg_request</a> *<a class=\"id\" href=\"#srp\">srp</a> = <a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#end_io_data\">end_io_data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_device\">Sg_device</a> *<a class=\"id\" href=\"#sdp\">sdp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> *<a class=\"id\" href=\"#sfp\">sfp</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#iflags\">iflags</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#ms\">ms</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#sense\">sense</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a>, <a class=\"id\" href=\"#resid\">resid</a>, <a class=\"id\" href=\"#done\">done</a> = 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#done\">done</a> != 0))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sfp\">sfp</a> = <a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#parentfp\">parentfp</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#sfp\">sfp</a> == <a class=\"id\" href=\"#NULL\">NULL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sdp\">sdp</a> = <a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#parentdp\">parentdp</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#detached\">detached</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"sg_rq_end_io: device detached\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sense\">sense</a> = <a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#sense\">sense</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#errors\">errors</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#resid\">resid</a> = <a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#resid_len\">resid_len</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_TIMEOUT\">SCSI_LOG_TIMEOUT</a>(4, <a class=\"id\" href=\"#printk\">printk</a>(\"sg_cmd_done: %s, pack_id=%d, res=0x%x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#disk_name\">disk_name</a>, <a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#header\">header</a>.<a class=\"id\" href=\"#pack_id\">pack_id</a>, <a class=\"id\" href=\"#result\">result</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#header\">header</a>.<a class=\"id\" href=\"#resid\">resid</a> = <a class=\"id\" href=\"#resid\">resid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ms\">ms</a> = <a class=\"id\" href=\"#jiffies_to_msecs\">jiffies_to_msecs</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#header\">header</a>.<a class=\"id\" href=\"#duration\">duration</a> = (<a class=\"id\" href=\"#ms\">ms</a> &gt; <a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#header\">header</a>.<a class=\"id\" href=\"#duration\">duration</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#ms\">ms</a> - <a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#header\">header</a>.<a class=\"id\" href=\"#duration\">duration</a>) : 0;", 
"<span class=\"ts\"/>if (0 != <a class=\"id\" href=\"#result\">result</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_sense_hdr\">scsi_sense_hdr</a> <a class=\"id\" href=\"#sshdr\">sshdr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#header\">header</a>.<a class=\"id\" href=\"#status\">status</a> = 0xff &amp; <a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#header\">header</a>.<a class=\"id\" href=\"#masked_status\">masked_status</a> = <a class=\"id\" href=\"#status_byte\">status_byte</a>(<a class=\"id\" href=\"#result\">result</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#header\">header</a>.<a class=\"id\" href=\"#msg_status\">msg_status</a> = <a class=\"id\" href=\"#msg_byte\">msg_byte</a>(<a class=\"id\" href=\"#result\">result</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#header\">header</a>.<a class=\"id\" href=\"#host_status\">host_status</a> = <a class=\"id\" href=\"#host_byte\">host_byte</a>(<a class=\"id\" href=\"#result\">result</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#header\">header</a>.<a class=\"id\" href=\"#driver_status\">driver_status</a> = <a class=\"id\" href=\"#driver_byte\">driver_byte</a>(<a class=\"id\" href=\"#result\">result</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#sgdebug\">sgdebug</a> &gt; 0) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    ((<a class=\"id\" href=\"#CHECK_CONDITION\">CHECK_CONDITION</a> == <a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#header\">header</a>.<a class=\"id\" href=\"#masked_status\">masked_status</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>     (<a class=\"id\" href=\"#COMMAND_TERMINATED\">COMMAND_TERMINATED</a> == <a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#header\">header</a>.<a class=\"id\" href=\"#masked_status\">masked_status</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__scsi_print_sense\">__scsi_print_sense</a>(\"sg_cmd_done\", <a class=\"id\" href=\"#sense\">sense</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#SCSI_SENSE_BUFFERSIZE\">SCSI_SENSE_BUFFERSIZE</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Following if statement is a patch supplied by Eric Youngdale */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#driver_byte\">driver_byte</a>(<a class=\"id\" href=\"#result\">result</a>) != 0", 
"<span class=\"ts\"/><span class=\"ts\"/>    && <a class=\"id\" href=\"#scsi_normalize_sense\">scsi_normalize_sense</a>(<a class=\"id\" href=\"#sense\">sense</a>, <a class=\"id\" href=\"#SCSI_SENSE_BUFFERSIZE\">SCSI_SENSE_BUFFERSIZE</a>, &amp;<a class=\"id\" href=\"#sshdr\">sshdr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>    && !<a class=\"id\" href=\"#scsi_sense_is_deferred\">scsi_sense_is_deferred</a>(&amp;<a class=\"id\" href=\"#sshdr\">sshdr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>    && <a class=\"id\" href=\"#sshdr\">sshdr</a>.<a class=\"id\" href=\"#sense_key\">sense_key</a> == <a class=\"id\" href=\"#UNIT_ATTENTION\">UNIT_ATTENTION</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>    && <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#removable\">removable</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Detected possible disc change. Set the bit - this */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* may be used if there are filesystems using this device */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#changed\">changed</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* Rely on write phase to clean out srp status values, so no \"else\" */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_irqsave\">write_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#rq_list_lock\">rq_list_lock</a>, <a class=\"id\" href=\"#iflags\">iflags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#orphan\">orphan</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#keep_orphan\">keep_orphan</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#sg_io_owned\">sg_io_owned</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#done\">done</a> = 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#done\">done</a> = <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_irqrestore\">write_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#rq_list_lock\">rq_list_lock</a>, <a class=\"id\" href=\"#iflags\">iflags</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#done\">done</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Now wake up any sg_read() that is waiting for this</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * packet.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible\">wake_up_interruptible</a>(&amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#read_wait\">read_wait</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kill_fasync\">kill_fasync</a>(&amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#async_qp\">async_qp</a>, <a class=\"id\" href=\"#SIGPOLL\">SIGPOLL</a>, <a class=\"id\" href=\"#POLL_IN\">POLL_IN</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kref_put\">kref_put</a>(&amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#f_ref\">f_ref</a>, <a class=\"id\" href=\"#sg_remove_sfp\">sg_remove_sfp</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INIT_WORK\">INIT_WORK</a>(&amp;<a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#ew\">ew</a>.<a class=\"id\" href=\"#work\">work</a>, <a class=\"id\" href=\"#sg_rq_end_io_usercontext\">sg_rq_end_io_usercontext</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule_work\">schedule_work</a>(&amp;<a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#ew\">ew</a>.<a class=\"id\" href=\"#work\">work</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#sg_fops\">sg_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a> = <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a> = <a class=\"id\" href=\"#sg_read\">sg_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write\">write</a> = <a class=\"id\" href=\"#sg_write\">sg_write</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#poll\">poll</a> = <a class=\"id\" href=\"#sg_poll\">sg_poll</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#unlocked_ioctl\">unlocked_ioctl</a> = <a class=\"id\" href=\"#sg_unlocked_ioctl\">sg_unlocked_ioctl</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#compat_ioctl\">compat_ioctl</a> = <a class=\"id\" href=\"#sg_compat_ioctl\">sg_compat_ioctl</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a> = <a class=\"id\" href=\"#sg_open\">sg_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#mmap\">mmap</a> = <a class=\"id\" href=\"#sg_mmap\">sg_mmap</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a> = <a class=\"id\" href=\"#sg_release\">sg_release</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#fasync\">fasync</a> = <a class=\"id\" href=\"#sg_fasync\">sg_fasync</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#class\">class</a> *<a class=\"id\" href=\"#sg_sysfs_class\">sg_sysfs_class</a>;", 
"", 
"static int <a class=\"id\" href=\"#sg_sysfs_valid\">sg_sysfs_valid</a> = 0;", 
"", 
"static <a class=\"id\" href=\"#Sg_device\">Sg_device</a> *<a class=\"id\" href=\"#sg_alloc\">sg_alloc</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>, struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#scsidp\">scsidp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a> = <a class=\"id\" href=\"#scsidp\">scsidp</a>-><a class=\"id\" href=\"#request_queue\">request_queue</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_device\">Sg_device</a> *<a class=\"id\" href=\"#sdp\">sdp</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#iflags\">iflags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#k\">k</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sdp\">sdp</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(<a class=\"id\" href=\"#Sg_device\">Sg_device</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sdp\">sdp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"kmalloc Sg_device failure\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#idr_pre_get\">idr_pre_get</a>(&amp;<a class=\"id\" href=\"#sg_index_idr\">sg_index_idr</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"idr expansion Sg_device failure\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_irqsave\">write_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#sg_index_lock\">sg_index_lock</a>, <a class=\"id\" href=\"#iflags\">iflags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#idr_get_new\">idr_get_new</a>(&amp;<a class=\"id\" href=\"#sg_index_idr\">sg_index_idr</a>, <a class=\"id\" href=\"#sdp\">sdp</a>, &amp;<a class=\"id\" href=\"#k\">k</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_irqrestore\">write_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#sg_index_lock\">sg_index_lock</a>, <a class=\"id\" href=\"#iflags\">iflags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"idr allocation Sg_device failure: %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#error\">error</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#k\">k</a> >= <a class=\"id\" href=\"#SG_MAX_DEVS\">SG_MAX_DEVS</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#overflow\">overflow</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_TIMEOUT\">SCSI_LOG_TIMEOUT</a>(3, <a class=\"id\" href=\"#printk\">printk</a>(\"sg_alloc: dev=%d \\n\", <a class=\"id\" href=\"#k\">k</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#disk_name\">disk_name</a>, \"sg%d\", <a class=\"id\" href=\"#k\">k</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#first_minor\">first_minor</a> = <a class=\"id\" href=\"#k\">k</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#disk\">disk</a> = <a class=\"id\" href=\"#disk\">disk</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a> = <a class=\"id\" href=\"#scsidp\">scsidp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#sfds\">sfds</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_waitqueue_head\">init_waitqueue_head</a>(&amp;<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#o_excl_wait\">o_excl_wait</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#sg_tablesize\">sg_tablesize</a> = <a class=\"id\" href=\"#queue_max_segments\">queue_max_segments</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#k\">k</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kref_init\">kref_init</a>(&amp;<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#d_ref\">d_ref</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_irqrestore\">write_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#sg_index_lock\">sg_index_lock</a>, <a class=\"id\" href=\"#iflags\">iflags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 0;", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sdp\">sdp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#error\">error</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sdp\">sdp</a>;", 
"", 
" <a class=\"id\" href=\"#overflow\">overflow</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idr_remove\">idr_remove</a>(&amp;<a class=\"id\" href=\"#sg_index_idr\">sg_index_idr</a>, <a class=\"id\" href=\"#k\">k</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_irqrestore\">write_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#sg_index_lock\">sg_index_lock</a>, <a class=\"id\" href=\"#iflags\">iflags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sdev_printk\">sdev_printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>, <a class=\"id\" href=\"#scsidp\">scsidp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    \"Unable to attach sg device type=%d, minor \"", 
"<span class=\"ts\"/><span class=\"ts\"/>    \"number exceeds %d\\n\", <a class=\"id\" href=\"#scsidp\">scsidp</a>-><a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#SG_MAX_DEVS\">SG_MAX_DEVS</a> - 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#sg_add\">sg_add</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#cl_dev\">cl_dev</a>, struct <a class=\"id\" href=\"#class_interface\">class_interface</a> *<a class=\"id\" href=\"#cl_intf\">cl_intf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#scsidp\">scsidp</a> = <a class=\"id\" href=\"#to_scsi_device\">to_scsi_device</a>(<a class=\"id\" href=\"#cl_dev\">cl_dev</a>-><a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_device\">Sg_device</a> *<a class=\"id\" href=\"#sdp\">sdp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cdev\">cdev</a> * <a class=\"id\" href=\"#cdev\">cdev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#iflags\">iflags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disk\">disk</a> = <a class=\"id\" href=\"#alloc_disk\">alloc_disk</a>(1);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#disk\">disk</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"alloc_disk failed\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#major\">major</a> = <a class=\"id\" href=\"#SCSI_GENERIC_MAJOR\">SCSI_GENERIC_MAJOR</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdev\">cdev</a> = <a class=\"id\" href=\"#cdev_alloc\">cdev_alloc</a>();", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cdev\">cdev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"cdev_alloc failed\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdev\">cdev</a>-><a class=\"id\" href=\"#owner\">owner</a> = <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdev\">cdev</a>-><a class=\"id\" href=\"#ops\">ops</a> = &amp;<a class=\"id\" href=\"#sg_fops\">sg_fops</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sdp\">sdp</a> = <a class=\"id\" href=\"#sg_alloc\">sg_alloc</a>(<a class=\"id\" href=\"#disk\">disk</a>, <a class=\"id\" href=\"#scsidp\">scsidp</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#sdp\">sdp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"sg_alloc failed\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#sdp\">sdp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#cdev_add\">cdev_add</a>(<a class=\"id\" href=\"#cdev\">cdev</a>, <a class=\"id\" href=\"#MKDEV\">MKDEV</a>(<a class=\"id\" href=\"#SCSI_GENERIC_MAJOR\">SCSI_GENERIC_MAJOR</a>, <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#index\">index</a>), 1);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cdev_add_err\">cdev_add_err</a>;", 
"", 
];
xr_frag_insert('l/54/8625c02b6837d0d90a7a37f0086808b37a460e.xr', __xr_tmp);
