var __xr_tmp = [
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<a class=\"id\" href=\"#out_release\">out_release</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out_sock_release\">out_sock_release</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#sock_create\">sock_create</a>(int <a class=\"id\" href=\"#family\">family</a>, int <a class=\"id\" href=\"#type\">type</a>, int <a class=\"id\" href=\"#protocol\">protocol</a>, struct <a class=\"id\" href=\"#socket\">socket</a> **<a class=\"id\" href=\"#res\">res</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__sock_create\">__sock_create</a>(<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#nsproxy\">nsproxy</a>-><a class=\"id\" href=\"#net_ns\">net_ns</a>, <a class=\"id\" href=\"#family\">family</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#protocol\">protocol</a>, <a class=\"id\" href=\"#res\">res</a>, 0);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#sock_create\">sock_create</a>);", 
"", 
"int <a class=\"id\" href=\"#sock_create_kern\">sock_create_kern</a>(int <a class=\"id\" href=\"#family\">family</a>, int <a class=\"id\" href=\"#type\">type</a>, int <a class=\"id\" href=\"#protocol\">protocol</a>, struct <a class=\"id\" href=\"#socket\">socket</a> **<a class=\"id\" href=\"#res\">res</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__sock_create\">__sock_create</a>(&amp;<a class=\"id\" href=\"#init_net\">init_net</a>, <a class=\"id\" href=\"#family\">family</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#protocol\">protocol</a>, <a class=\"id\" href=\"#res\">res</a>, 1);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#sock_create_kern\">sock_create_kern</a>);", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE3\">SYSCALL_DEFINE3</a>(<a class=\"id\" href=\"#socket\">socket</a>, int, <a class=\"id\" href=\"#family\">family</a>, int, <a class=\"id\" href=\"#type\">type</a>, int, <a class=\"id\" href=\"#protocol\">protocol</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check the SOCK_* constants for consistency.  */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(<a class=\"id\" href=\"#SOCK_CLOEXEC\">SOCK_CLOEXEC</a> != <a class=\"id\" href=\"#O_CLOEXEC\">O_CLOEXEC</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>((<a class=\"id\" href=\"#SOCK_MAX\">SOCK_MAX</a> | <a class=\"id\" href=\"#SOCK_TYPE_MASK\">SOCK_TYPE_MASK</a>) != <a class=\"id\" href=\"#SOCK_TYPE_MASK\">SOCK_TYPE_MASK</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(<a class=\"id\" href=\"#SOCK_CLOEXEC\">SOCK_CLOEXEC</a> &amp; <a class=\"id\" href=\"#SOCK_TYPE_MASK\">SOCK_TYPE_MASK</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(<a class=\"id\" href=\"#SOCK_NONBLOCK\">SOCK_NONBLOCK</a> &amp; <a class=\"id\" href=\"#SOCK_TYPE_MASK\">SOCK_TYPE_MASK</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#type\">type</a> &amp; ~<a class=\"id\" href=\"#SOCK_TYPE_MASK\">SOCK_TYPE_MASK</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; ~(<a class=\"id\" href=\"#SOCK_CLOEXEC\">SOCK_CLOEXEC</a> | <a class=\"id\" href=\"#SOCK_NONBLOCK\">SOCK_NONBLOCK</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> &= <a class=\"id\" href=\"#SOCK_TYPE_MASK\">SOCK_TYPE_MASK</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#SOCK_NONBLOCK\">SOCK_NONBLOCK</a> != <a class=\"id\" href=\"#O_NONBLOCK\">O_NONBLOCK</a> && (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#SOCK_NONBLOCK\">SOCK_NONBLOCK</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> = (<a class=\"id\" href=\"#flags\">flags</a> &amp; ~<a class=\"id\" href=\"#SOCK_NONBLOCK\">SOCK_NONBLOCK</a>) | <a class=\"id\" href=\"#O_NONBLOCK\">O_NONBLOCK</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#sock_create\">sock_create</a>(<a class=\"id\" href=\"#family\">family</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#protocol\">protocol</a>, &amp;<a class=\"id\" href=\"#sock\">sock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#sock_map_fd\">sock_map_fd</a>(<a class=\"id\" href=\"#sock\">sock</a>, <a class=\"id\" href=\"#flags\">flags</a> &amp; (<a class=\"id\" href=\"#O_CLOEXEC\">O_CLOEXEC</a> | <a class=\"id\" href=\"#O_NONBLOCK\">O_NONBLOCK</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_release\">out_release</a>;", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/* It may be already another descriptor 8) Not kernel problem. */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<a class=\"id\" href=\"#out_release\">out_release</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_release\">sock_release</a>(<a class=\"id\" href=\"#sock\">sock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Create a pair of connected sockets.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE4\">SYSCALL_DEFINE4</a>(<a class=\"id\" href=\"#socketpair\">socketpair</a>, int, <a class=\"id\" href=\"#family\">family</a>, int, <a class=\"id\" href=\"#type\">type</a>, int, <a class=\"id\" href=\"#protocol\">protocol</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#usockvec\">usockvec</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock1\">sock1</a>, *<a class=\"id\" href=\"#sock2\">sock2</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fd1\">fd1</a>, <a class=\"id\" href=\"#fd2\">fd2</a>, <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#newfile1\">newfile1</a>, *<a class=\"id\" href=\"#newfile2\">newfile2</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#type\">type</a> &amp; ~<a class=\"id\" href=\"#SOCK_TYPE_MASK\">SOCK_TYPE_MASK</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; ~(<a class=\"id\" href=\"#SOCK_CLOEXEC\">SOCK_CLOEXEC</a> | <a class=\"id\" href=\"#SOCK_NONBLOCK\">SOCK_NONBLOCK</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> &= <a class=\"id\" href=\"#SOCK_TYPE_MASK\">SOCK_TYPE_MASK</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#SOCK_NONBLOCK\">SOCK_NONBLOCK</a> != <a class=\"id\" href=\"#O_NONBLOCK\">O_NONBLOCK</a> && (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#SOCK_NONBLOCK\">SOCK_NONBLOCK</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> = (<a class=\"id\" href=\"#flags\">flags</a> &amp; ~<a class=\"id\" href=\"#SOCK_NONBLOCK\">SOCK_NONBLOCK</a>) | <a class=\"id\" href=\"#O_NONBLOCK\">O_NONBLOCK</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Obtain the first socket and check if the underlying protocol</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * supports the socketpair call.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sock_create\">sock_create</a>(<a class=\"id\" href=\"#family\">family</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#protocol\">protocol</a>, &amp;<a class=\"id\" href=\"#sock1\">sock1</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sock_create\">sock_create</a>(<a class=\"id\" href=\"#family\">family</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#protocol\">protocol</a>, &amp;<a class=\"id\" href=\"#sock2\">sock2</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_release_1\">out_release_1</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sock1\">sock1</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#socketpair\">socketpair</a>(<a class=\"id\" href=\"#sock1\">sock1</a>, <a class=\"id\" href=\"#sock2\">sock2</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_release_both\">out_release_both</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fd1\">fd1</a> = <a class=\"id\" href=\"#sock_alloc_file\">sock_alloc_file</a>(<a class=\"id\" href=\"#sock1\">sock1</a>, &amp;<a class=\"id\" href=\"#newfile1\">newfile1</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#fd1\">fd1</a> &lt; 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#fd1\">fd1</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_release_both\">out_release_both</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fd2\">fd2</a> = <a class=\"id\" href=\"#sock_alloc_file\">sock_alloc_file</a>(<a class=\"id\" href=\"#sock2\">sock2</a>, &amp;<a class=\"id\" href=\"#newfile2\">newfile2</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#fd2\">fd2</a> &lt; 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#fd2\">fd2</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fput\">fput</a>(<a class=\"id\" href=\"#newfile1\">newfile1</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_unused_fd\">put_unused_fd</a>(<a class=\"id\" href=\"#fd1\">fd1</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_release\">sock_release</a>(<a class=\"id\" href=\"#sock2\">sock2</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_fd_pair\">audit_fd_pair</a>(<a class=\"id\" href=\"#fd1\">fd1</a>, <a class=\"id\" href=\"#fd2\">fd2</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fd_install\">fd_install</a>(<a class=\"id\" href=\"#fd1\">fd1</a>, <a class=\"id\" href=\"#newfile1\">newfile1</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fd_install\">fd_install</a>(<a class=\"id\" href=\"#fd2\">fd2</a>, <a class=\"id\" href=\"#newfile2\">newfile2</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* fd1 and fd2 may be already another descriptors.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Not kernel problem.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#fd1\">fd1</a>, &amp;<a class=\"id\" href=\"#usockvec\">usockvec</a>[0]);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#fd2\">fd2</a>, &amp;<a class=\"id\" href=\"#usockvec\">usockvec</a>[1]);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sys_close\">sys_close</a>(<a class=\"id\" href=\"#fd2\">fd2</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sys_close\">sys_close</a>(<a class=\"id\" href=\"#fd1\">fd1</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<a class=\"id\" href=\"#out_release_both\">out_release_both</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_release\">sock_release</a>(<a class=\"id\" href=\"#sock2\">sock2</a>);", 
"<a class=\"id\" href=\"#out_release_1\">out_release_1</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_release\">sock_release</a>(<a class=\"id\" href=\"#sock1\">sock1</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Bind a name to a socket. Nothing much to do here since it's</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the protocol's responsibility to handle the local address.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>We move the socket address to kernel space before we call</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the protocol layer (having also checked the address is ok).</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE3\">SYSCALL_DEFINE3</a>(<a class=\"id\" href=\"#bind\">bind</a>, int, <a class=\"id\" href=\"#fd\">fd</a>, struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#umyaddr\">umyaddr</a>, int, <a class=\"id\" href=\"#addrlen\">addrlen</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_storage\">sockaddr_storage</a> <a class=\"id\" href=\"#address\">address</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock\">sock</a> = <a class=\"id\" href=\"#sockfd_lookup_light\">sockfd_lookup_light</a>(<a class=\"id\" href=\"#fd\">fd</a>, &amp;<a class=\"id\" href=\"#err\">err</a>, &amp;<a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sock\">sock</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#move_addr_to_kernel\">move_addr_to_kernel</a>(<a class=\"id\" href=\"#umyaddr\">umyaddr</a>, <a class=\"id\" href=\"#addrlen\">addrlen</a>, (struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *)&amp;<a class=\"id\" href=\"#address\">address</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> >= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#security_socket_bind\">security_socket_bind</a>(<a class=\"id\" href=\"#sock\">sock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *)&amp;<a class=\"id\" href=\"#address\">address</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#addrlen\">addrlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#bind\">bind</a>(<a class=\"id\" href=\"#sock\">sock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      (struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      &amp;<a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#addrlen\">addrlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fput_light\">fput_light</a>(<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Perform a listen. Basically, we allow the protocol to do anything</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>necessary for a listen, and if that works, we mark the socket as</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ready for listening.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE2\">SYSCALL_DEFINE2</a>(<a class=\"id\" href=\"#listen\">listen</a>, int, <a class=\"id\" href=\"#fd\">fd</a>, int, <a class=\"id\" href=\"#backlog\">backlog</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#somaxconn\">somaxconn</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock\">sock</a> = <a class=\"id\" href=\"#sockfd_lookup_light\">sockfd_lookup_light</a>(<a class=\"id\" href=\"#fd\">fd</a>, &amp;<a class=\"id\" href=\"#err\">err</a>, &amp;<a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sock\">sock</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#somaxconn\">somaxconn</a> = <a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#core\">core</a>.<a class=\"id\" href=\"#sysctl_somaxconn\">sysctl_somaxconn</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((unsigned)<a class=\"id\" href=\"#backlog\">backlog</a> &gt; <a class=\"id\" href=\"#somaxconn\">somaxconn</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#backlog\">backlog</a> = <a class=\"id\" href=\"#somaxconn\">somaxconn</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#security_socket_listen\">security_socket_listen</a>(<a class=\"id\" href=\"#sock\">sock</a>, <a class=\"id\" href=\"#backlog\">backlog</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#listen\">listen</a>(<a class=\"id\" href=\"#sock\">sock</a>, <a class=\"id\" href=\"#backlog\">backlog</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fput_light\">fput_light</a>(<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>For accept, we attempt to create a new socket, set up the link</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>with the client, wake up the client, then return the new</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>connected fd. We collect the address of the connector in kernel</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>space and move it to user at the very end. This is unclean because</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>we open the socket then return an error.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>1003.1g adds the ability to recvmsg() to query connection pending</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>status to recvmsg. We need to add that support in a way thats</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>clean when we restucture accept also.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE4\">SYSCALL_DEFINE4</a>(<a class=\"id\" href=\"#accept4\">accept4</a>, int, <a class=\"id\" href=\"#fd\">fd</a>, struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#upeer_sockaddr\">upeer_sockaddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#upeer_addrlen\">upeer_addrlen</a>, int, <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, *<a class=\"id\" href=\"#newsock\">newsock</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#newfile\">newfile</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#newfd\">newfd</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_storage\">sockaddr_storage</a> <a class=\"id\" href=\"#address\">address</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; ~(<a class=\"id\" href=\"#SOCK_CLOEXEC\">SOCK_CLOEXEC</a> | <a class=\"id\" href=\"#SOCK_NONBLOCK\">SOCK_NONBLOCK</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#SOCK_NONBLOCK\">SOCK_NONBLOCK</a> != <a class=\"id\" href=\"#O_NONBLOCK\">O_NONBLOCK</a> && (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#SOCK_NONBLOCK\">SOCK_NONBLOCK</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> = (<a class=\"id\" href=\"#flags\">flags</a> &amp; ~<a class=\"id\" href=\"#SOCK_NONBLOCK\">SOCK_NONBLOCK</a>) | <a class=\"id\" href=\"#O_NONBLOCK\">O_NONBLOCK</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock\">sock</a> = <a class=\"id\" href=\"#sockfd_lookup_light\">sockfd_lookup_light</a>(<a class=\"id\" href=\"#fd\">fd</a>, &amp;<a class=\"id\" href=\"#err\">err</a>, &amp;<a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sock\">sock</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENFILE\">ENFILE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newsock\">newsock</a> = <a class=\"id\" href=\"#sock_alloc\">sock_alloc</a>();", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#newsock\">newsock</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_put\">out_put</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newsock\">newsock</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newsock\">newsock</a>-><a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#ops\">ops</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We don't need try_module_get here, as the listening socket (sock)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * has the protocol module (sock-&gt;ops-&gt;owner) held.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__module_get\">__module_get</a>(<a class=\"id\" href=\"#newsock\">newsock</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#owner\">owner</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newfd\">newfd</a> = <a class=\"id\" href=\"#sock_alloc_file\">sock_alloc_file</a>(<a class=\"id\" href=\"#newsock\">newsock</a>, &amp;<a class=\"id\" href=\"#newfile\">newfile</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#newfd\">newfd</a> &lt; 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#newfd\">newfd</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_release\">sock_release</a>(<a class=\"id\" href=\"#newsock\">newsock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_put\">out_put</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#security_socket_accept\">security_socket_accept</a>(<a class=\"id\" href=\"#sock\">sock</a>, <a class=\"id\" href=\"#newsock\">newsock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_fd\">out_fd</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#accept\">accept</a>(<a class=\"id\" href=\"#sock\">sock</a>, <a class=\"id\" href=\"#newsock\">newsock</a>, <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_flags\">f_flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_fd\">out_fd</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#upeer_sockaddr\">upeer_sockaddr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#newsock\">newsock</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#getname\">getname</a>(<a class=\"id\" href=\"#newsock\">newsock</a>, (struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *)&amp;<a class=\"id\" href=\"#address\">address</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#len\">len</a>, 2) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ECONNABORTED\">ECONNABORTED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_fd\">out_fd</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#move_addr_to_user\">move_addr_to_user</a>((struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *)&amp;<a class=\"id\" href=\"#address\">address</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#upeer_sockaddr\">upeer_sockaddr</a>, <a class=\"id\" href=\"#upeer_addrlen\">upeer_addrlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_fd\">out_fd</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* File flags are not inherited via accept() unlike another OSes. */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fd_install\">fd_install</a>(<a class=\"id\" href=\"#newfd\">newfd</a>, <a class=\"id\" href=\"#newfile\">newfile</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#newfd\">newfd</a>;", 
"", 
"<a class=\"id\" href=\"#out_put\">out_put</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fput_light\">fput_light</a>(<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<a class=\"id\" href=\"#out_fd\">out_fd</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fput\">fput</a>(<a class=\"id\" href=\"#newfile\">newfile</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_unused_fd\">put_unused_fd</a>(<a class=\"id\" href=\"#newfd\">newfd</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out_put\">out_put</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE3\">SYSCALL_DEFINE3</a>(<a class=\"id\" href=\"#accept\">accept</a>, int, <a class=\"id\" href=\"#fd\">fd</a>, struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#upeer_sockaddr\">upeer_sockaddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#upeer_addrlen\">upeer_addrlen</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sys_accept4\">sys_accept4</a>(<a class=\"id\" href=\"#fd\">fd</a>, <a class=\"id\" href=\"#upeer_sockaddr\">upeer_sockaddr</a>, <a class=\"id\" href=\"#upeer_addrlen\">upeer_addrlen</a>, 0);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Attempt to connect to a socket with the server address.  The address</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>is in user space so we verify it is OK and move it to kernel space.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>For 1003.1g we need to add clean support for a bind to AF_UNSPEC to</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>break bindings</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>NOTE: 1003.1g draft 6.3 is broken with respect to AX.25/NetROM and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>other SEQPACKET protocols that take time to connect() as it doesn't</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>include the -EINPROGRESS status for such sockets.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE3\">SYSCALL_DEFINE3</a>(<a class=\"id\" href=\"#connect\">connect</a>, int, <a class=\"id\" href=\"#fd\">fd</a>, struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#uservaddr\">uservaddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>int, <a class=\"id\" href=\"#addrlen\">addrlen</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_storage\">sockaddr_storage</a> <a class=\"id\" href=\"#address\">address</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock\">sock</a> = <a class=\"id\" href=\"#sockfd_lookup_light\">sockfd_lookup_light</a>(<a class=\"id\" href=\"#fd\">fd</a>, &amp;<a class=\"id\" href=\"#err\">err</a>, &amp;<a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sock\">sock</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#move_addr_to_kernel\">move_addr_to_kernel</a>(<a class=\"id\" href=\"#uservaddr\">uservaddr</a>, <a class=\"id\" href=\"#addrlen\">addrlen</a>, (struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *)&amp;<a class=\"id\" href=\"#address\">address</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_put\">out_put</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> =", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#security_socket_connect\">security_socket_connect</a>(<a class=\"id\" href=\"#sock\">sock</a>, (struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *)&amp;<a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#addrlen\">addrlen</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_put\">out_put</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#connect\">connect</a>(<a class=\"id\" href=\"#sock\">sock</a>, (struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *)&amp;<a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#addrlen\">addrlen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_flags\">f_flags</a>);", 
"<a class=\"id\" href=\"#out_put\">out_put</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fput_light\">fput_light</a>(<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Get the local address ('name') of a socket object. Move the obtained</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>name to user space.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE3\">SYSCALL_DEFINE3</a>(<a class=\"id\" href=\"#getsockname\">getsockname</a>, int, <a class=\"id\" href=\"#fd\">fd</a>, struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#usockaddr\">usockaddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#usockaddr_len\">usockaddr_len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_storage\">sockaddr_storage</a> <a class=\"id\" href=\"#address\">address</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#err\">err</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock\">sock</a> = <a class=\"id\" href=\"#sockfd_lookup_light\">sockfd_lookup_light</a>(<a class=\"id\" href=\"#fd\">fd</a>, &amp;<a class=\"id\" href=\"#err\">err</a>, &amp;<a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sock\">sock</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#security_socket_getsockname\">security_socket_getsockname</a>(<a class=\"id\" href=\"#sock\">sock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_put\">out_put</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#getname\">getname</a>(<a class=\"id\" href=\"#sock\">sock</a>, (struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *)&amp;<a class=\"id\" href=\"#address\">address</a>, &amp;<a class=\"id\" href=\"#len\">len</a>, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_put\">out_put</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#move_addr_to_user\">move_addr_to_user</a>((struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *)&amp;<a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#usockaddr\">usockaddr</a>, <a class=\"id\" href=\"#usockaddr_len\">usockaddr_len</a>);", 
"", 
"<a class=\"id\" href=\"#out_put\">out_put</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fput_light\">fput_light</a>(<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Get the remote address ('name') of a socket object. Move the obtained</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>name to user space.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE3\">SYSCALL_DEFINE3</a>(<a class=\"id\" href=\"#getpeername\">getpeername</a>, int, <a class=\"id\" href=\"#fd\">fd</a>, struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#usockaddr\">usockaddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#usockaddr_len\">usockaddr_len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_storage\">sockaddr_storage</a> <a class=\"id\" href=\"#address\">address</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#err\">err</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock\">sock</a> = <a class=\"id\" href=\"#sockfd_lookup_light\">sockfd_lookup_light</a>(<a class=\"id\" href=\"#fd\">fd</a>, &amp;<a class=\"id\" href=\"#err\">err</a>, &amp;<a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sock\">sock</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#security_socket_getpeername\">security_socket_getpeername</a>(<a class=\"id\" href=\"#sock\">sock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fput_light\">fput_light</a>(<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#getname\">getname</a>(<a class=\"id\" href=\"#sock\">sock</a>, (struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *)&amp;<a class=\"id\" href=\"#address\">address</a>, &amp;<a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       1);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#move_addr_to_user\">move_addr_to_user</a>((struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *)&amp;<a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#usockaddr\">usockaddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#usockaddr_len\">usockaddr_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fput_light\">fput_light</a>(<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Send a datagram to a given address. We move the address into kernel</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>space and check the user space data area is readable before invoking</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the protocol.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE6\">SYSCALL_DEFINE6</a>(<a class=\"id\" href=\"#sendto\">sendto</a>, int, <a class=\"id\" href=\"#fd\">fd</a>, void <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#buff\">buff</a>, <a class=\"id\" href=\"#size_t\">size_t</a>, <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned, <a class=\"id\" href=\"#flags\">flags</a>, struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>int, <a class=\"id\" href=\"#addr_len\">addr_len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_storage\">sockaddr_storage</a> <a class=\"id\" href=\"#address\">address</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#msghdr\">msghdr</a> <a class=\"id\" href=\"#msg\">msg</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iovec\">iovec</a> <a class=\"id\" href=\"#iov\">iov</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fput_needed\">fput_needed</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock\">sock</a> = <a class=\"id\" href=\"#sockfd_lookup_light\">sockfd_lookup_light</a>(<a class=\"id\" href=\"#fd\">fd</a>, &amp;<a class=\"id\" href=\"#err\">err</a>, &amp;<a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sock\">sock</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iov\">iov</a>.<a class=\"id\" href=\"#iov_base\">iov_base</a> = <a class=\"id\" href=\"#buff\">buff</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iov\">iov</a>.<a class=\"id\" href=\"#iov_len\">iov_len</a> = <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>.<a class=\"id\" href=\"#msg_name\">msg_name</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>.<a class=\"id\" href=\"#msg_iov\">msg_iov</a> = &amp;<a class=\"id\" href=\"#iov\">iov</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>.<a class=\"id\" href=\"#msg_iovlen\">msg_iovlen</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>.<a class=\"id\" href=\"#msg_control\">msg_control</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>.<a class=\"id\" href=\"#msg_controllen\">msg_controllen</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>.<a class=\"id\" href=\"#msg_namelen\">msg_namelen</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr\">addr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#move_addr_to_kernel\">move_addr_to_kernel</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#addr_len\">addr_len</a>, (struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *)&amp;<a class=\"id\" href=\"#address\">address</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_put\">out_put</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>.<a class=\"id\" href=\"#msg_name\">msg_name</a> = (struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *)&amp;<a class=\"id\" href=\"#address\">address</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>.<a class=\"id\" href=\"#msg_namelen\">msg_namelen</a> = <a class=\"id\" href=\"#addr_len\">addr_len</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_flags\">f_flags</a> &amp; <a class=\"id\" href=\"#O_NONBLOCK\">O_NONBLOCK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#MSG_DONTWAIT\">MSG_DONTWAIT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>.<a class=\"id\" href=\"#msg_flags\">msg_flags</a> = <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sock_sendmsg\">sock_sendmsg</a>(<a class=\"id\" href=\"#sock\">sock</a>, &amp;<a class=\"id\" href=\"#msg\">msg</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<a class=\"id\" href=\"#out_put\">out_put</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fput_light\">fput_light</a>(<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Send a datagram down a socket.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE4\">SYSCALL_DEFINE4</a>(<a class=\"id\" href=\"#send\">send</a>, int, <a class=\"id\" href=\"#fd\">fd</a>, void <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#buff\">buff</a>, <a class=\"id\" href=\"#size_t\">size_t</a>, <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned, <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sys_sendto\">sys_sendto</a>(<a class=\"id\" href=\"#fd\">fd</a>, <a class=\"id\" href=\"#buff\">buff</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Receive a frame from the socket and optionally record the address of the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>sender. We verify the buffers are writable and if needed move the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>sender address from kernel to user space.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE6\">SYSCALL_DEFINE6</a>(<a class=\"id\" href=\"#recvfrom\">recvfrom</a>, int, <a class=\"id\" href=\"#fd\">fd</a>, void <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#size_t\">size_t</a>, <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned, <a class=\"id\" href=\"#flags\">flags</a>, struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#addr_len\">addr_len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iovec\">iovec</a> <a class=\"id\" href=\"#iov\">iov</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#msghdr\">msghdr</a> <a class=\"id\" href=\"#msg\">msg</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_storage\">sockaddr_storage</a> <a class=\"id\" href=\"#address\">address</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>, <a class=\"id\" href=\"#err2\">err2</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fput_needed\">fput_needed</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock\">sock</a> = <a class=\"id\" href=\"#sockfd_lookup_light\">sockfd_lookup_light</a>(<a class=\"id\" href=\"#fd\">fd</a>, &amp;<a class=\"id\" href=\"#err\">err</a>, &amp;<a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sock\">sock</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>.<a class=\"id\" href=\"#msg_control\">msg_control</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>.<a class=\"id\" href=\"#msg_controllen\">msg_controllen</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>.<a class=\"id\" href=\"#msg_iovlen\">msg_iovlen</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>.<a class=\"id\" href=\"#msg_iov\">msg_iov</a> = &amp;<a class=\"id\" href=\"#iov\">iov</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iov\">iov</a>.<a class=\"id\" href=\"#iov_len\">iov_len</a> = <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iov\">iov</a>.<a class=\"id\" href=\"#iov_base\">iov_base</a> = <a class=\"id\" href=\"#ubuf\">ubuf</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>.<a class=\"id\" href=\"#msg_name\">msg_name</a> = (struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *)&amp;<a class=\"id\" href=\"#address\">address</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>.<a class=\"id\" href=\"#msg_namelen\">msg_namelen</a> = sizeof(<a class=\"id\" href=\"#address\">address</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_flags\">f_flags</a> &amp; <a class=\"id\" href=\"#O_NONBLOCK\">O_NONBLOCK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#MSG_DONTWAIT\">MSG_DONTWAIT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sock_recvmsg\">sock_recvmsg</a>(<a class=\"id\" href=\"#sock\">sock</a>, &amp;<a class=\"id\" href=\"#msg\">msg</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> >= 0 && <a class=\"id\" href=\"#addr\">addr</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err2\">err2</a> = <a class=\"id\" href=\"#move_addr_to_user\">move_addr_to_user</a>((struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *)&amp;<a class=\"id\" href=\"#address\">address</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#msg\">msg</a>.<a class=\"id\" href=\"#msg_namelen\">msg_namelen</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#addr_len\">addr_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err2\">err2</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#err2\">err2</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fput_light\">fput_light</a>(<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Receive a datagram from a socket.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<a class=\"id\" href=\"#asmlinkage\">asmlinkage</a> long <a class=\"id\" href=\"#sys_recv\">sys_recv</a>(int <a class=\"id\" href=\"#fd\">fd</a>, void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sys_recvfrom\">sys_recvfrom</a>(<a class=\"id\" href=\"#fd\">fd</a>, <a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Set a socket option. Because we don't know the option lengths we have</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>to pass the user mode parameter for the protocols to sort out.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE5\">SYSCALL_DEFINE5</a>(<a class=\"id\" href=\"#setsockopt\">setsockopt</a>, int, <a class=\"id\" href=\"#fd\">fd</a>, int, <a class=\"id\" href=\"#level\">level</a>, int, <a class=\"id\" href=\"#optname\">optname</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#optval\">optval</a>, int, <a class=\"id\" href=\"#optlen\">optlen</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#optlen\">optlen</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock\">sock</a> = <a class=\"id\" href=\"#sockfd_lookup_light\">sockfd_lookup_light</a>(<a class=\"id\" href=\"#fd\">fd</a>, &amp;<a class=\"id\" href=\"#err\">err</a>, &amp;<a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sock\">sock</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#security_socket_setsockopt\">security_socket_setsockopt</a>(<a class=\"id\" href=\"#sock\">sock</a>, <a class=\"id\" href=\"#level\">level</a>, <a class=\"id\" href=\"#optname\">optname</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_put\">out_put</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#level\">level</a> == <a class=\"id\" href=\"#SOL_SOCKET\">SOL_SOCKET</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sock_setsockopt\">sock_setsockopt</a>(<a class=\"id\" href=\"#sock\">sock</a>, <a class=\"id\" href=\"#level\">level</a>, <a class=\"id\" href=\"#optname\">optname</a>, <a class=\"id\" href=\"#optval\">optval</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#optlen\">optlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#setsockopt\">setsockopt</a>(<a class=\"id\" href=\"#sock\">sock</a>, <a class=\"id\" href=\"#level\">level</a>, <a class=\"id\" href=\"#optname\">optname</a>, <a class=\"id\" href=\"#optval\">optval</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#optlen\">optlen</a>);", 
"<a class=\"id\" href=\"#out_put\">out_put</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fput_light\">fput_light</a>(<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Get a socket option. Because we don't know the option lengths we have</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>to pass a user mode parameter for the protocols to sort out.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE5\">SYSCALL_DEFINE5</a>(<a class=\"id\" href=\"#getsockopt\">getsockopt</a>, int, <a class=\"id\" href=\"#fd\">fd</a>, int, <a class=\"id\" href=\"#level\">level</a>, int, <a class=\"id\" href=\"#optname\">optname</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#optval\">optval</a>, int <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#optlen\">optlen</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock\">sock</a> = <a class=\"id\" href=\"#sockfd_lookup_light\">sockfd_lookup_light</a>(<a class=\"id\" href=\"#fd\">fd</a>, &amp;<a class=\"id\" href=\"#err\">err</a>, &amp;<a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sock\">sock</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#security_socket_getsockopt\">security_socket_getsockopt</a>(<a class=\"id\" href=\"#sock\">sock</a>, <a class=\"id\" href=\"#level\">level</a>, <a class=\"id\" href=\"#optname\">optname</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_put\">out_put</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#level\">level</a> == <a class=\"id\" href=\"#SOL_SOCKET\">SOL_SOCKET</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sock_getsockopt\">sock_getsockopt</a>(<a class=\"id\" href=\"#sock\">sock</a>, <a class=\"id\" href=\"#level\">level</a>, <a class=\"id\" href=\"#optname\">optname</a>, <a class=\"id\" href=\"#optval\">optval</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#optlen\">optlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#getsockopt\">getsockopt</a>(<a class=\"id\" href=\"#sock\">sock</a>, <a class=\"id\" href=\"#level\">level</a>, <a class=\"id\" href=\"#optname\">optname</a>, <a class=\"id\" href=\"#optval\">optval</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#optlen\">optlen</a>);", 
"<a class=\"id\" href=\"#out_put\">out_put</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fput_light\">fput_light</a>(<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Shutdown a socket.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE2\">SYSCALL_DEFINE2</a>(<a class=\"id\" href=\"#shutdown\">shutdown</a>, int, <a class=\"id\" href=\"#fd\">fd</a>, int, <a class=\"id\" href=\"#how\">how</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock\">sock</a> = <a class=\"id\" href=\"#sockfd_lookup_light\">sockfd_lookup_light</a>(<a class=\"id\" href=\"#fd\">fd</a>, &amp;<a class=\"id\" href=\"#err\">err</a>, &amp;<a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sock\">sock</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#security_socket_shutdown\">security_socket_shutdown</a>(<a class=\"id\" href=\"#sock\">sock</a>, <a class=\"id\" href=\"#how\">how</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#shutdown\">shutdown</a>(<a class=\"id\" href=\"#sock\">sock</a>, <a class=\"id\" href=\"#how\">how</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fput_light\">fput_light</a>(<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/* A couple of helpful macros for getting the address of the 32/64 bit</span>", 
"<span class=\"comment\"> * fields which are the same type (int / unsigned) on our platforms.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#COMPAT_MSG\">COMPAT_MSG</a>(<a class=\"id\" href=\"#msg\">msg</a>, <a class=\"id\" href=\"#member\">member</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#MSG_CMSG_COMPAT\">MSG_CMSG_COMPAT</a> &amp; <a class=\"id\" href=\"#flags\">flags</a>) ? &amp;<a class=\"id\" href=\"#msg\">msg</a>##<a class=\"id\" href=\"#_compat\">_compat</a>-><a class=\"id\" href=\"#member\">member</a> : &amp;<a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#member\">member</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#COMPAT_NAMELEN\">COMPAT_NAMELEN</a>(<a class=\"id\" href=\"#msg\">msg</a>)<span class=\"ts\"/><a class=\"id\" href=\"#COMPAT_MSG\">COMPAT_MSG</a>(<a class=\"id\" href=\"#msg\">msg</a>, <a class=\"id\" href=\"#msg_namelen\">msg_namelen</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#COMPAT_FLAGS\">COMPAT_FLAGS</a>(<a class=\"id\" href=\"#msg\">msg</a>)<span class=\"ts\"/><a class=\"id\" href=\"#COMPAT_MSG\">COMPAT_MSG</a>(<a class=\"id\" href=\"#msg\">msg</a>, <a class=\"id\" href=\"#msg_flags\">msg_flags</a>)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>BSD sendmsg interface</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE3\">SYSCALL_DEFINE3</a>(<a class=\"id\" href=\"#sendmsg\">sendmsg</a>, int, <a class=\"id\" href=\"#fd\">fd</a>, struct <a class=\"id\" href=\"#msghdr\">msghdr</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#msg\">msg</a>, unsigned, <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#compat_msghdr\">compat_msghdr</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#msg_compat\">msg_compat</a> =", 
"<span class=\"ts\"/>    (struct <a class=\"id\" href=\"#compat_msghdr\">compat_msghdr</a> <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#msg\">msg</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_storage\">sockaddr_storage</a> <a class=\"id\" href=\"#address\">address</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iovec\">iovec</a> <a class=\"id\" href=\"#iovstack\">iovstack</a>[<a class=\"id\" href=\"#UIO_FASTIOV\">UIO_FASTIOV</a>], *<a class=\"id\" href=\"#iov\">iov</a> = <a class=\"id\" href=\"#iovstack\">iovstack</a>;", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#ctl\">ctl</a>[sizeof(struct <a class=\"id\" href=\"#cmsghdr\">cmsghdr</a>) + 20]", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#__attribute__\">__attribute__</a> ((<a class=\"id\" href=\"#aligned\">aligned</a>(sizeof(<a class=\"id\" href=\"#__kernel_size_t\">__kernel_size_t</a>))));", 
"<span class=\"ts\"/><span class=\"comment\">/* 20 is size of ipv6_pktinfo */</span>", 
"<span class=\"ts\"/>unsigned char *<a class=\"id\" href=\"#ctl_buf\">ctl_buf</a> = <a class=\"id\" href=\"#ctl\">ctl</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#msghdr\">msghdr</a> <a class=\"id\" href=\"#msg_sys\">msg_sys</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>, <a class=\"id\" href=\"#ctl_len\">ctl_len</a>, <a class=\"id\" href=\"#iov_size\">iov_size</a>, <a class=\"id\" href=\"#total_len\">total_len</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fput_needed\">fput_needed</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#MSG_CMSG_COMPAT\">MSG_CMSG_COMPAT</a> &amp; <a class=\"id\" href=\"#flags\">flags</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#get_compat_msghdr\">get_compat_msghdr</a>(&amp;<a class=\"id\" href=\"#msg_sys\">msg_sys</a>, <a class=\"id\" href=\"#msg_compat\">msg_compat</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#msg_sys\">msg_sys</a>, <a class=\"id\" href=\"#msg\">msg</a>, sizeof(struct <a class=\"id\" href=\"#msghdr\">msghdr</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
];
xr_frag_insert('l/54/deeb8a203f7a36e178e9f49aabb2081b07fd85.xr', __xr_tmp);
