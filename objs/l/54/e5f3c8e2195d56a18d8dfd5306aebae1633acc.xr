var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#LOCK_PREFIX\">LOCK_PREFIX</a> \"  xadd      %1,(%2)\\n\\t\"", 
"<span class=\"ts\"/><span class=\"ts\"/>     <span class=\"comment\">/* subtracts 1, returns the old value */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>     \"  jns        1f\\n\\t\"", 
"<span class=\"ts\"/><span class=\"ts\"/>     \"  call call_rwsem_wake\\n\" <span class=\"comment\">/* expects old value in %edx */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>     \"1:\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>     \"# ending __up_read\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>     : \"+m\" (<a class=\"id\" href=\"#sem\">sem</a>-><a class=\"id\" href=\"#count\">count</a>), \"=d\" (<a class=\"id\" href=\"#tmp\">tmp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>     : \"a\" (<a class=\"id\" href=\"#sem\">sem</a>), \"1\" (-<a class=\"id\" href=\"#RWSEM_ACTIVE_READ_BIAS\">RWSEM_ACTIVE_READ_BIAS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>     : \"memory\", \"cc\");", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * unlock after writing</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__up_write\">__up_write</a>(struct <a class=\"id\" href=\"#rw_semaphore\">rw_semaphore</a> *<a class=\"id\" href=\"#sem\">sem</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rwsem_count_t\">rwsem_count_t</a> <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"# beginning __up_write\\n\\t\"", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#LOCK_PREFIX\">LOCK_PREFIX</a> \"  xadd      %1,(%2)\\n\\t\"", 
"<span class=\"ts\"/><span class=\"ts\"/>     <span class=\"comment\">/* subtracts 0xffff0001, returns the old value */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>     \"  jns        1f\\n\\t\"", 
"<span class=\"ts\"/><span class=\"ts\"/>     \"  call call_rwsem_wake\\n\" <span class=\"comment\">/* expects old value in %edx */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>     \"1:\\n\\t\"", 
"<span class=\"ts\"/><span class=\"ts\"/>     \"# ending __up_write\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>     : \"+m\" (<a class=\"id\" href=\"#sem\">sem</a>-><a class=\"id\" href=\"#count\">count</a>), \"=d\" (<a class=\"id\" href=\"#tmp\">tmp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>     : \"a\" (<a class=\"id\" href=\"#sem\">sem</a>), \"1\" (-<a class=\"id\" href=\"#RWSEM_ACTIVE_WRITE_BIAS\">RWSEM_ACTIVE_WRITE_BIAS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>     : \"memory\", \"cc\");", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * downgrade write lock to read lock</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__downgrade_write\">__downgrade_write</a>(struct <a class=\"id\" href=\"#rw_semaphore\">rw_semaphore</a> *<a class=\"id\" href=\"#sem\">sem</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"# beginning __downgrade_write\\n\\t\"", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#LOCK_PREFIX\">LOCK_PREFIX</a> <a class=\"id\" href=\"#_ASM_ADD\">_ASM_ADD</a> \"%2,(%1)\\n\\t\"", 
"<span class=\"ts\"/><span class=\"ts\"/>     <span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>      * transitions 0xZZZZ0001 -&gt; 0xYYYY0001 (i386)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>      *     0xZZZZZZZZ00000001 -&gt; 0xYYYYYYYY00000001 (x86_64)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>      */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>     \"  jns       1f\\n\\t\"", 
"<span class=\"ts\"/><span class=\"ts\"/>     \"  call call_rwsem_downgrade_wake\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>     \"1:\\n\\t\"", 
"<span class=\"ts\"/><span class=\"ts\"/>     \"# ending __downgrade_write\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>     : \"+m\" (<a class=\"id\" href=\"#sem\">sem</a>-><a class=\"id\" href=\"#count\">count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>     : \"a\" (<a class=\"id\" href=\"#sem\">sem</a>), \"er\" (-<a class=\"id\" href=\"#RWSEM_WAITING_BIAS\">RWSEM_WAITING_BIAS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>     : \"memory\", \"cc\");", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * implement atomic add functionality</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#rwsem_atomic_add\">rwsem_atomic_add</a>(<a class=\"id\" href=\"#rwsem_count_t\">rwsem_count_t</a> <a class=\"id\" href=\"#delta\">delta</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#rw_semaphore\">rw_semaphore</a> *<a class=\"id\" href=\"#sem\">sem</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(<a class=\"id\" href=\"#LOCK_PREFIX\">LOCK_PREFIX</a> <a class=\"id\" href=\"#_ASM_ADD\">_ASM_ADD</a> \"%1,%0\"", 
"<span class=\"ts\"/><span class=\"ts\"/>     : \"+m\" (<a class=\"id\" href=\"#sem\">sem</a>-><a class=\"id\" href=\"#count\">count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>     : \"er\" (<a class=\"id\" href=\"#delta\">delta</a>));", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * implement exchange and add functionality</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#rwsem_count_t\">rwsem_count_t</a> <a class=\"id\" href=\"#rwsem_atomic_update\">rwsem_atomic_update</a>(<a class=\"id\" href=\"#rwsem_count_t\">rwsem_count_t</a> <a class=\"id\" href=\"#delta\">delta</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#rw_semaphore\">rw_semaphore</a> *<a class=\"id\" href=\"#sem\">sem</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rwsem_count_t\">rwsem_count_t</a> <a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#delta\">delta</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(<a class=\"id\" href=\"#LOCK_PREFIX\">LOCK_PREFIX</a> \"xadd %0,%1\"", 
"<span class=\"ts\"/><span class=\"ts\"/>     : \"+r\" (<a class=\"id\" href=\"#tmp\">tmp</a>), \"+m\" (<a class=\"id\" href=\"#sem\">sem</a>-><a class=\"id\" href=\"#count\">count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>     : : \"memory\");", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tmp\">tmp</a> + <a class=\"id\" href=\"#delta\">delta</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#rwsem_is_locked\">rwsem_is_locked</a>(struct <a class=\"id\" href=\"#rw_semaphore\">rw_semaphore</a> *<a class=\"id\" href=\"#sem\">sem</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#sem\">sem</a>-><a class=\"id\" href=\"#count\">count</a> != 0);", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __KERNEL__ */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _ASM_X86_RWSEM_H */</span>", 
];
xr_frag_insert('l/54/e5f3c8e2195d56a18d8dfd5306aebae1633acc.xr', __xr_tmp);
