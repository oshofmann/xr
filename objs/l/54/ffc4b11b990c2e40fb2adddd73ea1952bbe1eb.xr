var __xr_tmp = [
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_CPU_SUP_INTEL\">CONFIG_CPU_SUP_INTEL</a>", 
"", 
"enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LBR_FORMAT_32\">LBR_FORMAT_32</a><span class=\"ts\"/><span class=\"ts\"/>= 0x00,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LBR_FORMAT_LIP\">LBR_FORMAT_LIP</a><span class=\"ts\"/><span class=\"ts\"/>= 0x01,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LBR_FORMAT_EIP\">LBR_FORMAT_EIP</a><span class=\"ts\"/><span class=\"ts\"/>= 0x02,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LBR_FORMAT_EIP_FLAGS\">LBR_FORMAT_EIP_FLAGS</a><span class=\"ts\"/>= 0x03,", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * We only support LBR implementations that have FREEZE_LBRS_ON_PMI</span>", 
"<span class=\"comment\"> * otherwise it becomes near impossible to get a reliable stack.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#__intel_pmu_lbr_enable\">__intel_pmu_lbr_enable</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#debugctl\">debugctl</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsrl\">rdmsrl</a>(<a class=\"id\" href=\"#MSR_IA32_DEBUGCTLMSR\">MSR_IA32_DEBUGCTLMSR</a>, <a class=\"id\" href=\"#debugctl\">debugctl</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#debugctl\">debugctl</a> |= (<a class=\"id\" href=\"#DEBUGCTLMSR_LBR\">DEBUGCTLMSR_LBR</a> | <a class=\"id\" href=\"#DEBUGCTLMSR_FREEZE_LBRS_ON_PMI\">DEBUGCTLMSR_FREEZE_LBRS_ON_PMI</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wrmsrl\">wrmsrl</a>(<a class=\"id\" href=\"#MSR_IA32_DEBUGCTLMSR\">MSR_IA32_DEBUGCTLMSR</a>, <a class=\"id\" href=\"#debugctl\">debugctl</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__intel_pmu_lbr_disable\">__intel_pmu_lbr_disable</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#debugctl\">debugctl</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsrl\">rdmsrl</a>(<a class=\"id\" href=\"#MSR_IA32_DEBUGCTLMSR\">MSR_IA32_DEBUGCTLMSR</a>, <a class=\"id\" href=\"#debugctl\">debugctl</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#debugctl\">debugctl</a> &= ~(<a class=\"id\" href=\"#DEBUGCTLMSR_LBR\">DEBUGCTLMSR_LBR</a> | <a class=\"id\" href=\"#DEBUGCTLMSR_FREEZE_LBRS_ON_PMI\">DEBUGCTLMSR_FREEZE_LBRS_ON_PMI</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wrmsrl\">wrmsrl</a>(<a class=\"id\" href=\"#MSR_IA32_DEBUGCTLMSR\">MSR_IA32_DEBUGCTLMSR</a>, <a class=\"id\" href=\"#debugctl\">debugctl</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#intel_pmu_lbr_reset_32\">intel_pmu_lbr_reset_32</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#lbr_nr\">lbr_nr</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wrmsrl\">wrmsrl</a>(<a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#lbr_from\">lbr_from</a> + <a class=\"id\" href=\"#i\">i</a>, 0);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#intel_pmu_lbr_reset_64\">intel_pmu_lbr_reset_64</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#lbr_nr\">lbr_nr</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wrmsrl\">wrmsrl</a>(<a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#lbr_from\">lbr_from</a> + <a class=\"id\" href=\"#i\">i</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wrmsrl\">wrmsrl</a>(<a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#lbr_to\">lbr_to</a>   + <a class=\"id\" href=\"#i\">i</a>, 0);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#intel_pmu_lbr_reset\">intel_pmu_lbr_reset</a>(void)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#lbr_nr\">lbr_nr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#intel_cap\">intel_cap</a>.<a class=\"id\" href=\"#lbr_format\">lbr_format</a> == <a class=\"id\" href=\"#LBR_FORMAT_32\">LBR_FORMAT_32</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#intel_pmu_lbr_reset_32\">intel_pmu_lbr_reset_32</a>();", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#intel_pmu_lbr_reset_64\">intel_pmu_lbr_reset_64</a>();", 
"}", 
"", 
"static void <a class=\"id\" href=\"#intel_pmu_lbr_enable\">intel_pmu_lbr_enable</a>(struct <a class=\"id\" href=\"#perf_event\">perf_event</a> *<a class=\"id\" href=\"#event\">event</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpu_hw_events\">cpu_hw_events</a> *<a class=\"id\" href=\"#cpuc\">cpuc</a> = &amp;<a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#cpu_hw_events\">cpu_hw_events</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#lbr_nr\">lbr_nr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON_ONCE\">WARN_ON_ONCE</a>(<a class=\"id\" href=\"#cpuc\">cpuc</a>-><a class=\"id\" href=\"#enabled\">enabled</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Reset the LBR stack if we changed task context to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * avoid data leaks.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#task\">task</a> && <a class=\"id\" href=\"#cpuc\">cpuc</a>-><a class=\"id\" href=\"#lbr_context\">lbr_context</a> != <a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#ctx\">ctx</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#intel_pmu_lbr_reset\">intel_pmu_lbr_reset</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpuc\">cpuc</a>-><a class=\"id\" href=\"#lbr_context\">lbr_context</a> = <a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#ctx\">ctx</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpuc\">cpuc</a>-><a class=\"id\" href=\"#lbr_users\">lbr_users</a>++;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#intel_pmu_lbr_disable\">intel_pmu_lbr_disable</a>(struct <a class=\"id\" href=\"#perf_event\">perf_event</a> *<a class=\"id\" href=\"#event\">event</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpu_hw_events\">cpu_hw_events</a> *<a class=\"id\" href=\"#cpuc\">cpuc</a> = &amp;<a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#cpu_hw_events\">cpu_hw_events</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#lbr_nr\">lbr_nr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpuc\">cpuc</a>-><a class=\"id\" href=\"#lbr_users\">lbr_users</a>--;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON_ONCE\">WARN_ON_ONCE</a>(<a class=\"id\" href=\"#cpuc\">cpuc</a>-><a class=\"id\" href=\"#lbr_users\">lbr_users</a> &lt; 0);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpuc\">cpuc</a>-><a class=\"id\" href=\"#enabled\">enabled</a> && !<a class=\"id\" href=\"#cpuc\">cpuc</a>-><a class=\"id\" href=\"#lbr_users\">lbr_users</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__intel_pmu_lbr_disable\">__intel_pmu_lbr_disable</a>();", 
"}", 
"", 
"static void <a class=\"id\" href=\"#intel_pmu_lbr_enable_all\">intel_pmu_lbr_enable_all</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpu_hw_events\">cpu_hw_events</a> *<a class=\"id\" href=\"#cpuc\">cpuc</a> = &amp;<a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#cpu_hw_events\">cpu_hw_events</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpuc\">cpuc</a>-><a class=\"id\" href=\"#lbr_users\">lbr_users</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__intel_pmu_lbr_enable\">__intel_pmu_lbr_enable</a>();", 
"}", 
"", 
"static void <a class=\"id\" href=\"#intel_pmu_lbr_disable_all\">intel_pmu_lbr_disable_all</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpu_hw_events\">cpu_hw_events</a> *<a class=\"id\" href=\"#cpuc\">cpuc</a> = &amp;<a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#cpu_hw_events\">cpu_hw_events</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpuc\">cpuc</a>-><a class=\"id\" href=\"#lbr_users\">lbr_users</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__intel_pmu_lbr_disable\">__intel_pmu_lbr_disable</a>();", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#intel_pmu_lbr_tos\">intel_pmu_lbr_tos</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#tos\">tos</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsrl\">rdmsrl</a>(<a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#lbr_tos\">lbr_tos</a>, <a class=\"id\" href=\"#tos\">tos</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tos\">tos</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#intel_pmu_lbr_read_32\">intel_pmu_lbr_read_32</a>(struct <a class=\"id\" href=\"#cpu_hw_events\">cpu_hw_events</a> *<a class=\"id\" href=\"#cpuc\">cpuc</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#lbr_nr\">lbr_nr</a> - 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#tos\">tos</a> = <a class=\"id\" href=\"#intel_pmu_lbr_tos\">intel_pmu_lbr_tos</a>();", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#lbr_nr\">lbr_nr</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#lbr_idx\">lbr_idx</a> = (<a class=\"id\" href=\"#tos\">tos</a> - <a class=\"id\" href=\"#i\">i</a>) &amp; <a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#from\">from</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#to\">to</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>};", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a>     <a class=\"id\" href=\"#lbr\">lbr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#msr_lastbranch\">msr_lastbranch</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rdmsrl\">rdmsrl</a>(<a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#lbr_from\">lbr_from</a> + <a class=\"id\" href=\"#lbr_idx\">lbr_idx</a>, <a class=\"id\" href=\"#msr_lastbranch\">msr_lastbranch</a>.<a class=\"id\" href=\"#lbr\">lbr</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpuc\">cpuc</a>-><a class=\"id\" href=\"#lbr_entries\">lbr_entries</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#from\">from</a>  = <a class=\"id\" href=\"#msr_lastbranch\">msr_lastbranch</a>.<a class=\"id\" href=\"#from\">from</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpuc\">cpuc</a>-><a class=\"id\" href=\"#lbr_entries\">lbr_entries</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#to\">to</a>    = <a class=\"id\" href=\"#msr_lastbranch\">msr_lastbranch</a>.<a class=\"id\" href=\"#to\">to</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpuc\">cpuc</a>-><a class=\"id\" href=\"#lbr_entries\">lbr_entries</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#flags\">flags</a> = 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpuc\">cpuc</a>-><a class=\"id\" href=\"#lbr_stack\">lbr_stack</a>.<a class=\"id\" href=\"#nr\">nr</a> = <a class=\"id\" href=\"#i\">i</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#LBR_FROM_FLAG_MISPRED\">LBR_FROM_FLAG_MISPRED</a>  (1ULL << 63)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Due to lack of segmentation in Linux the effective address (offset)</span>", 
"<span class=\"comment\"> * is the same as the linear address, allowing us to merge the LIP and EIP</span>", 
"<span class=\"comment\"> * LBR formats.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#intel_pmu_lbr_read_64\">intel_pmu_lbr_read_64</a>(struct <a class=\"id\" href=\"#cpu_hw_events\">cpu_hw_events</a> *<a class=\"id\" href=\"#cpuc\">cpuc</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#lbr_nr\">lbr_nr</a> - 1;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#lbr_format\">lbr_format</a> = <a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#intel_cap\">intel_cap</a>.<a class=\"id\" href=\"#lbr_format\">lbr_format</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#tos\">tos</a> = <a class=\"id\" href=\"#intel_pmu_lbr_tos\">intel_pmu_lbr_tos</a>();", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#lbr_nr\">lbr_nr</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#lbr_idx\">lbr_idx</a> = (<a class=\"id\" href=\"#tos\">tos</a> - <a class=\"id\" href=\"#i\">i</a>) &amp; <a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#from\">from</a>, <a class=\"id\" href=\"#to\">to</a>, <a class=\"id\" href=\"#flags\">flags</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rdmsrl\">rdmsrl</a>(<a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#lbr_from\">lbr_from</a> + <a class=\"id\" href=\"#lbr_idx\">lbr_idx</a>, <a class=\"id\" href=\"#from\">from</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rdmsrl\">rdmsrl</a>(<a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#lbr_to\">lbr_to</a>   + <a class=\"id\" href=\"#lbr_idx\">lbr_idx</a>, <a class=\"id\" href=\"#to\">to</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#lbr_format\">lbr_format</a> == <a class=\"id\" href=\"#LBR_FORMAT_EIP_FLAGS\">LBR_FORMAT_EIP_FLAGS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> = !!(<a class=\"id\" href=\"#from\">from</a> &amp; <a class=\"id\" href=\"#LBR_FROM_FLAG_MISPRED\">LBR_FROM_FLAG_MISPRED</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#from\">from</a> = (<a class=\"id\" href=\"#u64\">u64</a>)((((<a class=\"id\" href=\"#s64\">s64</a>)<a class=\"id\" href=\"#from\">from</a>) << 1) >> 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpuc\">cpuc</a>-><a class=\"id\" href=\"#lbr_entries\">lbr_entries</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#from\">from</a>  = <a class=\"id\" href=\"#from\">from</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpuc\">cpuc</a>-><a class=\"id\" href=\"#lbr_entries\">lbr_entries</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#to\">to</a>    = <a class=\"id\" href=\"#to\">to</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpuc\">cpuc</a>-><a class=\"id\" href=\"#lbr_entries\">lbr_entries</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpuc\">cpuc</a>-><a class=\"id\" href=\"#lbr_stack\">lbr_stack</a>.<a class=\"id\" href=\"#nr\">nr</a> = <a class=\"id\" href=\"#i\">i</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#intel_pmu_lbr_read\">intel_pmu_lbr_read</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpu_hw_events\">cpu_hw_events</a> *<a class=\"id\" href=\"#cpuc\">cpuc</a> = &amp;<a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#cpu_hw_events\">cpu_hw_events</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cpuc\">cpuc</a>-><a class=\"id\" href=\"#lbr_users\">lbr_users</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#intel_cap\">intel_cap</a>.<a class=\"id\" href=\"#lbr_format\">lbr_format</a> == <a class=\"id\" href=\"#LBR_FORMAT_32\">LBR_FORMAT_32</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#intel_pmu_lbr_read_32\">intel_pmu_lbr_read_32</a>(<a class=\"id\" href=\"#cpuc\">cpuc</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#intel_pmu_lbr_read_64\">intel_pmu_lbr_read_64</a>(<a class=\"id\" href=\"#cpuc\">cpuc</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#intel_pmu_lbr_init_core\">intel_pmu_lbr_init_core</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#lbr_nr\">lbr_nr</a>     = 4;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#lbr_tos\">lbr_tos</a>    = 0x01c9;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#lbr_from\">lbr_from</a>   = 0x40;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#lbr_to\">lbr_to</a>     = 0x60;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#intel_pmu_lbr_init_nhm\">intel_pmu_lbr_init_nhm</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#lbr_nr\">lbr_nr</a>     = 16;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#lbr_tos\">lbr_tos</a>    = 0x01c9;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#lbr_from\">lbr_from</a>   = 0x680;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#lbr_to\">lbr_to</a>     = 0x6c0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#intel_pmu_lbr_init_atom\">intel_pmu_lbr_init_atom</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#lbr_nr\">lbr_nr</a><span class=\"ts\"/>   = 8;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#lbr_tos\">lbr_tos</a>    = 0x01c9;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#lbr_from\">lbr_from</a>   = 0x40;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x86_pmu\">x86_pmu</a>.<a class=\"id\" href=\"#lbr_to\">lbr_to</a>     = 0x60;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_CPU_SUP_INTEL */</span>", 
];
xr_frag_insert('l/54/ffc4b11b990c2e40fb2adddd73ea1952bbe1eb.xr', __xr_tmp);
