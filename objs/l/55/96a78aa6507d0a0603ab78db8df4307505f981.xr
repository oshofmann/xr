var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * linux/kernel/power/swap.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file provides functions for reading the suspend image from</span>", 
"<span class=\"comment\"> * and writing it to a swap partition.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 1998,2001-2005 Pavel Machek &lt;pavel@ucw.cz&gt;</span>", 
"<span class=\"comment\"> * Copyright (C) 2006 Rafael J. Wysocki &lt;rjw@sisk.pl&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file is released under the GPLv2.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#file\">file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bitops\">bitops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#genhd\">genhd</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#device\">device</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#buffer_head\">buffer_head</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bio\">bio</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blkdev\">blkdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#swap\">swap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#swapops\">swapops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pm\">pm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"power.h\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SWSUSP_SIG\">SWSUSP_SIG</a><span class=\"ts\"/>\"S1SUSPEND\"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>The swap map is a data structure used for keeping track of each page</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>written to a swap partition.  It consists of many swap_map_page</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>structures that contain each an array of MAP_PAGE_ENTRIES swap entries.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>These structures are stored on the swap and linked together with the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>help of the .next_swap member.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>The swap map is created during suspend.  The swap map pages are</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>allocated and populated one at a time, so we only need one memory</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>page to set up the entire structure.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>During resume we also only need to use one swap_map_page structure</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>at a time.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAP_PAGE_ENTRIES\">MAP_PAGE_ENTRIES</a><span class=\"ts\"/>(<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> / sizeof(<a class=\"id\" href=\"#sector_t\">sector_t</a>) - 1)", 
"", 
"struct <a class=\"id\" href=\"#swap_map_page\">swap_map_page</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#entries\">entries</a>[<a class=\"id\" href=\"#MAP_PAGE_ENTRIES\">MAP_PAGE_ENTRIES</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#next_swap\">next_swap</a>;", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>The swap_map_handle structure is used for handling swap in</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>a file-alike way</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#swap_map_handle\">swap_map_handle</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#swap_map_page\">swap_map_page</a> *<a class=\"id\" href=\"#cur\">cur</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#cur_swap\">cur_swap</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#first_sector\">first_sector</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#k\">k</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#swsusp_header\">swsusp_header</a> {", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#reserved\">reserved</a>[<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - 20 - sizeof(<a class=\"id\" href=\"#sector_t\">sector_t</a>) - sizeof(int)];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#image\">image</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#flags\">flags</a>;<span class=\"ts\"/><span class=\"comment\">/* Flags to pass to the \"boot\" kernel */</span>", 
"<span class=\"ts\"/>char<span class=\"ts\"/><a class=\"id\" href=\"#orig_sig\">orig_sig</a>[10];", 
"<span class=\"ts\"/>char<span class=\"ts\"/><a class=\"id\" href=\"#sig\">sig</a>[10];", 
"} <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#packed\">packed</a>));", 
"", 
"static struct <a class=\"id\" href=\"#swsusp_header\">swsusp_header</a> *<a class=\"id\" href=\"#swsusp_header\">swsusp_header</a>;", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>The following functions are used for tracing the allocated</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>swap pages, so that they can be freed in case of an error.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#swsusp_extent\">swsusp_extent</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> <a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start\">start</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#end\">end</a>;", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#rb_root\">rb_root</a> <a class=\"id\" href=\"#swsusp_extents\">swsusp_extents</a> = <a class=\"id\" href=\"#RB_ROOT\">RB_ROOT</a>;", 
"", 
"static int <a class=\"id\" href=\"#swsusp_extents_insert\">swsusp_extents_insert</a>(unsigned long <a class=\"id\" href=\"#swap_offset\">swap_offset</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> **<a class=\"id\" href=\"#new\">new</a> = &amp;(<a class=\"id\" href=\"#swsusp_extents\">swsusp_extents</a>.<a class=\"id\" href=\"#rb_node\">rb_node</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#swsusp_extent\">swsusp_extent</a> *<a class=\"id\" href=\"#ext\">ext</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Figure out where to put the new node */</span>", 
"<span class=\"ts\"/>while (*<a class=\"id\" href=\"#new\">new</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext\">ext</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(*<a class=\"id\" href=\"#new\">new</a>, struct <a class=\"id\" href=\"#swsusp_extent\">swsusp_extent</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a> = *<a class=\"id\" href=\"#new\">new</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#swap_offset\">swap_offset</a> &lt; <a class=\"id\" href=\"#ext\">ext</a>-><a class=\"id\" href=\"#start\">start</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Try to merge */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#swap_offset\">swap_offset</a> == <a class=\"id\" href=\"#ext\">ext</a>-><a class=\"id\" href=\"#start\">start</a> - 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext\">ext</a>-><a class=\"id\" href=\"#start\">start</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a> = &amp;((*<a class=\"id\" href=\"#new\">new</a>)-><a class=\"id\" href=\"#rb_left\">rb_left</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#swap_offset\">swap_offset</a> &gt; <a class=\"id\" href=\"#ext\">ext</a>-><a class=\"id\" href=\"#end\">end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Try to merge */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#swap_offset\">swap_offset</a> == <a class=\"id\" href=\"#ext\">ext</a>-><a class=\"id\" href=\"#end\">end</a> + 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext\">ext</a>-><a class=\"id\" href=\"#end\">end</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a> = &amp;((*<a class=\"id\" href=\"#new\">new</a>)-><a class=\"id\" href=\"#rb_right\">rb_right</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* It already is in the tree */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* Add the new node and rebalance the tree. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext\">ext</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#swsusp_extent\">swsusp_extent</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ext\">ext</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext\">ext</a>-><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#swap_offset\">swap_offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext\">ext</a>-><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#swap_offset\">swap_offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rb_link_node\">rb_link_node</a>(&amp;<a class=\"id\" href=\"#ext\">ext</a>-><a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#new\">new</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rb_insert_color\">rb_insert_color</a>(&amp;<a class=\"id\" href=\"#ext\">ext</a>-><a class=\"id\" href=\"#node\">node</a>, &amp;<a class=\"id\" href=\"#swsusp_extents\">swsusp_extents</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>alloc_swapdev_block - allocate a swap page and register that it has</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>been allocated, so that it can be freed in case of an error.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#alloc_swapdev_block\">alloc_swapdev_block</a>(int <a class=\"id\" href=\"#swap\">swap</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#offset\">offset</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#swp_offset\">swp_offset</a>(<a class=\"id\" href=\"#get_swap_page_of_type\">get_swap_page_of_type</a>(<a class=\"id\" href=\"#swap\">swap</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#offset\">offset</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#swsusp_extents_insert\">swsusp_extents_insert</a>(<a class=\"id\" href=\"#offset\">offset</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#swap_free\">swap_free</a>(<a class=\"id\" href=\"#swp_entry\">swp_entry</a>(<a class=\"id\" href=\"#swap\">swap</a>, <a class=\"id\" href=\"#offset\">offset</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#swapdev_block\">swapdev_block</a>(<a class=\"id\" href=\"#swap\">swap</a>, <a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>free_all_swap_pages - free swap pages allocated for saving image data.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>It also frees the extents used to register which swap entries had been</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>allocated.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#free_all_swap_pages\">free_all_swap_pages</a>(int <a class=\"id\" href=\"#swap\">swap</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#swsusp_extents\">swsusp_extents</a>.<a class=\"id\" href=\"#rb_node\">rb_node</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#swsusp_extent\">swsusp_extent</a> *<a class=\"id\" href=\"#ext\">ext</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#offset\">offset</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext\">ext</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#node\">node</a>, struct <a class=\"id\" href=\"#swsusp_extent\">swsusp_extent</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_erase\">rb_erase</a>(<a class=\"id\" href=\"#node\">node</a>, &amp;<a class=\"id\" href=\"#swsusp_extents\">swsusp_extents</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#ext\">ext</a>-><a class=\"id\" href=\"#start\">start</a>; <a class=\"id\" href=\"#offset\">offset</a> <= <a class=\"id\" href=\"#ext\">ext</a>-><a class=\"id\" href=\"#end\">end</a>; <a class=\"id\" href=\"#offset\">offset</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#swap_free\">swap_free</a>(<a class=\"id\" href=\"#swp_entry\">swp_entry</a>(<a class=\"id\" href=\"#swap\">swap</a>, <a class=\"id\" href=\"#offset\">offset</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ext\">ext</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"int <a class=\"id\" href=\"#swsusp_swap_in_use\">swsusp_swap_in_use</a>(void)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#swsusp_extents\">swsusp_extents</a>.<a class=\"id\" href=\"#rb_node\">rb_node</a> != <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * General things</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static unsigned short <a class=\"id\" href=\"#root_swap\">root_swap</a> = 0xffff;", 
"struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#hib_resume_bdev\">hib_resume_bdev</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Saving part</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#mark_swapfiles\">mark_swapfiles</a>(struct <a class=\"id\" href=\"#swap_map_handle\">swap_map_handle</a> *<a class=\"id\" href=\"#handle\">handle</a>, unsigned int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hib_bio_read_page\">hib_bio_read_page</a>(<a class=\"id\" href=\"#swsusp_resume_block\">swsusp_resume_block</a>, <a class=\"id\" href=\"#swsusp_header\">swsusp_header</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#memcmp\">memcmp</a>(\"SWAP-SPACE\",<a class=\"id\" href=\"#swsusp_header\">swsusp_header</a>-><a class=\"id\" href=\"#sig\">sig</a>, 10) ||", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#memcmp\">memcmp</a>(\"SWAPSPACE2\",<a class=\"id\" href=\"#swsusp_header\">swsusp_header</a>-><a class=\"id\" href=\"#sig\">sig</a>, 10)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#swsusp_header\">swsusp_header</a>-><a class=\"id\" href=\"#orig_sig\">orig_sig</a>,<a class=\"id\" href=\"#swsusp_header\">swsusp_header</a>-><a class=\"id\" href=\"#sig\">sig</a>, 10);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#swsusp_header\">swsusp_header</a>-><a class=\"id\" href=\"#sig\">sig</a>,<a class=\"id\" href=\"#SWSUSP_SIG\">SWSUSP_SIG</a>, 10);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#swsusp_header\">swsusp_header</a>-><a class=\"id\" href=\"#image\">image</a> = <a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#first_sector\">first_sector</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#swsusp_header\">swsusp_header</a>-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#hib_bio_write_page\">hib_bio_write_page</a>(<a class=\"id\" href=\"#swsusp_resume_block\">swsusp_resume_block</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#swsusp_header\">swsusp_header</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"PM: Swap header not found!\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>swsusp_swap_check - check if the resume device is a swap device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>and get its index (if so)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This is called before saving image</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#swsusp_swap_check\">swsusp_swap_check</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#res\">res</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#swap_type_of\">swap_type_of</a>(<a class=\"id\" href=\"#swsusp_resume_device\">swsusp_resume_device</a>, <a class=\"id\" href=\"#swsusp_resume_block\">swsusp_resume_block</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#hib_resume_bdev\">hib_resume_bdev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#root_swap\">root_swap</a> = <a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#blkdev_get\">blkdev_get</a>(<a class=\"id\" href=\"#hib_resume_bdev\">hib_resume_bdev</a>, <a class=\"id\" href=\"#FMODE_WRITE\">FMODE_WRITE</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#set_blocksize\">set_blocksize</a>(<a class=\"id\" href=\"#hib_resume_bdev\">hib_resume_bdev</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blkdev_put\">blkdev_put</a>(<a class=\"id\" href=\"#hib_resume_bdev\">hib_resume_bdev</a>, <a class=\"id\" href=\"#FMODE_WRITE\">FMODE_WRITE</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>write_page - Write one page to given swap location.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@buf:<span class=\"ts\"/><span class=\"ts\"/>Address we're writing.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@offset:<span class=\"ts\"/>Offset of the swap page we're writing to.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@bio_chain:<span class=\"ts\"/>Link the next write BIO here</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#write_page\">write_page</a>(void *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#offset\">offset</a>, struct <a class=\"id\" href=\"#bio\">bio</a> **<a class=\"id\" href=\"#bio_chain\">bio_chain</a>)", 
"{", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#src\">src</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#offset\">offset</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bio_chain\">bio_chain</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#src\">src</a> = (void *)<a class=\"id\" href=\"#__get_free_page\">__get_free_page</a>(<a class=\"id\" href=\"#__GFP_WAIT\">__GFP_WAIT</a> | <a class=\"id\" href=\"#__GFP_HIGH\">__GFP_HIGH</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#src\">src</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#src\">src</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON_ONCE\">WARN_ON_ONCE</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio_chain\">bio_chain</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;<span class=\"ts\"/><span class=\"comment\">/* Go synchronous */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#src\">src</a> = <a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#src\">src</a> = <a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#hib_bio_write_page\">hib_bio_write_page</a>(<a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#src\">src</a>, <a class=\"id\" href=\"#bio_chain\">bio_chain</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#release_swap_writer\">release_swap_writer</a>(struct <a class=\"id\" href=\"#swap_map_handle\">swap_map_handle</a> *<a class=\"id\" href=\"#handle\">handle</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#cur\">cur</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_page\">free_page</a>((unsigned long)<a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#cur\">cur</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#get_swap_writer\">get_swap_writer</a>(struct <a class=\"id\" href=\"#swap_map_handle\">swap_map_handle</a> *<a class=\"id\" href=\"#handle\">handle</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#swsusp_swap_check\">swsusp_swap_check</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"PM: Cannot find swap device, try \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"swapon -a.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#cur\">cur</a> = (struct <a class=\"id\" href=\"#swap_map_page\">swap_map_page</a> *)<a class=\"id\" href=\"#get_zeroed_page\">get_zeroed_page</a>(<a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#cur\">cur</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_close\">err_close</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#cur_swap\">cur_swap</a> = <a class=\"id\" href=\"#alloc_swapdev_block\">alloc_swapdev_block</a>(<a class=\"id\" href=\"#root_swap\">root_swap</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#cur_swap\">cur_swap</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_rel\">err_rel</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#k\">k</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#first_sector\">first_sector</a> = <a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#cur_swap\">cur_swap</a>;", 
"<span class=\"ts\"/>return 0;", 
"<a class=\"id\" href=\"#err_rel\">err_rel</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_swap_writer\">release_swap_writer</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<a class=\"id\" href=\"#err_close\">err_close</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#swsusp_close\">swsusp_close</a>(<a class=\"id\" href=\"#FMODE_WRITE\">FMODE_WRITE</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#swap_write_page\">swap_write_page</a>(struct <a class=\"id\" href=\"#swap_map_handle\">swap_map_handle</a> *<a class=\"id\" href=\"#handle\">handle</a>, void *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a> **<a class=\"id\" href=\"#bio_chain\">bio_chain</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#offset\">offset</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#cur\">cur</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#alloc_swapdev_block\">alloc_swapdev_block</a>(<a class=\"id\" href=\"#root_swap\">root_swap</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#write_page\">write_page</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#bio_chain\">bio_chain</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#entries\">entries</a>[<a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#k\">k</a>++] = <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#k\">k</a> >= <a class=\"id\" href=\"#MAP_PAGE_ENTRIES\">MAP_PAGE_ENTRIES</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#hib_wait_on_bio_chain\">hib_wait_on_bio_chain</a>(<a class=\"id\" href=\"#bio_chain\">bio_chain</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#alloc_swapdev_block\">alloc_swapdev_block</a>(<a class=\"id\" href=\"#root_swap\">root_swap</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#offset\">offset</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#next_swap\">next_swap</a> = <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#write_page\">write_page</a>(<a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#cur\">cur</a>, <a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#cur_swap\">cur_swap</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#cur\">cur</a>, 0, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#cur_swap\">cur_swap</a> = <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#k\">k</a> = 0;", 
"<span class=\"ts\"/>}", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#flush_swap_writer\">flush_swap_writer</a>(struct <a class=\"id\" href=\"#swap_map_handle\">swap_map_handle</a> *<a class=\"id\" href=\"#handle\">handle</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#cur\">cur</a> && <a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#cur_swap\">cur_swap</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#write_page\">write_page</a>(<a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#cur\">cur</a>, <a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#cur_swap\">cur_swap</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#swap_writer_finish\">swap_writer_finish</a>(struct <a class=\"id\" href=\"#swap_map_handle\">swap_map_handle</a> *<a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#flags\">flags</a>, int <a class=\"id\" href=\"#error\">error</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flush_swap_writer\">flush_swap_writer</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"PM: S\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#mark_swapfiles\">mark_swapfiles</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"|\\n\");", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_all_swap_pages\">free_all_swap_pages</a>(<a class=\"id\" href=\"#root_swap\">root_swap</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_swap_writer\">release_swap_writer</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#swsusp_close\">swsusp_close</a>(<a class=\"id\" href=\"#FMODE_WRITE\">FMODE_WRITE</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>save_image - save the suspend image data</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#save_image\">save_image</a>(struct <a class=\"id\" href=\"#swap_map_handle\">swap_map_handle</a> *<a class=\"id\" href=\"#handle\">handle</a>,", 
"                      struct <a class=\"id\" href=\"#snapshot_handle\">snapshot_handle</a> *<a class=\"id\" href=\"#snapshot\">snapshot</a>,", 
"                      unsigned int <a class=\"id\" href=\"#nr_to_write\">nr_to_write</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#m\">m</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nr_pages\">nr_pages</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err2\">err2</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timeval\">timeval</a> <a class=\"id\" href=\"#start\">start</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timeval\">timeval</a> <a class=\"id\" href=\"#stop\">stop</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"PM: Saving image data pages (%u pages) ...     \",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_to_write\">nr_to_write</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a> = <a class=\"id\" href=\"#nr_to_write\">nr_to_write</a> / 100;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#m\">m</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nr_pages\">nr_pages</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#do_gettimeofday\">do_gettimeofday</a>(&amp;<a class=\"id\" href=\"#start\">start</a>);", 
"<span class=\"ts\"/>while (1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#snapshot_read_next\">snapshot_read_next</a>(<a class=\"id\" href=\"#snapshot\">snapshot</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> <= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#swap_write_page\">swap_write_page</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#data_of\">data_of</a>(*<a class=\"id\" href=\"#snapshot\">snapshot</a>), &amp;<a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#nr_pages\">nr_pages</a> % <a class=\"id\" href=\"#m\">m</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CONT\">KERN_CONT</a> \"\\b\\b\\b\\b%3d%%\", <a class=\"id\" href=\"#nr_pages\">nr_pages</a> / <a class=\"id\" href=\"#m\">m</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_pages\">nr_pages</a>++;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err2\">err2</a> = <a class=\"id\" href=\"#hib_wait_on_bio_chain\">hib_wait_on_bio_chain</a>(&amp;<a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#do_gettimeofday\">do_gettimeofday</a>(&amp;<a class=\"id\" href=\"#stop\">stop</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#err2\">err2</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CONT\">KERN_CONT</a> \"\\b\\b\\b\\bdone\\n\");", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CONT\">KERN_CONT</a> \"\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#swsusp_show_speed\">swsusp_show_speed</a>(&amp;<a class=\"id\" href=\"#start\">start</a>, &amp;<a class=\"id\" href=\"#stop\">stop</a>, <a class=\"id\" href=\"#nr_to_write\">nr_to_write</a>, \"Wrote\");", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>enough_swap - Make sure we have enough swap to save the image.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Returns TRUE or FALSE after checking the total amount of swap</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>space avaiable from the resume partition.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#enough_swap\">enough_swap</a>(unsigned int <a class=\"id\" href=\"#nr_pages\">nr_pages</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#free_swap\">free_swap</a> = <a class=\"id\" href=\"#count_swap_pages\">count_swap_pages</a>(<a class=\"id\" href=\"#root_swap\">root_swap</a>, 1);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"PM: Free swap pages: %u\\n\", <a class=\"id\" href=\"#free_swap\">free_swap</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#free_swap\">free_swap</a> &gt; <a class=\"id\" href=\"#nr_pages\">nr_pages</a> + <a class=\"id\" href=\"#PAGES_FOR_IO\">PAGES_FOR_IO</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>swsusp_write - Write entire image and metadata.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@flags: flags to pass to the \"boot\" kernel in the image header</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>It is important _NOT_ to umount filesystems at this point. We want</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>them synced (in case something goes wrong) but we DO not want to mark</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>filesystem clean: it is not. (And it does not matter, if we resume</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>correctly, we'll mark system clean, anyway.)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#swsusp_write\">swsusp_write</a>(unsigned int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#swap_map_handle\">swap_map_handle</a> <a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#snapshot_handle\">snapshot_handle</a> <a class=\"id\" href=\"#snapshot\">snapshot</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#swsusp_info\">swsusp_info</a> *<a class=\"id\" href=\"#header\">header</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#pages\">pages</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pages\">pages</a> = <a class=\"id\" href=\"#snapshot_get_image_size\">snapshot_get_image_size</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#get_swap_writer\">get_swap_writer</a>(&amp;<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"PM: Cannot get swap writer\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#enough_swap\">enough_swap</a>(<a class=\"id\" href=\"#pages\">pages</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"PM: Not enough free swap\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_finish\">out_finish</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#snapshot\">snapshot</a>, 0, sizeof(struct <a class=\"id\" href=\"#snapshot_handle\">snapshot_handle</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#snapshot_read_next\">snapshot_read_next</a>(&amp;<a class=\"id\" href=\"#snapshot\">snapshot</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> &lt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_finish\">out_finish</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#header\">header</a> = (struct <a class=\"id\" href=\"#swsusp_info\">swsusp_info</a> *)<a class=\"id\" href=\"#data_of\">data_of</a>(<a class=\"id\" href=\"#snapshot\">snapshot</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#swap_write_page\">swap_write_page</a>(&amp;<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#header\">header</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#save_image\">save_image</a>(&amp;<a class=\"id\" href=\"#handle\">handle</a>, &amp;<a class=\"id\" href=\"#snapshot\">snapshot</a>, <a class=\"id\" href=\"#pages\">pages</a> - 1);", 
"<a class=\"id\" href=\"#out_finish\">out_finish</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#swap_writer_finish\">swap_writer_finish</a>(&amp;<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#error\">error</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>The following functions allow us to read data using a swap map</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>in a file-alike way</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#release_swap_reader\">release_swap_reader</a>(struct <a class=\"id\" href=\"#swap_map_handle\">swap_map_handle</a> *<a class=\"id\" href=\"#handle\">handle</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#cur\">cur</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_page\">free_page</a>((unsigned long)<a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#cur\">cur</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#get_swap_reader\">get_swap_reader</a>(struct <a class=\"id\" href=\"#swap_map_handle\">swap_map_handle</a> *<a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int *<a class=\"id\" href=\"#flags_p\">flags_p</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#flags_p\">flags_p</a> = <a class=\"id\" href=\"#swsusp_header\">swsusp_header</a>-><a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#swsusp_header\">swsusp_header</a>-><a class=\"id\" href=\"#image\">image</a>) <span class=\"comment\">/* how can this happen? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#cur\">cur</a> = (struct <a class=\"id\" href=\"#swap_map_page\">swap_map_page</a> *)<a class=\"id\" href=\"#get_zeroed_page\">get_zeroed_page</a>(<a class=\"id\" href=\"#__GFP_WAIT\">__GFP_WAIT</a> | <a class=\"id\" href=\"#__GFP_HIGH\">__GFP_HIGH</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#cur\">cur</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#hib_bio_read_page\">hib_bio_read_page</a>(<a class=\"id\" href=\"#swsusp_header\">swsusp_header</a>-><a class=\"id\" href=\"#image\">image</a>, <a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#cur\">cur</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#release_swap_reader\">release_swap_reader</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#k\">k</a> = 0;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#swap_read_page\">swap_read_page</a>(struct <a class=\"id\" href=\"#swap_map_handle\">swap_map_handle</a> *<a class=\"id\" href=\"#handle\">handle</a>, void *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a> **<a class=\"id\" href=\"#bio_chain\">bio_chain</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#cur\">cur</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#entries\">entries</a>[<a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#k\">k</a>];", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#offset\">offset</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#hib_bio_read_page\">hib_bio_read_page</a>(<a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#bio_chain\">bio_chain</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>if (++<a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#k\">k</a> >= <a class=\"id\" href=\"#MAP_PAGE_ENTRIES\">MAP_PAGE_ENTRIES</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#hib_wait_on_bio_chain\">hib_wait_on_bio_chain</a>(<a class=\"id\" href=\"#bio_chain\">bio_chain</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#k\">k</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#next_swap\">next_swap</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#offset\">offset</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#release_swap_reader\">release_swap_reader</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (!<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#hib_bio_read_page\">hib_bio_read_page</a>(<a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#cur\">cur</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#swap_reader_finish\">swap_reader_finish</a>(struct <a class=\"id\" href=\"#swap_map_handle\">swap_map_handle</a> *<a class=\"id\" href=\"#handle\">handle</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_swap_reader\">release_swap_reader</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>load_image - load the image using the swap map handle</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@handle and the snapshot handle @snapshot</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>(assume there are @nr_pages pages to load)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#load_image\">load_image</a>(struct <a class=\"id\" href=\"#swap_map_handle\">swap_map_handle</a> *<a class=\"id\" href=\"#handle\">handle</a>,", 
"                      struct <a class=\"id\" href=\"#snapshot_handle\">snapshot_handle</a> *<a class=\"id\" href=\"#snapshot\">snapshot</a>,", 
"                      unsigned int <a class=\"id\" href=\"#nr_to_read\">nr_to_read</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#m\">m</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timeval\">timeval</a> <a class=\"id\" href=\"#start\">start</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timeval\">timeval</a> <a class=\"id\" href=\"#stop\">stop</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err2\">err2</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#nr_pages\">nr_pages</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"PM: Loading image data pages (%u pages) ...     \",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_to_read\">nr_to_read</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a> = <a class=\"id\" href=\"#nr_to_read\">nr_to_read</a> / 100;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#m\">m</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nr_pages\">nr_pages</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#do_gettimeofday\">do_gettimeofday</a>(&amp;<a class=\"id\" href=\"#start\">start</a>);", 
"<span class=\"ts\"/>for ( ; ; ) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#snapshot_write_next\">snapshot_write_next</a>(<a class=\"id\" href=\"#snapshot\">snapshot</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> <= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#swap_read_page\">swap_read_page</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#data_of\">data_of</a>(*<a class=\"id\" href=\"#snapshot\">snapshot</a>), &amp;<a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#snapshot\">snapshot</a>-><a class=\"id\" href=\"#sync_read\">sync_read</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#hib_wait_on_bio_chain\">hib_wait_on_bio_chain</a>(&amp;<a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#nr_pages\">nr_pages</a> % <a class=\"id\" href=\"#m\">m</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"\\b\\b\\b\\b%3d%%\", <a class=\"id\" href=\"#nr_pages\">nr_pages</a> / <a class=\"id\" href=\"#m\">m</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_pages\">nr_pages</a>++;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err2\">err2</a> = <a class=\"id\" href=\"#hib_wait_on_bio_chain\">hib_wait_on_bio_chain</a>(&amp;<a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#do_gettimeofday\">do_gettimeofday</a>(&amp;<a class=\"id\" href=\"#stop\">stop</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#err2\">err2</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"\\b\\b\\b\\bdone\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#snapshot_write_finalize\">snapshot_write_finalize</a>(<a class=\"id\" href=\"#snapshot\">snapshot</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#snapshot_image_loaded\">snapshot_image_loaded</a>(<a class=\"id\" href=\"#snapshot\">snapshot</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENODATA\">ENODATA</a>;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#swsusp_show_speed\">swsusp_show_speed</a>(&amp;<a class=\"id\" href=\"#start\">start</a>, &amp;<a class=\"id\" href=\"#stop\">stop</a>, <a class=\"id\" href=\"#nr_to_read\">nr_to_read</a>, \"Read\");", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>swsusp_read - read the hibernation image.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@flags_p: flags passed by the \"frozen\" kernel in the image header should</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>  be written into this memeory location</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#swsusp_read\">swsusp_read</a>(unsigned int *<a class=\"id\" href=\"#flags_p\">flags_p</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#swap_map_handle\">swap_map_handle</a> <a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#snapshot_handle\">snapshot_handle</a> <a class=\"id\" href=\"#snapshot\">snapshot</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#swsusp_info\">swsusp_info</a> *<a class=\"id\" href=\"#header\">header</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#snapshot\">snapshot</a>, 0, sizeof(struct <a class=\"id\" href=\"#snapshot_handle\">snapshot_handle</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#snapshot_write_next\">snapshot_write_next</a>(&amp;<a class=\"id\" href=\"#snapshot\">snapshot</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> &lt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a> &lt; 0 ? <a class=\"id\" href=\"#error\">error</a> : -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#header\">header</a> = (struct <a class=\"id\" href=\"#swsusp_info\">swsusp_info</a> *)<a class=\"id\" href=\"#data_of\">data_of</a>(<a class=\"id\" href=\"#snapshot\">snapshot</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#get_swap_reader\">get_swap_reader</a>(&amp;<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#flags_p\">flags_p</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#swap_read_page\">swap_read_page</a>(&amp;<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#header\">header</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#load_image\">load_image</a>(&amp;<a class=\"id\" href=\"#handle\">handle</a>, &amp;<a class=\"id\" href=\"#snapshot\">snapshot</a>, <a class=\"id\" href=\"#header\">header</a>-><a class=\"id\" href=\"#pages\">pages</a> - 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#swap_reader_finish\">swap_reader_finish</a>(&amp;<a class=\"id\" href=\"#handle\">handle</a>);", 
"<a class=\"id\" href=\"#end\">end</a>:", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"PM: Image successfully loaded\\n\");", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"PM: Error %d resuming\\n\", <a class=\"id\" href=\"#error\">error</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *      swsusp_check - Check for swsusp signature in the resume device</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#swsusp_check\">swsusp_check</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hib_resume_bdev\">hib_resume_bdev</a> = <a class=\"id\" href=\"#open_by_devnum\">open_by_devnum</a>(<a class=\"id\" href=\"#swsusp_resume_device\">swsusp_resume_device</a>, <a class=\"id\" href=\"#FMODE_READ\">FMODE_READ</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#hib_resume_bdev\">hib_resume_bdev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_blocksize\">set_blocksize</a>(<a class=\"id\" href=\"#hib_resume_bdev\">hib_resume_bdev</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#swsusp_header\">swsusp_header</a>, 0, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#hib_bio_read_page\">hib_bio_read_page</a>(<a class=\"id\" href=\"#swsusp_resume_block\">swsusp_resume_block</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#swsusp_header\">swsusp_header</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#put\">put</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#SWSUSP_SIG\">SWSUSP_SIG</a>, <a class=\"id\" href=\"#swsusp_header\">swsusp_header</a>-><a class=\"id\" href=\"#sig\">sig</a>, 10)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#swsusp_header\">swsusp_header</a>-><a class=\"id\" href=\"#sig\">sig</a>, <a class=\"id\" href=\"#swsusp_header\">swsusp_header</a>-><a class=\"id\" href=\"#orig_sig\">orig_sig</a>, 10);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Reset swap signature now */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#hib_bio_write_page\">hib_bio_write_page</a>(<a class=\"id\" href=\"#swsusp_resume_block\">swsusp_resume_block</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#swsusp_header\">swsusp_header</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#put\">put</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blkdev_put\">blkdev_put</a>(<a class=\"id\" href=\"#hib_resume_bdev\">hib_resume_bdev</a>, <a class=\"id\" href=\"#FMODE_READ\">FMODE_READ</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"PM: Signature found, resuming\\n\");", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#hib_resume_bdev\">hib_resume_bdev</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"PM: Error %d checking image file\\n\", <a class=\"id\" href=\"#error\">error</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>swsusp_close - close swap device.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#swsusp_close\">swsusp_close</a>(<a class=\"id\" href=\"#fmode_t\">fmode_t</a> <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#hib_resume_bdev\">hib_resume_bdev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"PM: Image device not initialised\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blkdev_put\">blkdev_put</a>(<a class=\"id\" href=\"#hib_resume_bdev\">hib_resume_bdev</a>, <a class=\"id\" href=\"#mode\">mode</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#swsusp_header_init\">swsusp_header_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#swsusp_header\">swsusp_header</a> = (struct <a class=\"id\" href=\"#swsusp_header\">swsusp_header</a>*) <a class=\"id\" href=\"#__get_free_page\">__get_free_page</a>(<a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#swsusp_header\">swsusp_header</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"Could not allocate memory for swsusp_header\\n\");", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<a class=\"id\" href=\"#core_initcall\">core_initcall</a>(<a class=\"id\" href=\"#swsusp_header_init\">swsusp_header_init</a>);", 
];
xr_frag_insert('l/55/96a78aa6507d0a0603ab78db8df4307505f981.xr', __xr_tmp);
