var __xr_tmp = [
"<span class=\"ts\"/><a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#cdev\">cdev</a> = <a class=\"id\" href=\"#cdev\">cdev</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sg_sysfs_valid\">sg_sysfs_valid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#sg_class_member\">sg_class_member</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_class_member\">sg_class_member</a> = <a class=\"id\" href=\"#device_create\">device_create</a>(<a class=\"id\" href=\"#sg_sysfs_class\">sg_sysfs_class</a>, <a class=\"id\" href=\"#cl_dev\">cl_dev</a>-><a class=\"id\" href=\"#parent\">parent</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#MKDEV\">MKDEV</a>(<a class=\"id\" href=\"#SCSI_GENERIC_MAJOR\">SCSI_GENERIC_MAJOR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#index\">index</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sdp\">sdp</a>, \"%s\", <a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#disk_name\">disk_name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#sg_class_member\">sg_class_member</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"sg_add: \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"device_create failed\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#sg_class_member\">sg_class_member</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cdev_add_err\">cdev_add_err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#sysfs_create_link\">sysfs_create_link</a>(&amp;<a class=\"id\" href=\"#scsidp\">scsidp</a>-><a class=\"id\" href=\"#sdev_gendev\">sdev_gendev</a>.<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#sg_class_member\">sg_class_member</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, \"generic\");", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"sg_add: unable to make symlink \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"'generic' back to sg%d\\n\", <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#index\">index</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"sg_add: sg_sys Invalid\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sdev_printk\">sdev_printk</a>(<a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a>, <a class=\"id\" href=\"#scsidp\">scsidp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    \"Attached scsi generic sg%d type %d\\n\", <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#index\">index</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#scsidp\">scsidp</a>-><a class=\"id\" href=\"#type\">type</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_set_drvdata\">dev_set_drvdata</a>(<a class=\"id\" href=\"#cl_dev\">cl_dev</a>, <a class=\"id\" href=\"#sdp\">sdp</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#cdev_add_err\">cdev_add_err</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_irqsave\">write_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#sg_index_lock\">sg_index_lock</a>, <a class=\"id\" href=\"#iflags\">iflags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idr_remove\">idr_remove</a>(&amp;<a class=\"id\" href=\"#sg_index_idr\">sg_index_idr</a>, <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#index\">index</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_irqrestore\">write_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#sg_index_lock\">sg_index_lock</a>, <a class=\"id\" href=\"#iflags\">iflags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sdp\">sdp</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_disk\">put_disk</a>(<a class=\"id\" href=\"#disk\">disk</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cdev\">cdev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdev_del\">cdev_del</a>(<a class=\"id\" href=\"#cdev\">cdev</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#sg_device_destroy\">sg_device_destroy</a>(struct <a class=\"id\" href=\"#kref\">kref</a> *<a class=\"id\" href=\"#kref\">kref</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sg_device\">sg_device</a> *<a class=\"id\" href=\"#sdp\">sdp</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#kref\">kref</a>, struct <a class=\"id\" href=\"#sg_device\">sg_device</a>, <a class=\"id\" href=\"#d_ref\">d_ref</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* CAUTION!  Note that the device can still be found via idr_find()</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * even though the refcount is 0.  Therefore, do idr_remove() BEFORE</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * any other cleanup.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_irqsave\">write_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#sg_index_lock\">sg_index_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idr_remove\">idr_remove</a>(&amp;<a class=\"id\" href=\"#sg_index_idr\">sg_index_idr</a>, <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#index\">index</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_irqrestore\">write_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#sg_index_lock\">sg_index_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_TIMEOUT\">SCSI_LOG_TIMEOUT</a>(3,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"sg_device_destroy: %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#disk_name\">disk_name</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_disk\">put_disk</a>(<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#disk\">disk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sdp\">sdp</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#sg_remove\">sg_remove</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#cl_dev\">cl_dev</a>, struct <a class=\"id\" href=\"#class_interface\">class_interface</a> *<a class=\"id\" href=\"#cl_intf\">cl_intf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#scsidp\">scsidp</a> = <a class=\"id\" href=\"#to_scsi_device\">to_scsi_device</a>(<a class=\"id\" href=\"#cl_dev\">cl_dev</a>-><a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_device\">Sg_device</a> *<a class=\"id\" href=\"#sdp\">sdp</a> = <a class=\"id\" href=\"#dev_get_drvdata\">dev_get_drvdata</a>(<a class=\"id\" href=\"#cl_dev\">cl_dev</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#iflags\">iflags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> *<a class=\"id\" href=\"#sfp\">sfp</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sdp\">sdp</a> || <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#detached\">detached</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_TIMEOUT\">SCSI_LOG_TIMEOUT</a>(3, <a class=\"id\" href=\"#printk\">printk</a>(\"sg_remove: %s\\n\", <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#disk_name\">disk_name</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Need a write lock to set sdp-&gt;detached. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_irqsave\">write_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#sg_index_lock\">sg_index_lock</a>, <a class=\"id\" href=\"#iflags\">iflags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#detached\">detached</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#sfp\">sfp</a>, &amp;<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#sfds\">sfds</a>, <a class=\"id\" href=\"#sfd_siblings\">sfd_siblings</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible\">wake_up_interruptible</a>(&amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#read_wait\">read_wait</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kill_fasync\">kill_fasync</a>(&amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#async_qp\">async_qp</a>, <a class=\"id\" href=\"#SIGPOLL\">SIGPOLL</a>, <a class=\"id\" href=\"#POLL_HUP\">POLL_HUP</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_irqrestore\">write_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#sg_index_lock\">sg_index_lock</a>, <a class=\"id\" href=\"#iflags\">iflags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_link\">sysfs_remove_link</a>(&amp;<a class=\"id\" href=\"#scsidp\">scsidp</a>-><a class=\"id\" href=\"#sdev_gendev\">sdev_gendev</a>.<a class=\"id\" href=\"#kobj\">kobj</a>, \"generic\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_destroy\">device_destroy</a>(<a class=\"id\" href=\"#sg_sysfs_class\">sg_sysfs_class</a>, <a class=\"id\" href=\"#MKDEV\">MKDEV</a>(<a class=\"id\" href=\"#SCSI_GENERIC_MAJOR\">SCSI_GENERIC_MAJOR</a>, <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#index\">index</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdev_del\">cdev_del</a>(<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#cdev\">cdev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#cdev\">cdev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_put_dev\">sg_put_dev</a>(<a class=\"id\" href=\"#sdp\">sdp</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#module_param_named\">module_param_named</a>(<a class=\"id\" href=\"#scatter_elem_sz\">scatter_elem_sz</a>, <a class=\"id\" href=\"#scatter_elem_sz\">scatter_elem_sz</a>, int, <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a> | <a class=\"id\" href=\"#S_IWUSR\">S_IWUSR</a>);", 
"<a class=\"id\" href=\"#module_param_named\">module_param_named</a>(<a class=\"id\" href=\"#def_reserved_size\">def_reserved_size</a>, <a class=\"id\" href=\"#def_reserved_size\">def_reserved_size</a>, int,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a> | <a class=\"id\" href=\"#S_IWUSR\">S_IWUSR</a>);", 
"<a class=\"id\" href=\"#module_param_named\">module_param_named</a>(<a class=\"id\" href=\"#allow_dio\">allow_dio</a>, <a class=\"id\" href=\"#sg_allow_dio\">sg_allow_dio</a>, int, <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a> | <a class=\"id\" href=\"#S_IWUSR\">S_IWUSR</a>);", 
"", 
"<a class=\"id\" href=\"#MODULE_AUTHOR\">MODULE_AUTHOR</a>(\"Douglas Gilbert\");", 
"<a class=\"id\" href=\"#MODULE_DESCRIPTION\">MODULE_DESCRIPTION</a>(\"SCSI generic (sg) driver\");", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
"<a class=\"id\" href=\"#MODULE_VERSION\">MODULE_VERSION</a>(<a class=\"id\" href=\"#SG_VERSION_STR\">SG_VERSION_STR</a>);", 
"<a class=\"id\" href=\"#MODULE_ALIAS_CHARDEV_MAJOR\">MODULE_ALIAS_CHARDEV_MAJOR</a>(<a class=\"id\" href=\"#SCSI_GENERIC_MAJOR\">SCSI_GENERIC_MAJOR</a>);", 
"", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#scatter_elem_sz\">scatter_elem_sz</a>, \"scatter gather element \"", 
"                \"size (default: max(SG_SCATTER_SZ, PAGE_SIZE))\");", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#def_reserved_size\">def_reserved_size</a>, \"size of buffer reserved for each fd\");", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#allow_dio\">allow_dio</a>, \"allow direct I/O (default: 0 (disallow))\");", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a>", 
"<a class=\"id\" href=\"#init_sg\">init_sg</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#scatter_elem_sz\">scatter_elem_sz</a> &lt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scatter_elem_sz\">scatter_elem_sz</a> = <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scatter_elem_sz_prev\">scatter_elem_sz_prev</a> = <a class=\"id\" href=\"#scatter_elem_sz\">scatter_elem_sz</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#def_reserved_size\">def_reserved_size</a> >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_big_buff\">sg_big_buff</a> = <a class=\"id\" href=\"#def_reserved_size\">def_reserved_size</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#def_reserved_size\">def_reserved_size</a> = <a class=\"id\" href=\"#sg_big_buff\">sg_big_buff</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#register_chrdev_region\">register_chrdev_region</a>(<a class=\"id\" href=\"#MKDEV\">MKDEV</a>(<a class=\"id\" href=\"#SCSI_GENERIC_MAJOR\">SCSI_GENERIC_MAJOR</a>, 0), ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#SG_MAX_DEVS\">SG_MAX_DEVS</a>, \"sg\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"        <a class=\"id\" href=\"#sg_sysfs_class\">sg_sysfs_class</a> = <a class=\"id\" href=\"#class_create\">class_create</a>(<a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>, \"scsi_generic\");", 
"        if ( <a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#sg_sysfs_class\">sg_sysfs_class</a>) ) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#sg_sysfs_class\">sg_sysfs_class</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_out\">err_out</a>;", 
"        }", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_sysfs_valid\">sg_sysfs_valid</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#scsi_register_interface\">scsi_register_interface</a>(&amp;<a class=\"id\" href=\"#sg_interface\">sg_interface</a>);", 
"<span class=\"ts\"/>if (0 == <a class=\"id\" href=\"#rc\">rc</a>) {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SCSI_PROC_FS\">CONFIG_SCSI_PROC_FS</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_proc_init\">sg_proc_init</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* CONFIG_SCSI_PROC_FS */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#class_destroy\">class_destroy</a>(<a class=\"id\" href=\"#sg_sysfs_class\">sg_sysfs_class</a>);", 
"<a class=\"id\" href=\"#err_out\">err_out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_chrdev_region\">unregister_chrdev_region</a>(<a class=\"id\" href=\"#MKDEV\">MKDEV</a>(<a class=\"id\" href=\"#SCSI_GENERIC_MAJOR\">SCSI_GENERIC_MAJOR</a>, 0), <a class=\"id\" href=\"#SG_MAX_DEVS\">SG_MAX_DEVS</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__exit\">__exit</a>", 
"<a class=\"id\" href=\"#exit_sg\">exit_sg</a>(void)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SCSI_PROC_FS\">CONFIG_SCSI_PROC_FS</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_proc_cleanup\">sg_proc_cleanup</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* CONFIG_SCSI_PROC_FS */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scsi_unregister_interface\">scsi_unregister_interface</a>(&amp;<a class=\"id\" href=\"#sg_interface\">sg_interface</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#class_destroy\">class_destroy</a>(<a class=\"id\" href=\"#sg_sysfs_class\">sg_sysfs_class</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_sysfs_valid\">sg_sysfs_valid</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_chrdev_region\">unregister_chrdev_region</a>(<a class=\"id\" href=\"#MKDEV\">MKDEV</a>(<a class=\"id\" href=\"#SCSI_GENERIC_MAJOR\">SCSI_GENERIC_MAJOR</a>, 0),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#SG_MAX_DEVS\">SG_MAX_DEVS</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idr_destroy\">idr_destroy</a>(&amp;<a class=\"id\" href=\"#sg_index_idr\">sg_index_idr</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#sg_start_req\">sg_start_req</a>(<a class=\"id\" href=\"#Sg_request\">Sg_request</a> *<a class=\"id\" href=\"#srp\">srp</a>, unsigned char *<a class=\"id\" href=\"#cmd\">cmd</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> *<a class=\"id\" href=\"#sfp\">sfp</a> = <a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#parentfp\">parentfp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_io_hdr_t\">sg_io_hdr_t</a> *<a class=\"id\" href=\"#hp\">hp</a> = &amp;<a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#header\">header</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#dxfer_len\">dxfer_len</a> = (int) <a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#dxfer_len\">dxfer_len</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#dxfer_dir\">dxfer_dir</a> = <a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#dxfer_direction\">dxfer_direction</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#iov_count\">iov_count</a> = <a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#iovec_count\">iovec_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_scatter_hold\">Sg_scatter_hold</a> *<a class=\"id\" href=\"#req_schp\">req_schp</a> = &amp;<a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_scatter_hold\">Sg_scatter_hold</a> *<a class=\"id\" href=\"#rsv_schp\">rsv_schp</a> = &amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#reserve\">reserve</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a> = <a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#parentdp\">parentdp</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#request_queue\">request_queue</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rq_map_data\">rq_map_data</a> *<a class=\"id\" href=\"#md\">md</a>, <a class=\"id\" href=\"#map_data\">map_data</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rw\">rw</a> = <a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#dxfer_direction\">dxfer_direction</a> == <a class=\"id\" href=\"#SG_DXFER_TO_DEV\">SG_DXFER_TO_DEV</a> ? <a class=\"id\" href=\"#WRITE\">WRITE</a> : <a class=\"id\" href=\"#READ\">READ</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_TIMEOUT\">SCSI_LOG_TIMEOUT</a>(4, <a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"sg_start_req: dxfer_len=%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#dxfer_len\">dxfer_len</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a> = <a class=\"id\" href=\"#blk_get_request\">blk_get_request</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#rw\">rw</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rq\">rq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#cmd_len\">cmd_len</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_len\">cmd_len</a> = <a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#cmd_len\">cmd_len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_type\">cmd_type</a> = <a class=\"id\" href=\"#REQ_TYPE_BLOCK_PC\">REQ_TYPE_BLOCK_PC</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#rq\">rq</a> = <a class=\"id\" href=\"#rq\">rq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#end_io_data\">end_io_data</a> = <a class=\"id\" href=\"#srp\">srp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#sense\">sense</a> = <a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#sense_b\">sense_b</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#retries\">retries</a> = <a class=\"id\" href=\"#SG_DEFAULT_RETRIES\">SG_DEFAULT_RETRIES</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#dxfer_len\">dxfer_len</a> <= 0) || (<a class=\"id\" href=\"#dxfer_dir\">dxfer_dir</a> == <a class=\"id\" href=\"#SG_DXFER_NONE\">SG_DXFER_NONE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sg_allow_dio\">sg_allow_dio</a> && <a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#SG_FLAG_DIRECT_IO\">SG_FLAG_DIRECT_IO</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#dxfer_dir\">dxfer_dir</a> != <a class=\"id\" href=\"#SG_DXFER_UNKNOWN\">SG_DXFER_UNKNOWN</a> && !<a class=\"id\" href=\"#iov_count\">iov_count</a> &&", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#parentdp\">parentdp</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#unchecked_isa_dma\">unchecked_isa_dma</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#blk_rq_aligned\">blk_rq_aligned</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#dxferp\">dxferp</a>, <a class=\"id\" href=\"#dxfer_len\">dxfer_len</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a> = &amp;<a class=\"id\" href=\"#map_data\">map_data</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#md\">md</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#sg_res_in_use\">sg_res_in_use</a>(<a class=\"id\" href=\"#sfp\">sfp</a>) && <a class=\"id\" href=\"#dxfer_len\">dxfer_len</a> <= <a class=\"id\" href=\"#rsv_schp\">rsv_schp</a>-><a class=\"id\" href=\"#bufflen\">bufflen</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_link_reserve\">sg_link_reserve</a>(<a class=\"id\" href=\"#sfp\">sfp</a>, <a class=\"id\" href=\"#srp\">srp</a>, <a class=\"id\" href=\"#dxfer_len\">dxfer_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#sg_build_indirect\">sg_build_indirect</a>(<a class=\"id\" href=\"#req_schp\">req_schp</a>, <a class=\"id\" href=\"#sfp\">sfp</a>, <a class=\"id\" href=\"#dxfer_len\">dxfer_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#pages\">pages</a> = <a class=\"id\" href=\"#req_schp\">req_schp</a>-><a class=\"id\" href=\"#pages\">pages</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#page_order\">page_order</a> = <a class=\"id\" href=\"#req_schp\">req_schp</a>-><a class=\"id\" href=\"#page_order\">page_order</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#nr_entries\">nr_entries</a> = <a class=\"id\" href=\"#req_schp\">req_schp</a>-><a class=\"id\" href=\"#k_use_sg\">k_use_sg</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#null_mapped\">null_mapped</a> = <a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#dxferp\">dxferp</a> ? 0 : 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dxfer_dir\">dxfer_dir</a> == <a class=\"id\" href=\"#SG_DXFER_TO_FROM_DEV\">SG_DXFER_TO_FROM_DEV</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#from_user\">from_user</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#from_user\">from_user</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#iov_count\">iov_count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#size\">size</a> = sizeof(struct <a class=\"id\" href=\"#sg_iovec\">sg_iovec</a>) * <a class=\"id\" href=\"#iov_count\">iov_count</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#iovec\">iovec</a> *<a class=\"id\" href=\"#iov\">iov</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iov\">iov</a> = <a class=\"id\" href=\"#memdup_user\">memdup_user</a>(<a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#dxferp\">dxferp</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#iov\">iov</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#iov\">iov</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#iov_length\">iov_length</a>(<a class=\"id\" href=\"#iov\">iov</a>, <a class=\"id\" href=\"#iov_count\">iov_count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#dxfer_len\">dxfer_len</a> &lt; <a class=\"id\" href=\"#len\">len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iov_count\">iov_count</a> = <a class=\"id\" href=\"#iov_shorten\">iov_shorten</a>(<a class=\"id\" href=\"#iov\">iov</a>, <a class=\"id\" href=\"#iov_count\">iov_count</a>, <a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#dxfer_len\">dxfer_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#dxfer_len\">dxfer_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#blk_rq_map_user_iov\">blk_rq_map_user_iov</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#rq\">rq</a>, <a class=\"id\" href=\"#md\">md</a>, (struct <a class=\"id\" href=\"#sg_iovec\">sg_iovec</a> *)<a class=\"id\" href=\"#iov\">iov</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#iov_count\">iov_count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#iov\">iov</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#blk_rq_map_user\">blk_rq_map_user</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#rq\">rq</a>, <a class=\"id\" href=\"#md\">md</a>, <a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#dxferp\">dxferp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#dxfer_len\">dxfer_len</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#res\">res</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#bio\">bio</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#md\">md</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req_schp\">req_schp</a>-><a class=\"id\" href=\"#dio_in_use\">dio_in_use</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#info\">info</a> |= <a class=\"id\" href=\"#SG_INFO_DIRECT_IO\">SG_INFO_DIRECT_IO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#sg_finish_rem_req\">sg_finish_rem_req</a>(<a class=\"id\" href=\"#Sg_request\">Sg_request</a> * <a class=\"id\" href=\"#srp\">srp</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> *<a class=\"id\" href=\"#sfp\">sfp</a> = <a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#parentfp\">parentfp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_scatter_hold\">Sg_scatter_hold</a> *<a class=\"id\" href=\"#req_schp\">req_schp</a> = &amp;<a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#data\">data</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_TIMEOUT\">SCSI_LOG_TIMEOUT</a>(4, <a class=\"id\" href=\"#printk\">printk</a>(\"sg_finish_rem_req: res_used=%d\\n\", (int) <a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#res_used\">res_used</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#rq\">rq</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#bio\">bio</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#blk_rq_unmap_user\">blk_rq_unmap_user</a>(<a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#bio\">bio</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_put_request\">blk_put_request</a>(<a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#res_used\">res_used</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_unlink_reserve\">sg_unlink_reserve</a>(<a class=\"id\" href=\"#sfp\">sfp</a>, <a class=\"id\" href=\"#srp\">srp</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_remove_scat\">sg_remove_scat</a>(<a class=\"id\" href=\"#req_schp\">req_schp</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_remove_request\">sg_remove_request</a>(<a class=\"id\" href=\"#sfp\">sfp</a>, <a class=\"id\" href=\"#srp\">srp</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#sg_build_sgat\">sg_build_sgat</a>(<a class=\"id\" href=\"#Sg_scatter_hold\">Sg_scatter_hold</a> * <a class=\"id\" href=\"#schp\">schp</a>, const <a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> * <a class=\"id\" href=\"#sfp\">sfp</a>, int <a class=\"id\" href=\"#tablesize\">tablesize</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#sg_bufflen\">sg_bufflen</a> = <a class=\"id\" href=\"#tablesize\">tablesize</a> * sizeof(struct <a class=\"id\" href=\"#page\">page</a> *);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_flags\">gfp_flags</a> = <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a> | <a class=\"id\" href=\"#__GFP_NOWARN\">__GFP_NOWARN</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#schp\">schp</a>-><a class=\"id\" href=\"#pages\">pages</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(<a class=\"id\" href=\"#sg_bufflen\">sg_bufflen</a>, <a class=\"id\" href=\"#gfp_flags\">gfp_flags</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#schp\">schp</a>-><a class=\"id\" href=\"#pages\">pages</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#schp\">schp</a>-><a class=\"id\" href=\"#sglist_len\">sglist_len</a> = <a class=\"id\" href=\"#sg_bufflen\">sg_bufflen</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tablesize\">tablesize</a>;<span class=\"ts\"/><span class=\"comment\">/* number of scat_gath elements allocated */</span>", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#sg_build_indirect\">sg_build_indirect</a>(<a class=\"id\" href=\"#Sg_scatter_hold\">Sg_scatter_hold</a> * <a class=\"id\" href=\"#schp\">schp</a>, <a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> * <a class=\"id\" href=\"#sfp\">sfp</a>, int <a class=\"id\" href=\"#buff_size\">buff_size</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret_sz\">ret_sz</a> = 0, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#rem_sz\">rem_sz</a>, <a class=\"id\" href=\"#num\">num</a>, <a class=\"id\" href=\"#mx_sc_elems\">mx_sc_elems</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#sg_tablesize\">sg_tablesize</a> = <a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#parentdp\">parentdp</a>-><a class=\"id\" href=\"#sg_tablesize\">sg_tablesize</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#blk_size\">blk_size</a> = <a class=\"id\" href=\"#buff_size\">buff_size</a>, <a class=\"id\" href=\"#order\">order</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a> = <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a> | <a class=\"id\" href=\"#__GFP_COMP\">__GFP_COMP</a> | <a class=\"id\" href=\"#__GFP_NOWARN\">__GFP_NOWARN</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#blk_size\">blk_size</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>if (0 == <a class=\"id\" href=\"#blk_size\">blk_size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>++<a class=\"id\" href=\"#blk_size\">blk_size</a>;<span class=\"ts\"/><span class=\"comment\">/* don't know why */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* round request up to next highest SG_SECTOR_SZ byte boundary */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_size\">blk_size</a> = <a class=\"id\" href=\"#ALIGN\">ALIGN</a>(<a class=\"id\" href=\"#blk_size\">blk_size</a>, <a class=\"id\" href=\"#SG_SECTOR_SZ\">SG_SECTOR_SZ</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_TIMEOUT\">SCSI_LOG_TIMEOUT</a>(4, <a class=\"id\" href=\"#printk\">printk</a>(\"sg_build_indirect: buff_size=%d, blk_size=%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#buff_size\">buff_size</a>, <a class=\"id\" href=\"#blk_size\">blk_size</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* N.B. ret_sz carried into this block ... */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mx_sc_elems\">mx_sc_elems</a> = <a class=\"id\" href=\"#sg_build_sgat\">sg_build_sgat</a>(<a class=\"id\" href=\"#schp\">schp</a>, <a class=\"id\" href=\"#sfp\">sfp</a>, <a class=\"id\" href=\"#sg_tablesize\">sg_tablesize</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mx_sc_elems\">mx_sc_elems</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#mx_sc_elems\">mx_sc_elems</a>;<span class=\"ts\"/><span class=\"comment\">/* most likely -ENOMEM */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#num\">num</a> = <a class=\"id\" href=\"#scatter_elem_sz\">scatter_elem_sz</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#num\">num</a> != <a class=\"id\" href=\"#scatter_elem_sz_prev\">scatter_elem_sz_prev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#num\">num</a> &lt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scatter_elem_sz\">scatter_elem_sz</a> = <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scatter_elem_sz_prev\">scatter_elem_sz_prev</a> = <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scatter_elem_sz_prev\">scatter_elem_sz_prev</a> = <a class=\"id\" href=\"#num\">num</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#low_dma\">low_dma</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gfp_mask\">gfp_mask</a> |= <a class=\"id\" href=\"#GFP_DMA\">GFP_DMA</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_ADMIN\">CAP_SYS_ADMIN</a>) || !<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_RAWIO\">CAP_SYS_RAWIO</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gfp_mask\">gfp_mask</a> |= <a class=\"id\" href=\"#__GFP_ZERO\">__GFP_ZERO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#order\">order</a> = <a class=\"id\" href=\"#get_order\">get_order</a>(<a class=\"id\" href=\"#num\">num</a>);", 
"<a class=\"id\" href=\"#retry\">retry</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret_sz\">ret_sz</a> = 1 << (<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a> + <a class=\"id\" href=\"#order\">order</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#k\">k</a> = 0, <a class=\"id\" href=\"#rem_sz\">rem_sz</a> = <a class=\"id\" href=\"#blk_size\">blk_size</a>; <a class=\"id\" href=\"#rem_sz\">rem_sz</a> &gt; 0 && <a class=\"id\" href=\"#k\">k</a> &lt; <a class=\"id\" href=\"#mx_sc_elems\">mx_sc_elems</a>;", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#k\">k</a>++, <a class=\"id\" href=\"#rem_sz\">rem_sz</a> -= <a class=\"id\" href=\"#ret_sz\">ret_sz</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num\">num</a> = (<a class=\"id\" href=\"#rem_sz\">rem_sz</a> &gt; <a class=\"id\" href=\"#scatter_elem_sz_prev\">scatter_elem_sz_prev</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scatter_elem_sz_prev\">scatter_elem_sz_prev</a> : <a class=\"id\" href=\"#rem_sz\">rem_sz</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schp\">schp</a>-><a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#k\">k</a>] = <a class=\"id\" href=\"#alloc_pages\">alloc_pages</a>(<a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>, <a class=\"id\" href=\"#order\">order</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#schp\">schp</a>-><a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#k\">k</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#num\">num</a> == <a class=\"id\" href=\"#scatter_elem_sz_prev\">scatter_elem_sz_prev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#ret_sz\">ret_sz</a> &gt; <a class=\"id\" href=\"#scatter_elem_sz_prev\">scatter_elem_sz_prev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scatter_elem_sz\">scatter_elem_sz</a> = <a class=\"id\" href=\"#ret_sz\">ret_sz</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scatter_elem_sz_prev\">scatter_elem_sz_prev</a> = <a class=\"id\" href=\"#ret_sz\">ret_sz</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_TIMEOUT\">SCSI_LOG_TIMEOUT</a>(5, <a class=\"id\" href=\"#printk\">printk</a>(\"sg_build_indirect: k=%d, num=%d, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"ret_sz=%d\\n\", <a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#num\">num</a>, <a class=\"id\" href=\"#ret_sz\">ret_sz</a>));", 
"<span class=\"ts\"/>}<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* end of for loop */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#schp\">schp</a>-><a class=\"id\" href=\"#page_order\">page_order</a> = <a class=\"id\" href=\"#order\">order</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#schp\">schp</a>-><a class=\"id\" href=\"#k_use_sg\">k_use_sg</a> = <a class=\"id\" href=\"#k\">k</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_TIMEOUT\">SCSI_LOG_TIMEOUT</a>(5, <a class=\"id\" href=\"#printk\">printk</a>(\"sg_build_indirect: k_use_sg=%d, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"rem_sz=%d\\n\", <a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#rem_sz\">rem_sz</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#schp\">schp</a>-><a class=\"id\" href=\"#bufflen\">bufflen</a> = <a class=\"id\" href=\"#blk_size\">blk_size</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rem_sz\">rem_sz</a> &gt; 0)<span class=\"ts\"/><span class=\"comment\">/* must have failed */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>return 0;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#k\">k</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__free_pages\">__free_pages</a>(<a class=\"id\" href=\"#schp\">schp</a>-><a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#order\">order</a>);", 
"", 
"<span class=\"ts\"/>if (--<a class=\"id\" href=\"#order\">order</a> >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#retry\">retry</a>;", 
"", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"}", 
"", 
"static void", 
"<a class=\"id\" href=\"#sg_remove_scat\">sg_remove_scat</a>(<a class=\"id\" href=\"#Sg_scatter_hold\">Sg_scatter_hold</a> * <a class=\"id\" href=\"#schp\">schp</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_TIMEOUT\">SCSI_LOG_TIMEOUT</a>(4, <a class=\"id\" href=\"#printk\">printk</a>(\"sg_remove_scat: k_use_sg=%d\\n\", <a class=\"id\" href=\"#schp\">schp</a>-><a class=\"id\" href=\"#k_use_sg\">k_use_sg</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#schp\">schp</a>-><a class=\"id\" href=\"#pages\">pages</a> && <a class=\"id\" href=\"#schp\">schp</a>-><a class=\"id\" href=\"#sglist_len\">sglist_len</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#schp\">schp</a>-><a class=\"id\" href=\"#dio_in_use\">dio_in_use</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#k\">k</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#k\">k</a> = 0; <a class=\"id\" href=\"#k\">k</a> &lt; <a class=\"id\" href=\"#schp\">schp</a>-><a class=\"id\" href=\"#k_use_sg\">k_use_sg</a> && <a class=\"id\" href=\"#schp\">schp</a>-><a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#k\">k</a>]; <a class=\"id\" href=\"#k\">k</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_TIMEOUT\">SCSI_LOG_TIMEOUT</a>(5, <a class=\"id\" href=\"#printk\">printk</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"sg_remove_scat: k=%d, pg=0x%p\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#schp\">schp</a>-><a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#k\">k</a>]));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__free_pages\">__free_pages</a>(<a class=\"id\" href=\"#schp\">schp</a>-><a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#k\">k</a>], <a class=\"id\" href=\"#schp\">schp</a>-><a class=\"id\" href=\"#page_order\">page_order</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#schp\">schp</a>-><a class=\"id\" href=\"#pages\">pages</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#schp\">schp</a>, 0, sizeof (*<a class=\"id\" href=\"#schp\">schp</a>));", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#sg_read_oxfer\">sg_read_oxfer</a>(<a class=\"id\" href=\"#Sg_request\">Sg_request</a> * <a class=\"id\" href=\"#srp\">srp</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#outp\">outp</a>, int <a class=\"id\" href=\"#num_read_xfer\">num_read_xfer</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_scatter_hold\">Sg_scatter_hold</a> *<a class=\"id\" href=\"#schp\">schp</a> = &amp;<a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#num\">num</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_TIMEOUT\">SCSI_LOG_TIMEOUT</a>(4, <a class=\"id\" href=\"#printk\">printk</a>(\"sg_read_oxfer: num_read_xfer=%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#num_read_xfer\">num_read_xfer</a>));", 
"<span class=\"ts\"/>if ((!<a class=\"id\" href=\"#outp\">outp</a>) || (<a class=\"id\" href=\"#num_read_xfer\">num_read_xfer</a> <= 0))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#num\">num</a> = 1 << (<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a> + <a class=\"id\" href=\"#schp\">schp</a>-><a class=\"id\" href=\"#page_order\">page_order</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#k\">k</a> = 0; <a class=\"id\" href=\"#k\">k</a> &lt; <a class=\"id\" href=\"#schp\">schp</a>-><a class=\"id\" href=\"#k_use_sg\">k_use_sg</a> && <a class=\"id\" href=\"#schp\">schp</a>-><a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#k\">k</a>]; <a class=\"id\" href=\"#k\">k</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#num\">num</a> &gt; <a class=\"id\" href=\"#num_read_xfer\">num_read_xfer</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#__copy_to_user\">__copy_to_user</a>(<a class=\"id\" href=\"#outp\">outp</a>, <a class=\"id\" href=\"#page_address\">page_address</a>(<a class=\"id\" href=\"#schp\">schp</a>-><a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#k\">k</a>]),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#num_read_xfer\">num_read_xfer</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#__copy_to_user\">__copy_to_user</a>(<a class=\"id\" href=\"#outp\">outp</a>, <a class=\"id\" href=\"#page_address\">page_address</a>(<a class=\"id\" href=\"#schp\">schp</a>-><a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#k\">k</a>]),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#num\">num</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_read_xfer\">num_read_xfer</a> -= <a class=\"id\" href=\"#num\">num</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#num_read_xfer\">num_read_xfer</a> <= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outp\">outp</a> += <a class=\"id\" href=\"#num\">num</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void", 
"<a class=\"id\" href=\"#sg_build_reserve\">sg_build_reserve</a>(<a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> * <a class=\"id\" href=\"#sfp\">sfp</a>, int <a class=\"id\" href=\"#req_size\">req_size</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_scatter_hold\">Sg_scatter_hold</a> *<a class=\"id\" href=\"#schp\">schp</a> = &amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#reserve\">reserve</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_TIMEOUT\">SCSI_LOG_TIMEOUT</a>(4, <a class=\"id\" href=\"#printk\">printk</a>(\"sg_build_reserve: req_size=%d\\n\", <a class=\"id\" href=\"#req_size\">req_size</a>));", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#req_size\">req_size</a> &lt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req_size\">req_size</a> = <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (0 == <a class=\"id\" href=\"#sg_build_indirect\">sg_build_indirect</a>(<a class=\"id\" href=\"#schp\">schp</a>, <a class=\"id\" href=\"#sfp\">sfp</a>, <a class=\"id\" href=\"#req_size\">req_size</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_remove_scat\">sg_remove_scat</a>(<a class=\"id\" href=\"#schp\">schp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req_size\">req_size</a> >>= 1;<span class=\"ts\"/><span class=\"comment\">/* divide by 2 */</span>", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#req_size\">req_size</a> &gt; (<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> / 2));", 
"}", 
"", 
"static void", 
"<a class=\"id\" href=\"#sg_link_reserve\">sg_link_reserve</a>(<a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> * <a class=\"id\" href=\"#sfp\">sfp</a>, <a class=\"id\" href=\"#Sg_request\">Sg_request</a> * <a class=\"id\" href=\"#srp\">srp</a>, int <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_scatter_hold\">Sg_scatter_hold</a> *<a class=\"id\" href=\"#req_schp\">req_schp</a> = &amp;<a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_scatter_hold\">Sg_scatter_hold</a> *<a class=\"id\" href=\"#rsv_schp\">rsv_schp</a> = &amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#reserve\">reserve</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#num\">num</a>, <a class=\"id\" href=\"#rem\">rem</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#res_used\">res_used</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_TIMEOUT\">SCSI_LOG_TIMEOUT</a>(4, <a class=\"id\" href=\"#printk\">printk</a>(\"sg_link_reserve: size=%d\\n\", <a class=\"id\" href=\"#size\">size</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rem\">rem</a> = <a class=\"id\" href=\"#size\">size</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#num\">num</a> = 1 << (<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a> + <a class=\"id\" href=\"#rsv_schp\">rsv_schp</a>-><a class=\"id\" href=\"#page_order\">page_order</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#k\">k</a> = 0; <a class=\"id\" href=\"#k\">k</a> &lt; <a class=\"id\" href=\"#rsv_schp\">rsv_schp</a>-><a class=\"id\" href=\"#k_use_sg\">k_use_sg</a>; <a class=\"id\" href=\"#k\">k</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rem\">rem</a> <= <a class=\"id\" href=\"#num\">num</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req_schp\">req_schp</a>-><a class=\"id\" href=\"#k_use_sg\">k_use_sg</a> = <a class=\"id\" href=\"#k\">k</a> + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req_schp\">req_schp</a>-><a class=\"id\" href=\"#sglist_len\">sglist_len</a> = <a class=\"id\" href=\"#rsv_schp\">rsv_schp</a>-><a class=\"id\" href=\"#sglist_len\">sglist_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req_schp\">req_schp</a>-><a class=\"id\" href=\"#pages\">pages</a> = <a class=\"id\" href=\"#rsv_schp\">rsv_schp</a>-><a class=\"id\" href=\"#pages\">pages</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req_schp\">req_schp</a>-><a class=\"id\" href=\"#bufflen\">bufflen</a> = <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req_schp\">req_schp</a>-><a class=\"id\" href=\"#page_order\">page_order</a> = <a class=\"id\" href=\"#rsv_schp\">rsv_schp</a>-><a class=\"id\" href=\"#page_order\">page_order</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rem\">rem</a> -= <a class=\"id\" href=\"#num\">num</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#k\">k</a> >= <a class=\"id\" href=\"#rsv_schp\">rsv_schp</a>-><a class=\"id\" href=\"#k_use_sg\">k_use_sg</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_TIMEOUT\">SCSI_LOG_TIMEOUT</a>(1, <a class=\"id\" href=\"#printk\">printk</a>(\"sg_link_reserve: BAD size\\n\"));", 
"}", 
"", 
"static void", 
"<a class=\"id\" href=\"#sg_unlink_reserve\">sg_unlink_reserve</a>(<a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> * <a class=\"id\" href=\"#sfp\">sfp</a>, <a class=\"id\" href=\"#Sg_request\">Sg_request</a> * <a class=\"id\" href=\"#srp\">srp</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_scatter_hold\">Sg_scatter_hold</a> *<a class=\"id\" href=\"#req_schp\">req_schp</a> = &amp;<a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#data\">data</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_TIMEOUT\">SCSI_LOG_TIMEOUT</a>(4, <a class=\"id\" href=\"#printk\">printk</a>(\"sg_unlink_reserve: req->k_use_sg=%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (int) <a class=\"id\" href=\"#req_schp\">req_schp</a>-><a class=\"id\" href=\"#k_use_sg\">k_use_sg</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#req_schp\">req_schp</a>-><a class=\"id\" href=\"#k_use_sg\">k_use_sg</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#req_schp\">req_schp</a>-><a class=\"id\" href=\"#bufflen\">bufflen</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#req_schp\">req_schp</a>-><a class=\"id\" href=\"#pages\">pages</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#req_schp\">req_schp</a>-><a class=\"id\" href=\"#page_order\">page_order</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#req_schp\">req_schp</a>-><a class=\"id\" href=\"#sglist_len\">sglist_len</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#save_scat_len\">save_scat_len</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#res_used\">res_used</a> = 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#Sg_request\">Sg_request</a> *", 
"<a class=\"id\" href=\"#sg_get_rq_mark\">sg_get_rq_mark</a>(<a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> * <a class=\"id\" href=\"#sfp\">sfp</a>, int <a class=\"id\" href=\"#pack_id\">pack_id</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_request\">Sg_request</a> *<a class=\"id\" href=\"#resp\">resp</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#iflags\">iflags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_irqsave\">write_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#rq_list_lock\">rq_list_lock</a>, <a class=\"id\" href=\"#iflags\">iflags</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#resp\">resp</a> = <a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#headrp\">headrp</a>; <a class=\"id\" href=\"#resp\">resp</a>; <a class=\"id\" href=\"#resp\">resp</a> = <a class=\"id\" href=\"#resp\">resp</a>-><a class=\"id\" href=\"#nextrp\">nextrp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* look for requests that are ready + not SG_IO owned */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((1 == <a class=\"id\" href=\"#resp\">resp</a>-><a class=\"id\" href=\"#done\">done</a>) && (!<a class=\"id\" href=\"#resp\">resp</a>-><a class=\"id\" href=\"#sg_io_owned\">sg_io_owned</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    ((-1 == <a class=\"id\" href=\"#pack_id\">pack_id</a>) || (<a class=\"id\" href=\"#resp\">resp</a>-><a class=\"id\" href=\"#header\">header</a>.<a class=\"id\" href=\"#pack_id\">pack_id</a> == <a class=\"id\" href=\"#pack_id\">pack_id</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#resp\">resp</a>-><a class=\"id\" href=\"#done\">done</a> = 2;<span class=\"ts\"/><span class=\"comment\">/* guard against other readers */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_irqrestore\">write_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#rq_list_lock\">rq_list_lock</a>, <a class=\"id\" href=\"#iflags\">iflags</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#resp\">resp</a>;", 
"}", 
"", 
"<span class=\"comment\">/* always adds to end of list */</span>", 
"static <a class=\"id\" href=\"#Sg_request\">Sg_request</a> *", 
"<a class=\"id\" href=\"#sg_add_request\">sg_add_request</a>(<a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> * <a class=\"id\" href=\"#sfp\">sfp</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#k\">k</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#iflags\">iflags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_request\">Sg_request</a> *<a class=\"id\" href=\"#resp\">resp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_request\">Sg_request</a> *<a class=\"id\" href=\"#rp\">rp</a> = <a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#req_arr\">req_arr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_irqsave\">write_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#rq_list_lock\">rq_list_lock</a>, <a class=\"id\" href=\"#iflags\">iflags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#resp\">resp</a> = <a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#headrp\">headrp</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#resp\">resp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#rp\">rp</a>, 0, sizeof (<a class=\"id\" href=\"#Sg_request\">Sg_request</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rp\">rp</a>-><a class=\"id\" href=\"#parentfp\">parentfp</a> = <a class=\"id\" href=\"#sfp\">sfp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#resp\">resp</a> = <a class=\"id\" href=\"#rp\">rp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#headrp\">headrp</a> = <a class=\"id\" href=\"#resp\">resp</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (0 == <a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#cmd_q\">cmd_q</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#resp\">resp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;<span class=\"ts\"/><span class=\"comment\">/* command queuing disallowed */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#k\">k</a> = 0; <a class=\"id\" href=\"#k\">k</a> &lt; <a class=\"id\" href=\"#SG_MAX_QUEUE\">SG_MAX_QUEUE</a>; ++<a class=\"id\" href=\"#k\">k</a>, ++<a class=\"id\" href=\"#rp\">rp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#rp\">rp</a>-><a class=\"id\" href=\"#parentfp\">parentfp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#k\">k</a> &lt; <a class=\"id\" href=\"#SG_MAX_QUEUE\">SG_MAX_QUEUE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#rp\">rp</a>, 0, sizeof (<a class=\"id\" href=\"#Sg_request\">Sg_request</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rp\">rp</a>-><a class=\"id\" href=\"#parentfp\">parentfp</a> = <a class=\"id\" href=\"#sfp\">sfp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#resp\">resp</a>-><a class=\"id\" href=\"#nextrp\">nextrp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#resp\">resp</a> = <a class=\"id\" href=\"#resp\">resp</a>-><a class=\"id\" href=\"#nextrp\">nextrp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#resp\">resp</a>-><a class=\"id\" href=\"#nextrp\">nextrp</a> = <a class=\"id\" href=\"#rp\">rp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#resp\">resp</a> = <a class=\"id\" href=\"#rp\">rp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#resp\">resp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#resp\">resp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#resp\">resp</a>-><a class=\"id\" href=\"#nextrp\">nextrp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#resp\">resp</a>-><a class=\"id\" href=\"#header\">header</a>.<a class=\"id\" href=\"#duration\">duration</a> = <a class=\"id\" href=\"#jiffies_to_msecs\">jiffies_to_msecs</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_irqrestore\">write_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#rq_list_lock\">rq_list_lock</a>, <a class=\"id\" href=\"#iflags\">iflags</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#resp\">resp</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Return of 1 for found; 0 for not found */</span>", 
"static int", 
"<a class=\"id\" href=\"#sg_remove_request\">sg_remove_request</a>(<a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> * <a class=\"id\" href=\"#sfp\">sfp</a>, <a class=\"id\" href=\"#Sg_request\">Sg_request</a> * <a class=\"id\" href=\"#srp\">srp</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_request\">Sg_request</a> *<a class=\"id\" href=\"#prev_rp\">prev_rp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_request\">Sg_request</a> *<a class=\"id\" href=\"#rp\">rp</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#iflags\">iflags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#res\">res</a> = 0;", 
"", 
"<span class=\"ts\"/>if ((!<a class=\"id\" href=\"#sfp\">sfp</a>) || (!<a class=\"id\" href=\"#srp\">srp</a>) || (!<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#headrp\">headrp</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_irqsave\">write_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#rq_list_lock\">rq_list_lock</a>, <a class=\"id\" href=\"#iflags\">iflags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#prev_rp\">prev_rp</a> = <a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#headrp\">headrp</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#srp\">srp</a> == <a class=\"id\" href=\"#prev_rp\">prev_rp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#headrp\">headrp</a> = <a class=\"id\" href=\"#prev_rp\">prev_rp</a>-><a class=\"id\" href=\"#nextrp\">nextrp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prev_rp\">prev_rp</a>-><a class=\"id\" href=\"#parentfp\">parentfp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = 1;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>while ((<a class=\"id\" href=\"#rp\">rp</a> = <a class=\"id\" href=\"#prev_rp\">prev_rp</a>-><a class=\"id\" href=\"#nextrp\">nextrp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#srp\">srp</a> == <a class=\"id\" href=\"#rp\">rp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prev_rp\">prev_rp</a>-><a class=\"id\" href=\"#nextrp\">nextrp</a> = <a class=\"id\" href=\"#rp\">rp</a>-><a class=\"id\" href=\"#nextrp\">nextrp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rp\">rp</a>-><a class=\"id\" href=\"#parentfp\">parentfp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prev_rp\">prev_rp</a> = <a class=\"id\" href=\"#rp\">rp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_irqrestore\">write_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#rq_list_lock\">rq_list_lock</a>, <a class=\"id\" href=\"#iflags\">iflags</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> *", 
"<a class=\"id\" href=\"#sg_add_sfp\">sg_add_sfp</a>(<a class=\"id\" href=\"#Sg_device\">Sg_device</a> * <a class=\"id\" href=\"#sdp\">sdp</a>, int <a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> *<a class=\"id\" href=\"#sfp\">sfp</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#iflags\">iflags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#bufflen\">bufflen</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sfp\">sfp</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#sfp\">sfp</a>), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a> | <a class=\"id\" href=\"#__GFP_NOWARN\">__GFP_NOWARN</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sfp\">sfp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_waitqueue_head\">init_waitqueue_head</a>(&amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#read_wait\">read_wait</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rwlock_init\">rwlock_init</a>(&amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#rq_list_lock\">rq_list_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kref_init\">kref_init</a>(&amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#f_ref\">f_ref</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#timeout\">timeout</a> = <a class=\"id\" href=\"#SG_DEFAULT_TIMEOUT\">SG_DEFAULT_TIMEOUT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#timeout_user\">timeout_user</a> = <a class=\"id\" href=\"#SG_DEFAULT_TIMEOUT_USER\">SG_DEFAULT_TIMEOUT_USER</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#force_packid\">force_packid</a> = <a class=\"id\" href=\"#SG_DEF_FORCE_PACK_ID\">SG_DEF_FORCE_PACK_ID</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#low_dma\">low_dma</a> = (<a class=\"id\" href=\"#SG_DEF_FORCE_LOW_DMA\">SG_DEF_FORCE_LOW_DMA</a> == 0) ?", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#unchecked_isa_dma\">unchecked_isa_dma</a> : 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#cmd_q\">cmd_q</a> = <a class=\"id\" href=\"#SG_DEF_COMMAND_Q\">SG_DEF_COMMAND_Q</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#keep_orphan\">keep_orphan</a> = <a class=\"id\" href=\"#SG_DEF_KEEP_ORPHAN\">SG_DEF_KEEP_ORPHAN</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#parentdp\">parentdp</a> = <a class=\"id\" href=\"#sdp\">sdp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_irqsave\">write_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#sg_index_lock\">sg_index_lock</a>, <a class=\"id\" href=\"#iflags\">iflags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#sfd_siblings\">sfd_siblings</a>, &amp;<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#sfds\">sfds</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_irqrestore\">write_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#sg_index_lock\">sg_index_lock</a>, <a class=\"id\" href=\"#iflags\">iflags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_TIMEOUT\">SCSI_LOG_TIMEOUT</a>(3, <a class=\"id\" href=\"#printk\">printk</a>(\"sg_add_sfp: sfp=0x%p\\n\", <a class=\"id\" href=\"#sfp\">sfp</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#sg_big_buff\">sg_big_buff</a> != <a class=\"id\" href=\"#def_reserved_size\">def_reserved_size</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_big_buff\">sg_big_buff</a> = <a class=\"id\" href=\"#def_reserved_size\">def_reserved_size</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bufflen\">bufflen</a> = <a class=\"id\" href=\"#min_t\">min_t</a>(int, <a class=\"id\" href=\"#sg_big_buff\">sg_big_buff</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#queue_max_sectors\">queue_max_sectors</a>(<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#request_queue\">request_queue</a>) * 512);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_build_reserve\">sg_build_reserve</a>(<a class=\"id\" href=\"#sfp\">sfp</a>, <a class=\"id\" href=\"#bufflen\">bufflen</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_TIMEOUT\">SCSI_LOG_TIMEOUT</a>(3, <a class=\"id\" href=\"#printk\">printk</a>(\"sg_add_sfp:   bufflen=%d, k_use_sg=%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#reserve\">reserve</a>.<a class=\"id\" href=\"#bufflen\">bufflen</a>, <a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#reserve\">reserve</a>.<a class=\"id\" href=\"#k_use_sg\">k_use_sg</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kref_get\">kref_get</a>(&amp;<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#d_ref\">d_ref</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__module_get\">__module_get</a>(<a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sfp\">sfp</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#sg_remove_sfp_usercontext\">sg_remove_sfp_usercontext</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sg_fd\">sg_fd</a> *<a class=\"id\" href=\"#sfp\">sfp</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#work\">work</a>, struct <a class=\"id\" href=\"#sg_fd\">sg_fd</a>, <a class=\"id\" href=\"#ew\">ew</a>.<a class=\"id\" href=\"#work\">work</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sg_device\">sg_device</a> *<a class=\"id\" href=\"#sdp\">sdp</a> = <a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#parentdp\">parentdp</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Cleanup any responses which were never read(). */</span>", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#headrp\">headrp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_finish_rem_req\">sg_finish_rem_req</a>(<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#headrp\">headrp</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#reserve\">reserve</a>.<a class=\"id\" href=\"#bufflen\">bufflen</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_TIMEOUT\">SCSI_LOG_TIMEOUT</a>(6,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"sg_remove_sfp:    bufflen=%d, k_use_sg=%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(int) <a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#reserve\">reserve</a>.<a class=\"id\" href=\"#bufflen\">bufflen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(int) <a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#reserve\">reserve</a>.<a class=\"id\" href=\"#k_use_sg\">k_use_sg</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_remove_scat\">sg_remove_scat</a>(&amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#reserve\">reserve</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_TIMEOUT\">SCSI_LOG_TIMEOUT</a>(6,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"sg_remove_sfp: %s, sfp=0x%p\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#disk_name\">disk_name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sfp\">sfp</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sfp\">sfp</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scsi_device_put\">scsi_device_put</a>(<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_put_dev\">sg_put_dev</a>(<a class=\"id\" href=\"#sdp\">sdp</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#sg_remove_sfp\">sg_remove_sfp</a>(struct <a class=\"id\" href=\"#kref\">kref</a> *<a class=\"id\" href=\"#kref\">kref</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sg_fd\">sg_fd</a> *<a class=\"id\" href=\"#sfp\">sfp</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#kref\">kref</a>, struct <a class=\"id\" href=\"#sg_fd\">sg_fd</a>, <a class=\"id\" href=\"#f_ref\">f_ref</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sg_device\">sg_device</a> *<a class=\"id\" href=\"#sdp\">sdp</a> = <a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#parentdp\">parentdp</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#iflags\">iflags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_irqsave\">write_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#sg_index_lock\">sg_index_lock</a>, <a class=\"id\" href=\"#iflags\">iflags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#sfd_siblings\">sfd_siblings</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_irqrestore\">write_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#sg_index_lock\">sg_index_lock</a>, <a class=\"id\" href=\"#iflags\">iflags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible\">wake_up_interruptible</a>(&amp;<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#o_excl_wait\">o_excl_wait</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_WORK\">INIT_WORK</a>(&amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#ew\">ew</a>.<a class=\"id\" href=\"#work\">work</a>, <a class=\"id\" href=\"#sg_remove_sfp_usercontext\">sg_remove_sfp_usercontext</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#schedule_work\">schedule_work</a>(&amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#ew\">ew</a>.<a class=\"id\" href=\"#work\">work</a>);", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#sg_res_in_use\">sg_res_in_use</a>(<a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> * <a class=\"id\" href=\"#sfp\">sfp</a>)", 
"{", 
"<span class=\"ts\"/>const <a class=\"id\" href=\"#Sg_request\">Sg_request</a> *<a class=\"id\" href=\"#srp\">srp</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#iflags\">iflags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock_irqsave\">read_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#rq_list_lock\">rq_list_lock</a>, <a class=\"id\" href=\"#iflags\">iflags</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#srp\">srp</a> = <a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#headrp\">headrp</a>; <a class=\"id\" href=\"#srp\">srp</a>; <a class=\"id\" href=\"#srp\">srp</a> = <a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#nextrp\">nextrp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#res_used\">res_used</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_irqrestore\">read_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#sfp\">sfp</a>-><a class=\"id\" href=\"#rq_list_lock\">rq_list_lock</a>, <a class=\"id\" href=\"#iflags\">iflags</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#srp\">srp</a> ? 1 : 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SCSI_PROC_FS\">CONFIG_SCSI_PROC_FS</a>", 
"static int", 
"<a class=\"id\" href=\"#sg_idr_max_id\">sg_idr_max_id</a>(int <a class=\"id\" href=\"#id\">id</a>, void *<a class=\"id\" href=\"#p\">p</a>, void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>int *<a class=\"id\" href=\"#k\">k</a> = <a class=\"id\" href=\"#data\">data</a>;", 
"", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#k\">k</a> &lt; <a class=\"id\" href=\"#id\">id</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#k\">k</a> = <a class=\"id\" href=\"#id\">id</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#sg_last_dev\">sg_last_dev</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#k\">k</a> = -1;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#iflags\">iflags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock_irqsave\">read_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#sg_index_lock\">sg_index_lock</a>, <a class=\"id\" href=\"#iflags\">iflags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idr_for_each\">idr_for_each</a>(&amp;<a class=\"id\" href=\"#sg_index_idr\">sg_index_idr</a>, <a class=\"id\" href=\"#sg_idr_max_id\">sg_idr_max_id</a>, &amp;<a class=\"id\" href=\"#k\">k</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_irqrestore\">read_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#sg_index_lock\">sg_index_lock</a>, <a class=\"id\" href=\"#iflags\">iflags</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#k\">k</a> + 1;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* origin 1 */</span>", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/* must be called with sg_index_lock held */</span>", 
"static <a class=\"id\" href=\"#Sg_device\">Sg_device</a> *<a class=\"id\" href=\"#sg_lookup_dev\">sg_lookup_dev</a>(int <a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#idr_find\">idr_find</a>(&amp;<a class=\"id\" href=\"#sg_index_idr\">sg_index_idr</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#Sg_device\">Sg_device</a> *<a class=\"id\" href=\"#sg_get_dev\">sg_get_dev</a>(int <a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sg_device\">sg_device</a> *<a class=\"id\" href=\"#sdp\">sdp</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock_irqsave\">read_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#sg_index_lock\">sg_index_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sdp\">sdp</a> = <a class=\"id\" href=\"#sg_lookup_dev\">sg_lookup_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sdp\">sdp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sdp\">sdp</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENXIO\">ENXIO</a>);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#detached\">detached</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If sdp-&gt;detached, then the refcount may already be 0, in</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * which case it would be a bug to do kref_get().</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sdp\">sdp</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENODEV\">ENODEV</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kref_get\">kref_get</a>(&amp;<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#d_ref\">d_ref</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_irqrestore\">read_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#sg_index_lock\">sg_index_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sdp\">sdp</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#sg_put_dev\">sg_put_dev</a>(struct <a class=\"id\" href=\"#sg_device\">sg_device</a> *<a class=\"id\" href=\"#sdp\">sdp</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kref_put\">kref_put</a>(&amp;<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#d_ref\">d_ref</a>, <a class=\"id\" href=\"#sg_device_destroy\">sg_device_destroy</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SCSI_PROC_FS\">CONFIG_SCSI_PROC_FS</a>", 
"", 
"static struct <a class=\"id\" href=\"#proc_dir_entry\">proc_dir_entry</a> *<a class=\"id\" href=\"#sg_proc_sgp\">sg_proc_sgp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"static char <a class=\"id\" href=\"#sg_proc_sg_dirname\">sg_proc_sg_dirname</a>[] = \"scsi/sg\";", 
"", 
"static int <a class=\"id\" href=\"#sg_proc_seq_show_int\">sg_proc_seq_show_int</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#s\">s</a>, void *<a class=\"id\" href=\"#v\">v</a>);", 
"", 
"static int <a class=\"id\" href=\"#sg_proc_single_open_adio\">sg_proc_single_open_adio</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>);", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#sg_proc_write_adio\">sg_proc_write_adio</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buffer\">buffer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>          <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#off\">off</a>);", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#adio_fops\">adio_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a> = <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a> = <a class=\"id\" href=\"#sg_proc_single_open_adio\">sg_proc_single_open_adio</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a> = <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a> = <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write\">write</a> = <a class=\"id\" href=\"#sg_proc_write_adio\">sg_proc_write_adio</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a> = <a class=\"id\" href=\"#single_release\">single_release</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#sg_proc_single_open_dressz\">sg_proc_single_open_dressz</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>);", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#sg_proc_write_dressz\">sg_proc_write_dressz</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, ", 
"<span class=\"ts\"/><span class=\"ts\"/>const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#off\">off</a>);", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#dressz_fops\">dressz_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a> = <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a> = <a class=\"id\" href=\"#sg_proc_single_open_dressz\">sg_proc_single_open_dressz</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a> = <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a> = <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write\">write</a> = <a class=\"id\" href=\"#sg_proc_write_dressz\">sg_proc_write_dressz</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a> = <a class=\"id\" href=\"#single_release\">single_release</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#sg_proc_seq_show_version\">sg_proc_seq_show_version</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#s\">s</a>, void *<a class=\"id\" href=\"#v\">v</a>);", 
"static int <a class=\"id\" href=\"#sg_proc_single_open_version\">sg_proc_single_open_version</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>);", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#version_fops\">version_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a> = <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a> = <a class=\"id\" href=\"#sg_proc_single_open_version\">sg_proc_single_open_version</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a> = <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a> = <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a> = <a class=\"id\" href=\"#single_release\">single_release</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#sg_proc_seq_show_devhdr\">sg_proc_seq_show_devhdr</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#s\">s</a>, void *<a class=\"id\" href=\"#v\">v</a>);", 
"static int <a class=\"id\" href=\"#sg_proc_single_open_devhdr\">sg_proc_single_open_devhdr</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>);", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#devhdr_fops\">devhdr_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a> = <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a> = <a class=\"id\" href=\"#sg_proc_single_open_devhdr\">sg_proc_single_open_devhdr</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a> = <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a> = <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a> = <a class=\"id\" href=\"#single_release\">single_release</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#sg_proc_seq_show_dev\">sg_proc_seq_show_dev</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#s\">s</a>, void *<a class=\"id\" href=\"#v\">v</a>);", 
"static int <a class=\"id\" href=\"#sg_proc_open_dev\">sg_proc_open_dev</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>);", 
"static void * <a class=\"id\" href=\"#dev_seq_start\">dev_seq_start</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>);", 
"static void * <a class=\"id\" href=\"#dev_seq_next\">dev_seq_next</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#s\">s</a>, void *<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>);", 
"static void <a class=\"id\" href=\"#dev_seq_stop\">dev_seq_stop</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#s\">s</a>, void *<a class=\"id\" href=\"#v\">v</a>);", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#dev_fops\">dev_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a> = <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a> = <a class=\"id\" href=\"#sg_proc_open_dev\">sg_proc_open_dev</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a> = <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a> = <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a> = <a class=\"id\" href=\"#seq_release\">seq_release</a>,", 
"};", 
"static const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> <a class=\"id\" href=\"#dev_seq_ops\">dev_seq_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#dev_seq_start\">dev_seq_start</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#next\">next</a>  = <a class=\"id\" href=\"#dev_seq_next\">dev_seq_next</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a>  = <a class=\"id\" href=\"#dev_seq_stop\">dev_seq_stop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a>  = <a class=\"id\" href=\"#sg_proc_seq_show_dev\">sg_proc_seq_show_dev</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#sg_proc_seq_show_devstrs\">sg_proc_seq_show_devstrs</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#s\">s</a>, void *<a class=\"id\" href=\"#v\">v</a>);", 
"static int <a class=\"id\" href=\"#sg_proc_open_devstrs\">sg_proc_open_devstrs</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>);", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#devstrs_fops\">devstrs_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a> = <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a> = <a class=\"id\" href=\"#sg_proc_open_devstrs\">sg_proc_open_devstrs</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a> = <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a> = <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a> = <a class=\"id\" href=\"#seq_release\">seq_release</a>,", 
"};", 
"static const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> <a class=\"id\" href=\"#devstrs_seq_ops\">devstrs_seq_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#dev_seq_start\">dev_seq_start</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#next\">next</a>  = <a class=\"id\" href=\"#dev_seq_next\">dev_seq_next</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a>  = <a class=\"id\" href=\"#dev_seq_stop\">dev_seq_stop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a>  = <a class=\"id\" href=\"#sg_proc_seq_show_devstrs\">sg_proc_seq_show_devstrs</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#sg_proc_seq_show_debug\">sg_proc_seq_show_debug</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#s\">s</a>, void *<a class=\"id\" href=\"#v\">v</a>);", 
"static int <a class=\"id\" href=\"#sg_proc_open_debug\">sg_proc_open_debug</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>);", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#debug_fops\">debug_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a> = <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a> = <a class=\"id\" href=\"#sg_proc_open_debug\">sg_proc_open_debug</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a> = <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a> = <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a> = <a class=\"id\" href=\"#seq_release\">seq_release</a>,", 
"};", 
"static const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> <a class=\"id\" href=\"#debug_seq_ops\">debug_seq_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#dev_seq_start\">dev_seq_start</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#next\">next</a>  = <a class=\"id\" href=\"#dev_seq_next\">dev_seq_next</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a>  = <a class=\"id\" href=\"#dev_seq_stop\">dev_seq_stop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a>  = <a class=\"id\" href=\"#sg_proc_seq_show_debug\">sg_proc_seq_show_debug</a>,", 
"};", 
"", 
"", 
"struct <a class=\"id\" href=\"#sg_proc_leaf\">sg_proc_leaf</a> {", 
"<span class=\"ts\"/>const char * <a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> * <a class=\"id\" href=\"#fops\">fops</a>;", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#sg_proc_leaf\">sg_proc_leaf</a> <a class=\"id\" href=\"#sg_proc_leaf_arr\">sg_proc_leaf_arr</a>[] = {", 
"<span class=\"ts\"/>{\"allow_dio\", &amp;<a class=\"id\" href=\"#adio_fops\">adio_fops</a>},", 
"<span class=\"ts\"/>{\"debug\", &amp;<a class=\"id\" href=\"#debug_fops\">debug_fops</a>},", 
"<span class=\"ts\"/>{\"def_reserved_size\", &amp;<a class=\"id\" href=\"#dressz_fops\">dressz_fops</a>},", 
"<span class=\"ts\"/>{\"device_hdr\", &amp;<a class=\"id\" href=\"#devhdr_fops\">devhdr_fops</a>},", 
"<span class=\"ts\"/>{\"devices\", &amp;<a class=\"id\" href=\"#dev_fops\">dev_fops</a>},", 
"<span class=\"ts\"/>{\"device_strs\", &amp;<a class=\"id\" href=\"#devstrs_fops\">devstrs_fops</a>},", 
"<span class=\"ts\"/>{\"version\", &amp;<a class=\"id\" href=\"#version_fops\">version_fops</a>}", 
"};", 
"", 
"static int", 
"<a class=\"id\" href=\"#sg_proc_init\">sg_proc_init</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#num_leaves\">num_leaves</a> = <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#sg_proc_leaf_arr\">sg_proc_leaf_arr</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sg_proc_leaf\">sg_proc_leaf</a> * <a class=\"id\" href=\"#leaf\">leaf</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_proc_sgp\">sg_proc_sgp</a> = <a class=\"id\" href=\"#proc_mkdir\">proc_mkdir</a>(<a class=\"id\" href=\"#sg_proc_sg_dirname\">sg_proc_sg_dirname</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sg_proc_sgp\">sg_proc_sgp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#k\">k</a> = 0; <a class=\"id\" href=\"#k\">k</a> &lt; <a class=\"id\" href=\"#num_leaves\">num_leaves</a>; ++<a class=\"id\" href=\"#k\">k</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#leaf\">leaf</a> = &amp;<a class=\"id\" href=\"#sg_proc_leaf_arr\">sg_proc_leaf_arr</a>[<a class=\"id\" href=\"#k\">k</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#leaf\">leaf</a>-><a class=\"id\" href=\"#fops\">fops</a>-><a class=\"id\" href=\"#write\">write</a> ? <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a> | <a class=\"id\" href=\"#S_IWUSR\">S_IWUSR</a> : <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#proc_create\">proc_create</a>(<a class=\"id\" href=\"#leaf\">leaf</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#mask\">mask</a>, <a class=\"id\" href=\"#sg_proc_sgp\">sg_proc_sgp</a>, <a class=\"id\" href=\"#leaf\">leaf</a>-><a class=\"id\" href=\"#fops\">fops</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void", 
"<a class=\"id\" href=\"#sg_proc_cleanup\">sg_proc_cleanup</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#k\">k</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#num_leaves\">num_leaves</a> = <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#sg_proc_leaf_arr\">sg_proc_leaf_arr</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sg_proc_sgp\">sg_proc_sgp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#k\">k</a> = 0; <a class=\"id\" href=\"#k\">k</a> &lt; <a class=\"id\" href=\"#num_leaves\">num_leaves</a>; ++<a class=\"id\" href=\"#k\">k</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#remove_proc_entry\">remove_proc_entry</a>(<a class=\"id\" href=\"#sg_proc_leaf_arr\">sg_proc_leaf_arr</a>[<a class=\"id\" href=\"#k\">k</a>].<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#sg_proc_sgp\">sg_proc_sgp</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#remove_proc_entry\">remove_proc_entry</a>(<a class=\"id\" href=\"#sg_proc_sg_dirname\">sg_proc_sg_dirname</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"}", 
"", 
"", 
"static int <a class=\"id\" href=\"#sg_proc_seq_show_int\">sg_proc_seq_show_int</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#s\">s</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \"%d\\n\", *((int *)<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#private\">private</a>));", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#sg_proc_single_open_adio\">sg_proc_single_open_adio</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#single_open\">single_open</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#sg_proc_seq_show_int\">sg_proc_seq_show_int</a>, &amp;<a class=\"id\" href=\"#sg_allow_dio\">sg_allow_dio</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> ", 
"<a class=\"id\" href=\"#sg_proc_write_adio\">sg_proc_write_adio</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buffer\">buffer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#off\">off</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#num\">num</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buff\">buff</a>[11];", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_ADMIN\">CAP_SYS_ADMIN</a>) || !<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_RAWIO\">CAP_SYS_RAWIO</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#num\">num</a> = (<a class=\"id\" href=\"#count\">count</a> &lt; 10) ? <a class=\"id\" href=\"#count\">count</a> : 10;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#buff\">buff</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#num\">num</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buff\">buff</a>[<a class=\"id\" href=\"#num\">num</a>] = '\\0';", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_allow_dio\">sg_allow_dio</a> = <a class=\"id\" href=\"#simple_strtoul\">simple_strtoul</a>(<a class=\"id\" href=\"#buff\">buff</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 10) ? 1 : 0;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#sg_proc_single_open_dressz\">sg_proc_single_open_dressz</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#single_open\">single_open</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#sg_proc_seq_show_int\">sg_proc_seq_show_int</a>, &amp;<a class=\"id\" href=\"#sg_big_buff\">sg_big_buff</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> ", 
"<a class=\"id\" href=\"#sg_proc_write_dressz\">sg_proc_write_dressz</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buffer\">buffer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#off\">off</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#num\">num</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#k\">k</a> = <a class=\"id\" href=\"#ULONG_MAX\">ULONG_MAX</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buff\">buff</a>[11];", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_ADMIN\">CAP_SYS_ADMIN</a>) || !<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_RAWIO\">CAP_SYS_RAWIO</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#num\">num</a> = (<a class=\"id\" href=\"#count\">count</a> &lt; 10) ? <a class=\"id\" href=\"#count\">count</a> : 10;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#buff\">buff</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#num\">num</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buff\">buff</a>[<a class=\"id\" href=\"#num\">num</a>] = '\\0';", 
"<span class=\"ts\"/><a class=\"id\" href=\"#k\">k</a> = <a class=\"id\" href=\"#simple_strtoul\">simple_strtoul</a>(<a class=\"id\" href=\"#buff\">buff</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 10);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#k\">k</a> <= 1048576) {<span class=\"ts\"/><span class=\"comment\">/* limit \"big buff\" to 1 MB */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_big_buff\">sg_big_buff</a> = <a class=\"id\" href=\"#k\">k</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ERANGE\">ERANGE</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#sg_proc_seq_show_version\">sg_proc_seq_show_version</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#s\">s</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \"%d\\t%s [%s]\\n\", <a class=\"id\" href=\"#sg_version_num\">sg_version_num</a>, <a class=\"id\" href=\"#SG_VERSION_STR\">SG_VERSION_STR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#sg_version_date\">sg_version_date</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#sg_proc_single_open_version\">sg_proc_single_open_version</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#single_open\">single_open</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#sg_proc_seq_show_version\">sg_proc_seq_show_version</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#sg_proc_seq_show_devhdr\">sg_proc_seq_show_devhdr</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#s\">s</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \"host\\tchan\\tid\\tlun\\ttype\\topens\\tqdepth\\tbusy\\t\"", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"online\\n\");", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#sg_proc_single_open_devhdr\">sg_proc_single_open_devhdr</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#single_open\">single_open</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#sg_proc_seq_show_devhdr\">sg_proc_seq_show_devhdr</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"}", 
"", 
"struct <a class=\"id\" href=\"#sg_proc_deviter\">sg_proc_deviter</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a><span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a><span class=\"ts\"/><a class=\"id\" href=\"#max\">max</a>;", 
"};", 
"", 
"static void * <a class=\"id\" href=\"#dev_seq_start\">dev_seq_start</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sg_proc_deviter\">sg_proc_deviter</a> * <a class=\"id\" href=\"#it\">it</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#it\">it</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#private\">private</a> = <a class=\"id\" href=\"#it\">it</a>;", 
"<span class=\"ts\"/>if (! <a class=\"id\" href=\"#it\">it</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#index\">index</a> = *<a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#max\">max</a> = <a class=\"id\" href=\"#sg_last_dev\">sg_last_dev</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#index\">index</a> >= <a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#max\">max</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#it\">it</a>;", 
"}", 
"", 
"static void * <a class=\"id\" href=\"#dev_seq_next\">dev_seq_next</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#s\">s</a>, void *<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sg_proc_deviter\">sg_proc_deviter</a> * <a class=\"id\" href=\"#it\">it</a> = <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#pos\">pos</a> = ++<a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#index\">index</a>;", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#index\">index</a> &lt; <a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#max\">max</a>) ? <a class=\"id\" href=\"#it\">it</a> : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#dev_seq_stop\">dev_seq_stop</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#s\">s</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#private\">private</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#sg_proc_open_dev\">sg_proc_open_dev</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"        return <a class=\"id\" href=\"#seq_open\">seq_open</a>(<a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#dev_seq_ops\">dev_seq_ops</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#sg_proc_seq_show_dev\">sg_proc_seq_show_dev</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#s\">s</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sg_proc_deviter\">sg_proc_deviter</a> * <a class=\"id\" href=\"#it\">it</a> = (struct <a class=\"id\" href=\"#sg_proc_deviter\">sg_proc_deviter</a> *) <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_device\">Sg_device</a> *<a class=\"id\" href=\"#sdp\">sdp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#scsidp\">scsidp</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#iflags\">iflags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock_irqsave\">read_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#sg_index_lock\">sg_index_lock</a>, <a class=\"id\" href=\"#iflags\">iflags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sdp\">sdp</a> = <a class=\"id\" href=\"#it\">it</a> ? <a class=\"id\" href=\"#sg_lookup_dev\">sg_lookup_dev</a>(<a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#index\">index</a>) : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sdp\">sdp</a> && (<a class=\"id\" href=\"#scsidp\">scsidp</a> = <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>) && (!<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#detached\">detached</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \"%d\\t%d\\t%d\\t%d\\t%d\\t%d\\t%d\\t%d\\t%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#scsidp\">scsidp</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#host_no\">host_no</a>, <a class=\"id\" href=\"#scsidp\">scsidp</a>-><a class=\"id\" href=\"#channel\">channel</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#scsidp\">scsidp</a>-><a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#scsidp\">scsidp</a>-><a class=\"id\" href=\"#lun\">lun</a>, (int) <a class=\"id\" href=\"#scsidp\">scsidp</a>-><a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      1,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      (int) <a class=\"id\" href=\"#scsidp\">scsidp</a>-><a class=\"id\" href=\"#queue_depth\">queue_depth</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      (int) <a class=\"id\" href=\"#scsidp\">scsidp</a>-><a class=\"id\" href=\"#device_busy\">device_busy</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      (int) <a class=\"id\" href=\"#scsi_device_online\">scsi_device_online</a>(<a class=\"id\" href=\"#scsidp\">scsidp</a>));", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \"-1\\t-1\\t-1\\t-1\\t-1\\t-1\\t-1\\t-1\\t-1\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_irqrestore\">read_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#sg_index_lock\">sg_index_lock</a>, <a class=\"id\" href=\"#iflags\">iflags</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#sg_proc_open_devstrs\">sg_proc_open_devstrs</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"        return <a class=\"id\" href=\"#seq_open\">seq_open</a>(<a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#devstrs_seq_ops\">devstrs_seq_ops</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#sg_proc_seq_show_devstrs\">sg_proc_seq_show_devstrs</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#s\">s</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sg_proc_deviter\">sg_proc_deviter</a> * <a class=\"id\" href=\"#it\">it</a> = (struct <a class=\"id\" href=\"#sg_proc_deviter\">sg_proc_deviter</a> *) <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_device\">Sg_device</a> *<a class=\"id\" href=\"#sdp\">sdp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#scsidp\">scsidp</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#iflags\">iflags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock_irqsave\">read_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#sg_index_lock\">sg_index_lock</a>, <a class=\"id\" href=\"#iflags\">iflags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sdp\">sdp</a> = <a class=\"id\" href=\"#it\">it</a> ? <a class=\"id\" href=\"#sg_lookup_dev\">sg_lookup_dev</a>(<a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#index\">index</a>) : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sdp\">sdp</a> && (<a class=\"id\" href=\"#scsidp\">scsidp</a> = <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>) && (!<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#detached\">detached</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \"%8.8s\\t%16.16s\\t%4.4s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#scsidp\">scsidp</a>-><a class=\"id\" href=\"#vendor\">vendor</a>, <a class=\"id\" href=\"#scsidp\">scsidp</a>-><a class=\"id\" href=\"#model\">model</a>, <a class=\"id\" href=\"#scsidp\">scsidp</a>-><a class=\"id\" href=\"#rev\">rev</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \"<no active device>\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_irqrestore\">read_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#sg_index_lock\">sg_index_lock</a>, <a class=\"id\" href=\"#iflags\">iflags</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* must be called while holding sg_index_lock */</span>", 
"static void <a class=\"id\" href=\"#sg_proc_debug_helper\">sg_proc_debug_helper</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#Sg_device\">Sg_device</a> * <a class=\"id\" href=\"#sdp\">sdp</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#new_interface\">new_interface</a>, <a class=\"id\" href=\"#blen\">blen</a>, <a class=\"id\" href=\"#usg\">usg</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_request\">Sg_request</a> *<a class=\"id\" href=\"#srp\">srp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_fd\">Sg_fd</a> *<a class=\"id\" href=\"#fp\">fp</a>;", 
"<span class=\"ts\"/>const <a class=\"id\" href=\"#sg_io_hdr_t\">sg_io_hdr_t</a> *<a class=\"id\" href=\"#hp\">hp</a>;", 
"<span class=\"ts\"/>const char * <a class=\"id\" href=\"#cp\">cp</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#ms\">ms</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#k\">k</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#fp\">fp</a>, &amp;<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#sfds\">sfds</a>, <a class=\"id\" href=\"#sfd_siblings\">sfd_siblings</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#k\">k</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#fp\">fp</a>-><a class=\"id\" href=\"#rq_list_lock\">rq_list_lock</a>); <span class=\"comment\">/* irqs already disabled */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \"   FD(%d): timeout=%dms bufflen=%d \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"(res)sgat=%d low_dma=%d\\n\", <a class=\"id\" href=\"#k\">k</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#jiffies_to_msecs\">jiffies_to_msecs</a>(<a class=\"id\" href=\"#fp\">fp</a>-><a class=\"id\" href=\"#timeout\">timeout</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#fp\">fp</a>-><a class=\"id\" href=\"#reserve\">reserve</a>.<a class=\"id\" href=\"#bufflen\">bufflen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (int) <a class=\"id\" href=\"#fp\">fp</a>-><a class=\"id\" href=\"#reserve\">reserve</a>.<a class=\"id\" href=\"#k_use_sg\">k_use_sg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (int) <a class=\"id\" href=\"#fp\">fp</a>-><a class=\"id\" href=\"#low_dma\">low_dma</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \"   cmd_q=%d f_packid=%d k_orphan=%d closed=%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (int) <a class=\"id\" href=\"#fp\">fp</a>-><a class=\"id\" href=\"#cmd_q\">cmd_q</a>, (int) <a class=\"id\" href=\"#fp\">fp</a>-><a class=\"id\" href=\"#force_packid\">force_packid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (int) <a class=\"id\" href=\"#fp\">fp</a>-><a class=\"id\" href=\"#keep_orphan\">keep_orphan</a>, (int) <a class=\"id\" href=\"#fp\">fp</a>-><a class=\"id\" href=\"#closed\">closed</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#m\">m</a> = 0, <a class=\"id\" href=\"#srp\">srp</a> = <a class=\"id\" href=\"#fp\">fp</a>-><a class=\"id\" href=\"#headrp\">headrp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#srp\">srp</a> != <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>++<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#srp\">srp</a> = <a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#nextrp\">nextrp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hp\">hp</a> = &amp;<a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#header\">header</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_interface\">new_interface</a> = (<a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#interface_id\">interface_id</a> == '\\0') ? 0 : 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#res_used\">res_used</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#new_interface\">new_interface</a> && ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#SG_FLAG_MMAP_IO\">SG_FLAG_MMAP_IO</a> &amp; <a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#flags\">flags</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cp\">cp</a> = \"     mmap>> \";", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cp\">cp</a> = \"     rb>> \";", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#SG_INFO_DIRECT_IO_MASK\">SG_INFO_DIRECT_IO_MASK</a> &amp; <a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#info\">info</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cp\">cp</a> = \"     dio>> \";", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cp\">cp</a> = \"     \";", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#cp\">cp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blen\">blen</a> = <a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#bufflen\">bufflen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#usg\">usg</a> = <a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#k_use_sg\">k_use_sg</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#done\">done</a> ? ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   ((1 == <a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#done\">done</a>) ?  \"rcv:\" : \"fin:\")", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   : \"act:\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \" id=%d blen=%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#header\">header</a>.<a class=\"id\" href=\"#pack_id\">pack_id</a>, <a class=\"id\" href=\"#blen\">blen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#done\">done</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \" dur=%d\", <a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#duration\">duration</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ms\">ms</a> = <a class=\"id\" href=\"#jiffies_to_msecs\">jiffies_to_msecs</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \" t_o/elap=%d/%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#new_interface\">new_interface</a> ? <a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#timeout\">timeout</a> :", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#jiffies_to_msecs\">jiffies_to_msecs</a>(<a class=\"id\" href=\"#fp\">fp</a>-><a class=\"id\" href=\"#timeout\">timeout</a>)),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#ms\">ms</a> &gt; <a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#duration\">duration</a> ? <a class=\"id\" href=\"#ms\">ms</a> - <a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#duration\">duration</a> : 0));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \"ms sgat=%d op=0x%02x\\n\", <a class=\"id\" href=\"#usg\">usg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (int) <a class=\"id\" href=\"#srp\">srp</a>-><a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#cmd_opcode\">cmd_opcode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (0 == <a class=\"id\" href=\"#m\">m</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \"     No requests active\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#fp\">fp</a>-><a class=\"id\" href=\"#rq_list_lock\">rq_list_lock</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#sg_proc_open_debug\">sg_proc_open_debug</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"        return <a class=\"id\" href=\"#seq_open\">seq_open</a>(<a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#debug_seq_ops\">debug_seq_ops</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#sg_proc_seq_show_debug\">sg_proc_seq_show_debug</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#s\">s</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sg_proc_deviter\">sg_proc_deviter</a> * <a class=\"id\" href=\"#it\">it</a> = (struct <a class=\"id\" href=\"#sg_proc_deviter\">sg_proc_deviter</a> *) <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Sg_device\">Sg_device</a> *<a class=\"id\" href=\"#sdp\">sdp</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#iflags\">iflags</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#it\">it</a> && (0 == <a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#index\">index</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \"max_active_device=%d(origin 1)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (int)<a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#max\">max</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \" def_reserved_size=%d\\n\", <a class=\"id\" href=\"#sg_big_buff\">sg_big_buff</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock_irqsave\">read_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#sg_index_lock\">sg_index_lock</a>, <a class=\"id\" href=\"#iflags\">iflags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sdp\">sdp</a> = <a class=\"id\" href=\"#it\">it</a> ? <a class=\"id\" href=\"#sg_lookup_dev\">sg_lookup_dev</a>(<a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#index\">index</a>) : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sdp\">sdp</a> && !<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#sfds\">sfds</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#scsidp\">scsidp</a> = <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#device\">device</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \" >>> device=%s \", <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#disk_name\">disk_name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#detached\">detached</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \"detached pending close \");", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#s\">s</a>, \"scsi%d chan=%d id=%d lun=%d   em=%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#scsidp\">scsidp</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#host_no\">host_no</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#scsidp\">scsidp</a>-><a class=\"id\" href=\"#channel\">channel</a>, <a class=\"id\" href=\"#scsidp\">scsidp</a>-><a class=\"id\" href=\"#id\">id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#scsidp\">scsidp</a>-><a class=\"id\" href=\"#lun\">lun</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#scsidp\">scsidp</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#hostt\">hostt</a>-><a class=\"id\" href=\"#emulated\">emulated</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \" sg_tablesize=%d excl=%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#sg_tablesize\">sg_tablesize</a>, <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#exclude\">exclude</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_proc_debug_helper\">sg_proc_debug_helper</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#sdp\">sdp</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_irqrestore\">read_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#sg_index_lock\">sg_index_lock</a>, <a class=\"id\" href=\"#iflags\">iflags</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* CONFIG_SCSI_PROC_FS */</span>", 
"", 
"<a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#init_sg\">init_sg</a>);", 
"<a class=\"id\" href=\"#module_exit\">module_exit</a>(<a class=\"id\" href=\"#exit_sg\">exit_sg</a>);", 
];
xr_frag_insert('l/55/fcd09fdc39b184d1e2f743a99e27e5b1f1edef.xr', __xr_tmp);
