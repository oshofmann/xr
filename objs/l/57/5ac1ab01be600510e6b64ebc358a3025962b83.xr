var __xr_tmp = [
"<span class=\"comment\">/*  paravirtual clock -- common code used by kvm/xen</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">    This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\">    it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\">    the Free Software Foundation; either version 2 of the License, or</span>", 
"<span class=\"comment\">    (at your option) any later version.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">    This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\">    but WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\">    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>", 
"<span class=\"comment\">    GNU General Public License for more details.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">    You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\">    along with this program; if not, write to the Free Software</span>", 
"<span class=\"comment\">    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA</span>", 
"<span class=\"comment\">*/</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#percpu\">percpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#pvclock\">pvclock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * These are perodically updated</span>", 
"<span class=\"comment\"> *    xen: magic shared_info page</span>", 
"<span class=\"comment\"> *    kvm: gpa registered via msr</span>", 
"<span class=\"comment\"> * and then copied here.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#pvclock_shadow_time\">pvclock_shadow_time</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#tsc_timestamp\">tsc_timestamp</a>;     <span class=\"comment\">/* TSC at last update of time vals.  */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#system_timestamp\">system_timestamp</a>;  <span class=\"comment\">/* Time, in nanosecs, since boot.    */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#tsc_to_nsec_mul\">tsc_to_nsec_mul</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#tsc_shift\">tsc_shift</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#version\">version</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a>  <a class=\"id\" href=\"#flags\">flags</a>;", 
"};", 
"", 
"static <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#valid_flags\">valid_flags</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = 0;", 
"", 
"void <a class=\"id\" href=\"#pvclock_set_flags\">pvclock_set_flags</a>(<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#valid_flags\">valid_flags</a> = <a class=\"id\" href=\"#flags\">flags</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Scale a 64-bit delta by scaling and multiplying by a 32-bit fraction,</span>", 
"<span class=\"comment\"> * yielding a 64-bit result.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#scale_delta\">scale_delta</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#delta\">delta</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mul_frac\">mul_frac</a>, int <a class=\"id\" href=\"#shift\">shift</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#product\">product</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__i386__\">__i386__</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#tmp1\">tmp1</a>, <a class=\"id\" href=\"#tmp2\">tmp2</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#shift\">shift</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#delta\">delta</a> >>= -<a class=\"id\" href=\"#shift\">shift</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#delta\">delta</a> <<= <a class=\"id\" href=\"#shift\">shift</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__i386__\">__i386__</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__asm__\">__asm__</a> (", 
"<span class=\"ts\"/><span class=\"ts\"/>\"mul  %5       ; \"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"mov  %4,%%eax ; \"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"mov  %%edx,%4 ; \"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"mul  %5       ; \"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"xor  %5,%5    ; \"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"add  %4,%%eax ; \"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"adc  %5,%%edx ; \"", 
"<span class=\"ts\"/><span class=\"ts\"/>: \"=A\" (<a class=\"id\" href=\"#product\">product</a>), \"=r\" (<a class=\"id\" href=\"#tmp1\">tmp1</a>), \"=r\" (<a class=\"id\" href=\"#tmp2\">tmp2</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>: \"a\" ((<a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#delta\">delta</a>), \"1\" ((<a class=\"id\" href=\"#u32\">u32</a>)(<a class=\"id\" href=\"#delta\">delta</a> >> 32)), \"2\" (<a class=\"id\" href=\"#mul_frac\">mul_frac</a>) );", 
"#<a class=\"id\" href=\"#elif\">elif</a> <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#__x86_64__\">__x86_64__</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__asm__\">__asm__</a> (", 
"<span class=\"ts\"/><span class=\"ts\"/>\"mul %%rdx ; shrd $32,%%rdx,%%rax\"", 
"<span class=\"ts\"/><span class=\"ts\"/>: \"=a\" (<a class=\"id\" href=\"#product\">product</a>) : \"0\" (<a class=\"id\" href=\"#delta\">delta</a>), \"d\" ((<a class=\"id\" href=\"#u64\">u64</a>)<a class=\"id\" href=\"#mul_frac\">mul_frac</a>) );", 
"#else", 
"#<a class=\"id\" href=\"#error\">error</a> <a class=\"id\" href=\"#implement\">implement</a> <a class=\"id\" href=\"#me\">me</a>!", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#product\">product</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#pvclock_get_nsec_offset\">pvclock_get_nsec_offset</a>(struct <a class=\"id\" href=\"#pvclock_shadow_time\">pvclock_shadow_time</a> *<a class=\"id\" href=\"#shadow\">shadow</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#delta\">delta</a> = <a class=\"id\" href=\"#native_read_tsc\">native_read_tsc</a>() - <a class=\"id\" href=\"#shadow\">shadow</a>-><a class=\"id\" href=\"#tsc_timestamp\">tsc_timestamp</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#scale_delta\">scale_delta</a>(<a class=\"id\" href=\"#delta\">delta</a>, <a class=\"id\" href=\"#shadow\">shadow</a>-><a class=\"id\" href=\"#tsc_to_nsec_mul\">tsc_to_nsec_mul</a>, <a class=\"id\" href=\"#shadow\">shadow</a>-><a class=\"id\" href=\"#tsc_shift\">tsc_shift</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Reads a consistent set of time-base values from hypervisor,</span>", 
"<span class=\"comment\"> * into a shadow data area.</span>", 
"<span class=\"comment\"> */</span>", 
"static unsigned <a class=\"id\" href=\"#pvclock_get_time_values\">pvclock_get_time_values</a>(struct <a class=\"id\" href=\"#pvclock_shadow_time\">pvclock_shadow_time</a> *<a class=\"id\" href=\"#dst\">dst</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#pvclock_vcpu_time_info\">pvclock_vcpu_time_info</a> *<a class=\"id\" href=\"#src\">src</a>)", 
"{", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#version\">version</a> = <a class=\"id\" href=\"#src\">src</a>-><a class=\"id\" href=\"#version\">version</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rmb\">rmb</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fetch version before data */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#tsc_timestamp\">tsc_timestamp</a>     = <a class=\"id\" href=\"#src\">src</a>-><a class=\"id\" href=\"#tsc_timestamp\">tsc_timestamp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#system_timestamp\">system_timestamp</a>  = <a class=\"id\" href=\"#src\">src</a>-><a class=\"id\" href=\"#system_time\">system_time</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#tsc_to_nsec_mul\">tsc_to_nsec_mul</a>   = <a class=\"id\" href=\"#src\">src</a>-><a class=\"id\" href=\"#tsc_to_system_mul\">tsc_to_system_mul</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#tsc_shift\">tsc_shift</a>         = <a class=\"id\" href=\"#src\">src</a>-><a class=\"id\" href=\"#tsc_shift\">tsc_shift</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#flags\">flags</a>             = <a class=\"id\" href=\"#src\">src</a>-><a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rmb\">rmb</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* test version after fetching data */</span>", 
"<span class=\"ts\"/>} while ((<a class=\"id\" href=\"#src\">src</a>-><a class=\"id\" href=\"#version\">version</a> &amp; 1) || (<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#version\">version</a> != <a class=\"id\" href=\"#src\">src</a>-><a class=\"id\" href=\"#version\">version</a>));", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#version\">version</a>;", 
"}", 
"", 
"unsigned long <a class=\"id\" href=\"#pvclock_tsc_khz\">pvclock_tsc_khz</a>(struct <a class=\"id\" href=\"#pvclock_vcpu_time_info\">pvclock_vcpu_time_info</a> *<a class=\"id\" href=\"#src\">src</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#pv_tsc_khz\">pv_tsc_khz</a> = 1000000ULL << 32;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#do_div\">do_div</a>(<a class=\"id\" href=\"#pv_tsc_khz\">pv_tsc_khz</a>, <a class=\"id\" href=\"#src\">src</a>-><a class=\"id\" href=\"#tsc_to_system_mul\">tsc_to_system_mul</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#src\">src</a>-><a class=\"id\" href=\"#tsc_shift\">tsc_shift</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pv_tsc_khz\">pv_tsc_khz</a> <<= -<a class=\"id\" href=\"#src\">src</a>-><a class=\"id\" href=\"#tsc_shift\">tsc_shift</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pv_tsc_khz\">pv_tsc_khz</a> >>= <a class=\"id\" href=\"#src\">src</a>-><a class=\"id\" href=\"#tsc_shift\">tsc_shift</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pv_tsc_khz\">pv_tsc_khz</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#atomic64_t\">atomic64_t</a> <a class=\"id\" href=\"#last_value\">last_value</a> = <a class=\"id\" href=\"#ATOMIC64_INIT\">ATOMIC64_INIT</a>(0);", 
"", 
"<a class=\"id\" href=\"#cycle_t\">cycle_t</a> <a class=\"id\" href=\"#pvclock_clocksource_read\">pvclock_clocksource_read</a>(struct <a class=\"id\" href=\"#pvclock_vcpu_time_info\">pvclock_vcpu_time_info</a> *<a class=\"id\" href=\"#src\">src</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pvclock_shadow_time\">pvclock_shadow_time</a> <a class=\"id\" href=\"#shadow\">shadow</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#version\">version</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cycle_t\">cycle_t</a> <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#last\">last</a>;", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#version\">version</a> = <a class=\"id\" href=\"#pvclock_get_time_values\">pvclock_get_time_values</a>(&amp;<a class=\"id\" href=\"#shadow\">shadow</a>, <a class=\"id\" href=\"#src\">src</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#barrier\">barrier</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#pvclock_get_nsec_offset\">pvclock_get_nsec_offset</a>(&amp;<a class=\"id\" href=\"#shadow\">shadow</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#shadow\">shadow</a>.<a class=\"id\" href=\"#system_timestamp\">system_timestamp</a> + <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#barrier\">barrier</a>();", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#version\">version</a> != <a class=\"id\" href=\"#src\">src</a>-><a class=\"id\" href=\"#version\">version</a>);", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#valid_flags\">valid_flags</a> &amp; <a class=\"id\" href=\"#PVCLOCK_TSC_STABLE_BIT\">PVCLOCK_TSC_STABLE_BIT</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#shadow\">shadow</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#PVCLOCK_TSC_STABLE_BIT\">PVCLOCK_TSC_STABLE_BIT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Assumption here is that last_value, a global accumulator, always goes</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * forward. If we are less than that, we should not be much smaller.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We assume there is an error marging we're inside, and then the correction</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * does not sacrifice accuracy.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * For reads: global may have changed between test and return,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * but this means someone else updated poked the clock at a later time.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We just need to make sure we are not seeing a backwards event.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * For updates: last_value = ret is not enough, since two vcpus could be</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * updating at the same time, and one of them could be slightly behind,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * making the assumption that last_value always go forward fail to hold.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#atomic64_read\">atomic64_read</a>(&amp;<a class=\"id\" href=\"#last_value\">last_value</a>);", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; <a class=\"id\" href=\"#last\">last</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#last\">last</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#atomic64_cmpxchg\">atomic64_cmpxchg</a>(&amp;<a class=\"id\" href=\"#last_value\">last_value</a>, <a class=\"id\" href=\"#last\">last</a>, <a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#last\">last</a> != <a class=\"id\" href=\"#ret\">ret</a>));", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#pvclock_read_wallclock\">pvclock_read_wallclock</a>(struct <a class=\"id\" href=\"#pvclock_wall_clock\">pvclock_wall_clock</a> *<a class=\"id\" href=\"#wall_clock\">wall_clock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#pvclock_vcpu_time_info\">pvclock_vcpu_time_info</a> *<a class=\"id\" href=\"#vcpu_time\">vcpu_time</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#timespec\">timespec</a> *<a class=\"id\" href=\"#ts\">ts</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#version\">version</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#delta\">delta</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#now\">now</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* get wallclock at system boot */</span>", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#version\">version</a> = <a class=\"id\" href=\"#wall_clock\">wall_clock</a>-><a class=\"id\" href=\"#version\">version</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rmb\">rmb</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fetch version before time */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#now\">now</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a>  = <a class=\"id\" href=\"#wall_clock\">wall_clock</a>-><a class=\"id\" href=\"#sec\">sec</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#now\">now</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> = <a class=\"id\" href=\"#wall_clock\">wall_clock</a>-><a class=\"id\" href=\"#nsec\">nsec</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rmb\">rmb</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fetch time before checking version */</span>", 
"<span class=\"ts\"/>} while ((<a class=\"id\" href=\"#wall_clock\">wall_clock</a>-><a class=\"id\" href=\"#version\">version</a> &amp; 1) || (<a class=\"id\" href=\"#version\">version</a> != <a class=\"id\" href=\"#wall_clock\">wall_clock</a>-><a class=\"id\" href=\"#version\">version</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#delta\">delta</a> = <a class=\"id\" href=\"#pvclock_clocksource_read\">pvclock_clocksource_read</a>(<a class=\"id\" href=\"#vcpu_time\">vcpu_time</a>);<span class=\"ts\"/><span class=\"comment\">/* time since system boot */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#delta\">delta</a> += <a class=\"id\" href=\"#now\">now</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> * (<a class=\"id\" href=\"#u64\">u64</a>)<a class=\"id\" href=\"#NSEC_PER_SEC\">NSEC_PER_SEC</a> + <a class=\"id\" href=\"#now\">now</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#now\">now</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> = <a class=\"id\" href=\"#do_div\">do_div</a>(<a class=\"id\" href=\"#delta\">delta</a>, <a class=\"id\" href=\"#NSEC_PER_SEC\">NSEC_PER_SEC</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#now\">now</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> = <a class=\"id\" href=\"#delta\">delta</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_normalized_timespec\">set_normalized_timespec</a>(<a class=\"id\" href=\"#ts\">ts</a>, <a class=\"id\" href=\"#now\">now</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a>, <a class=\"id\" href=\"#now\">now</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a>);", 
"}", 
];
xr_frag_insert('l/57/5ac1ab01be600510e6b64ebc358a3025962b83.xr', __xr_tmp);
