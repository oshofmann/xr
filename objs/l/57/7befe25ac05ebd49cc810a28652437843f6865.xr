var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * net/core/dst.c<span class=\"ts\"/>Protocol independent destination cache.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Authors:<span class=\"ts\"/><span class=\"ts\"/>Alexey Kuznetsov, &lt;kuznet@ms2.inr.ac.ru&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bitops\">bitops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#workqueue\">workqueue</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netdevice\">netdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#skbuff\">skbuff</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#net_namespace\">net_namespace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Theory of operations:</span>", 
"<span class=\"comment\"> * 1) We use a list, protected by a spinlock, to add</span>", 
"<span class=\"comment\"> *    new entries from both BH and non-BH context.</span>", 
"<span class=\"comment\"> * 2) In order to keep spinlock held for a small delay,</span>", 
"<span class=\"comment\"> *    we use a second list where are stored long lived</span>", 
"<span class=\"comment\"> *    entries, that are handled by the garbage collect thread</span>", 
"<span class=\"comment\"> *    fired by a workqueue.</span>", 
"<span class=\"comment\"> * 3) This list is guarded by a mutex,</span>", 
"<span class=\"comment\"> *    so that the gc_task and dst_dev_event() can be synchronized.</span>", 
"<span class=\"comment\"> */</span>", 
"#if <a class=\"id\" href=\"#RT_CACHE_DEBUG\">RT_CACHE_DEBUG</a> >= 2", 
"static <a class=\"id\" href=\"#atomic_t\">atomic_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#dst_total\">dst_total</a> = <a class=\"id\" href=\"#ATOMIC_INIT\">ATOMIC_INIT</a>(0);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * We want to keep lock &amp; list close together</span>", 
"<span class=\"comment\"> * to dirty as few cache lines as possible in __dst_free().</span>", 
"<span class=\"comment\"> * As this is not a very strong hint, we dont force an alignment on SMP.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lock\">lock</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a><span class=\"ts\"/>*<a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timer_inc\">timer_inc</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timer_expires\">timer_expires</a>;", 
"} <a class=\"id\" href=\"#dst_garbage\">dst_garbage</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#lock\">lock</a> = <a class=\"id\" href=\"#__SPIN_LOCK_UNLOCKED\">__SPIN_LOCK_UNLOCKED</a>(<a class=\"id\" href=\"#dst_garbage\">dst_garbage</a>.<a class=\"id\" href=\"#lock\">lock</a>),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#timer_inc\">timer_inc</a> = <a class=\"id\" href=\"#DST_GC_MAX\">DST_GC_MAX</a>,", 
"};", 
"static void <a class=\"id\" href=\"#dst_gc_task\">dst_gc_task</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>);", 
"static void <a class=\"id\" href=\"#___dst_free\">___dst_free</a>(struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>);", 
"", 
"static <a class=\"id\" href=\"#DECLARE_DELAYED_WORK\">DECLARE_DELAYED_WORK</a>(<a class=\"id\" href=\"#dst_gc_work\">dst_gc_work</a>, <a class=\"id\" href=\"#dst_gc_task\">dst_gc_task</a>);", 
"", 
"static <a class=\"id\" href=\"#DEFINE_MUTEX\">DEFINE_MUTEX</a>(<a class=\"id\" href=\"#dst_gc_mutex\">dst_gc_mutex</a>);", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * long lived entries are maintained in this list, guarded by dst_gc_mutex</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a>         *<a class=\"id\" href=\"#dst_busy_list\">dst_busy_list</a>;", 
"", 
"static void <a class=\"id\" href=\"#dst_gc_task\">dst_gc_task</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>)", 
"{", 
"<span class=\"ts\"/>int    <a class=\"id\" href=\"#delayed\">delayed</a> = 0;", 
"<span class=\"ts\"/>int    <a class=\"id\" href=\"#work_performed\">work_performed</a> = 0;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#expires\">expires</a> = ~0L;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>, *<a class=\"id\" href=\"#next\">next</a>, <a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#last\">last</a> = &amp;<a class=\"id\" href=\"#head\">head</a>;", 
"#if <a class=\"id\" href=\"#RT_CACHE_DEBUG\">RT_CACHE_DEBUG</a> >= 2", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#time_start\">time_start</a> = <a class=\"id\" href=\"#ktime_get\">ktime_get</a>();", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#elapsed\">elapsed</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#dst_gc_mutex\">dst_gc_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#dst_busy_list\">dst_busy_list</a>;", 
"", 
"<a class=\"id\" href=\"#loop\">loop</a>:", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#next\">next</a>) != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prefetch\">prefetch</a>(&amp;<a class=\"id\" href=\"#next\">next</a>-><a class=\"id\" href=\"#next\">next</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cond_resched\">cond_resched</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#__refcnt\">__refcnt</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#delayed\">delayed</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#work_performed\">work_performed</a>++;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#dst_destroy\">dst_destroy</a>(<a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dst\">dst</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* NOHASH and still referenced. Unless it is already</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * on gc list, invalidate it and add to gc list.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Note: this is temporary. Actually, NOHASH dst's</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * must be obsoleted when parent is obsoleted.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * But we do not have state \"obsoleted, but</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * referenced by parent\", so it is right.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#obsolete\">obsolete</a> &gt; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#___dst_free\">___dst_free</a>(<a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#dst_garbage\">dst_garbage</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#dst_garbage\">dst_garbage</a>.<a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_garbage\">dst_garbage</a>.<a class=\"id\" href=\"#list\">list</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#dst_garbage\">dst_garbage</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#loop\">loop</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst_busy_list\">dst_busy_list</a> = <a class=\"id\" href=\"#head\">head</a>.<a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dst_busy_list\">dst_busy_list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_garbage\">dst_garbage</a>.<a class=\"id\" href=\"#timer_inc\">timer_inc</a> = <a class=\"id\" href=\"#DST_GC_MAX\">DST_GC_MAX</a>;", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * if we freed less than 1/10 of delayed entries,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * we can sleep longer.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#work_performed\">work_performed</a> <= <a class=\"id\" href=\"#delayed\">delayed</a>/10) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_garbage\">dst_garbage</a>.<a class=\"id\" href=\"#timer_expires\">timer_expires</a> += <a class=\"id\" href=\"#dst_garbage\">dst_garbage</a>.<a class=\"id\" href=\"#timer_inc\">timer_inc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dst_garbage\">dst_garbage</a>.<a class=\"id\" href=\"#timer_expires\">timer_expires</a> &gt; <a class=\"id\" href=\"#DST_GC_MAX\">DST_GC_MAX</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_garbage\">dst_garbage</a>.<a class=\"id\" href=\"#timer_expires\">timer_expires</a> = <a class=\"id\" href=\"#DST_GC_MAX\">DST_GC_MAX</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_garbage\">dst_garbage</a>.<a class=\"id\" href=\"#timer_inc\">timer_inc</a> += <a class=\"id\" href=\"#DST_GC_INC\">DST_GC_INC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_garbage\">dst_garbage</a>.<a class=\"id\" href=\"#timer_inc\">timer_inc</a> = <a class=\"id\" href=\"#DST_GC_INC\">DST_GC_INC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_garbage\">dst_garbage</a>.<a class=\"id\" href=\"#timer_expires\">timer_expires</a> = <a class=\"id\" href=\"#DST_GC_MIN\">DST_GC_MIN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#expires\">expires</a> = <a class=\"id\" href=\"#dst_garbage\">dst_garbage</a>.<a class=\"id\" href=\"#timer_expires\">timer_expires</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * if the next desired timer is more than 4 seconds in the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * future then round the timer to whole seconds</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#expires\">expires</a> &gt; 4*<a class=\"id\" href=\"#HZ\">HZ</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#expires\">expires</a> = <a class=\"id\" href=\"#round_jiffies_relative\">round_jiffies_relative</a>(<a class=\"id\" href=\"#expires\">expires</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule_delayed_work\">schedule_delayed_work</a>(&amp;<a class=\"id\" href=\"#dst_gc_work\">dst_gc_work</a>, <a class=\"id\" href=\"#expires\">expires</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#dst_garbage\">dst_garbage</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dst_gc_mutex\">dst_gc_mutex</a>);", 
"#if <a class=\"id\" href=\"#RT_CACHE_DEBUG\">RT_CACHE_DEBUG</a> >= 2", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elapsed\">elapsed</a> = <a class=\"id\" href=\"#ktime_to_timespec\">ktime_to_timespec</a>(<a class=\"id\" href=\"#ktime_sub\">ktime_sub</a>(<a class=\"id\" href=\"#ktime_get\">ktime_get</a>(), <a class=\"id\" href=\"#time_start\">time_start</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"dst_total: %d delayed: %d work_perf: %d\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\" expires: %lu elapsed: %lu us\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#dst_total\">dst_total</a>), <a class=\"id\" href=\"#delayed\">delayed</a>, <a class=\"id\" href=\"#work_performed\">work_performed</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#expires\">expires</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#elapsed\">elapsed</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> * <a class=\"id\" href=\"#USEC_PER_SEC\">USEC_PER_SEC</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#elapsed\">elapsed</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> / <a class=\"id\" href=\"#NSEC_PER_USEC\">NSEC_PER_USEC</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"int <a class=\"id\" href=\"#dst_discard\">dst_discard</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#dst_discard\">dst_discard</a>);", 
"", 
"void *<a class=\"id\" href=\"#dst_alloc\">dst_alloc</a>(struct <a class=\"id\" href=\"#dst_ops\">dst_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#gc\">gc</a> && <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#entries\">entries</a>) &gt; <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#gc_thresh\">gc_thresh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#gc\">gc</a>(<a class=\"id\" href=\"#ops\">ops</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#kmem_cache_zalloc\">kmem_cache_zalloc</a>(<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#kmem_cachep\">kmem_cachep</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dst\">dst</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#__refcnt\">__refcnt</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#ops\">ops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#lastuse\">lastuse</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#path\">path</a> = <a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#input\">input</a> = <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#output\">output</a> = <a class=\"id\" href=\"#dst_discard\">dst_discard</a>;", 
"#if <a class=\"id\" href=\"#RT_CACHE_DEBUG\">RT_CACHE_DEBUG</a> >= 2", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#dst_total\">dst_total</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#entries\">entries</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dst\">dst</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#dst_alloc\">dst_alloc</a>);", 
"", 
"static void <a class=\"id\" href=\"#___dst_free\">___dst_free</a>(struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* The first case (dev==NULL) is required, when</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   protocol module is unloaded.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#dev\">dev</a> == <a class=\"id\" href=\"#NULL\">NULL</a> || !(<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a>&amp;<a class=\"id\" href=\"#IFF_UP\">IFF_UP</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#input\">input</a> = <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#output\">output</a> = <a class=\"id\" href=\"#dst_discard\">dst_discard</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#obsolete\">obsolete</a> = 2;", 
"}", 
"", 
"void <a class=\"id\" href=\"#__dst_free\">__dst_free</a>(struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#dst_garbage\">dst_garbage</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#___dst_free\">___dst_free</a>(<a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#dst_garbage\">dst_garbage</a>.<a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst_garbage\">dst_garbage</a>.<a class=\"id\" href=\"#list\">list</a> = <a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dst_garbage\">dst_garbage</a>.<a class=\"id\" href=\"#timer_inc\">timer_inc</a> &gt; <a class=\"id\" href=\"#DST_GC_INC\">DST_GC_INC</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_garbage\">dst_garbage</a>.<a class=\"id\" href=\"#timer_inc\">timer_inc</a> = <a class=\"id\" href=\"#DST_GC_INC\">DST_GC_INC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_garbage\">dst_garbage</a>.<a class=\"id\" href=\"#timer_expires\">timer_expires</a> = <a class=\"id\" href=\"#DST_GC_MIN\">DST_GC_MIN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cancel_delayed_work\">cancel_delayed_work</a>(&amp;<a class=\"id\" href=\"#dst_gc_work\">dst_gc_work</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule_delayed_work\">schedule_delayed_work</a>(&amp;<a class=\"id\" href=\"#dst_gc_work\">dst_gc_work</a>, <a class=\"id\" href=\"#dst_garbage\">dst_garbage</a>.<a class=\"id\" href=\"#timer_expires\">timer_expires</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#dst_garbage\">dst_garbage</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__dst_free\">__dst_free</a>);", 
"", 
"struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst_destroy\">dst_destroy</a>(struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> * <a class=\"id\" href=\"#dst\">dst</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#child\">child</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#neigh\">neigh</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hh_cache\">hh_cache</a> *<a class=\"id\" href=\"#hh\">hh</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#smp_rmb\">smp_rmb</a>();", 
"", 
"<a class=\"id\" href=\"#again\">again</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#neigh\">neigh</a> = <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#neighbour\">neighbour</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hh\">hh</a> = <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#hh\">hh</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a> = <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#child\">child</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#hh\">hh</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hh\">hh</a> && <a class=\"id\" href=\"#atomic_dec_and_test\">atomic_dec_and_test</a>(&amp;<a class=\"id\" href=\"#hh\">hh</a>-><a class=\"id\" href=\"#hh_refcnt\">hh_refcnt</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#hh\">hh</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#neigh\">neigh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#neighbour\">neighbour</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh_release\">neigh_release</a>(<a class=\"id\" href=\"#neigh\">neigh</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_dec\">atomic_dec</a>(&amp;<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#entries\">entries</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#destroy\">destroy</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#destroy\">destroy</a>(<a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_put\">dev_put</a>(<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"#if <a class=\"id\" href=\"#RT_CACHE_DEBUG\">RT_CACHE_DEBUG</a> >= 2", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_dec\">atomic_dec</a>(&amp;<a class=\"id\" href=\"#dst_total\">dst_total</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_free\">kmem_cache_free</a>(<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#kmem_cachep\">kmem_cachep</a>, <a class=\"id\" href=\"#dst\">dst</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#child\">child</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dst\">dst</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#nohash\">nohash</a> = <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#DST_NOHASH\">DST_NOHASH</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_dec_and_test\">atomic_dec_and_test</a>(&amp;<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#__refcnt\">__refcnt</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We were real parent of this dst, so kill child. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nohash\">nohash</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#again\">again</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Child is still referenced, return it for freeing. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nohash\">nohash</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Child is still in his hash table */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#dst_destroy\">dst_destroy</a>);", 
"", 
"void <a class=\"id\" href=\"#dst_release\">dst_release</a>(struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dst\">dst</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#newrefcnt\">newrefcnt</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smp_mb__before_atomic_dec\">smp_mb__before_atomic_dec</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newrefcnt\">newrefcnt</a> = <a class=\"id\" href=\"#atomic_dec_return\">atomic_dec_return</a>(&amp;<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#__refcnt\">__refcnt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#newrefcnt\">newrefcnt</a> &lt; 0);", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#dst_release\">dst_release</a>);", 
"", 
"<span class=\"comment\">/* Dirty hack. We did it in 2.2 (in __dst_free),</span>", 
"<span class=\"comment\"> * we have _very_ good reasons not to repeat</span>", 
"<span class=\"comment\"> * this mistake in 2.3, but we have no choice</span>", 
"<span class=\"comment\"> * now. _It_ _is_ _explicit_ _deliberate_</span>", 
"<span class=\"comment\"> * _race_ _condition_.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Commented and originally written by Alexey.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#dst_ifdown\">dst_ifdown</a>(struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       int <a class=\"id\" href=\"#unregister\">unregister</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#ifdown\">ifdown</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#ifdown\">ifdown</a>(<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#unregister\">unregister</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a> != <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#unregister\">unregister</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#input\">input</a> = <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#output\">output</a> = <a class=\"id\" href=\"#dst_discard\">dst_discard</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#dev\">dev</a>)-><a class=\"id\" href=\"#loopback_dev\">loopback_dev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_hold\">dev_hold</a>(<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_put\">dev_put</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#neighbour\">neighbour</a> && <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#neighbour\">neighbour</a>-><a class=\"id\" href=\"#dev\">dev</a> == <a class=\"id\" href=\"#dev\">dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#neighbour\">neighbour</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_hold\">dev_hold</a>(<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_put\">dev_put</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#dst_dev_event\">dst_dev_event</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#this\">this</a>, unsigned long <a class=\"id\" href=\"#event\">event</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> void *<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#ptr\">ptr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>, *<a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#event\">event</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#NETDEV_UNREGISTER\">NETDEV_UNREGISTER</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#NETDEV_DOWN\">NETDEV_DOWN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#dst_gc_mutex\">dst_gc_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#dst_busy_list\">dst_busy_list</a>; <a class=\"id\" href=\"#dst\">dst</a>; <a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_ifdown\">dst_ifdown</a>(<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#event\">event</a> != <a class=\"id\" href=\"#NETDEV_DOWN\">NETDEV_DOWN</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#dst_garbage\">dst_garbage</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#dst_garbage\">dst_garbage</a>.<a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_garbage\">dst_garbage</a>.<a class=\"id\" href=\"#list\">list</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#dst_garbage\">dst_garbage</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#last\">last</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_busy_list\">dst_busy_list</a> = <a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>for (; <a class=\"id\" href=\"#dst\">dst</a>; <a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#next\">next</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_ifdown\">dst_ifdown</a>(<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#event\">event</a> != <a class=\"id\" href=\"#NETDEV_DOWN\">NETDEV_DOWN</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dst_gc_mutex\">dst_gc_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NOTIFY_DONE\">NOTIFY_DONE</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> <a class=\"id\" href=\"#dst_dev_notifier\">dst_dev_notifier</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#notifier_call\">notifier_call</a><span class=\"ts\"/>= <a class=\"id\" href=\"#dst_dev_event\">dst_dev_event</a>,", 
"};", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#dst_init\">dst_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#register_netdevice_notifier\">register_netdevice_notifier</a>(&amp;<a class=\"id\" href=\"#dst_dev_notifier\">dst_dev_notifier</a>);", 
"}", 
];
xr_frag_insert('l/57/7befe25ac05ebd49cc810a28652437843f6865.xr', __xr_tmp);
