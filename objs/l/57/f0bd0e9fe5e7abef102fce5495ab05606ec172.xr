var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Created by: Jason Wessel &lt;jason.wessel@windriver.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (c) 2009 Wind River Systems, Inc.  All Rights Reserved.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file is licensed under the terms of the GNU General Public</span>", 
"<span class=\"comment\"> * License version 2. This program is licensed \"as is\" without any</span>", 
"<span class=\"comment\"> * warranty of any kind, whether express or implied.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_DEBUG_CORE_H_\">_DEBUG_CORE_H_</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_DEBUG_CORE_H_\">_DEBUG_CORE_H_</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * These are the private implementation headers between the kernel</span>", 
"<span class=\"comment\"> * debugger core and the debugger front end code.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/* kernel debug core data structures */</span>", 
"struct <a class=\"id\" href=\"#kgdb_state\">kgdb_state</a> {", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex_vector\">ex_vector</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#signo\">signo</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err_code\">err_code</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu\">cpu</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pass_exception\">pass_exception</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#thr_query\">thr_query</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#threadid\">threadid</a>;", 
"<span class=\"ts\"/>long<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kgdb_usethreadid\">kgdb_usethreadid</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#linux_regs\">linux_regs</a>;", 
"};", 
"", 
"<span class=\"comment\">/* Exception state values */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DCPU_WANT_MASTER\">DCPU_WANT_MASTER</a> 0x1 <span class=\"comment\">/* Waiting to become a master kgdb cpu */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DCPU_NEXT_MASTER\">DCPU_NEXT_MASTER</a> 0x2 <span class=\"comment\">/* Transition from one master cpu to another */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DCPU_IS_SLAVE\">DCPU_IS_SLAVE</a>    0x4 <span class=\"comment\">/* Slave cpu enter exception */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DCPU_SSTEP\">DCPU_SSTEP</a>       0x8 <span class=\"comment\">/* CPU is single stepping */</span>", 
"", 
"struct <a class=\"id\" href=\"#debuggerinfo_struct\">debuggerinfo_struct</a> {", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#debuggerinfo\">debuggerinfo</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a><span class=\"ts\"/>*<a class=\"id\" href=\"#task\">task</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#exception_state\">exception_state</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_state\">ret_state</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq_depth\">irq_depth</a>;", 
"};", 
"", 
"extern struct <a class=\"id\" href=\"#debuggerinfo_struct\">debuggerinfo_struct</a> <a class=\"id\" href=\"#kgdb_info\">kgdb_info</a>[];", 
"", 
"<span class=\"comment\">/* kernel debug core break point routines */</span>", 
"extern int <a class=\"id\" href=\"#dbg_remove_all_break\">dbg_remove_all_break</a>(void);", 
"extern int <a class=\"id\" href=\"#dbg_set_sw_break\">dbg_set_sw_break</a>(unsigned long <a class=\"id\" href=\"#addr\">addr</a>);", 
"extern int <a class=\"id\" href=\"#dbg_remove_sw_break\">dbg_remove_sw_break</a>(unsigned long <a class=\"id\" href=\"#addr\">addr</a>);", 
"extern int <a class=\"id\" href=\"#dbg_activate_sw_breakpoints\">dbg_activate_sw_breakpoints</a>(void);", 
"extern int <a class=\"id\" href=\"#dbg_deactivate_sw_breakpoints\">dbg_deactivate_sw_breakpoints</a>(void);", 
"", 
"<span class=\"comment\">/* polled character access to i/o module */</span>", 
"extern int <a class=\"id\" href=\"#dbg_io_get_char\">dbg_io_get_char</a>(void);", 
"", 
"<span class=\"comment\">/* stub return value for switching between the gdbstub and kdb */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DBG_PASS_EVENT\">DBG_PASS_EVENT</a> -12345", 
"<span class=\"comment\">/* Switch from one cpu to another */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DBG_SWITCH_CPU_EVENT\">DBG_SWITCH_CPU_EVENT</a> -123456", 
"extern int <a class=\"id\" href=\"#dbg_switch_cpu\">dbg_switch_cpu</a>;", 
"", 
"<span class=\"comment\">/* gdbstub interface functions */</span>", 
"extern int <a class=\"id\" href=\"#gdb_serial_stub\">gdb_serial_stub</a>(struct <a class=\"id\" href=\"#kgdb_state\">kgdb_state</a> *<a class=\"id\" href=\"#ks\">ks</a>);", 
"extern void <a class=\"id\" href=\"#gdbstub_msg_write\">gdbstub_msg_write</a>(const char *<a class=\"id\" href=\"#s\">s</a>, int <a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"comment\">/* gdbstub functions used for kdb &lt;-&gt; gdbstub transition */</span>", 
"extern int <a class=\"id\" href=\"#gdbstub_state\">gdbstub_state</a>(struct <a class=\"id\" href=\"#kgdb_state\">kgdb_state</a> *<a class=\"id\" href=\"#ks\">ks</a>, char *<a class=\"id\" href=\"#cmd\">cmd</a>);", 
"extern int <a class=\"id\" href=\"#dbg_kdb_mode\">dbg_kdb_mode</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_KGDB_KDB\">CONFIG_KGDB_KDB</a>", 
"extern int <a class=\"id\" href=\"#kdb_stub\">kdb_stub</a>(struct <a class=\"id\" href=\"#kgdb_state\">kgdb_state</a> *<a class=\"id\" href=\"#ks\">ks</a>);", 
"extern int <a class=\"id\" href=\"#kdb_parse\">kdb_parse</a>(const char *<a class=\"id\" href=\"#cmdstr\">cmdstr</a>);", 
"#else <span class=\"comment\">/* ! CONFIG_KGDB_KDB */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#kdb_stub\">kdb_stub</a>(struct <a class=\"id\" href=\"#kgdb_state\">kgdb_state</a> *<a class=\"id\" href=\"#ks\">ks</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#DBG_PASS_EVENT\">DBG_PASS_EVENT</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_KGDB_KDB */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _DEBUG_CORE_H_ */</span>", 
];
xr_frag_insert('l/57/f0bd0e9fe5e7abef102fce5495ab05606ec172.xr', __xr_tmp);
