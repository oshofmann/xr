var __xr_tmp = [
"<span class=\"comment\">/* Copyright (C) 2003 Krzysztof Benedyczak &amp; Michal Wronski</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\">   modify it under the terms of the GNU Lesser General Public</span>", 
"<span class=\"comment\">   License as published by the Free Software Foundation; either</span>", 
"<span class=\"comment\">   version 2.1 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   It is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\">   but WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\">   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>", 
"<span class=\"comment\">   Lesser General Public License for more details.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   You should have received a copy of the GNU Lesser General Public</span>", 
"<span class=\"comment\">   License along with this software; if not, write to the Free</span>", 
"<span class=\"comment\">   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA</span>", 
"<span class=\"comment\">   02111-1307 USA.  */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_MQUEUE_H\">_LINUX_MQUEUE_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_MQUEUE_H\">_LINUX_MQUEUE_H</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MQ_PRIO_MAX\">MQ_PRIO_MAX</a> <span class=\"ts\"/>32768", 
"<span class=\"comment\">/* per-uid limit of kernel memory used by mqueue, in bytes */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MQ_BYTES_MAX\">MQ_BYTES_MAX</a><span class=\"ts\"/>819200", 
"", 
"struct <a class=\"id\" href=\"#mq_attr\">mq_attr</a> {", 
"<span class=\"ts\"/>long<span class=\"ts\"/><a class=\"id\" href=\"#mq_flags\">mq_flags</a>;<span class=\"ts\"/><span class=\"comment\">/* message queue flags<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>long<span class=\"ts\"/><a class=\"id\" href=\"#mq_maxmsg\">mq_maxmsg</a>;<span class=\"ts\"/><span class=\"comment\">/* maximum number of messages<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>long<span class=\"ts\"/><a class=\"id\" href=\"#mq_msgsize\">mq_msgsize</a>;<span class=\"ts\"/><span class=\"comment\">/* maximum message size<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>long<span class=\"ts\"/><a class=\"id\" href=\"#mq_curmsgs\">mq_curmsgs</a>;<span class=\"ts\"/><span class=\"comment\">/* number of messages currently queued<span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>long<span class=\"ts\"/><a class=\"id\" href=\"#__reserved\">__reserved</a>[4];<span class=\"ts\"/><span class=\"comment\">/* ignored for input, zeroed for output */</span>", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * SIGEV_THREAD implementation:</span>", 
"<span class=\"comment\"> * SIGEV_THREAD must be implemented in user space. If SIGEV_THREAD is passed</span>", 
"<span class=\"comment\"> * to mq_notify, then</span>", 
"<span class=\"comment\"> * - sigev_signo must be the file descriptor of an AF_NETLINK socket. It's not</span>", 
"<span class=\"comment\"> *   necessary that the socket is bound.</span>", 
"<span class=\"comment\"> * - sigev_value.sival_ptr must point to a cookie that is NOTIFY_COOKIE_LEN</span>", 
"<span class=\"comment\"> *   bytes long.</span>", 
"<span class=\"comment\"> * If the notification is triggered, then the cookie is sent to the netlink</span>", 
"<span class=\"comment\"> * socket. The last byte of the cookie is replaced with the NOTIFY_?? codes:</span>", 
"<span class=\"comment\"> * NOTIFY_WOKENUP if the notification got triggered, NOTIFY_REMOVED if it was</span>", 
"<span class=\"comment\"> * removed, either due to a close() on the message queue fd or due to a</span>", 
"<span class=\"comment\"> * mq_notify() that removed the notification.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NOTIFY_NONE\">NOTIFY_NONE</a><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NOTIFY_WOKENUP\">NOTIFY_WOKENUP</a><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NOTIFY_REMOVED\">NOTIFY_REMOVED</a><span class=\"ts\"/>2", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NOTIFY_COOKIE_LEN\">NOTIFY_COOKIE_LEN</a><span class=\"ts\"/>32", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/57/f8cbffa7b49fd14544c1f75b5435b55938c098.xr', __xr_tmp);
