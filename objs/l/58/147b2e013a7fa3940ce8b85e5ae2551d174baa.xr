var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright (C) 2009 Intel Corporation.</span>", 
"<span class=\"comment\"> * Author: Patrick Ohly &lt;patrick.ohly@intel.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> * it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> * the Free Software Foundation; either version 2 of the License, or</span>", 
"<span class=\"comment\"> * (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>", 
"<span class=\"comment\"> * GNU General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\"> * along with this program; if not, write to the Free Software</span>", 
"<span class=\"comment\"> * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#timecompare\">timecompare</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#math64\">math64</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * fixed point arithmetic scale factor for skew</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Usually one would measure skew in ppb (parts per billion, 1e9), but</span>", 
"<span class=\"comment\"> * using a factor of 2 simplifies the math.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TIMECOMPARE_SKEW_RESOLUTION\">TIMECOMPARE_SKEW_RESOLUTION</a> (((<a class=\"id\" href=\"#s64\">s64</a>)1)<<30)", 
"", 
"<a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#timecompare_transform\">timecompare_transform</a>(struct <a class=\"id\" href=\"#timecompare\">timecompare</a> *<a class=\"id\" href=\"#sync\">sync</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#source_tstamp\">source_tstamp</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#nsec\">nsec</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nsec\">nsec</a> = <a class=\"id\" href=\"#source_tstamp\">source_tstamp</a> + <a class=\"id\" href=\"#sync\">sync</a>-><a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nsec\">nsec</a> += (<a class=\"id\" href=\"#s64\">s64</a>)(<a class=\"id\" href=\"#source_tstamp\">source_tstamp</a> - <a class=\"id\" href=\"#sync\">sync</a>-><a class=\"id\" href=\"#last_update\">last_update</a>) * <a class=\"id\" href=\"#sync\">sync</a>-><a class=\"id\" href=\"#skew\">skew</a> /", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#TIMECOMPARE_SKEW_RESOLUTION\">TIMECOMPARE_SKEW_RESOLUTION</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ns_to_ktime\">ns_to_ktime</a>(<a class=\"id\" href=\"#nsec\">nsec</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#timecompare_transform\">timecompare_transform</a>);", 
"", 
"int <a class=\"id\" href=\"#timecompare_offset\">timecompare_offset</a>(struct <a class=\"id\" href=\"#timecompare\">timecompare</a> *<a class=\"id\" href=\"#sync\">sync</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#s64\">s64</a> *<a class=\"id\" href=\"#offset\">offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#u64\">u64</a> *<a class=\"id\" href=\"#source_tstamp\">source_tstamp</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start_source\">start_source</a> = 0, <a class=\"id\" href=\"#end_source\">end_source</a> = 0;", 
"<span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#duration_target\">duration_target</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#buffer\">buffer</a>[10], <a class=\"id\" href=\"#sample\">sample</a>, *<a class=\"id\" href=\"#samples\">samples</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#counter\">counter</a> = 0, <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#used\">used</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#index\">index</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#num_samples\">num_samples</a> = <a class=\"id\" href=\"#sync\">sync</a>-><a class=\"id\" href=\"#num_samples\">num_samples</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#num_samples\">num_samples</a> &gt; sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>)/sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>[0])) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#samples\">samples</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#samples\">samples</a>) * <a class=\"id\" href=\"#num_samples\">num_samples</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#samples\">samples</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#samples\">samples</a> = <a class=\"id\" href=\"#buffer\">buffer</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_samples\">num_samples</a> = sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>)/sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>[0]);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#samples\">samples</a> = <a class=\"id\" href=\"#buffer\">buffer</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* run until we have enough valid samples, but do not try forever */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#counter\">counter</a> = 0;", 
"<span class=\"ts\"/>while (1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#ts\">ts</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#sync\">sync</a>-><a class=\"id\" href=\"#target\">target</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ts\">ts</a> = <a class=\"id\" href=\"#timecounter_read\">timecounter_read</a>(<a class=\"id\" href=\"#sync\">sync</a>-><a class=\"id\" href=\"#source\">source</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#sync\">sync</a>-><a class=\"id\" href=\"#target\">target</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#i\">i</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_source\">start_source</a> = <a class=\"id\" href=\"#ts\">ts</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ignore negative durations */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sample\">sample</a>.<a class=\"id\" href=\"#duration_target\">duration_target</a> = <a class=\"id\" href=\"#ktime_to_ns\">ktime_to_ns</a>(<a class=\"id\" href=\"#ktime_sub\">ktime_sub</a>(<a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#start\">start</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sample\">sample</a>.<a class=\"id\" href=\"#duration_target\">duration_target</a> >= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * assume symetric delay to and from source:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * average target time corresponds to measured</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * source time</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sample\">sample</a>.<a class=\"id\" href=\"#offset\">offset</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#ktime_to_ns\">ktime_to_ns</a>(<a class=\"id\" href=\"#end\">end</a>) + <a class=\"id\" href=\"#ktime_to_ns\">ktime_to_ns</a>(<a class=\"id\" href=\"#start\">start</a>)) / 2 -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ts\">ts</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* simple insertion sort based on duration */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#counter\">counter</a> - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#index\">index</a> >= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#samples\">samples</a>[<a class=\"id\" href=\"#index\">index</a>].<a class=\"id\" href=\"#duration_target\">duration_target</a> &lt;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sample\">sample</a>.<a class=\"id\" href=\"#duration_target\">duration_target</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#samples\">samples</a>[<a class=\"id\" href=\"#index\">index</a> + 1] = <a class=\"id\" href=\"#samples\">samples</a>[<a class=\"id\" href=\"#index\">index</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#samples\">samples</a>[<a class=\"id\" href=\"#index\">index</a> + 1] = <a class=\"id\" href=\"#sample\">sample</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#counter\">counter</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#counter\">counter</a> >= <a class=\"id\" href=\"#num_samples\">num_samples</a> || <a class=\"id\" href=\"#i\">i</a> >= 100000) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end_source\">end_source</a> = <a class=\"id\" href=\"#ts\">ts</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#source_tstamp\">source_tstamp</a> = (<a class=\"id\" href=\"#end_source\">end_source</a> + <a class=\"id\" href=\"#start_source\">start_source</a>) / 2;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* remove outliers by only using 75% of the samples */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#used\">used</a> = <a class=\"id\" href=\"#counter\">counter</a> * 3 / 4;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#used\">used</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#used\">used</a> = <a class=\"id\" href=\"#counter\">counter</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#used\">used</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* calculate average */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#off\">off</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#index\">index</a> = 0; <a class=\"id\" href=\"#index\">index</a> &lt; <a class=\"id\" href=\"#used\">used</a>; <a class=\"id\" href=\"#index\">index</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#off\">off</a> += <a class=\"id\" href=\"#samples\">samples</a>[<a class=\"id\" href=\"#index\">index</a>].<a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#div_s64\">div_s64</a>(<a class=\"id\" href=\"#off\">off</a>, <a class=\"id\" href=\"#used\">used</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#samples\">samples</a> && <a class=\"id\" href=\"#samples\">samples</a> != <a class=\"id\" href=\"#buffer\">buffer</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#samples\">samples</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#used\">used</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#timecompare_offset\">timecompare_offset</a>);", 
"", 
"void <a class=\"id\" href=\"#__timecompare_update\">__timecompare_update</a>(struct <a class=\"id\" href=\"#timecompare\">timecompare</a> *<a class=\"id\" href=\"#sync\">sync</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#source_tstamp\">source_tstamp</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#average_time\">average_time</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#timecompare_offset\">timecompare_offset</a>(<a class=\"id\" href=\"#sync\">sync</a>, &amp;<a class=\"id\" href=\"#offset\">offset</a>, &amp;<a class=\"id\" href=\"#average_time\">average_time</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sync\">sync</a>-><a class=\"id\" href=\"#last_update\">last_update</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sync\">sync</a>-><a class=\"id\" href=\"#last_update\">last_update</a> = <a class=\"id\" href=\"#average_time\">average_time</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sync\">sync</a>-><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sync\">sync</a>-><a class=\"id\" href=\"#skew\">skew</a> = 0;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#delta_nsec\">delta_nsec</a> = <a class=\"id\" href=\"#average_time\">average_time</a> - <a class=\"id\" href=\"#sync\">sync</a>-><a class=\"id\" href=\"#last_update\">last_update</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* avoid division by negative or small deltas */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#delta_nsec\">delta_nsec</a> >= 10000) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#delta_offset_nsec\">delta_offset_nsec</a> = <a class=\"id\" href=\"#offset\">offset</a> - <a class=\"id\" href=\"#sync\">sync</a>-><a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#skew\">skew</a>; <span class=\"comment\">/* delta_offset_nsec *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     TIMECOMPARE_SKEW_RESOLUTION /</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     delta_nsec */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#divisor\">divisor</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* div_s64() is limited to 32 bit divisor */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skew\">skew</a> = <a class=\"id\" href=\"#delta_offset_nsec\">delta_offset_nsec</a> * <a class=\"id\" href=\"#TIMECOMPARE_SKEW_RESOLUTION\">TIMECOMPARE_SKEW_RESOLUTION</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#divisor\">divisor</a> = <a class=\"id\" href=\"#delta_nsec\">delta_nsec</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#divisor\">divisor</a> >= ((<a class=\"id\" href=\"#s64\">s64</a>)1) << 32)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* divide both by 2; beware, right shift</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   of negative value has undefined</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   behavior and can only be used for</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   the positive divisor */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skew\">skew</a> = <a class=\"id\" href=\"#div_s64\">div_s64</a>(<a class=\"id\" href=\"#skew\">skew</a>, 2);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#divisor\">divisor</a> >>= 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skew\">skew</a> = <a class=\"id\" href=\"#div_s64\">div_s64</a>(<a class=\"id\" href=\"#skew\">skew</a>, <a class=\"id\" href=\"#divisor\">divisor</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Calculate new overall skew as 4/16 the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * old value and 12/16 the new one. This is</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * a rather arbitrary tradeoff between</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * only using the latest measurement (0/16 and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * 16/16) and even more weight on past measurements.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TIMECOMPARE_NEW_SKEW_PER_16\">TIMECOMPARE_NEW_SKEW_PER_16</a> 12", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sync\">sync</a>-><a class=\"id\" href=\"#skew\">skew</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#div_s64\">div_s64</a>((16 - <a class=\"id\" href=\"#TIMECOMPARE_NEW_SKEW_PER_16\">TIMECOMPARE_NEW_SKEW_PER_16</a>) *", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sync\">sync</a>-><a class=\"id\" href=\"#skew\">skew</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#TIMECOMPARE_NEW_SKEW_PER_16\">TIMECOMPARE_NEW_SKEW_PER_16</a> * <a class=\"id\" href=\"#skew\">skew</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>16);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sync\">sync</a>-><a class=\"id\" href=\"#last_update\">last_update</a> = <a class=\"id\" href=\"#average_time\">average_time</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sync\">sync</a>-><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#__timecompare_update\">__timecompare_update</a>);", 
];
xr_frag_insert('l/58/147b2e013a7fa3940ce8b85e5ae2551d174baa.xr', __xr_tmp);
