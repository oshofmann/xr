var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Routines to manage notifier chains for passing status changes to any</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>interested routines. We need this instead of hard coded call lists so</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>that modules can poke their nose into the innards. The network devices</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>needed them so here they are for the rest of you.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>Alan Cox &lt;Alan.Cox@linux.org&gt;</span>", 
"<span class=\"comment\"> */</span>", 
" ", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_NOTIFIER_H\">_LINUX_NOTIFIER_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_NOTIFIER_H\">_LINUX_NOTIFIER_H</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mutex\">mutex</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rwsem\">rwsem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#srcu\">srcu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Notifier chains are of four types:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Atomic notifier chains: Chain callbacks run in interrupt/atomic</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>context. Callouts are not allowed to block.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Blocking notifier chains: Chain callbacks run in process context.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Callouts are allowed to block.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Raw notifier chains: There are no restrictions on callbacks,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>registration, or unregistration.  All locking and protection</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>must be provided by the caller.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>SRCU notifier chains: A variant of blocking notifier chains, with</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>the same restrictions.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * atomic_notifier_chain_register() may be called from an atomic context,</span>", 
"<span class=\"comment\"> * but blocking_notifier_chain_register() and srcu_notifier_chain_register()</span>", 
"<span class=\"comment\"> * must be called from a process context.  Ditto for the corresponding</span>", 
"<span class=\"comment\"> * _unregister() routines.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * atomic_notifier_chain_unregister(), blocking_notifier_chain_unregister(),</span>", 
"<span class=\"comment\"> * and srcu_notifier_chain_unregister() _must not_ be called from within</span>", 
"<span class=\"comment\"> * the call chain.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * SRCU notifier chains are an alternative form of blocking notifier chains.</span>", 
"<span class=\"comment\"> * They use SRCU (Sleepable Read-Copy Update) instead of rw-semaphores for</span>", 
"<span class=\"comment\"> * protection of the chain links.  This means there is _very_ low overhead</span>", 
"<span class=\"comment\"> * in srcu_notifier_call_chain(): no cache bounces and no memory barriers.</span>", 
"<span class=\"comment\"> * As compensation, srcu_notifier_chain_unregister() is rather expensive.</span>", 
"<span class=\"comment\"> * SRCU notifier chains should be used when the chain will be called very</span>", 
"<span class=\"comment\"> * often but notifier_blocks will seldom be removed.  Also, SRCU notifier</span>", 
"<span class=\"comment\"> * chains are slightly more difficult to use because they require special</span>", 
"<span class=\"comment\"> * runtime initialization.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> {", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#notifier_call\">notifier_call</a>)(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *, unsigned long, void *);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#priority\">priority</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#atomic_notifier_head\">atomic_notifier_head</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> <a class=\"id\" href=\"#lock\">lock</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#head\">head</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#blocking_notifier_head\">blocking_notifier_head</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rw_semaphore\">rw_semaphore</a> <a class=\"id\" href=\"#rwsem\">rwsem</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#head\">head</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#raw_notifier_head\">raw_notifier_head</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#head\">head</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#srcu_notifier_head\">srcu_notifier_head</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mutex\">mutex</a> <a class=\"id\" href=\"#mutex\">mutex</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#srcu_struct\">srcu_struct</a> <a class=\"id\" href=\"#srcu\">srcu</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#head\">head</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ATOMIC_INIT_NOTIFIER_HEAD\">ATOMIC_INIT_NOTIFIER_HEAD</a>(<a class=\"id\" href=\"#name\">name</a>) do {<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;(<a class=\"id\" href=\"#name\">name</a>)-><a class=\"id\" href=\"#lock\">lock</a>);<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#name\">name</a>)-><a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>} while (0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BLOCKING_INIT_NOTIFIER_HEAD\">BLOCKING_INIT_NOTIFIER_HEAD</a>(<a class=\"id\" href=\"#name\">name</a>) do {<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#init_rwsem\">init_rwsem</a>(&amp;(<a class=\"id\" href=\"#name\">name</a>)-><a class=\"id\" href=\"#rwsem\">rwsem</a>);<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#name\">name</a>)-><a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>} while (0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RAW_INIT_NOTIFIER_HEAD\">RAW_INIT_NOTIFIER_HEAD</a>(<a class=\"id\" href=\"#name\">name</a>) do {<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#name\">name</a>)-><a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>} while (0)", 
"", 
"<span class=\"comment\">/* srcu_notifier_heads must be initialized and cleaned up dynamically */</span>", 
"extern void <a class=\"id\" href=\"#srcu_init_notifier_head\">srcu_init_notifier_head</a>(struct <a class=\"id\" href=\"#srcu_notifier_head\">srcu_notifier_head</a> *<a class=\"id\" href=\"#nh\">nh</a>);", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#srcu_cleanup_notifier_head\">srcu_cleanup_notifier_head</a>(<a class=\"id\" href=\"#name\">name</a>)<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cleanup_srcu_struct\">cleanup_srcu_struct</a>(&amp;(<a class=\"id\" href=\"#name\">name</a>)-><a class=\"id\" href=\"#srcu\">srcu</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ATOMIC_NOTIFIER_INIT\">ATOMIC_NOTIFIER_INIT</a>(<a class=\"id\" href=\"#name\">name</a>) {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#lock\">lock</a> = <a class=\"id\" href=\"#__SPIN_LOCK_UNLOCKED\">__SPIN_LOCK_UNLOCKED</a>(<a class=\"id\" href=\"#name\">name</a>.<a class=\"id\" href=\"#lock\">lock</a>),<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#NULL\">NULL</a> }", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BLOCKING_NOTIFIER_INIT\">BLOCKING_NOTIFIER_INIT</a>(<a class=\"id\" href=\"#name\">name</a>) {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#rwsem\">rwsem</a> = <a class=\"id\" href=\"#__RWSEM_INITIALIZER\">__RWSEM_INITIALIZER</a>((<a class=\"id\" href=\"#name\">name</a>).<a class=\"id\" href=\"#rwsem\">rwsem</a>),<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#NULL\">NULL</a> }", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RAW_NOTIFIER_INIT\">RAW_NOTIFIER_INIT</a>(<a class=\"id\" href=\"#name\">name</a>)<span class=\"ts\"/>{<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#NULL\">NULL</a> }", 
"<span class=\"comment\">/* srcu_notifier_heads cannot be initialized statically */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ATOMIC_NOTIFIER_HEAD\">ATOMIC_NOTIFIER_HEAD</a>(<a class=\"id\" href=\"#name\">name</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#atomic_notifier_head\">atomic_notifier_head</a> <a class=\"id\" href=\"#name\">name</a> =<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATOMIC_NOTIFIER_INIT\">ATOMIC_NOTIFIER_INIT</a>(<a class=\"id\" href=\"#name\">name</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BLOCKING_NOTIFIER_HEAD\">BLOCKING_NOTIFIER_HEAD</a>(<a class=\"id\" href=\"#name\">name</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#blocking_notifier_head\">blocking_notifier_head</a> <a class=\"id\" href=\"#name\">name</a> =<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BLOCKING_NOTIFIER_INIT\">BLOCKING_NOTIFIER_INIT</a>(<a class=\"id\" href=\"#name\">name</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RAW_NOTIFIER_HEAD\">RAW_NOTIFIER_HEAD</a>(<a class=\"id\" href=\"#name\">name</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#raw_notifier_head\">raw_notifier_head</a> <a class=\"id\" href=\"#name\">name</a> =<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#RAW_NOTIFIER_INIT\">RAW_NOTIFIER_INIT</a>(<a class=\"id\" href=\"#name\">name</a>)", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"", 
"extern int <a class=\"id\" href=\"#atomic_notifier_chain_register\">atomic_notifier_chain_register</a>(struct <a class=\"id\" href=\"#atomic_notifier_head\">atomic_notifier_head</a> *<a class=\"id\" href=\"#nh\">nh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nb\">nb</a>);", 
"extern int <a class=\"id\" href=\"#blocking_notifier_chain_register\">blocking_notifier_chain_register</a>(struct <a class=\"id\" href=\"#blocking_notifier_head\">blocking_notifier_head</a> *<a class=\"id\" href=\"#nh\">nh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nb\">nb</a>);", 
"extern int <a class=\"id\" href=\"#raw_notifier_chain_register\">raw_notifier_chain_register</a>(struct <a class=\"id\" href=\"#raw_notifier_head\">raw_notifier_head</a> *<a class=\"id\" href=\"#nh\">nh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nb\">nb</a>);", 
"extern int <a class=\"id\" href=\"#srcu_notifier_chain_register\">srcu_notifier_chain_register</a>(struct <a class=\"id\" href=\"#srcu_notifier_head\">srcu_notifier_head</a> *<a class=\"id\" href=\"#nh\">nh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nb\">nb</a>);", 
"", 
"extern int <a class=\"id\" href=\"#blocking_notifier_chain_cond_register\">blocking_notifier_chain_cond_register</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#blocking_notifier_head\">blocking_notifier_head</a> *<a class=\"id\" href=\"#nh\">nh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nb\">nb</a>);", 
"", 
"extern int <a class=\"id\" href=\"#atomic_notifier_chain_unregister\">atomic_notifier_chain_unregister</a>(struct <a class=\"id\" href=\"#atomic_notifier_head\">atomic_notifier_head</a> *<a class=\"id\" href=\"#nh\">nh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nb\">nb</a>);", 
"extern int <a class=\"id\" href=\"#blocking_notifier_chain_unregister\">blocking_notifier_chain_unregister</a>(struct <a class=\"id\" href=\"#blocking_notifier_head\">blocking_notifier_head</a> *<a class=\"id\" href=\"#nh\">nh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nb\">nb</a>);", 
"extern int <a class=\"id\" href=\"#raw_notifier_chain_unregister\">raw_notifier_chain_unregister</a>(struct <a class=\"id\" href=\"#raw_notifier_head\">raw_notifier_head</a> *<a class=\"id\" href=\"#nh\">nh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nb\">nb</a>);", 
"extern int <a class=\"id\" href=\"#srcu_notifier_chain_unregister\">srcu_notifier_chain_unregister</a>(struct <a class=\"id\" href=\"#srcu_notifier_head\">srcu_notifier_head</a> *<a class=\"id\" href=\"#nh\">nh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nb\">nb</a>);", 
"", 
"extern int <a class=\"id\" href=\"#atomic_notifier_call_chain\">atomic_notifier_call_chain</a>(struct <a class=\"id\" href=\"#atomic_notifier_head\">atomic_notifier_head</a> *<a class=\"id\" href=\"#nh\">nh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#val\">val</a>, void *<a class=\"id\" href=\"#v\">v</a>);", 
"extern int <a class=\"id\" href=\"#__atomic_notifier_call_chain\">__atomic_notifier_call_chain</a>(struct <a class=\"id\" href=\"#atomic_notifier_head\">atomic_notifier_head</a> *<a class=\"id\" href=\"#nh\">nh</a>,", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#val\">val</a>, void *<a class=\"id\" href=\"#v\">v</a>, int <a class=\"id\" href=\"#nr_to_call\">nr_to_call</a>, int *<a class=\"id\" href=\"#nr_calls\">nr_calls</a>);", 
"extern int <a class=\"id\" href=\"#blocking_notifier_call_chain\">blocking_notifier_call_chain</a>(struct <a class=\"id\" href=\"#blocking_notifier_head\">blocking_notifier_head</a> *<a class=\"id\" href=\"#nh\">nh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#val\">val</a>, void *<a class=\"id\" href=\"#v\">v</a>);", 
"extern int <a class=\"id\" href=\"#__blocking_notifier_call_chain\">__blocking_notifier_call_chain</a>(struct <a class=\"id\" href=\"#blocking_notifier_head\">blocking_notifier_head</a> *<a class=\"id\" href=\"#nh\">nh</a>,", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#val\">val</a>, void *<a class=\"id\" href=\"#v\">v</a>, int <a class=\"id\" href=\"#nr_to_call\">nr_to_call</a>, int *<a class=\"id\" href=\"#nr_calls\">nr_calls</a>);", 
"extern int <a class=\"id\" href=\"#raw_notifier_call_chain\">raw_notifier_call_chain</a>(struct <a class=\"id\" href=\"#raw_notifier_head\">raw_notifier_head</a> *<a class=\"id\" href=\"#nh\">nh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#val\">val</a>, void *<a class=\"id\" href=\"#v\">v</a>);", 
"extern int <a class=\"id\" href=\"#__raw_notifier_call_chain\">__raw_notifier_call_chain</a>(struct <a class=\"id\" href=\"#raw_notifier_head\">raw_notifier_head</a> *<a class=\"id\" href=\"#nh\">nh</a>,", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#val\">val</a>, void *<a class=\"id\" href=\"#v\">v</a>, int <a class=\"id\" href=\"#nr_to_call\">nr_to_call</a>, int *<a class=\"id\" href=\"#nr_calls\">nr_calls</a>);", 
"extern int <a class=\"id\" href=\"#srcu_notifier_call_chain\">srcu_notifier_call_chain</a>(struct <a class=\"id\" href=\"#srcu_notifier_head\">srcu_notifier_head</a> *<a class=\"id\" href=\"#nh\">nh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#val\">val</a>, void *<a class=\"id\" href=\"#v\">v</a>);", 
"extern int <a class=\"id\" href=\"#__srcu_notifier_call_chain\">__srcu_notifier_call_chain</a>(struct <a class=\"id\" href=\"#srcu_notifier_head\">srcu_notifier_head</a> *<a class=\"id\" href=\"#nh\">nh</a>,", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#val\">val</a>, void *<a class=\"id\" href=\"#v\">v</a>, int <a class=\"id\" href=\"#nr_to_call\">nr_to_call</a>, int *<a class=\"id\" href=\"#nr_calls\">nr_calls</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NOTIFY_DONE\">NOTIFY_DONE</a><span class=\"ts\"/><span class=\"ts\"/>0x0000<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Don't care */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NOTIFY_OK\">NOTIFY_OK</a><span class=\"ts\"/><span class=\"ts\"/>0x0001<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Suits me */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NOTIFY_STOP_MASK\">NOTIFY_STOP_MASK</a><span class=\"ts\"/>0x8000<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Don't call further */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NOTIFY_BAD\">NOTIFY_BAD</a><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#NOTIFY_STOP_MASK\">NOTIFY_STOP_MASK</a>|0x0002)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Bad/Veto action */</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Clean way to return from the notifier and stop further calls.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NOTIFY_STOP\">NOTIFY_STOP</a><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#NOTIFY_OK\">NOTIFY_OK</a>|<a class=\"id\" href=\"#NOTIFY_STOP_MASK\">NOTIFY_STOP_MASK</a>)", 
"", 
"<span class=\"comment\">/* Encapsulate (negative) errno value (in particular, NOTIFY_BAD &lt;=&gt; EPERM). */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#notifier_from_errno\">notifier_from_errno</a>(int <a class=\"id\" href=\"#err\">err</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NOTIFY_STOP_MASK\">NOTIFY_STOP_MASK</a> | (<a class=\"id\" href=\"#NOTIFY_OK\">NOTIFY_OK</a> - <a class=\"id\" href=\"#err\">err</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NOTIFY_OK\">NOTIFY_OK</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Restore (negative) errno value from notify return value. */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#notifier_to_errno\">notifier_to_errno</a>(int <a class=\"id\" href=\"#ret\">ret</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> &= ~<a class=\"id\" href=\"#NOTIFY_STOP_MASK\">NOTIFY_STOP_MASK</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a> &gt; <a class=\"id\" href=\"#NOTIFY_OK\">NOTIFY_OK</a> ? <a class=\"id\" href=\"#NOTIFY_OK\">NOTIFY_OK</a> - <a class=\"id\" href=\"#ret\">ret</a> : 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Declared notifiers so far. I can imagine quite a few more chains</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>over time (eg laptop power reset chains, reboot chain (to clean </span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>device units up), device [un]mount chain, module load/unload chain,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>low memory chain, screenblank chain (for plug in modular screenblankers) </span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>VC switch chains (for loadable kernel svgalib VC switch helpers) etc...</span>", 
"<span class=\"comment\"> */</span>", 
" ", 
"<span class=\"comment\">/* netdevice notifier chain. Please remember to update the rtnetlink</span>", 
"<span class=\"comment\"> * notification exclusion list in rtnetlink_event() when adding new</span>", 
"<span class=\"comment\"> * types.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETDEV_UP\">NETDEV_UP</a><span class=\"ts\"/>0x0001<span class=\"ts\"/><span class=\"comment\">/* For now you can't veto a device up/down */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETDEV_DOWN\">NETDEV_DOWN</a><span class=\"ts\"/>0x0002", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETDEV_REBOOT\">NETDEV_REBOOT</a><span class=\"ts\"/>0x0003<span class=\"ts\"/><span class=\"comment\">/* Tell a protocol stack a network interface</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   detected a hardware crash and restarted</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   - we can use this eg to kick tcp sessions</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   once done */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETDEV_CHANGE\">NETDEV_CHANGE</a><span class=\"ts\"/>0x0004<span class=\"ts\"/><span class=\"comment\">/* Notify device state change */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETDEV_REGISTER\">NETDEV_REGISTER</a> 0x0005", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETDEV_UNREGISTER\">NETDEV_UNREGISTER</a><span class=\"ts\"/>0x0006", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETDEV_CHANGEMTU\">NETDEV_CHANGEMTU</a><span class=\"ts\"/>0x0007", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETDEV_CHANGEADDR\">NETDEV_CHANGEADDR</a><span class=\"ts\"/>0x0008", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETDEV_GOING_DOWN\">NETDEV_GOING_DOWN</a><span class=\"ts\"/>0x0009", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETDEV_CHANGENAME\">NETDEV_CHANGENAME</a><span class=\"ts\"/>0x000A", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETDEV_FEAT_CHANGE\">NETDEV_FEAT_CHANGE</a><span class=\"ts\"/>0x000B", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETDEV_BONDING_FAILOVER\">NETDEV_BONDING_FAILOVER</a> 0x000C", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETDEV_PRE_UP\">NETDEV_PRE_UP</a><span class=\"ts\"/><span class=\"ts\"/>0x000D", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETDEV_PRE_TYPE_CHANGE\">NETDEV_PRE_TYPE_CHANGE</a><span class=\"ts\"/>0x000E", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETDEV_POST_TYPE_CHANGE\">NETDEV_POST_TYPE_CHANGE</a><span class=\"ts\"/>0x000F", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETDEV_POST_INIT\">NETDEV_POST_INIT</a><span class=\"ts\"/>0x0010", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETDEV_UNREGISTER_BATCH\">NETDEV_UNREGISTER_BATCH</a> 0x0011", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETDEV_BONDING_DESLAVE\">NETDEV_BONDING_DESLAVE</a>  0x0012", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETDEV_NOTIFY_PEERS\">NETDEV_NOTIFY_PEERS</a><span class=\"ts\"/>0x0013", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SYS_DOWN\">SYS_DOWN</a><span class=\"ts\"/>0x0001<span class=\"ts\"/><span class=\"comment\">/* Notify of system down */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SYS_RESTART\">SYS_RESTART</a><span class=\"ts\"/><a class=\"id\" href=\"#SYS_DOWN\">SYS_DOWN</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SYS_HALT\">SYS_HALT</a><span class=\"ts\"/>0x0002<span class=\"ts\"/><span class=\"comment\">/* Notify of system halt */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SYS_POWER_OFF\">SYS_POWER_OFF</a><span class=\"ts\"/>0x0003<span class=\"ts\"/><span class=\"comment\">/* Notify of system power off */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETLINK_URELEASE\">NETLINK_URELEASE</a><span class=\"ts\"/>0x0001<span class=\"ts\"/><span class=\"comment\">/* Unicast netlink socket released */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CPU_ONLINE\">CPU_ONLINE</a><span class=\"ts\"/><span class=\"ts\"/>0x0002 <span class=\"comment\">/* CPU (unsigned)v is up */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CPU_UP_PREPARE\">CPU_UP_PREPARE</a><span class=\"ts\"/><span class=\"ts\"/>0x0003 <span class=\"comment\">/* CPU (unsigned)v coming up */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CPU_UP_CANCELED\">CPU_UP_CANCELED</a><span class=\"ts\"/><span class=\"ts\"/>0x0004 <span class=\"comment\">/* CPU (unsigned)v NOT coming up */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CPU_DOWN_PREPARE\">CPU_DOWN_PREPARE</a><span class=\"ts\"/>0x0005 <span class=\"comment\">/* CPU (unsigned)v going down */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CPU_DOWN_FAILED\">CPU_DOWN_FAILED</a><span class=\"ts\"/><span class=\"ts\"/>0x0006 <span class=\"comment\">/* CPU (unsigned)v NOT going down */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CPU_DEAD\">CPU_DEAD</a><span class=\"ts\"/><span class=\"ts\"/>0x0007 <span class=\"comment\">/* CPU (unsigned)v dead */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CPU_DYING\">CPU_DYING</a><span class=\"ts\"/><span class=\"ts\"/>0x0008 <span class=\"comment\">/* CPU (unsigned)v not running any task,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>* not handling interrupts, soon dead.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>* Called on the dying cpu, interrupts</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>* are already disabled. Must not</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>* sleep, must not fail */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CPU_POST_DEAD\">CPU_POST_DEAD</a><span class=\"ts\"/><span class=\"ts\"/>0x0009 <span class=\"comment\">/* CPU (unsigned)v dead, cpu_hotplug</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>* lock is dropped */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CPU_STARTING\">CPU_STARTING</a><span class=\"ts\"/><span class=\"ts\"/>0x000A <span class=\"comment\">/* CPU (unsigned)v soon running.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>* Called on the new cpu, just before</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>* enabling interrupts. Must not sleep,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>* must not fail */</span>", 
"", 
"<span class=\"comment\">/* Used for CPU hotplug events occuring while tasks are frozen due to a suspend</span>", 
"<span class=\"comment\"> * operation in progress</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CPU_TASKS_FROZEN\">CPU_TASKS_FROZEN</a><span class=\"ts\"/>0x0010", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CPU_ONLINE_FROZEN\">CPU_ONLINE_FROZEN</a><span class=\"ts\"/>(<a class=\"id\" href=\"#CPU_ONLINE\">CPU_ONLINE</a> | <a class=\"id\" href=\"#CPU_TASKS_FROZEN\">CPU_TASKS_FROZEN</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CPU_UP_PREPARE_FROZEN\">CPU_UP_PREPARE_FROZEN</a><span class=\"ts\"/>(<a class=\"id\" href=\"#CPU_UP_PREPARE\">CPU_UP_PREPARE</a> | <a class=\"id\" href=\"#CPU_TASKS_FROZEN\">CPU_TASKS_FROZEN</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CPU_UP_CANCELED_FROZEN\">CPU_UP_CANCELED_FROZEN</a><span class=\"ts\"/>(<a class=\"id\" href=\"#CPU_UP_CANCELED\">CPU_UP_CANCELED</a> | <a class=\"id\" href=\"#CPU_TASKS_FROZEN\">CPU_TASKS_FROZEN</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CPU_DOWN_PREPARE_FROZEN\">CPU_DOWN_PREPARE_FROZEN</a><span class=\"ts\"/>(<a class=\"id\" href=\"#CPU_DOWN_PREPARE\">CPU_DOWN_PREPARE</a> | <a class=\"id\" href=\"#CPU_TASKS_FROZEN\">CPU_TASKS_FROZEN</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CPU_DOWN_FAILED_FROZEN\">CPU_DOWN_FAILED_FROZEN</a><span class=\"ts\"/>(<a class=\"id\" href=\"#CPU_DOWN_FAILED\">CPU_DOWN_FAILED</a> | <a class=\"id\" href=\"#CPU_TASKS_FROZEN\">CPU_TASKS_FROZEN</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CPU_DEAD_FROZEN\">CPU_DEAD_FROZEN</a><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#CPU_DEAD\">CPU_DEAD</a> | <a class=\"id\" href=\"#CPU_TASKS_FROZEN\">CPU_TASKS_FROZEN</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CPU_DYING_FROZEN\">CPU_DYING_FROZEN</a><span class=\"ts\"/>(<a class=\"id\" href=\"#CPU_DYING\">CPU_DYING</a> | <a class=\"id\" href=\"#CPU_TASKS_FROZEN\">CPU_TASKS_FROZEN</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CPU_STARTING_FROZEN\">CPU_STARTING_FROZEN</a><span class=\"ts\"/>(<a class=\"id\" href=\"#CPU_STARTING\">CPU_STARTING</a> | <a class=\"id\" href=\"#CPU_TASKS_FROZEN\">CPU_TASKS_FROZEN</a>)", 
"", 
"<span class=\"comment\">/* Hibernation and suspend events */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PM_HIBERNATION_PREPARE\">PM_HIBERNATION_PREPARE</a><span class=\"ts\"/>0x0001 <span class=\"comment\">/* Going to hibernate */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PM_POST_HIBERNATION\">PM_POST_HIBERNATION</a><span class=\"ts\"/>0x0002 <span class=\"comment\">/* Hibernation finished */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PM_SUSPEND_PREPARE\">PM_SUSPEND_PREPARE</a><span class=\"ts\"/>0x0003 <span class=\"comment\">/* Going to suspend the system */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PM_POST_SUSPEND\">PM_POST_SUSPEND</a><span class=\"ts\"/><span class=\"ts\"/>0x0004 <span class=\"comment\">/* Suspend finished */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PM_RESTORE_PREPARE\">PM_RESTORE_PREPARE</a><span class=\"ts\"/>0x0005 <span class=\"comment\">/* Going to restore a saved image */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PM_POST_RESTORE\">PM_POST_RESTORE</a><span class=\"ts\"/><span class=\"ts\"/>0x0006 <span class=\"comment\">/* Restore failed */</span>", 
"", 
"<span class=\"comment\">/* Console keyboard events.</span>", 
"<span class=\"comment\"> * Note: KBD_KEYCODE is always sent before KBD_UNBOUND_KEYCODE, KBD_UNICODE and</span>", 
"<span class=\"comment\"> * KBD_KEYSYM. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KBD_KEYCODE\">KBD_KEYCODE</a><span class=\"ts\"/><span class=\"ts\"/>0x0001 <span class=\"comment\">/* Keyboard keycode, called before any other */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KBD_UNBOUND_KEYCODE\">KBD_UNBOUND_KEYCODE</a><span class=\"ts\"/>0x0002 <span class=\"comment\">/* Keyboard keycode which is not bound to any other */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KBD_UNICODE\">KBD_UNICODE</a><span class=\"ts\"/><span class=\"ts\"/>0x0003 <span class=\"comment\">/* Keyboard unicode */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KBD_KEYSYM\">KBD_KEYSYM</a><span class=\"ts\"/><span class=\"ts\"/>0x0004 <span class=\"comment\">/* Keyboard keysym */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KBD_POST_KEYSYM\">KBD_POST_KEYSYM</a><span class=\"ts\"/><span class=\"ts\"/>0x0005 <span class=\"comment\">/* Called after keyboard keysym interpretation */</span>", 
"", 
"extern struct <a class=\"id\" href=\"#blocking_notifier_head\">blocking_notifier_head</a> <a class=\"id\" href=\"#reboot_notifier_list\">reboot_notifier_list</a>;", 
"", 
"<span class=\"comment\">/* Virtual Terminal events. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VT_ALLOCATE\">VT_ALLOCATE</a><span class=\"ts\"/><span class=\"ts\"/>0x0001 <span class=\"comment\">/* Console got allocated */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VT_DEALLOCATE\">VT_DEALLOCATE</a><span class=\"ts\"/><span class=\"ts\"/>0x0002 <span class=\"comment\">/* Console will be deallocated */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VT_WRITE\">VT_WRITE</a><span class=\"ts\"/><span class=\"ts\"/>0x0003 <span class=\"comment\">/* A char got output */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VT_UPDATE\">VT_UPDATE</a><span class=\"ts\"/><span class=\"ts\"/>0x0004 <span class=\"comment\">/* A bigger update occurred */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VT_PREWRITE\">VT_PREWRITE</a><span class=\"ts\"/><span class=\"ts\"/>0x0005 <span class=\"comment\">/* A char is about to be written to the console */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __KERNEL__ */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _LINUX_NOTIFIER_H */</span>", 
];
xr_frag_insert('l/58/734f6df70466c9d83cf33bfd35b543f1bf226c.xr', __xr_tmp);
