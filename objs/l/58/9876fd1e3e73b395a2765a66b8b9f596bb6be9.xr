var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  linux/include/linux/ext3_fs_sb.h</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 1992, 1993, 1994, 1995</span>", 
"<span class=\"comment\"> * Remy Card (card@masi.ibp.fr)</span>", 
"<span class=\"comment\"> * Laboratoire MASI - Institut Blaise Pascal</span>", 
"<span class=\"comment\"> * Universite Pierre et Marie Curie (Paris VI)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  from</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  linux/include/linux/minix_fs_sb.h</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 1991, 1992  Linus Torvalds</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_EXT3_FS_SB\">_LINUX_EXT3_FS_SB</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_EXT3_FS_SB\">_LINUX_EXT3_FS_SB</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#wait\">wait</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blockgroup_lock\">blockgroup_lock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#percpu_counter\">percpu_counter</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rbtree\">rbtree</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * third extended-fs super-block data in memory</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#ext3_sb_info\">ext3_sb_info</a> {", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_frag_size\">s_frag_size</a>;<span class=\"ts\"/><span class=\"comment\">/* Size of a fragment in bytes */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_frags_per_block\">s_frags_per_block</a>;<span class=\"comment\">/* Number of fragments per block */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_inodes_per_block\">s_inodes_per_block</a>;<span class=\"comment\">/* Number of inodes per block */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_frags_per_group\">s_frags_per_group</a>;<span class=\"comment\">/* Number of fragments in a group */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_blocks_per_group\">s_blocks_per_group</a>;<span class=\"comment\">/* Number of blocks in a group */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_inodes_per_group\">s_inodes_per_group</a>;<span class=\"comment\">/* Number of inodes in a group */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_itb_per_group\">s_itb_per_group</a>;<span class=\"ts\"/><span class=\"comment\">/* Number of inode table blocks per group */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_gdb_count\">s_gdb_count</a>;<span class=\"ts\"/><span class=\"comment\">/* Number of group descriptor blocks */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_desc_per_block\">s_desc_per_block</a>;<span class=\"ts\"/><span class=\"comment\">/* Number of group descriptors per block */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_groups_count\">s_groups_count</a>;<span class=\"ts\"/><span class=\"comment\">/* Number of groups in the fs */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_overhead_last\">s_overhead_last</a>;  <span class=\"comment\">/* Last calculated overhead */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_blocks_last\">s_blocks_last</a>;    <span class=\"comment\">/* Last seen block count */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> * <a class=\"id\" href=\"#s_sbh\">s_sbh</a>;<span class=\"ts\"/><span class=\"comment\">/* Buffer containing the super block */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_super_block\">ext3_super_block</a> * <a class=\"id\" href=\"#s_es\">s_es</a>;<span class=\"ts\"/><span class=\"comment\">/* Pointer to the super block in the buffer */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> ** <a class=\"id\" href=\"#s_group_desc\">s_group_desc</a>;", 
"<span class=\"ts\"/>unsigned long  <a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_fsblk_t\">ext3_fsblk_t</a> <a class=\"id\" href=\"#s_sb_block\">s_sb_block</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uid_t\">uid_t</a> <a class=\"id\" href=\"#s_resuid\">s_resuid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gid_t\">gid_t</a> <a class=\"id\" href=\"#s_resgid\">s_resgid</a>;", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#s_mount_state\">s_mount_state</a>;", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#s_pad\">s_pad</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#s_addr_per_block_bits\">s_addr_per_block_bits</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#s_desc_per_block_bits\">s_desc_per_block_bits</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#s_inode_size\">s_inode_size</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#s_first_ino\">s_first_ino</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> <a class=\"id\" href=\"#s_next_gen_lock\">s_next_gen_lock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#s_next_generation\">s_next_generation</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#s_hash_seed\">s_hash_seed</a>[4];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#s_def_hash_version\">s_def_hash_version</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#s_hash_unsigned\">s_hash_unsigned</a>;<span class=\"ts\"/><span class=\"comment\">/* 3 if hash should be signed, 0 if not */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#percpu_counter\">percpu_counter</a> <a class=\"id\" href=\"#s_freeblocks_counter\">s_freeblocks_counter</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#percpu_counter\">percpu_counter</a> <a class=\"id\" href=\"#s_freeinodes_counter\">s_freeinodes_counter</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#percpu_counter\">percpu_counter</a> <a class=\"id\" href=\"#s_dirs_counter\">s_dirs_counter</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#blockgroup_lock\">blockgroup_lock</a> *<a class=\"id\" href=\"#s_blockgroup_lock\">s_blockgroup_lock</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* root of the per fs reservation window tree */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> <a class=\"id\" href=\"#s_rsv_window_lock\">s_rsv_window_lock</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_root\">rb_root</a> <a class=\"id\" href=\"#s_rsv_window_root\">s_rsv_window_root</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_reserve_window_node\">ext3_reserve_window_node</a> <a class=\"id\" href=\"#s_rsv_window_head\">s_rsv_window_head</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Journaling */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> * <a class=\"id\" href=\"#s_journal_inode\">s_journal_inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#journal_s\">journal_s</a> * <a class=\"id\" href=\"#s_journal\">s_journal</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#s_orphan\">s_orphan</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mutex\">mutex</a> <a class=\"id\" href=\"#s_orphan_lock\">s_orphan_lock</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mutex\">mutex</a> <a class=\"id\" href=\"#s_resize_lock\">s_resize_lock</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_commit_interval\">s_commit_interval</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#journal_bdev\">journal_bdev</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_JBD_DEBUG\">CONFIG_JBD_DEBUG</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timer_list\">timer_list</a> <a class=\"id\" href=\"#turn_ro_timer\">turn_ro_timer</a>;<span class=\"ts\"/><span class=\"comment\">/* For turning read-only (crash simulation) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wait_queue_head_t\">wait_queue_head_t</a> <a class=\"id\" href=\"#ro_wait_queue\">ro_wait_queue</a>;<span class=\"ts\"/><span class=\"comment\">/* For people waiting for the fs to go read-only */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>];<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Names of quota files with journalled quota */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#s_jquota_fmt\">s_jquota_fmt</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Format of quota to use */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> *", 
"<a class=\"id\" href=\"#sb_bgl_lock\">sb_bgl_lock</a>(struct <a class=\"id\" href=\"#ext3_sb_info\">ext3_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a>, unsigned int <a class=\"id\" href=\"#block_group\">block_group</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bgl_lock_ptr\">bgl_lock_ptr</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_blockgroup_lock\">s_blockgroup_lock</a>, <a class=\"id\" href=\"#block_group\">block_group</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* _LINUX_EXT3_FS_SB */</span>", 
];
xr_frag_insert('l/58/9876fd1e3e73b395a2765a66b8b9f596bb6be9.xr', __xr_tmp);
