var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * PCI Express Hot Plug Controller Driver</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 1995,2001 Compaq Computer Corporation</span>", 
"<span class=\"comment\"> * Copyright (C) 2001 Greg Kroah-Hartman (greg@kroah.com)</span>", 
"<span class=\"comment\"> * Copyright (C) 2001 IBM Corp.</span>", 
"<span class=\"comment\"> * Copyright (C) 2003-2004 Intel Corporation</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * All rights reserved.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> * it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> * the Free Software Foundation; either version 2 of the License, or (at</span>", 
"<span class=\"comment\"> * your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is distributed in the hope that it will be useful, but</span>", 
"<span class=\"comment\"> * WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> * MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, GOOD TITLE or</span>", 
"<span class=\"comment\"> * NON INFRINGEMENT.  See the GNU General Public License for more</span>", 
"<span class=\"comment\"> * details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\"> * along with this program; if not, write to the Free Software</span>", 
"<span class=\"comment\"> * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Send feedback to &lt;greg@kroah.com&gt;, &lt;kristen.c.accardi@intel.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"../pci.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"pciehp.h\"", 
"", 
"static int <a class=\"id\" href=\"#__ref\">__ref</a> <a class=\"id\" href=\"#pciehp_add_bridge\">pciehp_add_bridge</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#pass\">pass</a>, <a class=\"id\" href=\"#busnr\">busnr</a>, <a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#secondary\">secondary</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#busnr\">busnr</a> = <a class=\"id\" href=\"#start\">start</a>; <a class=\"id\" href=\"#busnr\">busnr</a> <= <a class=\"id\" href=\"#end\">end</a>; <a class=\"id\" href=\"#busnr\">busnr</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pci_find_bus\">pci_find_bus</a>(<a class=\"id\" href=\"#pci_domain_nr\">pci_domain_nr</a>(<a class=\"id\" href=\"#parent\">parent</a>), <a class=\"id\" href=\"#busnr\">busnr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#busnr\">busnr</a>-- &gt; <a class=\"id\" href=\"#end\">end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a>(\"No bus number available for hot-added bridge %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_name\">pci_name</a>(<a class=\"id\" href=\"#dev\">dev</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#pass\">pass</a> = 0; <a class=\"id\" href=\"#pass\">pass</a> &lt; 2; <a class=\"id\" href=\"#pass\">pass</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#busnr\">busnr</a> = <a class=\"id\" href=\"#pci_scan_bridge\">pci_scan_bridge</a>(<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#busnr\">busnr</a>, <a class=\"id\" href=\"#pass\">pass</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#pciehp_configure_device\">pciehp_configure_device</a>(struct <a class=\"id\" href=\"#slot\">slot</a> *<a class=\"id\" href=\"#p_slot\">p_slot</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#bridge\">bridge</a> = <a class=\"id\" href=\"#p_slot\">p_slot</a>-><a class=\"id\" href=\"#ctrl\">ctrl</a>-><a class=\"id\" href=\"#pcie\">pcie</a>-><a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#bridge\">bridge</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#num\">num</a>, <a class=\"id\" href=\"#fn\">fn</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#controller\">controller</a> *<a class=\"id\" href=\"#ctrl\">ctrl</a> = <a class=\"id\" href=\"#p_slot\">p_slot</a>-><a class=\"id\" href=\"#ctrl\">ctrl</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#pci_get_slot\">pci_get_slot</a>(<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#PCI_DEVFN\">PCI_DEVFN</a>(0, 0));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctrl_err\">ctrl_err</a>(<a class=\"id\" href=\"#ctrl\">ctrl</a>, \"Device %s already exists \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"at %04x:%02x:00, cannot hot-add\\n\", <a class=\"id\" href=\"#pci_name\">pci_name</a>(<a class=\"id\" href=\"#dev\">dev</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#pci_domain_nr\">pci_domain_nr</a>(<a class=\"id\" href=\"#parent\">parent</a>), <a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#number\">number</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_dev_put\">pci_dev_put</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#num\">num</a> = <a class=\"id\" href=\"#pci_scan_slot\">pci_scan_slot</a>(<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#PCI_DEVFN\">PCI_DEVFN</a>(0, 0));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#num\">num</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctrl_err\">ctrl_err</a>(<a class=\"id\" href=\"#ctrl\">ctrl</a>, \"No new device found\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#fn\">fn</a> = 0; <a class=\"id\" href=\"#fn\">fn</a> &lt; 8; <a class=\"id\" href=\"#fn\">fn</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#pci_get_slot\">pci_get_slot</a>(<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#PCI_DEVFN\">PCI_DEVFN</a>(0, <a class=\"id\" href=\"#fn\">fn</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#hdr_type\">hdr_type</a> == <a class=\"id\" href=\"#PCI_HEADER_TYPE_BRIDGE\">PCI_HEADER_TYPE_BRIDGE</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#hdr_type\">hdr_type</a> == <a class=\"id\" href=\"#PCI_HEADER_TYPE_CARDBUS\">PCI_HEADER_TYPE_CARDBUS</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pciehp_add_bridge\">pciehp_add_bridge</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_dev_put\">pci_dev_put</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_assign_unassigned_bridge_resources\">pci_assign_unassigned_bridge_resources</a>(<a class=\"id\" href=\"#bridge\">bridge</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#fn\">fn</a> = 0; <a class=\"id\" href=\"#fn\">fn</a> &lt; 8; <a class=\"id\" href=\"#fn\">fn</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#pci_get_slot\">pci_get_slot</a>(<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#PCI_DEVFN\">PCI_DEVFN</a>(0, <a class=\"id\" href=\"#fn\">fn</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a> >> 16) == <a class=\"id\" href=\"#PCI_BASE_CLASS_DISPLAY\">PCI_BASE_CLASS_DISPLAY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_dev_put\">pci_dev_put</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_configure_slot\">pci_configure_slot</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_dev_put\">pci_dev_put</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_bus_add_devices\">pci_bus_add_devices</a>(<a class=\"id\" href=\"#parent\">parent</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#pciehp_unconfigure_device\">pciehp_unconfigure_device</a>(struct <a class=\"id\" href=\"#slot\">slot</a> *<a class=\"id\" href=\"#p_slot\">p_slot</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#j\">j</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#bctl\">bctl</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#presence\">presence</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#p_slot\">p_slot</a>-><a class=\"id\" href=\"#ctrl\">ctrl</a>-><a class=\"id\" href=\"#pcie\">pcie</a>-><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#command\">command</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#controller\">controller</a> *<a class=\"id\" href=\"#ctrl\">ctrl</a> = <a class=\"id\" href=\"#p_slot\">p_slot</a>-><a class=\"id\" href=\"#ctrl\">ctrl</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctrl_dbg\">ctrl_dbg</a>(<a class=\"id\" href=\"#ctrl\">ctrl</a>, \"%s: domain:bus:dev = %04x:%02x:00\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#pci_domain_nr\">pci_domain_nr</a>(<a class=\"id\" href=\"#parent\">parent</a>), <a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#number\">number</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pciehp_get_adapter_status\">pciehp_get_adapter_status</a>(<a class=\"id\" href=\"#p_slot\">p_slot</a>, &amp;<a class=\"id\" href=\"#presence\">presence</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#presence\">presence</a> = 0;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#j\">j</a> &lt; 8; <a class=\"id\" href=\"#j\">j</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#temp\">temp</a> = <a class=\"id\" href=\"#pci_get_slot\">pci_get_slot</a>(<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#PCI_DEVFN\">PCI_DEVFN</a>(0, <a class=\"id\" href=\"#j\">j</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#temp\">temp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#temp\">temp</a>-><a class=\"id\" href=\"#hdr_type\">hdr_type</a> == <a class=\"id\" href=\"#PCI_HEADER_TYPE_BRIDGE\">PCI_HEADER_TYPE_BRIDGE</a> && <a class=\"id\" href=\"#presence\">presence</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_byte\">pci_read_config_byte</a>(<a class=\"id\" href=\"#temp\">temp</a>, <a class=\"id\" href=\"#PCI_BRIDGE_CONTROL\">PCI_BRIDGE_CONTROL</a>, &amp;<a class=\"id\" href=\"#bctl\">bctl</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#bctl\">bctl</a> &amp; <a class=\"id\" href=\"#PCI_BRIDGE_CTL_VGA\">PCI_BRIDGE_CTL_VGA</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctrl_err\">ctrl_err</a>(<a class=\"id\" href=\"#ctrl\">ctrl</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"Cannot remove display device %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#pci_name\">pci_name</a>(<a class=\"id\" href=\"#temp\">temp</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_dev_put\">pci_dev_put</a>(<a class=\"id\" href=\"#temp\">temp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_remove_bus_device\">pci_remove_bus_device</a>(<a class=\"id\" href=\"#temp\">temp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Ensure that no new Requests will be generated from</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the device.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#presence\">presence</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#temp\">temp</a>, <a class=\"id\" href=\"#PCI_COMMAND\">PCI_COMMAND</a>, &amp;<a class=\"id\" href=\"#command\">command</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#command\">command</a> &= ~(<a class=\"id\" href=\"#PCI_COMMAND_MASTER\">PCI_COMMAND_MASTER</a> | <a class=\"id\" href=\"#PCI_COMMAND_SERR\">PCI_COMMAND_SERR</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#command\">command</a> |= <a class=\"id\" href=\"#PCI_COMMAND_INTX_DISABLE\">PCI_COMMAND_INTX_DISABLE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_word\">pci_write_config_word</a>(<a class=\"id\" href=\"#temp\">temp</a>, <a class=\"id\" href=\"#PCI_COMMAND\">PCI_COMMAND</a>, <a class=\"id\" href=\"#command\">command</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_dev_put\">pci_dev_put</a>(<a class=\"id\" href=\"#temp\">temp</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
];
xr_frag_insert('l/58/a9c1ef19992c24d8c7c68431d400fa726e92e7.xr', __xr_tmp);
