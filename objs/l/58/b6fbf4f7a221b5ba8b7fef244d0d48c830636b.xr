var __xr_tmp = [
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mode\">mode</a> != <a class=\"id\" href=\"#CLOCK_EVT_MODE_UNUSED\">CLOCK_EVT_MODE_UNUSED</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#cpumask\">cpumask</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock_irqsave\">raw_spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#clockevents_lock\">clockevents_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#clockevent_devices\">clockevent_devices</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clockevents_do_notify\">clockevents_do_notify</a>(<a class=\"id\" href=\"#CLOCK_EVT_NOTIFY_ADD\">CLOCK_EVT_NOTIFY_ADD</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clockevents_notify_released\">clockevents_notify_released</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock_irqrestore\">raw_spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#clockevents_lock\">clockevents_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#clockevents_register_device\">clockevents_register_device</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Noop handler when we shut down an event device</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#clockevents_handle_noop\">clockevents_handle_noop</a>(struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * clockevents_exchange_device - release and request clock devices</span>", 
"<span class=\"comment\"> * @old:<span class=\"ts\"/>device to release (can be NULL)</span>", 
"<span class=\"comment\"> * @new:<span class=\"ts\"/>device to request (can be NULL)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Called from the notifier chain. clockevents_lock is held already</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#clockevents_exchange_device\">clockevents_exchange_device</a>(struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *<a class=\"id\" href=\"#old\">old</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *<a class=\"id\" href=\"#new\">new</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_save\">local_irq_save</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Caller releases a clock event device. We queue it into the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * released list and do a notify add later.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#old\">old</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clockevents_set_mode\">clockevents_set_mode</a>(<a class=\"id\" href=\"#old\">old</a>, <a class=\"id\" href=\"#CLOCK_EVT_MODE_UNUSED\">CLOCK_EVT_MODE_UNUSED</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#clockevents_released\">clockevents_released</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new\">new</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#mode\">mode</a> != <a class=\"id\" href=\"#CLOCK_EVT_MODE_UNUSED\">CLOCK_EVT_MODE_UNUSED</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clockevents_shutdown\">clockevents_shutdown</a>(<a class=\"id\" href=\"#new\">new</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_restore\">local_irq_restore</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_GENERIC_CLOCKEVENTS\">CONFIG_GENERIC_CLOCKEVENTS</a>", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * clockevents_notify - notification about relevant events</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#clockevents_notify\">clockevents_notify</a>(unsigned long <a class=\"id\" href=\"#reason\">reason</a>, void *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, *<a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock_irqsave\">raw_spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#clockevents_lock\">clockevents_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clockevents_do_notify\">clockevents_do_notify</a>(<a class=\"id\" href=\"#reason\">reason</a>, <a class=\"id\" href=\"#arg\">arg</a>);", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#reason\">reason</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CLOCK_EVT_NOTIFY_CPU_DEAD\">CLOCK_EVT_NOTIFY_CPU_DEAD</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Unregister the clock event devices which were</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * released from the users in the notify chain.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#tmp\">tmp</a>, &amp;<a class=\"id\" href=\"#clockevents_released\">clockevents_released</a>, <a class=\"id\" href=\"#list\">list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Now check whether the CPU has left unused per cpu devices</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu\">cpu</a> = *((int *)<a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#tmp\">tmp</a>, &amp;<a class=\"id\" href=\"#clockevent_devices\">clockevent_devices</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cpumask_test_cpu\">cpumask_test_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#cpumask\">cpumask</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#cpumask_weight\">cpumask_weight</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#cpumask\">cpumask</a>) == 1 &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#tick_is_broadcast_device\">tick_is_broadcast_device</a>(<a class=\"id\" href=\"#dev\">dev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mode\">mode</a> != <a class=\"id\" href=\"#CLOCK_EVT_MODE_UNUSED\">CLOCK_EVT_MODE_UNUSED</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock_irqrestore\">raw_spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#clockevents_lock\">clockevents_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#clockevents_notify\">clockevents_notify</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/58/b6fbf4f7a221b5ba8b7fef244d0d48c830636b.xr', __xr_tmp);
