var __xr_tmp = [
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#dock_remove_acpi_device\">dock_remove_acpi_device</a>(<a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#handle\">handle</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_device\">acpi_device</a> *<a class=\"id\" href=\"#device\">device</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#acpi_bus_get_device\">acpi_bus_get_device</a>(<a class=\"id\" href=\"#handle\">handle</a>, &amp;<a class=\"id\" href=\"#device\">device</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#acpi_bus_trim\">acpi_bus_trim</a>(<a class=\"id\" href=\"#device\">device</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"error removing bus, %x\\n\", -<a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * hotplug_dock_devices - insert or remove devices on the dock station</span>", 
"<span class=\"comment\"> * @ds: the dock station</span>", 
"<span class=\"comment\"> * @event: either bus check or eject request</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Some devices on the dock station need to have drivers called</span>", 
"<span class=\"comment\"> * to perform hotplug operations after a dock event has occurred.</span>", 
"<span class=\"comment\"> * Traverse the list of dock devices that have registered a</span>", 
"<span class=\"comment\"> * hotplug handler, and call the handler.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#hotplug_dock_devices\">hotplug_dock_devices</a>(struct <a class=\"id\" href=\"#dock_station\">dock_station</a> *<a class=\"id\" href=\"#ds\">ds</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#event\">event</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dock_dependent_device\">dock_dependent_device</a> *<a class=\"id\" href=\"#dd\">dd</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#hp_lock\">hp_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * First call driver specific hotplug functions</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#dd\">dd</a>, &amp;<a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#hotplug_devices\">hotplug_devices</a>, <a class=\"id\" href=\"#hotplug_list\">hotplug_list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dd\">dd</a>-><a class=\"id\" href=\"#ops\">ops</a> && <a class=\"id\" href=\"#dd\">dd</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#handler\">handler</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dd\">dd</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#handler\">handler</a>(<a class=\"id\" href=\"#dd\">dd</a>-><a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#event\">event</a>, <a class=\"id\" href=\"#dd\">dd</a>-><a class=\"id\" href=\"#context\">context</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Now make sure that an acpi_device is created for each</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * dependent device, or removed if this is an eject request.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This will cause acpi_drivers to be stopped/started if they</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * exist</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#dd\">dd</a>, &amp;<a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#dependent_devices\">dependent_devices</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#event\">event</a> == <a class=\"id\" href=\"#ACPI_NOTIFY_EJECT_REQUEST\">ACPI_NOTIFY_EJECT_REQUEST</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dock_remove_acpi_device\">dock_remove_acpi_device</a>(<a class=\"id\" href=\"#dd\">dd</a>-><a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dock_create_acpi_device\">dock_create_acpi_device</a>(<a class=\"id\" href=\"#dd\">dd</a>-><a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#hp_lock\">hp_lock</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#dock_event\">dock_event</a>(struct <a class=\"id\" href=\"#dock_station\">dock_station</a> *<a class=\"id\" href=\"#ds\">ds</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#event\">event</a>, int <a class=\"id\" href=\"#num\">num</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a> = &amp;<a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#dock_device\">dock_device</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#event_string\">event_string</a>[13];", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#envp\">envp</a>[] = { <a class=\"id\" href=\"#event_string\">event_string</a>, <a class=\"id\" href=\"#NULL\">NULL</a> };", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dock_dependent_device\">dock_dependent_device</a> *<a class=\"id\" href=\"#dd\">dd</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#num\">num</a> == <a class=\"id\" href=\"#UNDOCK_EVENT\">UNDOCK_EVENT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#event_string\">event_string</a>, \"EVENT=undock\");", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#event_string\">event_string</a>, \"EVENT=dock\");", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Indicate that the status of the dock station has</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * changed.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#num\">num</a> == <a class=\"id\" href=\"#DOCK_EVENT\">DOCK_EVENT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kobject_uevent_env\">kobject_uevent_env</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#KOBJ_CHANGE\">KOBJ_CHANGE</a>, <a class=\"id\" href=\"#envp\">envp</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#dd\">dd</a>, &amp;<a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#hotplug_devices\">hotplug_devices</a>, <a class=\"id\" href=\"#hotplug_list\">hotplug_list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dd\">dd</a>-><a class=\"id\" href=\"#ops\">ops</a> && <a class=\"id\" href=\"#dd\">dd</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#uevent\">uevent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dd\">dd</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#uevent\">uevent</a>(<a class=\"id\" href=\"#dd\">dd</a>-><a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#event\">event</a>, <a class=\"id\" href=\"#dd\">dd</a>-><a class=\"id\" href=\"#context\">context</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#num\">num</a> != <a class=\"id\" href=\"#DOCK_EVENT\">DOCK_EVENT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kobject_uevent_env\">kobject_uevent_env</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#KOBJ_CHANGE\">KOBJ_CHANGE</a>, <a class=\"id\" href=\"#envp\">envp</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * eject_dock - respond to a dock eject request</span>", 
"<span class=\"comment\"> * @ds: the dock station</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is called after _DCK is called, to execute the dock station's</span>", 
"<span class=\"comment\"> * _EJ0 method.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#eject_dock\">eject_dock</a>(struct <a class=\"id\" href=\"#dock_station\">dock_station</a> *<a class=\"id\" href=\"#ds\">ds</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_object_list\">acpi_object_list</a> <a class=\"id\" href=\"#arg_list\">arg_list</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_object\">acpi_object</a> <a class=\"id\" href=\"#arg\">arg</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* all dock devices should have _EJ0, but check anyway */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_get_handle\">acpi_get_handle</a>(<a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#handle\">handle</a>, \"_EJ0\", &amp;<a class=\"id\" href=\"#tmp\">tmp</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"No _EJ0 support for dock device\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arg_list\">arg_list</a>.<a class=\"id\" href=\"#count\">count</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arg_list\">arg_list</a>.<a class=\"id\" href=\"#pointer\">pointer</a> = &amp;<a class=\"id\" href=\"#arg\">arg</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a>.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#ACPI_TYPE_INTEGER\">ACPI_TYPE_INTEGER</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a>.<a class=\"id\" href=\"#integer\">integer</a>.<a class=\"id\" href=\"#value\">value</a> = 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_evaluate_object\">acpi_evaluate_object</a>(<a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#handle\">handle</a>, \"_EJ0\", &amp;<a class=\"id\" href=\"#arg_list\">arg_list</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"Failed to evaluate _EJ0!\\n\");", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * handle_dock - handle a dock event</span>", 
"<span class=\"comment\"> * @ds: the dock station</span>", 
"<span class=\"comment\"> * @dock: to dock, or undock - that is the question</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Execute the _DCK method in response to an acpi event</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#handle_dock\">handle_dock</a>(struct <a class=\"id\" href=\"#dock_station\">dock_station</a> *<a class=\"id\" href=\"#ds\">ds</a>, int <a class=\"id\" href=\"#dock\">dock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_object_list\">acpi_object_list</a> <a class=\"id\" href=\"#arg_list\">arg_list</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_object\">acpi_object</a> <a class=\"id\" href=\"#arg\">arg</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_buffer\">acpi_buffer</a> <a class=\"id\" href=\"#buffer\">buffer</a> = { <a class=\"id\" href=\"#ACPI_ALLOCATE_BUFFER\">ACPI_ALLOCATE_BUFFER</a>, <a class=\"id\" href=\"#NULL\">NULL</a> };", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_buffer\">acpi_buffer</a> <a class=\"id\" href=\"#name_buffer\">name_buffer</a> = { <a class=\"id\" href=\"#ACPI_ALLOCATE_BUFFER\">ACPI_ALLOCATE_BUFFER</a>, <a class=\"id\" href=\"#NULL\">NULL</a> };", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_get_name\">acpi_get_name</a>(<a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#ACPI_FULL_PATHNAME\">ACPI_FULL_PATHNAME</a>, &amp;<a class=\"id\" href=\"#name_buffer\">name_buffer</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"%s - %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>(char *)<a class=\"id\" href=\"#name_buffer\">name_buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>, <a class=\"id\" href=\"#dock\">dock</a> ? \"docking\" : \"undocking\");", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* _DCK method has one argument */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arg_list\">arg_list</a>.<a class=\"id\" href=\"#count\">count</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arg_list\">arg_list</a>.<a class=\"id\" href=\"#pointer\">pointer</a> = &amp;<a class=\"id\" href=\"#arg\">arg</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a>.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#ACPI_TYPE_INTEGER\">ACPI_TYPE_INTEGER</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a>.<a class=\"id\" href=\"#integer\">integer</a>.<a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#dock\">dock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_evaluate_object\">acpi_evaluate_object</a>(<a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#handle\">handle</a>, \"_DCK\", &amp;<a class=\"id\" href=\"#arg_list\">arg_list</a>, &amp;<a class=\"id\" href=\"#buffer\">buffer</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>) && <a class=\"id\" href=\"#status\">status</a> != <a class=\"id\" href=\"#AE_NOT_FOUND\">AE_NOT_FOUND</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_EXCEPTION\">ACPI_EXCEPTION</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, <a class=\"id\" href=\"#status\">status</a>, \"%s - failed to execute\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\" _DCK\\n\", (char *)<a class=\"id\" href=\"#name_buffer\">name_buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#name_buffer\">name_buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#dock\">dock</a>(struct <a class=\"id\" href=\"#dock_station\">dock_station</a> *<a class=\"id\" href=\"#ds\">ds</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle_dock\">handle_dock</a>(<a class=\"id\" href=\"#ds\">ds</a>, 1);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#undock\">undock</a>(struct <a class=\"id\" href=\"#dock_station\">dock_station</a> *<a class=\"id\" href=\"#ds\">ds</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle_dock\">handle_dock</a>(<a class=\"id\" href=\"#ds\">ds</a>, 0);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#begin_dock\">begin_dock</a>(struct <a class=\"id\" href=\"#dock_station\">dock_station</a> *<a class=\"id\" href=\"#ds\">ds</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#DOCK_DOCKING\">DOCK_DOCKING</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#complete_dock\">complete_dock</a>(struct <a class=\"id\" href=\"#dock_station\">dock_station</a> *<a class=\"id\" href=\"#ds\">ds</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~(<a class=\"id\" href=\"#DOCK_DOCKING\">DOCK_DOCKING</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#last_dock_time\">last_dock_time</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#begin_undock\">begin_undock</a>(struct <a class=\"id\" href=\"#dock_station\">dock_station</a> *<a class=\"id\" href=\"#ds\">ds</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#DOCK_UNDOCKING\">DOCK_UNDOCKING</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#complete_undock\">complete_undock</a>(struct <a class=\"id\" href=\"#dock_station\">dock_station</a> *<a class=\"id\" href=\"#ds\">ds</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~(<a class=\"id\" href=\"#DOCK_UNDOCKING\">DOCK_UNDOCKING</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#dock_lock\">dock_lock</a>(struct <a class=\"id\" href=\"#dock_station\">dock_station</a> *<a class=\"id\" href=\"#ds\">ds</a>, int <a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_object_list\">acpi_object_list</a> <a class=\"id\" href=\"#arg_list\">arg_list</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_object\">acpi_object</a> <a class=\"id\" href=\"#arg\">arg</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arg_list\">arg_list</a>.<a class=\"id\" href=\"#count\">count</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arg_list\">arg_list</a>.<a class=\"id\" href=\"#pointer\">pointer</a> = &amp;<a class=\"id\" href=\"#arg\">arg</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a>.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#ACPI_TYPE_INTEGER\">ACPI_TYPE_INTEGER</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a>.<a class=\"id\" href=\"#integer\">integer</a>.<a class=\"id\" href=\"#value\">value</a> = !!<a class=\"id\" href=\"#lock\">lock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_evaluate_object\">acpi_evaluate_object</a>(<a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#handle\">handle</a>, \"_LCK\", &amp;<a class=\"id\" href=\"#arg_list\">arg_list</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>) && <a class=\"id\" href=\"#status\">status</a> != <a class=\"id\" href=\"#AE_NOT_FOUND\">AE_NOT_FOUND</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#lock\">lock</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Locking device failed\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Unlocking device failed\\n\");", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * dock_in_progress - see if we are in the middle of handling a dock event</span>", 
"<span class=\"comment\"> * @ds: the dock station</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Sometimes while docking, false dock events can be sent to the driver</span>", 
"<span class=\"comment\"> * because good connections aren't made or some other reason.  Ignore these</span>", 
"<span class=\"comment\"> * if we are in the middle of doing something.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#dock_in_progress\">dock_in_progress</a>(struct <a class=\"id\" href=\"#dock_station\">dock_station</a> *<a class=\"id\" href=\"#ds\">ds</a>)", 
"{", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#DOCK_DOCKING\">DOCK_DOCKING</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#time_before\">time_before</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a>, (<a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#last_dock_time\">last_dock_time</a> + <a class=\"id\" href=\"#HZ\">HZ</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * register_dock_notifier - add yourself to the dock notifier list</span>", 
"<span class=\"comment\"> * @nb: the callers notifier block</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If a driver wishes to be notified about dock events, they can</span>", 
"<span class=\"comment\"> * use this function to put a notifier block on the dock notifier list.</span>", 
"<span class=\"comment\"> * this notifier call chain will be called after a dock event, but</span>", 
"<span class=\"comment\"> * before hotplugging any new devices.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#register_dock_notifier\">register_dock_notifier</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nb\">nb</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dock_station_count\">dock_station_count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#atomic_notifier_chain_register\">atomic_notifier_chain_register</a>(&amp;<a class=\"id\" href=\"#dock_notifier_list\">dock_notifier_list</a>, <a class=\"id\" href=\"#nb\">nb</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#register_dock_notifier\">register_dock_notifier</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * unregister_dock_notifier - remove yourself from the dock notifier list</span>", 
"<span class=\"comment\"> * @nb: the callers notifier block</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#unregister_dock_notifier\">unregister_dock_notifier</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nb\">nb</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dock_station_count\">dock_station_count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_notifier_chain_unregister\">atomic_notifier_chain_unregister</a>(&amp;<a class=\"id\" href=\"#dock_notifier_list\">dock_notifier_list</a>, <a class=\"id\" href=\"#nb\">nb</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#unregister_dock_notifier\">unregister_dock_notifier</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * register_hotplug_dock_device - register a hotplug function</span>", 
"<span class=\"comment\"> * @handle: the handle of the device</span>", 
"<span class=\"comment\"> * @ops: handlers to call after docking</span>", 
"<span class=\"comment\"> * @context: device specific data</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If a driver would like to perform a hotplug operation after a dock</span>", 
"<span class=\"comment\"> * event, they can register an acpi_notifiy_handler to be called by</span>", 
"<span class=\"comment\"> * the dock driver after _DCK is executed.</span>", 
"<span class=\"comment\"> */</span>", 
"int", 
"<a class=\"id\" href=\"#register_hotplug_dock_device\">register_hotplug_dock_device</a>(<a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#acpi_dock_ops\">acpi_dock_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     void *<a class=\"id\" href=\"#context\">context</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dock_dependent_device\">dock_dependent_device</a> *<a class=\"id\" href=\"#dd\">dd</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dock_station\">dock_station</a> *<a class=\"id\" href=\"#dock_station\">dock_station</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dock_station_count\">dock_station_count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * make sure this handle is for a device dependent on the dock,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * this would include the dock station itself</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#dock_station\">dock_station</a>, &amp;<a class=\"id\" href=\"#dock_stations\">dock_stations</a>, <a class=\"id\" href=\"#sibling\">sibling</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * An ATA bay can be in a dock and itself can be ejected</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * separately, so there are two 'dock stations' which need the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * ops</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dd\">dd</a> = <a class=\"id\" href=\"#find_dock_dependent_device\">find_dock_dependent_device</a>(<a class=\"id\" href=\"#dock_station\">dock_station</a>, <a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dd\">dd</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dd\">dd</a>-><a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#ops\">ops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dd\">dd</a>-><a class=\"id\" href=\"#context\">context</a> = <a class=\"id\" href=\"#context\">context</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dock_add_hotplug_device\">dock_add_hotplug_device</a>(<a class=\"id\" href=\"#dock_station\">dock_station</a>, <a class=\"id\" href=\"#dd\">dd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#register_hotplug_dock_device\">register_hotplug_dock_device</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * unregister_hotplug_dock_device - remove yourself from the hotplug list</span>", 
"<span class=\"comment\"> * @handle: the acpi handle of the device</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#unregister_hotplug_dock_device\">unregister_hotplug_dock_device</a>(<a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#handle\">handle</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dock_dependent_device\">dock_dependent_device</a> *<a class=\"id\" href=\"#dd\">dd</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dock_station\">dock_station</a> *<a class=\"id\" href=\"#dock_station\">dock_station</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dock_station_count\">dock_station_count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#dock_station\">dock_station</a>, &amp;<a class=\"id\" href=\"#dock_stations\">dock_stations</a>, <a class=\"id\" href=\"#sibling\">sibling</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dd\">dd</a> = <a class=\"id\" href=\"#find_dock_dependent_device\">find_dock_dependent_device</a>(<a class=\"id\" href=\"#dock_station\">dock_station</a>, <a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dd\">dd</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dock_del_hotplug_device\">dock_del_hotplug_device</a>(<a class=\"id\" href=\"#dock_station\">dock_station</a>, <a class=\"id\" href=\"#dd\">dd</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#unregister_hotplug_dock_device\">unregister_hotplug_dock_device</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * handle_eject_request - handle an undock request checking for error conditions</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Check to make sure the dock device is still present, then undock and</span>", 
"<span class=\"comment\"> * hotremove all the devices that may need removing.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#handle_eject_request\">handle_eject_request</a>(struct <a class=\"id\" href=\"#dock_station\">dock_station</a> *<a class=\"id\" href=\"#ds\">ds</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#event\">event</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dock_in_progress\">dock_in_progress</a>(<a class=\"id\" href=\"#ds\">ds</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * here we need to generate the undock</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * event prior to actually doing the undock</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so that the device struct still exists.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Also, even send the dock event if the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * device is not present anymore</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dock_event\">dock_event</a>(<a class=\"id\" href=\"#ds\">ds</a>, <a class=\"id\" href=\"#event\">event</a>, <a class=\"id\" href=\"#UNDOCK_EVENT\">UNDOCK_EVENT</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hotplug_dock_devices\">hotplug_dock_devices</a>(<a class=\"id\" href=\"#ds\">ds</a>, <a class=\"id\" href=\"#ACPI_NOTIFY_EJECT_REQUEST\">ACPI_NOTIFY_EJECT_REQUEST</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#undock\">undock</a>(<a class=\"id\" href=\"#ds\">ds</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dock_lock\">dock_lock</a>(<a class=\"id\" href=\"#ds\">ds</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eject_dock\">eject_dock</a>(<a class=\"id\" href=\"#ds\">ds</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dock_present\">dock_present</a>(<a class=\"id\" href=\"#ds\">ds</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Unable to undock!\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#complete_undock\">complete_undock</a>(<a class=\"id\" href=\"#ds\">ds</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * dock_notify - act upon an acpi dock notification</span>", 
"<span class=\"comment\"> * @handle: the dock station handle</span>", 
"<span class=\"comment\"> * @event: the acpi event</span>", 
"<span class=\"comment\"> * @data: our driver data struct</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If we are notified to dock, then check to see if the dock is</span>", 
"<span class=\"comment\"> * present and then dock.  Notify all drivers of the dock event,</span>", 
"<span class=\"comment\"> * and then hotplug and devices that may need hotplugging.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#dock_notify\">dock_notify</a>(<a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#event\">event</a>, void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dock_station\">dock_station</a> *<a class=\"id\" href=\"#ds\">ds</a> = <a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_device\">acpi_device</a> *<a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#surprise_removal\">surprise_removal</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * According to acpi spec 3.0a, if a DEVICE_CHECK notification</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * is sent and _DCK is present, it is assumed to mean an undock</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * request.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#DOCK_IS_DOCK\">DOCK_IS_DOCK</a>) && <a class=\"id\" href=\"#event\">event</a> == <a class=\"id\" href=\"#ACPI_NOTIFY_DEVICE_CHECK\">ACPI_NOTIFY_DEVICE_CHECK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#event\">event</a> = <a class=\"id\" href=\"#ACPI_NOTIFY_EJECT_REQUEST\">ACPI_NOTIFY_EJECT_REQUEST</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * dock station: BUS_CHECK - docked or surprise removal</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/><span class=\"ts\"/> DEVICE_CHECK - undocked</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * other device: BUS_CHECK/DEVICE_CHECK - added or surprise removal</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * To simplify event handling, dock dependent device handler always</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * get ACPI_NOTIFY_BUS_CHECK/ACPI_NOTIFY_DEVICE_CHECK for add and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ACPI_NOTIFY_EJECT_REQUEST for removal</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#event\">event</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_NOTIFY_BUS_CHECK\">ACPI_NOTIFY_BUS_CHECK</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_NOTIFY_DEVICE_CHECK\">ACPI_NOTIFY_DEVICE_CHECK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dock_in_progress\">dock_in_progress</a>(<a class=\"id\" href=\"#ds\">ds</a>) && <a class=\"id\" href=\"#acpi_bus_get_device\">acpi_bus_get_device</a>(<a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#tmp\">tmp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#begin_dock\">begin_dock</a>(<a class=\"id\" href=\"#ds\">ds</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dock\">dock</a>(<a class=\"id\" href=\"#ds\">ds</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dock_present\">dock_present</a>(<a class=\"id\" href=\"#ds\">ds</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Unable to dock!\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#complete_dock\">complete_dock</a>(<a class=\"id\" href=\"#ds\">ds</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_notifier_call_chain\">atomic_notifier_call_chain</a>(&amp;<a class=\"id\" href=\"#dock_notifier_list\">dock_notifier_list</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#event\">event</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hotplug_dock_devices\">hotplug_dock_devices</a>(<a class=\"id\" href=\"#ds\">ds</a>, <a class=\"id\" href=\"#event\">event</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#complete_dock\">complete_dock</a>(<a class=\"id\" href=\"#ds\">ds</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dock_event\">dock_event</a>(<a class=\"id\" href=\"#ds\">ds</a>, <a class=\"id\" href=\"#event\">event</a>, <a class=\"id\" href=\"#DOCK_EVENT\">DOCK_EVENT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dock_lock\">dock_lock</a>(<a class=\"id\" href=\"#ds\">ds</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dock_present\">dock_present</a>(<a class=\"id\" href=\"#ds\">ds</a>) || <a class=\"id\" href=\"#dock_in_progress\">dock_in_progress</a>(<a class=\"id\" href=\"#ds\">ds</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* This is a surprise removal */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#surprise_removal\">surprise_removal</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#event\">event</a> = <a class=\"id\" href=\"#ACPI_NOTIFY_EJECT_REQUEST\">ACPI_NOTIFY_EJECT_REQUEST</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Fall back */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_NOTIFY_EJECT_REQUEST\">ACPI_NOTIFY_EJECT_REQUEST</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#begin_undock\">begin_undock</a>(<a class=\"id\" href=\"#ds\">ds</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#immediate_undock\">immediate_undock</a> && !(<a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#DOCK_IS_ATA\">DOCK_IS_ATA</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>   || <a class=\"id\" href=\"#surprise_removal\">surprise_removal</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#handle_eject_request\">handle_eject_request</a>(<a class=\"id\" href=\"#ds\">ds</a>, <a class=\"id\" href=\"#event\">event</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dock_event\">dock_event</a>(<a class=\"id\" href=\"#ds\">ds</a>, <a class=\"id\" href=\"#event\">event</a>, <a class=\"id\" href=\"#UNDOCK_EVENT\">UNDOCK_EVENT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Unknown dock event %d\\n\", <a class=\"id\" href=\"#event\">event</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"struct <a class=\"id\" href=\"#dock_data\">dock_data</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#event\">event</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dock_station\">dock_station</a> *<a class=\"id\" href=\"#ds\">ds</a>;", 
"};", 
"", 
"static void <a class=\"id\" href=\"#acpi_dock_deferred_cb\">acpi_dock_deferred_cb</a>(void *<a class=\"id\" href=\"#context\">context</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dock_data\">dock_data</a> *<a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#context\">context</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dock_notify\">dock_notify</a>(<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#event\">event</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#ds\">ds</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#data\">data</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#acpi_dock_notifier_call\">acpi_dock_notifier_call</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#this\">this</a>,", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#event\">event</a>, void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dock_station\">dock_station</a> *<a class=\"id\" href=\"#dock_station\">dock_station</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#data\">data</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#event\">event</a> != <a class=\"id\" href=\"#ACPI_NOTIFY_BUS_CHECK\">ACPI_NOTIFY_BUS_CHECK</a> && <a class=\"id\" href=\"#event\">event</a> != <a class=\"id\" href=\"#ACPI_NOTIFY_DEVICE_CHECK\">ACPI_NOTIFY_DEVICE_CHECK</a>", 
"<span class=\"ts\"/>   && <a class=\"id\" href=\"#event\">event</a> != <a class=\"id\" href=\"#ACPI_NOTIFY_EJECT_REQUEST\">ACPI_NOTIFY_EJECT_REQUEST</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#dock_station\">dock_station</a>, &amp;<a class=\"id\" href=\"#dock_stations\">dock_stations</a>, <a class=\"id\" href=\"#sibling\">sibling</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dock_station\">dock_station</a>-><a class=\"id\" href=\"#handle\">handle</a> == <a class=\"id\" href=\"#handle\">handle</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#dock_data\">dock_data</a> *<a class=\"id\" href=\"#dd\">dd</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dd\">dd</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#dd\">dd</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dd\">dd</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dd\">dd</a>-><a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dd\">dd</a>-><a class=\"id\" href=\"#event\">event</a> = <a class=\"id\" href=\"#event\">event</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dd\">dd</a>-><a class=\"id\" href=\"#ds\">ds</a> = <a class=\"id\" href=\"#dock_station\">dock_station</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_os_hotplug_execute\">acpi_os_hotplug_execute</a>(<a class=\"id\" href=\"#acpi_dock_deferred_cb\">acpi_dock_deferred_cb</a>, <a class=\"id\" href=\"#dd\">dd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0 ;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> <a class=\"id\" href=\"#dock_acpi_notifier\">dock_acpi_notifier</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#notifier_call\">notifier_call</a> = <a class=\"id\" href=\"#acpi_dock_notifier_call\">acpi_dock_notifier_call</a>,", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * find_dock_devices - find devices on the dock station</span>", 
"<span class=\"comment\"> * @handle: the handle of the device we are examining</span>", 
"<span class=\"comment\"> * @lvl: unused</span>", 
"<span class=\"comment\"> * @context: the dock station private data</span>", 
"<span class=\"comment\"> * @rv: unused</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This function is called by acpi_walk_namespace.  It will</span>", 
"<span class=\"comment\"> * check to see if an object has an _EJD method.  If it does, then it</span>", 
"<span class=\"comment\"> * will see if it is dependent on the dock station.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#find_dock_devices\">find_dock_devices</a>(<a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#lvl\">lvl</a>, void *<a class=\"id\" href=\"#context\">context</a>, void **<a class=\"id\" href=\"#rv\">rv</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#tmp\">tmp</a>, <a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dock_station\">dock_station</a> *<a class=\"id\" href=\"#ds\">ds</a> = <a class=\"id\" href=\"#context\">context</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_bus_get_ejd\">acpi_bus_get_ejd</a>(<a class=\"id\" href=\"#handle\">handle</a>, &amp;<a class=\"id\" href=\"#tmp\">tmp</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* try the parent device as well */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_get_parent\">acpi_get_parent</a>(<a class=\"id\" href=\"#handle\">handle</a>, &amp;<a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fdd_out\">fdd_out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* see if parent is dependent on dock */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_bus_get_ejd\">acpi_bus_get_ejd</a>(<a class=\"id\" href=\"#parent\">parent</a>, &amp;<a class=\"id\" href=\"#tmp\">tmp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fdd_out\">fdd_out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tmp\">tmp</a> == <a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#handle\">handle</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_dock_dependent_device\">add_dock_dependent_device</a>(<a class=\"id\" href=\"#ds\">ds</a>, <a class=\"id\" href=\"#handle\">handle</a>);", 
"", 
"<a class=\"id\" href=\"#fdd_out\">fdd_out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * show_docked - read method for \"docked\" file in sysfs</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#show_docked\">show_docked</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_device\">acpi_device</a> *<a class=\"id\" href=\"#tmp\">tmp</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dock_station\">dock_station</a> *<a class=\"id\" href=\"#dock_station\">dock_station</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#platform_data\">platform_data</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_SUCCESS\">ACPI_SUCCESS</a>(<a class=\"id\" href=\"#acpi_bus_get_device\">acpi_bus_get_device</a>(<a class=\"id\" href=\"#dock_station\">dock_station</a>-><a class=\"id\" href=\"#handle\">handle</a>, &amp;<a class=\"id\" href=\"#tmp\">tmp</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>, \"1\\n\");", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>, \"0\\n\");", 
"}", 
"static <a class=\"id\" href=\"#DEVICE_ATTR\">DEVICE_ATTR</a>(<a class=\"id\" href=\"#docked\">docked</a>, <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#show_docked\">show_docked</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * show_flags - read method for flags file in sysfs</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#show_flags\">show_flags</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dock_station\">dock_station</a> *<a class=\"id\" href=\"#dock_station\">dock_station</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#platform_data\">platform_data</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>, \"%d\\n\", <a class=\"id\" href=\"#dock_station\">dock_station</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"}", 
"static <a class=\"id\" href=\"#DEVICE_ATTR\">DEVICE_ATTR</a>(<a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#show_flags\">show_flags</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * write_undock - write method for \"undock\" file in sysfs</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#write_undock\">write_undock</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dock_station\">dock_station</a> *<a class=\"id\" href=\"#dock_station\">dock_station</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#platform_data\">platform_data</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#count\">count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#begin_undock\">begin_undock</a>(<a class=\"id\" href=\"#dock_station\">dock_station</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#handle_eject_request\">handle_eject_request</a>(<a class=\"id\" href=\"#dock_station\">dock_station</a>, <a class=\"id\" href=\"#ACPI_NOTIFY_EJECT_REQUEST\">ACPI_NOTIFY_EJECT_REQUEST</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a> ? <a class=\"id\" href=\"#ret\">ret</a>: <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"static <a class=\"id\" href=\"#DEVICE_ATTR\">DEVICE_ATTR</a>(<a class=\"id\" href=\"#undock\">undock</a>, <a class=\"id\" href=\"#S_IWUSR\">S_IWUSR</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#write_undock\">write_undock</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * show_dock_uid - read method for \"uid\" file in sysfs</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#show_dock_uid\">show_dock_uid</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#lbuf\">lbuf</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dock_station\">dock_station</a> *<a class=\"id\" href=\"#dock_station\">dock_station</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#platform_data\">platform_data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_evaluate_integer\">acpi_evaluate_integer</a>(<a class=\"id\" href=\"#dock_station\">dock_station</a>-><a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"_UID\", <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#lbuf\">lbuf</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>))", 
"<span class=\"ts\"/>    return 0;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>, \"%llx\\n\", <a class=\"id\" href=\"#lbuf\">lbuf</a>);", 
"}", 
"static <a class=\"id\" href=\"#DEVICE_ATTR\">DEVICE_ATTR</a>(<a class=\"id\" href=\"#uid\">uid</a>, <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#show_dock_uid\">show_dock_uid</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#show_dock_type\">show_dock_type</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dock_station\">dock_station</a> *<a class=\"id\" href=\"#dock_station\">dock_station</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#platform_data\">platform_data</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#type\">type</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dock_station\">dock_station</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#DOCK_IS_DOCK\">DOCK_IS_DOCK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = \"dock_station\";", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#dock_station\">dock_station</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#DOCK_IS_ATA\">DOCK_IS_ATA</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = \"ata_bay\";", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#dock_station\">dock_station</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#DOCK_IS_BAT\">DOCK_IS_BAT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = \"battery_bay\";", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = \"unknown\";", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>, \"%s\\n\", <a class=\"id\" href=\"#type\">type</a>);", 
"}", 
"static <a class=\"id\" href=\"#DEVICE_ATTR\">DEVICE_ATTR</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#show_dock_type\">show_dock_type</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"static struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#dock_attributes\">dock_attributes</a>[] = {", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#dev_attr_docked\">dev_attr_docked</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#dev_attr_flags\">dev_attr_flags</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#dev_attr_undock\">dev_attr_undock</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#dev_attr_uid\">dev_attr_uid</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#dev_attr_type\">dev_attr_type</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#attribute_group\">attribute_group</a> <a class=\"id\" href=\"#dock_attribute_group\">dock_attribute_group</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#attrs\">attrs</a> = <a class=\"id\" href=\"#dock_attributes\">dock_attributes</a>", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * dock_add - add a new dock station</span>", 
"<span class=\"comment\"> * @handle: the dock station handle</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * allocated and initialize a new dock station device.  Find all devices</span>", 
"<span class=\"comment\"> * that are on the dock station, and register for dock event notifications.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#dock_add\">dock_add</a>(<a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#handle\">handle</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dock_station\">dock_station</a> <a class=\"id\" href=\"#ds\">ds</a>, *<a class=\"id\" href=\"#dock_station\">dock_station</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#platform_device\">platform_device</a> *<a class=\"id\" href=\"#dd\">dd</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#dock_station_count\">dock_station_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#ds\">ds</a>, 0, sizeof(<a class=\"id\" href=\"#ds\">ds</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dd\">dd</a> = <a class=\"id\" href=\"#platform_device_register_data\">platform_device_register_data</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, \"dock\", <a class=\"id\" href=\"#id\">id</a>, &amp;<a class=\"id\" href=\"#ds\">ds</a>, sizeof(<a class=\"id\" href=\"#ds\">ds</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#dd\">dd</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#dd\">dd</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dock_station\">dock_station</a> = <a class=\"id\" href=\"#dd\">dd</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#platform_data\">platform_data</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dock_station\">dock_station</a>-><a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dock_station\">dock_station</a>-><a class=\"id\" href=\"#dock_device\">dock_device</a> = <a class=\"id\" href=\"#dd\">dd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dock_station\">dock_station</a>-><a class=\"id\" href=\"#last_dock_time\">last_dock_time</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a> - <a class=\"id\" href=\"#HZ\">HZ</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_init\">mutex_init</a>(&amp;<a class=\"id\" href=\"#dock_station\">dock_station</a>-><a class=\"id\" href=\"#hp_lock\">hp_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#dock_station\">dock_station</a>-><a class=\"id\" href=\"#dd_lock\">dd_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#dock_station\">dock_station</a>-><a class=\"id\" href=\"#sibling\">sibling</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#dock_station\">dock_station</a>-><a class=\"id\" href=\"#hotplug_devices\">hotplug_devices</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ATOMIC_INIT_NOTIFIER_HEAD\">ATOMIC_INIT_NOTIFIER_HEAD</a>(&amp;<a class=\"id\" href=\"#dock_notifier_list\">dock_notifier_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#dock_station\">dock_station</a>-><a class=\"id\" href=\"#dependent_devices\">dependent_devices</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* we want the dock device to send uevents */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_set_uevent_suppress\">dev_set_uevent_suppress</a>(&amp;<a class=\"id\" href=\"#dd\">dd</a>-><a class=\"id\" href=\"#dev\">dev</a>, 0);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_dock\">is_dock</a>(<a class=\"id\" href=\"#handle\">handle</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dock_station\">dock_station</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#DOCK_IS_DOCK\">DOCK_IS_DOCK</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_ata\">is_ata</a>(<a class=\"id\" href=\"#handle\">handle</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dock_station\">dock_station</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#DOCK_IS_ATA\">DOCK_IS_ATA</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_battery\">is_battery</a>(<a class=\"id\" href=\"#handle\">handle</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dock_station\">dock_station</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#DOCK_IS_BAT\">DOCK_IS_BAT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#sysfs_create_group\">sysfs_create_group</a>(&amp;<a class=\"id\" href=\"#dd\">dd</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#kobj\">kobj</a>, &amp;<a class=\"id\" href=\"#dock_attribute_group\">dock_attribute_group</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_unregister\">err_unregister</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Find dependent devices */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_walk_namespace\">acpi_walk_namespace</a>(<a class=\"id\" href=\"#ACPI_TYPE_DEVICE\">ACPI_TYPE_DEVICE</a>, <a class=\"id\" href=\"#ACPI_ROOT_OBJECT\">ACPI_ROOT_OBJECT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ACPI_UINT32_MAX\">ACPI_UINT32_MAX</a>, <a class=\"id\" href=\"#find_dock_devices\">find_dock_devices</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#dock_station\">dock_station</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* add the dock station as a device dependent on itself */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#add_dock_dependent_device\">add_dock_dependent_device</a>(<a class=\"id\" href=\"#dock_station\">dock_station</a>, <a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_rmgroup\">err_rmgroup</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dock_station_count\">dock_station_count</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#dock_station\">dock_station</a>-><a class=\"id\" href=\"#sibling\">sibling</a>, &amp;<a class=\"id\" href=\"#dock_stations\">dock_stations</a>);", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#err_rmgroup\">err_rmgroup</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_group\">sysfs_remove_group</a>(&amp;<a class=\"id\" href=\"#dd\">dd</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#kobj\">kobj</a>, &amp;<a class=\"id\" href=\"#dock_attribute_group\">dock_attribute_group</a>);", 
"<a class=\"id\" href=\"#err_unregister\">err_unregister</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#platform_device_unregister\">platform_device_unregister</a>(<a class=\"id\" href=\"#dd\">dd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s encountered error %d\\n\", <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * dock_remove - free up resources related to the dock station</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#dock_remove\">dock_remove</a>(struct <a class=\"id\" href=\"#dock_station\">dock_station</a> *<a class=\"id\" href=\"#ds\">ds</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dock_dependent_device\">dock_dependent_device</a> *<a class=\"id\" href=\"#dd\">dd</a>, *<a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#platform_device\">platform_device</a> *<a class=\"id\" href=\"#dock_device\">dock_device</a> = <a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#dock_device\">dock_device</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dock_station_count\">dock_station_count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* remove dependent devices */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#dd\">dd</a>, <a class=\"id\" href=\"#tmp\">tmp</a>, &amp;<a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#dependent_devices\">dependent_devices</a>, <a class=\"id\" href=\"#list\">list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#dd\">dd</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#sibling\">sibling</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* cleanup sysfs */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_group\">sysfs_remove_group</a>(&amp;<a class=\"id\" href=\"#dock_device\">dock_device</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#kobj\">kobj</a>, &amp;<a class=\"id\" href=\"#dock_attribute_group\">dock_attribute_group</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#platform_device_unregister\">platform_device_unregister</a>(<a class=\"id\" href=\"#dock_device\">dock_device</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * find_dock - look for a dock station</span>", 
"<span class=\"comment\"> * @handle: acpi handle of a device</span>", 
"<span class=\"comment\"> * @lvl: unused</span>", 
"<span class=\"comment\"> * @context: counter of dock stations found</span>", 
"<span class=\"comment\"> * @rv: unused</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is called by acpi_walk_namespace to look for dock stations.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#find_dock\">find_dock</a>(<a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#lvl\">lvl</a>, void *<a class=\"id\" href=\"#context\">context</a>, void **<a class=\"id\" href=\"#rv\">rv</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_dock\">is_dock</a>(<a class=\"id\" href=\"#handle\">handle</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dock_add\">dock_add</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#find_bay\">find_bay</a>(<a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#lvl\">lvl</a>, void *<a class=\"id\" href=\"#context\">context</a>, void **<a class=\"id\" href=\"#rv\">rv</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* If bay is a dock, it's already handled */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_ejectable_bay\">is_ejectable_bay</a>(<a class=\"id\" href=\"#handle\">handle</a>) && !<a class=\"id\" href=\"#is_dock\">is_dock</a>(<a class=\"id\" href=\"#handle\">handle</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dock_add\">dock_add</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#dock_init\">dock_init</a>(void)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_disabled\">acpi_disabled</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* look for a dock station */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_walk_namespace\">acpi_walk_namespace</a>(<a class=\"id\" href=\"#ACPI_TYPE_DEVICE\">ACPI_TYPE_DEVICE</a>, <a class=\"id\" href=\"#ACPI_ROOT_OBJECT\">ACPI_ROOT_OBJECT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ACPI_UINT32_MAX\">ACPI_UINT32_MAX</a>, <a class=\"id\" href=\"#find_dock\">find_dock</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* look for bay */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_walk_namespace\">acpi_walk_namespace</a>(<a class=\"id\" href=\"#ACPI_TYPE_DEVICE\">ACPI_TYPE_DEVICE</a>, <a class=\"id\" href=\"#ACPI_ROOT_OBJECT\">ACPI_ROOT_OBJECT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_UINT32_MAX\">ACPI_UINT32_MAX</a>, <a class=\"id\" href=\"#find_bay\">find_bay</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dock_station_count\">dock_station_count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"No dock devices found.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#register_acpi_bus_notifier\">register_acpi_bus_notifier</a>(&amp;<a class=\"id\" href=\"#dock_acpi_notifier\">dock_acpi_notifier</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"%s: %d docks/bays found\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DOCK_DRIVER_DESCRIPTION\">ACPI_DOCK_DRIVER_DESCRIPTION</a>, <a class=\"id\" href=\"#dock_station_count\">dock_station_count</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__exit\">__exit</a> <a class=\"id\" href=\"#dock_exit\">dock_exit</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dock_station\">dock_station</a> *<a class=\"id\" href=\"#tmp\">tmp</a>, *<a class=\"id\" href=\"#dock_station\">dock_station</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_acpi_bus_notifier\">unregister_acpi_bus_notifier</a>(&amp;<a class=\"id\" href=\"#dock_acpi_notifier\">dock_acpi_notifier</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#dock_station\">dock_station</a>, <a class=\"id\" href=\"#tmp\">tmp</a>, &amp;<a class=\"id\" href=\"#dock_stations\">dock_stations</a>, <a class=\"id\" href=\"#sibling\">sibling</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dock_remove\">dock_remove</a>(<a class=\"id\" href=\"#dock_station\">dock_station</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Must be called before drivers of devices in dock, otherwise we can't know</span>", 
"<span class=\"comment\"> * which devices are in a dock</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#subsys_initcall\">subsys_initcall</a>(<a class=\"id\" href=\"#dock_init\">dock_init</a>);", 
"<a class=\"id\" href=\"#module_exit\">module_exit</a>(<a class=\"id\" href=\"#dock_exit\">dock_exit</a>);", 
];
xr_frag_insert('l/58/db69cee7ad5ccb558d7708808ecf3359d0212b.xr', __xr_tmp);
