var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * INET         An implementation of the TCP/IP protocol suite for the LINUX</span>", 
"<span class=\"comment\"> *              operating system.  INET is implemented using the  BSD Socket</span>", 
"<span class=\"comment\"> *              interface as the means of communication with the user level.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *              Global definitions for the ARCnet interface.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Authors:     David Woodhouse and Avery Pennarun</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *              This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *              modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *              as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *              2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_IF_ARCNET_H\">_LINUX_IF_ARCNET_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_IF_ARCNET_H\">_LINUX_IF_ARCNET_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#if_ether\">if_ether</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *    These are the defined ARCnet Protocol ID's.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/* CAP mode */</span>", 
"<span class=\"comment\">/* No macro but uses 1-8 */</span>", 
"", 
"<span class=\"comment\">/* RFC1201 Protocol ID's */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARC_P_IP\">ARC_P_IP</a><span class=\"ts\"/><span class=\"ts\"/>212<span class=\"ts\"/><span class=\"comment\">/* 0xD4 */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARC_P_IPV6\">ARC_P_IPV6</a><span class=\"ts\"/><span class=\"ts\"/>196<span class=\"ts\"/><span class=\"comment\">/* 0xC4: RFC2497 */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARC_P_ARP\">ARC_P_ARP</a><span class=\"ts\"/><span class=\"ts\"/>213<span class=\"ts\"/><span class=\"comment\">/* 0xD5 */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARC_P_RARP\">ARC_P_RARP</a><span class=\"ts\"/><span class=\"ts\"/>214<span class=\"ts\"/><span class=\"comment\">/* 0xD6 */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARC_P_IPX\">ARC_P_IPX</a><span class=\"ts\"/><span class=\"ts\"/>250<span class=\"ts\"/><span class=\"comment\">/* 0xFA */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARC_P_NOVELL_EC\">ARC_P_NOVELL_EC</a><span class=\"ts\"/><span class=\"ts\"/>236<span class=\"ts\"/><span class=\"comment\">/* 0xEC */</span>", 
"", 
"<span class=\"comment\">/* Old RFC1051 Protocol ID's */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARC_P_IP_RFC1051\">ARC_P_IP_RFC1051</a><span class=\"ts\"/>240<span class=\"ts\"/><span class=\"comment\">/* 0xF0 */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARC_P_ARP_RFC1051\">ARC_P_ARP_RFC1051</a><span class=\"ts\"/>241<span class=\"ts\"/><span class=\"comment\">/* 0xF1 */</span>", 
"", 
"<span class=\"comment\">/* MS LanMan/WfWg \"NDIS\" encapsulation */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARC_P_ETHER\">ARC_P_ETHER</a><span class=\"ts\"/><span class=\"ts\"/>232<span class=\"ts\"/><span class=\"comment\">/* 0xE8 */</span>", 
"", 
"<span class=\"comment\">/* Unsupported/indirectly supported protocols */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARC_P_DATAPOINT_BOOT\">ARC_P_DATAPOINT_BOOT</a><span class=\"ts\"/>0<span class=\"ts\"/><span class=\"comment\">/* very old Datapoint equipment */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARC_P_DATAPOINT_MOUNT\">ARC_P_DATAPOINT_MOUNT</a><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARC_P_POWERLAN_BEACON\">ARC_P_POWERLAN_BEACON</a><span class=\"ts\"/>8<span class=\"ts\"/><span class=\"comment\">/* Probably ATA-Netbios related */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARC_P_POWERLAN_BEACON2\">ARC_P_POWERLAN_BEACON2</a><span class=\"ts\"/>243<span class=\"ts\"/><span class=\"comment\">/* 0xF3 */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARC_P_LANSOFT\">ARC_P_LANSOFT</a><span class=\"ts\"/><span class=\"ts\"/>251<span class=\"ts\"/><span class=\"comment\">/* 0xFB - what is this? */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARC_P_ATALK\">ARC_P_ATALK</a><span class=\"ts\"/><span class=\"ts\"/>0xDD", 
"", 
"<span class=\"comment\">/* Hardware address length */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARCNET_ALEN\">ARCNET_ALEN</a><span class=\"ts\"/>1", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The RFC1201-specific components of an arcnet packet header.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#arc_rfc1201\">arc_rfc1201</a> {", 
"    <a class=\"id\" href=\"#__u8\">__u8</a>  <a class=\"id\" href=\"#proto\">proto</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* protocol ID field - varies<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"    <a class=\"id\" href=\"#__u8\">__u8</a>  <a class=\"id\" href=\"#split_flag\">split_flag</a>;<span class=\"ts\"/><span class=\"comment\">/* for use with split packets<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"    <a class=\"id\" href=\"#__be16\">__be16</a>   <a class=\"id\" href=\"#sequence\">sequence</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* sequence number<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"    <a class=\"id\" href=\"#__u8\">__u8</a>  <a class=\"id\" href=\"#payload\">payload</a>[0];<span class=\"ts\"/><span class=\"comment\">/* space remaining in packet (504 bytes)*/</span>", 
"};", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RFC1201_HDR_SIZE\">RFC1201_HDR_SIZE</a> 4", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The RFC1051-specific components.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#arc_rfc1051\">arc_rfc1051</a> {", 
"    <a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#proto\">proto</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ARC_P_RFC1051_ARP/RFC1051_IP<span class=\"ts\"/>*/</span>", 
"    <a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#payload\">payload</a>[0];<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 507 bytes<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"};", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RFC1051_HDR_SIZE\">RFC1051_HDR_SIZE</a> 1", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The ethernet-encap-specific components.  We have a real ethernet header</span>", 
"<span class=\"comment\"> * and some data.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#arc_eth_encap\">arc_eth_encap</a> {", 
"    <a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#proto\">proto</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Always ARC_P_ETHER<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"    struct <a class=\"id\" href=\"#ethhdr\">ethhdr</a> <a class=\"id\" href=\"#eth\">eth</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* standard ethernet header (yuck!)<span class=\"ts\"/>*/</span>", 
"    <a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#payload\">payload</a>[0];<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 493 bytes<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"};", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ETH_ENCAP_HDR_SIZE\">ETH_ENCAP_HDR_SIZE</a> 14", 
"", 
"", 
"struct <a class=\"id\" href=\"#arc_cap\">arc_cap</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#proto\">proto</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#cookie\">cookie</a>[sizeof(int)];   <span class=\"comment\">/* Actually NOT sent over the network */</span>", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#ack\">ack</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#raw\">raw</a>[0];<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 507 bytes */</span>", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#mes\">mes</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The data needed by the actual arcnet hardware.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Now, in the real arcnet hardware, the third and fourth bytes are the</span>", 
"<span class=\"comment\"> * 'offset' specification instead of the length, and the soft data is at</span>", 
"<span class=\"comment\"> * the _end_ of the 512-byte buffer.  We hide this complexity inside the</span>", 
"<span class=\"comment\"> * driver.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#arc_hardware\">arc_hardware</a> {", 
"    <a class=\"id\" href=\"#__u8\">__u8</a>  <a class=\"id\" href=\"#source\">source</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* source ARCnet - filled in automagically */</span>", 
"             <a class=\"id\" href=\"#dest\">dest</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* destination ARCnet - 0 for broadcast    */</span>", 
"    <span class=\"ts\"/>     <a class=\"id\" href=\"#offset\">offset</a>[2];<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* offset bytes (some weird semantics)     */</span>", 
"};", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARC_HDR_SIZE\">ARC_HDR_SIZE</a> 4", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This is an ARCnet frame header, as seen by the kernel (and userspace,</span>", 
"<span class=\"comment\"> * when you do a raw packet capture).</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#archdr\">archdr</a> {", 
"    <span class=\"comment\">/* hardware requirements */</span>", 
"    struct <a class=\"id\" href=\"#arc_hardware\">arc_hardware</a> <a class=\"id\" href=\"#hard\">hard</a>;", 
"     ", 
"    <span class=\"comment\">/* arcnet encapsulation-specific bits */</span>", 
"    union {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#arc_rfc1201\">arc_rfc1201</a>   <a class=\"id\" href=\"#rfc1201\">rfc1201</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#arc_rfc1051\">arc_rfc1051</a>   <a class=\"id\" href=\"#rfc1051\">rfc1051</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#arc_eth_encap\">arc_eth_encap</a> <a class=\"id\" href=\"#eth_encap\">eth_encap</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#arc_cap\">arc_cap</a>       <a class=\"id\" href=\"#cap\">cap</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#raw\">raw</a>[0];<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 508 bytes<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"    } <a class=\"id\" href=\"#soft\">soft</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* _LINUX_IF_ARCNET_H */</span>", 
];
xr_frag_insert('l/59/5f70f3b7417f8ee2a98f1213dcf771548a32e9.xr', __xr_tmp);
