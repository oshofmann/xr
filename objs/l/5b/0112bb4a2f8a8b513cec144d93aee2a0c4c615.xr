var __xr_tmp = [
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Find end, append list for that CPU. */</span>", 
"<span class=\"ts\"/>if (&amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#tasklet_vec\">tasklet_vec</a>, <a class=\"id\" href=\"#cpu\">cpu</a>).<a class=\"id\" href=\"#head\">head</a> != <a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#tasklet_vec\">tasklet_vec</a>, <a class=\"id\" href=\"#cpu\">cpu</a>).<a class=\"id\" href=\"#tail\">tail</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*(<a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#tasklet_vec\">tasklet_vec</a>).<a class=\"id\" href=\"#tail\">tail</a>) = <a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#tasklet_vec\">tasklet_vec</a>, <a class=\"id\" href=\"#cpu\">cpu</a>).<a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#tasklet_vec\">tasklet_vec</a>).<a class=\"id\" href=\"#tail\">tail</a> = <a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#tasklet_vec\">tasklet_vec</a>, <a class=\"id\" href=\"#cpu\">cpu</a>).<a class=\"id\" href=\"#tail\">tail</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#tasklet_vec\">tasklet_vec</a>, <a class=\"id\" href=\"#cpu\">cpu</a>).<a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#tasklet_vec\">tasklet_vec</a>, <a class=\"id\" href=\"#cpu\">cpu</a>).<a class=\"id\" href=\"#tail\">tail</a> = &amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#tasklet_vec\">tasklet_vec</a>, <a class=\"id\" href=\"#cpu\">cpu</a>).<a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raise_softirq_irqoff\">raise_softirq_irqoff</a>(<a class=\"id\" href=\"#TASKLET_SOFTIRQ\">TASKLET_SOFTIRQ</a>);", 
"", 
"<span class=\"ts\"/>if (&amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#tasklet_hi_vec\">tasklet_hi_vec</a>, <a class=\"id\" href=\"#cpu\">cpu</a>).<a class=\"id\" href=\"#head\">head</a> != <a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#tasklet_hi_vec\">tasklet_hi_vec</a>, <a class=\"id\" href=\"#cpu\">cpu</a>).<a class=\"id\" href=\"#tail\">tail</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#tasklet_hi_vec\">tasklet_hi_vec</a>).<a class=\"id\" href=\"#tail\">tail</a> = <a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#tasklet_hi_vec\">tasklet_hi_vec</a>, <a class=\"id\" href=\"#cpu\">cpu</a>).<a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#tasklet_hi_vec\">tasklet_hi_vec</a>).<a class=\"id\" href=\"#tail\">tail</a> = <a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#tasklet_hi_vec\">tasklet_hi_vec</a>, <a class=\"id\" href=\"#cpu\">cpu</a>).<a class=\"id\" href=\"#tail\">tail</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#tasklet_hi_vec\">tasklet_hi_vec</a>, <a class=\"id\" href=\"#cpu\">cpu</a>).<a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#tasklet_hi_vec\">tasklet_hi_vec</a>, <a class=\"id\" href=\"#cpu\">cpu</a>).<a class=\"id\" href=\"#tail\">tail</a> = &amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#tasklet_hi_vec\">tasklet_hi_vec</a>, <a class=\"id\" href=\"#cpu\">cpu</a>).<a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raise_softirq_irqoff\">raise_softirq_irqoff</a>(<a class=\"id\" href=\"#HI_SOFTIRQ\">HI_SOFTIRQ</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_enable\">local_irq_enable</a>();", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_HOTPLUG_CPU */</span>", 
"", 
"static int <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#cpu_callback\">cpu_callback</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nfb\">nfb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned long <a class=\"id\" href=\"#action\">action</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  void *<a class=\"id\" href=\"#hcpu\">hcpu</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#hotcpu\">hotcpu</a> = (unsigned long)<a class=\"id\" href=\"#hcpu\">hcpu</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#action\">action</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_UP_PREPARE\">CPU_UP_PREPARE</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_UP_PREPARE_FROZEN\">CPU_UP_PREPARE_FROZEN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#kthread_create\">kthread_create</a>(<a class=\"id\" href=\"#run_ksoftirqd\">run_ksoftirqd</a>, <a class=\"id\" href=\"#hcpu\">hcpu</a>, \"ksoftirqd/%d\", <a class=\"id\" href=\"#hotcpu\">hotcpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#p\">p</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"ksoftirqd for %i failed\\n\", <a class=\"id\" href=\"#hotcpu\">hotcpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#notifier_from_errno\">notifier_from_errno</a>(<a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#p\">p</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kthread_bind\">kthread_bind</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#hotcpu\">hotcpu</a>);", 
"  <span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#ksoftirqd\">ksoftirqd</a>, <a class=\"id\" href=\"#hotcpu\">hotcpu</a>) = <a class=\"id\" href=\"#p\">p</a>;", 
" <span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_ONLINE\">CPU_ONLINE</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_ONLINE_FROZEN\">CPU_ONLINE_FROZEN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_process\">wake_up_process</a>(<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#ksoftirqd\">ksoftirqd</a>, <a class=\"id\" href=\"#hotcpu\">hotcpu</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HOTPLUG_CPU\">CONFIG_HOTPLUG_CPU</a>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_UP_CANCELED\">CPU_UP_CANCELED</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_UP_CANCELED_FROZEN\">CPU_UP_CANCELED_FROZEN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#ksoftirqd\">ksoftirqd</a>, <a class=\"id\" href=\"#hotcpu\">hotcpu</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Unbind so it can run.  Fall thru. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kthread_bind\">kthread_bind</a>(<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#ksoftirqd\">ksoftirqd</a>, <a class=\"id\" href=\"#hotcpu\">hotcpu</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#cpumask_any\">cpumask_any</a>(<a class=\"id\" href=\"#cpu_online_mask\">cpu_online_mask</a>));", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_DEAD\">CPU_DEAD</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_DEAD_FROZEN\">CPU_DEAD_FROZEN</a>: {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sched_param\">sched_param</a> <a class=\"id\" href=\"#param\">param</a> = { .<a class=\"id\" href=\"#sched_priority\">sched_priority</a> = <a class=\"id\" href=\"#MAX_RT_PRIO\">MAX_RT_PRIO</a>-1 };", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#ksoftirqd\">ksoftirqd</a>, <a class=\"id\" href=\"#hotcpu\">hotcpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#ksoftirqd\">ksoftirqd</a>, <a class=\"id\" href=\"#hotcpu\">hotcpu</a>) = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sched_setscheduler_nocheck\">sched_setscheduler_nocheck</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#SCHED_FIFO\">SCHED_FIFO</a>, &amp;<a class=\"id\" href=\"#param\">param</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kthread_stop\">kthread_stop</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#takeover_tasklets\">takeover_tasklets</a>(<a class=\"id\" href=\"#hotcpu\">hotcpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_HOTPLUG_CPU */</span>", 
" <span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NOTIFY_OK\">NOTIFY_OK</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> <a class=\"id\" href=\"#__cpuinitdata\">__cpuinitdata</a> <a class=\"id\" href=\"#cpu_nfb\">cpu_nfb</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#notifier_call\">notifier_call</a> = <a class=\"id\" href=\"#cpu_callback\">cpu_callback</a>", 
"};", 
"", 
"static <a class=\"id\" href=\"#__init\">__init</a> int <a class=\"id\" href=\"#spawn_ksoftirqd\">spawn_ksoftirqd</a>(void)", 
"{", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#cpu\">cpu</a> = (void *)(long)<a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>();", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#cpu_callback\">cpu_callback</a>(&amp;<a class=\"id\" href=\"#cpu_nfb\">cpu_nfb</a>, <a class=\"id\" href=\"#CPU_UP_PREPARE\">CPU_UP_PREPARE</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#err\">err</a> != <a class=\"id\" href=\"#NOTIFY_OK\">NOTIFY_OK</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpu_callback\">cpu_callback</a>(&amp;<a class=\"id\" href=\"#cpu_nfb\">cpu_nfb</a>, <a class=\"id\" href=\"#CPU_ONLINE\">CPU_ONLINE</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#register_cpu_notifier\">register_cpu_notifier</a>(&amp;<a class=\"id\" href=\"#cpu_nfb\">cpu_nfb</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#early_initcall\">early_initcall</a>(<a class=\"id\" href=\"#spawn_ksoftirqd\">spawn_ksoftirqd</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Call a function on all processors</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#on_each_cpu\">on_each_cpu</a>(void (*<a class=\"id\" href=\"#func\">func</a>) (void *<a class=\"id\" href=\"#info\">info</a>), void *<a class=\"id\" href=\"#info\">info</a>, int <a class=\"id\" href=\"#wait\">wait</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#preempt_disable\">preempt_disable</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#smp_call_function\">smp_call_function</a>(<a class=\"id\" href=\"#func\">func</a>, <a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_disable\">local_irq_disable</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#func\">func</a>(<a class=\"id\" href=\"#info\">info</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_enable\">local_irq_enable</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#preempt_enable\">preempt_enable</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#on_each_cpu\">on_each_cpu</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * [ These __weak aliases are kept in a separate compilation unit, so that</span>", 
"<span class=\"comment\"> *   GCC does not inline them incorrectly. ]</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#__weak\">__weak</a> <a class=\"id\" href=\"#early_irq_init\">early_irq_init</a>(void)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#__weak\">__weak</a> <a class=\"id\" href=\"#arch_probe_nr_irqs\">arch_probe_nr_irqs</a>(void)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#__weak\">__weak</a> <a class=\"id\" href=\"#arch_early_irq_init\">arch_early_irq_init</a>(void)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#__weak\">__weak</a> <a class=\"id\" href=\"#arch_init_chip_data\">arch_init_chip_data</a>(struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>, int <a class=\"id\" href=\"#node\">node</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
];
xr_frag_insert('l/5b/0112bb4a2f8a8b513cec144d93aee2a0c4c615.xr', __xr_tmp);
