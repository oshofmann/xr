var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright (C) 2003 Sistina Software</span>", 
"<span class=\"comment\"> * Copyright (C) 2004 - 2008 Red Hat, Inc. All rights reserved.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Device-Mapper low-level I/O.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file is released under the GPL.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_DM_IO_H\">_LINUX_DM_IO_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_DM_IO_H\">_LINUX_DM_IO_H</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#dm_io_region\">dm_io_region</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#sector\">sector</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#count\">count</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If this is zero the region is ignored. */</span>", 
"};", 
"", 
"struct <a class=\"id\" href=\"#page_list\">page_list</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page_list\">page_list</a> *<a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>;", 
"};", 
"", 
"typedef void (*<a class=\"id\" href=\"#io_notify_fn\">io_notify_fn</a>)(unsigned long <a class=\"id\" href=\"#error\">error</a>, void *<a class=\"id\" href=\"#context\">context</a>);", 
"", 
"enum <a class=\"id\" href=\"#dm_io_mem_type\">dm_io_mem_type</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DM_IO_PAGE_LIST\">DM_IO_PAGE_LIST</a>,<span class=\"comment\">/* Page list */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DM_IO_BVEC\">DM_IO_BVEC</a>,<span class=\"ts\"/><span class=\"comment\">/* Bio vector */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DM_IO_VMA\">DM_IO_VMA</a>,<span class=\"ts\"/><span class=\"comment\">/* Virtual memory area */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DM_IO_KMEM\">DM_IO_KMEM</a>,<span class=\"ts\"/><span class=\"comment\">/* Kernel memory */</span>", 
"};", 
"", 
"struct <a class=\"id\" href=\"#dm_io_memory\">dm_io_memory</a> {", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#dm_io_mem_type\">dm_io_mem_type</a> <a class=\"id\" href=\"#type\">type</a>;", 
"", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#offset\">offset</a>;", 
"", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page_list\">page_list</a> *<a class=\"id\" href=\"#pl\">pl</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a> *<a class=\"id\" href=\"#bvec\">bvec</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#vma\">vma</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#ptr\">ptr</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#dm_io_notify\">dm_io_notify</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#io_notify_fn\">io_notify_fn</a> <a class=\"id\" href=\"#fn\">fn</a>;<span class=\"ts\"/><span class=\"comment\">/* Callback for asynchronous requests */</span>", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#context\">context</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Passed to callback */</span>", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * IO request structure</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#dm_io_client\">dm_io_client</a>;", 
"struct <a class=\"id\" href=\"#dm_io_request\">dm_io_request</a> {", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#bi_rw\">bi_rw</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* READ|WRITE - not READA */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_io_memory\">dm_io_memory</a> <a class=\"id\" href=\"#mem\">mem</a>;<span class=\"ts\"/><span class=\"comment\">/* Memory to use for io */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_io_notify\">dm_io_notify</a> <a class=\"id\" href=\"#notify\">notify</a>;<span class=\"ts\"/><span class=\"comment\">/* Synchronous if notify.fn is NULL */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_io_client\">dm_io_client</a> *<a class=\"id\" href=\"#client\">client</a>;<span class=\"ts\"/><span class=\"comment\">/* Client memory handler */</span>", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * For async io calls, users can alternatively use the dm_io() function below</span>", 
"<span class=\"comment\"> * and dm_io_client_create() to create private mempools for the client.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Create/destroy may block.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#dm_io_client\">dm_io_client</a> *<a class=\"id\" href=\"#dm_io_client_create\">dm_io_client_create</a>(unsigned <a class=\"id\" href=\"#num_pages\">num_pages</a>);", 
"int <a class=\"id\" href=\"#dm_io_client_resize\">dm_io_client_resize</a>(unsigned <a class=\"id\" href=\"#num_pages\">num_pages</a>, struct <a class=\"id\" href=\"#dm_io_client\">dm_io_client</a> *<a class=\"id\" href=\"#client\">client</a>);", 
"void <a class=\"id\" href=\"#dm_io_client_destroy\">dm_io_client_destroy</a>(struct <a class=\"id\" href=\"#dm_io_client\">dm_io_client</a> *<a class=\"id\" href=\"#client\">client</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * IO interface using private per-client pools.</span>", 
"<span class=\"comment\"> * Each bit in the optional 'sync_error_bits' bitset indicates whether an</span>", 
"<span class=\"comment\"> * error occurred doing io to the corresponding region.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#dm_io\">dm_io</a>(struct <a class=\"id\" href=\"#dm_io_request\">dm_io_request</a> *<a class=\"id\" href=\"#io_req\">io_req</a>, unsigned <a class=\"id\" href=\"#num_regions\">num_regions</a>,", 
"<span class=\"ts\"/>  struct <a class=\"id\" href=\"#dm_io_region\">dm_io_region</a> *<a class=\"id\" href=\"#region\">region</a>, unsigned long *<a class=\"id\" href=\"#sync_error_bits\">sync_error_bits</a>);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* __KERNEL__ */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* _LINUX_DM_IO_H */</span>", 
];
xr_frag_insert('l/5b/03acc7dd4ca41bb6271161d6120862fe423115.xr', __xr_tmp);
