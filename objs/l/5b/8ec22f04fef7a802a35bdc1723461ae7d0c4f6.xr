var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * linux/include/linux/sunrpc/sched.h</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Scheduling primitives for kernel Sun RPC.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 1996, Olaf Kirch &lt;okir@monad.swb.de&gt;</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_SUNRPC_SCHED_H_\">_LINUX_SUNRPC_SCHED_H_</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_SUNRPC_SCHED_H_\">_LINUX_SUNRPC_SCHED_H_</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ktime\">ktime</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sunrpc\">sunrpc</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#wait\">wait</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#workqueue\">workqueue</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sunrpc\">sunrpc</a>/<a class=\"id\" href=\"#xdr\">xdr</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This is the actual RPC procedure call info.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#rpc_procinfo\">rpc_procinfo</a>;", 
"struct <a class=\"id\" href=\"#rpc_message\">rpc_message</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rpc_procinfo\">rpc_procinfo</a> *<span class=\"ts\"/><a class=\"id\" href=\"#rpc_proc\">rpc_proc</a>;<span class=\"ts\"/><span class=\"comment\">/* Procedure information */</span>", 
"<span class=\"ts\"/>void *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rpc_argp\">rpc_argp</a>;<span class=\"ts\"/><span class=\"comment\">/* Arguments */</span>", 
"<span class=\"ts\"/>void *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rpc_resp\">rpc_resp</a>;<span class=\"ts\"/><span class=\"comment\">/* Result */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rpc_cred\">rpc_cred</a> *<span class=\"ts\"/><a class=\"id\" href=\"#rpc_cred\">rpc_cred</a>;<span class=\"ts\"/><span class=\"comment\">/* Credentials */</span>", 
"};", 
"", 
"struct <a class=\"id\" href=\"#rpc_call_ops\">rpc_call_ops</a>;", 
"struct <a class=\"id\" href=\"#rpc_wait_queue\">rpc_wait_queue</a>;", 
"struct <a class=\"id\" href=\"#rpc_wait\">rpc_wait</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#list\">list</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* wait queue links */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#links\">links</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Links to related tasks */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#timer_list\">timer_list</a>;<span class=\"ts\"/><span class=\"comment\">/* Timer list */</span>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#expires\">expires</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This is the RPC task struct</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tk_count\">tk_count</a>;<span class=\"ts\"/><span class=\"comment\">/* Reference count */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#tk_task\">tk_task</a>;<span class=\"ts\"/><span class=\"comment\">/* global list of tasks */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rpc_clnt\">rpc_clnt</a> *<span class=\"ts\"/><a class=\"id\" href=\"#tk_client\">tk_client</a>;<span class=\"ts\"/><span class=\"comment\">/* RPC client */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rpc_rqst\">rpc_rqst</a> *<span class=\"ts\"/><a class=\"id\" href=\"#tk_rqstp\">tk_rqstp</a>;<span class=\"ts\"/><span class=\"comment\">/* RPC request */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * RPC call state</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rpc_message\">rpc_message</a><span class=\"ts\"/><a class=\"id\" href=\"#tk_msg\">tk_msg</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* RPC call info */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * callback<span class=\"ts\"/>to be executed after waking up</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * action<span class=\"ts\"/>next procedure for async tasks</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * tk_ops<span class=\"ts\"/>caller callbacks</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#tk_callback\">tk_callback</a>)(struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#tk_action\">tk_action</a>)(struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *);", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#rpc_call_ops\">rpc_call_ops</a> *<a class=\"id\" href=\"#tk_ops\">tk_ops</a>;", 
"<span class=\"ts\"/>void *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tk_calldata\">tk_calldata</a>;", 
"", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tk_timeout\">tk_timeout</a>;<span class=\"ts\"/><span class=\"comment\">/* timeout for rpc_sleep() */</span>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tk_runstate\">tk_runstate</a>;<span class=\"ts\"/><span class=\"comment\">/* Task run status */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#workqueue_struct\">workqueue_struct</a><span class=\"ts\"/>*<a class=\"id\" href=\"#tk_workqueue\">tk_workqueue</a>;<span class=\"ts\"/><span class=\"comment\">/* Normally rpciod, but could</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * be any workqueue</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rpc_wait_queue\">rpc_wait_queue</a> <span class=\"ts\"/>*<a class=\"id\" href=\"#tk_waitqueue\">tk_waitqueue</a>;<span class=\"ts\"/><span class=\"comment\">/* RPC wait queue we're on */</span>", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#work_struct\">work_struct</a><span class=\"ts\"/><a class=\"id\" href=\"#tk_work\">tk_work</a>;<span class=\"ts\"/><span class=\"comment\">/* Async task work queue */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#rpc_wait\">rpc_wait</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tk_wait\">tk_wait</a>;<span class=\"ts\"/><span class=\"comment\">/* RPC wait */</span>", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#u\">u</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ktime_t\">ktime_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tk_start\">tk_start</a>;<span class=\"ts\"/><span class=\"comment\">/* RPC task init timestamp */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pid_t\">pid_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tk_owner\">tk_owner</a>;<span class=\"ts\"/><span class=\"comment\">/* Process id for batching tasks */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tk_status\">tk_status</a>;<span class=\"ts\"/><span class=\"comment\">/* result of last operation */</span>", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tk_flags\">tk_flags</a>;<span class=\"ts\"/><span class=\"comment\">/* misc flags */</span>", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tk_timeouts\">tk_timeouts</a>;<span class=\"ts\"/><span class=\"comment\">/* maj timeouts */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#RPC_DEBUG\">RPC_DEBUG</a>", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tk_pid\">tk_pid</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* debugging aid */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tk_priority\">tk_priority</a> : 2,<span class=\"comment\">/* Task priority */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tk_garb_retry\">tk_garb_retry</a> : 2,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tk_cred_retry\">tk_cred_retry</a> : 2;", 
"};", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#tk_xprt\">tk_xprt</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tk_client\">tk_client</a>-><a class=\"id\" href=\"#cl_xprt\">cl_xprt</a>", 
"", 
"<span class=\"comment\">/* support walking a list of tasks on a wait queue */</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#task_for_each\">task_for_each</a>(<a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#head\">head</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each\">list_for_each</a>(<a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#head\">head</a>) \\", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#task\">task</a>=<a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#pos\">pos</a>, struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a>, <a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#tk_wait\">tk_wait</a>.<a class=\"id\" href=\"#list\">list</a>)),1)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#task_for_first\">task_for_first</a>(<a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#head\">head</a>) \\", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#list_empty\">list_empty</a>(<a class=\"id\" href=\"#head\">head</a>) &&  \\", 
"<span class=\"ts\"/>    ((<a class=\"id\" href=\"#task\">task</a>=<a class=\"id\" href=\"#list_entry\">list_entry</a>((<a class=\"id\" href=\"#head\">head</a>)-><a class=\"id\" href=\"#next\">next</a>, struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a>, <a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#tk_wait\">tk_wait</a>.<a class=\"id\" href=\"#list\">list</a>)),1))", 
"", 
"typedef void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#rpc_action\">rpc_action</a>)(struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *);", 
"", 
"struct <a class=\"id\" href=\"#rpc_call_ops\">rpc_call_ops</a> {", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#rpc_call_prepare\">rpc_call_prepare</a>)(struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *, void *);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#rpc_call_done\">rpc_call_done</a>)(struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *, void *);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#rpc_release\">rpc_release</a>)(void *);", 
"};", 
"", 
"struct <a class=\"id\" href=\"#rpc_task_setup\">rpc_task_setup</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *<a class=\"id\" href=\"#task\">task</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rpc_clnt\">rpc_clnt</a> *<a class=\"id\" href=\"#rpc_client\">rpc_client</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#rpc_message\">rpc_message</a> *<a class=\"id\" href=\"#rpc_message\">rpc_message</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#rpc_call_ops\">rpc_call_ops</a> *<a class=\"id\" href=\"#callback_ops\">callback_ops</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#callback_data\">callback_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#workqueue_struct\">workqueue_struct</a> *<a class=\"id\" href=\"#workqueue\">workqueue</a>;", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>signed char <a class=\"id\" href=\"#priority\">priority</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * RPC task flags</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RPC_TASK_ASYNC\">RPC_TASK_ASYNC</a><span class=\"ts\"/><span class=\"ts\"/>0x0001<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* is an async task */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RPC_TASK_SWAPPER\">RPC_TASK_SWAPPER</a><span class=\"ts\"/>0x0002<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* is swapping in/out */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RPC_CALL_MAJORSEEN\">RPC_CALL_MAJORSEEN</a><span class=\"ts\"/>0x0020<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* major timeout seen */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RPC_TASK_ROOTCREDS\">RPC_TASK_ROOTCREDS</a><span class=\"ts\"/>0x0040<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* force root creds */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RPC_TASK_DYNAMIC\">RPC_TASK_DYNAMIC</a><span class=\"ts\"/>0x0080<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* task was kmalloc'ed */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RPC_TASK_KILLED\">RPC_TASK_KILLED</a><span class=\"ts\"/><span class=\"ts\"/>0x0100<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* task was killed */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RPC_TASK_SOFT\">RPC_TASK_SOFT</a><span class=\"ts\"/><span class=\"ts\"/>0x0200<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Use soft timeouts */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RPC_TASK_SOFTCONN\">RPC_TASK_SOFTCONN</a><span class=\"ts\"/>0x0400<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Fail if can't connect */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RPC_IS_ASYNC\">RPC_IS_ASYNC</a>(<a class=\"id\" href=\"#t\">t</a>)<span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#t\">t</a>)-><a class=\"id\" href=\"#tk_flags\">tk_flags</a> &amp; <a class=\"id\" href=\"#RPC_TASK_ASYNC\">RPC_TASK_ASYNC</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RPC_IS_SWAPPER\">RPC_IS_SWAPPER</a>(<a class=\"id\" href=\"#t\">t</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#t\">t</a>)-><a class=\"id\" href=\"#tk_flags\">tk_flags</a> &amp; <a class=\"id\" href=\"#RPC_TASK_SWAPPER\">RPC_TASK_SWAPPER</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RPC_DO_ROOTOVERRIDE\">RPC_DO_ROOTOVERRIDE</a>(<a class=\"id\" href=\"#t\">t</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#t\">t</a>)-><a class=\"id\" href=\"#tk_flags\">tk_flags</a> &amp; <a class=\"id\" href=\"#RPC_TASK_ROOTCREDS\">RPC_TASK_ROOTCREDS</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RPC_ASSASSINATED\">RPC_ASSASSINATED</a>(<a class=\"id\" href=\"#t\">t</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#t\">t</a>)-><a class=\"id\" href=\"#tk_flags\">tk_flags</a> &amp; <a class=\"id\" href=\"#RPC_TASK_KILLED\">RPC_TASK_KILLED</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RPC_IS_SOFT\">RPC_IS_SOFT</a>(<a class=\"id\" href=\"#t\">t</a>)<span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#t\">t</a>)-><a class=\"id\" href=\"#tk_flags\">tk_flags</a> &amp; <a class=\"id\" href=\"#RPC_TASK_SOFT\">RPC_TASK_SOFT</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RPC_IS_SOFTCONN\">RPC_IS_SOFTCONN</a>(<a class=\"id\" href=\"#t\">t</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#t\">t</a>)-><a class=\"id\" href=\"#tk_flags\">tk_flags</a> &amp; <a class=\"id\" href=\"#RPC_TASK_SOFTCONN\">RPC_TASK_SOFTCONN</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RPC_TASK_RUNNING\">RPC_TASK_RUNNING</a><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RPC_TASK_QUEUED\">RPC_TASK_QUEUED</a><span class=\"ts\"/><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RPC_TASK_ACTIVE\">RPC_TASK_ACTIVE</a><span class=\"ts\"/><span class=\"ts\"/>2", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RPC_IS_RUNNING\">RPC_IS_RUNNING</a>(<a class=\"id\" href=\"#t\">t</a>)<span class=\"ts\"/><a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#RPC_TASK_RUNNING\">RPC_TASK_RUNNING</a>, &amp;(<a class=\"id\" href=\"#t\">t</a>)-><a class=\"id\" href=\"#tk_runstate\">tk_runstate</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#rpc_set_running\">rpc_set_running</a>(<a class=\"id\" href=\"#t\">t</a>)<span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#RPC_TASK_RUNNING\">RPC_TASK_RUNNING</a>, &amp;(<a class=\"id\" href=\"#t\">t</a>)-><a class=\"id\" href=\"#tk_runstate\">tk_runstate</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#rpc_test_and_set_running\">rpc_test_and_set_running</a>(<a class=\"id\" href=\"#t\">t</a>) \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#test_and_set_bit\">test_and_set_bit</a>(<a class=\"id\" href=\"#RPC_TASK_RUNNING\">RPC_TASK_RUNNING</a>, &amp;(<a class=\"id\" href=\"#t\">t</a>)-><a class=\"id\" href=\"#tk_runstate\">tk_runstate</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#rpc_clear_running\">rpc_clear_running</a>(<a class=\"id\" href=\"#t\">t</a>)<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>do { \\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smp_mb__before_clear_bit\">smp_mb__before_clear_bit</a>(); \\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#RPC_TASK_RUNNING\">RPC_TASK_RUNNING</a>, &amp;(<a class=\"id\" href=\"#t\">t</a>)-><a class=\"id\" href=\"#tk_runstate\">tk_runstate</a>); \\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smp_mb__after_clear_bit\">smp_mb__after_clear_bit</a>(); \\", 
"<span class=\"ts\"/>} while (0)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RPC_IS_QUEUED\">RPC_IS_QUEUED</a>(<a class=\"id\" href=\"#t\">t</a>)<span class=\"ts\"/><a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#RPC_TASK_QUEUED\">RPC_TASK_QUEUED</a>, &amp;(<a class=\"id\" href=\"#t\">t</a>)-><a class=\"id\" href=\"#tk_runstate\">tk_runstate</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#rpc_set_queued\">rpc_set_queued</a>(<a class=\"id\" href=\"#t\">t</a>)<span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#RPC_TASK_QUEUED\">RPC_TASK_QUEUED</a>, &amp;(<a class=\"id\" href=\"#t\">t</a>)-><a class=\"id\" href=\"#tk_runstate\">tk_runstate</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#rpc_clear_queued\">rpc_clear_queued</a>(<a class=\"id\" href=\"#t\">t</a>)<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>do { \\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smp_mb__before_clear_bit\">smp_mb__before_clear_bit</a>(); \\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#RPC_TASK_QUEUED\">RPC_TASK_QUEUED</a>, &amp;(<a class=\"id\" href=\"#t\">t</a>)-><a class=\"id\" href=\"#tk_runstate\">tk_runstate</a>); \\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smp_mb__after_clear_bit\">smp_mb__after_clear_bit</a>(); \\", 
"<span class=\"ts\"/>} while (0)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RPC_IS_ACTIVATED\">RPC_IS_ACTIVATED</a>(<a class=\"id\" href=\"#t\">t</a>)<span class=\"ts\"/><a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#RPC_TASK_ACTIVE\">RPC_TASK_ACTIVE</a>, &amp;(<a class=\"id\" href=\"#t\">t</a>)-><a class=\"id\" href=\"#tk_runstate\">tk_runstate</a>)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Task priorities.</span>", 
"<span class=\"comment\"> * Note: if you change these, you must also change</span>", 
"<span class=\"comment\"> * the task initialization definitions below.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RPC_PRIORITY_LOW\">RPC_PRIORITY_LOW</a><span class=\"ts\"/>(-1)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RPC_PRIORITY_NORMAL\">RPC_PRIORITY_NORMAL</a><span class=\"ts\"/>(0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RPC_PRIORITY_HIGH\">RPC_PRIORITY_HIGH</a><span class=\"ts\"/>(1)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RPC_PRIORITY_PRIVILEGED\">RPC_PRIORITY_PRIVILEGED</a><span class=\"ts\"/>(2)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RPC_NR_PRIORITY\">RPC_NR_PRIORITY</a><span class=\"ts\"/><span class=\"ts\"/>(1 + <a class=\"id\" href=\"#RPC_PRIORITY_PRIVILEGED\">RPC_PRIORITY_PRIVILEGED</a> - <a class=\"id\" href=\"#RPC_PRIORITY_LOW\">RPC_PRIORITY_LOW</a>)", 
"", 
"struct <a class=\"id\" href=\"#rpc_timer\">rpc_timer</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timer_list\">timer_list</a> <a class=\"id\" href=\"#timer\">timer</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#expires\">expires</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * RPC synchronization objects</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#rpc_wait_queue\">rpc_wait_queue</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lock\">lock</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#tasks\">tasks</a>[<a class=\"id\" href=\"#RPC_NR_PRIORITY\">RPC_NR_PRIORITY</a>];<span class=\"ts\"/><span class=\"comment\">/* task queue for each priority level */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pid_t\">pid_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#owner\">owner</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* process id of last task serviced */</span>", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#maxpriority\">maxpriority</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* maximum priority (0 if queue is not a priority queue) */</span>", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#priority\">priority</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* current priority */</span>", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* # task groups remaining serviced so far */</span>", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr\">nr</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* # tasks remaining for cookie */</span>", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qlen\">qlen</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* total # tasks waiting in queue */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rpc_timer\">rpc_timer</a><span class=\"ts\"/><a class=\"id\" href=\"#timer_list\">timer_list</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#RPC_DEBUG\">RPC_DEBUG</a>", 
"<span class=\"ts\"/>const char *<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This is the # requests to send consecutively</span>", 
"<span class=\"comment\"> * from a single cookie.  The aim is to improve</span>", 
"<span class=\"comment\"> * performance of NFS operations such as read/write.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RPC_BATCH_COUNT\">RPC_BATCH_COUNT</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>16", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RPC_IS_PRIORITY\">RPC_IS_PRIORITY</a>(<a class=\"id\" href=\"#q\">q</a>)<span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#q\">q</a>)-><a class=\"id\" href=\"#maxpriority\">maxpriority</a> &gt; 0)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Function prototypes</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *<a class=\"id\" href=\"#rpc_new_task\">rpc_new_task</a>(const struct <a class=\"id\" href=\"#rpc_task_setup\">rpc_task_setup</a> *);", 
"struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *<a class=\"id\" href=\"#rpc_run_task\">rpc_run_task</a>(const struct <a class=\"id\" href=\"#rpc_task_setup\">rpc_task_setup</a> *);", 
"struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *<a class=\"id\" href=\"#rpc_run_bc_task\">rpc_run_bc_task</a>(struct <a class=\"id\" href=\"#rpc_rqst\">rpc_rqst</a> *<a class=\"id\" href=\"#req\">req</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#rpc_call_ops\">rpc_call_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>);", 
"void<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rpc_put_task\">rpc_put_task</a>(struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *);", 
"void<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rpc_exit_task\">rpc_exit_task</a>(struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *);", 
"void<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rpc_exit\">rpc_exit</a>(struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *, int);", 
"void<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rpc_release_calldata\">rpc_release_calldata</a>(const struct <a class=\"id\" href=\"#rpc_call_ops\">rpc_call_ops</a> *, void *);", 
"void<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rpc_killall_tasks\">rpc_killall_tasks</a>(struct <a class=\"id\" href=\"#rpc_clnt\">rpc_clnt</a> *);", 
"void<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rpc_execute\">rpc_execute</a>(struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *);", 
"void<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rpc_init_priority_wait_queue\">rpc_init_priority_wait_queue</a>(struct <a class=\"id\" href=\"#rpc_wait_queue\">rpc_wait_queue</a> *, const char *);", 
"void<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rpc_init_wait_queue\">rpc_init_wait_queue</a>(struct <a class=\"id\" href=\"#rpc_wait_queue\">rpc_wait_queue</a> *, const char *);", 
"void<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rpc_destroy_wait_queue\">rpc_destroy_wait_queue</a>(struct <a class=\"id\" href=\"#rpc_wait_queue\">rpc_wait_queue</a> *);", 
"void<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rpc_sleep_on\">rpc_sleep_on</a>(struct <a class=\"id\" href=\"#rpc_wait_queue\">rpc_wait_queue</a> *, struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rpc_action\">rpc_action</a> <a class=\"id\" href=\"#action\">action</a>);", 
"void<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rpc_wake_up_queued_task\">rpc_wake_up_queued_task</a>(struct <a class=\"id\" href=\"#rpc_wait_queue\">rpc_wait_queue</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *);", 
"void<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rpc_wake_up\">rpc_wake_up</a>(struct <a class=\"id\" href=\"#rpc_wait_queue\">rpc_wait_queue</a> *);", 
"struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *<a class=\"id\" href=\"#rpc_wake_up_next\">rpc_wake_up_next</a>(struct <a class=\"id\" href=\"#rpc_wait_queue\">rpc_wait_queue</a> *);", 
"void<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rpc_wake_up_status\">rpc_wake_up_status</a>(struct <a class=\"id\" href=\"#rpc_wait_queue\">rpc_wait_queue</a> *, int);", 
"int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rpc_queue_empty\">rpc_queue_empty</a>(struct <a class=\"id\" href=\"#rpc_wait_queue\">rpc_wait_queue</a> *);", 
"void<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rpc_delay\">rpc_delay</a>(struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *, unsigned long);", 
"void *<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rpc_malloc\">rpc_malloc</a>(struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *, <a class=\"id\" href=\"#size_t\">size_t</a>);", 
"void<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rpc_free\">rpc_free</a>(void *);", 
"int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rpciod_up\">rpciod_up</a>(void);", 
"void<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rpciod_down\">rpciod_down</a>(void);", 
"int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__rpc_wait_for_completion_task\">__rpc_wait_for_completion_task</a>(struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *<a class=\"id\" href=\"#task\">task</a>, int (*)(void *));", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#RPC_DEBUG\">RPC_DEBUG</a>", 
"void<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rpc_show_tasks\">rpc_show_tasks</a>(void);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rpc_init_mempool\">rpc_init_mempool</a>(void);", 
"void<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rpc_destroy_mempool\">rpc_destroy_mempool</a>(void);", 
"extern struct <a class=\"id\" href=\"#workqueue_struct\">workqueue_struct</a> *<a class=\"id\" href=\"#rpciod_workqueue\">rpciod_workqueue</a>;", 
"void<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rpc_prepare_task\">rpc_prepare_task</a>(struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *<a class=\"id\" href=\"#task\">task</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#rpc_wait_for_completion_task\">rpc_wait_for_completion_task</a>(struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *<a class=\"id\" href=\"#task\">task</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__rpc_wait_for_completion_task\">__rpc_wait_for_completion_task</a>(<a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#rpc_task_set_priority\">rpc_task_set_priority</a>(struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *<a class=\"id\" href=\"#task\">task</a>, unsigned char <a class=\"id\" href=\"#prio\">prio</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#tk_priority\">tk_priority</a> = <a class=\"id\" href=\"#prio\">prio</a> - <a class=\"id\" href=\"#RPC_PRIORITY_LOW\">RPC_PRIORITY_LOW</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#rpc_task_has_priority\">rpc_task_has_priority</a>(struct <a class=\"id\" href=\"#rpc_task\">rpc_task</a> *<a class=\"id\" href=\"#task\">task</a>, unsigned char <a class=\"id\" href=\"#prio\">prio</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#tk_priority\">tk_priority</a> + <a class=\"id\" href=\"#RPC_PRIORITY_LOW\">RPC_PRIORITY_LOW</a> == <a class=\"id\" href=\"#prio\">prio</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#RPC_DEBUG\">RPC_DEBUG</a>", 
"static <a class=\"id\" href=\"#inline\">inline</a> const char * <a class=\"id\" href=\"#rpc_qname\">rpc_qname</a>(struct <a class=\"id\" href=\"#rpc_wait_queue\">rpc_wait_queue</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/>return ((<a class=\"id\" href=\"#q\">q</a> && <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#name\">name</a>) ? <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#name\">name</a> : \"unknown\");", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _LINUX_SUNRPC_SCHED_H_ */</span>", 
];
xr_frag_insert('l/5b/8ec22f04fef7a802a35bdc1723461ae7d0c4f6.xr', __xr_tmp);
