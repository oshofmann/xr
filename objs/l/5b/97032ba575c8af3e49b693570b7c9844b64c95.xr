var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_BLKDEV_H\">_LINUX_BLKDEV_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_BLKDEV_H\">_LINUX_BLKDEV_H</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_BLOCK\">CONFIG_BLOCK</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#major\">major</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#genhd\">genhd</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#workqueue\">workqueue</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pagemap\">pagemap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#backing\">backing</a>-<a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#wait\">wait</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mempool\">mempool</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bio\">bio</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#stringify\">stringify</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#gfp\">gfp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bsg\">bsg</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#smp\">smp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#scatterlist\">scatterlist</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#scsi_ioctl_command\">scsi_ioctl_command</a>;", 
"", 
"struct <a class=\"id\" href=\"#request_queue\">request_queue</a>;", 
"struct <a class=\"id\" href=\"#elevator_queue\">elevator_queue</a>;", 
"struct <a class=\"id\" href=\"#request_pm_state\">request_pm_state</a>;", 
"struct <a class=\"id\" href=\"#blk_trace\">blk_trace</a>;", 
"struct <a class=\"id\" href=\"#request\">request</a>;", 
"struct <a class=\"id\" href=\"#sg_io_hdr\">sg_io_hdr</a>;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BLKDEV_MIN_RQ\">BLKDEV_MIN_RQ</a><span class=\"ts\"/>4", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BLKDEV_MAX_RQ\">BLKDEV_MAX_RQ</a><span class=\"ts\"/>128<span class=\"ts\"/><span class=\"comment\">/* Default maximum */</span>", 
"", 
"struct <a class=\"id\" href=\"#request\">request</a>;", 
"typedef void (<a class=\"id\" href=\"#rq_end_io_fn\">rq_end_io_fn</a>)(struct <a class=\"id\" href=\"#request\">request</a> *, int);", 
"", 
"struct <a class=\"id\" href=\"#request_list\">request_list</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * count[], starved[], and wait[] are indexed by</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * BLK_RW_SYNC/BLK_RW_ASYNC</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#count\">count</a>[2];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#starved\">starved</a>[2];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#elvpriv\">elvpriv</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mempool_t\">mempool_t</a> *<a class=\"id\" href=\"#rq_pool\">rq_pool</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wait_queue_head_t\">wait_queue_head_t</a> <a class=\"id\" href=\"#wait\">wait</a>[2];", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * request command types</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#rq_cmd_type_bits\">rq_cmd_type_bits</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REQ_TYPE_FS\">REQ_TYPE_FS</a><span class=\"ts\"/><span class=\"ts\"/>= 1,<span class=\"ts\"/><span class=\"comment\">/* fs request */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REQ_TYPE_BLOCK_PC\">REQ_TYPE_BLOCK_PC</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* scsi command */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REQ_TYPE_SENSE\">REQ_TYPE_SENSE</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* sense request */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REQ_TYPE_PM_SUSPEND\">REQ_TYPE_PM_SUSPEND</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* suspend request */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REQ_TYPE_PM_RESUME\">REQ_TYPE_PM_RESUME</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* resume request */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REQ_TYPE_PM_SHUTDOWN\">REQ_TYPE_PM_SHUTDOWN</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* shutdown request */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REQ_TYPE_SPECIAL\">REQ_TYPE_SPECIAL</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* driver defined type */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * for ATA/ATAPI devices. this really doesn't belong here, ide should</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * use REQ_TYPE_SPECIAL and use rq-&gt;cmd[0] with the range of driver</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * private REQ_LB opcodes to differentiate what type of request this is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REQ_TYPE_ATA_TASKFILE\">REQ_TYPE_ATA_TASKFILE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REQ_TYPE_ATA_PC\">REQ_TYPE_ATA_PC</a>,", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BLK_MAX_CDB\">BLK_MAX_CDB</a><span class=\"ts\"/>16", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * try to put the fields that are referenced together in the same cacheline.</span>", 
"<span class=\"comment\"> * if you modify this structure, be sure to check block/blk-core.c:rq_init()</span>", 
"<span class=\"comment\"> * as well!</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#request\">request</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#queuelist\">queuelist</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#call_single_data\">call_single_data</a> <a class=\"id\" href=\"#csd\">csd</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>;", 
"", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cmd_flags\">cmd_flags</a>;", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#rq_cmd_type_bits\">rq_cmd_type_bits</a> <a class=\"id\" href=\"#cmd_type\">cmd_type</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#atomic_flags\">atomic_flags</a>;", 
"", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* the following two fields are internal, NEVER access directly */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#__data_len\">__data_len</a>;<span class=\"ts\"/><span class=\"comment\">/* total data len */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#__sector\">__sector</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* sector cursor */</span>", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#biotail\">biotail</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> <a class=\"id\" href=\"#hash\">hash</a>;<span class=\"ts\"/><span class=\"comment\">/* merge hash */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The rb_node is only used inside the io scheduler, requests</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * are pruned when moved to the dispatch queue. So let the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * completion_data share space with the rb_node.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> <a class=\"id\" href=\"#rb_node\">rb_node</a>;<span class=\"ts\"/><span class=\"comment\">/* sort/lookup */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#completion_data\">completion_data</a>;", 
"<span class=\"ts\"/>};", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Three pointers are available for the IO schedulers, if they need</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * more they have to dynamically allocate it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#elevator_private\">elevator_private</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#elevator_private2\">elevator_private2</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#elevator_private3\">elevator_private3</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#rq_disk\">rq_disk</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start_time\">start_time</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_BLK_CGROUP\">CONFIG_BLK_CGROUP</a>", 
"<span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#start_time_ns\">start_time_ns</a>;", 
"<span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#io_start_time_ns\">io_start_time_ns</a>;    <span class=\"comment\">/* when passed to hardware */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* Number of scatter-gather DMA addr+len pairs after</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * physical address coalescing is performed.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#nr_phys_segments\">nr_phys_segments</a>;", 
"", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#ioprio\">ioprio</a>;", 
"", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ref_count\">ref_count</a>;", 
"", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#special\">special</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* opaque pointer available for LLD use */</span>", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#buffer\">buffer</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* kaddr of the current segment if available */</span>", 
"", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#tag\">tag</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#errors\">errors</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * when request is used as a packet command carrier</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#__cmd\">__cmd</a>[<a class=\"id\" href=\"#BLK_MAX_CDB\">BLK_MAX_CDB</a>];", 
"<span class=\"ts\"/>unsigned char *<a class=\"id\" href=\"#cmd\">cmd</a>;", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#cmd_len\">cmd_len</a>;", 
"", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#extra_len\">extra_len</a>;<span class=\"ts\"/><span class=\"comment\">/* length of alignment and padding */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#sense_len\">sense_len</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#resid_len\">resid_len</a>;<span class=\"ts\"/><span class=\"comment\">/* residual count */</span>", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#sense\">sense</a>;", 
"", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#deadline\">deadline</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#timeout_list\">timeout_list</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#timeout\">timeout</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retries\">retries</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * completion callback.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rq_end_io_fn\">rq_end_io_fn</a> *<a class=\"id\" href=\"#end_io\">end_io</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#end_io_data\">end_io_data</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* for bidi */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#next_rq\">next_rq</a>;", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned short <a class=\"id\" href=\"#req_get_ioprio\">req_get_ioprio</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#req\">req</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#ioprio\">ioprio</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * State information carried for REQ_TYPE_PM_SUSPEND and REQ_TYPE_PM_RESUME</span>", 
"<span class=\"comment\"> * requests. Some step values could eventually be made generic.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#request_pm_state\">request_pm_state</a>", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* PM state machine step value, currently driver specific */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#pm_step\">pm_step</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* requested PM state value (S1, S2, S3, S4, ...) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#pm_state\">pm_state</a>;", 
"<span class=\"ts\"/>void*<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* for driver use */</span>", 
"};", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#elevator\">elevator</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"typedef void (<a class=\"id\" href=\"#request_fn_proc\">request_fn_proc</a>) (struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>);", 
"typedef int (<a class=\"id\" href=\"#make_request_fn\">make_request_fn</a>) (struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>);", 
"typedef int (<a class=\"id\" href=\"#prep_rq_fn\">prep_rq_fn</a>) (struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, struct <a class=\"id\" href=\"#request\">request</a> *);", 
"typedef void (<a class=\"id\" href=\"#unprep_rq_fn\">unprep_rq_fn</a>) (struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, struct <a class=\"id\" href=\"#request\">request</a> *);", 
"typedef void (<a class=\"id\" href=\"#unplug_fn\">unplug_fn</a>) (struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *);", 
"", 
"struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a>;", 
"struct <a class=\"id\" href=\"#bvec_merge_data\">bvec_merge_data</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bi_bdev\">bi_bdev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#bi_sector\">bi_sector</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#bi_size\">bi_size</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#bi_rw\">bi_rw</a>;", 
"};", 
"typedef int (<a class=\"id\" href=\"#merge_bvec_fn\">merge_bvec_fn</a>) (struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, struct <a class=\"id\" href=\"#bvec_merge_data\">bvec_merge_data</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a> *);", 
"typedef void (<a class=\"id\" href=\"#softirq_done_fn\">softirq_done_fn</a>)(struct <a class=\"id\" href=\"#request\">request</a> *);", 
"typedef int (<a class=\"id\" href=\"#dma_drain_needed_fn\">dma_drain_needed_fn</a>)(struct <a class=\"id\" href=\"#request\">request</a> *);", 
"typedef int (<a class=\"id\" href=\"#lld_busy_fn\">lld_busy_fn</a>) (struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>);", 
"", 
"enum <a class=\"id\" href=\"#blk_eh_timer_return\">blk_eh_timer_return</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BLK_EH_NOT_HANDLED\">BLK_EH_NOT_HANDLED</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BLK_EH_HANDLED\">BLK_EH_HANDLED</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BLK_EH_RESET_TIMER\">BLK_EH_RESET_TIMER</a>,", 
"};", 
"", 
"typedef enum <a class=\"id\" href=\"#blk_eh_timer_return\">blk_eh_timer_return</a> (<a class=\"id\" href=\"#rq_timed_out_fn\">rq_timed_out_fn</a>)(struct <a class=\"id\" href=\"#request\">request</a> *);", 
"", 
"enum <a class=\"id\" href=\"#blk_queue_state\">blk_queue_state</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Queue_down\">Queue_down</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Queue_up\">Queue_up</a>,", 
"};", 
"", 
"struct <a class=\"id\" href=\"#blk_queue_tag\">blk_queue_tag</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request\">request</a> **<a class=\"id\" href=\"#tag_index\">tag_index</a>;<span class=\"ts\"/><span class=\"comment\">/* map of busy tags */</span>", 
"<span class=\"ts\"/>unsigned long *<a class=\"id\" href=\"#tag_map\">tag_map</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* bit map of free/busy tags */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#busy\">busy</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* current depth */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#max_depth\">max_depth</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* what we will send to device */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#real_max_depth\">real_max_depth</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* what the array can hold */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#refcnt\">refcnt</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* map can be shared */</span>", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BLK_SCSI_MAX_CMDS\">BLK_SCSI_MAX_CMDS</a><span class=\"ts\"/>(256)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BLK_SCSI_CMD_PER_LONG\">BLK_SCSI_CMD_PER_LONG</a><span class=\"ts\"/>(<a class=\"id\" href=\"#BLK_SCSI_MAX_CMDS\">BLK_SCSI_MAX_CMDS</a> / (sizeof(long) * 8))", 
"", 
"struct <a class=\"id\" href=\"#queue_limits\">queue_limits</a> {", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bounce_pfn\">bounce_pfn</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seg_boundary_mask\">seg_boundary_mask</a>;", 
"", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_hw_sectors\">max_hw_sectors</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_sectors\">max_sectors</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_segment_size\">max_segment_size</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#physical_block_size\">physical_block_size</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alignment_offset\">alignment_offset</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#io_min\">io_min</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#io_opt\">io_opt</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_discard_sectors\">max_discard_sectors</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#discard_granularity\">discard_granularity</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#discard_alignment\">discard_alignment</a>;", 
"", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#logical_block_size\">logical_block_size</a>;", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_segments\">max_segments</a>;", 
"", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#misaligned\">misaligned</a>;", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#discard_misaligned\">discard_misaligned</a>;", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#no_cluster\">no_cluster</a>;", 
"<span class=\"ts\"/>signed char<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#discard_zeroes_data\">discard_zeroes_data</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#request_queue\">request_queue</a>", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Together with queue_head for cacheline sharing</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#queue_head\">queue_head</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request\">request</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#last_merge\">last_merge</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#elevator_queue\">elevator_queue</a><span class=\"ts\"/>*<a class=\"id\" href=\"#elevator\">elevator</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the queue request freelist, one for reads and one for writes</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_list\">request_list</a><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#request_fn_proc\">request_fn_proc</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#request_fn\">request_fn</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#make_request_fn\">make_request_fn</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#make_request_fn\">make_request_fn</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#prep_rq_fn\">prep_rq_fn</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#prep_rq_fn\">prep_rq_fn</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unprep_rq_fn\">unprep_rq_fn</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#unprep_rq_fn\">unprep_rq_fn</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unplug_fn\">unplug_fn</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#unplug_fn\">unplug_fn</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#merge_bvec_fn\">merge_bvec_fn</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#merge_bvec_fn\">merge_bvec_fn</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#softirq_done_fn\">softirq_done_fn</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#softirq_done_fn\">softirq_done_fn</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rq_timed_out_fn\">rq_timed_out_fn</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#rq_timed_out_fn\">rq_timed_out_fn</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dma_drain_needed_fn\">dma_drain_needed_fn</a><span class=\"ts\"/>*<a class=\"id\" href=\"#dma_drain_needed\">dma_drain_needed</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lld_busy_fn\">lld_busy_fn</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#lld_busy_fn\">lld_busy_fn</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Dispatch queue sorting</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end_sector\">end_sector</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request\">request</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#boundary_rq\">boundary_rq</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Auto-unplugging state</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timer_list\">timer_list</a><span class=\"ts\"/><a class=\"id\" href=\"#unplug_timer\">unplug_timer</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unplug_thresh\">unplug_thresh</a>;<span class=\"ts\"/><span class=\"comment\">/* After this many requests */</span>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unplug_delay\">unplug_delay</a>;<span class=\"ts\"/><span class=\"comment\">/* After this many jiffies */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#work_struct\">work_struct</a><span class=\"ts\"/><a class=\"id\" href=\"#unplug_work\">unplug_work</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#backing_dev_info\">backing_dev_info</a><span class=\"ts\"/><a class=\"id\" href=\"#backing_dev_info\">backing_dev_info</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The queue owner gets to use this for whatever they like.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ll_rw_blk doesn't touch it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#queuedata\">queuedata</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * queue needs bounce pages for pages above this limit</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gfp_t\">gfp_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bounce_gfp\">bounce_gfp</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * various queue flags, see QUEUE_* below</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#queue_flags\">queue_flags</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * protects queue structures from reentrancy. -&gt;__queue_lock should</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * _never_ be used directly, it is queue private. always use</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * -&gt;queue_lock.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__queue_lock\">__queue_lock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#queue_lock\">queue_lock</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * queue kobject</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kobject\">kobject</a> <a class=\"id\" href=\"#kobj\">kobj</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * queue settings</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_requests\">nr_requests</a>;<span class=\"ts\"/><span class=\"comment\">/* Max # of requests */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_congestion_on\">nr_congestion_on</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_congestion_off\">nr_congestion_off</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_batching\">nr_batching</a>;", 
"", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#dma_drain_buffer\">dma_drain_buffer</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dma_drain_size\">dma_drain_size</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dma_pad_mask\">dma_pad_mask</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dma_alignment\">dma_alignment</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#blk_queue_tag\">blk_queue_tag</a><span class=\"ts\"/>*<a class=\"id\" href=\"#queue_tags\">queue_tags</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#tag_busy_list\">tag_busy_list</a>;", 
"", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_sorted\">nr_sorted</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in_flight\">in_flight</a>[2];", 
"", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq_timeout\">rq_timeout</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timer_list\">timer_list</a><span class=\"ts\"/><a class=\"id\" href=\"#timeout\">timeout</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#timeout_list\">timeout_list</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#queue_limits\">queue_limits</a><span class=\"ts\"/><a class=\"id\" href=\"#limits\">limits</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * sg stuff</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_timeout\">sg_timeout</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_reserved_size\">sg_reserved_size</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_BLK_DEV_IO_TRACE\">CONFIG_BLK_DEV_IO_TRACE</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#blk_trace\">blk_trace</a><span class=\"ts\"/>*<a class=\"id\" href=\"#blk_trace\">blk_trace</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * reserved for flush operations</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ordered\">ordered</a>, <a class=\"id\" href=\"#next_ordered\">next_ordered</a>, <a class=\"id\" href=\"#ordseq\">ordseq</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#orderr\">orderr</a>, <a class=\"id\" href=\"#ordcolor\">ordcolor</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request\">request</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pre_flush_rq\">pre_flush_rq</a>, <a class=\"id\" href=\"#bar_rq\">bar_rq</a>, <a class=\"id\" href=\"#post_flush_rq\">post_flush_rq</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request\">request</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#orig_bar_rq\">orig_bar_rq</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mutex\">mutex</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_lock\">sysfs_lock</a>;", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_BLK_DEV_BSG\">CONFIG_BLK_DEV_BSG</a>)", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bsg_class_device\">bsg_class_device</a> <a class=\"id\" href=\"#bsg_dev\">bsg_dev</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#QUEUE_FLAG_CLUSTER\">QUEUE_FLAG_CLUSTER</a><span class=\"ts\"/>0<span class=\"ts\"/><span class=\"comment\">/* cluster several segments into 1 */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#QUEUE_FLAG_QUEUED\">QUEUE_FLAG_QUEUED</a><span class=\"ts\"/>1<span class=\"ts\"/><span class=\"comment\">/* uses generic tag queueing */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#QUEUE_FLAG_STOPPED\">QUEUE_FLAG_STOPPED</a><span class=\"ts\"/>2<span class=\"ts\"/><span class=\"comment\">/* queue is stopped */</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#QUEUE_FLAG_SYNCFULL\">QUEUE_FLAG_SYNCFULL</a><span class=\"ts\"/>3<span class=\"ts\"/><span class=\"comment\">/* read queue has been filled */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#QUEUE_FLAG_ASYNCFULL\">QUEUE_FLAG_ASYNCFULL</a><span class=\"ts\"/>4<span class=\"ts\"/><span class=\"comment\">/* write queue has been filled */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#QUEUE_FLAG_DEAD\">QUEUE_FLAG_DEAD</a><span class=\"ts\"/><span class=\"ts\"/>5<span class=\"ts\"/><span class=\"comment\">/* queue being torn down */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#QUEUE_FLAG_REENTER\">QUEUE_FLAG_REENTER</a><span class=\"ts\"/>6<span class=\"ts\"/><span class=\"comment\">/* Re-entrancy avoidance */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#QUEUE_FLAG_PLUGGED\">QUEUE_FLAG_PLUGGED</a><span class=\"ts\"/>7<span class=\"ts\"/><span class=\"comment\">/* queue is plugged */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#QUEUE_FLAG_ELVSWITCH\">QUEUE_FLAG_ELVSWITCH</a><span class=\"ts\"/>8<span class=\"ts\"/><span class=\"comment\">/* don't use elevator, just do FIFO */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#QUEUE_FLAG_BIDI\">QUEUE_FLAG_BIDI</a><span class=\"ts\"/><span class=\"ts\"/>9<span class=\"ts\"/><span class=\"comment\">/* queue supports bidi requests */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#QUEUE_FLAG_NOMERGES\">QUEUE_FLAG_NOMERGES</a>    10<span class=\"ts\"/><span class=\"comment\">/* disable merge attempts */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#QUEUE_FLAG_SAME_COMP\">QUEUE_FLAG_SAME_COMP</a>   11<span class=\"ts\"/><span class=\"comment\">/* force complete on same CPU */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#QUEUE_FLAG_FAIL_IO\">QUEUE_FLAG_FAIL_IO</a>     12<span class=\"ts\"/><span class=\"comment\">/* fake timeout */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#QUEUE_FLAG_STACKABLE\">QUEUE_FLAG_STACKABLE</a>   13<span class=\"ts\"/><span class=\"comment\">/* supports request stacking */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#QUEUE_FLAG_NONROT\">QUEUE_FLAG_NONROT</a>      14<span class=\"ts\"/><span class=\"comment\">/* non-rotational device (SSD) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#QUEUE_FLAG_VIRT\">QUEUE_FLAG_VIRT</a>        <a class=\"id\" href=\"#QUEUE_FLAG_NONROT\">QUEUE_FLAG_NONROT</a> <span class=\"comment\">/* paravirt device */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#QUEUE_FLAG_IO_STAT\">QUEUE_FLAG_IO_STAT</a>     15<span class=\"ts\"/><span class=\"comment\">/* do IO stats */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#QUEUE_FLAG_DISCARD\">QUEUE_FLAG_DISCARD</a>     16<span class=\"ts\"/><span class=\"comment\">/* supports DISCARD */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#QUEUE_FLAG_NOXMERGES\">QUEUE_FLAG_NOXMERGES</a>   17<span class=\"ts\"/><span class=\"comment\">/* No extended merges */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#QUEUE_FLAG_ADD_RANDOM\">QUEUE_FLAG_ADD_RANDOM</a>  18<span class=\"ts\"/><span class=\"comment\">/* Contributes to random pool */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#QUEUE_FLAG_SECDISCARD\">QUEUE_FLAG_SECDISCARD</a>  19<span class=\"ts\"/><span class=\"comment\">/* supports SECDISCARD */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#QUEUE_FLAG_DEFAULT\">QUEUE_FLAG_DEFAULT</a><span class=\"ts\"/>((1 << <a class=\"id\" href=\"#QUEUE_FLAG_IO_STAT\">QUEUE_FLAG_IO_STAT</a>) |<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (1 << <a class=\"id\" href=\"#QUEUE_FLAG_CLUSTER\">QUEUE_FLAG_CLUSTER</a>) |<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (1 << <a class=\"id\" href=\"#QUEUE_FLAG_STACKABLE\">QUEUE_FLAG_STACKABLE</a>)<span class=\"ts\"/>|<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (1 << <a class=\"id\" href=\"#QUEUE_FLAG_SAME_COMP\">QUEUE_FLAG_SAME_COMP</a>)<span class=\"ts\"/>|<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (1 << <a class=\"id\" href=\"#QUEUE_FLAG_ADD_RANDOM\">QUEUE_FLAG_ADD_RANDOM</a>))", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#queue_is_locked\">queue_is_locked</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_lock\">queue_lock</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#lock\">lock</a> && <a class=\"id\" href=\"#spin_is_locked\">spin_is_locked</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"#else", 
"<span class=\"ts\"/>return 1;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#queue_flag_set_unlocked\">queue_flag_set_unlocked</a>(unsigned int <a class=\"id\" href=\"#flag\">flag</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__set_bit\">__set_bit</a>(<a class=\"id\" href=\"#flag\">flag</a>, &amp;<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_flags\">queue_flags</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#queue_flag_test_and_clear\">queue_flag_test_and_clear</a>(unsigned int <a class=\"id\" href=\"#flag\">flag</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON_ONCE\">WARN_ON_ONCE</a>(!<a class=\"id\" href=\"#queue_is_locked\">queue_is_locked</a>(<a class=\"id\" href=\"#q\">q</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#flag\">flag</a>, &amp;<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_flags\">queue_flags</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__clear_bit\">__clear_bit</a>(<a class=\"id\" href=\"#flag\">flag</a>, &amp;<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_flags\">queue_flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#queue_flag_test_and_set\">queue_flag_test_and_set</a>(unsigned int <a class=\"id\" href=\"#flag\">flag</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON_ONCE\">WARN_ON_ONCE</a>(!<a class=\"id\" href=\"#queue_is_locked\">queue_is_locked</a>(<a class=\"id\" href=\"#q\">q</a>));", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#flag\">flag</a>, &amp;<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_flags\">queue_flags</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__set_bit\">__set_bit</a>(<a class=\"id\" href=\"#flag\">flag</a>, &amp;<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_flags\">queue_flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#queue_flag_set\">queue_flag_set</a>(unsigned int <a class=\"id\" href=\"#flag\">flag</a>, struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON_ONCE\">WARN_ON_ONCE</a>(!<a class=\"id\" href=\"#queue_is_locked\">queue_is_locked</a>(<a class=\"id\" href=\"#q\">q</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__set_bit\">__set_bit</a>(<a class=\"id\" href=\"#flag\">flag</a>, &amp;<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_flags\">queue_flags</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#queue_flag_clear_unlocked\">queue_flag_clear_unlocked</a>(unsigned int <a class=\"id\" href=\"#flag\">flag</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__clear_bit\">__clear_bit</a>(<a class=\"id\" href=\"#flag\">flag</a>, &amp;<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_flags\">queue_flags</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#queue_in_flight\">queue_in_flight</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#in_flight\">in_flight</a>[0] + <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#in_flight\">in_flight</a>[1];", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#queue_flag_clear\">queue_flag_clear</a>(unsigned int <a class=\"id\" href=\"#flag\">flag</a>, struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON_ONCE\">WARN_ON_ONCE</a>(!<a class=\"id\" href=\"#queue_is_locked\">queue_is_locked</a>(<a class=\"id\" href=\"#q\">q</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__clear_bit\">__clear_bit</a>(<a class=\"id\" href=\"#flag\">flag</a>, &amp;<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_flags\">queue_flags</a>);", 
"}", 
"", 
"enum {", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Hardbarrier is supported with one of the following methods.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * NONE<span class=\"ts\"/><span class=\"ts\"/>: hardbarrier unsupported</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * DRAIN<span class=\"ts\"/>: ordering by draining is enough</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * DRAIN_FLUSH<span class=\"ts\"/>: ordering by draining w/ pre and post flushes</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * DRAIN_FUA<span class=\"ts\"/>: ordering by draining w/ pre flush and FUA write</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * TAG<span class=\"ts\"/><span class=\"ts\"/>: ordering by tag is enough</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * TAG_FLUSH<span class=\"ts\"/>: ordering by tag w/ pre and post flushes</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * TAG_FUA<span class=\"ts\"/>: ordering by tag w/ pre flush and FUA write</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#QUEUE_ORDERED_BY_DRAIN\">QUEUE_ORDERED_BY_DRAIN</a><span class=\"ts\"/><span class=\"ts\"/>= 0x01,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#QUEUE_ORDERED_BY_TAG\">QUEUE_ORDERED_BY_TAG</a><span class=\"ts\"/><span class=\"ts\"/>= 0x02,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#QUEUE_ORDERED_DO_PREFLUSH\">QUEUE_ORDERED_DO_PREFLUSH</a><span class=\"ts\"/>= 0x10,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#QUEUE_ORDERED_DO_BAR\">QUEUE_ORDERED_DO_BAR</a><span class=\"ts\"/><span class=\"ts\"/>= 0x20,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#QUEUE_ORDERED_DO_POSTFLUSH\">QUEUE_ORDERED_DO_POSTFLUSH</a><span class=\"ts\"/>= 0x40,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#QUEUE_ORDERED_DO_FUA\">QUEUE_ORDERED_DO_FUA</a><span class=\"ts\"/><span class=\"ts\"/>= 0x80,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#QUEUE_ORDERED_NONE\">QUEUE_ORDERED_NONE</a><span class=\"ts\"/><span class=\"ts\"/>= 0x00,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#QUEUE_ORDERED_DRAIN\">QUEUE_ORDERED_DRAIN</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#QUEUE_ORDERED_BY_DRAIN\">QUEUE_ORDERED_BY_DRAIN</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#QUEUE_ORDERED_DO_BAR\">QUEUE_ORDERED_DO_BAR</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#QUEUE_ORDERED_DRAIN_FLUSH\">QUEUE_ORDERED_DRAIN_FLUSH</a><span class=\"ts\"/>= <a class=\"id\" href=\"#QUEUE_ORDERED_DRAIN\">QUEUE_ORDERED_DRAIN</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#QUEUE_ORDERED_DO_PREFLUSH\">QUEUE_ORDERED_DO_PREFLUSH</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#QUEUE_ORDERED_DO_POSTFLUSH\">QUEUE_ORDERED_DO_POSTFLUSH</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#QUEUE_ORDERED_DRAIN_FUA\">QUEUE_ORDERED_DRAIN_FUA</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#QUEUE_ORDERED_DRAIN\">QUEUE_ORDERED_DRAIN</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#QUEUE_ORDERED_DO_PREFLUSH\">QUEUE_ORDERED_DO_PREFLUSH</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#QUEUE_ORDERED_DO_FUA\">QUEUE_ORDERED_DO_FUA</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#QUEUE_ORDERED_TAG\">QUEUE_ORDERED_TAG</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#QUEUE_ORDERED_BY_TAG\">QUEUE_ORDERED_BY_TAG</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#QUEUE_ORDERED_DO_BAR\">QUEUE_ORDERED_DO_BAR</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#QUEUE_ORDERED_TAG_FLUSH\">QUEUE_ORDERED_TAG_FLUSH</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#QUEUE_ORDERED_TAG\">QUEUE_ORDERED_TAG</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#QUEUE_ORDERED_DO_PREFLUSH\">QUEUE_ORDERED_DO_PREFLUSH</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#QUEUE_ORDERED_DO_POSTFLUSH\">QUEUE_ORDERED_DO_POSTFLUSH</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#QUEUE_ORDERED_TAG_FUA\">QUEUE_ORDERED_TAG_FUA</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#QUEUE_ORDERED_TAG\">QUEUE_ORDERED_TAG</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#QUEUE_ORDERED_DO_PREFLUSH\">QUEUE_ORDERED_DO_PREFLUSH</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#QUEUE_ORDERED_DO_FUA\">QUEUE_ORDERED_DO_FUA</a>,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Ordered operation sequence</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#QUEUE_ORDSEQ_STARTED\">QUEUE_ORDSEQ_STARTED</a><span class=\"ts\"/>= 0x01,<span class=\"ts\"/><span class=\"comment\">/* flushing in progress */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#QUEUE_ORDSEQ_DRAIN\">QUEUE_ORDSEQ_DRAIN</a><span class=\"ts\"/>= 0x02,<span class=\"ts\"/><span class=\"comment\">/* waiting for the queue to be drained */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#QUEUE_ORDSEQ_PREFLUSH\">QUEUE_ORDSEQ_PREFLUSH</a><span class=\"ts\"/>= 0x04,<span class=\"ts\"/><span class=\"comment\">/* pre-flushing in progress */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#QUEUE_ORDSEQ_BAR\">QUEUE_ORDSEQ_BAR</a><span class=\"ts\"/>= 0x08,<span class=\"ts\"/><span class=\"comment\">/* original barrier req in progress */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#QUEUE_ORDSEQ_POSTFLUSH\">QUEUE_ORDSEQ_POSTFLUSH</a><span class=\"ts\"/>= 0x10,<span class=\"ts\"/><span class=\"comment\">/* post-flushing in progress */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#QUEUE_ORDSEQ_DONE\">QUEUE_ORDSEQ_DONE</a><span class=\"ts\"/>= 0x20,", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#blk_queue_plugged\">blk_queue_plugged</a>(<a class=\"id\" href=\"#q\">q</a>)<span class=\"ts\"/><a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#QUEUE_FLAG_PLUGGED\">QUEUE_FLAG_PLUGGED</a>, &amp;(<a class=\"id\" href=\"#q\">q</a>)-><a class=\"id\" href=\"#queue_flags\">queue_flags</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#blk_queue_tagged\">blk_queue_tagged</a>(<a class=\"id\" href=\"#q\">q</a>)<span class=\"ts\"/><a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#QUEUE_FLAG_QUEUED\">QUEUE_FLAG_QUEUED</a>, &amp;(<a class=\"id\" href=\"#q\">q</a>)-><a class=\"id\" href=\"#queue_flags\">queue_flags</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#blk_queue_stopped\">blk_queue_stopped</a>(<a class=\"id\" href=\"#q\">q</a>)<span class=\"ts\"/><a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#QUEUE_FLAG_STOPPED\">QUEUE_FLAG_STOPPED</a>, &amp;(<a class=\"id\" href=\"#q\">q</a>)-><a class=\"id\" href=\"#queue_flags\">queue_flags</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#blk_queue_nomerges\">blk_queue_nomerges</a>(<a class=\"id\" href=\"#q\">q</a>)<span class=\"ts\"/><a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#QUEUE_FLAG_NOMERGES\">QUEUE_FLAG_NOMERGES</a>, &amp;(<a class=\"id\" href=\"#q\">q</a>)-><a class=\"id\" href=\"#queue_flags\">queue_flags</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#blk_queue_noxmerges\">blk_queue_noxmerges</a>(<a class=\"id\" href=\"#q\">q</a>)<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#QUEUE_FLAG_NOXMERGES\">QUEUE_FLAG_NOXMERGES</a>, &amp;(<a class=\"id\" href=\"#q\">q</a>)-><a class=\"id\" href=\"#queue_flags\">queue_flags</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#blk_queue_nonrot\">blk_queue_nonrot</a>(<a class=\"id\" href=\"#q\">q</a>)<span class=\"ts\"/><a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#QUEUE_FLAG_NONROT\">QUEUE_FLAG_NONROT</a>, &amp;(<a class=\"id\" href=\"#q\">q</a>)-><a class=\"id\" href=\"#queue_flags\">queue_flags</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#blk_queue_io_stat\">blk_queue_io_stat</a>(<a class=\"id\" href=\"#q\">q</a>)<span class=\"ts\"/><a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#QUEUE_FLAG_IO_STAT\">QUEUE_FLAG_IO_STAT</a>, &amp;(<a class=\"id\" href=\"#q\">q</a>)-><a class=\"id\" href=\"#queue_flags\">queue_flags</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#blk_queue_add_random\">blk_queue_add_random</a>(<a class=\"id\" href=\"#q\">q</a>)<span class=\"ts\"/><a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#QUEUE_FLAG_ADD_RANDOM\">QUEUE_FLAG_ADD_RANDOM</a>, &amp;(<a class=\"id\" href=\"#q\">q</a>)-><a class=\"id\" href=\"#queue_flags\">queue_flags</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#blk_queue_flushing\">blk_queue_flushing</a>(<a class=\"id\" href=\"#q\">q</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#q\">q</a>)-><a class=\"id\" href=\"#ordseq\">ordseq</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#blk_queue_stackable\">blk_queue_stackable</a>(<a class=\"id\" href=\"#q\">q</a>)<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#QUEUE_FLAG_STACKABLE\">QUEUE_FLAG_STACKABLE</a>, &amp;(<a class=\"id\" href=\"#q\">q</a>)-><a class=\"id\" href=\"#queue_flags\">queue_flags</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#blk_queue_discard\">blk_queue_discard</a>(<a class=\"id\" href=\"#q\">q</a>)<span class=\"ts\"/><a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#QUEUE_FLAG_DISCARD\">QUEUE_FLAG_DISCARD</a>, &amp;(<a class=\"id\" href=\"#q\">q</a>)-><a class=\"id\" href=\"#queue_flags\">queue_flags</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#blk_queue_secdiscard\">blk_queue_secdiscard</a>(<a class=\"id\" href=\"#q\">q</a>)<span class=\"ts\"/>(<a class=\"id\" href=\"#blk_queue_discard\">blk_queue_discard</a>(<a class=\"id\" href=\"#q\">q</a>) && \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#QUEUE_FLAG_SECDISCARD\">QUEUE_FLAG_SECDISCARD</a>, &amp;(<a class=\"id\" href=\"#q\">q</a>)-><a class=\"id\" href=\"#queue_flags\">queue_flags</a>))", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#blk_noretry_request\">blk_noretry_request</a>(<a class=\"id\" href=\"#rq\">rq</a>) \\", 
"<span class=\"ts\"/>((<a class=\"id\" href=\"#rq\">rq</a>)-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a> &amp; (<a class=\"id\" href=\"#REQ_FAILFAST_DEV\">REQ_FAILFAST_DEV</a>|<a class=\"id\" href=\"#REQ_FAILFAST_TRANSPORT\">REQ_FAILFAST_TRANSPORT</a>| \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#REQ_FAILFAST_DRIVER\">REQ_FAILFAST_DRIVER</a>))", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#blk_account_rq\">blk_account_rq</a>(<a class=\"id\" href=\"#rq\">rq</a>) \\", 
"<span class=\"ts\"/>(((<a class=\"id\" href=\"#rq\">rq</a>)-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a> &amp; <a class=\"id\" href=\"#REQ_STARTED\">REQ_STARTED</a>) && \\", 
"<span class=\"ts\"/> ((<a class=\"id\" href=\"#rq\">rq</a>)-><a class=\"id\" href=\"#cmd_type\">cmd_type</a> == <a class=\"id\" href=\"#REQ_TYPE_FS\">REQ_TYPE_FS</a> || \\", 
"<span class=\"ts\"/>  ((<a class=\"id\" href=\"#rq\">rq</a>)-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a> &amp; <a class=\"id\" href=\"#REQ_DISCARD\">REQ_DISCARD</a>)))", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#blk_pm_request\">blk_pm_request</a>(<a class=\"id\" href=\"#rq\">rq</a>)<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>((<a class=\"id\" href=\"#rq\">rq</a>)-><a class=\"id\" href=\"#cmd_type\">cmd_type</a> == <a class=\"id\" href=\"#REQ_TYPE_PM_SUSPEND\">REQ_TYPE_PM_SUSPEND</a> || \\", 
"<span class=\"ts\"/> (<a class=\"id\" href=\"#rq\">rq</a>)-><a class=\"id\" href=\"#cmd_type\">cmd_type</a> == <a class=\"id\" href=\"#REQ_TYPE_PM_RESUME\">REQ_TYPE_PM_RESUME</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#blk_rq_cpu_valid\">blk_rq_cpu_valid</a>(<a class=\"id\" href=\"#rq\">rq</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#rq\">rq</a>)-><a class=\"id\" href=\"#cpu\">cpu</a> != -1)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#blk_bidi_rq\">blk_bidi_rq</a>(<a class=\"id\" href=\"#rq\">rq</a>)<span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#rq\">rq</a>)-><a class=\"id\" href=\"#next_rq\">next_rq</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"comment\">/* rq-&gt;queuelist of dequeued request must be list_empty() */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#blk_queued_rq\">blk_queued_rq</a>(<a class=\"id\" href=\"#rq\">rq</a>)<span class=\"ts\"/>(!<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;(<a class=\"id\" href=\"#rq\">rq</a>)-><a class=\"id\" href=\"#queuelist\">queuelist</a>))", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#list_entry_rq\">list_entry_rq</a>(<a class=\"id\" href=\"#ptr\">ptr</a>)<span class=\"ts\"/><a class=\"id\" href=\"#list_entry\">list_entry</a>((<a class=\"id\" href=\"#ptr\">ptr</a>), struct <a class=\"id\" href=\"#request\">request</a>, <a class=\"id\" href=\"#queuelist\">queuelist</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#rq_data_dir\">rq_data_dir</a>(<a class=\"id\" href=\"#rq\">rq</a>)<span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#rq\">rq</a>)-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a> &amp; 1)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * We regard a request as sync, if either a read or a sync write</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#rw_is_sync\">rw_is_sync</a>(unsigned int <a class=\"id\" href=\"#rw_flags\">rw_flags</a>)", 
"{", 
"<span class=\"ts\"/>return !(<a class=\"id\" href=\"#rw_flags\">rw_flags</a> &amp; <a class=\"id\" href=\"#REQ_WRITE\">REQ_WRITE</a>) || (<a class=\"id\" href=\"#rw_flags\">rw_flags</a> &amp; <a class=\"id\" href=\"#REQ_SYNC\">REQ_SYNC</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#rq_is_sync\">rq_is_sync</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rw_is_sync\">rw_is_sync</a>(<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#blk_queue_full\">blk_queue_full</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, int <a class=\"id\" href=\"#sync\">sync</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sync\">sync</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#QUEUE_FLAG_SYNCFULL\">QUEUE_FLAG_SYNCFULL</a>, &amp;<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_flags\">queue_flags</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#QUEUE_FLAG_ASYNCFULL\">QUEUE_FLAG_ASYNCFULL</a>, &amp;<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_flags\">queue_flags</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#blk_set_queue_full\">blk_set_queue_full</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, int <a class=\"id\" href=\"#sync\">sync</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sync\">sync</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#queue_flag_set\">queue_flag_set</a>(<a class=\"id\" href=\"#QUEUE_FLAG_SYNCFULL\">QUEUE_FLAG_SYNCFULL</a>, <a class=\"id\" href=\"#q\">q</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#queue_flag_set\">queue_flag_set</a>(<a class=\"id\" href=\"#QUEUE_FLAG_ASYNCFULL\">QUEUE_FLAG_ASYNCFULL</a>, <a class=\"id\" href=\"#q\">q</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#blk_clear_queue_full\">blk_clear_queue_full</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, int <a class=\"id\" href=\"#sync\">sync</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sync\">sync</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#queue_flag_clear\">queue_flag_clear</a>(<a class=\"id\" href=\"#QUEUE_FLAG_SYNCFULL\">QUEUE_FLAG_SYNCFULL</a>, <a class=\"id\" href=\"#q\">q</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#queue_flag_clear\">queue_flag_clear</a>(<a class=\"id\" href=\"#QUEUE_FLAG_ASYNCFULL\">QUEUE_FLAG_ASYNCFULL</a>, <a class=\"id\" href=\"#q\">q</a>);", 
"}", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * mergeable request must not have _NOMERGE or _BARRIER bit set, nor may</span>", 
"<span class=\"comment\"> * it already be started by driver.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RQ_NOMERGE_FLAGS\">RQ_NOMERGE_FLAGS</a><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>(<a class=\"id\" href=\"#REQ_NOMERGE\">REQ_NOMERGE</a> | <a class=\"id\" href=\"#REQ_STARTED\">REQ_STARTED</a> | <a class=\"id\" href=\"#REQ_HARDBARRIER\">REQ_HARDBARRIER</a> | <a class=\"id\" href=\"#REQ_SOFTBARRIER\">REQ_SOFTBARRIER</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#rq_mergeable\">rq_mergeable</a>(<a class=\"id\" href=\"#rq\">rq</a>)<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>(!((<a class=\"id\" href=\"#rq\">rq</a>)-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a> &amp; <a class=\"id\" href=\"#RQ_NOMERGE_FLAGS\">RQ_NOMERGE_FLAGS</a>) && \\", 
"<span class=\"ts\"/> (((<a class=\"id\" href=\"#rq\">rq</a>)-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a> &amp; <a class=\"id\" href=\"#REQ_DISCARD\">REQ_DISCARD</a>) || \\", 
"<span class=\"ts\"/>  (<a class=\"id\" href=\"#rq\">rq</a>)-><a class=\"id\" href=\"#cmd_type\">cmd_type</a> == <a class=\"id\" href=\"#REQ_TYPE_FS\">REQ_TYPE_FS</a>))", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * q-&gt;prep_rq_fn return values</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BLKPREP_OK\">BLKPREP_OK</a><span class=\"ts\"/><span class=\"ts\"/>0<span class=\"ts\"/><span class=\"comment\">/* serve it */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BLKPREP_KILL\">BLKPREP_KILL</a><span class=\"ts\"/><span class=\"ts\"/>1<span class=\"ts\"/><span class=\"comment\">/* fatal error, kill */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BLKPREP_DEFER\">BLKPREP_DEFER</a><span class=\"ts\"/><span class=\"ts\"/>2<span class=\"ts\"/><span class=\"comment\">/* leave on queue */</span>", 
"", 
"extern unsigned long <a class=\"id\" href=\"#blk_max_low_pfn\">blk_max_low_pfn</a>, <a class=\"id\" href=\"#blk_max_pfn\">blk_max_pfn</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * standard bounce addresses:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * BLK_BOUNCE_HIGH<span class=\"ts\"/>: bounce all highmem pages</span>", 
"<span class=\"comment\"> * BLK_BOUNCE_ANY<span class=\"ts\"/>: don't bounce anything</span>", 
"<span class=\"comment\"> * BLK_BOUNCE_ISA<span class=\"ts\"/>: bounce pages above ISA DMA boundary</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#if <a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a> == 32", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BLK_BOUNCE_HIGH\">BLK_BOUNCE_HIGH</a><span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#u64\">u64</a>)<a class=\"id\" href=\"#blk_max_low_pfn\">blk_max_low_pfn</a> << <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>)", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BLK_BOUNCE_HIGH\">BLK_BOUNCE_HIGH</a><span class=\"ts\"/><span class=\"ts\"/>-1ULL", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BLK_BOUNCE_ANY\">BLK_BOUNCE_ANY</a><span class=\"ts\"/><span class=\"ts\"/>(-1ULL)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BLK_BOUNCE_ISA\">BLK_BOUNCE_ISA</a><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#DMA_BIT_MASK\">DMA_BIT_MASK</a>(24))", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * default timeout for SG_IO if none specified</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BLK_DEFAULT_SG_TIMEOUT\">BLK_DEFAULT_SG_TIMEOUT</a><span class=\"ts\"/>(60 * <a class=\"id\" href=\"#HZ\">HZ</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BLK_MIN_SG_TIMEOUT\">BLK_MIN_SG_TIMEOUT</a><span class=\"ts\"/>(7 * <a class=\"id\" href=\"#HZ\">HZ</a>)", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_BOUNCE\">CONFIG_BOUNCE</a>", 
"extern int <a class=\"id\" href=\"#init_emergency_isa_pool\">init_emergency_isa_pool</a>(void);", 
"extern void <a class=\"id\" href=\"#blk_queue_bounce\">blk_queue_bounce</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#bio\">bio</a> **<a class=\"id\" href=\"#bio\">bio</a>);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#init_emergency_isa_pool\">init_emergency_isa_pool</a>(void)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#blk_queue_bounce\">blk_queue_bounce</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#bio\">bio</a> **<a class=\"id\" href=\"#bio\">bio</a>)", 
"{", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_MMU */</span>", 
"", 
"struct <a class=\"id\" href=\"#rq_map_data\">rq_map_data</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> **<a class=\"id\" href=\"#pages\">pages</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#page_order\">page_order</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nr_entries\">nr_entries</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#null_mapped\">null_mapped</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#from_user\">from_user</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#req_iterator\">req_iterator</a> {", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>;", 
"};", 
"", 
"<span class=\"comment\">/* This should not be used directly - use rq_for_each_segment */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#for_each_bio\">for_each_bio</a>(<a class=\"id\" href=\"#_bio\">_bio</a>)<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>for (; <a class=\"id\" href=\"#_bio\">_bio</a>; <a class=\"id\" href=\"#_bio\">_bio</a> = <a class=\"id\" href=\"#_bio\">_bio</a>-><a class=\"id\" href=\"#bi_next\">bi_next</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__rq_for_each_bio\">__rq_for_each_bio</a>(<a class=\"id\" href=\"#_bio\">_bio</a>, <a class=\"id\" href=\"#rq\">rq</a>)<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#bio\">bio</a>))<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#_bio\">_bio</a> = (<a class=\"id\" href=\"#rq\">rq</a>)-><a class=\"id\" href=\"#bio\">bio</a>; <a class=\"id\" href=\"#_bio\">_bio</a>; <a class=\"id\" href=\"#_bio\">_bio</a> = <a class=\"id\" href=\"#_bio\">_bio</a>-><a class=\"id\" href=\"#bi_next\">bi_next</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#rq_for_each_segment\">rq_for_each_segment</a>(<a class=\"id\" href=\"#bvl\">bvl</a>, <a class=\"id\" href=\"#_rq\">_rq</a>, <a class=\"id\" href=\"#_iter\">_iter</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__rq_for_each_bio\">__rq_for_each_bio</a>(<a class=\"id\" href=\"#_iter\">_iter</a>.<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#_rq\">_rq</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio_for_each_segment\">bio_for_each_segment</a>(<a class=\"id\" href=\"#bvl\">bvl</a>, <a class=\"id\" href=\"#_iter\">_iter</a>.<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#_iter\">_iter</a>.<a class=\"id\" href=\"#i\">i</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#rq_iter_last\">rq_iter_last</a>(<a class=\"id\" href=\"#rq\">rq</a>, <a class=\"id\" href=\"#_iter\">_iter</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#_iter\">_iter</a>.<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_next\">bi_next</a> == <a class=\"id\" href=\"#NULL\">NULL</a> && <a class=\"id\" href=\"#_iter\">_iter</a>.<a class=\"id\" href=\"#i\">i</a> == <a class=\"id\" href=\"#_iter\">_iter</a>.<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_vcnt\">bi_vcnt</a>-1)", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#ARCH_IMPLEMENTS_FLUSH_DCACHE_PAGE\">ARCH_IMPLEMENTS_FLUSH_DCACHE_PAGE</a>", 
"# <a class=\"id\" href=\"#error\">error</a><span class=\"ts\"/>\"You should define ARCH_IMPLEMENTS_FLUSH_DCACHE_PAGE for your platform\"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#if <a class=\"id\" href=\"#ARCH_IMPLEMENTS_FLUSH_DCACHE_PAGE\">ARCH_IMPLEMENTS_FLUSH_DCACHE_PAGE</a>", 
"extern void <a class=\"id\" href=\"#rq_flush_dcache_pages\">rq_flush_dcache_pages</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#rq_flush_dcache_pages\">rq_flush_dcache_pages</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"extern int <a class=\"id\" href=\"#blk_register_queue\">blk_register_queue</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>);", 
"extern void <a class=\"id\" href=\"#blk_unregister_queue\">blk_unregister_queue</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>);", 
"extern void <a class=\"id\" href=\"#register_disk\">register_disk</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"extern void <a class=\"id\" href=\"#generic_make_request\">generic_make_request</a>(struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>);", 
"extern void <a class=\"id\" href=\"#blk_rq_init\">blk_rq_init</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>);", 
"extern void <a class=\"id\" href=\"#blk_put_request\">blk_put_request</a>(struct <a class=\"id\" href=\"#request\">request</a> *);", 
"extern void <a class=\"id\" href=\"#__blk_put_request\">__blk_put_request</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, struct <a class=\"id\" href=\"#request\">request</a> *);", 
"extern struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#blk_get_request\">blk_get_request</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, int, <a class=\"id\" href=\"#gfp_t\">gfp_t</a>);", 
"extern struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#blk_make_request\">blk_make_request</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, struct <a class=\"id\" href=\"#bio\">bio</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gfp_t\">gfp_t</a>);", 
"extern void <a class=\"id\" href=\"#blk_insert_request\">blk_insert_request</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, struct <a class=\"id\" href=\"#request\">request</a> *, int, void *);", 
"extern void <a class=\"id\" href=\"#blk_requeue_request\">blk_requeue_request</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, struct <a class=\"id\" href=\"#request\">request</a> *);", 
"extern void <a class=\"id\" href=\"#blk_add_request_payload\">blk_add_request_payload</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>, struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#len\">len</a>);", 
"extern int <a class=\"id\" href=\"#blk_rq_check_limits\">blk_rq_check_limits</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>);", 
"extern int <a class=\"id\" href=\"#blk_lld_busy\">blk_lld_busy</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>);", 
"extern int <a class=\"id\" href=\"#blk_rq_prep_clone\">blk_rq_prep_clone</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq_src\">rq_src</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#bio_set\">bio_set</a> *<a class=\"id\" href=\"#bs\">bs</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     int (*<a class=\"id\" href=\"#bio_ctr\">bio_ctr</a>)(struct <a class=\"id\" href=\"#bio\">bio</a> *, struct <a class=\"id\" href=\"#bio\">bio</a> *, void *),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     void *<a class=\"id\" href=\"#data\">data</a>);", 
"extern void <a class=\"id\" href=\"#blk_rq_unprep_clone\">blk_rq_unprep_clone</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>);", 
"extern int <a class=\"id\" href=\"#blk_insert_cloned_request\">blk_insert_cloned_request</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>);", 
"extern void <a class=\"id\" href=\"#blk_plug_device\">blk_plug_device</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *);", 
"extern void <a class=\"id\" href=\"#blk_plug_device_unlocked\">blk_plug_device_unlocked</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *);", 
"extern int <a class=\"id\" href=\"#blk_remove_plug\">blk_remove_plug</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *);", 
"extern void <a class=\"id\" href=\"#blk_recount_segments\">blk_recount_segments</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, struct <a class=\"id\" href=\"#bio\">bio</a> *);", 
"extern int <a class=\"id\" href=\"#scsi_cmd_ioctl\">scsi_cmd_ioctl</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *, <a class=\"id\" href=\"#fmode_t\">fmode_t</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned int, void <a class=\"id\" href=\"#__user\">__user</a> *);", 
"extern int <a class=\"id\" href=\"#sg_scsi_ioctl\">sg_scsi_ioctl</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *, <a class=\"id\" href=\"#fmode_t\">fmode_t</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#scsi_ioctl_command\">scsi_ioctl_command</a> <a class=\"id\" href=\"#__user\">__user</a> *);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * A queue has just exitted congestion.  Note this in the global counter of</span>", 
"<span class=\"comment\"> * congested queues, and wake up anyone who was waiting for requests to be</span>", 
"<span class=\"comment\"> * put back.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#blk_clear_queue_congested\">blk_clear_queue_congested</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, int <a class=\"id\" href=\"#sync\">sync</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_bdi_congested\">clear_bdi_congested</a>(&amp;<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#backing_dev_info\">backing_dev_info</a>, <a class=\"id\" href=\"#sync\">sync</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * A queue has just entered congestion.  Flag that in the queue's VM-visible</span>", 
"<span class=\"comment\"> * state flags and increment the global gounter of congested queues.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#blk_set_queue_congested\">blk_set_queue_congested</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, int <a class=\"id\" href=\"#sync\">sync</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_bdi_congested\">set_bdi_congested</a>(&amp;<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#backing_dev_info\">backing_dev_info</a>, <a class=\"id\" href=\"#sync\">sync</a>);", 
"}", 
"", 
"extern void <a class=\"id\" href=\"#blk_start_queue\">blk_start_queue</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>);", 
"extern void <a class=\"id\" href=\"#blk_stop_queue\">blk_stop_queue</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>);", 
"extern void <a class=\"id\" href=\"#blk_sync_queue\">blk_sync_queue</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>);", 
"extern void <a class=\"id\" href=\"#__blk_stop_queue\">__blk_stop_queue</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>);", 
"extern void <a class=\"id\" href=\"#__blk_run_queue\">__blk_run_queue</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *);", 
"extern void <a class=\"id\" href=\"#blk_run_queue\">blk_run_queue</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *);", 
"extern int <a class=\"id\" href=\"#blk_rq_map_user\">blk_rq_map_user</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, struct <a class=\"id\" href=\"#request\">request</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#rq_map_data\">rq_map_data</a> *, void <a class=\"id\" href=\"#__user\">__user</a> *, unsigned long,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#gfp_t\">gfp_t</a>);", 
"extern int <a class=\"id\" href=\"#blk_rq_unmap_user\">blk_rq_unmap_user</a>(struct <a class=\"id\" href=\"#bio\">bio</a> *);", 
"extern int <a class=\"id\" href=\"#blk_rq_map_kern\">blk_rq_map_kern</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, struct <a class=\"id\" href=\"#request\">request</a> *, void *, unsigned int, <a class=\"id\" href=\"#gfp_t\">gfp_t</a>);", 
"extern int <a class=\"id\" href=\"#blk_rq_map_user_iov\">blk_rq_map_user_iov</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, struct <a class=\"id\" href=\"#request\">request</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#rq_map_data\">rq_map_data</a> *, struct <a class=\"id\" href=\"#sg_iovec\">sg_iovec</a> *, int,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned int, <a class=\"id\" href=\"#gfp_t\">gfp_t</a>);", 
"extern int <a class=\"id\" href=\"#blk_execute_rq\">blk_execute_rq</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#request\">request</a> *, int);", 
"extern void <a class=\"id\" href=\"#blk_execute_rq_nowait\">blk_execute_rq_nowait</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#request\">request</a> *, int, <a class=\"id\" href=\"#rq_end_io_fn\">rq_end_io_fn</a> *);", 
"extern void <a class=\"id\" href=\"#blk_unplug\">blk_unplug</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#bdev_get_queue\">bdev_get_queue</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bdev\">bdev</a>-><a class=\"id\" href=\"#bd_disk\">bd_disk</a>-><a class=\"id\" href=\"#queue\">queue</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * blk_rq_pos()<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>: the current sector</span>", 
"<span class=\"comment\"> * blk_rq_bytes()<span class=\"ts\"/><span class=\"ts\"/>: bytes left in the entire request</span>", 
"<span class=\"comment\"> * blk_rq_cur_bytes()<span class=\"ts\"/><span class=\"ts\"/>: bytes left in the current segment</span>", 
"<span class=\"comment\"> * blk_rq_err_bytes()<span class=\"ts\"/><span class=\"ts\"/>: bytes left till the next error boundary</span>", 
"<span class=\"comment\"> * blk_rq_sectors()<span class=\"ts\"/><span class=\"ts\"/>: sectors left in the entire request</span>", 
"<span class=\"comment\"> * blk_rq_cur_sectors()<span class=\"ts\"/><span class=\"ts\"/>: sectors left in the current segment</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#blk_rq_pos\">blk_rq_pos</a>(const struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#__sector\">__sector</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#blk_rq_bytes\">blk_rq_bytes</a>(const struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#__data_len\">__data_len</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#blk_rq_cur_bytes\">blk_rq_cur_bytes</a>(const struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#bio\">bio</a> ? <a class=\"id\" href=\"#bio_cur_bytes\">bio_cur_bytes</a>(<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#bio\">bio</a>) : 0;", 
"}", 
"", 
"extern unsigned int <a class=\"id\" href=\"#blk_rq_err_bytes\">blk_rq_err_bytes</a>(const struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#blk_rq_sectors\">blk_rq_sectors</a>(const struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#blk_rq_bytes\">blk_rq_bytes</a>(<a class=\"id\" href=\"#rq\">rq</a>) >> 9;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#blk_rq_cur_sectors\">blk_rq_cur_sectors</a>(const struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#blk_rq_cur_bytes\">blk_rq_cur_bytes</a>(<a class=\"id\" href=\"#rq\">rq</a>) >> 9;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Request issue related functions.</span>", 
"<span class=\"comment\"> */</span>", 
"extern struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#blk_peek_request\">blk_peek_request</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>);", 
"extern void <a class=\"id\" href=\"#blk_start_request\">blk_start_request</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>);", 
"extern struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#blk_fetch_request\">blk_fetch_request</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Request completion related functions.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * blk_update_request() completes given number of bytes and updates</span>", 
"<span class=\"comment\"> * the request without completing it.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * blk_end_request() and friends.  __blk_end_request() must be called</span>", 
"<span class=\"comment\"> * with the request queue spinlock acquired.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Several drivers define their own end_request and call</span>", 
"<span class=\"comment\"> * blk_end_request() for parts of the original function.</span>", 
"<span class=\"comment\"> * This prevents code duplication in drivers.</span>", 
"<span class=\"comment\"> */</span>", 
"extern <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#blk_update_request\">blk_update_request</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>, int <a class=\"id\" href=\"#error\">error</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned int <a class=\"id\" href=\"#nr_bytes\">nr_bytes</a>);", 
"extern <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#blk_end_request\">blk_end_request</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>, int <a class=\"id\" href=\"#error\">error</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    unsigned int <a class=\"id\" href=\"#nr_bytes\">nr_bytes</a>);", 
"extern void <a class=\"id\" href=\"#blk_end_request_all\">blk_end_request_all</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>, int <a class=\"id\" href=\"#error\">error</a>);", 
"extern <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#blk_end_request_cur\">blk_end_request_cur</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>, int <a class=\"id\" href=\"#error\">error</a>);", 
"extern <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#blk_end_request_err\">blk_end_request_err</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>, int <a class=\"id\" href=\"#error\">error</a>);", 
"extern <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#__blk_end_request\">__blk_end_request</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>, int <a class=\"id\" href=\"#error\">error</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      unsigned int <a class=\"id\" href=\"#nr_bytes\">nr_bytes</a>);", 
"extern void <a class=\"id\" href=\"#__blk_end_request_all\">__blk_end_request_all</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>, int <a class=\"id\" href=\"#error\">error</a>);", 
"extern <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#__blk_end_request_cur\">__blk_end_request_cur</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>, int <a class=\"id\" href=\"#error\">error</a>);", 
"extern <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#__blk_end_request_err\">__blk_end_request_err</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>, int <a class=\"id\" href=\"#error\">error</a>);", 
"", 
"extern void <a class=\"id\" href=\"#blk_complete_request\">blk_complete_request</a>(struct <a class=\"id\" href=\"#request\">request</a> *);", 
"extern void <a class=\"id\" href=\"#__blk_complete_request\">__blk_complete_request</a>(struct <a class=\"id\" href=\"#request\">request</a> *);", 
"extern void <a class=\"id\" href=\"#blk_abort_request\">blk_abort_request</a>(struct <a class=\"id\" href=\"#request\">request</a> *);", 
"extern void <a class=\"id\" href=\"#blk_abort_queue\">blk_abort_queue</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *);", 
"extern void <a class=\"id\" href=\"#blk_unprep_request\">blk_unprep_request</a>(struct <a class=\"id\" href=\"#request\">request</a> *);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Access functions for manipulating queue properties</span>", 
"<span class=\"comment\"> */</span>", 
"extern struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#blk_init_queue_node\">blk_init_queue_node</a>(<a class=\"id\" href=\"#request_fn_proc\">request_fn_proc</a> *<a class=\"id\" href=\"#rfn\">rfn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a>, int <a class=\"id\" href=\"#node_id\">node_id</a>);", 
"extern struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#blk_init_allocated_queue_node\">blk_init_allocated_queue_node</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#request_fn_proc\">request_fn_proc</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> *, int <a class=\"id\" href=\"#node_id\">node_id</a>);", 
"extern struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#blk_init_queue\">blk_init_queue</a>(<a class=\"id\" href=\"#request_fn_proc\">request_fn_proc</a> *, <a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> *);", 
"extern struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#blk_init_allocated_queue\">blk_init_allocated_queue</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#request_fn_proc\">request_fn_proc</a> *, <a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> *);", 
"extern void <a class=\"id\" href=\"#blk_cleanup_queue\">blk_cleanup_queue</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *);", 
"extern void <a class=\"id\" href=\"#blk_queue_make_request\">blk_queue_make_request</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, <a class=\"id\" href=\"#make_request_fn\">make_request_fn</a> *);", 
"extern void <a class=\"id\" href=\"#blk_queue_bounce_limit\">blk_queue_bounce_limit</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, <a class=\"id\" href=\"#u64\">u64</a>);", 
"extern void <a class=\"id\" href=\"#blk_queue_max_hw_sectors\">blk_queue_max_hw_sectors</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, unsigned int);", 
"extern void <a class=\"id\" href=\"#blk_queue_max_segments\">blk_queue_max_segments</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, unsigned short);", 
"extern void <a class=\"id\" href=\"#blk_queue_max_segment_size\">blk_queue_max_segment_size</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, unsigned int);", 
"extern void <a class=\"id\" href=\"#blk_queue_max_discard_sectors\">blk_queue_max_discard_sectors</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#max_discard_sectors\">max_discard_sectors</a>);", 
"extern void <a class=\"id\" href=\"#blk_queue_logical_block_size\">blk_queue_logical_block_size</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, unsigned short);", 
"extern void <a class=\"id\" href=\"#blk_queue_physical_block_size\">blk_queue_physical_block_size</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, unsigned short);", 
"extern void <a class=\"id\" href=\"#blk_queue_alignment_offset\">blk_queue_alignment_offset</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned int <a class=\"id\" href=\"#alignment\">alignment</a>);", 
"extern void <a class=\"id\" href=\"#blk_limits_io_min\">blk_limits_io_min</a>(struct <a class=\"id\" href=\"#queue_limits\">queue_limits</a> *<a class=\"id\" href=\"#limits\">limits</a>, unsigned int <a class=\"id\" href=\"#min\">min</a>);", 
"extern void <a class=\"id\" href=\"#blk_queue_io_min\">blk_queue_io_min</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, unsigned int <a class=\"id\" href=\"#min\">min</a>);", 
"extern void <a class=\"id\" href=\"#blk_limits_io_opt\">blk_limits_io_opt</a>(struct <a class=\"id\" href=\"#queue_limits\">queue_limits</a> *<a class=\"id\" href=\"#limits\">limits</a>, unsigned int <a class=\"id\" href=\"#opt\">opt</a>);", 
"extern void <a class=\"id\" href=\"#blk_queue_io_opt\">blk_queue_io_opt</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, unsigned int <a class=\"id\" href=\"#opt\">opt</a>);", 
"extern void <a class=\"id\" href=\"#blk_set_default_limits\">blk_set_default_limits</a>(struct <a class=\"id\" href=\"#queue_limits\">queue_limits</a> *<a class=\"id\" href=\"#lim\">lim</a>);", 
"extern int <a class=\"id\" href=\"#blk_stack_limits\">blk_stack_limits</a>(struct <a class=\"id\" href=\"#queue_limits\">queue_limits</a> *<a class=\"id\" href=\"#t\">t</a>, struct <a class=\"id\" href=\"#queue_limits\">queue_limits</a> *<a class=\"id\" href=\"#b\">b</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#offset\">offset</a>);", 
"extern int <a class=\"id\" href=\"#bdev_stack_limits\">bdev_stack_limits</a>(struct <a class=\"id\" href=\"#queue_limits\">queue_limits</a> *<a class=\"id\" href=\"#t\">t</a>, struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#offset\">offset</a>);", 
"extern void <a class=\"id\" href=\"#disk_stack_limits\">disk_stack_limits</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>, struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#offset\">offset</a>);", 
"extern void <a class=\"id\" href=\"#blk_queue_stack_limits\">blk_queue_stack_limits</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#t\">t</a>, struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#b\">b</a>);", 
"extern void <a class=\"id\" href=\"#blk_queue_dma_pad\">blk_queue_dma_pad</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, unsigned int);", 
"extern void <a class=\"id\" href=\"#blk_queue_update_dma_pad\">blk_queue_update_dma_pad</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, unsigned int);", 
"extern int <a class=\"id\" href=\"#blk_queue_dma_drain\">blk_queue_dma_drain</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#dma_drain_needed_fn\">dma_drain_needed_fn</a> *<a class=\"id\" href=\"#dma_drain_needed\">dma_drain_needed</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       void *<a class=\"id\" href=\"#buf\">buf</a>, unsigned int <a class=\"id\" href=\"#size\">size</a>);", 
"extern void <a class=\"id\" href=\"#blk_queue_lld_busy\">blk_queue_lld_busy</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#lld_busy_fn\">lld_busy_fn</a> *<a class=\"id\" href=\"#fn\">fn</a>);", 
"extern void <a class=\"id\" href=\"#blk_queue_segment_boundary\">blk_queue_segment_boundary</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, unsigned long);", 
"extern void <a class=\"id\" href=\"#blk_queue_prep_rq\">blk_queue_prep_rq</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, <a class=\"id\" href=\"#prep_rq_fn\">prep_rq_fn</a> *<a class=\"id\" href=\"#pfn\">pfn</a>);", 
"extern void <a class=\"id\" href=\"#blk_queue_unprep_rq\">blk_queue_unprep_rq</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, <a class=\"id\" href=\"#unprep_rq_fn\">unprep_rq_fn</a> *<a class=\"id\" href=\"#ufn\">ufn</a>);", 
"extern void <a class=\"id\" href=\"#blk_queue_merge_bvec\">blk_queue_merge_bvec</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, <a class=\"id\" href=\"#merge_bvec_fn\">merge_bvec_fn</a> *);", 
"extern void <a class=\"id\" href=\"#blk_queue_dma_alignment\">blk_queue_dma_alignment</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, int);", 
"extern void <a class=\"id\" href=\"#blk_queue_update_dma_alignment\">blk_queue_update_dma_alignment</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, int);", 
"extern void <a class=\"id\" href=\"#blk_queue_softirq_done\">blk_queue_softirq_done</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, <a class=\"id\" href=\"#softirq_done_fn\">softirq_done_fn</a> *);", 
"extern void <a class=\"id\" href=\"#blk_queue_rq_timed_out\">blk_queue_rq_timed_out</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, <a class=\"id\" href=\"#rq_timed_out_fn\">rq_timed_out_fn</a> *);", 
"extern void <a class=\"id\" href=\"#blk_queue_rq_timeout\">blk_queue_rq_timeout</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, unsigned int);", 
"extern struct <a class=\"id\" href=\"#backing_dev_info\">backing_dev_info</a> *<a class=\"id\" href=\"#blk_get_backing_dev_info\">blk_get_backing_dev_info</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>);", 
"extern int <a class=\"id\" href=\"#blk_queue_ordered\">blk_queue_ordered</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, unsigned);", 
"extern <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#blk_do_ordered\">blk_do_ordered</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, struct <a class=\"id\" href=\"#request\">request</a> **);", 
"extern unsigned <a class=\"id\" href=\"#blk_ordered_cur_seq\">blk_ordered_cur_seq</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *);", 
"extern unsigned <a class=\"id\" href=\"#blk_ordered_req_seq\">blk_ordered_req_seq</a>(struct <a class=\"id\" href=\"#request\">request</a> *);", 
"extern <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#blk_ordered_complete_seq\">blk_ordered_complete_seq</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, unsigned, int);", 
"", 
"extern int <a class=\"id\" href=\"#blk_rq_map_sg\">blk_rq_map_sg</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, struct <a class=\"id\" href=\"#request\">request</a> *, struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *);", 
"extern void <a class=\"id\" href=\"#blk_dump_rq_flags\">blk_dump_rq_flags</a>(struct <a class=\"id\" href=\"#request\">request</a> *, char *);", 
"extern void <a class=\"id\" href=\"#generic_unplug_device\">generic_unplug_device</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *);", 
"extern long <a class=\"id\" href=\"#nr_blockdev_pages\">nr_blockdev_pages</a>(void);", 
"", 
"int <a class=\"id\" href=\"#blk_get_queue\">blk_get_queue</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *);", 
"struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#blk_alloc_queue\">blk_alloc_queue</a>(<a class=\"id\" href=\"#gfp_t\">gfp_t</a>);", 
"struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#blk_alloc_queue_node\">blk_alloc_queue_node</a>(<a class=\"id\" href=\"#gfp_t\">gfp_t</a>, int);", 
"extern void <a class=\"id\" href=\"#blk_put_queue\">blk_put_queue</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * tag stuff</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#blk_rq_tagged\">blk_rq_tagged</a>(<a class=\"id\" href=\"#rq\">rq</a>)<span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#rq\">rq</a>)-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a> &amp; <a class=\"id\" href=\"#REQ_QUEUED\">REQ_QUEUED</a>)", 
"extern int <a class=\"id\" href=\"#blk_queue_start_tag\">blk_queue_start_tag</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, struct <a class=\"id\" href=\"#request\">request</a> *);", 
"extern struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#blk_queue_find_tag\">blk_queue_find_tag</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, int);", 
"extern void <a class=\"id\" href=\"#blk_queue_end_tag\">blk_queue_end_tag</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, struct <a class=\"id\" href=\"#request\">request</a> *);", 
"extern int <a class=\"id\" href=\"#blk_queue_init_tags\">blk_queue_init_tags</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, int, struct <a class=\"id\" href=\"#blk_queue_tag\">blk_queue_tag</a> *);", 
"extern void <a class=\"id\" href=\"#blk_queue_free_tags\">blk_queue_free_tags</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *);", 
"extern int <a class=\"id\" href=\"#blk_queue_resize_tags\">blk_queue_resize_tags</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *, int);", 
"extern void <a class=\"id\" href=\"#blk_queue_invalidate_tags\">blk_queue_invalidate_tags</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *);", 
"extern struct <a class=\"id\" href=\"#blk_queue_tag\">blk_queue_tag</a> *<a class=\"id\" href=\"#blk_init_tags\">blk_init_tags</a>(int);", 
"extern void <a class=\"id\" href=\"#blk_free_tags\">blk_free_tags</a>(struct <a class=\"id\" href=\"#blk_queue_tag\">blk_queue_tag</a> *);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#blk_map_queue_find_tag\">blk_map_queue_find_tag</a>(struct <a class=\"id\" href=\"#blk_queue_tag\">blk_queue_tag</a> *<a class=\"id\" href=\"#bqt\">bqt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#tag\">tag</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#bqt\">bqt</a> == <a class=\"id\" href=\"#NULL\">NULL</a> || <a class=\"id\" href=\"#tag\">tag</a> >= <a class=\"id\" href=\"#bqt\">bqt</a>-><a class=\"id\" href=\"#real_max_depth\">real_max_depth</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bqt\">bqt</a>-><a class=\"id\" href=\"#tag_index\">tag_index</a>[<a class=\"id\" href=\"#tag\">tag</a>];", 
"}", 
"enum{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BLKDEV_WAIT\">BLKDEV_WAIT</a>,<span class=\"ts\"/><span class=\"comment\">/* wait for completion */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BLKDEV_BARRIER\">BLKDEV_BARRIER</a>,<span class=\"ts\"/><span class=\"comment\">/* issue request with barrier */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BLKDEV_SECURE\">BLKDEV_SECURE</a>,<span class=\"ts\"/><span class=\"comment\">/* secure discard */</span>", 
"};", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BLKDEV_IFL_WAIT\">BLKDEV_IFL_WAIT</a><span class=\"ts\"/><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#BLKDEV_WAIT\">BLKDEV_WAIT</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BLKDEV_IFL_BARRIER\">BLKDEV_IFL_BARRIER</a><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#BLKDEV_BARRIER\">BLKDEV_BARRIER</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BLKDEV_IFL_SECURE\">BLKDEV_IFL_SECURE</a><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#BLKDEV_SECURE\">BLKDEV_SECURE</a>)", 
"extern int <a class=\"id\" href=\"#blkdev_issue_flush\">blkdev_issue_flush</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *, <a class=\"id\" href=\"#gfp_t\">gfp_t</a>, <a class=\"id\" href=\"#sector_t\">sector_t</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long);", 
"extern int <a class=\"id\" href=\"#blkdev_issue_discard\">blkdev_issue_discard</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#sector\">sector</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#nr_sects\">nr_sects</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>, unsigned long <a class=\"id\" href=\"#flags\">flags</a>);", 
"extern int <a class=\"id\" href=\"#blkdev_issue_zeroout\">blkdev_issue_zeroout</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#sector\">sector</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#nr_sects\">nr_sects</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>, unsigned long <a class=\"id\" href=\"#flags\">flags</a>);", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#sb_issue_discard\">sb_issue_discard</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#block\">block</a>, <a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#nr_blocks\">nr_blocks</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#block\">block</a> <<= (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize_bits\">s_blocksize_bits</a> - 9);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nr_blocks\">nr_blocks</a> <<= (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize_bits\">s_blocksize_bits</a> - 9);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#blkdev_issue_discard\">blkdev_issue_discard</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>, <a class=\"id\" href=\"#block\">block</a>, <a class=\"id\" href=\"#nr_blocks\">nr_blocks</a>, <a class=\"id\" href=\"#GFP_NOFS\">GFP_NOFS</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#BLKDEV_IFL_WAIT\">BLKDEV_IFL_WAIT</a> | <a class=\"id\" href=\"#BLKDEV_IFL_BARRIER\">BLKDEV_IFL_BARRIER</a>);", 
"}", 
"", 
"extern int <a class=\"id\" href=\"#blk_verify_command\">blk_verify_command</a>(unsigned char *<a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#fmode_t\">fmode_t</a> <a class=\"id\" href=\"#has_write_perm\">has_write_perm</a>);", 
"", 
"enum <a class=\"id\" href=\"#blk_default_limits\">blk_default_limits</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BLK_MAX_SEGMENTS\">BLK_MAX_SEGMENTS</a><span class=\"ts\"/>= 128,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BLK_SAFE_MAX_SECTORS\">BLK_SAFE_MAX_SECTORS</a><span class=\"ts\"/>= 255,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BLK_DEF_MAX_SECTORS\">BLK_DEF_MAX_SECTORS</a><span class=\"ts\"/>= 1024,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BLK_MAX_SEGMENT_SIZE\">BLK_MAX_SEGMENT_SIZE</a><span class=\"ts\"/>= 65536,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BLK_SEG_BOUNDARY_MASK\">BLK_SEG_BOUNDARY_MASK</a><span class=\"ts\"/>= 0xFFFFFFFFUL,", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#blkdev_entry_to_request\">blkdev_entry_to_request</a>(<a class=\"id\" href=\"#entry\">entry</a>) <a class=\"id\" href=\"#list_entry\">list_entry</a>((<a class=\"id\" href=\"#entry\">entry</a>), struct <a class=\"id\" href=\"#request\">request</a>, <a class=\"id\" href=\"#queuelist\">queuelist</a>)", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long <a class=\"id\" href=\"#queue_bounce_pfn\">queue_bounce_pfn</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#limits\">limits</a>.<a class=\"id\" href=\"#bounce_pfn\">bounce_pfn</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long <a class=\"id\" href=\"#queue_segment_boundary\">queue_segment_boundary</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#limits\">limits</a>.<a class=\"id\" href=\"#seg_boundary_mask\">seg_boundary_mask</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#queue_max_sectors\">queue_max_sectors</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#limits\">limits</a>.<a class=\"id\" href=\"#max_sectors\">max_sectors</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#queue_max_hw_sectors\">queue_max_hw_sectors</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#limits\">limits</a>.<a class=\"id\" href=\"#max_hw_sectors\">max_hw_sectors</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned short <a class=\"id\" href=\"#queue_max_segments\">queue_max_segments</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#limits\">limits</a>.<a class=\"id\" href=\"#max_segments\">max_segments</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#queue_max_segment_size\">queue_max_segment_size</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#limits\">limits</a>.<a class=\"id\" href=\"#max_segment_size\">max_segment_size</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned short <a class=\"id\" href=\"#queue_logical_block_size\">queue_logical_block_size</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a> = 512;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#q\">q</a> && <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#limits\">limits</a>.<a class=\"id\" href=\"#logical_block_size\">logical_block_size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#limits\">limits</a>.<a class=\"id\" href=\"#logical_block_size\">logical_block_size</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned short <a class=\"id\" href=\"#bdev_logical_block_size\">bdev_logical_block_size</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#queue_logical_block_size\">queue_logical_block_size</a>(<a class=\"id\" href=\"#bdev_get_queue\">bdev_get_queue</a>(<a class=\"id\" href=\"#bdev\">bdev</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#queue_physical_block_size\">queue_physical_block_size</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#limits\">limits</a>.<a class=\"id\" href=\"#physical_block_size\">physical_block_size</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#bdev_physical_block_size\">bdev_physical_block_size</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#queue_physical_block_size\">queue_physical_block_size</a>(<a class=\"id\" href=\"#bdev_get_queue\">bdev_get_queue</a>(<a class=\"id\" href=\"#bdev\">bdev</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#queue_io_min\">queue_io_min</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#limits\">limits</a>.<a class=\"id\" href=\"#io_min\">io_min</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#bdev_io_min\">bdev_io_min</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#queue_io_min\">queue_io_min</a>(<a class=\"id\" href=\"#bdev_get_queue\">bdev_get_queue</a>(<a class=\"id\" href=\"#bdev\">bdev</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#queue_io_opt\">queue_io_opt</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#limits\">limits</a>.<a class=\"id\" href=\"#io_opt\">io_opt</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#bdev_io_opt\">bdev_io_opt</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#queue_io_opt\">queue_io_opt</a>(<a class=\"id\" href=\"#bdev_get_queue\">bdev_get_queue</a>(<a class=\"id\" href=\"#bdev\">bdev</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#queue_alignment_offset\">queue_alignment_offset</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#limits\">limits</a>.<a class=\"id\" href=\"#misaligned\">misaligned</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#limits\">limits</a>.<a class=\"id\" href=\"#alignment_offset\">alignment_offset</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#queue_limit_alignment_offset\">queue_limit_alignment_offset</a>(struct <a class=\"id\" href=\"#queue_limits\">queue_limits</a> *<a class=\"id\" href=\"#lim\">lim</a>, <a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#sector\">sector</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#granularity\">granularity</a> = <a class=\"id\" href=\"#max\">max</a>(<a class=\"id\" href=\"#lim\">lim</a>-><a class=\"id\" href=\"#physical_block_size\">physical_block_size</a>, <a class=\"id\" href=\"#lim\">lim</a>-><a class=\"id\" href=\"#io_min\">io_min</a>);", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#alignment\">alignment</a> = (<a class=\"id\" href=\"#sector\">sector</a> << 9) &amp; (<a class=\"id\" href=\"#granularity\">granularity</a> - 1);", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#granularity\">granularity</a> + <a class=\"id\" href=\"#lim\">lim</a>-><a class=\"id\" href=\"#alignment_offset\">alignment_offset</a> - <a class=\"id\" href=\"#alignment\">alignment</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>&amp; (<a class=\"id\" href=\"#granularity\">granularity</a> - 1);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#bdev_alignment_offset\">bdev_alignment_offset</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a> = <a class=\"id\" href=\"#bdev_get_queue\">bdev_get_queue</a>(<a class=\"id\" href=\"#bdev\">bdev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#limits\">limits</a>.<a class=\"id\" href=\"#misaligned\">misaligned</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bdev\">bdev</a> != <a class=\"id\" href=\"#bdev\">bdev</a>-><a class=\"id\" href=\"#bd_contains\">bd_contains</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#bdev\">bdev</a>-><a class=\"id\" href=\"#bd_part\">bd_part</a>-><a class=\"id\" href=\"#alignment_offset\">alignment_offset</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#limits\">limits</a>.<a class=\"id\" href=\"#alignment_offset\">alignment_offset</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#queue_discard_alignment\">queue_discard_alignment</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#limits\">limits</a>.<a class=\"id\" href=\"#discard_misaligned\">discard_misaligned</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#limits\">limits</a>.<a class=\"id\" href=\"#discard_alignment\">discard_alignment</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#queue_limit_discard_alignment\">queue_limit_discard_alignment</a>(struct <a class=\"id\" href=\"#queue_limits\">queue_limits</a> *<a class=\"id\" href=\"#lim\">lim</a>, <a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#sector\">sector</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#alignment\">alignment</a> = (<a class=\"id\" href=\"#sector\">sector</a> << 9) &amp; (<a class=\"id\" href=\"#lim\">lim</a>-><a class=\"id\" href=\"#discard_granularity\">discard_granularity</a> - 1);", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#lim\">lim</a>-><a class=\"id\" href=\"#discard_granularity\">discard_granularity</a> + <a class=\"id\" href=\"#lim\">lim</a>-><a class=\"id\" href=\"#discard_alignment\">discard_alignment</a> - <a class=\"id\" href=\"#alignment\">alignment</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>&amp; (<a class=\"id\" href=\"#lim\">lim</a>-><a class=\"id\" href=\"#discard_granularity\">discard_granularity</a> - 1);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#queue_discard_zeroes_data\">queue_discard_zeroes_data</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#limits\">limits</a>.<a class=\"id\" href=\"#discard_zeroes_data\">discard_zeroes_data</a> == 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#bdev_discard_zeroes_data\">bdev_discard_zeroes_data</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#queue_discard_zeroes_data\">queue_discard_zeroes_data</a>(<a class=\"id\" href=\"#bdev_get_queue\">bdev_get_queue</a>(<a class=\"id\" href=\"#bdev\">bdev</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#queue_dma_alignment\">queue_dma_alignment</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#q\">q</a> ? <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#dma_alignment\">dma_alignment</a> : 511;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#blk_rq_aligned\">blk_rq_aligned</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, void *<a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#alignment\">alignment</a> = <a class=\"id\" href=\"#queue_dma_alignment\">queue_dma_alignment</a>(<a class=\"id\" href=\"#q\">q</a>) | <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#dma_pad_mask\">dma_pad_mask</a>;", 
"<span class=\"ts\"/>return !((unsigned long)<a class=\"id\" href=\"#addr\">addr</a> &amp; <a class=\"id\" href=\"#alignment\">alignment</a>) && !(<a class=\"id\" href=\"#len\">len</a> &amp; <a class=\"id\" href=\"#alignment\">alignment</a>);", 
"}", 
"", 
"<span class=\"comment\">/* assumes size &gt; 256 */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#blksize_bits\">blksize_bits</a>(unsigned int <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#bits\">bits</a> = 8;", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bits\">bits</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> >>= 1;", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#size\">size</a> &gt; 256);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bits\">bits</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#block_size\">block_size</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bdev\">bdev</a>-><a class=\"id\" href=\"#bd_block_size\">bd_block_size</a>;", 
"}", 
"", 
"typedef struct {struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#v\">v</a>;} <a class=\"id\" href=\"#Sector\">Sector</a>;", 
"", 
"unsigned char *<a class=\"id\" href=\"#read_dev_sector\">read_dev_sector</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *, <a class=\"id\" href=\"#sector_t\">sector_t</a>, <a class=\"id\" href=\"#Sector\">Sector</a> *);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#put_dev_sector\">put_dev_sector</a>(<a class=\"id\" href=\"#Sector\">Sector</a> <a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page_cache_release\">page_cache_release</a>(<a class=\"id\" href=\"#p\">p</a>.<a class=\"id\" href=\"#v\">v</a>);", 
"}", 
"", 
"struct <a class=\"id\" href=\"#work_struct\">work_struct</a>;", 
"int <a class=\"id\" href=\"#kblockd_schedule_work\">kblockd_schedule_work</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_BLK_CGROUP\">CONFIG_BLK_CGROUP</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This should not be using sched_clock(). A real patch is in progress</span>", 
"<span class=\"comment\"> * to fix this up, until that is in place we need to disable preemption</span>", 
"<span class=\"comment\"> * around sched_clock() in this function and set_io_start_time_ns().</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#set_start_time_ns\">set_start_time_ns</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#req\">req</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#preempt_disable\">preempt_disable</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#start_time_ns\">start_time_ns</a> = <a class=\"id\" href=\"#sched_clock\">sched_clock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#preempt_enable\">preempt_enable</a>();", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#set_io_start_time_ns\">set_io_start_time_ns</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#req\">req</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#preempt_disable\">preempt_disable</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#io_start_time_ns\">io_start_time_ns</a> = <a class=\"id\" href=\"#sched_clock\">sched_clock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#preempt_enable\">preempt_enable</a>();", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#uint64_t\">uint64_t</a> <a class=\"id\" href=\"#rq_start_time_ns\">rq_start_time_ns</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#req\">req</a>)", 
"{", 
"        return <a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#start_time_ns\">start_time_ns</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#uint64_t\">uint64_t</a> <a class=\"id\" href=\"#rq_io_start_time_ns\">rq_io_start_time_ns</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#req\">req</a>)", 
"{", 
"        return <a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#io_start_time_ns\">io_start_time_ns</a>;", 
"}", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#set_start_time_ns\">set_start_time_ns</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#req\">req</a>) {}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#set_io_start_time_ns\">set_io_start_time_ns</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#req\">req</a>) {}", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#uint64_t\">uint64_t</a> <a class=\"id\" href=\"#rq_start_time_ns\">rq_start_time_ns</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#req\">req</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#uint64_t\">uint64_t</a> <a class=\"id\" href=\"#rq_io_start_time_ns\">rq_io_start_time_ns</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#req\">req</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MODULE_ALIAS_BLOCKDEV\">MODULE_ALIAS_BLOCKDEV</a>(<a class=\"id\" href=\"#major\">major</a>,<a class=\"id\" href=\"#minor\">minor</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MODULE_ALIAS\">MODULE_ALIAS</a>(\"block-major-\" <a class=\"id\" href=\"#__stringify\">__stringify</a>(<a class=\"id\" href=\"#major\">major</a>) \"-\" <a class=\"id\" href=\"#__stringify\">__stringify</a>(<a class=\"id\" href=\"#minor\">minor</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MODULE_ALIAS_BLOCKDEV_MAJOR\">MODULE_ALIAS_BLOCKDEV_MAJOR</a>(<a class=\"id\" href=\"#major\">major</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MODULE_ALIAS\">MODULE_ALIAS</a>(\"block-major-\" <a class=\"id\" href=\"#__stringify\">__stringify</a>(<a class=\"id\" href=\"#major\">major</a>) \"-*\")", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_BLK_DEV_INTEGRITY\">CONFIG_BLK_DEV_INTEGRITY</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#INTEGRITY_FLAG_READ\">INTEGRITY_FLAG_READ</a><span class=\"ts\"/>2<span class=\"ts\"/><span class=\"comment\">/* verify data integrity on read */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#INTEGRITY_FLAG_WRITE\">INTEGRITY_FLAG_WRITE</a><span class=\"ts\"/>4<span class=\"ts\"/><span class=\"comment\">/* generate data integrity on write */</span>", 
"", 
"struct <a class=\"id\" href=\"#blk_integrity_exchg\">blk_integrity_exchg</a> {", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#prot_buf\">prot_buf</a>;", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#data_buf\">data_buf</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sector\">sector</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data_size\">data_size</a>;", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sector_size\">sector_size</a>;", 
"<span class=\"ts\"/>const char<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#disk_name\">disk_name</a>;", 
"};", 
"", 
"typedef void (<a class=\"id\" href=\"#integrity_gen_fn\">integrity_gen_fn</a>) (struct <a class=\"id\" href=\"#blk_integrity_exchg\">blk_integrity_exchg</a> *);", 
"typedef int (<a class=\"id\" href=\"#integrity_vrfy_fn\">integrity_vrfy_fn</a>) (struct <a class=\"id\" href=\"#blk_integrity_exchg\">blk_integrity_exchg</a> *);", 
"typedef void (<a class=\"id\" href=\"#integrity_set_tag_fn\">integrity_set_tag_fn</a>) (void *, void *, unsigned int);", 
"typedef void (<a class=\"id\" href=\"#integrity_get_tag_fn\">integrity_get_tag_fn</a>) (void *, void *, unsigned int);", 
"", 
"struct <a class=\"id\" href=\"#blk_integrity\">blk_integrity</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#integrity_gen_fn\">integrity_gen_fn</a><span class=\"ts\"/>*<a class=\"id\" href=\"#generate_fn\">generate_fn</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#integrity_vrfy_fn\">integrity_vrfy_fn</a><span class=\"ts\"/>*<a class=\"id\" href=\"#verify_fn\">verify_fn</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#integrity_set_tag_fn\">integrity_set_tag_fn</a><span class=\"ts\"/>*<a class=\"id\" href=\"#set_tag_fn\">set_tag_fn</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#integrity_get_tag_fn\">integrity_get_tag_fn</a><span class=\"ts\"/>*<a class=\"id\" href=\"#get_tag_fn\">get_tag_fn</a>;", 
"", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tuple_size\">tuple_size</a>;", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sector_size\">sector_size</a>;", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tag_size\">tag_size</a>;", 
"", 
"<span class=\"ts\"/>const char<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#name\">name</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kobject\">kobject</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kobj\">kobj</a>;", 
"};", 
"", 
"extern int <a class=\"id\" href=\"#blk_integrity_register\">blk_integrity_register</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *, struct <a class=\"id\" href=\"#blk_integrity\">blk_integrity</a> *);", 
"extern void <a class=\"id\" href=\"#blk_integrity_unregister\">blk_integrity_unregister</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *);", 
"extern int <a class=\"id\" href=\"#blk_integrity_compare\">blk_integrity_compare</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *, struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *);", 
"extern int <a class=\"id\" href=\"#blk_rq_map_integrity_sg\">blk_rq_map_integrity_sg</a>(struct <a class=\"id\" href=\"#request\">request</a> *, struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *);", 
"extern int <a class=\"id\" href=\"#blk_rq_count_integrity_sg\">blk_rq_count_integrity_sg</a>(struct <a class=\"id\" href=\"#request\">request</a> *);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a>", 
"struct <a class=\"id\" href=\"#blk_integrity\">blk_integrity</a> *<a class=\"id\" href=\"#bdev_get_integrity\">bdev_get_integrity</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bdev\">bdev</a>-><a class=\"id\" href=\"#bd_disk\">bd_disk</a>-><a class=\"id\" href=\"#integrity\">integrity</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#blk_integrity\">blk_integrity</a> *<a class=\"id\" href=\"#blk_get_integrity\">blk_get_integrity</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#integrity\">integrity</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#blk_integrity_rq\">blk_integrity_rq</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#bio\">bio</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bio_integrity\">bio_integrity</a>(<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#bio\">bio</a>);", 
"}", 
"", 
"#else <span class=\"comment\">/* CONFIG_BLK_DEV_INTEGRITY */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#blk_integrity_rq\">blk_integrity_rq</a>(<a class=\"id\" href=\"#rq\">rq</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#blk_rq_count_integrity_sg\">blk_rq_count_integrity_sg</a>(<a class=\"id\" href=\"#a\">a</a>)<span class=\"ts\"/><span class=\"ts\"/>(0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#blk_rq_map_integrity_sg\">blk_rq_map_integrity_sg</a>(<a class=\"id\" href=\"#a\">a</a>, <a class=\"id\" href=\"#b\">b</a>)<span class=\"ts\"/><span class=\"ts\"/>(0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#bdev_get_integrity\">bdev_get_integrity</a>(<a class=\"id\" href=\"#a\">a</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#blk_get_integrity\">blk_get_integrity</a>(<a class=\"id\" href=\"#a\">a</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#blk_integrity_compare\">blk_integrity_compare</a>(<a class=\"id\" href=\"#a\">a</a>, <a class=\"id\" href=\"#b\">b</a>)<span class=\"ts\"/><span class=\"ts\"/>(0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#blk_integrity_register\">blk_integrity_register</a>(<a class=\"id\" href=\"#a\">a</a>, <a class=\"id\" href=\"#b\">b</a>)<span class=\"ts\"/><span class=\"ts\"/>(0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#blk_integrity_unregister\">blk_integrity_unregister</a>(<a class=\"id\" href=\"#a\">a</a>)<span class=\"ts\"/><span class=\"ts\"/>do { } while (0);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_BLK_DEV_INTEGRITY */</span>", 
"", 
"struct <a class=\"id\" href=\"#block_device_operations\">block_device_operations</a> {", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#open\">open</a>) (struct <a class=\"id\" href=\"#block_device\">block_device</a> *, <a class=\"id\" href=\"#fmode_t\">fmode_t</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#release\">release</a>) (struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *, <a class=\"id\" href=\"#fmode_t\">fmode_t</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#ioctl\">ioctl</a>) (struct <a class=\"id\" href=\"#block_device\">block_device</a> *, <a class=\"id\" href=\"#fmode_t\">fmode_t</a>, unsigned, unsigned long);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#compat_ioctl\">compat_ioctl</a>) (struct <a class=\"id\" href=\"#block_device\">block_device</a> *, <a class=\"id\" href=\"#fmode_t\">fmode_t</a>, unsigned, unsigned long);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#direct_access\">direct_access</a>) (struct <a class=\"id\" href=\"#block_device\">block_device</a> *, <a class=\"id\" href=\"#sector_t\">sector_t</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>void **, unsigned long *);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#media_changed\">media_changed</a>) (struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#unlock_native_capacity\">unlock_native_capacity</a>) (struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#revalidate_disk\">revalidate_disk</a>) (struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#getgeo\">getgeo</a>)(struct <a class=\"id\" href=\"#block_device\">block_device</a> *, struct <a class=\"id\" href=\"#hd_geometry\">hd_geometry</a> *);", 
"<span class=\"ts\"/><span class=\"comment\">/* this callback is with swap_lock and sometimes page table lock held */</span>", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#swap_slot_free_notify\">swap_slot_free_notify</a>) (struct <a class=\"id\" href=\"#block_device\">block_device</a> *, unsigned long);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#owner\">owner</a>;", 
"};", 
"", 
"extern int <a class=\"id\" href=\"#__blkdev_driver_ioctl\">__blkdev_driver_ioctl</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *, <a class=\"id\" href=\"#fmode_t\">fmode_t</a>, unsigned int,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned long);", 
"#else <span class=\"comment\">/* CONFIG_BLOCK */</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * stubs for when the block layer is configured out</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#buffer_heads_over_limit\">buffer_heads_over_limit</a> 0", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> long <a class=\"id\" href=\"#nr_blockdev_pages\">nr_blockdev_pages</a>(void)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_BLOCK */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/5b/97032ba575c8af3e49b693570b7c9844b64c95.xr', __xr_tmp);
