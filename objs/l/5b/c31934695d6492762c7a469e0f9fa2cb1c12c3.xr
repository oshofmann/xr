var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * INET<span class=\"ts\"/><span class=\"ts\"/>An implementation of the TCP/IP protocol suite for the LINUX</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>operating system.  INET is implemented using the  BSD Socket</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>interface as the means of communication with the user level.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>ROUTE - implementation of the IP router.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Authors:<span class=\"ts\"/>Ross Biro</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Fred N. van Kempen, &lt;waltje@uWalt.NL.Mugnet.ORG&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox, &lt;gw4pts@gw4pts.ampr.org&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Linus Torvalds, &lt;Linus.Torvalds@helsinki.fi&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alexey Kuznetsov, &lt;kuznet@ms2.inr.ac.ru&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Fixes:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Verify area fixes.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>cli() protects routing changes</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Rui Oliveira<span class=\"ts\"/>:<span class=\"ts\"/>ICMP routing table updates</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>(rco@di.uminho.pt)<span class=\"ts\"/>Routing table insertion and update</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Linus Torvalds<span class=\"ts\"/>:<span class=\"ts\"/>Rewrote bits to be sensible</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Added BSD route gw semantics</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Super /proc &gt;4K</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>MTU in route table</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>: <span class=\"ts\"/>MSS actually. Also added the window</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>clamper.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Sam Lantinga<span class=\"ts\"/>:<span class=\"ts\"/>Fixed route matching in rt_del()</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Routing cache support.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Removed compatibility cruft.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>RTF_REJECT support.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>TCP irtt support.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Jonathan Naylor<span class=\"ts\"/>:<span class=\"ts\"/>Added Metric support.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Miquel van Smoorenburg<span class=\"ts\"/>:<span class=\"ts\"/>BSD API fixes.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Miquel van Smoorenburg<span class=\"ts\"/>:<span class=\"ts\"/>Metrics.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Use __u32 properly</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Aligned routing errors more closely with BSD</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>our system is still very different.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Faster /proc handling</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Alexey Kuznetsov<span class=\"ts\"/>:<span class=\"ts\"/>Massive rework to support tree based routing,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>routing caches and better behaviour.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Olaf Erb<span class=\"ts\"/>:<span class=\"ts\"/>irtt wasn't being copied right.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Bjorn Ekwall<span class=\"ts\"/>:<span class=\"ts\"/>Kerneld route support.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Multicast fixed (I hope)</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/><span class=\"ts\"/>Pavel Krauz<span class=\"ts\"/>:<span class=\"ts\"/>Limited broadcast fixed</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Mike McLagan<span class=\"ts\"/>:<span class=\"ts\"/>Routing by source</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Alexey Kuznetsov<span class=\"ts\"/>:<span class=\"ts\"/>End of old history. Split to fib.c and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>route.c and rewritten from scratch.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Andi Kleen<span class=\"ts\"/>:<span class=\"ts\"/>Load-limit warning messages.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Vitaly E. Lavrov<span class=\"ts\"/>:<span class=\"ts\"/>Transparent proxy revived after year coma.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Vitaly E. Lavrov<span class=\"ts\"/>:<span class=\"ts\"/>Race condition in ip_route_input_slow.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Tobias Ringstrom<span class=\"ts\"/>:<span class=\"ts\"/>Uninitialized res.type in ip_route_output_slow.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Vladimir V. Ivanov<span class=\"ts\"/>:<span class=\"ts\"/>IP rule info (flowid) is really useful.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Marc Boucher<span class=\"ts\"/>:<span class=\"ts\"/>routing by fwmark</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Robert Olsson<span class=\"ts\"/><span class=\"ts\"/>:<span class=\"ts\"/>Added rt_cache statistics</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Arnaldo C. Melo<span class=\"ts\"/><span class=\"ts\"/>:<span class=\"ts\"/>Convert proc stuff to seq_file</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Eric Dumazet<span class=\"ts\"/><span class=\"ts\"/>:<span class=\"ts\"/>hashed spinlocks and rt_check_expire() fixes.</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>Ilia Sotnikov<span class=\"ts\"/><span class=\"ts\"/>:<span class=\"ts\"/>Ignore TOS on PMTUD and Redirect</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>Ilia Sotnikov<span class=\"ts\"/><span class=\"ts\"/>:<span class=\"ts\"/>Removed TOS from hash calculations</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#system\">system</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bitops\">bitops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bootmem\">bootmem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sockios\">sockios</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#in\">in</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#inet\">inet</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netdevice\">netdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#workqueue\">workqueue</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#skbuff\">skbuff</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#inetdevice\">inetdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#igmp\">igmp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pkt_sched\">pkt_sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mroute\">mroute</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netfilter_ipv4\">netfilter_ipv4</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#random\">random</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jhash\">jhash</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rcupdate\">rcupdate</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#times\">times</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#net_namespace\">net_namespace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#protocol\">protocol</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip\">ip</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#route\">route</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#inetpeer\">inetpeer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#sock\">sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip_fib\">ip_fib</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#arp\">arp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#tcp\">tcp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#icmp\">icmp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#xfrm\">xfrm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#netevent\">netevent</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#rtnetlink\">rtnetlink</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYSCTL\">CONFIG_SYSCTL</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sysctl\">sysctl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RT_FL_TOS\">RT_FL_TOS</a>(<a class=\"id\" href=\"#oldflp\">oldflp</a>) \\", 
"    ((<a class=\"id\" href=\"#u32\">u32</a>)(<a class=\"id\" href=\"#oldflp\">oldflp</a>-><a class=\"id\" href=\"#fl4_tos\">fl4_tos</a> &amp; (<a class=\"id\" href=\"#IPTOS_RT_MASK\">IPTOS_RT_MASK</a> | <a class=\"id\" href=\"#RTO_ONLINK\">RTO_ONLINK</a>)))", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IP_MAX_MTU\">IP_MAX_MTU</a><span class=\"ts\"/>0xFFF0", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RT_GC_TIMEOUT\">RT_GC_TIMEOUT</a> (300*<a class=\"id\" href=\"#HZ\">HZ</a>)", 
"", 
"static int <a class=\"id\" href=\"#ip_rt_max_size\">ip_rt_max_size</a>;", 
"static int <a class=\"id\" href=\"#ip_rt_gc_timeout\">ip_rt_gc_timeout</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a><span class=\"ts\"/>= <a class=\"id\" href=\"#RT_GC_TIMEOUT\">RT_GC_TIMEOUT</a>;", 
"static int <a class=\"id\" href=\"#ip_rt_gc_interval\">ip_rt_gc_interval</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a><span class=\"ts\"/>= 60 * <a class=\"id\" href=\"#HZ\">HZ</a>;", 
"static int <a class=\"id\" href=\"#ip_rt_gc_min_interval\">ip_rt_gc_min_interval</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a><span class=\"ts\"/>= <a class=\"id\" href=\"#HZ\">HZ</a> / 2;", 
"static int <a class=\"id\" href=\"#ip_rt_redirect_number\">ip_rt_redirect_number</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a><span class=\"ts\"/>= 9;", 
"static int <a class=\"id\" href=\"#ip_rt_redirect_load\">ip_rt_redirect_load</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a><span class=\"ts\"/>= <a class=\"id\" href=\"#HZ\">HZ</a> / 50;", 
"static int <a class=\"id\" href=\"#ip_rt_redirect_silence\">ip_rt_redirect_silence</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a><span class=\"ts\"/>= ((<a class=\"id\" href=\"#HZ\">HZ</a> / 50) << (9 + 1));", 
"static int <a class=\"id\" href=\"#ip_rt_error_cost\">ip_rt_error_cost</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a><span class=\"ts\"/>= <a class=\"id\" href=\"#HZ\">HZ</a>;", 
"static int <a class=\"id\" href=\"#ip_rt_error_burst\">ip_rt_error_burst</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a><span class=\"ts\"/>= 5 * <a class=\"id\" href=\"#HZ\">HZ</a>;", 
"static int <a class=\"id\" href=\"#ip_rt_gc_elasticity\">ip_rt_gc_elasticity</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a><span class=\"ts\"/>= 8;", 
"static int <a class=\"id\" href=\"#ip_rt_mtu_expires\">ip_rt_mtu_expires</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a><span class=\"ts\"/>= 10 * 60 * <a class=\"id\" href=\"#HZ\">HZ</a>;", 
"static int <a class=\"id\" href=\"#ip_rt_min_pmtu\">ip_rt_min_pmtu</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a><span class=\"ts\"/><span class=\"ts\"/>= 512 + 20 + 20;", 
"static int <a class=\"id\" href=\"#ip_rt_min_advmss\">ip_rt_min_advmss</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a><span class=\"ts\"/>= 256;", 
"static int <a class=\"id\" href=\"#rt_chain_length_max\">rt_chain_length_max</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a><span class=\"ts\"/>= 20;", 
"", 
"static struct <a class=\"id\" href=\"#delayed_work\">delayed_work</a> <a class=\"id\" href=\"#expires_work\">expires_work</a>;", 
"static unsigned long <a class=\"id\" href=\"#expires_ljiffies\">expires_ljiffies</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Interface to generic destination cache.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#ipv4_dst_check\">ipv4_dst_check</a>(struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#cookie\">cookie</a>);", 
"static void<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#ipv4_dst_destroy\">ipv4_dst_destroy</a>(struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>);", 
"static void<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#ipv4_dst_ifdown\">ipv4_dst_ifdown</a>(struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#how\">how</a>);", 
"static struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#ipv4_negative_advice\">ipv4_negative_advice</a>(struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>);", 
"static void<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#ipv4_link_failure\">ipv4_link_failure</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"static void<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#ip_rt_update_pmtu\">ip_rt_update_pmtu</a>(struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mtu\">mtu</a>);", 
"static int <a class=\"id\" href=\"#rt_garbage_collect\">rt_garbage_collect</a>(struct <a class=\"id\" href=\"#dst_ops\">dst_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>);", 
"", 
"", 
"static struct <a class=\"id\" href=\"#dst_ops\">dst_ops</a> <a class=\"id\" href=\"#ipv4_dst_ops\">ipv4_dst_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#family\">family</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#AF_INET\">AF_INET</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#protocol\">protocol</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(<a class=\"id\" href=\"#ETH_P_IP\">ETH_P_IP</a>),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#gc\">gc</a> =<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt_garbage_collect\">rt_garbage_collect</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#check\">check</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv4_dst_check\">ipv4_dst_check</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#destroy\">destroy</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv4_dst_destroy\">ipv4_dst_destroy</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ifdown\">ifdown</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv4_dst_ifdown\">ipv4_dst_ifdown</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#negative_advice\">negative_advice</a> =<span class=\"ts\"/><a class=\"id\" href=\"#ipv4_negative_advice\">ipv4_negative_advice</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#link_failure\">link_failure</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv4_link_failure\">ipv4_link_failure</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#update_pmtu\">update_pmtu</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip_rt_update_pmtu\">ip_rt_update_pmtu</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#local_out\">local_out</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__ip_local_out\">__ip_local_out</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#entries\">entries</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATOMIC_INIT\">ATOMIC_INIT</a>(0),", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ECN_OR_COST\">ECN_OR_COST</a>(<a class=\"id\" href=\"#class\">class</a>)<span class=\"ts\"/><a class=\"id\" href=\"#TC_PRIO_\">TC_PRIO_</a>##<a class=\"id\" href=\"#class\">class</a>", 
"", 
"const <a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#ip_tos2prio\">ip_tos2prio</a>[16] = {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TC_PRIO_BESTEFFORT\">TC_PRIO_BESTEFFORT</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ECN_OR_COST\">ECN_OR_COST</a>(<a class=\"id\" href=\"#FILLER\">FILLER</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TC_PRIO_BESTEFFORT\">TC_PRIO_BESTEFFORT</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ECN_OR_COST\">ECN_OR_COST</a>(<a class=\"id\" href=\"#BESTEFFORT\">BESTEFFORT</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TC_PRIO_BULK\">TC_PRIO_BULK</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ECN_OR_COST\">ECN_OR_COST</a>(<a class=\"id\" href=\"#BULK\">BULK</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TC_PRIO_BULK\">TC_PRIO_BULK</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ECN_OR_COST\">ECN_OR_COST</a>(<a class=\"id\" href=\"#BULK\">BULK</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TC_PRIO_INTERACTIVE\">TC_PRIO_INTERACTIVE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ECN_OR_COST\">ECN_OR_COST</a>(<a class=\"id\" href=\"#INTERACTIVE\">INTERACTIVE</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TC_PRIO_INTERACTIVE\">TC_PRIO_INTERACTIVE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ECN_OR_COST\">ECN_OR_COST</a>(<a class=\"id\" href=\"#INTERACTIVE\">INTERACTIVE</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TC_PRIO_INTERACTIVE_BULK\">TC_PRIO_INTERACTIVE_BULK</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ECN_OR_COST\">ECN_OR_COST</a>(<a class=\"id\" href=\"#INTERACTIVE_BULK\">INTERACTIVE_BULK</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TC_PRIO_INTERACTIVE_BULK\">TC_PRIO_INTERACTIVE_BULK</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ECN_OR_COST\">ECN_OR_COST</a>(<a class=\"id\" href=\"#INTERACTIVE_BULK\">INTERACTIVE_BULK</a>)", 
"};", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Route cache.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/* The locking scheme is rather straight forward:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * 1) Read-Copy Update protects the buckets of the central route hash.</span>", 
"<span class=\"comment\"> * 2) Only writers remove entries, and they hold the lock</span>", 
"<span class=\"comment\"> *    as they look at rtable reference counts.</span>", 
"<span class=\"comment\"> * 3) Only readers acquire references to rtable entries,</span>", 
"<span class=\"comment\"> *    they do so with atomic increments and with the</span>", 
"<span class=\"comment\"> *    lock held.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#rt_hash_bucket\">rt_hash_bucket</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtable\">rtable</a><span class=\"ts\"/>*<a class=\"id\" href=\"#chain\">chain</a>;", 
"};", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_DEBUG_SPINLOCK\">CONFIG_DEBUG_SPINLOCK</a>) || \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_PROVE_LOCKING\">CONFIG_PROVE_LOCKING</a>)", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Instead of using one spinlock for each rt_hash_bucket, we use a table of spinlocks</span>", 
"<span class=\"comment\"> * The size of this table is a power of two and depends on the number of CPUS.</span>", 
"<span class=\"comment\"> * (on lockdep we have a quite big spinlock_t, so keep the size down there)</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_LOCKDEP\">CONFIG_LOCKDEP</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RT_HASH_LOCK_SZ\">RT_HASH_LOCK_SZ</a><span class=\"ts\"/>256", 
"#else", 
"# if <a class=\"id\" href=\"#NR_CPUS\">NR_CPUS</a> >= 32", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RT_HASH_LOCK_SZ\">RT_HASH_LOCK_SZ</a><span class=\"ts\"/>4096", 
"# <a class=\"id\" href=\"#elif\">elif</a> <a class=\"id\" href=\"#NR_CPUS\">NR_CPUS</a> >= 16", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RT_HASH_LOCK_SZ\">RT_HASH_LOCK_SZ</a><span class=\"ts\"/>2048", 
"# <a class=\"id\" href=\"#elif\">elif</a> <a class=\"id\" href=\"#NR_CPUS\">NR_CPUS</a> >= 8", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RT_HASH_LOCK_SZ\">RT_HASH_LOCK_SZ</a><span class=\"ts\"/>1024", 
"# <a class=\"id\" href=\"#elif\">elif</a> <a class=\"id\" href=\"#NR_CPUS\">NR_CPUS</a> >= 4", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RT_HASH_LOCK_SZ\">RT_HASH_LOCK_SZ</a><span class=\"ts\"/>512", 
"# else", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RT_HASH_LOCK_SZ\">RT_HASH_LOCK_SZ</a><span class=\"ts\"/>256", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static <a class=\"id\" href=\"#spinlock_t\">spinlock_t</a><span class=\"ts\"/>*<a class=\"id\" href=\"#rt_hash_locks\">rt_hash_locks</a>;", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#rt_hash_lock_addr\">rt_hash_lock_addr</a>(<a class=\"id\" href=\"#slot\">slot</a>) &amp;<a class=\"id\" href=\"#rt_hash_locks\">rt_hash_locks</a>[(<a class=\"id\" href=\"#slot\">slot</a>) &amp; (<a class=\"id\" href=\"#RT_HASH_LOCK_SZ\">RT_HASH_LOCK_SZ</a> - 1)]", 
"", 
"static <a class=\"id\" href=\"#__init\">__init</a> void <a class=\"id\" href=\"#rt_hash_lock_init\">rt_hash_lock_init</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rt_hash_locks\">rt_hash_locks</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(<a class=\"id\" href=\"#spinlock_t\">spinlock_t</a>) * <a class=\"id\" href=\"#RT_HASH_LOCK_SZ\">RT_HASH_LOCK_SZ</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rt_hash_locks\">rt_hash_locks</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"IP: failed to allocate rt_hash_locks\\n\");", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#RT_HASH_LOCK_SZ\">RT_HASH_LOCK_SZ</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#rt_hash_locks\">rt_hash_locks</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"}", 
"#else", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#rt_hash_lock_addr\">rt_hash_lock_addr</a>(<a class=\"id\" href=\"#slot\">slot</a>) <a class=\"id\" href=\"#NULL\">NULL</a>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#rt_hash_lock_init\">rt_hash_lock_init</a>(void)", 
"{", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static struct <a class=\"id\" href=\"#rt_hash_bucket\">rt_hash_bucket</a> <span class=\"ts\"/>*<a class=\"id\" href=\"#rt_hash_table\">rt_hash_table</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a>;", 
"static unsigned<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt_hash_mask\">rt_hash_mask</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a>;", 
"static unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt_hash_log\">rt_hash_log</a>  <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a>;", 
"", 
"static <a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(struct <a class=\"id\" href=\"#rt_cache_stat\">rt_cache_stat</a>, <a class=\"id\" href=\"#rt_cache_stat\">rt_cache_stat</a>);", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RT_CACHE_STAT_INC\">RT_CACHE_STAT_INC</a>(<a class=\"id\" href=\"#field\">field</a>) <a class=\"id\" href=\"#__this_cpu_inc\">__this_cpu_inc</a>(<a class=\"id\" href=\"#rt_cache_stat\">rt_cache_stat</a>.<a class=\"id\" href=\"#field\">field</a>)", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#rt_hash\">rt_hash</a>(<a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#saddr\">saddr</a>, int <a class=\"id\" href=\"#idx\">idx</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   int <a class=\"id\" href=\"#genid\">genid</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#jhash_3words\">jhash_3words</a>((<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#daddr\">daddr</a>, (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#saddr\">saddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#idx\">idx</a>, <a class=\"id\" href=\"#genid\">genid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>&amp; <a class=\"id\" href=\"#rt_hash_mask\">rt_hash_mask</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#rt_genid\">rt_genid</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv4\">ipv4</a>.<a class=\"id\" href=\"#rt_genid\">rt_genid</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROC_FS\">CONFIG_PROC_FS</a>", 
"struct <a class=\"id\" href=\"#rt_cache_iter_state\">rt_cache_iter_state</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#seq_net_private\">seq_net_private</a> <a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#bucket\">bucket</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#genid\">genid</a>;", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#rtable\">rtable</a> *<a class=\"id\" href=\"#rt_cache_get_first\">rt_cache_get_first</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rt_cache_iter_state\">rt_cache_iter_state</a> *<a class=\"id\" href=\"#st\">st</a> = <a class=\"id\" href=\"#seq\">seq</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtable\">rtable</a> *<a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#bucket\">bucket</a> = <a class=\"id\" href=\"#rt_hash_mask\">rt_hash_mask</a>; <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#bucket\">bucket</a> >= 0; --<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#bucket\">bucket</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#rt_hash_table\">rt_hash_table</a>[<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#bucket\">bucket</a>].<a class=\"id\" href=\"#chain\">chain</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock_bh\">rcu_read_lock_bh</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#rcu_dereference_bh\">rcu_dereference_bh</a>(<a class=\"id\" href=\"#rt_hash_table\">rt_hash_table</a>[<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#bucket\">bucket</a>].<a class=\"id\" href=\"#chain\">chain</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#r\">r</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#dev\">dev</a>) == <a class=\"id\" href=\"#seq_file_net\">seq_file_net</a>(<a class=\"id\" href=\"#seq\">seq</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#rt_genid\">rt_genid</a> == <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#genid\">genid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#rcu_dereference_bh\">rcu_dereference_bh</a>(<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#rt_next\">rt_next</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock_bh\">rcu_read_unlock_bh</a>();", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#rtable\">rtable</a> *<a class=\"id\" href=\"#__rt_cache_get_next\">__rt_cache_get_next</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#rtable\">rtable</a> *<a class=\"id\" href=\"#r\">r</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rt_cache_iter_state\">rt_cache_iter_state</a> *<a class=\"id\" href=\"#st\">st</a> = <a class=\"id\" href=\"#seq\">seq</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#rt_next\">rt_next</a>;", 
"<span class=\"ts\"/>while (!<a class=\"id\" href=\"#r\">r</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock_bh\">rcu_read_unlock_bh</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (--<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#bucket\">bucket</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} while (!<a class=\"id\" href=\"#rt_hash_table\">rt_hash_table</a>[<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#bucket\">bucket</a>].<a class=\"id\" href=\"#chain\">chain</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock_bh\">rcu_read_lock_bh</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#rt_hash_table\">rt_hash_table</a>[<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#bucket\">bucket</a>].<a class=\"id\" href=\"#chain\">chain</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rcu_dereference_bh\">rcu_dereference_bh</a>(<a class=\"id\" href=\"#r\">r</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#rtable\">rtable</a> *<a class=\"id\" href=\"#rt_cache_get_next\">rt_cache_get_next</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#rtable\">rtable</a> *<a class=\"id\" href=\"#r\">r</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rt_cache_iter_state\">rt_cache_iter_state</a> *<a class=\"id\" href=\"#st\">st</a> = <a class=\"id\" href=\"#seq\">seq</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#__rt_cache_get_next\">__rt_cache_get_next</a>(<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#r\">r</a>)) != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#dev\">dev</a>) != <a class=\"id\" href=\"#seq_file_net\">seq_file_net</a>(<a class=\"id\" href=\"#seq\">seq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#rt_genid\">rt_genid</a> == <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#genid\">genid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#rtable\">rtable</a> *<a class=\"id\" href=\"#rt_cache_get_idx\">rt_cache_get_idx</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtable\">rtable</a> *<a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#rt_cache_get_first\">rt_cache_get_first</a>(<a class=\"id\" href=\"#seq\">seq</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#pos\">pos</a> && (<a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#rt_cache_get_next\">rt_cache_get_next</a>(<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#r\">r</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>--<a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pos\">pos</a> ? <a class=\"id\" href=\"#NULL\">NULL</a> : <a class=\"id\" href=\"#r\">r</a>;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#rt_cache_seq_start\">rt_cache_seq_start</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rt_cache_iter_state\">rt_cache_iter_state</a> *<a class=\"id\" href=\"#st\">st</a> = <a class=\"id\" href=\"#seq\">seq</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#pos\">pos</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rt_cache_get_idx\">rt_cache_get_idx</a>(<a class=\"id\" href=\"#seq\">seq</a>, *<a class=\"id\" href=\"#pos\">pos</a> - 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#genid\">genid</a> = <a class=\"id\" href=\"#rt_genid\">rt_genid</a>(<a class=\"id\" href=\"#seq_file_net\">seq_file_net</a>(<a class=\"id\" href=\"#seq\">seq</a>));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#SEQ_START_TOKEN\">SEQ_START_TOKEN</a>;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#rt_cache_seq_next\">rt_cache_seq_next</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtable\">rtable</a> *<a class=\"id\" href=\"#r\">r</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#v\">v</a> == <a class=\"id\" href=\"#SEQ_START_TOKEN\">SEQ_START_TOKEN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#rt_cache_get_first\">rt_cache_get_first</a>(<a class=\"id\" href=\"#seq\">seq</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#rt_cache_get_next\">rt_cache_get_next</a>(<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#v\">v</a>);", 
"<span class=\"ts\"/>++*<a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#rt_cache_seq_stop\">rt_cache_seq_stop</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#v\">v</a> && <a class=\"id\" href=\"#v\">v</a> != <a class=\"id\" href=\"#SEQ_START_TOKEN\">SEQ_START_TOKEN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock_bh\">rcu_read_unlock_bh</a>();", 
"}", 
"", 
"static int <a class=\"id\" href=\"#rt_cache_seq_show\">rt_cache_seq_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#v\">v</a> == <a class=\"id\" href=\"#SEQ_START_TOKEN\">SEQ_START_TOKEN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"%-127s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"Iface\\tDestination\\tGateway \\tFlags\\t\\tRefCnt\\tUse\\t\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"Metric\\tSource\\t\\tMTU\\tWindow\\tIRTT\\tTOS\\tHHRef\\t\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"HHUptod\\tSpecDst\");", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#rtable\">rtable</a> *<a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"%s\\t%08X\\t%08X\\t%8X\\t%d\\t%u\\t%d\\t\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      \"%08X\\t%d\\t%u\\t%u\\t%02X\\t%d\\t%1d\\t%08X%n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#dev\">dev</a> ? <a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a> : \"*\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#rt_dst\">rt_dst</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#rt_gateway\">rt_gateway</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#rt_flags\">rt_flags</a>, <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#__refcnt\">__refcnt</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#__use\">__use</a>, 0, (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#rt_src\">rt_src</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#dst_metric\">dst_metric</a>(&amp;<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#RTAX_ADVMSS\">RTAX_ADVMSS</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     (int)<a class=\"id\" href=\"#dst_metric\">dst_metric</a>(&amp;<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#RTAX_ADVMSS\">RTAX_ADVMSS</a>) + 40 : 0),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_metric\">dst_metric</a>(&amp;<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#RTAX_WINDOW\">RTAX_WINDOW</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(int)((<a class=\"id\" href=\"#dst_metric\">dst_metric</a>(&amp;<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#RTAX_RTT\">RTAX_RTT</a>) >> 3) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#dst_metric\">dst_metric</a>(&amp;<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#RTAX_RTTVAR\">RTAX_RTTVAR</a>)),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#fl\">fl</a>.<a class=\"id\" href=\"#fl4_tos\">fl4_tos</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#hh\">hh</a> ? <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#hh\">hh</a>-><a class=\"id\" href=\"#hh_refcnt\">hh_refcnt</a>) : -1,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#hh\">hh</a> ? (<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#hh\">hh</a>-><a class=\"id\" href=\"#hh_output\">hh_output</a> ==", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#dev_queue_xmit\">dev_queue_xmit</a>) : 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#rt_spec_dst\">rt_spec_dst</a>, &amp;<a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"%*s\\n\", 127 - <a class=\"id\" href=\"#len\">len</a>, \"\");", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> <a class=\"id\" href=\"#rt_cache_seq_ops\">rt_cache_seq_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a>  = <a class=\"id\" href=\"#rt_cache_seq_start\">rt_cache_seq_start</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#next\">next</a>   = <a class=\"id\" href=\"#rt_cache_seq_next\">rt_cache_seq_next</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a>   = <a class=\"id\" href=\"#rt_cache_seq_stop\">rt_cache_seq_stop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a>   = <a class=\"id\" href=\"#rt_cache_seq_show\">rt_cache_seq_show</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#rt_cache_seq_open\">rt_cache_seq_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#seq_open_net\">seq_open_net</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#rt_cache_seq_ops\">rt_cache_seq_ops</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sizeof(struct <a class=\"id\" href=\"#rt_cache_iter_state\">rt_cache_iter_state</a>));", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#rt_cache_seq_fops\">rt_cache_seq_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/> = <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/> = <a class=\"id\" href=\"#rt_cache_seq_open\">rt_cache_seq_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/> = <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/> = <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a> = <a class=\"id\" href=\"#seq_release_net\">seq_release_net</a>,", 
"};", 
"", 
"", 
"static void *<a class=\"id\" href=\"#rt_cpu_seq_start\">rt_cpu_seq_start</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#pos\">pos</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#SEQ_START_TOKEN\">SEQ_START_TOKEN</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#cpu\">cpu</a> = *<a class=\"id\" href=\"#pos\">pos</a>-1; <a class=\"id\" href=\"#cpu\">cpu</a> &lt; <a class=\"id\" href=\"#nr_cpu_ids\">nr_cpu_ids</a>; ++<a class=\"id\" href=\"#cpu\">cpu</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#cpu_possible\">cpu_possible</a>(<a class=\"id\" href=\"#cpu\">cpu</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#cpu\">cpu</a>+1;", 
"<span class=\"ts\"/><span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#rt_cache_stat\">rt_cache_stat</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#rt_cpu_seq_next\">rt_cpu_seq_next</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#cpu\">cpu</a> = *<a class=\"id\" href=\"#pos\">pos</a>; <a class=\"id\" href=\"#cpu\">cpu</a> &lt; <a class=\"id\" href=\"#nr_cpu_ids\">nr_cpu_ids</a>; ++<a class=\"id\" href=\"#cpu\">cpu</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#cpu_possible\">cpu_possible</a>(<a class=\"id\" href=\"#cpu\">cpu</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#cpu\">cpu</a>+1;", 
"<span class=\"ts\"/><span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#rt_cache_stat\">rt_cache_stat</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"}", 
"", 
"static void <a class=\"id\" href=\"#rt_cpu_seq_stop\">rt_cpu_seq_stop</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"", 
"}", 
"", 
"static int <a class=\"id\" href=\"#rt_cpu_seq_show\">rt_cpu_seq_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rt_cache_stat\">rt_cache_stat</a> *<a class=\"id\" href=\"#st\">st</a> = <a class=\"id\" href=\"#v\">v</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#v\">v</a> == <a class=\"id\" href=\"#SEQ_START_TOKEN\">SEQ_START_TOKEN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"entries  in_hit in_slow_tot in_slow_mc in_no_route in_brd in_martian_dst in_martian_src  out_hit out_slow_tot out_slow_mc  gc_total gc_ignored gc_goal_miss gc_dst_overflow in_hlist_search out_hlist_search\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>,\"%08x  %08x %08x %08x %08x %08x %08x %08x \"", 
"<span class=\"ts\"/><span class=\"ts\"/>   \" %08x %08x %08x %08x %08x %08x %08x %08x %08x \\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#ipv4_dst_ops\">ipv4_dst_ops</a>.<a class=\"id\" href=\"#entries\">entries</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#in_hit\">in_hit</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#in_slow_tot\">in_slow_tot</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#in_slow_mc\">in_slow_mc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#in_no_route\">in_no_route</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#in_brd\">in_brd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#in_martian_dst\">in_martian_dst</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#in_martian_src\">in_martian_src</a>,", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#out_hit\">out_hit</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#out_slow_tot\">out_slow_tot</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#out_slow_mc\">out_slow_mc</a>,", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#gc_total\">gc_total</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#gc_ignored\">gc_ignored</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#gc_goal_miss\">gc_goal_miss</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#gc_dst_overflow\">gc_dst_overflow</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#in_hlist_search\">in_hlist_search</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#out_hlist_search\">out_hlist_search</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> <a class=\"id\" href=\"#rt_cpu_seq_ops\">rt_cpu_seq_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a>  = <a class=\"id\" href=\"#rt_cpu_seq_start\">rt_cpu_seq_start</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#next\">next</a>   = <a class=\"id\" href=\"#rt_cpu_seq_next\">rt_cpu_seq_next</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a>   = <a class=\"id\" href=\"#rt_cpu_seq_stop\">rt_cpu_seq_stop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a>   = <a class=\"id\" href=\"#rt_cpu_seq_show\">rt_cpu_seq_show</a>,", 
"};", 
"", 
"", 
"static int <a class=\"id\" href=\"#rt_cpu_seq_open\">rt_cpu_seq_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#seq_open\">seq_open</a>(<a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#rt_cpu_seq_ops\">rt_cpu_seq_ops</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#rt_cpu_seq_fops\">rt_cpu_seq_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/> = <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/> = <a class=\"id\" href=\"#rt_cpu_seq_open\">rt_cpu_seq_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/> = <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/> = <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a> = <a class=\"id\" href=\"#seq_release\">seq_release</a>,", 
"};", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET_CLS_ROUTE\">CONFIG_NET_CLS_ROUTE</a>", 
"static int <a class=\"id\" href=\"#rt_acct_proc_show\">rt_acct_proc_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip_rt_acct\">ip_rt_acct</a> *<a class=\"id\" href=\"#dst\">dst</a>, *<a class=\"id\" href=\"#src\">src</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#j\">j</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#kcalloc\">kcalloc</a>(256, sizeof(struct <a class=\"id\" href=\"#ip_rt_acct\">ip_rt_acct</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dst\">dst</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_possible_cpu\">for_each_possible_cpu</a>(<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#src\">src</a> = (struct <a class=\"id\" href=\"#ip_rt_acct\">ip_rt_acct</a> *)<a class=\"id\" href=\"#per_cpu_ptr\">per_cpu_ptr</a>(<a class=\"id\" href=\"#ip_rt_acct\">ip_rt_acct</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#j\">j</a> &lt; 256; <a class=\"id\" href=\"#j\">j</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>[<a class=\"id\" href=\"#j\">j</a>].<a class=\"id\" href=\"#o_bytes\">o_bytes</a>   += <a class=\"id\" href=\"#src\">src</a>[<a class=\"id\" href=\"#j\">j</a>].<a class=\"id\" href=\"#o_bytes\">o_bytes</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>[<a class=\"id\" href=\"#j\">j</a>].<a class=\"id\" href=\"#o_packets\">o_packets</a> += <a class=\"id\" href=\"#src\">src</a>[<a class=\"id\" href=\"#j\">j</a>].<a class=\"id\" href=\"#o_packets\">o_packets</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>[<a class=\"id\" href=\"#j\">j</a>].<a class=\"id\" href=\"#i_bytes\">i_bytes</a>   += <a class=\"id\" href=\"#src\">src</a>[<a class=\"id\" href=\"#j\">j</a>].<a class=\"id\" href=\"#i_bytes\">i_bytes</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>[<a class=\"id\" href=\"#j\">j</a>].<a class=\"id\" href=\"#i_packets\">i_packets</a> += <a class=\"id\" href=\"#src\">src</a>[<a class=\"id\" href=\"#j\">j</a>].<a class=\"id\" href=\"#i_packets\">i_packets</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_write\">seq_write</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#dst\">dst</a>, 256 * sizeof(struct <a class=\"id\" href=\"#ip_rt_acct\">ip_rt_acct</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#rt_acct_proc_open\">rt_acct_proc_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#single_open\">single_open</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#rt_acct_proc_show\">rt_acct_proc_show</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#rt_acct_proc_fops\">rt_acct_proc_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#rt_acct_proc_open\">rt_acct_proc_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#single_release\">single_release</a>,", 
"};", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static int <a class=\"id\" href=\"#__net_init\">__net_init</a> <a class=\"id\" href=\"#ip_rt_do_proc_init\">ip_rt_do_proc_init</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proc_dir_entry\">proc_dir_entry</a> *<a class=\"id\" href=\"#pde\">pde</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pde\">pde</a> = <a class=\"id\" href=\"#proc_net_fops_create\">proc_net_fops_create</a>(<a class=\"id\" href=\"#net\">net</a>, \"rt_cache\", <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#rt_cache_seq_fops\">rt_cache_seq_fops</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pde\">pde</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err1\">err1</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pde\">pde</a> = <a class=\"id\" href=\"#proc_create\">proc_create</a>(\"rt_cache\", <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#proc_net_stat\">proc_net_stat</a>, &amp;<a class=\"id\" href=\"#rt_cpu_seq_fops\">rt_cpu_seq_fops</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pde\">pde</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err2\">err2</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET_CLS_ROUTE\">CONFIG_NET_CLS_ROUTE</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pde\">pde</a> = <a class=\"id\" href=\"#proc_create\">proc_create</a>(\"rt_acct\", 0, <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#proc_net\">proc_net</a>, &amp;<a class=\"id\" href=\"#rt_acct_proc_fops\">rt_acct_proc_fops</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pde\">pde</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err3\">err3</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return 0;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET_CLS_ROUTE\">CONFIG_NET_CLS_ROUTE</a>", 
"<a class=\"id\" href=\"#err3\">err3</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#remove_proc_entry\">remove_proc_entry</a>(\"rt_cache\", <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#proc_net_stat\">proc_net_stat</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<a class=\"id\" href=\"#err2\">err2</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#remove_proc_entry\">remove_proc_entry</a>(\"rt_cache\", <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#proc_net\">proc_net</a>);", 
"<a class=\"id\" href=\"#err1\">err1</a>:", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__net_exit\">__net_exit</a> <a class=\"id\" href=\"#ip_rt_do_proc_exit\">ip_rt_do_proc_exit</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#remove_proc_entry\">remove_proc_entry</a>(\"rt_cache\", <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#proc_net_stat\">proc_net_stat</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#remove_proc_entry\">remove_proc_entry</a>(\"rt_cache\", <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#proc_net\">proc_net</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET_CLS_ROUTE\">CONFIG_NET_CLS_ROUTE</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#remove_proc_entry\">remove_proc_entry</a>(\"rt_acct\", <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#proc_net\">proc_net</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#pernet_operations\">pernet_operations</a> <a class=\"id\" href=\"#ip_rt_proc_ops\">ip_rt_proc_ops</a> <a class=\"id\" href=\"#__net_initdata\">__net_initdata</a> =  {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#init\">init</a> = <a class=\"id\" href=\"#ip_rt_do_proc_init\">ip_rt_do_proc_init</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#exit\">exit</a> = <a class=\"id\" href=\"#ip_rt_do_proc_exit\">ip_rt_do_proc_exit</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#ip_rt_proc_init\">ip_rt_proc_init</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#register_pernet_subsys\">register_pernet_subsys</a>(&amp;<a class=\"id\" href=\"#ip_rt_proc_ops\">ip_rt_proc_ops</a>);", 
"}", 
"", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ip_rt_proc_init\">ip_rt_proc_init</a>(void)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_PROC_FS */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#rt_free\">rt_free</a>(struct <a class=\"id\" href=\"#rtable\">rtable</a> *<a class=\"id\" href=\"#rt\">rt</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#call_rcu_bh\">call_rcu_bh</a>(&amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#rcu_head\">rcu_head</a>, <a class=\"id\" href=\"#dst_rcu_free\">dst_rcu_free</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#rt_drop\">rt_drop</a>(struct <a class=\"id\" href=\"#rtable\">rtable</a> *<a class=\"id\" href=\"#rt\">rt</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip_rt_put\">ip_rt_put</a>(<a class=\"id\" href=\"#rt\">rt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#call_rcu_bh\">call_rcu_bh</a>(&amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#rcu_head\">rcu_head</a>, <a class=\"id\" href=\"#dst_rcu_free\">dst_rcu_free</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#rt_fast_clean\">rt_fast_clean</a>(struct <a class=\"id\" href=\"#rtable\">rtable</a> *<a class=\"id\" href=\"#rth\">rth</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Kill broadcast/multicast entries very aggresively, if they</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   collide in hash table with more useful entries */</span>", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#rth\">rth</a>-><a class=\"id\" href=\"#rt_flags\">rt_flags</a> &amp; (<a class=\"id\" href=\"#RTCF_BROADCAST\">RTCF_BROADCAST</a> | <a class=\"id\" href=\"#RTCF_MULTICAST\">RTCF_MULTICAST</a>)) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rth\">rth</a>-><a class=\"id\" href=\"#fl\">fl</a>.<a class=\"id\" href=\"#iif\">iif</a> && <a class=\"id\" href=\"#rth\">rth</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#rt_next\">rt_next</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#rt_valuable\">rt_valuable</a>(struct <a class=\"id\" href=\"#rtable\">rtable</a> *<a class=\"id\" href=\"#rth\">rth</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#rth\">rth</a>-><a class=\"id\" href=\"#rt_flags\">rt_flags</a> &amp; (<a class=\"id\" href=\"#RTCF_REDIRECTED\">RTCF_REDIRECTED</a> | <a class=\"id\" href=\"#RTCF_NOTIFY\">RTCF_NOTIFY</a>)) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rth\">rth</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#expires\">expires</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#rt_may_expire\">rt_may_expire</a>(struct <a class=\"id\" href=\"#rtable\">rtable</a> *<a class=\"id\" href=\"#rth\">rth</a>, unsigned long <a class=\"id\" href=\"#tmo1\">tmo1</a>, unsigned long <a class=\"id\" href=\"#tmo2\">tmo2</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#age\">age</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#rth\">rth</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#__refcnt\">__refcnt</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rth\">rth</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#expires\">expires</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#time_after_eq\">time_after_eq</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a>, <a class=\"id\" href=\"#rth\">rth</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#expires\">expires</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#age\">age</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a> - <a class=\"id\" href=\"#rth\">rth</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#lastuse\">lastuse</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#age\">age</a> <= <a class=\"id\" href=\"#tmo1\">tmo1</a> && !<a class=\"id\" href=\"#rt_fast_clean\">rt_fast_clean</a>(<a class=\"id\" href=\"#rth\">rth</a>)) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#age\">age</a> <= <a class=\"id\" href=\"#tmo2\">tmo2</a> && <a class=\"id\" href=\"#rt_valuable\">rt_valuable</a>(<a class=\"id\" href=\"#rth\">rth</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 1;", 
"<a class=\"id\" href=\"#out\">out</a>:<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Bits of score are:</span>", 
"<span class=\"comment\"> * 31: very valuable</span>", 
"<span class=\"comment\"> * 30: not quite useless</span>", 
"<span class=\"comment\"> * 29..0: usage counter</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#rt_score\">rt_score</a>(struct <a class=\"id\" href=\"#rtable\">rtable</a> *<a class=\"id\" href=\"#rt\">rt</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#score\">score</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a> - <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#lastuse\">lastuse</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#score\">score</a> = ~<a class=\"id\" href=\"#score\">score</a> &amp; ~(3<<30);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rt_valuable\">rt_valuable</a>(<a class=\"id\" href=\"#rt\">rt</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#score\">score</a> |= (1<<31);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#fl\">fl</a>.<a class=\"id\" href=\"#iif\">iif</a> ||", 
"<span class=\"ts\"/>    !(<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt_flags\">rt_flags</a> &amp; (<a class=\"id\" href=\"#RTCF_BROADCAST\">RTCF_BROADCAST</a>|<a class=\"id\" href=\"#RTCF_MULTICAST\">RTCF_MULTICAST</a>|<a class=\"id\" href=\"#RTCF_LOCAL\">RTCF_LOCAL</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#score\">score</a> |= (1<<30);", 
"", 
];
xr_frag_insert('l/5b/c31934695d6492762c7a469e0f9fa2cb1c12c3.xr', __xr_tmp);
