var __xr_tmp = [
"<span class=\"comment\">/* net/atm/atmarp.h - RFC1577 ATM ARP */</span>", 
" ", 
"<span class=\"comment\">/* Written 1995-2000 by Werner Almesberger, EPFL LRC/ICA */</span>", 
" ", 
" ", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_ATMCLIP_H\">_ATMCLIP_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_ATMCLIP_H\">_ATMCLIP_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netdevice\">netdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#atm\">atm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#atmdev\">atmdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#atmarp\">atmarp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#neighbour\">neighbour</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CLIP_VCC\">CLIP_VCC</a>(<a class=\"id\" href=\"#vcc\">vcc</a>) ((struct <a class=\"id\" href=\"#clip_vcc\">clip_vcc</a> *) ((<a class=\"id\" href=\"#vcc\">vcc</a>)-><a class=\"id\" href=\"#user_back\">user_back</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NEIGH2ENTRY\">NEIGH2ENTRY</a>(<a class=\"id\" href=\"#neigh\">neigh</a>) ((struct <a class=\"id\" href=\"#atmarp_entry\">atmarp_entry</a> *) (<a class=\"id\" href=\"#neigh\">neigh</a>)-><a class=\"id\" href=\"#primary_key\">primary_key</a>)", 
"", 
"struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a>;", 
"", 
"struct <a class=\"id\" href=\"#clip_vcc\">clip_vcc</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#atm_vcc\">atm_vcc</a><span class=\"ts\"/>*<a class=\"id\" href=\"#vcc\">vcc</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* VCC descriptor */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#atmarp_entry\">atmarp_entry</a> *<a class=\"id\" href=\"#entry\">entry</a>;<span class=\"ts\"/><span class=\"comment\">/* ATMARP table entry, NULL if IP addr.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   isn't known yet */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xoff\">xoff</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 1 if send buffer is full */</span>", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><a class=\"id\" href=\"#encap\">encap</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 0: NULL, 1: LLC/SNAP */</span>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#last_use\">last_use</a>;<span class=\"ts\"/><span class=\"comment\">/* last send or receive operation */</span>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#idle_timeout\">idle_timeout</a>;<span class=\"ts\"/><span class=\"comment\">/* keep open idle for so many jiffies*/</span>", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#old_push\">old_push</a>)(struct <a class=\"id\" href=\"#atm_vcc\">atm_vcc</a> *<a class=\"id\" href=\"#vcc\">vcc</a>,struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* keep old push fn for chaining */</span>", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#old_pop\">old_pop</a>)(struct <a class=\"id\" href=\"#atm_vcc\">atm_vcc</a> *<a class=\"id\" href=\"#vcc\">vcc</a>,struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* keep old pop fn for chaining */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#clip_vcc\">clip_vcc</a><span class=\"ts\"/>*<a class=\"id\" href=\"#next\">next</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* next VCC */</span>", 
"};", 
"", 
"", 
"struct <a class=\"id\" href=\"#atmarp_entry\">atmarp_entry</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip\">ip</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* IP address */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#clip_vcc\">clip_vcc</a><span class=\"ts\"/>*<a class=\"id\" href=\"#vccs\">vccs</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* active VCCs; NULL if resolution is</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   pending */</span>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#expires\">expires</a>;<span class=\"ts\"/><span class=\"comment\">/* entry expiration time */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#neigh\">neigh</a>;<span class=\"ts\"/><span class=\"comment\">/* neighbour back-pointer */</span>", 
"};", 
"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PRIV\">PRIV</a>(<a class=\"id\" href=\"#dev\">dev</a>) ((struct <a class=\"id\" href=\"#clip_priv\">clip_priv</a> *) <a class=\"id\" href=\"#netdev_priv\">netdev_priv</a>(<a class=\"id\" href=\"#dev\">dev</a>))", 
"", 
"", 
"struct <a class=\"id\" href=\"#clip_priv\">clip_priv</a> {", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#number\">number</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* for convenience ... */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> <a class=\"id\" href=\"#xoff_lock\">xoff_lock</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ensures that pop is atomic (SMP) */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#next\">next</a>;<span class=\"ts\"/><span class=\"comment\">/* next CLIP interface */</span>", 
"};", 
"", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"extern struct <a class=\"id\" href=\"#neigh_table\">neigh_table</a> *<a class=\"id\" href=\"#clip_tbl_hook\">clip_tbl_hook</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/5c/0104b7eeb6d2e0a96720b9d08674f37b0e4c60.xr', __xr_tmp);
