var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * descriptor table internals; you almost certainly want file.h instead.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__LINUX_FDTABLE_H\">__LINUX_FDTABLE_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__LINUX_FDTABLE_H\">__LINUX_FDTABLE_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#posix_types\">posix_types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#compiler\">compiler</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rcupdate\">rcupdate</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#atomic\">atomic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The default fd array needs to be at least BITS_PER_LONG,</span>", 
"<span class=\"comment\"> * as this is the granularity returned by copy_fdset().</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NR_OPEN_DEFAULT\">NR_OPEN_DEFAULT</a> <a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The embedded_fd_set is a small fd_set,</span>", 
"<span class=\"comment\"> * suitable for most tasks (which open &lt;= BITS_PER_LONG files)</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#embedded_fd_set\">embedded_fd_set</a> {", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#fds_bits\">fds_bits</a>[1];", 
"};", 
"", 
"struct <a class=\"id\" href=\"#fdtable\">fdtable</a> {", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#max_fds\">max_fds</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> ** <a class=\"id\" href=\"#fd\">fd</a>;      <span class=\"comment\">/* current fd array */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fd_set\">fd_set</a> *<a class=\"id\" href=\"#close_on_exec\">close_on_exec</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fd_set\">fd_set</a> *<a class=\"id\" href=\"#open_fds\">open_fds</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rcu_head\">rcu_head</a> <a class=\"id\" href=\"#rcu\">rcu</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fdtable\">fdtable</a> *<a class=\"id\" href=\"#next\">next</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Open file table structure</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#files_struct\">files_struct</a> {", 
"  <span class=\"comment\">/*</span>", 
"<span class=\"comment\">   * read mostly part</span>", 
"<span class=\"comment\">   */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fdtable\">fdtable</a> *<a class=\"id\" href=\"#fdt\">fdt</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fdtable\">fdtable</a> <a class=\"id\" href=\"#fdtab\">fdtab</a>;", 
"  <span class=\"comment\">/*</span>", 
"<span class=\"comment\">   * written part on a separate cache line in SMP</span>", 
"<span class=\"comment\">   */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> <a class=\"id\" href=\"#file_lock\">file_lock</a> <a class=\"id\" href=\"#____cacheline_aligned_in_smp\">____cacheline_aligned_in_smp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#next_fd\">next_fd</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#embedded_fd_set\">embedded_fd_set</a> <a class=\"id\" href=\"#close_on_exec_init\">close_on_exec_init</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#embedded_fd_set\">embedded_fd_set</a> <a class=\"id\" href=\"#open_fds_init\">open_fds_init</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> * <a class=\"id\" href=\"#fd_array\">fd_array</a>[<a class=\"id\" href=\"#NR_OPEN_DEFAULT\">NR_OPEN_DEFAULT</a>];", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#rcu_dereference_check_fdtable\">rcu_dereference_check_fdtable</a>(<a class=\"id\" href=\"#files\">files</a>, <a class=\"id\" href=\"#fdtfd\">fdtfd</a>) \\", 
"<span class=\"ts\"/>(<a class=\"id\" href=\"#rcu_dereference_check\">rcu_dereference_check</a>((<a class=\"id\" href=\"#fdtfd\">fdtfd</a>), \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#rcu_read_lock_held\">rcu_read_lock_held</a>() || \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#lockdep_is_held\">lockdep_is_held</a>(&amp;(<a class=\"id\" href=\"#files\">files</a>)-><a class=\"id\" href=\"#file_lock\">file_lock</a>) || \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;(<a class=\"id\" href=\"#files\">files</a>)-><a class=\"id\" href=\"#count\">count</a>) == 1 || \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#rcu_my_thread_group_empty\">rcu_my_thread_group_empty</a>()))", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#files_fdtable\">files_fdtable</a>(<a class=\"id\" href=\"#files\">files</a>) \\", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#rcu_dereference_check_fdtable\">rcu_dereference_check_fdtable</a>((<a class=\"id\" href=\"#files\">files</a>), (<a class=\"id\" href=\"#files\">files</a>)-><a class=\"id\" href=\"#fdt\">fdt</a>))", 
"", 
"struct <a class=\"id\" href=\"#file_operations\">file_operations</a>;", 
"struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a>;", 
"struct <a class=\"id\" href=\"#dentry\">dentry</a>;", 
"", 
"extern int <a class=\"id\" href=\"#expand_files\">expand_files</a>(struct <a class=\"id\" href=\"#files_struct\">files_struct</a> *, int <a class=\"id\" href=\"#nr\">nr</a>);", 
"extern void <a class=\"id\" href=\"#free_fdtable_rcu\">free_fdtable_rcu</a>(struct <a class=\"id\" href=\"#rcu_head\">rcu_head</a> *<a class=\"id\" href=\"#rcu\">rcu</a>);", 
"extern void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#files_defer_init\">files_defer_init</a>(void);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#free_fdtable\">free_fdtable</a>(struct <a class=\"id\" href=\"#fdtable\">fdtable</a> *<a class=\"id\" href=\"#fdt\">fdt</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#call_rcu\">call_rcu</a>(&amp;<a class=\"id\" href=\"#fdt\">fdt</a>-><a class=\"id\" href=\"#rcu\">rcu</a>, <a class=\"id\" href=\"#free_fdtable_rcu\">free_fdtable_rcu</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#file\">file</a> * <a class=\"id\" href=\"#fcheck_files\">fcheck_files</a>(struct <a class=\"id\" href=\"#files_struct\">files_struct</a> *<a class=\"id\" href=\"#files\">files</a>, unsigned int <a class=\"id\" href=\"#fd\">fd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> * <a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fdtable\">fdtable</a> *<a class=\"id\" href=\"#fdt\">fdt</a> = <a class=\"id\" href=\"#files_fdtable\">files_fdtable</a>(<a class=\"id\" href=\"#files\">files</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fd\">fd</a> &lt; <a class=\"id\" href=\"#fdt\">fdt</a>-><a class=\"id\" href=\"#max_fds\">max_fds</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#rcu_dereference_check_fdtable\">rcu_dereference_check_fdtable</a>(<a class=\"id\" href=\"#files\">files</a>, <a class=\"id\" href=\"#fdt\">fdt</a>-><a class=\"id\" href=\"#fd\">fd</a>[<a class=\"id\" href=\"#fd\">fd</a>]);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#file\">file</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Check whether the specified fd has an open file.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#fcheck\">fcheck</a>(<a class=\"id\" href=\"#fd\">fd</a>)<span class=\"ts\"/><a class=\"id\" href=\"#fcheck_files\">fcheck_files</a>(<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#files\">files</a>, <a class=\"id\" href=\"#fd\">fd</a>)", 
"", 
"struct <a class=\"id\" href=\"#task_struct\">task_struct</a>;", 
"", 
"struct <a class=\"id\" href=\"#files_struct\">files_struct</a> *<a class=\"id\" href=\"#get_files_struct\">get_files_struct</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *);", 
"void <a class=\"id\" href=\"#put_files_struct\">put_files_struct</a>(struct <a class=\"id\" href=\"#files_struct\">files_struct</a> *<a class=\"id\" href=\"#fs\">fs</a>);", 
"void <a class=\"id\" href=\"#reset_files_struct\">reset_files_struct</a>(struct <a class=\"id\" href=\"#files_struct\">files_struct</a> *);", 
"int <a class=\"id\" href=\"#unshare_files\">unshare_files</a>(struct <a class=\"id\" href=\"#files_struct\">files_struct</a> **);", 
"struct <a class=\"id\" href=\"#files_struct\">files_struct</a> *<a class=\"id\" href=\"#dup_fd\">dup_fd</a>(struct <a class=\"id\" href=\"#files_struct\">files_struct</a> *, int *);", 
"", 
"extern struct <a class=\"id\" href=\"#kmem_cache\">kmem_cache</a> *<a class=\"id\" href=\"#files_cachep\">files_cachep</a>;", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __LINUX_FDTABLE_H */</span>", 
];
xr_frag_insert('l/5c/46182fea5dd58c1b83c24c2ebec486f3f3ae4a.xr', __xr_tmp);
