var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * net/dsa/mv88e6xxx.c - Marvell 88e6xxx switch chip support</span>", 
"<span class=\"comment\"> * Copyright (c) 2008 Marvell Semiconductor</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> * it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> * the Free Software Foundation; either version 2 of the License, or</span>", 
"<span class=\"comment\"> * (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netdevice\">netdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#phy\">phy</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"dsa_priv.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"mv88e6xxx.h\"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * If the switch's ADDR[4:0] strap pins are strapped to zero, it will</span>", 
"<span class=\"comment\"> * use all 32 SMI bus addresses on its SMI bus, and all switch registers</span>", 
"<span class=\"comment\"> * will be directly accessible on some {device address,register address}</span>", 
"<span class=\"comment\"> * pair.  If the ADDR[4:0] pins are not strapped to zero, the switch</span>", 
"<span class=\"comment\"> * will only respond to SMI transactions to that specific address, and</span>", 
"<span class=\"comment\"> * an indirect addressing mechanism needs to be used to access its</span>", 
"<span class=\"comment\"> * registers.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#mv88e6xxx_reg_wait_ready\">mv88e6xxx_reg_wait_ready</a>(struct <a class=\"id\" href=\"#mii_bus\">mii_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>, int <a class=\"id\" href=\"#sw_addr\">sw_addr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 16; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#mdiobus_read\">mdiobus_read</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#sw_addr\">sw_addr</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> &amp; 0x8000) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ETIMEDOUT\">ETIMEDOUT</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#__mv88e6xxx_reg_read\">__mv88e6xxx_reg_read</a>(struct <a class=\"id\" href=\"#mii_bus\">mii_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>, int <a class=\"id\" href=\"#sw_addr\">sw_addr</a>, int <a class=\"id\" href=\"#addr\">addr</a>, int <a class=\"id\" href=\"#reg\">reg</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sw_addr\">sw_addr</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#mdiobus_read\">mdiobus_read</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#reg\">reg</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Wait for the bus to become free.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#mv88e6xxx_reg_wait_ready\">mv88e6xxx_reg_wait_ready</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#sw_addr\">sw_addr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Transmit the read command.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#mdiobus_write\">mdiobus_write</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#sw_addr\">sw_addr</a>, 0, 0x9800 | (<a class=\"id\" href=\"#addr\">addr</a> << 5) | <a class=\"id\" href=\"#reg\">reg</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Wait for the read command to complete.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#mv88e6xxx_reg_wait_ready\">mv88e6xxx_reg_wait_ready</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#sw_addr\">sw_addr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Read the data.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#mdiobus_read\">mdiobus_read</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#sw_addr\">sw_addr</a>, 1);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a> &amp; 0xffff;", 
"}", 
"", 
"int <a class=\"id\" href=\"#mv88e6xxx_reg_read\">mv88e6xxx_reg_read</a>(struct <a class=\"id\" href=\"#dsa_switch\">dsa_switch</a> *<a class=\"id\" href=\"#ds\">ds</a>, int <a class=\"id\" href=\"#addr\">addr</a>, int <a class=\"id\" href=\"#reg\">reg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mv88e6xxx_priv_state\">mv88e6xxx_priv_state</a> *<a class=\"id\" href=\"#ps\">ps</a> = (void *)(<a class=\"id\" href=\"#ds\">ds</a> + 1);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#smi_mutex\">smi_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#__mv88e6xxx_reg_read\">__mv88e6xxx_reg_read</a>(<a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#master_mii_bus\">master_mii_bus</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#sw_addr\">sw_addr</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#reg\">reg</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#smi_mutex\">smi_mutex</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#__mv88e6xxx_reg_write\">__mv88e6xxx_reg_write</a>(struct <a class=\"id\" href=\"#mii_bus\">mii_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>, int <a class=\"id\" href=\"#sw_addr\">sw_addr</a>, int <a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  int <a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#val\">val</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sw_addr\">sw_addr</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#mdiobus_write\">mdiobus_write</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#val\">val</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Wait for the bus to become free.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#mv88e6xxx_reg_wait_ready\">mv88e6xxx_reg_wait_ready</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#sw_addr\">sw_addr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Transmit the data to write.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#mdiobus_write\">mdiobus_write</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#sw_addr\">sw_addr</a>, 1, <a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Transmit the write command.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#mdiobus_write\">mdiobus_write</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#sw_addr\">sw_addr</a>, 0, 0x9400 | (<a class=\"id\" href=\"#addr\">addr</a> << 5) | <a class=\"id\" href=\"#reg\">reg</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Wait for the write command to complete.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#mv88e6xxx_reg_wait_ready\">mv88e6xxx_reg_wait_ready</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#sw_addr\">sw_addr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#mv88e6xxx_reg_write\">mv88e6xxx_reg_write</a>(struct <a class=\"id\" href=\"#dsa_switch\">dsa_switch</a> *<a class=\"id\" href=\"#ds\">ds</a>, int <a class=\"id\" href=\"#addr\">addr</a>, int <a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#val\">val</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mv88e6xxx_priv_state\">mv88e6xxx_priv_state</a> *<a class=\"id\" href=\"#ps\">ps</a> = (void *)(<a class=\"id\" href=\"#ds\">ds</a> + 1);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#smi_mutex\">smi_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#__mv88e6xxx_reg_write\">__mv88e6xxx_reg_write</a>(<a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#master_mii_bus\">master_mii_bus</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#sw_addr\">sw_addr</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#smi_mutex\">smi_mutex</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#mv88e6xxx_config_prio\">mv88e6xxx_config_prio</a>(struct <a class=\"id\" href=\"#dsa_switch\">dsa_switch</a> *<a class=\"id\" href=\"#ds\">ds</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Configure the IP ToS mapping registers.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG_WRITE\">REG_WRITE</a>(<a class=\"id\" href=\"#REG_GLOBAL\">REG_GLOBAL</a>, 0x10, 0x0000);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG_WRITE\">REG_WRITE</a>(<a class=\"id\" href=\"#REG_GLOBAL\">REG_GLOBAL</a>, 0x11, 0x0000);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG_WRITE\">REG_WRITE</a>(<a class=\"id\" href=\"#REG_GLOBAL\">REG_GLOBAL</a>, 0x12, 0x5555);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG_WRITE\">REG_WRITE</a>(<a class=\"id\" href=\"#REG_GLOBAL\">REG_GLOBAL</a>, 0x13, 0x5555);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG_WRITE\">REG_WRITE</a>(<a class=\"id\" href=\"#REG_GLOBAL\">REG_GLOBAL</a>, 0x14, 0xaaaa);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG_WRITE\">REG_WRITE</a>(<a class=\"id\" href=\"#REG_GLOBAL\">REG_GLOBAL</a>, 0x15, 0xaaaa);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG_WRITE\">REG_WRITE</a>(<a class=\"id\" href=\"#REG_GLOBAL\">REG_GLOBAL</a>, 0x16, 0xffff);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG_WRITE\">REG_WRITE</a>(<a class=\"id\" href=\"#REG_GLOBAL\">REG_GLOBAL</a>, 0x17, 0xffff);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Configure the IEEE 802.1p priority mapping register.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG_WRITE\">REG_WRITE</a>(<a class=\"id\" href=\"#REG_GLOBAL\">REG_GLOBAL</a>, 0x18, 0xfa41);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#mv88e6xxx_set_addr_direct\">mv88e6xxx_set_addr_direct</a>(struct <a class=\"id\" href=\"#dsa_switch\">dsa_switch</a> *<a class=\"id\" href=\"#ds\">ds</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG_WRITE\">REG_WRITE</a>(<a class=\"id\" href=\"#REG_GLOBAL\">REG_GLOBAL</a>, 0x01, (<a class=\"id\" href=\"#addr\">addr</a>[0] << 8) | <a class=\"id\" href=\"#addr\">addr</a>[1]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG_WRITE\">REG_WRITE</a>(<a class=\"id\" href=\"#REG_GLOBAL\">REG_GLOBAL</a>, 0x02, (<a class=\"id\" href=\"#addr\">addr</a>[2] << 8) | <a class=\"id\" href=\"#addr\">addr</a>[3]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG_WRITE\">REG_WRITE</a>(<a class=\"id\" href=\"#REG_GLOBAL\">REG_GLOBAL</a>, 0x03, (<a class=\"id\" href=\"#addr\">addr</a>[4] << 8) | <a class=\"id\" href=\"#addr\">addr</a>[5]);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#mv88e6xxx_set_addr_indirect\">mv88e6xxx_set_addr_indirect</a>(struct <a class=\"id\" href=\"#dsa_switch\">dsa_switch</a> *<a class=\"id\" href=\"#ds\">ds</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 6; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#j\">j</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Write the MAC address byte.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#REG_WRITE\">REG_WRITE</a>(<a class=\"id\" href=\"#REG_GLOBAL2\">REG_GLOBAL2</a>, 0x0d, 0x8000 | (<a class=\"id\" href=\"#i\">i</a> << 8) | <a class=\"id\" href=\"#addr\">addr</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Wait for the write to complete.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#j\">j</a> &lt; 16; <a class=\"id\" href=\"#j\">j</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#REG_READ\">REG_READ</a>(<a class=\"id\" href=\"#REG_GLOBAL2\">REG_GLOBAL2</a>, 0x0d);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> &amp; 0x8000) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#j\">j</a> == 16)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ETIMEDOUT\">ETIMEDOUT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#mv88e6xxx_phy_read\">mv88e6xxx_phy_read</a>(struct <a class=\"id\" href=\"#dsa_switch\">dsa_switch</a> *<a class=\"id\" href=\"#ds\">ds</a>, int <a class=\"id\" href=\"#addr\">addr</a>, int <a class=\"id\" href=\"#regnum\">regnum</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr\">addr</a> >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#mv88e6xxx_reg_read\">mv88e6xxx_reg_read</a>(<a class=\"id\" href=\"#ds\">ds</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#regnum\">regnum</a>);", 
"<span class=\"ts\"/>return 0xffff;", 
"}", 
"", 
"int <a class=\"id\" href=\"#mv88e6xxx_phy_write\">mv88e6xxx_phy_write</a>(struct <a class=\"id\" href=\"#dsa_switch\">dsa_switch</a> *<a class=\"id\" href=\"#ds\">ds</a>, int <a class=\"id\" href=\"#addr\">addr</a>, int <a class=\"id\" href=\"#regnum\">regnum</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#val\">val</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr\">addr</a> >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#mv88e6xxx_reg_write\">mv88e6xxx_reg_write</a>(<a class=\"id\" href=\"#ds\">ds</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#regnum\">regnum</a>, <a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET_DSA_MV88E6XXX_NEED_PPU\">CONFIG_NET_DSA_MV88E6XXX_NEED_PPU</a>", 
"static int <a class=\"id\" href=\"#mv88e6xxx_ppu_disable\">mv88e6xxx_ppu_disable</a>(struct <a class=\"id\" href=\"#dsa_switch\">dsa_switch</a> *<a class=\"id\" href=\"#ds\">ds</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#REG_READ\">REG_READ</a>(<a class=\"id\" href=\"#REG_GLOBAL\">REG_GLOBAL</a>, 0x04);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG_WRITE\">REG_WRITE</a>(<a class=\"id\" href=\"#REG_GLOBAL\">REG_GLOBAL</a>, 0x04, <a class=\"id\" href=\"#ret\">ret</a> &amp; ~0x4000);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 1000; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/>        <a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#REG_READ\">REG_READ</a>(<a class=\"id\" href=\"#REG_GLOBAL\">REG_GLOBAL</a>, 0x00);", 
"<span class=\"ts\"/>        <a class=\"id\" href=\"#msleep\">msleep</a>(1);", 
"<span class=\"ts\"/>        if ((<a class=\"id\" href=\"#ret\">ret</a> &amp; 0xc000) != 0xc000)", 
"<span class=\"ts\"/>                return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ETIMEDOUT\">ETIMEDOUT</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#mv88e6xxx_ppu_enable\">mv88e6xxx_ppu_enable</a>(struct <a class=\"id\" href=\"#dsa_switch\">dsa_switch</a> *<a class=\"id\" href=\"#ds\">ds</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#REG_READ\">REG_READ</a>(<a class=\"id\" href=\"#REG_GLOBAL\">REG_GLOBAL</a>, 0x04);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG_WRITE\">REG_WRITE</a>(<a class=\"id\" href=\"#REG_GLOBAL\">REG_GLOBAL</a>, 0x04, <a class=\"id\" href=\"#ret\">ret</a> | 0x4000);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 1000; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/>        <a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#REG_READ\">REG_READ</a>(<a class=\"id\" href=\"#REG_GLOBAL\">REG_GLOBAL</a>, 0x00);", 
"<span class=\"ts\"/>        <a class=\"id\" href=\"#msleep\">msleep</a>(1);", 
"<span class=\"ts\"/>        if ((<a class=\"id\" href=\"#ret\">ret</a> &amp; 0xc000) == 0xc000)", 
"<span class=\"ts\"/>                return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ETIMEDOUT\">ETIMEDOUT</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#mv88e6xxx_ppu_reenable_work\">mv88e6xxx_ppu_reenable_work</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#ugly\">ugly</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mv88e6xxx_priv_state\">mv88e6xxx_priv_state</a> *<a class=\"id\" href=\"#ps\">ps</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ps\">ps</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#ugly\">ugly</a>, struct <a class=\"id\" href=\"#mv88e6xxx_priv_state\">mv88e6xxx_priv_state</a>, <a class=\"id\" href=\"#ppu_work\">ppu_work</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mutex_trylock\">mutex_trylock</a>(&amp;<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#ppu_mutex\">ppu_mutex</a>)) {", 
"<span class=\"ts\"/>        struct <a class=\"id\" href=\"#dsa_switch\">dsa_switch</a> *<a class=\"id\" href=\"#ds\">ds</a> = ((struct <a class=\"id\" href=\"#dsa_switch\">dsa_switch</a> *)<a class=\"id\" href=\"#ps\">ps</a>) - 1;", 
"", 
"<span class=\"ts\"/>        if (<a class=\"id\" href=\"#mv88e6xxx_ppu_enable\">mv88e6xxx_ppu_enable</a>(<a class=\"id\" href=\"#ds\">ds</a>) == 0)", 
"<span class=\"ts\"/>                <a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#ppu_disabled\">ppu_disabled</a> = 0;", 
"<span class=\"ts\"/>        <a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#ppu_mutex\">ppu_mutex</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#mv88e6xxx_ppu_reenable_timer\">mv88e6xxx_ppu_reenable_timer</a>(unsigned long <a class=\"id\" href=\"#_ps\">_ps</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mv88e6xxx_priv_state\">mv88e6xxx_priv_state</a> *<a class=\"id\" href=\"#ps\">ps</a> = (void *)<a class=\"id\" href=\"#_ps\">_ps</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#schedule_work\">schedule_work</a>(&amp;<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#ppu_work\">ppu_work</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#mv88e6xxx_ppu_access_get\">mv88e6xxx_ppu_access_get</a>(struct <a class=\"id\" href=\"#dsa_switch\">dsa_switch</a> *<a class=\"id\" href=\"#ds\">ds</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mv88e6xxx_priv_state\">mv88e6xxx_priv_state</a> *<a class=\"id\" href=\"#ps\">ps</a> = (void *)(<a class=\"id\" href=\"#ds\">ds</a> + 1);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#ppu_mutex\">ppu_mutex</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the PHY polling unit is enabled, disable it so that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we can access the PHY registers.  If it was already</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * disabled, cancel the timer that is going to re-enable</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#ppu_disabled\">ppu_disabled</a>) {", 
"<span class=\"ts\"/>        <a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#mv88e6xxx_ppu_disable\">mv88e6xxx_ppu_disable</a>(<a class=\"id\" href=\"#ds\">ds</a>);", 
"<span class=\"ts\"/>        if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0) {", 
"<span class=\"ts\"/>                <a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#ppu_mutex\">ppu_mutex</a>);", 
"<span class=\"ts\"/>                return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>        }", 
"<span class=\"ts\"/>        <a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#ppu_disabled\">ppu_disabled</a> = 1;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/>        <a class=\"id\" href=\"#del_timer\">del_timer</a>(&amp;<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#ppu_timer\">ppu_timer</a>);", 
"<span class=\"ts\"/>        <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#mv88e6xxx_ppu_access_put\">mv88e6xxx_ppu_access_put</a>(struct <a class=\"id\" href=\"#dsa_switch\">dsa_switch</a> *<a class=\"id\" href=\"#ds\">ds</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mv88e6xxx_priv_state\">mv88e6xxx_priv_state</a> *<a class=\"id\" href=\"#ps\">ps</a> = (void *)(<a class=\"id\" href=\"#ds\">ds</a> + 1);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Schedule a timer to re-enable the PHY polling unit.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mod_timer\">mod_timer</a>(&amp;<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#ppu_timer\">ppu_timer</a>, <a class=\"id\" href=\"#jiffies\">jiffies</a> + <a class=\"id\" href=\"#msecs_to_jiffies\">msecs_to_jiffies</a>(10));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#ppu_mutex\">ppu_mutex</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#mv88e6xxx_ppu_state_init\">mv88e6xxx_ppu_state_init</a>(struct <a class=\"id\" href=\"#dsa_switch\">dsa_switch</a> *<a class=\"id\" href=\"#ds\">ds</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mv88e6xxx_priv_state\">mv88e6xxx_priv_state</a> *<a class=\"id\" href=\"#ps\">ps</a> = (void *)(<a class=\"id\" href=\"#ds\">ds</a> + 1);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_init\">mutex_init</a>(&amp;<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#ppu_mutex\">ppu_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_WORK\">INIT_WORK</a>(&amp;<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#ppu_work\">ppu_work</a>, <a class=\"id\" href=\"#mv88e6xxx_ppu_reenable_work\">mv88e6xxx_ppu_reenable_work</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_timer\">init_timer</a>(&amp;<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#ppu_timer\">ppu_timer</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#ppu_timer\">ppu_timer</a>.<a class=\"id\" href=\"#data\">data</a> = (unsigned long)<a class=\"id\" href=\"#ps\">ps</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#ppu_timer\">ppu_timer</a>.<a class=\"id\" href=\"#function\">function</a> = <a class=\"id\" href=\"#mv88e6xxx_ppu_reenable_timer\">mv88e6xxx_ppu_reenable_timer</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#mv88e6xxx_phy_read_ppu\">mv88e6xxx_phy_read_ppu</a>(struct <a class=\"id\" href=\"#dsa_switch\">dsa_switch</a> *<a class=\"id\" href=\"#ds\">ds</a>, int <a class=\"id\" href=\"#addr\">addr</a>, int <a class=\"id\" href=\"#regnum\">regnum</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#mv88e6xxx_ppu_access_get\">mv88e6xxx_ppu_access_get</a>(<a class=\"id\" href=\"#ds\">ds</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> >= 0) {", 
"<span class=\"ts\"/>        <a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#mv88e6xxx_reg_read\">mv88e6xxx_reg_read</a>(<a class=\"id\" href=\"#ds\">ds</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#regnum\">regnum</a>);", 
"<span class=\"ts\"/>        <a class=\"id\" href=\"#mv88e6xxx_ppu_access_put\">mv88e6xxx_ppu_access_put</a>(<a class=\"id\" href=\"#ds\">ds</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#mv88e6xxx_phy_write_ppu\">mv88e6xxx_phy_write_ppu</a>(struct <a class=\"id\" href=\"#dsa_switch\">dsa_switch</a> *<a class=\"id\" href=\"#ds\">ds</a>, int <a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    int <a class=\"id\" href=\"#regnum\">regnum</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#val\">val</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#mv88e6xxx_ppu_access_get\">mv88e6xxx_ppu_access_get</a>(<a class=\"id\" href=\"#ds\">ds</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> >= 0) {", 
"<span class=\"ts\"/>        <a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#mv88e6xxx_reg_write\">mv88e6xxx_reg_write</a>(<a class=\"id\" href=\"#ds\">ds</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#regnum\">regnum</a>, <a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/>        <a class=\"id\" href=\"#mv88e6xxx_ppu_access_put\">mv88e6xxx_ppu_access_put</a>(<a class=\"id\" href=\"#ds\">ds</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"void <a class=\"id\" href=\"#mv88e6xxx_poll_link\">mv88e6xxx_poll_link</a>(struct <a class=\"id\" href=\"#dsa_switch\">dsa_switch</a> *<a class=\"id\" href=\"#ds\">ds</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#DSA_MAX_PORTS\">DSA_MAX_PORTS</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#uninitialized_var\">uninitialized_var</a>(<a class=\"id\" href=\"#port_status\">port_status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#link\">link</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#speed\">speed</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#duplex\">duplex</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#fc\">fc</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#ports\">ports</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IFF_UP\">IFF_UP</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port_status\">port_status</a> = <a class=\"id\" href=\"#mv88e6xxx_reg_read\">mv88e6xxx_reg_read</a>(<a class=\"id\" href=\"#ds\">ds</a>, <a class=\"id\" href=\"#REG_PORT\">REG_PORT</a>(<a class=\"id\" href=\"#i\">i</a>), 0x00);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#port_status\">port_status</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a> = !!(<a class=\"id\" href=\"#port_status\">port_status</a> &amp; 0x0800);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#link\">link</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#netif_carrier_ok\">netif_carrier_ok</a>(<a class=\"id\" href=\"#dev\">dev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"%s: link down\\n\", <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netif_carrier_off\">netif_carrier_off</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#port_status\">port_status</a> &amp; 0x0300) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case 0x0000:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#speed\">speed</a> = 10;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 0x0100:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#speed\">speed</a> = 100;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 0x0200:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#speed\">speed</a> = 1000;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#speed\">speed</a> = -1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#duplex\">duplex</a> = (<a class=\"id\" href=\"#port_status\">port_status</a> &amp; 0x0400) ? 1 : 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fc\">fc</a> = (<a class=\"id\" href=\"#port_status\">port_status</a> &amp; 0x8000) ? 1 : 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#netif_carrier_ok\">netif_carrier_ok</a>(<a class=\"id\" href=\"#dev\">dev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"%s: link up, %d Mb/s, %s duplex, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"flow control %sabled\\n\", <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#speed\">speed</a>, <a class=\"id\" href=\"#duplex\">duplex</a> ? \"full\" : \"half\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#fc\">fc</a> ? \"en\" : \"dis\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netif_carrier_on\">netif_carrier_on</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#mv88e6xxx_stats_wait\">mv88e6xxx_stats_wait</a>(struct <a class=\"id\" href=\"#dsa_switch\">dsa_switch</a> *<a class=\"id\" href=\"#ds\">ds</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 10; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#REG_READ\">REG_READ</a>(<a class=\"id\" href=\"#REG_GLOBAL\">REG_GLOBAL</a>, 0x1d);", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> &amp; 0x8000) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ETIMEDOUT\">ETIMEDOUT</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#mv88e6xxx_stats_snapshot\">mv88e6xxx_stats_snapshot</a>(struct <a class=\"id\" href=\"#dsa_switch\">dsa_switch</a> *<a class=\"id\" href=\"#ds\">ds</a>, int <a class=\"id\" href=\"#port\">port</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Snapshot the hardware statistics counters for this port.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG_WRITE\">REG_WRITE</a>(<a class=\"id\" href=\"#REG_GLOBAL\">REG_GLOBAL</a>, 0x1d, 0xdc00 | <a class=\"id\" href=\"#port\">port</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Wait for the snapshotting to complete.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#mv88e6xxx_stats_wait\">mv88e6xxx_stats_wait</a>(<a class=\"id\" href=\"#ds\">ds</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#mv88e6xxx_stats_read\">mv88e6xxx_stats_read</a>(struct <a class=\"id\" href=\"#dsa_switch\">dsa_switch</a> *<a class=\"id\" href=\"#ds\">ds</a>, int <a class=\"id\" href=\"#stat\">stat</a>, <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#val\">val</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#_val\">_val</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#val\">val</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#mv88e6xxx_reg_write\">mv88e6xxx_reg_write</a>(<a class=\"id\" href=\"#ds\">ds</a>, <a class=\"id\" href=\"#REG_GLOBAL\">REG_GLOBAL</a>, 0x1d, 0xcc00 | <a class=\"id\" href=\"#stat\">stat</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#mv88e6xxx_stats_wait\">mv88e6xxx_stats_wait</a>(<a class=\"id\" href=\"#ds\">ds</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#mv88e6xxx_reg_read\">mv88e6xxx_reg_read</a>(<a class=\"id\" href=\"#ds\">ds</a>, <a class=\"id\" href=\"#REG_GLOBAL\">REG_GLOBAL</a>, 0x1e);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#_val\">_val</a> = <a class=\"id\" href=\"#ret\">ret</a> << 16;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#mv88e6xxx_reg_read\">mv88e6xxx_reg_read</a>(<a class=\"id\" href=\"#ds\">ds</a>, <a class=\"id\" href=\"#REG_GLOBAL\">REG_GLOBAL</a>, 0x1f);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#_val\">_val</a> | <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#mv88e6xxx_get_strings\">mv88e6xxx_get_strings</a>(struct <a class=\"id\" href=\"#dsa_switch\">dsa_switch</a> *<a class=\"id\" href=\"#ds\">ds</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   int <a class=\"id\" href=\"#nr_stats\">nr_stats</a>, struct <a class=\"id\" href=\"#mv88e6xxx_hw_stat\">mv88e6xxx_hw_stat</a> *<a class=\"id\" href=\"#stats\">stats</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   int <a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#uint8_t\">uint8_t</a> *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nr_stats\">nr_stats</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#data\">data</a> + <a class=\"id\" href=\"#i\">i</a> * <a class=\"id\" href=\"#ETH_GSTRING_LEN\">ETH_GSTRING_LEN</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#stats\">stats</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#string\">string</a>, <a class=\"id\" href=\"#ETH_GSTRING_LEN\">ETH_GSTRING_LEN</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"void <a class=\"id\" href=\"#mv88e6xxx_get_ethtool_stats\">mv88e6xxx_get_ethtool_stats</a>(struct <a class=\"id\" href=\"#dsa_switch\">dsa_switch</a> *<a class=\"id\" href=\"#ds\">ds</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> int <a class=\"id\" href=\"#nr_stats\">nr_stats</a>, struct <a class=\"id\" href=\"#mv88e6xxx_hw_stat\">mv88e6xxx_hw_stat</a> *<a class=\"id\" href=\"#stats\">stats</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> int <a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#uint64_t\">uint64_t</a> *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mv88e6xxx_priv_state\">mv88e6xxx_priv_state</a> *<a class=\"id\" href=\"#ps\">ps</a> = (void *)(<a class=\"id\" href=\"#ds\">ds</a> + 1);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#stats_mutex\">stats_mutex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#mv88e6xxx_stats_snapshot\">mv88e6xxx_stats_snapshot</a>(<a class=\"id\" href=\"#ds\">ds</a>, <a class=\"id\" href=\"#port\">port</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#stats_mutex\">stats_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Read each of the counters.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nr_stats\">nr_stats</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#mv88e6xxx_hw_stat\">mv88e6xxx_hw_stat</a> *<a class=\"id\" href=\"#s\">s</a> = <a class=\"id\" href=\"#stats\">stats</a> + <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#low\">low</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#high\">high</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mv88e6xxx_stats_read\">mv88e6xxx_stats_read</a>(<a class=\"id\" href=\"#ds\">ds</a>, <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#reg\">reg</a>, &amp;<a class=\"id\" href=\"#low\">low</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#sizeof_stat\">sizeof_stat</a> == 8)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mv88e6xxx_stats_read\">mv88e6xxx_stats_read</a>(<a class=\"id\" href=\"#ds\">ds</a>, <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#reg\">reg</a> + 1, &amp;<a class=\"id\" href=\"#high\">high</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#high\">high</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>[<a class=\"id\" href=\"#i\">i</a>] = (((<a class=\"id\" href=\"#u64\">u64</a>)<a class=\"id\" href=\"#high\">high</a>) << 32) | <a class=\"id\" href=\"#low\">low</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#ps\">ps</a>-><a class=\"id\" href=\"#stats_mutex\">stats_mutex</a>);", 
"}", 
];
xr_frag_insert('l/5c/710896e7bf012a24df68d0f97541533fe80274.xr', __xr_tmp);
