var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * security/tomoyo/common.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Securityfs interface for TOMOYO.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2005-2010  NTT DATA CORPORATION</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#security\">security</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"common.h\"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tomoyo_open - open() for /sys/kernel/security/tomoyo/ interface.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @inode: Pointer to \"struct inode\".</span>", 
"<span class=\"comment\"> * @file:  Pointer to \"struct file\".</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 on success, negative value otherwise.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#tomoyo_open\">tomoyo_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>const int <a class=\"id\" href=\"#key\">key</a> = ((<a class=\"id\" href=\"#u8\">u8</a> *) <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_private\">i_private</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>- ((<a class=\"id\" href=\"#u8\">u8</a> *) <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tomoyo_open_control\">tomoyo_open_control</a>(<a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#file\">file</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tomoyo_release - close() for /sys/kernel/security/tomoyo/ interface.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @inode: Pointer to \"struct inode\".</span>", 
"<span class=\"comment\"> * @file:  Pointer to \"struct file\".</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 on success, negative value otherwise.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#tomoyo_release\">tomoyo_release</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tomoyo_close_control\">tomoyo_close_control</a>(<a class=\"id\" href=\"#file\">file</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tomoyo_poll - poll() for /proc/ccs/ interface.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @file: Pointer to \"struct file\".</span>", 
"<span class=\"comment\"> * @wait: Pointer to \"poll_table\".</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 on success, negative value otherwise.</span>", 
"<span class=\"comment\"> */</span>", 
"static unsigned int <a class=\"id\" href=\"#tomoyo_poll\">tomoyo_poll</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#poll_table\">poll_table</a> *<a class=\"id\" href=\"#wait\">wait</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tomoyo_poll_control\">tomoyo_poll_control</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#wait\">wait</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tomoyo_read - read() for /sys/kernel/security/tomoyo/ interface.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @file:  Pointer to \"struct file\".</span>", 
"<span class=\"comment\"> * @buf:   Pointer to buffer.</span>", 
"<span class=\"comment\"> * @count: Size of @buf.</span>", 
"<span class=\"comment\"> * @ppos:  Unused.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns bytes read on success, negative value otherwise.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#tomoyo_read\">tomoyo_read</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tomoyo_read_control\">tomoyo_read_control</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tomoyo_write - write() for /sys/kernel/security/tomoyo/ interface.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @file:  Pointer to \"struct file\".</span>", 
"<span class=\"comment\"> * @buf:   Pointer to buffer.</span>", 
"<span class=\"comment\"> * @count: Size of @buf.</span>", 
"<span class=\"comment\"> * @ppos:  Unused.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns @count on success, negative value otherwise.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#tomoyo_write\">tomoyo_write</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tomoyo_write_control\">tomoyo_write_control</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * tomoyo_operations is a \"struct file_operations\" which is used for handling</span>", 
"<span class=\"comment\"> * /sys/kernel/security/tomoyo/ interface.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Some files under /sys/kernel/security/tomoyo/ directory accept open(O_RDWR).</span>", 
"<span class=\"comment\"> * See tomoyo_io_buffer for internals.</span>", 
"<span class=\"comment\"> */</span>", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#tomoyo_operations\">tomoyo_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a>    = <a class=\"id\" href=\"#tomoyo_open\">tomoyo_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a> = <a class=\"id\" href=\"#tomoyo_release\">tomoyo_release</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#poll\">poll</a>    = <a class=\"id\" href=\"#tomoyo_poll\">tomoyo_poll</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a>    = <a class=\"id\" href=\"#tomoyo_read\">tomoyo_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write\">write</a>   = <a class=\"id\" href=\"#tomoyo_write\">tomoyo_write</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a>  = <a class=\"id\" href=\"#noop_llseek\">noop_llseek</a>,", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tomoyo_create_entry - Create interface files under /sys/kernel/security/tomoyo/ directory.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @name:   The name of the interface file.</span>", 
"<span class=\"comment\"> * @mode:   The permission of the interface file.</span>", 
"<span class=\"comment\"> * @parent: The parent directory.</span>", 
"<span class=\"comment\"> * @key:    Type of interface.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns nothing.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#tomoyo_create_entry\">tomoyo_create_entry</a>(const char *<a class=\"id\" href=\"#name\">name</a>, const <a class=\"id\" href=\"#mode_t\">mode_t</a> <a class=\"id\" href=\"#mode\">mode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#parent\">parent</a>, const <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#key\">key</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#securityfs_create_file\">securityfs_create_file</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#parent\">parent</a>, ((<a class=\"id\" href=\"#u8\">u8</a> *) <a class=\"id\" href=\"#NULL\">NULL</a>) + <a class=\"id\" href=\"#key\">key</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#tomoyo_operations\">tomoyo_operations</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tomoyo_initerface_init - Initialize /sys/kernel/security/tomoyo/ interface.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#tomoyo_initerface_init\">tomoyo_initerface_init</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#tomoyo_dir\">tomoyo_dir</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Don't create securityfs entries unless registered. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#current_cred\">current_cred</a>()-><a class=\"id\" href=\"#security\">security</a> != &amp;<a class=\"id\" href=\"#tomoyo_kernel_domain\">tomoyo_kernel_domain</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_dir\">tomoyo_dir</a> = <a class=\"id\" href=\"#securityfs_create_dir\">securityfs_create_dir</a>(\"tomoyo\", <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_create_entry\">tomoyo_create_entry</a>(\"query\",            0600, <a class=\"id\" href=\"#tomoyo_dir\">tomoyo_dir</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#TOMOYO_QUERY\">TOMOYO_QUERY</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_create_entry\">tomoyo_create_entry</a>(\"domain_policy\",    0600, <a class=\"id\" href=\"#tomoyo_dir\">tomoyo_dir</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#TOMOYO_DOMAINPOLICY\">TOMOYO_DOMAINPOLICY</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_create_entry\">tomoyo_create_entry</a>(\"exception_policy\", 0600, <a class=\"id\" href=\"#tomoyo_dir\">tomoyo_dir</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#TOMOYO_EXCEPTIONPOLICY\">TOMOYO_EXCEPTIONPOLICY</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_create_entry\">tomoyo_create_entry</a>(\"self_domain\",      0400, <a class=\"id\" href=\"#tomoyo_dir\">tomoyo_dir</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#TOMOYO_SELFDOMAIN\">TOMOYO_SELFDOMAIN</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_create_entry\">tomoyo_create_entry</a>(\".domain_status\",   0600, <a class=\"id\" href=\"#tomoyo_dir\">tomoyo_dir</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#TOMOYO_DOMAIN_STATUS\">TOMOYO_DOMAIN_STATUS</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_create_entry\">tomoyo_create_entry</a>(\".process_status\",  0600, <a class=\"id\" href=\"#tomoyo_dir\">tomoyo_dir</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#TOMOYO_PROCESS_STATUS\">TOMOYO_PROCESS_STATUS</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_create_entry\">tomoyo_create_entry</a>(\"meminfo\",          0600, <a class=\"id\" href=\"#tomoyo_dir\">tomoyo_dir</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#TOMOYO_MEMINFO\">TOMOYO_MEMINFO</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_create_entry\">tomoyo_create_entry</a>(\"profile\",          0600, <a class=\"id\" href=\"#tomoyo_dir\">tomoyo_dir</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#TOMOYO_PROFILE\">TOMOYO_PROFILE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_create_entry\">tomoyo_create_entry</a>(\"manager\",          0600, <a class=\"id\" href=\"#tomoyo_dir\">tomoyo_dir</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#TOMOYO_MANAGER\">TOMOYO_MANAGER</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_create_entry\">tomoyo_create_entry</a>(\"version\",          0400, <a class=\"id\" href=\"#tomoyo_dir\">tomoyo_dir</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#TOMOYO_VERSION\">TOMOYO_VERSION</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<a class=\"id\" href=\"#fs_initcall\">fs_initcall</a>(<a class=\"id\" href=\"#tomoyo_initerface_init\">tomoyo_initerface_init</a>);", 
];
xr_frag_insert('l/5c/7631129e5bb350728345d0270f6034cec4d51b.xr', __xr_tmp);
