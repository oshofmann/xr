var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ladder.c - the residency ladder algorithm</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 2001, 2002 Andy Grover &lt;andrew.grover@intel.com&gt;</span>", 
"<span class=\"comment\"> *  Copyright (C) 2001, 2002 Paul Diefenbaugh &lt;paul.s.diefenbaugh@intel.com&gt;</span>", 
"<span class=\"comment\"> *  Copyright (C) 2004, 2005 Dominik Brodowski &lt;linux@brodo.de&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * (C) 2006-2007 Venkatesh Pallipadi &lt;venkatesh.pallipadi@intel.com&gt;</span>", 
"<span class=\"comment\"> *               Shaohua Li &lt;shaohua.li@intel.com&gt;</span>", 
"<span class=\"comment\"> *               Adam Belay &lt;abelay@novell.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This code is licenced under the GPL.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cpuidle\">cpuidle</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pm_qos_params\">pm_qos_params</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#moduleparam\">moduleparam</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jiffies\">jiffies</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#io\">io</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PROMOTION_COUNT\">PROMOTION_COUNT</a> 4", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEMOTION_COUNT\">DEMOTION_COUNT</a> 1", 
"", 
"struct <a class=\"id\" href=\"#ladder_device_state\">ladder_device_state</a> {", 
"<span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#promotion_count\">promotion_count</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#demotion_count\">demotion_count</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#promotion_time\">promotion_time</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#demotion_time\">demotion_time</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#threshold\">threshold</a>;", 
"<span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#promotion_count\">promotion_count</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#demotion_count\">demotion_count</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#stats\">stats</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#ladder_device\">ladder_device</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ladder_device_state\">ladder_device_state</a> <a class=\"id\" href=\"#states\">states</a>[<a class=\"id\" href=\"#CPUIDLE_STATE_MAX\">CPUIDLE_STATE_MAX</a>];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#last_state_idx\">last_state_idx</a>;", 
"};", 
"", 
"static <a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(struct <a class=\"id\" href=\"#ladder_device\">ladder_device</a>, <a class=\"id\" href=\"#ladder_devices\">ladder_devices</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * ladder_do_selection - prepares private data for a state change</span>", 
"<span class=\"comment\"> * @ldev: the ladder device</span>", 
"<span class=\"comment\"> * @old_idx: the current state index</span>", 
"<span class=\"comment\"> * @new_idx: the new target state index</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ladder_do_selection\">ladder_do_selection</a>(struct <a class=\"id\" href=\"#ladder_device\">ladder_device</a> *<a class=\"id\" href=\"#ldev\">ldev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       int <a class=\"id\" href=\"#old_idx\">old_idx</a>, int <a class=\"id\" href=\"#new_idx\">new_idx</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ldev\">ldev</a>-><a class=\"id\" href=\"#states\">states</a>[<a class=\"id\" href=\"#old_idx\">old_idx</a>].<a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#promotion_count\">promotion_count</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ldev\">ldev</a>-><a class=\"id\" href=\"#states\">states</a>[<a class=\"id\" href=\"#old_idx\">old_idx</a>].<a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#demotion_count\">demotion_count</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ldev\">ldev</a>-><a class=\"id\" href=\"#last_state_idx\">last_state_idx</a> = <a class=\"id\" href=\"#new_idx\">new_idx</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * ladder_select_state - selects the next state to enter</span>", 
"<span class=\"comment\"> * @dev: the CPU</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ladder_select_state\">ladder_select_state</a>(struct <a class=\"id\" href=\"#cpuidle_device\">cpuidle_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ladder_device\">ladder_device</a> *<a class=\"id\" href=\"#ldev\">ldev</a> = &amp;<a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#ladder_devices\">ladder_devices</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ladder_device_state\">ladder_device_state</a> *<a class=\"id\" href=\"#last_state\">last_state</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#last_residency\">last_residency</a>, <a class=\"id\" href=\"#last_idx\">last_idx</a> = <a class=\"id\" href=\"#ldev\">ldev</a>-><a class=\"id\" href=\"#last_state_idx\">last_state_idx</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#latency_req\">latency_req</a> = <a class=\"id\" href=\"#pm_qos_request\">pm_qos_request</a>(<a class=\"id\" href=\"#PM_QOS_CPU_DMA_LATENCY\">PM_QOS_CPU_DMA_LATENCY</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Special case when user has set very strict latency requirement */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#latency_req\">latency_req</a> == 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ladder_do_selection\">ladder_do_selection</a>(<a class=\"id\" href=\"#ldev\">ldev</a>, <a class=\"id\" href=\"#last_idx\">last_idx</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#last_state\">last_state</a> = &amp;<a class=\"id\" href=\"#ldev\">ldev</a>-><a class=\"id\" href=\"#states\">states</a>[<a class=\"id\" href=\"#last_idx\">last_idx</a>];", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#states\">states</a>[<a class=\"id\" href=\"#last_idx\">last_idx</a>].<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#CPUIDLE_FLAG_TIME_VALID\">CPUIDLE_FLAG_TIME_VALID</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_residency\">last_residency</a> = <a class=\"id\" href=\"#cpuidle_get_last_residency\">cpuidle_get_last_residency</a>(<a class=\"id\" href=\"#dev\">dev</a>) - <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#states\">states</a>[<a class=\"id\" href=\"#last_idx\">last_idx</a>].<a class=\"id\" href=\"#exit_latency\">exit_latency</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_residency\">last_residency</a> = <a class=\"id\" href=\"#last_state\">last_state</a>-><a class=\"id\" href=\"#threshold\">threshold</a>.<a class=\"id\" href=\"#promotion_time\">promotion_time</a> + 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* consider promotion */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#last_idx\">last_idx</a> &lt; <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#state_count\">state_count</a> - 1 &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#last_residency\">last_residency</a> &gt; <a class=\"id\" href=\"#last_state\">last_state</a>-><a class=\"id\" href=\"#threshold\">threshold</a>.<a class=\"id\" href=\"#promotion_time\">promotion_time</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#states\">states</a>[<a class=\"id\" href=\"#last_idx\">last_idx</a> + 1].<a class=\"id\" href=\"#exit_latency\">exit_latency</a> <= <a class=\"id\" href=\"#latency_req\">latency_req</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_state\">last_state</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#promotion_count\">promotion_count</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_state\">last_state</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#demotion_count\">demotion_count</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#last_state\">last_state</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#promotion_count\">promotion_count</a> >= <a class=\"id\" href=\"#last_state\">last_state</a>-><a class=\"id\" href=\"#threshold\">threshold</a>.<a class=\"id\" href=\"#promotion_count\">promotion_count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ladder_do_selection\">ladder_do_selection</a>(<a class=\"id\" href=\"#ldev\">ldev</a>, <a class=\"id\" href=\"#last_idx\">last_idx</a>, <a class=\"id\" href=\"#last_idx\">last_idx</a> + 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#last_idx\">last_idx</a> + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* consider demotion */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#last_idx\">last_idx</a> &gt; <a class=\"id\" href=\"#CPUIDLE_DRIVER_STATE_START\">CPUIDLE_DRIVER_STATE_START</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#states\">states</a>[<a class=\"id\" href=\"#last_idx\">last_idx</a>].<a class=\"id\" href=\"#exit_latency\">exit_latency</a> &gt; <a class=\"id\" href=\"#latency_req\">latency_req</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#last_idx\">last_idx</a> - 1; <a class=\"id\" href=\"#i\">i</a> &gt; <a class=\"id\" href=\"#CPUIDLE_DRIVER_STATE_START\">CPUIDLE_DRIVER_STATE_START</a>; <a class=\"id\" href=\"#i\">i</a>--) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#states\">states</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#exit_latency\">exit_latency</a> <= <a class=\"id\" href=\"#latency_req\">latency_req</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ladder_do_selection\">ladder_do_selection</a>(<a class=\"id\" href=\"#ldev\">ldev</a>, <a class=\"id\" href=\"#last_idx\">last_idx</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#last_idx\">last_idx</a> &gt; <a class=\"id\" href=\"#CPUIDLE_DRIVER_STATE_START\">CPUIDLE_DRIVER_STATE_START</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#last_residency\">last_residency</a> &lt; <a class=\"id\" href=\"#last_state\">last_state</a>-><a class=\"id\" href=\"#threshold\">threshold</a>.<a class=\"id\" href=\"#demotion_time\">demotion_time</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_state\">last_state</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#demotion_count\">demotion_count</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_state\">last_state</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#promotion_count\">promotion_count</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#last_state\">last_state</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#demotion_count\">demotion_count</a> >= <a class=\"id\" href=\"#last_state\">last_state</a>-><a class=\"id\" href=\"#threshold\">threshold</a>.<a class=\"id\" href=\"#demotion_count\">demotion_count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ladder_do_selection\">ladder_do_selection</a>(<a class=\"id\" href=\"#ldev\">ldev</a>, <a class=\"id\" href=\"#last_idx\">last_idx</a>, <a class=\"id\" href=\"#last_idx\">last_idx</a> - 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#last_idx\">last_idx</a> - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* otherwise remain at the current state */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#last_idx\">last_idx</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * ladder_enable_device - setup for the governor</span>", 
"<span class=\"comment\"> * @dev: the CPU</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ladder_enable_device\">ladder_enable_device</a>(struct <a class=\"id\" href=\"#cpuidle_device\">cpuidle_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ladder_device\">ladder_device</a> *<a class=\"id\" href=\"#ldev\">ldev</a> = &amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#ladder_devices\">ladder_devices</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ladder_device_state\">ladder_device_state</a> *<a class=\"id\" href=\"#lstate\">lstate</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpuidle_state\">cpuidle_state</a> *<a class=\"id\" href=\"#state\">state</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ldev\">ldev</a>-><a class=\"id\" href=\"#last_state_idx\">last_state_idx</a> = <a class=\"id\" href=\"#CPUIDLE_DRIVER_STATE_START\">CPUIDLE_DRIVER_STATE_START</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#state_count\">state_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> = &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#states\">states</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lstate\">lstate</a> = &amp;<a class=\"id\" href=\"#ldev\">ldev</a>-><a class=\"id\" href=\"#states\">states</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lstate\">lstate</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#promotion_count\">promotion_count</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lstate\">lstate</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#demotion_count\">demotion_count</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lstate\">lstate</a>-><a class=\"id\" href=\"#threshold\">threshold</a>.<a class=\"id\" href=\"#promotion_count\">promotion_count</a> = <a class=\"id\" href=\"#PROMOTION_COUNT\">PROMOTION_COUNT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lstate\">lstate</a>-><a class=\"id\" href=\"#threshold\">threshold</a>.<a class=\"id\" href=\"#demotion_count\">demotion_count</a> = <a class=\"id\" href=\"#DEMOTION_COUNT\">DEMOTION_COUNT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#state_count\">state_count</a> - 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lstate\">lstate</a>-><a class=\"id\" href=\"#threshold\">threshold</a>.<a class=\"id\" href=\"#promotion_time\">promotion_time</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#exit_latency\">exit_latency</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lstate\">lstate</a>-><a class=\"id\" href=\"#threshold\">threshold</a>.<a class=\"id\" href=\"#demotion_time\">demotion_time</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#exit_latency\">exit_latency</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#cpuidle_governor\">cpuidle_governor</a> <a class=\"id\" href=\"#ladder_governor\">ladder_governor</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a> =<span class=\"ts\"/><span class=\"ts\"/>\"ladder\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#rating\">rating</a> =<span class=\"ts\"/>10,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#enable\">enable</a> =<span class=\"ts\"/><a class=\"id\" href=\"#ladder_enable_device\">ladder_enable_device</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#select\">select</a> =<span class=\"ts\"/><a class=\"id\" href=\"#ladder_select_state\">ladder_select_state</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a> =<span class=\"ts\"/><a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * init_ladder - initializes the governor</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#init_ladder\">init_ladder</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cpuidle_register_governor\">cpuidle_register_governor</a>(&amp;<a class=\"id\" href=\"#ladder_governor\">ladder_governor</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * exit_ladder - exits the governor</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#__exit\">__exit</a> <a class=\"id\" href=\"#exit_ladder\">exit_ladder</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpuidle_unregister_governor\">cpuidle_unregister_governor</a>(&amp;<a class=\"id\" href=\"#ladder_governor\">ladder_governor</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
"<a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#init_ladder\">init_ladder</a>);", 
"<a class=\"id\" href=\"#module_exit\">module_exit</a>(<a class=\"id\" href=\"#exit_ladder\">exit_ladder</a>);", 
];
xr_frag_insert('l/5c/80cb77f584b4ab93fb29ab1d73df444431aba5.xr', __xr_tmp);
