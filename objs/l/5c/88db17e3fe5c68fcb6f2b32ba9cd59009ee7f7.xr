var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Xen event channels</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Xen models interrupts with abstract event channels.  Because each</span>", 
"<span class=\"comment\"> * domain gets 1024 event channels, but NR_IRQ is not that large, we</span>", 
"<span class=\"comment\"> * must dynamically map irqs&lt;-&gt;event channels.  The event channels</span>", 
"<span class=\"comment\"> * interface with the rest of the kernel by defining a xen interrupt</span>", 
"<span class=\"comment\"> * chip.  When an event is recieved, it is mapped to an irq and sent</span>", 
"<span class=\"comment\"> * through the normal interrupt processing path.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * There are four kinds of events which can be mapped to an event</span>", 
"<span class=\"comment\"> * channel:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * 1. Inter-domain notifications.  This includes all the virtual</span>", 
"<span class=\"comment\"> *    device events, since they're driven by front-ends in another domain</span>", 
"<span class=\"comment\"> *    (typically dom0).</span>", 
"<span class=\"comment\"> * 2. VIRQs, typically used for timers.  These are per-cpu events.</span>", 
"<span class=\"comment\"> * 3. IPIs.</span>", 
"<span class=\"comment\"> * 4. Hardware interrupts. Not supported at present.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Jeremy Fitzhardinge &lt;jeremy@xensource.com&gt;, XenSource Inc, 2007</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#linkage\">linkage</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#irq\">irq</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bootmem\">bootmem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
];
xr_frag_insert('l/5c/88db17e3fe5c68fcb6f2b32ba9cd59009ee7f7.xr', __xr_tmp);
