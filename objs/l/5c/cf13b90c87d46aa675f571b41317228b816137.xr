var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  linux/kernel/time/timekeeping.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Kernel timekeeping code and accessor functions</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This code was moved from linux/kernel/timer.c.</span>", 
"<span class=\"comment\"> *  Please see that file for copyright and history logs.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#percpu\">percpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sysdev\">sysdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#clocksource\">clocksource</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jiffies\">jiffies</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#tick\">tick</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#stop_machine\">stop_machine</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* Structure holding internal timekeeping values. */</span>", 
"struct <a class=\"id\" href=\"#timekeeper\">timekeeper</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* Current clocksource used for timekeeping. */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#clocksource\">clocksource</a> *<a class=\"id\" href=\"#clock\">clock</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* The shift value of the current clocksource. */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#shift\">shift</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Number of clock cycles in one NTP interval. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cycle_t\">cycle_t</a> <a class=\"id\" href=\"#cycle_interval\">cycle_interval</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Number of clock shifted nano seconds in one NTP interval. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a><span class=\"ts\"/><a class=\"id\" href=\"#xtime_interval\">xtime_interval</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Raw nano seconds accumulated per NTP interval. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#raw_interval\">raw_interval</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Clock shifted nano seconds remainder not stored in xtime.tv_nsec. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a><span class=\"ts\"/><a class=\"id\" href=\"#xtime_nsec\">xtime_nsec</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Difference between accumulated time and NTP time in ntp</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * shifted nano seconds. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s64\">s64</a><span class=\"ts\"/><a class=\"id\" href=\"#ntp_error\">ntp_error</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Shift conversion between clock shifted nano seconds and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ntp shifted nano seconds. */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#ntp_error_shift\">ntp_error_shift</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* NTP adjusted clock multiplier */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#mult\">mult</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#timekeeper\">timekeeper</a> <a class=\"id\" href=\"#timekeeper\">timekeeper</a>;", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * timekeeper_setup_internals - Set up internals to use clocksource clock.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @clock:<span class=\"ts\"/><span class=\"ts\"/>Pointer to clocksource.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Calculates a fixed cycle/nsec interval for a given clocksource/adjustment</span>", 
"<span class=\"comment\"> * pair and interval request.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Unless you're the timekeeping code, you should not be using this!</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#timekeeper_setup_internals\">timekeeper_setup_internals</a>(struct <a class=\"id\" href=\"#clocksource\">clocksource</a> *<a class=\"id\" href=\"#clock\">clock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cycle_t\">cycle_t</a> <a class=\"id\" href=\"#interval\">interval</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#clock\">clock</a> = <a class=\"id\" href=\"#clock\">clock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clock\">clock</a>-><a class=\"id\" href=\"#cycle_last\">cycle_last</a> = <a class=\"id\" href=\"#clock\">clock</a>-><a class=\"id\" href=\"#read\">read</a>(<a class=\"id\" href=\"#clock\">clock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Do the ns -&gt; cycle conversion first, using original mult */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#NTP_INTERVAL_LENGTH\">NTP_INTERVAL_LENGTH</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> <<= <a class=\"id\" href=\"#clock\">clock</a>-><a class=\"id\" href=\"#shift\">shift</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> += <a class=\"id\" href=\"#clock\">clock</a>-><a class=\"id\" href=\"#mult\">mult</a>/2;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#do_div\">do_div</a>(<a class=\"id\" href=\"#tmp\">tmp</a>, <a class=\"id\" href=\"#clock\">clock</a>-><a class=\"id\" href=\"#mult\">mult</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tmp\">tmp</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#interval\">interval</a> = (<a class=\"id\" href=\"#cycle_t\">cycle_t</a>) <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#cycle_interval\">cycle_interval</a> = <a class=\"id\" href=\"#interval\">interval</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Go back from cycles -&gt; shifted ns */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#xtime_interval\">xtime_interval</a> = (<a class=\"id\" href=\"#u64\">u64</a>) <a class=\"id\" href=\"#interval\">interval</a> * <a class=\"id\" href=\"#clock\">clock</a>-><a class=\"id\" href=\"#mult\">mult</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#raw_interval\">raw_interval</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#u64\">u64</a>) <a class=\"id\" href=\"#interval\">interval</a> * <a class=\"id\" href=\"#clock\">clock</a>-><a class=\"id\" href=\"#mult\">mult</a>) >> <a class=\"id\" href=\"#clock\">clock</a>-><a class=\"id\" href=\"#shift\">shift</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#xtime_nsec\">xtime_nsec</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#shift\">shift</a> = <a class=\"id\" href=\"#clock\">clock</a>-><a class=\"id\" href=\"#shift\">shift</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#ntp_error\">ntp_error</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#ntp_error_shift\">ntp_error_shift</a> = <a class=\"id\" href=\"#NTP_SCALE_SHIFT\">NTP_SCALE_SHIFT</a> - <a class=\"id\" href=\"#clock\">clock</a>-><a class=\"id\" href=\"#shift\">shift</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The timekeeper keeps its own mult values for the currently</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * active clocksource. These value will be adjusted via NTP</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to counteract clock drifting.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#mult\">mult</a> = <a class=\"id\" href=\"#clock\">clock</a>-><a class=\"id\" href=\"#mult\">mult</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Timekeeper helper functions. */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#timekeeping_get_ns\">timekeeping_get_ns</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cycle_t\">cycle_t</a> <a class=\"id\" href=\"#cycle_now\">cycle_now</a>, <a class=\"id\" href=\"#cycle_delta\">cycle_delta</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#clocksource\">clocksource</a> *<a class=\"id\" href=\"#clock\">clock</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* read clocksource: */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clock\">clock</a> = <a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#clock\">clock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cycle_now\">cycle_now</a> = <a class=\"id\" href=\"#clock\">clock</a>-><a class=\"id\" href=\"#read\">read</a>(<a class=\"id\" href=\"#clock\">clock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* calculate the delta since the last update_wall_time: */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cycle_delta\">cycle_delta</a> = (<a class=\"id\" href=\"#cycle_now\">cycle_now</a> - <a class=\"id\" href=\"#clock\">clock</a>-><a class=\"id\" href=\"#cycle_last\">cycle_last</a>) &amp; <a class=\"id\" href=\"#clock\">clock</a>-><a class=\"id\" href=\"#mask\">mask</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* return delta convert to nanoseconds using ntp adjusted mult. */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#clocksource_cyc2ns\">clocksource_cyc2ns</a>(<a class=\"id\" href=\"#cycle_delta\">cycle_delta</a>, <a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#mult\">mult</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#shift\">shift</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#timekeeping_get_ns_raw\">timekeeping_get_ns_raw</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cycle_t\">cycle_t</a> <a class=\"id\" href=\"#cycle_now\">cycle_now</a>, <a class=\"id\" href=\"#cycle_delta\">cycle_delta</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#clocksource\">clocksource</a> *<a class=\"id\" href=\"#clock\">clock</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* read clocksource: */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clock\">clock</a> = <a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#clock\">clock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cycle_now\">cycle_now</a> = <a class=\"id\" href=\"#clock\">clock</a>-><a class=\"id\" href=\"#read\">read</a>(<a class=\"id\" href=\"#clock\">clock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* calculate the delta since the last update_wall_time: */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cycle_delta\">cycle_delta</a> = (<a class=\"id\" href=\"#cycle_now\">cycle_now</a> - <a class=\"id\" href=\"#clock\">clock</a>-><a class=\"id\" href=\"#cycle_last\">cycle_last</a>) &amp; <a class=\"id\" href=\"#clock\">clock</a>-><a class=\"id\" href=\"#mask\">mask</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* return delta convert to nanoseconds using ntp adjusted mult. */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#clocksource_cyc2ns\">clocksource_cyc2ns</a>(<a class=\"id\" href=\"#cycle_delta\">cycle_delta</a>, <a class=\"id\" href=\"#clock\">clock</a>-><a class=\"id\" href=\"#mult\">mult</a>, <a class=\"id\" href=\"#clock\">clock</a>-><a class=\"id\" href=\"#shift\">shift</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This read-write spinlock protects us from races in SMP while</span>", 
"<span class=\"comment\"> * playing with xtime.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#__cacheline_aligned_in_smp\">__cacheline_aligned_in_smp</a> <a class=\"id\" href=\"#DEFINE_SEQLOCK\">DEFINE_SEQLOCK</a>(<a class=\"id\" href=\"#xtime_lock\">xtime_lock</a>);", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The current time</span>", 
"<span class=\"comment\"> * wall_to_monotonic is what we need to add to xtime (or xtime corrected</span>", 
"<span class=\"comment\"> * for sub jiffie times) to get to monotonic time.  Monotonic is pegged</span>", 
"<span class=\"comment\"> * at zero at system boot time, so wall_to_monotonic will be negative,</span>", 
"<span class=\"comment\"> * however, we will ALWAYS keep the tv_nsec part positive so we can use</span>", 
"<span class=\"comment\"> * the usual normalization.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * wall_to_monotonic is moved after resume from suspend for the monotonic</span>", 
"<span class=\"comment\"> * time not to jump. We need to add total_sleep_time to wall_to_monotonic</span>", 
"<span class=\"comment\"> * to get the real boot based time offset.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * - wall_to_monotonic is no longer the boot time, getboottime must be</span>", 
"<span class=\"comment\"> * used instead.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#xtime\">xtime</a> <a class=\"id\" href=\"#__attribute__\">__attribute__</a> ((<a class=\"id\" href=\"#aligned\">aligned</a> (16)));", 
"static struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#wall_to_monotonic\">wall_to_monotonic</a> <a class=\"id\" href=\"#__attribute__\">__attribute__</a> ((<a class=\"id\" href=\"#aligned\">aligned</a> (16)));", 
"static struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#total_sleep_time\">total_sleep_time</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The raw monotonic time for the CLOCK_MONOTONIC_RAW posix clock.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#raw_time\">raw_time</a>;", 
"", 
"<span class=\"comment\">/* flag for if timekeeping is suspended */</span>", 
"int <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> <a class=\"id\" href=\"#timekeeping_suspended\">timekeeping_suspended</a>;", 
"", 
"<span class=\"comment\">/* must hold xtime_lock */</span>", 
"void <a class=\"id\" href=\"#timekeeping_leap_insert\">timekeeping_leap_insert</a>(int <a class=\"id\" href=\"#leapsecond\">leapsecond</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xtime\">xtime</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> += <a class=\"id\" href=\"#leapsecond\">leapsecond</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wall_to_monotonic\">wall_to_monotonic</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> -= <a class=\"id\" href=\"#leapsecond\">leapsecond</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#update_vsyscall\">update_vsyscall</a>(&amp;<a class=\"id\" href=\"#xtime\">xtime</a>, &amp;<a class=\"id\" href=\"#wall_to_monotonic\">wall_to_monotonic</a>, <a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#clock\">clock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#mult\">mult</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * timekeeping_forward_now - update clock to the current time</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Forward the current clock to update its state since the last call to</span>", 
"<span class=\"comment\"> * update_wall_time(). This is useful before significant clock changes,</span>", 
"<span class=\"comment\"> * as it avoids having to deal with this time offset explicitly.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#timekeeping_forward_now\">timekeeping_forward_now</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cycle_t\">cycle_t</a> <a class=\"id\" href=\"#cycle_now\">cycle_now</a>, <a class=\"id\" href=\"#cycle_delta\">cycle_delta</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#clocksource\">clocksource</a> *<a class=\"id\" href=\"#clock\">clock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#nsec\">nsec</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clock\">clock</a> = <a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#clock\">clock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cycle_now\">cycle_now</a> = <a class=\"id\" href=\"#clock\">clock</a>-><a class=\"id\" href=\"#read\">read</a>(<a class=\"id\" href=\"#clock\">clock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cycle_delta\">cycle_delta</a> = (<a class=\"id\" href=\"#cycle_now\">cycle_now</a> - <a class=\"id\" href=\"#clock\">clock</a>-><a class=\"id\" href=\"#cycle_last\">cycle_last</a>) &amp; <a class=\"id\" href=\"#clock\">clock</a>-><a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clock\">clock</a>-><a class=\"id\" href=\"#cycle_last\">cycle_last</a> = <a class=\"id\" href=\"#cycle_now\">cycle_now</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nsec\">nsec</a> = <a class=\"id\" href=\"#clocksource_cyc2ns\">clocksource_cyc2ns</a>(<a class=\"id\" href=\"#cycle_delta\">cycle_delta</a>, <a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#mult\">mult</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#shift\">shift</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If arch requires, add in gettimeoffset() */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nsec\">nsec</a> += <a class=\"id\" href=\"#arch_gettimeoffset\">arch_gettimeoffset</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timespec_add_ns\">timespec_add_ns</a>(&amp;<a class=\"id\" href=\"#xtime\">xtime</a>, <a class=\"id\" href=\"#nsec\">nsec</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nsec\">nsec</a> = <a class=\"id\" href=\"#clocksource_cyc2ns\">clocksource_cyc2ns</a>(<a class=\"id\" href=\"#cycle_delta\">cycle_delta</a>, <a class=\"id\" href=\"#clock\">clock</a>-><a class=\"id\" href=\"#mult\">mult</a>, <a class=\"id\" href=\"#clock\">clock</a>-><a class=\"id\" href=\"#shift\">shift</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timespec_add_ns\">timespec_add_ns</a>(&amp;<a class=\"id\" href=\"#raw_time\">raw_time</a>, <a class=\"id\" href=\"#nsec\">nsec</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * getnstimeofday - Returns the time of day in a timespec</span>", 
"<span class=\"comment\"> * @ts:<span class=\"ts\"/><span class=\"ts\"/>pointer to the timespec to be set</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns the time of day in a timespec.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#getnstimeofday\">getnstimeofday</a>(struct <a class=\"id\" href=\"#timespec\">timespec</a> *<a class=\"id\" href=\"#ts\">ts</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#seq\">seq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#nsecs\">nsecs</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#timekeeping_suspended\">timekeeping_suspended</a>);", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq\">seq</a> = <a class=\"id\" href=\"#read_seqbegin\">read_seqbegin</a>(&amp;<a class=\"id\" href=\"#xtime_lock\">xtime_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#ts\">ts</a> = <a class=\"id\" href=\"#xtime\">xtime</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nsecs\">nsecs</a> = <a class=\"id\" href=\"#timekeeping_get_ns\">timekeeping_get_ns</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If arch requires, add in gettimeoffset() */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nsecs\">nsecs</a> += <a class=\"id\" href=\"#arch_gettimeoffset\">arch_gettimeoffset</a>();", 
"", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#read_seqretry\">read_seqretry</a>(&amp;<a class=\"id\" href=\"#xtime_lock\">xtime_lock</a>, <a class=\"id\" href=\"#seq\">seq</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timespec_add_ns\">timespec_add_ns</a>(<a class=\"id\" href=\"#ts\">ts</a>, <a class=\"id\" href=\"#nsecs\">nsecs</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#getnstimeofday\">getnstimeofday</a>);", 
"", 
"<a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#ktime_get\">ktime_get</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#seq\">seq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#secs\">secs</a>, <a class=\"id\" href=\"#nsecs\">nsecs</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#timekeeping_suspended\">timekeeping_suspended</a>);", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq\">seq</a> = <a class=\"id\" href=\"#read_seqbegin\">read_seqbegin</a>(&amp;<a class=\"id\" href=\"#xtime_lock\">xtime_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#secs\">secs</a> = <a class=\"id\" href=\"#xtime\">xtime</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> + <a class=\"id\" href=\"#wall_to_monotonic\">wall_to_monotonic</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nsecs\">nsecs</a> = <a class=\"id\" href=\"#xtime\">xtime</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> + <a class=\"id\" href=\"#wall_to_monotonic\">wall_to_monotonic</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nsecs\">nsecs</a> += <a class=\"id\" href=\"#timekeeping_get_ns\">timekeeping_get_ns</a>();", 
"", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#read_seqretry\">read_seqretry</a>(&amp;<a class=\"id\" href=\"#xtime_lock\">xtime_lock</a>, <a class=\"id\" href=\"#seq\">seq</a>));", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Use ktime_set/ktime_add_ns to create a proper ktime on</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 32-bit architectures without CONFIG_KTIME_SCALAR.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ktime_add_ns\">ktime_add_ns</a>(<a class=\"id\" href=\"#ktime_set\">ktime_set</a>(<a class=\"id\" href=\"#secs\">secs</a>, 0), <a class=\"id\" href=\"#nsecs\">nsecs</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ktime_get\">ktime_get</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * ktime_get_ts - get the monotonic clock in timespec format</span>", 
"<span class=\"comment\"> * @ts:<span class=\"ts\"/><span class=\"ts\"/>pointer to timespec variable</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The function calculates the monotonic clock from the realtime</span>", 
"<span class=\"comment\"> * clock and the wall_to_monotonic offset and stores the result</span>", 
"<span class=\"comment\"> * in normalized timespec format in the variable pointed to by @ts.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#ktime_get_ts\">ktime_get_ts</a>(struct <a class=\"id\" href=\"#timespec\">timespec</a> *<a class=\"id\" href=\"#ts\">ts</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#tomono\">tomono</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#seq\">seq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#nsecs\">nsecs</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#timekeeping_suspended\">timekeeping_suspended</a>);", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq\">seq</a> = <a class=\"id\" href=\"#read_seqbegin\">read_seqbegin</a>(&amp;<a class=\"id\" href=\"#xtime_lock\">xtime_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#ts\">ts</a> = <a class=\"id\" href=\"#xtime\">xtime</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tomono\">tomono</a> = <a class=\"id\" href=\"#wall_to_monotonic\">wall_to_monotonic</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nsecs\">nsecs</a> = <a class=\"id\" href=\"#timekeeping_get_ns\">timekeeping_get_ns</a>();", 
"", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#read_seqretry\">read_seqretry</a>(&amp;<a class=\"id\" href=\"#xtime_lock\">xtime_lock</a>, <a class=\"id\" href=\"#seq\">seq</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_normalized_timespec\">set_normalized_timespec</a>(<a class=\"id\" href=\"#ts\">ts</a>, <a class=\"id\" href=\"#ts\">ts</a>-><a class=\"id\" href=\"#tv_sec\">tv_sec</a> + <a class=\"id\" href=\"#tomono\">tomono</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ts\">ts</a>-><a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> + <a class=\"id\" href=\"#tomono\">tomono</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> + <a class=\"id\" href=\"#nsecs\">nsecs</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ktime_get_ts\">ktime_get_ts</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * do_gettimeofday - Returns the time of day in a timeval</span>", 
"<span class=\"comment\"> * @tv:<span class=\"ts\"/><span class=\"ts\"/>pointer to the timeval to be set</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NOTE: Users should be converted to using getnstimeofday()</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#do_gettimeofday\">do_gettimeofday</a>(struct <a class=\"id\" href=\"#timeval\">timeval</a> *<a class=\"id\" href=\"#tv\">tv</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#now\">now</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#getnstimeofday\">getnstimeofday</a>(&amp;<a class=\"id\" href=\"#now\">now</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tv\">tv</a>-><a class=\"id\" href=\"#tv_sec\">tv_sec</a> = <a class=\"id\" href=\"#now\">now</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tv\">tv</a>-><a class=\"id\" href=\"#tv_usec\">tv_usec</a> = <a class=\"id\" href=\"#now\">now</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a>/1000;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#do_gettimeofday\">do_gettimeofday</a>);", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * do_settimeofday - Sets the time of day</span>", 
"<span class=\"comment\"> * @tv:<span class=\"ts\"/><span class=\"ts\"/>pointer to the timespec variable containing the new time</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Sets the time of day to the new time and update NTP and notify hrtimers</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#do_settimeofday\">do_settimeofday</a>(struct <a class=\"id\" href=\"#timespec\">timespec</a> *<a class=\"id\" href=\"#tv\">tv</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#ts_delta\">ts_delta</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/>if ((unsigned long)<a class=\"id\" href=\"#tv\">tv</a>-><a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> >= <a class=\"id\" href=\"#NSEC_PER_SEC\">NSEC_PER_SEC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_seqlock_irqsave\">write_seqlock_irqsave</a>(&amp;<a class=\"id\" href=\"#xtime_lock\">xtime_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timekeeping_forward_now\">timekeeping_forward_now</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ts_delta\">ts_delta</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> = <a class=\"id\" href=\"#tv\">tv</a>-><a class=\"id\" href=\"#tv_sec\">tv_sec</a> - <a class=\"id\" href=\"#xtime\">xtime</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ts_delta\">ts_delta</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> = <a class=\"id\" href=\"#tv\">tv</a>-><a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> - <a class=\"id\" href=\"#xtime\">xtime</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wall_to_monotonic\">wall_to_monotonic</a> = <a class=\"id\" href=\"#timespec_sub\">timespec_sub</a>(<a class=\"id\" href=\"#wall_to_monotonic\">wall_to_monotonic</a>, <a class=\"id\" href=\"#ts_delta\">ts_delta</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xtime\">xtime</a> = *<a class=\"id\" href=\"#tv\">tv</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#ntp_error\">ntp_error</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ntp_clear\">ntp_clear</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#update_vsyscall\">update_vsyscall</a>(&amp;<a class=\"id\" href=\"#xtime\">xtime</a>, &amp;<a class=\"id\" href=\"#wall_to_monotonic\">wall_to_monotonic</a>, <a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#clock\">clock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#mult\">mult</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_sequnlock_irqrestore\">write_sequnlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#xtime_lock\">xtime_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* signal hrtimers about time change */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clock_was_set\">clock_was_set</a>();", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#do_settimeofday\">do_settimeofday</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * change_clocksource - Swaps clocksources if a new one is available</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Accumulates current time interval and initializes new clocksource</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#change_clocksource\">change_clocksource</a>(void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#clocksource\">clocksource</a> *<a class=\"id\" href=\"#new\">new</a>, *<a class=\"id\" href=\"#old\">old</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a> = (struct <a class=\"id\" href=\"#clocksource\">clocksource</a> *) <a class=\"id\" href=\"#data\">data</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timekeeping_forward_now\">timekeeping_forward_now</a>();", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#enable\">enable</a> || <a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#enable\">enable</a>(<a class=\"id\" href=\"#new\">new</a>) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old\">old</a> = <a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#clock\">clock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timekeeper_setup_internals\">timekeeper_setup_internals</a>(<a class=\"id\" href=\"#new\">new</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#disable\">disable</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#disable\">disable</a>(<a class=\"id\" href=\"#old\">old</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * timekeeping_notify - Install a new clock source</span>", 
"<span class=\"comment\"> * @clock:<span class=\"ts\"/><span class=\"ts\"/>pointer to the clock source</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This function is called from clocksource.c after a new, better clock</span>", 
"<span class=\"comment\"> * source has been registered. The caller holds the clocksource_mutex.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#timekeeping_notify\">timekeeping_notify</a>(struct <a class=\"id\" href=\"#clocksource\">clocksource</a> *<a class=\"id\" href=\"#clock\">clock</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#clock\">clock</a> == <a class=\"id\" href=\"#clock\">clock</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stop_machine\">stop_machine</a>(<a class=\"id\" href=\"#change_clocksource\">change_clocksource</a>, <a class=\"id\" href=\"#clock\">clock</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tick_clock_notify\">tick_clock_notify</a>();", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * ktime_get_real - get the real (wall-) time in ktime_t format</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * returns the time in ktime_t format</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#ktime_get_real\">ktime_get_real</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#now\">now</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#getnstimeofday\">getnstimeofday</a>(&amp;<a class=\"id\" href=\"#now\">now</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#timespec_to_ktime\">timespec_to_ktime</a>(<a class=\"id\" href=\"#now\">now</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ktime_get_real\">ktime_get_real</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * getrawmonotonic - Returns the raw monotonic time in a timespec</span>", 
"<span class=\"comment\"> * @ts:<span class=\"ts\"/><span class=\"ts\"/>pointer to the timespec to be set</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns the raw monotonic time (completely un-modified by ntp)</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#getrawmonotonic\">getrawmonotonic</a>(struct <a class=\"id\" href=\"#timespec\">timespec</a> *<a class=\"id\" href=\"#ts\">ts</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#seq\">seq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#nsecs\">nsecs</a>;", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq\">seq</a> = <a class=\"id\" href=\"#read_seqbegin\">read_seqbegin</a>(&amp;<a class=\"id\" href=\"#xtime_lock\">xtime_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nsecs\">nsecs</a> = <a class=\"id\" href=\"#timekeeping_get_ns_raw\">timekeeping_get_ns_raw</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#ts\">ts</a> = <a class=\"id\" href=\"#raw_time\">raw_time</a>;", 
"", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#read_seqretry\">read_seqretry</a>(&amp;<a class=\"id\" href=\"#xtime_lock\">xtime_lock</a>, <a class=\"id\" href=\"#seq\">seq</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timespec_add_ns\">timespec_add_ns</a>(<a class=\"id\" href=\"#ts\">ts</a>, <a class=\"id\" href=\"#nsecs\">nsecs</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#getrawmonotonic\">getrawmonotonic</a>);", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * timekeeping_valid_for_hres - Check if timekeeping is suitable for hres</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#timekeeping_valid_for_hres\">timekeeping_valid_for_hres</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#seq\">seq</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq\">seq</a> = <a class=\"id\" href=\"#read_seqbegin\">read_seqbegin</a>(&amp;<a class=\"id\" href=\"#xtime_lock\">xtime_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#clock\">clock</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#CLOCK_SOURCE_VALID_FOR_HRES\">CLOCK_SOURCE_VALID_FOR_HRES</a>;", 
"", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#read_seqretry\">read_seqretry</a>(&amp;<a class=\"id\" href=\"#xtime_lock\">xtime_lock</a>, <a class=\"id\" href=\"#seq\">seq</a>));", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * timekeeping_max_deferment - Returns max time the clocksource can be deferred</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Caller must observe xtime_lock via read_seqbegin/read_seqretry to</span>", 
"<span class=\"comment\"> * ensure that the clocksource does not change!</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#timekeeping_max_deferment\">timekeeping_max_deferment</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#clock\">clock</a>-><a class=\"id\" href=\"#max_idle_ns\">max_idle_ns</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * read_persistent_clock -  Return time from the persistent clock.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Weak dummy function for arches that do not yet support it.</span>", 
"<span class=\"comment\"> * Reads the time from the battery backed persistent clock.</span>", 
"<span class=\"comment\"> * Returns a timespec with tv_sec=0 and tv_nsec=0 if unsupported.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  XXX - Do be sure to remove it once all arches implement it.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#weak\">weak</a>)) <a class=\"id\" href=\"#read_persistent_clock\">read_persistent_clock</a>(struct <a class=\"id\" href=\"#timespec\">timespec</a> *<a class=\"id\" href=\"#ts\">ts</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ts\">ts</a>-><a class=\"id\" href=\"#tv_sec\">tv_sec</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ts\">ts</a>-><a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> = 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * read_boot_clock -  Return time of the system start.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Weak dummy function for arches that do not yet support it.</span>", 
"<span class=\"comment\"> * Function to read the exact time the system has been started.</span>", 
"<span class=\"comment\"> * Returns a timespec with tv_sec=0 and tv_nsec=0 if unsupported.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  XXX - Do be sure to remove it once all arches implement it.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#weak\">weak</a>)) <a class=\"id\" href=\"#read_boot_clock\">read_boot_clock</a>(struct <a class=\"id\" href=\"#timespec\">timespec</a> *<a class=\"id\" href=\"#ts\">ts</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ts\">ts</a>-><a class=\"id\" href=\"#tv_sec\">tv_sec</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ts\">ts</a>-><a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> = 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * timekeeping_init - Initializes the clocksource and common timekeeping values</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#timekeeping_init\">timekeeping_init</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#clocksource\">clocksource</a> *<a class=\"id\" href=\"#clock\">clock</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#now\">now</a>, <a class=\"id\" href=\"#boot\">boot</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_persistent_clock\">read_persistent_clock</a>(&amp;<a class=\"id\" href=\"#now\">now</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_boot_clock\">read_boot_clock</a>(&amp;<a class=\"id\" href=\"#boot\">boot</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_seqlock_irqsave\">write_seqlock_irqsave</a>(&amp;<a class=\"id\" href=\"#xtime_lock\">xtime_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ntp_init\">ntp_init</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clock\">clock</a> = <a class=\"id\" href=\"#clocksource_default_clock\">clocksource_default_clock</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#clock\">clock</a>-><a class=\"id\" href=\"#enable\">enable</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clock\">clock</a>-><a class=\"id\" href=\"#enable\">enable</a>(<a class=\"id\" href=\"#clock\">clock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timekeeper_setup_internals\">timekeeper_setup_internals</a>(<a class=\"id\" href=\"#clock\">clock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xtime\">xtime</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> = <a class=\"id\" href=\"#now\">now</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xtime\">xtime</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> = <a class=\"id\" href=\"#now\">now</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_time\">raw_time</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_time\">raw_time</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#boot\">boot</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> == 0 && <a class=\"id\" href=\"#boot\">boot</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#boot\">boot</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> = <a class=\"id\" href=\"#xtime\">xtime</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#boot\">boot</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> = <a class=\"id\" href=\"#xtime\">xtime</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_normalized_timespec\">set_normalized_timespec</a>(&amp;<a class=\"id\" href=\"#wall_to_monotonic\">wall_to_monotonic</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>-<a class=\"id\" href=\"#boot\">boot</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a>, -<a class=\"id\" href=\"#boot\">boot</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#total_sleep_time\">total_sleep_time</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#total_sleep_time\">total_sleep_time</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_sequnlock_irqrestore\">write_sequnlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#xtime_lock\">xtime_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"<span class=\"comment\">/* time in seconds when suspend began */</span>", 
"static struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#timekeeping_suspend_time\">timekeeping_suspend_time</a>;", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * timekeeping_resume - Resumes the generic timekeeping subsystem.</span>", 
"<span class=\"comment\"> * @dev:<span class=\"ts\"/>unused</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is for the generic clocksource timekeeping.</span>", 
"<span class=\"comment\"> * xtime/wall_to_monotonic/jiffies/etc are</span>", 
"<span class=\"comment\"> * still managed by arch specific suspend/resume code.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#timekeeping_resume\">timekeeping_resume</a>(struct <a class=\"id\" href=\"#sys_device\">sys_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#ts\">ts</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_persistent_clock\">read_persistent_clock</a>(&amp;<a class=\"id\" href=\"#ts\">ts</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clocksource_resume\">clocksource_resume</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_seqlock_irqsave\">write_seqlock_irqsave</a>(&amp;<a class=\"id\" href=\"#xtime_lock\">xtime_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#timespec_compare\">timespec_compare</a>(&amp;<a class=\"id\" href=\"#ts\">ts</a>, &amp;<a class=\"id\" href=\"#timekeeping_suspend_time\">timekeeping_suspend_time</a>) &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ts\">ts</a> = <a class=\"id\" href=\"#timespec_sub\">timespec_sub</a>(<a class=\"id\" href=\"#ts\">ts</a>, <a class=\"id\" href=\"#timekeeping_suspend_time\">timekeeping_suspend_time</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xtime\">xtime</a> = <a class=\"id\" href=\"#timespec_add\">timespec_add</a>(<a class=\"id\" href=\"#xtime\">xtime</a>, <a class=\"id\" href=\"#ts\">ts</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wall_to_monotonic\">wall_to_monotonic</a> = <a class=\"id\" href=\"#timespec_sub\">timespec_sub</a>(<a class=\"id\" href=\"#wall_to_monotonic\">wall_to_monotonic</a>, <a class=\"id\" href=\"#ts\">ts</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#total_sleep_time\">total_sleep_time</a> = <a class=\"id\" href=\"#timespec_add\">timespec_add</a>(<a class=\"id\" href=\"#total_sleep_time\">total_sleep_time</a>, <a class=\"id\" href=\"#ts\">ts</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* re-base the last cycle value */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#clock\">clock</a>-><a class=\"id\" href=\"#cycle_last\">cycle_last</a> = <a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#clock\">clock</a>-><a class=\"id\" href=\"#read\">read</a>(<a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#clock\">clock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#ntp_error\">ntp_error</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timekeeping_suspended\">timekeeping_suspended</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_sequnlock_irqrestore\">write_sequnlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#xtime_lock\">xtime_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#touch_softlockup_watchdog\">touch_softlockup_watchdog</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clockevents_notify\">clockevents_notify</a>(<a class=\"id\" href=\"#CLOCK_EVT_NOTIFY_RESUME\">CLOCK_EVT_NOTIFY_RESUME</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Resume hrtimers */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hres_timers_resume\">hres_timers_resume</a>();", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#timekeeping_suspend\">timekeeping_suspend</a>(struct <a class=\"id\" href=\"#sys_device\">sys_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pm_message_t\">pm_message_t</a> <a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_persistent_clock\">read_persistent_clock</a>(&amp;<a class=\"id\" href=\"#timekeeping_suspend_time\">timekeeping_suspend_time</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_seqlock_irqsave\">write_seqlock_irqsave</a>(&amp;<a class=\"id\" href=\"#xtime_lock\">xtime_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timekeeping_forward_now\">timekeeping_forward_now</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timekeeping_suspended\">timekeeping_suspended</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_sequnlock_irqrestore\">write_sequnlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#xtime_lock\">xtime_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clockevents_notify\">clockevents_notify</a>(<a class=\"id\" href=\"#CLOCK_EVT_NOTIFY_SUSPEND\">CLOCK_EVT_NOTIFY_SUSPEND</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clocksource_suspend\">clocksource_suspend</a>();", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* sysfs resume/suspend bits for timekeeping */</span>", 
"static struct <a class=\"id\" href=\"#sysdev_class\">sysdev_class</a> <a class=\"id\" href=\"#timekeeping_sysclass\">timekeeping_sysclass</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= \"timekeeping\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#resume\">resume</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#timekeeping_resume\">timekeeping_resume</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#suspend\">suspend</a><span class=\"ts\"/>= <a class=\"id\" href=\"#timekeeping_suspend\">timekeeping_suspend</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#sys_device\">sys_device</a> <a class=\"id\" href=\"#device_timer\">device_timer</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#id\">id</a><span class=\"ts\"/><span class=\"ts\"/>= 0,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#cls\">cls</a><span class=\"ts\"/><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#timekeeping_sysclass\">timekeeping_sysclass</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#timekeeping_init_device\">timekeeping_init_device</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#sysdev_class_register\">sysdev_class_register</a>(&amp;<a class=\"id\" href=\"#timekeeping_sysclass\">timekeeping_sysclass</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#sysdev_register\">sysdev_register</a>(&amp;<a class=\"id\" href=\"#device_timer\">device_timer</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#device_initcall\">device_initcall</a>(<a class=\"id\" href=\"#timekeeping_init_device\">timekeeping_init_device</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * If the error is already larger, we look ahead even further</span>", 
"<span class=\"comment\"> * to compensate for late or lost adjustments.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#__always_inline\">__always_inline</a> int <a class=\"id\" href=\"#timekeeping_bigadjust\">timekeeping_bigadjust</a>(<a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#error\">error</a>, <a class=\"id\" href=\"#s64\">s64</a> *<a class=\"id\" href=\"#interval\">interval</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#s64\">s64</a> *<a class=\"id\" href=\"#offset\">offset</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#tick_error\">tick_error</a>, <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#look_ahead\">look_ahead</a>, <a class=\"id\" href=\"#adj\">adj</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s32\">s32</a> <a class=\"id\" href=\"#error2\">error2</a>, <a class=\"id\" href=\"#mult\">mult</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Use the current error value to determine how much to look ahead.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The larger the error the slower we adjust for it to avoid problems</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * with losing too many ticks, otherwise we would overadjust and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * produce an even larger error.  The smaller the adjustment the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * faster we try to adjust for it, as lost ticks can do less harm</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * here.  This is tuned so that an error of about 1 msec is adjusted</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * within about 1 sec (or 2^20 nsec in 2^SHIFT_HZ ticks).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error2\">error2</a> = <a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#ntp_error\">ntp_error</a> >> (<a class=\"id\" href=\"#NTP_SCALE_SHIFT\">NTP_SCALE_SHIFT</a> + 22 - 2 * <a class=\"id\" href=\"#SHIFT_HZ\">SHIFT_HZ</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error2\">error2</a> = <a class=\"id\" href=\"#abs\">abs</a>(<a class=\"id\" href=\"#error2\">error2</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#look_ahead\">look_ahead</a> = 0; <a class=\"id\" href=\"#error2\">error2</a> &gt; 0; <a class=\"id\" href=\"#look_ahead\">look_ahead</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error2\">error2</a> >>= 2;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Now calculate the error in (1 &lt;&lt; look_ahead) ticks, but first</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * remove the single look ahead already included in the error.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tick_error\">tick_error</a> = <a class=\"id\" href=\"#tick_length\">tick_length</a> >> (<a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#ntp_error_shift\">ntp_error_shift</a> + 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tick_error\">tick_error</a> -= <a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#xtime_interval\">xtime_interval</a> >> 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = ((<a class=\"id\" href=\"#error\">error</a> - <a class=\"id\" href=\"#tick_error\">tick_error</a>) >> <a class=\"id\" href=\"#look_ahead\">look_ahead</a>) + <a class=\"id\" href=\"#tick_error\">tick_error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Finally calculate the adjustment shift value.  */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = *<a class=\"id\" href=\"#interval\">interval</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mult\">mult</a> = 1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#interval\">interval</a> = -*<a class=\"id\" href=\"#interval\">interval</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#offset\">offset</a> = -*<a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mult\">mult</a> = -1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#adj\">adj</a> = 0; <a class=\"id\" href=\"#error\">error</a> &gt; <a class=\"id\" href=\"#i\">i</a>; <a class=\"id\" href=\"#adj\">adj</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> >>= 1;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#interval\">interval</a> <<= <a class=\"id\" href=\"#adj\">adj</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#offset\">offset</a> <<= <a class=\"id\" href=\"#adj\">adj</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#mult\">mult</a> << <a class=\"id\" href=\"#adj\">adj</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Adjust the multiplier to reduce the error value,</span>", 
"<span class=\"comment\"> * this is optimized for the most common adjustments of -1,0,1,</span>", 
"<span class=\"comment\"> * for other values we can do a bit more work.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#timekeeping_adjust\">timekeeping_adjust</a>(<a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#offset\">offset</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#error\">error</a>, <a class=\"id\" href=\"#interval\">interval</a> = <a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#cycle_interval\">cycle_interval</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#adj\">adj</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#ntp_error\">ntp_error</a> >> (<a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#ntp_error_shift\">ntp_error_shift</a> - 1);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> &gt; <a class=\"id\" href=\"#interval\">interval</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> >>= 2;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#error\">error</a> <= <a class=\"id\" href=\"#interval\">interval</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#adj\">adj</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#adj\">adj</a> = <a class=\"id\" href=\"#timekeeping_bigadjust\">timekeeping_bigadjust</a>(<a class=\"id\" href=\"#error\">error</a>, &amp;<a class=\"id\" href=\"#interval\">interval</a>, &amp;<a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#error\">error</a> &lt; -<a class=\"id\" href=\"#interval\">interval</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> >>= 2;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#error\">error</a> >= -<a class=\"id\" href=\"#interval\">interval</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#adj\">adj</a> = -1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#interval\">interval</a> = -<a class=\"id\" href=\"#interval\">interval</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = -<a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#adj\">adj</a> = <a class=\"id\" href=\"#timekeeping_bigadjust\">timekeeping_bigadjust</a>(<a class=\"id\" href=\"#error\">error</a>, &amp;<a class=\"id\" href=\"#interval\">interval</a>, &amp;<a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#mult\">mult</a> += <a class=\"id\" href=\"#adj\">adj</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#xtime_interval\">xtime_interval</a> += <a class=\"id\" href=\"#interval\">interval</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#xtime_nsec\">xtime_nsec</a> -= <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#ntp_error\">ntp_error</a> -= (<a class=\"id\" href=\"#interval\">interval</a> - <a class=\"id\" href=\"#offset\">offset</a>) <<", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#ntp_error_shift\">ntp_error_shift</a>;", 
"}", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * logarithmic_accumulation - shifted accumulation of cycles</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This functions accumulates a shifted interval of cycles into</span>", 
"<span class=\"comment\"> * into a shifted interval nanoseconds. Allows for O(log) accumulation</span>", 
"<span class=\"comment\"> * loop.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns the unconsumed cycles.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#cycle_t\">cycle_t</a> <a class=\"id\" href=\"#logarithmic_accumulation\">logarithmic_accumulation</a>(<a class=\"id\" href=\"#cycle_t\">cycle_t</a> <a class=\"id\" href=\"#offset\">offset</a>, int <a class=\"id\" href=\"#shift\">shift</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#nsecps\">nsecps</a> = (<a class=\"id\" href=\"#u64\">u64</a>)<a class=\"id\" href=\"#NSEC_PER_SEC\">NSEC_PER_SEC</a> << <a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#shift\">shift</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#raw_nsecs\">raw_nsecs</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If the offset is smaller then a shifted interval, do nothing */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#offset\">offset</a> &lt; <a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#cycle_interval\">cycle_interval</a><<<a class=\"id\" href=\"#shift\">shift</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#offset\">offset</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Accumulate one shifted interval */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> -= <a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#cycle_interval\">cycle_interval</a> << <a class=\"id\" href=\"#shift\">shift</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#clock\">clock</a>-><a class=\"id\" href=\"#cycle_last\">cycle_last</a> += <a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#cycle_interval\">cycle_interval</a> << <a class=\"id\" href=\"#shift\">shift</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#xtime_nsec\">xtime_nsec</a> += <a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#xtime_interval\">xtime_interval</a> << <a class=\"id\" href=\"#shift\">shift</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#xtime_nsec\">xtime_nsec</a> >= <a class=\"id\" href=\"#nsecps\">nsecps</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#xtime_nsec\">xtime_nsec</a> -= <a class=\"id\" href=\"#nsecps\">nsecps</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xtime\">xtime</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#second_overflow\">second_overflow</a>();", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Accumulate raw time */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_nsecs\">raw_nsecs</a> = <a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#raw_interval\">raw_interval</a> << <a class=\"id\" href=\"#shift\">shift</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_nsecs\">raw_nsecs</a> += <a class=\"id\" href=\"#raw_time\">raw_time</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#raw_nsecs\">raw_nsecs</a> >= <a class=\"id\" href=\"#NSEC_PER_SEC\">NSEC_PER_SEC</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#raw_secs\">raw_secs</a> = <a class=\"id\" href=\"#raw_nsecs\">raw_nsecs</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_nsecs\">raw_nsecs</a> = <a class=\"id\" href=\"#do_div\">do_div</a>(<a class=\"id\" href=\"#raw_secs\">raw_secs</a>, <a class=\"id\" href=\"#NSEC_PER_SEC\">NSEC_PER_SEC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_time\">raw_time</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> += <a class=\"id\" href=\"#raw_secs\">raw_secs</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_time\">raw_time</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> = <a class=\"id\" href=\"#raw_nsecs\">raw_nsecs</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Accumulate error between NTP and clock interval */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#ntp_error\">ntp_error</a> += <a class=\"id\" href=\"#tick_length\">tick_length</a> << <a class=\"id\" href=\"#shift\">shift</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#ntp_error\">ntp_error</a> -= <a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#xtime_interval\">xtime_interval</a> <<", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#ntp_error_shift\">ntp_error_shift</a> + <a class=\"id\" href=\"#shift\">shift</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#offset\">offset</a>;", 
"}", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * update_wall_time - Uses the current clocksource to increment the wall time</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Called from the timer interrupt, must hold a write on xtime_lock.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#update_wall_time\">update_wall_time</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#clocksource\">clocksource</a> *<a class=\"id\" href=\"#clock\">clock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cycle_t\">cycle_t</a> <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#shift\">shift</a> = 0, <a class=\"id\" href=\"#maxshift\">maxshift</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Make sure we're fully resumed: */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#timekeeping_suspended\">timekeeping_suspended</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clock\">clock</a> = <a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#clock\">clock</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_ARCH_USES_GETTIMEOFFSET\">CONFIG_ARCH_USES_GETTIMEOFFSET</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#timekeeper\">timekeeper</a>.<a class=\"id\" href=\"#cycle_interval\">cycle_interval</a>;", 
"#else", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = (<a class=\"id\" href=\"#clock\">clock</a>-><a class=\"id\" href=\"#read\">read</a>(<a class=\"id\" href=\"#clock\">clock</a>) - <a class=\"id\" href=\"#clock\">clock</a>-><a class=\"id\" href=\"#cycle_last\">cycle_last</a>) &amp; <a class=\"id\" href=\"#clock\">clock</a>-><a class=\"id\" href=\"#mask\">mask</a>;", 
];
xr_frag_insert('l/5c/cf13b90c87d46aa675f571b41317228b816137.xr', __xr_tmp);
