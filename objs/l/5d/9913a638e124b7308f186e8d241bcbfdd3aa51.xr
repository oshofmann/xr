var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_ASM_X86_PROCESSOR_H\">_ASM_X86_PROCESSOR_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_ASM_X86_PROCESSOR_H\">_ASM_X86_PROCESSOR_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#processor\">processor</a>-<a class=\"id\" href=\"#flags\">flags</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* Forward declaration, a strange C thing */</span>", 
"struct <a class=\"id\" href=\"#task_struct\">task_struct</a>;", 
"struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a>;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#vm86\">vm86</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#math_emu\">math_emu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#segment\">segment</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#sigcontext\">sigcontext</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#current\">current</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#cpufeature\">cpufeature</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#system\">system</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#page\">page</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#pgtable_types\">pgtable_types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#percpu\">percpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#msr\">msr</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#desc_defs\">desc_defs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#nops\">nops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#personality\">personality</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cpumask\">cpumask</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cache\">cache</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#threads\">threads</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#math64\">math64</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#err\">err</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HBP_NUM\">HBP_NUM</a> 4", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Default implementation of macro that returns current</span>", 
"<span class=\"comment\"> * instruction pointer (\"program counter\").</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void *<a class=\"id\" href=\"#current_text_addr\">current_text_addr</a>(void)", 
"{", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#pc\">pc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"mov $1f, %0; 1:\":\"=r\" (<a class=\"id\" href=\"#pc\">pc</a>));", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pc\">pc</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_VSMP\">CONFIG_X86_VSMP</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARCH_MIN_TASKALIGN\">ARCH_MIN_TASKALIGN</a><span class=\"ts\"/><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#INTERNODE_CACHE_SHIFT\">INTERNODE_CACHE_SHIFT</a>)", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARCH_MIN_MMSTRUCT_ALIGN\">ARCH_MIN_MMSTRUCT_ALIGN</a><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#INTERNODE_CACHE_SHIFT\">INTERNODE_CACHE_SHIFT</a>)", 
"#else", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARCH_MIN_TASKALIGN\">ARCH_MIN_TASKALIGN</a><span class=\"ts\"/><span class=\"ts\"/>16", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARCH_MIN_MMSTRUCT_ALIGN\">ARCH_MIN_MMSTRUCT_ALIGN</a><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  CPU type and hardware bug flags. Kept separately for each CPU.</span>", 
"<span class=\"comment\"> *  Members of this structure are referenced in head.S, so think twice</span>", 
"<span class=\"comment\"> *  before touching them. [mj]</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x86\">x86</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* CPU family */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x86_vendor\">x86_vendor</a>;<span class=\"ts\"/><span class=\"comment\">/* CPU vendor */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x86_model\">x86_model</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x86_mask\">x86_mask</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wp_works_ok\">wp_works_ok</a>;<span class=\"ts\"/><span class=\"comment\">/* It doesn't on 386's */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Problems on some 486Dx4's and old 386's: */</span>", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlt_works_ok\">hlt_works_ok</a>;", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hard_math\">hard_math</a>;", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rfu\">rfu</a>;", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fdiv_bug\">fdiv_bug</a>;", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#f00f_bug\">f00f_bug</a>;", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#coma_bug\">coma_bug</a>;", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pad0\">pad0</a>;", 
"#else", 
"<span class=\"ts\"/><span class=\"comment\">/* Number of 4K pages in DTLB/ITLB combined(in pages): */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x86_tlbsize\">x86_tlbsize</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x86_virt_bits\">x86_virt_bits</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x86_phys_bits\">x86_phys_bits</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* CPUID returned core id bits: */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x86_coreid_bits\">x86_coreid_bits</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Max extended CPUID function supported: */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#extended_cpuid_level\">extended_cpuid_level</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Maximum supported CPUID level, -1=no CPUID: */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpuid_level\">cpuid_level</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x86_capability\">x86_capability</a>[<a class=\"id\" href=\"#NCAPINTS\">NCAPINTS</a>];", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x86_vendor_id\">x86_vendor_id</a>[16];", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x86_model_id\">x86_model_id</a>[64];", 
"<span class=\"ts\"/><span class=\"comment\">/* in KB - valid for CPUS which support this call: */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x86_cache_size\">x86_cache_size</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x86_cache_alignment\">x86_cache_alignment</a>;<span class=\"ts\"/><span class=\"comment\">/* In bytes */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x86_power\">x86_power</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#loops_per_jiffy\">loops_per_jiffy</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* cpus sharing the last level cache: */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpumask_var_t\">cpumask_var_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#llc_shared_map\">llc_shared_map</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* cpuid returned max cores value: */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#x86_max_cores\">x86_max_cores</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#apicid\">apicid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#initial_apicid\">initial_apicid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x86_clflush_size\">x86_clflush_size</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* number of cores as seen by the OS: */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#booted_cores\">booted_cores</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Physical processor id: */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#phys_proc_id\">phys_proc_id</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Core id: */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu_core_id\">cpu_core_id</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Index into per_cpu list: */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu_index\">cpu_index</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"} <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#__aligned__\">__aligned__</a>(<a class=\"id\" href=\"#SMP_CACHE_BYTES\">SMP_CACHE_BYTES</a>)));", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#X86_VENDOR_INTEL\">X86_VENDOR_INTEL</a><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#X86_VENDOR_CYRIX\">X86_VENDOR_CYRIX</a><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#X86_VENDOR_AMD\">X86_VENDOR_AMD</a><span class=\"ts\"/><span class=\"ts\"/>2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#X86_VENDOR_UMC\">X86_VENDOR_UMC</a><span class=\"ts\"/><span class=\"ts\"/>3", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#X86_VENDOR_CENTAUR\">X86_VENDOR_CENTAUR</a><span class=\"ts\"/>5", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#X86_VENDOR_TRANSMETA\">X86_VENDOR_TRANSMETA</a><span class=\"ts\"/>7", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#X86_VENDOR_NSC\">X86_VENDOR_NSC</a><span class=\"ts\"/><span class=\"ts\"/>8", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#X86_VENDOR_NUM\">X86_VENDOR_NUM</a><span class=\"ts\"/><span class=\"ts\"/>9", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#X86_VENDOR_UNKNOWN\">X86_VENDOR_UNKNOWN</a><span class=\"ts\"/>0xff", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * capabilities of CPUs</span>", 
"<span class=\"comment\"> */</span>", 
"extern struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a><span class=\"ts\"/><a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>;", 
"extern struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a><span class=\"ts\"/><a class=\"id\" href=\"#new_cpu_data\">new_cpu_data</a>;", 
"", 
"extern struct <a class=\"id\" href=\"#tss_struct\">tss_struct</a><span class=\"ts\"/><a class=\"id\" href=\"#doublefault_tss\">doublefault_tss</a>;", 
"extern <a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu_caps_cleared\">cpu_caps_cleared</a>[<a class=\"id\" href=\"#NCAPINTS\">NCAPINTS</a>];", 
"extern <a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu_caps_set\">cpu_caps_set</a>[<a class=\"id\" href=\"#NCAPINTS\">NCAPINTS</a>];", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"<a class=\"id\" href=\"#DECLARE_PER_CPU_SHARED_ALIGNED\">DECLARE_PER_CPU_SHARED_ALIGNED</a>(struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a>, <a class=\"id\" href=\"#cpu_info\">cpu_info</a>);", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#cpu_data\">cpu_data</a>(<a class=\"id\" href=\"#cpu\">cpu</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#cpu_info\">cpu_info</a>, <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#current_cpu_data\">current_cpu_data</a><span class=\"ts\"/><a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#cpu_info\">cpu_info</a>)", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#cpu_data\">cpu_data</a>(<a class=\"id\" href=\"#cpu\">cpu</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#current_cpu_data\">current_cpu_data</a><span class=\"ts\"/><a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"extern const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> <a class=\"id\" href=\"#cpuinfo_op\">cpuinfo_op</a>;", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#hlt_works\">hlt_works</a>(int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cpu_data\">cpu_data</a>(<a class=\"id\" href=\"#cpu\">cpu</a>).<a class=\"id\" href=\"#hlt_works_ok\">hlt_works_ok</a>;", 
"#else", 
"<span class=\"ts\"/>return 1;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#cache_line_size\">cache_line_size</a>()<span class=\"ts\"/>(<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86_cache_alignment\">x86_cache_alignment</a>)", 
"", 
"extern void <a class=\"id\" href=\"#cpu_detect\">cpu_detect</a>(struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> *<a class=\"id\" href=\"#c\">c</a>);", 
"", 
"extern struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#idle_regs\">idle_regs</a>(struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *);", 
"", 
"extern void <a class=\"id\" href=\"#early_cpu_init\">early_cpu_init</a>(void);", 
"extern void <a class=\"id\" href=\"#identify_boot_cpu\">identify_boot_cpu</a>(void);", 
"extern void <a class=\"id\" href=\"#identify_secondary_cpu\">identify_secondary_cpu</a>(struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> *);", 
"extern void <a class=\"id\" href=\"#print_cpu_info\">print_cpu_info</a>(struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> *);", 
"extern void <a class=\"id\" href=\"#init_scattered_cpuid_features\">init_scattered_cpuid_features</a>(struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> *<a class=\"id\" href=\"#c\">c</a>);", 
"extern unsigned int <a class=\"id\" href=\"#init_intel_cacheinfo\">init_intel_cacheinfo</a>(struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> *<a class=\"id\" href=\"#c\">c</a>);", 
"extern unsigned short <a class=\"id\" href=\"#num_cache_leaves\">num_cache_leaves</a>;", 
"", 
"extern void <a class=\"id\" href=\"#detect_extended_topology\">detect_extended_topology</a>(struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> *<a class=\"id\" href=\"#c\">c</a>);", 
"extern void <a class=\"id\" href=\"#detect_ht\">detect_ht</a>(struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> *<a class=\"id\" href=\"#c\">c</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#native_cpuid\">native_cpuid</a>(unsigned int *<a class=\"id\" href=\"#eax\">eax</a>, unsigned int *<a class=\"id\" href=\"#ebx\">ebx</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int *<a class=\"id\" href=\"#ecx\">ecx</a>, unsigned int *<a class=\"id\" href=\"#edx\">edx</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* ecx is often an input as well as an output. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"cpuid\"", 
"<span class=\"ts\"/>    : \"=a\" (*<a class=\"id\" href=\"#eax\">eax</a>),", 
"<span class=\"ts\"/>      \"=b\" (*<a class=\"id\" href=\"#ebx\">ebx</a>),", 
"<span class=\"ts\"/>      \"=c\" (*<a class=\"id\" href=\"#ecx\">ecx</a>),", 
"<span class=\"ts\"/>      \"=d\" (*<a class=\"id\" href=\"#edx\">edx</a>)", 
"<span class=\"ts\"/>    : \"0\" (*<a class=\"id\" href=\"#eax\">eax</a>), \"2\" (*<a class=\"id\" href=\"#ecx\">ecx</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#load_cr3\">load_cr3</a>(<a class=\"id\" href=\"#pgd_t\">pgd_t</a> *<a class=\"id\" href=\"#pgdir\">pgdir</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_cr3\">write_cr3</a>(<a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#pgdir\">pgdir</a>));", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"comment\">/* This is the TSS defined by the hardware. */</span>", 
"struct <a class=\"id\" href=\"#x86_hw_tss\">x86_hw_tss</a> {", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#back_link\">back_link</a>, <a class=\"id\" href=\"#__blh\">__blh</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sp0\">sp0</a>;", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ss0\">ss0</a>, <a class=\"id\" href=\"#__ss0h\">__ss0h</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sp1\">sp1</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* ss1 caches MSR_IA32_SYSENTER_CS: */</span>", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ss1\">ss1</a>, <a class=\"id\" href=\"#__ss1h\">__ss1h</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sp2\">sp2</a>;", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ss2\">ss2</a>, <a class=\"id\" href=\"#__ss2h\">__ss2h</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__cr3\">__cr3</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip\">ip</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ax\">ax</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cx\">cx</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dx\">dx</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bx\">bx</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sp\">sp</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bp\">bp</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#si\">si</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#di\">di</a>;", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>, <a class=\"id\" href=\"#__esh\">__esh</a>;", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cs\">cs</a>, <a class=\"id\" href=\"#__csh\">__csh</a>;", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ss\">ss</a>, <a class=\"id\" href=\"#__ssh\">__ssh</a>;", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ds\">ds</a>, <a class=\"id\" href=\"#__dsh\">__dsh</a>;", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fs\">fs</a>, <a class=\"id\" href=\"#__fsh\">__fsh</a>;", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gs\">gs</a>, <a class=\"id\" href=\"#__gsh\">__gsh</a>;", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ldt\">ldt</a>, <a class=\"id\" href=\"#__ldth\">__ldth</a>;", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace\">trace</a>;", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#io_bitmap_base\">io_bitmap_base</a>;", 
"", 
"} <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#packed\">packed</a>));", 
"#else", 
"struct <a class=\"id\" href=\"#x86_hw_tss\">x86_hw_tss</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reserved1\">reserved1</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sp0\">sp0</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sp1\">sp1</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sp2\">sp2</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reserved2\">reserved2</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ist\">ist</a>[7];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reserved3\">reserved3</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reserved4\">reserved4</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reserved5\">reserved5</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#io_bitmap_base\">io_bitmap_base</a>;", 
"", 
"} <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#packed\">packed</a>)) <a class=\"id\" href=\"#____cacheline_aligned\">____cacheline_aligned</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * IO-bitmap sizes:</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IO_BITMAP_BITS\">IO_BITMAP_BITS</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>65536", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IO_BITMAP_BYTES\">IO_BITMAP_BYTES</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#IO_BITMAP_BITS\">IO_BITMAP_BITS</a>/8)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IO_BITMAP_LONGS\">IO_BITMAP_LONGS</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#IO_BITMAP_BYTES\">IO_BITMAP_BYTES</a>/sizeof(long))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IO_BITMAP_OFFSET\">IO_BITMAP_OFFSET</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#tss_struct\">tss_struct</a>, <a class=\"id\" href=\"#io_bitmap\">io_bitmap</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#INVALID_IO_BITMAP_OFFSET\">INVALID_IO_BITMAP_OFFSET</a><span class=\"ts\"/>0x8000", 
"", 
"struct <a class=\"id\" href=\"#tss_struct\">tss_struct</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The hardware state:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#x86_hw_tss\">x86_hw_tss</a><span class=\"ts\"/><a class=\"id\" href=\"#x86_tss\">x86_tss</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The extra 1 is there because the CPU will access an</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * additional byte beyond the end of the IO permission</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * bitmap. The extra byte must be all 1 bits, and must</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * be within the limit.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#io_bitmap\">io_bitmap</a>[<a class=\"id\" href=\"#IO_BITMAP_LONGS\">IO_BITMAP_LONGS</a> + 1];", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * .. and then another 0x100 bytes for the emergency kernel stack:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stack\">stack</a>[64];", 
"", 
"} <a class=\"id\" href=\"#____cacheline_aligned\">____cacheline_aligned</a>;", 
"", 
"<a class=\"id\" href=\"#DECLARE_PER_CPU_SHARED_ALIGNED\">DECLARE_PER_CPU_SHARED_ALIGNED</a>(struct <a class=\"id\" href=\"#tss_struct\">tss_struct</a>, <a class=\"id\" href=\"#init_tss\">init_tss</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Save the original ist values for checking stack pointers during debugging</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#orig_ist\">orig_ist</a> {", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ist\">ist</a>[7];", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#MXCSR_DEFAULT\">MXCSR_DEFAULT</a><span class=\"ts\"/><span class=\"ts\"/>0x1f80", 
"", 
"struct <a class=\"id\" href=\"#i387_fsave_struct\">i387_fsave_struct</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cwd\">cwd</a>;<span class=\"ts\"/><span class=\"comment\">/* FPU Control Word<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#swd\">swd</a>;<span class=\"ts\"/><span class=\"comment\">/* FPU Status Word<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#twd\">twd</a>;<span class=\"ts\"/><span class=\"comment\">/* FPU Tag Word<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fip\">fip</a>;<span class=\"ts\"/><span class=\"comment\">/* FPU IP Offset<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fcs\">fcs</a>;<span class=\"ts\"/><span class=\"comment\">/* FPU IP Selector<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#foo\">foo</a>;<span class=\"ts\"/><span class=\"comment\">/* FPU Operand Pointer Offset<span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fos\">fos</a>;<span class=\"ts\"/><span class=\"comment\">/* FPU Operand Pointer Selector<span class=\"ts\"/>*/</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* 8*10 bytes for each FP-reg = 80 bytes:<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st_space\">st_space</a>[20];", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Software status information [not touched by FSAVE ]:<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#i387_fxsave_struct\">i387_fxsave_struct</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cwd\">cwd</a>; <span class=\"comment\">/* Control Word<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#swd\">swd</a>; <span class=\"comment\">/* Status Word<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#twd\">twd</a>; <span class=\"comment\">/* Tag Word<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fop\">fop</a>; <span class=\"comment\">/* Last Instruction Opcode<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a><span class=\"ts\"/><a class=\"id\" href=\"#rip\">rip</a>; <span class=\"comment\">/* Instruction Pointer<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a><span class=\"ts\"/><a class=\"id\" href=\"#rdp\">rdp</a>; <span class=\"comment\">/* Data Pointer<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>};", 
"<span class=\"ts\"/><span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#fip\">fip</a>; <span class=\"comment\">/* FPU IP Offset<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#fcs\">fcs</a>; <span class=\"comment\">/* FPU IP Selector<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#foo\">foo</a>; <span class=\"comment\">/* FPU Operand Offset<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#fos\">fos</a>; <span class=\"comment\">/* FPU Operand Selector<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>};", 
"<span class=\"ts\"/>};", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mxcsr\">mxcsr</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* MXCSR Register State */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mxcsr_mask\">mxcsr_mask</a>;<span class=\"ts\"/><span class=\"comment\">/* MXCSR Mask<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* 8*16 bytes for each FP-reg = 128 bytes:<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st_space\">st_space</a>[32];", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* 16*16 bytes for each XMM-reg = 256 bytes:<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xmm_space\">xmm_space</a>[64];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#padding\">padding</a>[12];", 
"", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#padding1\">padding1</a>[12];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sw_reserved\">sw_reserved</a>[12];", 
"<span class=\"ts\"/>};", 
"", 
"} <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#aligned\">aligned</a>(16)));", 
"", 
"struct <a class=\"id\" href=\"#i387_soft_struct\">i387_soft_struct</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cwd\">cwd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#swd\">swd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#twd\">twd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fip\">fip</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fcs\">fcs</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#foo\">foo</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fos\">fos</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* 8*10 bytes for each FP-reg = 80 bytes: */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st_space\">st_space</a>[20];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ftop\">ftop</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#changed\">changed</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lookahead\">lookahead</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#no_update\">no_update</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rm\">rm</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alimit\">alimit</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#math_emu_info\">math_emu_info</a><span class=\"ts\"/>*<a class=\"id\" href=\"#info\">info</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry_eip\">entry_eip</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#ymmh_struct\">ymmh_struct</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* 16 * 16 bytes for each YMMH-reg = 256 bytes */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ymmh_space\">ymmh_space</a>[64];", 
"};", 
"", 
"struct <a class=\"id\" href=\"#xsave_hdr_struct\">xsave_hdr_struct</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#xstate_bv\">xstate_bv</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#reserved1\">reserved1</a>[2];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#reserved2\">reserved2</a>[5];", 
"} <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#packed\">packed</a>));", 
"", 
"struct <a class=\"id\" href=\"#xsave_struct\">xsave_struct</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#i387_fxsave_struct\">i387_fxsave_struct</a> <a class=\"id\" href=\"#i387\">i387</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xsave_hdr_struct\">xsave_hdr_struct</a> <a class=\"id\" href=\"#xsave_hdr\">xsave_hdr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ymmh_struct\">ymmh_struct</a> <a class=\"id\" href=\"#ymmh\">ymmh</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* new processor state extensions will go here */</span>", 
"} <a class=\"id\" href=\"#__attribute__\">__attribute__</a> ((<a class=\"id\" href=\"#packed\">packed</a>, <a class=\"id\" href=\"#aligned\">aligned</a> (64)));", 
"", 
"union <a class=\"id\" href=\"#thread_xstate\">thread_xstate</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#i387_fsave_struct\">i387_fsave_struct</a><span class=\"ts\"/><a class=\"id\" href=\"#fsave\">fsave</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#i387_fxsave_struct\">i387_fxsave_struct</a><span class=\"ts\"/><a class=\"id\" href=\"#fxsave\">fxsave</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#i387_soft_struct\">i387_soft_struct</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#soft\">soft</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xsave_struct\">xsave_struct</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xsave\">xsave</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#fpu\">fpu</a> {", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#thread_xstate\">thread_xstate</a> *<a class=\"id\" href=\"#state\">state</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"<a class=\"id\" href=\"#DECLARE_PER_CPU\">DECLARE_PER_CPU</a>(struct <a class=\"id\" href=\"#orig_ist\">orig_ist</a>, <a class=\"id\" href=\"#orig_ist\">orig_ist</a>);", 
"", 
"union <a class=\"id\" href=\"#irq_stack_union\">irq_stack_union</a> {", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#irq_stack\">irq_stack</a>[<a class=\"id\" href=\"#IRQ_STACK_SIZE\">IRQ_STACK_SIZE</a>];", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * GCC hardcodes the stack canary as %gs:40.  Since the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * irq_stack is the object at %gs:0, we reserve the bottom</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 48 bytes of the irq stack for the canary.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/>char <a class=\"id\" href=\"#gs_base\">gs_base</a>[40];", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#stack_canary\">stack_canary</a>;", 
"<span class=\"ts\"/>};", 
"};", 
"", 
"<a class=\"id\" href=\"#DECLARE_PER_CPU_FIRST\">DECLARE_PER_CPU_FIRST</a>(union <a class=\"id\" href=\"#irq_stack_union\">irq_stack_union</a>, <a class=\"id\" href=\"#irq_stack_union\">irq_stack_union</a>);", 
"<a class=\"id\" href=\"#DECLARE_INIT_PER_CPU\">DECLARE_INIT_PER_CPU</a>(<a class=\"id\" href=\"#irq_stack_union\">irq_stack_union</a>);", 
"", 
"<a class=\"id\" href=\"#DECLARE_PER_CPU\">DECLARE_PER_CPU</a>(char *, <a class=\"id\" href=\"#irq_stack_ptr\">irq_stack_ptr</a>);", 
"<a class=\"id\" href=\"#DECLARE_PER_CPU\">DECLARE_PER_CPU</a>(unsigned int, <a class=\"id\" href=\"#irq_count\">irq_count</a>);", 
"extern unsigned long <a class=\"id\" href=\"#kernel_eflags\">kernel_eflags</a>;", 
"extern <a class=\"id\" href=\"#asmlinkage\">asmlinkage</a> void <a class=\"id\" href=\"#ignore_sysret\">ignore_sysret</a>(void);", 
"#else<span class=\"ts\"/><span class=\"comment\">/* X86_64 */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_CC_STACKPROTECTOR\">CONFIG_CC_STACKPROTECTOR</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Make sure stack canary segment base is cached-aligned:</span>", 
"<span class=\"comment\"> *   \"For Intel Atom processors, avoid non zero segment base address</span>", 
"<span class=\"comment\"> *    that is not aligned to cache line boundary at all cost.\"</span>", 
"<span class=\"comment\"> * (Optim Ref Manual Assembly/Compiler Coding Rule 15.)</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#stack_canary\">stack_canary</a> {", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#__pad\">__pad</a>[20];<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* canary at %gs:20 */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#canary\">canary</a>;", 
"};", 
"<a class=\"id\" href=\"#DECLARE_PER_CPU_ALIGNED\">DECLARE_PER_CPU_ALIGNED</a>(struct <a class=\"id\" href=\"#stack_canary\">stack_canary</a>, <a class=\"id\" href=\"#stack_canary\">stack_canary</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* X86_64 */</span>", 
"", 
"extern unsigned int <a class=\"id\" href=\"#xstate_size\">xstate_size</a>;", 
"extern void <a class=\"id\" href=\"#free_thread_xstate\">free_thread_xstate</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *);", 
"extern struct <a class=\"id\" href=\"#kmem_cache\">kmem_cache</a> *<a class=\"id\" href=\"#task_xstate_cachep\">task_xstate_cachep</a>;", 
"", 
"struct <a class=\"id\" href=\"#perf_event\">perf_event</a>;", 
"", 
"struct <a class=\"id\" href=\"#thread_struct\">thread_struct</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* Cached TLS descriptors: */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#desc_struct\">desc_struct</a><span class=\"ts\"/><a class=\"id\" href=\"#tls_array\">tls_array</a>[<a class=\"id\" href=\"#GDT_ENTRY_TLS_ENTRIES\">GDT_ENTRY_TLS_ENTRIES</a>];", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sp0\">sp0</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sp\">sp</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysenter_cs\">sysenter_cs</a>;", 
"#else", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#usersp\">usersp</a>;<span class=\"ts\"/><span class=\"comment\">/* Copy from PDA */</span>", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>;", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ds\">ds</a>;", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fsindex\">fsindex</a>;", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gsindex\">gsindex</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip\">ip</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fs\">fs</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gs\">gs</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Save middle states of ptrace breakpoints */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#perf_event\">perf_event</a><span class=\"ts\"/>*<a class=\"id\" href=\"#ptrace_bps\">ptrace_bps</a>[<a class=\"id\" href=\"#HBP_NUM\">HBP_NUM</a>];", 
"<span class=\"ts\"/><span class=\"comment\">/* Debug status used for traps, single steps, etc... */</span>", 
"<span class=\"ts\"/>unsigned long           <a class=\"id\" href=\"#debugreg6\">debugreg6</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Keep track of the exact dr7 value set by the user */</span>", 
"<span class=\"ts\"/>unsigned long           <a class=\"id\" href=\"#ptrace_dr7\">ptrace_dr7</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Fault info: */</span>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cr2\">cr2</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trap_no\">trap_no</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error_code\">error_code</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* floating point and extended processor state */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fpu\">fpu</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fpu\">fpu</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* Virtual 86 mode info */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vm86_struct\">vm86_struct</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#vm86_info\">vm86_info</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#screen_bitmap\">screen_bitmap</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v86flags\">v86flags</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v86mask\">v86mask</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#saved_sp0\">saved_sp0</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#saved_fs\">saved_fs</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#saved_gs\">saved_gs</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* IO permissions: */</span>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#io_bitmap_ptr\">io_bitmap_ptr</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iopl\">iopl</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Max allowed port in the bitmap, in bytes: */</span>", 
"<span class=\"ts\"/>unsigned<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#io_bitmap_max\">io_bitmap_max</a>;", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long <a class=\"id\" href=\"#native_get_debugreg\">native_get_debugreg</a>(int <a class=\"id\" href=\"#regno\">regno</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#val\">val</a> = 0;<span class=\"ts\"/><span class=\"comment\">/* Damn you, gcc! */</span>", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#regno\">regno</a>) {", 
"<span class=\"ts\"/>case 0:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"mov %%db0, %0\" :\"=r\" (<a class=\"id\" href=\"#val\">val</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 1:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"mov %%db1, %0\" :\"=r\" (<a class=\"id\" href=\"#val\">val</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 2:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"mov %%db2, %0\" :\"=r\" (<a class=\"id\" href=\"#val\">val</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 3:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"mov %%db3, %0\" :\"=r\" (<a class=\"id\" href=\"#val\">val</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 6:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"mov %%db6, %0\" :\"=r\" (<a class=\"id\" href=\"#val\">val</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 7:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"mov %%db7, %0\" :\"=r\" (<a class=\"id\" href=\"#val\">val</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#val\">val</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#native_set_debugreg\">native_set_debugreg</a>(int <a class=\"id\" href=\"#regno\">regno</a>, unsigned long <a class=\"id\" href=\"#value\">value</a>)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#regno\">regno</a>) {", 
"<span class=\"ts\"/>case 0:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"mov %0, %%db0\"<span class=\"ts\"/>::\"r\" (<a class=\"id\" href=\"#value\">value</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 1:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"mov %0, %%db1\"<span class=\"ts\"/>::\"r\" (<a class=\"id\" href=\"#value\">value</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 2:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"mov %0, %%db2\"<span class=\"ts\"/>::\"r\" (<a class=\"id\" href=\"#value\">value</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 3:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"mov %0, %%db3\"<span class=\"ts\"/>::\"r\" (<a class=\"id\" href=\"#value\">value</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 6:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"mov %0, %%db6\"<span class=\"ts\"/>::\"r\" (<a class=\"id\" href=\"#value\">value</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 7:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"mov %0, %%db7\"<span class=\"ts\"/>::\"r\" (<a class=\"id\" href=\"#value\">value</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Set IOPL bits in EFLAGS from given mask</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#native_set_iopl_mask\">native_set_iopl_mask</a>(unsigned <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#reg\">reg</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile (\"pushfl;\"", 
"<span class=\"ts\"/><span class=\"ts\"/>      \"popl %0;\"", 
"<span class=\"ts\"/><span class=\"ts\"/>      \"andl %1, %0;\"", 
"<span class=\"ts\"/><span class=\"ts\"/>      \"orl %2, %0;\"", 
"<span class=\"ts\"/><span class=\"ts\"/>      \"pushl %0;\"", 
"<span class=\"ts\"/><span class=\"ts\"/>      \"popfl\"", 
"<span class=\"ts\"/><span class=\"ts\"/>      : \"=&r\" (<a class=\"id\" href=\"#reg\">reg</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>      : \"i\" (~<a class=\"id\" href=\"#X86_EFLAGS_IOPL\">X86_EFLAGS_IOPL</a>), \"r\" (<a class=\"id\" href=\"#mask\">mask</a>));", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void", 
"<a class=\"id\" href=\"#native_load_sp0\">native_load_sp0</a>(struct <a class=\"id\" href=\"#tss_struct\">tss_struct</a> *<a class=\"id\" href=\"#tss\">tss</a>, struct <a class=\"id\" href=\"#thread_struct\">thread_struct</a> *<a class=\"id\" href=\"#thread\">thread</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tss\">tss</a>-><a class=\"id\" href=\"#x86_tss\">x86_tss</a>.<a class=\"id\" href=\"#sp0\">sp0</a> = <a class=\"id\" href=\"#thread\">thread</a>-><a class=\"id\" href=\"#sp0\">sp0</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* Only happens when SEP is enabled, no need to test \"SEP\"arately: */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#tss\">tss</a>-><a class=\"id\" href=\"#x86_tss\">x86_tss</a>.<a class=\"id\" href=\"#ss1\">ss1</a> != <a class=\"id\" href=\"#thread\">thread</a>-><a class=\"id\" href=\"#sysenter_cs\">sysenter_cs</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tss\">tss</a>-><a class=\"id\" href=\"#x86_tss\">x86_tss</a>.<a class=\"id\" href=\"#ss1\">ss1</a> = <a class=\"id\" href=\"#thread\">thread</a>-><a class=\"id\" href=\"#sysenter_cs\">sysenter_cs</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wrmsr\">wrmsr</a>(<a class=\"id\" href=\"#MSR_IA32_SYSENTER_CS\">MSR_IA32_SYSENTER_CS</a>, <a class=\"id\" href=\"#thread\">thread</a>-><a class=\"id\" href=\"#sysenter_cs\">sysenter_cs</a>, 0);", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#native_swapgs\">native_swapgs</a>(void)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"swapgs\" ::: \"memory\");", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PARAVIRT\">CONFIG_PARAVIRT</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#paravirt\">paravirt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__cpuid\">__cpuid</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#native_cpuid\">native_cpuid</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#paravirt_enabled\">paravirt_enabled</a>()<span class=\"ts\"/>0", 
];
xr_frag_insert('l/5d/9913a638e124b7308f186e8d241bcbfdd3aa51.xr', __xr_tmp);
