var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Linux INET6 implementation</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Forwarding Information Database</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Authors:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Pedro Roque<span class=\"ts\"/><span class=\"ts\"/>&lt;roque@di.fc.ul.pt&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *      modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *      as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *      2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>Changes:</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>Yuji SEKIYA @USAGI:<span class=\"ts\"/>Support default route on router node;</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>remove ip6_null_entry from the top of</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>routing table.</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>Ville Nuorvala:<span class=\"ts\"/><span class=\"ts\"/>Fixed routing subtrees.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#route\">route</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netdevice\">netdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#in6\">in6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <span class=\"ts\"/><a class=\"id\" href=\"#CONFIG_PROC_FS\">CONFIG_PROC_FS</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ndisc\">ndisc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#addrconf\">addrconf</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip6_fib\">ip6_fib</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip6_route\">ip6_route</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RT6_DEBUG\">RT6_DEBUG</a> 2", 
"", 
"#if <a class=\"id\" href=\"#RT6_DEBUG\">RT6_DEBUG</a> >= 3", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RT6_TRACE\">RT6_TRACE</a>(<a class=\"id\" href=\"#x\">x</a>...) <a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> <a class=\"id\" href=\"#x\">x</a>)", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RT6_TRACE\">RT6_TRACE</a>(<a class=\"id\" href=\"#x\">x</a>...) do { ; } while (0)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static struct <a class=\"id\" href=\"#kmem_cache\">kmem_cache</a> * <a class=\"id\" href=\"#fib6_node_kmem\">fib6_node_kmem</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a>;", 
"", 
"enum <a class=\"id\" href=\"#fib_walk_state_t\">fib_walk_state_t</a>", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_SUBTREES\">CONFIG_IPV6_SUBTREES</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#FWS_S\">FWS_S</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#FWS_L\">FWS_L</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#FWS_R\">FWS_R</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#FWS_C\">FWS_C</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#FWS_U\">FWS_U</a>", 
"};", 
"", 
"struct <a class=\"id\" href=\"#fib6_cleaner_t\">fib6_cleaner_t</a>", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib6_walker_t\">fib6_walker_t</a> <a class=\"id\" href=\"#w\">w</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>;", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#func\">func</a>)(struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> *, void *<a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#arg\">arg</a>;", 
"};", 
"", 
"static <a class=\"id\" href=\"#DEFINE_RWLOCK\">DEFINE_RWLOCK</a>(<a class=\"id\" href=\"#fib6_walker_lock\">fib6_walker_lock</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_SUBTREES\">CONFIG_IPV6_SUBTREES</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FWS_INIT\">FWS_INIT</a> <a class=\"id\" href=\"#FWS_S\">FWS_S</a>", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FWS_INIT\">FWS_INIT</a> <a class=\"id\" href=\"#FWS_L\">FWS_L</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static void <a class=\"id\" href=\"#fib6_prune_clones\">fib6_prune_clones</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#fib6_node\">fib6_node</a> *<a class=\"id\" href=\"#fn\">fn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> *<a class=\"id\" href=\"#rt\">rt</a>);", 
"static struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> *<a class=\"id\" href=\"#fib6_find_prefix\">fib6_find_prefix</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#fib6_node\">fib6_node</a> *<a class=\"id\" href=\"#fn\">fn</a>);", 
"static struct <a class=\"id\" href=\"#fib6_node\">fib6_node</a> *<a class=\"id\" href=\"#fib6_repair_tree\">fib6_repair_tree</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#fib6_node\">fib6_node</a> *<a class=\"id\" href=\"#fn\">fn</a>);", 
"static int <a class=\"id\" href=\"#fib6_walk\">fib6_walk</a>(struct <a class=\"id\" href=\"#fib6_walker_t\">fib6_walker_t</a> *<a class=\"id\" href=\"#w\">w</a>);", 
"static int <a class=\"id\" href=\"#fib6_walk_continue\">fib6_walk_continue</a>(struct <a class=\"id\" href=\"#fib6_walker_t\">fib6_walker_t</a> *<a class=\"id\" href=\"#w\">w</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>A routing update causes an increase of the serial number on the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>affected subtree. This allows for cached routes to be asynchronously</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tested when modifications are made to the destination cache as a</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>result of redirects, path MTU changes, etc.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#rt_sernum\">rt_sernum</a>;", 
"", 
"static void <a class=\"id\" href=\"#fib6_gc_timer_cb\">fib6_gc_timer_cb</a>(unsigned long <a class=\"id\" href=\"#arg\">arg</a>);", 
"", 
"static <a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#fib6_walkers\">fib6_walkers</a>);", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FOR_WALKERS\">FOR_WALKERS</a>(<a class=\"id\" href=\"#w\">w</a>) <a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#w\">w</a>, &amp;<a class=\"id\" href=\"#fib6_walkers\">fib6_walkers</a>, <a class=\"id\" href=\"#lh\">lh</a>)", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#fib6_walker_link\">fib6_walker_link</a>(struct <a class=\"id\" href=\"#fib6_walker_t\">fib6_walker_t</a> *<a class=\"id\" href=\"#w\">w</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#fib6_walker_lock\">fib6_walker_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#lh\">lh</a>, &amp;<a class=\"id\" href=\"#fib6_walkers\">fib6_walkers</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#fib6_walker_lock\">fib6_walker_lock</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#fib6_walker_unlink\">fib6_walker_unlink</a>(struct <a class=\"id\" href=\"#fib6_walker_t\">fib6_walker_t</a> *<a class=\"id\" href=\"#w\">w</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#fib6_walker_lock\">fib6_walker_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#lh\">lh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#fib6_walker_lock\">fib6_walker_lock</a>);", 
"}", 
"static <a class=\"id\" href=\"#__inline__\">__inline__</a> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#fib6_new_sernum\">fib6_new_sernum</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#n\">n</a> = ++<a class=\"id\" href=\"#rt_sernum\">rt_sernum</a>;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#__s32\">__s32</a>)<a class=\"id\" href=\"#n\">n</a> <= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt_sernum\">rt_sernum</a> = <a class=\"id\" href=\"#n\">n</a> = 1;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#n\">n</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Auxiliary address test functions for the radix tree.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>These assume a 32bit processor (although it will work on</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>64bit processors)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>test bit</span>", 
"<span class=\"comment\"> */</span>", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#__LITTLE_ENDIAN\">__LITTLE_ENDIAN</a>)", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BITOP_BE32_SWIZZLE\">BITOP_BE32_SWIZZLE</a><span class=\"ts\"/>(0x1F &amp; ~7)", 
"#else", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BITOP_BE32_SWIZZLE\">BITOP_BE32_SWIZZLE</a><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static <a class=\"id\" href=\"#__inline__\">__inline__</a> <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#addr_bit_set\">addr_bit_set</a>(void *<a class=\"id\" href=\"#token\">token</a>, int <a class=\"id\" href=\"#fn_bit\">fn_bit</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> *<a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#token\">token</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Here,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * <span class=\"ts\"/>1 &lt;&lt; ((~fn_bit ^ BITOP_BE32_SWIZZLE) &amp; 0x1f)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * is optimized version of</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>htonl(1 &lt;&lt; ((~fn_bit)&amp;0x1F))</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * See include/asm-generic/bitops/le.h.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#__be32\">__be32</a>)(1 << ((~<a class=\"id\" href=\"#fn_bit\">fn_bit</a> ^ <a class=\"id\" href=\"#BITOP_BE32_SWIZZLE\">BITOP_BE32_SWIZZLE</a>) &amp; 0x1f)) &amp;", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#addr\">addr</a>[<a class=\"id\" href=\"#fn_bit\">fn_bit</a> >> 5];", 
"}", 
"", 
"static <a class=\"id\" href=\"#__inline__\">__inline__</a> struct <a class=\"id\" href=\"#fib6_node\">fib6_node</a> * <a class=\"id\" href=\"#node_alloc\">node_alloc</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib6_node\">fib6_node</a> *<a class=\"id\" href=\"#fn\">fn</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#kmem_cache_zalloc\">kmem_cache_zalloc</a>(<a class=\"id\" href=\"#fib6_node_kmem\">fib6_node_kmem</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#fn\">fn</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#__inline__\">__inline__</a> void <a class=\"id\" href=\"#node_free\">node_free</a>(struct <a class=\"id\" href=\"#fib6_node\">fib6_node</a> * <a class=\"id\" href=\"#fn\">fn</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_free\">kmem_cache_free</a>(<a class=\"id\" href=\"#fib6_node_kmem\">fib6_node_kmem</a>, <a class=\"id\" href=\"#fn\">fn</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#__inline__\">__inline__</a> void <a class=\"id\" href=\"#rt6_release\">rt6_release</a>(struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> *<a class=\"id\" href=\"#rt\">rt</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_dec_and_test\">atomic_dec_and_test</a>(&amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_ref\">rt6i_ref</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_free\">dst_free</a>(&amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#fib6_link_table\">fib6_link_table</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#fib6_table\">fib6_table</a> *<a class=\"id\" href=\"#tb\">tb</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#h\">h</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Initialize table lock at a single place to give lockdep a key,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * tables aren't visible prior to being linked to the list.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rwlock_init\">rwlock_init</a>(&amp;<a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#tb6_lock\">tb6_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a> = <a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#tb6_id\">tb6_id</a> &amp; (<a class=\"id\" href=\"#FIB6_TABLE_HASHSZ\">FIB6_TABLE_HASHSZ</a> - 1);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * No protection necessary, this is the only list mutatation</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * operation, tables never disappear once they exist.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_add_head_rcu\">hlist_add_head_rcu</a>(&amp;<a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#tb6_hlist\">tb6_hlist</a>, &amp;<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#fib_table_hash\">fib_table_hash</a>[<a class=\"id\" href=\"#h\">h</a>]);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_MULTIPLE_TABLES\">CONFIG_IPV6_MULTIPLE_TABLES</a>", 
"", 
"static struct <a class=\"id\" href=\"#fib6_table\">fib6_table</a> *<a class=\"id\" href=\"#fib6_alloc_table\">fib6_alloc_table</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib6_table\">fib6_table</a> *<a class=\"id\" href=\"#table\">table</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#table\">table</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#table\">table</a>), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#table\">table</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#tb6_id\">tb6_id</a> = <a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#tb6_root\">tb6_root</a>.<a class=\"id\" href=\"#leaf\">leaf</a> = <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#ip6_null_entry\">ip6_null_entry</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#tb6_root\">tb6_root</a>.<a class=\"id\" href=\"#fn_flags\">fn_flags</a> = <a class=\"id\" href=\"#RTN_ROOT\">RTN_ROOT</a> | <a class=\"id\" href=\"#RTN_TL_ROOT\">RTN_TL_ROOT</a> | <a class=\"id\" href=\"#RTN_RTINFO\">RTN_RTINFO</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#table\">table</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#fib6_table\">fib6_table</a> *<a class=\"id\" href=\"#fib6_new_table\">fib6_new_table</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib6_table\">fib6_table</a> *<a class=\"id\" href=\"#tb\">tb</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#id\">id</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#RT6_TABLE_MAIN\">RT6_TABLE_MAIN</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tb\">tb</a> = <a class=\"id\" href=\"#fib6_get_table\">fib6_get_table</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#id\">id</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tb\">tb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#tb\">tb</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tb\">tb</a> = <a class=\"id\" href=\"#fib6_alloc_table\">fib6_alloc_table</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#id\">id</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tb\">tb</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fib6_link_table\">fib6_link_table</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#tb\">tb</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tb\">tb</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#fib6_table\">fib6_table</a> *<a class=\"id\" href=\"#fib6_get_table\">fib6_get_table</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib6_table\">fib6_table</a> *<a class=\"id\" href=\"#tb\">tb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#h\">h</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#id\">id</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#RT6_TABLE_MAIN\">RT6_TABLE_MAIN</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a> = <a class=\"id\" href=\"#id\">id</a> &amp; (<a class=\"id\" href=\"#FIB6_TABLE_HASHSZ\">FIB6_TABLE_HASHSZ</a> - 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = &amp;<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#fib_table_hash\">fib_table_hash</a>[<a class=\"id\" href=\"#h\">h</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_for_each_entry_rcu\">hlist_for_each_entry_rcu</a>(<a class=\"id\" href=\"#tb\">tb</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#head\">head</a>, <a class=\"id\" href=\"#tb6_hlist\">tb6_hlist</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#tb6_id\">tb6_id</a> == <a class=\"id\" href=\"#id\">id</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#tb\">tb</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__net_init\">__net_init</a> <a class=\"id\" href=\"#fib6_tables_init\">fib6_tables_init</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fib6_link_table\">fib6_link_table</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#fib6_main_tbl\">fib6_main_tbl</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fib6_link_table\">fib6_link_table</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#fib6_local_tbl\">fib6_local_tbl</a>);", 
"}", 
"#else", 
"", 
"struct <a class=\"id\" href=\"#fib6_table\">fib6_table</a> *<a class=\"id\" href=\"#fib6_new_table\">fib6_new_table</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#fib6_get_table\">fib6_get_table</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#id\">id</a>);", 
"}", 
"", 
"struct <a class=\"id\" href=\"#fib6_table\">fib6_table</a> *<a class=\"id\" href=\"#fib6_get_table\">fib6_get_table</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>  return <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#fib6_main_tbl\">fib6_main_tbl</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#fib6_rule_lookup\">fib6_rule_lookup</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#fl\">fl</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   int <a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#pol_lookup_t\">pol_lookup_t</a> <a class=\"id\" href=\"#lookup\">lookup</a>)", 
"{", 
"<span class=\"ts\"/>return (struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *) <a class=\"id\" href=\"#lookup\">lookup</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#fib6_main_tbl\">fib6_main_tbl</a>, <a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__net_init\">__net_init</a> <a class=\"id\" href=\"#fib6_tables_init\">fib6_tables_init</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fib6_link_table\">fib6_link_table</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#fib6_main_tbl\">fib6_main_tbl</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static int <a class=\"id\" href=\"#fib6_dump_node\">fib6_dump_node</a>(struct <a class=\"id\" href=\"#fib6_walker_t\">fib6_walker_t</a> *<a class=\"id\" href=\"#w\">w</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> *<a class=\"id\" href=\"#rt\">rt</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#rt\">rt</a> = <a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#leaf\">leaf</a>; <a class=\"id\" href=\"#rt\">rt</a>; <a class=\"id\" href=\"#rt\">rt</a> = <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#rt6_next\">rt6_next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#rt6_dump_route\">rt6_dump_route</a>(<a class=\"id\" href=\"#rt\">rt</a>, <a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#args\">args</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Frame is full, suspend walking */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#leaf\">leaf</a> = <a class=\"id\" href=\"#rt\">rt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#res\">res</a> == 0);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#leaf\">leaf</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#fib6_dump_end\">fib6_dump_end</a>(struct <a class=\"id\" href=\"#netlink_callback\">netlink_callback</a> *<a class=\"id\" href=\"#cb\">cb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib6_walker_t\">fib6_walker_t</a> *<a class=\"id\" href=\"#w\">w</a> = (void*)<a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[2];", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#w\">w</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[4]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[4] = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fib6_walker_unlink\">fib6_walker_unlink</a>(<a class=\"id\" href=\"#w\">w</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[2] = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#w\">w</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#done\">done</a> = (void*)<a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[3];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[1] = 3;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#fib6_dump_done\">fib6_dump_done</a>(struct <a class=\"id\" href=\"#netlink_callback\">netlink_callback</a> *<a class=\"id\" href=\"#cb\">cb</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fib6_dump_end\">fib6_dump_end</a>(<a class=\"id\" href=\"#cb\">cb</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#done\">done</a> ? <a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#done\">done</a>(<a class=\"id\" href=\"#cb\">cb</a>) : 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#fib6_dump_table\">fib6_dump_table</a>(struct <a class=\"id\" href=\"#fib6_table\">fib6_table</a> *<a class=\"id\" href=\"#table\">table</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#netlink_callback\">netlink_callback</a> *<a class=\"id\" href=\"#cb\">cb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib6_walker_t\">fib6_walker_t</a> *<a class=\"id\" href=\"#w\">w</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#res\">res</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a> = (void *)<a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[2];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#root\">root</a> = &amp;<a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#tb6_root\">tb6_root</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[4] == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#count\">count</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#skip\">skip</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_lock_bh\">read_lock_bh</a>(&amp;<a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#tb6_lock\">tb6_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#fib6_walk\">fib6_walk</a>(<a class=\"id\" href=\"#w\">w</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#tb6_lock\">tb6_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[4] = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[5] = <a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#fn_sernum\">fn_sernum</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[5] != <a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#fn_sernum\">fn_sernum</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Begin at the root if the tree changed */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[5] = <a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#fn_sernum\">fn_sernum</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#FWS_INIT\">FWS_INIT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#root\">root</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#skip\">skip</a> = <a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#skip\">skip</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_lock_bh\">read_lock_bh</a>(&amp;<a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#tb6_lock\">tb6_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#fib6_walk_continue\">fib6_walk_continue</a>(<a class=\"id\" href=\"#w\">w</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#tb6_lock\">tb6_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a> <= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fib6_walker_unlink\">fib6_walker_unlink</a>(<a class=\"id\" href=\"#w\">w</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[4] = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#inet6_dump_fib\">inet6_dump_fib</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#netlink_callback\">netlink_callback</a> *<a class=\"id\" href=\"#cb\">cb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#h\">h</a>, <a class=\"id\" href=\"#s_h\">s_h</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#e\">e</a> = 0, <a class=\"id\" href=\"#s_e\">s_e</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rt6_rtnl_dump_arg\">rt6_rtnl_dump_arg</a> <a class=\"id\" href=\"#arg\">arg</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib6_walker_t\">fib6_walker_t</a> *<a class=\"id\" href=\"#w\">w</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib6_table\">fib6_table</a> *<a class=\"id\" href=\"#tb\">tb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#res\">res</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s_h\">s_h</a> = <a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[0];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s_e\">s_e</a> = <a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[1];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a> = (void *)<a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[2];", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#w\">w</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* New dump:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * 1. hook callback destructor.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[3] = (long)<a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#done\">done</a> = <a class=\"id\" href=\"#fib6_dump_done\">fib6_dump_done</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * 2. allocate and initialize walker.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#w\">w</a>), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#w\">w</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#func\">func</a> = <a class=\"id\" href=\"#fib6_dump_node\">fib6_dump_node</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[2] = (long)<a class=\"id\" href=\"#w\">w</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a>.<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a>.<a class=\"id\" href=\"#cb\">cb</a> = <a class=\"id\" href=\"#cb\">cb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a>.<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#net\">net</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#args\">args</a> = &amp;<a class=\"id\" href=\"#arg\">arg</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#h\">h</a> = <a class=\"id\" href=\"#s_h\">s_h</a>; <a class=\"id\" href=\"#h\">h</a> &lt; <a class=\"id\" href=\"#FIB6_TABLE_HASHSZ\">FIB6_TABLE_HASHSZ</a>; <a class=\"id\" href=\"#h\">h</a>++, <a class=\"id\" href=\"#s_e\">s_e</a> = 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = &amp;<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#fib_table_hash\">fib_table_hash</a>[<a class=\"id\" href=\"#h\">h</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlist_for_each_entry\">hlist_for_each_entry</a>(<a class=\"id\" href=\"#tb\">tb</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#head\">head</a>, <a class=\"id\" href=\"#tb6_hlist\">tb6_hlist</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#e\">e</a> &lt; <a class=\"id\" href=\"#s_e\">s_e</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#fib6_dump_table\">fib6_dump_table</a>(<a class=\"id\" href=\"#tb\">tb</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#cb\">cb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a> != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<a class=\"id\" href=\"#next\">next</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[1] = <a class=\"id\" href=\"#e\">e</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[0] = <a class=\"id\" href=\"#h\">h</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#res\">res</a> &lt; 0 ? <a class=\"id\" href=\"#res\">res</a> : <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a> <= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fib6_dump_end\">fib6_dump_end</a>(<a class=\"id\" href=\"#cb\">cb</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Routing Table</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>return the appropriate node for a routing tree \"add\" operation</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>by either creating and inserting or by returning an existing</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>node.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static struct <a class=\"id\" href=\"#fib6_node\">fib6_node</a> * <a class=\"id\" href=\"#fib6_add_1\">fib6_add_1</a>(struct <a class=\"id\" href=\"#fib6_node\">fib6_node</a> *<a class=\"id\" href=\"#root\">root</a>, void *<a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     int <a class=\"id\" href=\"#addrlen\">addrlen</a>, int <a class=\"id\" href=\"#plen\">plen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     int <a class=\"id\" href=\"#offset\">offset</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib6_node\">fib6_node</a> *<a class=\"id\" href=\"#fn\">fn</a>, *<a class=\"id\" href=\"#in\">in</a>, *<a class=\"id\" href=\"#ln\">ln</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib6_node\">fib6_node</a> *<a class=\"id\" href=\"#pn\">pn</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rt6key\">rt6key</a> *<a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#bit\">bit</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a><span class=\"ts\"/><a class=\"id\" href=\"#dir\">dir</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#sernum\">sernum</a> = <a class=\"id\" href=\"#fib6_new_sernum\">fib6_new_sernum</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#RT6_TRACE\">RT6_TRACE</a>(\"fib6_add_1\\n\");", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* insert node in tree */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#root\">root</a>;", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = (struct <a class=\"id\" href=\"#rt6key\">rt6key</a> *)((<a class=\"id\" href=\"#u8\">u8</a> *)<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#leaf\">leaf</a> + <a class=\"id\" href=\"#offset\">offset</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>Prefix match</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#plen\">plen</a> &lt; <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#fn_bit\">fn_bit</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#ipv6_prefix_equal\">ipv6_prefix_equal</a>(&amp;<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#fn_bit\">fn_bit</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#insert_above\">insert_above</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>Exact match ?</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#plen\">plen</a> == <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#fn_bit\">fn_bit</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* clean up an intermediate node */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#fn_flags\">fn_flags</a> &amp; <a class=\"id\" href=\"#RTN_RTINFO\">RTN_RTINFO</a>) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt6_release\">rt6_release</a>(<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#leaf\">leaf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#leaf\">leaf</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#fn_sernum\">fn_sernum</a> = <a class=\"id\" href=\"#sernum\">sernum</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#fn\">fn</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>We have more bits to go</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Try to walk down on tree. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#fn_sernum\">fn_sernum</a> = <a class=\"id\" href=\"#sernum\">sernum</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dir\">dir</a> = <a class=\"id\" href=\"#addr_bit_set\">addr_bit_set</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#fn_bit\">fn_bit</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pn\">pn</a> = <a class=\"id\" href=\"#fn\">fn</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#dir\">dir</a> ? <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#right\">right</a>: <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#left\">left</a>;", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#fn\">fn</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>We walked to the bottom of tree.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Create new leaf node without children.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ln\">ln</a> = <a class=\"id\" href=\"#node_alloc\">node_alloc</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ln\">ln</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ln\">ln</a>-><a class=\"id\" href=\"#fn_bit\">fn_bit</a> = <a class=\"id\" href=\"#plen\">plen</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ln\">ln</a>-><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#pn\">pn</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ln\">ln</a>-><a class=\"id\" href=\"#fn_sernum\">fn_sernum</a> = <a class=\"id\" href=\"#sernum\">sernum</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dir\">dir</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pn\">pn</a>-><a class=\"id\" href=\"#right\">right</a> = <a class=\"id\" href=\"#ln\">ln</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pn\">pn</a>-><a class=\"id\" href=\"#left\">left</a>  = <a class=\"id\" href=\"#ln\">ln</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ln\">ln</a>;", 
"", 
"", 
"<a class=\"id\" href=\"#insert_above\">insert_above</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * split since we don't have a common prefix anymore or</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we have a less significant route.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we've to insert an intermediate node on the list</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * this new node will point to the one we need to create</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and the current</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pn\">pn</a> = <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#parent\">parent</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* find 1st bit in difference between the 2 addrs.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\"><span class=\"ts\"/>   See comment in __ipv6_addr_diff: bit may be an invalid value,</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   but if it is &gt;= plen, the value is ignored in any case.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bit\">bit</a> = <a class=\"id\" href=\"#__ipv6_addr_diff\">__ipv6_addr_diff</a>(<a class=\"id\" href=\"#addr\">addr</a>, &amp;<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#addrlen\">addrlen</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/><span class=\"ts\"/>(intermediate)[in]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>          /<span class=\"ts\"/>   \\</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>(new leaf node)[ln] (old node)[fn]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#plen\">plen</a> &gt; <a class=\"id\" href=\"#bit\">bit</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in\">in</a> = <a class=\"id\" href=\"#node_alloc\">node_alloc</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ln\">ln</a> = <a class=\"id\" href=\"#node_alloc\">node_alloc</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#in\">in</a> == <a class=\"id\" href=\"#NULL\">NULL</a> || <a class=\"id\" href=\"#ln\">ln</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#in\">in</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node_free\">node_free</a>(<a class=\"id\" href=\"#in\">in</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ln\">ln</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node_free\">node_free</a>(<a class=\"id\" href=\"#ln\">ln</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * new intermediate node.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * RTN_RTINFO will</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * be off since that an address that chooses one of</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the branches would not match less specific routes</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * in the other branch</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in\">in</a>-><a class=\"id\" href=\"#fn_bit\">fn_bit</a> = <a class=\"id\" href=\"#bit\">bit</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in\">in</a>-><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#pn\">pn</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in\">in</a>-><a class=\"id\" href=\"#leaf\">leaf</a> = <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#leaf\">leaf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#in\">in</a>-><a class=\"id\" href=\"#leaf\">leaf</a>-><a class=\"id\" href=\"#rt6i_ref\">rt6i_ref</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in\">in</a>-><a class=\"id\" href=\"#fn_sernum\">fn_sernum</a> = <a class=\"id\" href=\"#sernum\">sernum</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* update parent pointer */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dir\">dir</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pn\">pn</a>-><a class=\"id\" href=\"#right\">right</a> = <a class=\"id\" href=\"#in\">in</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pn\">pn</a>-><a class=\"id\" href=\"#left\">left</a>  = <a class=\"id\" href=\"#in\">in</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ln\">ln</a>-><a class=\"id\" href=\"#fn_bit\">fn_bit</a> = <a class=\"id\" href=\"#plen\">plen</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ln\">ln</a>-><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#in\">in</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#in\">in</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ln\">ln</a>-><a class=\"id\" href=\"#fn_sernum\">fn_sernum</a> = <a class=\"id\" href=\"#sernum\">sernum</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#addr_bit_set\">addr_bit_set</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#bit\">bit</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in\">in</a>-><a class=\"id\" href=\"#right\">right</a> = <a class=\"id\" href=\"#ln\">ln</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in\">in</a>-><a class=\"id\" href=\"#left\">left</a>  = <a class=\"id\" href=\"#fn\">fn</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in\">in</a>-><a class=\"id\" href=\"#left\">left</a>  = <a class=\"id\" href=\"#ln\">ln</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in\">in</a>-><a class=\"id\" href=\"#right\">right</a> = <a class=\"id\" href=\"#fn\">fn</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else { <span class=\"comment\">/* plen &lt;= bit */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/><span class=\"ts\"/>(new leaf node)[ln]</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>          /<span class=\"ts\"/>   \\</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>     (old node)[fn] NULL</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ln\">ln</a> = <a class=\"id\" href=\"#node_alloc\">node_alloc</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ln\">ln</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ln\">ln</a>-><a class=\"id\" href=\"#fn_bit\">fn_bit</a> = <a class=\"id\" href=\"#plen\">plen</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ln\">ln</a>-><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#pn\">pn</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ln\">ln</a>-><a class=\"id\" href=\"#fn_sernum\">fn_sernum</a> = <a class=\"id\" href=\"#sernum\">sernum</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dir\">dir</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pn\">pn</a>-><a class=\"id\" href=\"#right\">right</a> = <a class=\"id\" href=\"#ln\">ln</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pn\">pn</a>-><a class=\"id\" href=\"#left\">left</a>  = <a class=\"id\" href=\"#ln\">ln</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#addr_bit_set\">addr_bit_set</a>(&amp;<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#plen\">plen</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ln\">ln</a>-><a class=\"id\" href=\"#right\">right</a> = <a class=\"id\" href=\"#fn\">fn</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ln\">ln</a>-><a class=\"id\" href=\"#left\">left</a>  = <a class=\"id\" href=\"#fn\">fn</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#ln\">ln</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ln\">ln</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Insert routing information in a node.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#fib6_add_rt2node\">fib6_add_rt2node</a>(struct <a class=\"id\" href=\"#fib6_node\">fib6_node</a> *<a class=\"id\" href=\"#fn\">fn</a>, struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> *<a class=\"id\" href=\"#rt\">rt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#nl_info\">nl_info</a> *<a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> *<a class=\"id\" href=\"#iter\">iter</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> **<a class=\"id\" href=\"#ins\">ins</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ins\">ins</a> = &amp;<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#leaf\">leaf</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#iter\">iter</a> = <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#leaf\">leaf</a>; <a class=\"id\" href=\"#iter\">iter</a>; <a class=\"id\" href=\"#iter\">iter</a>=<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#rt6_next\">rt6_next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>Search for duplicates</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#rt6i_metric\">rt6i_metric</a> == <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_metric\">rt6i_metric</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>Same priority level</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#rt6i_dev\">rt6i_dev</a> == <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_dev\">rt6i_dev</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#rt6i_idev\">rt6i_idev</a> == <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_idev\">rt6i_idev</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(&amp;<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#rt6i_gateway\">rt6i_gateway</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    &amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_gateway\">rt6i_gateway</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#rt6i_flags\">rt6i_flags</a>&amp;<a class=\"id\" href=\"#RTF_EXPIRES\">RTF_EXPIRES</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EEXIST\">EEXIST</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#rt6i_expires\">rt6i_expires</a> = <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_expires\">rt6i_expires</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_flags\">rt6i_flags</a>&amp;<a class=\"id\" href=\"#RTF_EXPIRES\">RTF_EXPIRES</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#rt6i_flags\">rt6i_flags</a> &= ~<a class=\"id\" href=\"#RTF_EXPIRES\">RTF_EXPIRES</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#rt6i_expires\">rt6i_expires</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EEXIST\">EEXIST</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#rt6i_metric\">rt6i_metric</a> &gt; <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_metric\">rt6i_metric</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ins\">ins</a> = &amp;<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#rt6_next\">rt6_next</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Reset round-robin state, if necessary */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ins\">ins</a> == &amp;<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#leaf\">leaf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#rr_ptr\">rr_ptr</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>insert node</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#rt6_next\">rt6_next</a> = <a class=\"id\" href=\"#iter\">iter</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#ins\">ins</a> = <a class=\"id\" href=\"#rt\">rt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_node\">rt6i_node</a> = <a class=\"id\" href=\"#fn\">fn</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_ref\">rt6i_ref</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet6_rt_notify\">inet6_rt_notify</a>(<a class=\"id\" href=\"#RTM_NEWROUTE\">RTM_NEWROUTE</a>, <a class=\"id\" href=\"#rt\">rt</a>, <a class=\"id\" href=\"#info\">info</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#nl_net\">nl_net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#rt6_stats\">rt6_stats</a>-><a class=\"id\" href=\"#fib_rt_entries\">fib_rt_entries</a>++;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#fn_flags\">fn_flags</a> &amp; <a class=\"id\" href=\"#RTN_RTINFO\">RTN_RTINFO</a>) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#nl_net\">nl_net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#rt6_stats\">rt6_stats</a>-><a class=\"id\" href=\"#fib_route_nodes\">fib_route_nodes</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#fn_flags\">fn_flags</a> |= <a class=\"id\" href=\"#RTN_RTINFO\">RTN_RTINFO</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#__inline__\">__inline__</a> void <a class=\"id\" href=\"#fib6_start_gc\">fib6_start_gc</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> *<a class=\"id\" href=\"#rt\">rt</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#timer_pending\">timer_pending</a>(&amp;<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#ip6_fib_timer\">ip6_fib_timer</a>) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_flags\">rt6i_flags</a> &amp; (<a class=\"id\" href=\"#RTF_EXPIRES\">RTF_EXPIRES</a>|<a class=\"id\" href=\"#RTF_CACHE\">RTF_CACHE</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mod_timer\">mod_timer</a>(&amp;<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#ip6_fib_timer\">ip6_fib_timer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#jiffies\">jiffies</a> + <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#sysctl\">sysctl</a>.<a class=\"id\" href=\"#ip6_rt_gc_interval\">ip6_rt_gc_interval</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#fib6_force_start_gc\">fib6_force_start_gc</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#timer_pending\">timer_pending</a>(&amp;<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#ip6_fib_timer\">ip6_fib_timer</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mod_timer\">mod_timer</a>(&amp;<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#ip6_fib_timer\">ip6_fib_timer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#jiffies\">jiffies</a> + <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#sysctl\">sysctl</a>.<a class=\"id\" href=\"#ip6_rt_gc_interval\">ip6_rt_gc_interval</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Add routing information to the routing tree.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>&lt;destination addr&gt;/&lt;source addr&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>with source addr info in sub-trees</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#fib6_add\">fib6_add</a>(struct <a class=\"id\" href=\"#fib6_node\">fib6_node</a> *<a class=\"id\" href=\"#root\">root</a>, struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> *<a class=\"id\" href=\"#rt\">rt</a>, struct <a class=\"id\" href=\"#nl_info\">nl_info</a> *<a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib6_node\">fib6_node</a> *<a class=\"id\" href=\"#fn\">fn</a>, *<a class=\"id\" href=\"#pn\">pn</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#fib6_add_1\">fib6_add_1</a>(<a class=\"id\" href=\"#root\">root</a>, &amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_dst\">rt6i_dst</a>.<a class=\"id\" href=\"#addr\">addr</a>, sizeof(struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_dst\">rt6i_dst</a>.<a class=\"id\" href=\"#plen\">plen</a>, <a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a>, <a class=\"id\" href=\"#rt6i_dst\">rt6i_dst</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fn\">fn</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pn\">pn</a> = <a class=\"id\" href=\"#fn\">fn</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_SUBTREES\">CONFIG_IPV6_SUBTREES</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_src\">rt6i_src</a>.<a class=\"id\" href=\"#plen\">plen</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#fib6_node\">fib6_node</a> *<a class=\"id\" href=\"#sn\">sn</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#subtree\">subtree</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#fib6_node\">fib6_node</a> *<a class=\"id\" href=\"#sfn\">sfn</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Create subtree.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/><span class=\"ts\"/>fn[main tree]</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/><span class=\"ts\"/>|</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/><span class=\"ts\"/>sfn[subtree root]</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/><span class=\"ts\"/>   \\</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/><span class=\"ts\"/>    sn[new leaf node]</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Create subtree root node */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sfn\">sfn</a> = <a class=\"id\" href=\"#node_alloc\">node_alloc</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sfn\">sfn</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#st_failure\">st_failure</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sfn\">sfn</a>-><a class=\"id\" href=\"#leaf\">leaf</a> = <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#nl_net\">nl_net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#ip6_null_entry\">ip6_null_entry</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#nl_net\">nl_net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#ip6_null_entry\">ip6_null_entry</a>-><a class=\"id\" href=\"#rt6i_ref\">rt6i_ref</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sfn\">sfn</a>-><a class=\"id\" href=\"#fn_flags\">fn_flags</a> = <a class=\"id\" href=\"#RTN_ROOT\">RTN_ROOT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sfn\">sfn</a>-><a class=\"id\" href=\"#fn_sernum\">fn_sernum</a> = <a class=\"id\" href=\"#fib6_new_sernum\">fib6_new_sernum</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Now add the first leaf node to new subtree */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sn\">sn</a> = <a class=\"id\" href=\"#fib6_add_1\">fib6_add_1</a>(<a class=\"id\" href=\"#sfn\">sfn</a>, &amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_src\">rt6i_src</a>.<a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sizeof(struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a>), <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_src\">rt6i_src</a>.<a class=\"id\" href=\"#plen\">plen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a>, <a class=\"id\" href=\"#rt6i_src\">rt6i_src</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sn\">sn</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If it is failed, discard just allocated</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   root, and then (in st_failure) stale node</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   in main tree.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node_free\">node_free</a>(<a class=\"id\" href=\"#sfn\">sfn</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#st_failure\">st_failure</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Now link new subtree to main tree */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sfn\">sfn</a>-><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#fn\">fn</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#subtree\">subtree</a> = <a class=\"id\" href=\"#sfn\">sfn</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sn\">sn</a> = <a class=\"id\" href=\"#fib6_add_1\">fib6_add_1</a>(<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#subtree\">subtree</a>, &amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_src\">rt6i_src</a>.<a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sizeof(struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a>), <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_src\">rt6i_src</a>.<a class=\"id\" href=\"#plen\">plen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a>, <a class=\"id\" href=\"#rt6i_src\">rt6i_src</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sn\">sn</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#st_failure\">st_failure</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#leaf\">leaf</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#leaf\">leaf</a> = <a class=\"id\" href=\"#rt\">rt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_ref\">rt6i_ref</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#sn\">sn</a>;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#fib6_add_rt2node\">fib6_add_rt2node</a>(<a class=\"id\" href=\"#fn\">fn</a>, <a class=\"id\" href=\"#rt\">rt</a>, <a class=\"id\" href=\"#info\">info</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fib6_start_gc\">fib6_start_gc</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#nl_net\">nl_net</a>, <a class=\"id\" href=\"#rt\">rt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_flags\">rt6i_flags</a>&amp;<a class=\"id\" href=\"#RTF_CACHE\">RTF_CACHE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fib6_prune_clones\">fib6_prune_clones</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#nl_net\">nl_net</a>, <a class=\"id\" href=\"#pn\">pn</a>, <a class=\"id\" href=\"#rt\">rt</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_SUBTREES\">CONFIG_IPV6_SUBTREES</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If fib6_add_1 has cleared the old leaf pointer in the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * super-tree leaf node we have to find a new one for it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pn\">pn</a> != <a class=\"id\" href=\"#fn\">fn</a> && <a class=\"id\" href=\"#pn\">pn</a>-><a class=\"id\" href=\"#leaf\">leaf</a> == <a class=\"id\" href=\"#rt\">rt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pn\">pn</a>-><a class=\"id\" href=\"#leaf\">leaf</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_dec\">atomic_dec</a>(&amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_ref\">rt6i_ref</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pn\">pn</a> != <a class=\"id\" href=\"#fn\">fn</a> && !<a class=\"id\" href=\"#pn\">pn</a>-><a class=\"id\" href=\"#leaf\">leaf</a> && !(<a class=\"id\" href=\"#pn\">pn</a>-><a class=\"id\" href=\"#fn_flags\">fn_flags</a> &amp; <a class=\"id\" href=\"#RTN_RTINFO\">RTN_RTINFO</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pn\">pn</a>-><a class=\"id\" href=\"#leaf\">leaf</a> = <a class=\"id\" href=\"#fib6_find_prefix\">fib6_find_prefix</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#nl_net\">nl_net</a>, <a class=\"id\" href=\"#pn\">pn</a>);", 
"#if <a class=\"id\" href=\"#RT6_DEBUG\">RT6_DEBUG</a> >= 2", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pn\">pn</a>-><a class=\"id\" href=\"#leaf\">leaf</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#pn\">pn</a>-><a class=\"id\" href=\"#leaf\">leaf</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pn\">pn</a>-><a class=\"id\" href=\"#leaf\">leaf</a> = <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#nl_net\">nl_net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#ip6_null_entry\">ip6_null_entry</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#pn\">pn</a>-><a class=\"id\" href=\"#leaf\">leaf</a>-><a class=\"id\" href=\"#rt6i_ref\">rt6i_ref</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_free\">dst_free</a>(&amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_SUBTREES\">CONFIG_IPV6_SUBTREES</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* Subtree creation failed, probably main tree node</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   is orphan. If it is, shoot it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<a class=\"id\" href=\"#st_failure\">st_failure</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fn\">fn</a> && !(<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#fn_flags\">fn_flags</a> &amp; (<a class=\"id\" href=\"#RTN_RTINFO\">RTN_RTINFO</a>|<a class=\"id\" href=\"#RTN_ROOT\">RTN_ROOT</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fib6_repair_tree\">fib6_repair_tree</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#nl_net\">nl_net</a>, <a class=\"id\" href=\"#fn\">fn</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst_free\">dst_free</a>(&amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Routing tree lookup</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#lookup_args\">lookup_args</a> {", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* key offset on rt6_info<span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a><span class=\"ts\"/>*<a class=\"id\" href=\"#addr\">addr</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* search key<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#fib6_node\">fib6_node</a> * <a class=\"id\" href=\"#fib6_lookup_1\">fib6_lookup_1</a>(struct <a class=\"id\" href=\"#fib6_node\">fib6_node</a> *<a class=\"id\" href=\"#root\">root</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#lookup_args\">lookup_args</a> *<a class=\"id\" href=\"#args\">args</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib6_node\">fib6_node</a> *<a class=\"id\" href=\"#fn\">fn</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#dir\">dir</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#args\">args</a>-><a class=\"id\" href=\"#offset\">offset</a> == 0))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Descend on a tree</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#root\">root</a>;", 
"", 
"<span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#fib6_node\">fib6_node</a> *<a class=\"id\" href=\"#next\">next</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dir\">dir</a> = <a class=\"id\" href=\"#addr_bit_set\">addr_bit_set</a>(<a class=\"id\" href=\"#args\">args</a>-><a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#fn_bit\">fn_bit</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#dir\">dir</a> ? <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#right\">right</a> : <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#left\">left</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>while(<a class=\"id\" href=\"#fn\">fn</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#FIB6_SUBTREE\">FIB6_SUBTREE</a>(<a class=\"id\" href=\"#fn\">fn</a>) || <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#fn_flags\">fn_flags</a> &amp; <a class=\"id\" href=\"#RTN_RTINFO\">RTN_RTINFO</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#rt6key\">rt6key</a> *<a class=\"id\" href=\"#key\">key</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = (struct <a class=\"id\" href=\"#rt6key\">rt6key</a> *) ((<a class=\"id\" href=\"#u8\">u8</a> *) <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#leaf\">leaf</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#args\">args</a>-><a class=\"id\" href=\"#offset\">offset</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_prefix_equal\">ipv6_prefix_equal</a>(&amp;<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#args\">args</a>-><a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#plen\">plen</a>)) {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_SUBTREES\">CONFIG_IPV6_SUBTREES</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#subtree\">subtree</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#fib6_lookup_1\">fib6_lookup_1</a>(<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#subtree\">subtree</a>, <a class=\"id\" href=\"#args\">args</a> + 1);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#fn\">fn</a> || <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#fn_flags\">fn_flags</a> &amp; <a class=\"id\" href=\"#RTN_RTINFO\">RTN_RTINFO</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#fn\">fn</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#fn_flags\">fn_flags</a> &amp; <a class=\"id\" href=\"#RTN_ROOT\">RTN_ROOT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#fib6_node\">fib6_node</a> * <a class=\"id\" href=\"#fib6_lookup\">fib6_lookup</a>(struct <a class=\"id\" href=\"#fib6_node\">fib6_node</a> *<a class=\"id\" href=\"#root\">root</a>, struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#daddr\">daddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#saddr\">saddr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib6_node\">fib6_node</a> *<a class=\"id\" href=\"#fn\">fn</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#lookup_args\">lookup_args</a> <a class=\"id\" href=\"#args\">args</a>[] = {", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a>, <a class=\"id\" href=\"#rt6i_dst\">rt6i_dst</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#daddr\">daddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_SUBTREES\">CONFIG_IPV6_SUBTREES</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a>, <a class=\"id\" href=\"#rt6i_src\">rt6i_src</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#saddr\">saddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#offset\">offset</a> = 0,<span class=\"ts\"/><span class=\"comment\">/* sentinel */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>};", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#fib6_lookup_1\">fib6_lookup_1</a>(<a class=\"id\" href=\"#root\">root</a>, <a class=\"id\" href=\"#daddr\">daddr</a> ? <a class=\"id\" href=\"#args\">args</a> : <a class=\"id\" href=\"#args\">args</a> + 1);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fn\">fn</a> == <a class=\"id\" href=\"#NULL\">NULL</a> || <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#fn_flags\">fn_flags</a> &amp; <a class=\"id\" href=\"#RTN_TL_ROOT\">RTN_TL_ROOT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#root\">root</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#fn\">fn</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Get node with specified destination prefix (and source prefix,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>if subtrees are used)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"", 
"static struct <a class=\"id\" href=\"#fib6_node\">fib6_node</a> * <a class=\"id\" href=\"#fib6_locate_1\">fib6_locate_1</a>(struct <a class=\"id\" href=\"#fib6_node\">fib6_node</a> *<a class=\"id\" href=\"#root\">root</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#plen\">plen</a>, int <a class=\"id\" href=\"#offset\">offset</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib6_node\">fib6_node</a> *<a class=\"id\" href=\"#fn\">fn</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#root\">root</a>; <a class=\"id\" href=\"#fn\">fn</a> ; ) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#rt6key\">rt6key</a> *<a class=\"id\" href=\"#key\">key</a> = (struct <a class=\"id\" href=\"#rt6key\">rt6key</a> *)((<a class=\"id\" href=\"#u8\">u8</a> *)<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#leaf\">leaf</a> + <a class=\"id\" href=\"#offset\">offset</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>Prefix match</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#plen\">plen</a> &lt; <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#fn_bit\">fn_bit</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#ipv6_prefix_equal\">ipv6_prefix_equal</a>(&amp;<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#fn_bit\">fn_bit</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#plen\">plen</a> == <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#fn_bit\">fn_bit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#fn\">fn</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>We have more bits to go</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#addr_bit_set\">addr_bit_set</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#fn_bit\">fn_bit</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#right\">right</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#left\">left</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#fib6_node\">fib6_node</a> * <a class=\"id\" href=\"#fib6_locate\">fib6_locate</a>(struct <a class=\"id\" href=\"#fib6_node\">fib6_node</a> *<a class=\"id\" href=\"#root\">root</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#daddr\">daddr</a>, int <a class=\"id\" href=\"#dst_len\">dst_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#saddr\">saddr</a>, int <a class=\"id\" href=\"#src_len\">src_len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib6_node\">fib6_node</a> *<a class=\"id\" href=\"#fn\">fn</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#fib6_locate_1\">fib6_locate_1</a>(<a class=\"id\" href=\"#root\">root</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#dst_len\">dst_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a>, <a class=\"id\" href=\"#rt6i_dst\">rt6i_dst</a>));", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_SUBTREES\">CONFIG_IPV6_SUBTREES</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#src_len\">src_len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#saddr\">saddr</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fn\">fn</a> && <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#subtree\">subtree</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#fib6_locate_1\">fib6_locate_1</a>(<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#subtree\">subtree</a>, <a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#src_len\">src_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a>, <a class=\"id\" href=\"#rt6i_src\">rt6i_src</a>));", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fn\">fn</a> && <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#fn_flags\">fn_flags</a>&amp;<a class=\"id\" href=\"#RTN_RTINFO\">RTN_RTINFO</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#fn\">fn</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Deletion</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> *<a class=\"id\" href=\"#fib6_find_prefix\">fib6_find_prefix</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#fib6_node\">fib6_node</a> *<a class=\"id\" href=\"#fn\">fn</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#fn_flags\">fn_flags</a>&amp;<a class=\"id\" href=\"#RTN_ROOT\">RTN_ROOT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#ip6_null_entry\">ip6_null_entry</a>;", 
"", 
"<span class=\"ts\"/>while(<a class=\"id\" href=\"#fn\">fn</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if(<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#left\">left</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#left\">left</a>-><a class=\"id\" href=\"#leaf\">leaf</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if(<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#right\">right</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#right\">right</a>-><a class=\"id\" href=\"#leaf\">leaf</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#FIB6_SUBTREE\">FIB6_SUBTREE</a>(<a class=\"id\" href=\"#fn\">fn</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Called to trim the tree of intermediate nodes when possible. \"fn\"</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>is the node we want to try and remove.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static struct <a class=\"id\" href=\"#fib6_node\">fib6_node</a> *<a class=\"id\" href=\"#fib6_repair_tree\">fib6_repair_tree</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#fib6_node\">fib6_node</a> *<a class=\"id\" href=\"#fn\">fn</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#children\">children</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nstate\">nstate</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib6_node\">fib6_node</a> *<a class=\"id\" href=\"#child\">child</a>, *<a class=\"id\" href=\"#pn\">pn</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib6_walker_t\">fib6_walker_t</a> *<a class=\"id\" href=\"#w\">w</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#iter\">iter</a> = 0;", 
"", 
"<span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#RT6_TRACE\">RT6_TRACE</a>(\"fixing tree: plen=%d iter=%d\\n\", <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#fn_bit\">fn_bit</a>, <a class=\"id\" href=\"#iter\">iter</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>++;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#fn_flags\">fn_flags</a> &amp; <a class=\"id\" href=\"#RTN_RTINFO\">RTN_RTINFO</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#fn_flags\">fn_flags</a> &amp; <a class=\"id\" href=\"#RTN_TL_ROOT\">RTN_TL_ROOT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#leaf\">leaf</a> != <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#children\">children</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#right\">right</a>) <a class=\"id\" href=\"#child\">child</a> = <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#right\">right</a>, <a class=\"id\" href=\"#children\">children</a> |= 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#left\">left</a>) <a class=\"id\" href=\"#child\">child</a> = <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#left\">left</a>, <a class=\"id\" href=\"#children\">children</a> |= 2;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#children\">children</a> == 3 || <a class=\"id\" href=\"#FIB6_SUBTREE\">FIB6_SUBTREE</a>(<a class=\"id\" href=\"#fn\">fn</a>)", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_SUBTREES\">CONFIG_IPV6_SUBTREES</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>    <span class=\"comment\">/* Subtree root (i.e. fn) may have one child */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>    || (<a class=\"id\" href=\"#children\">children</a> && <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#fn_flags\">fn_flags</a>&amp;<a class=\"id\" href=\"#RTN_ROOT\">RTN_ROOT</a>)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>    ) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#leaf\">leaf</a> = <a class=\"id\" href=\"#fib6_find_prefix\">fib6_find_prefix</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#fn\">fn</a>);", 
"#if <a class=\"id\" href=\"#RT6_DEBUG\">RT6_DEBUG</a> >= 2", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#leaf\">leaf</a>==<a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#leaf\">leaf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#leaf\">leaf</a> = <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#ip6_null_entry\">ip6_null_entry</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#leaf\">leaf</a>-><a class=\"id\" href=\"#rt6i_ref\">rt6i_ref</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pn\">pn</a> = <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#parent\">parent</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_SUBTREES\">CONFIG_IPV6_SUBTREES</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#FIB6_SUBTREE\">FIB6_SUBTREE</a>(<a class=\"id\" href=\"#pn\">pn</a>) == <a class=\"id\" href=\"#fn\">fn</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!(<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#fn_flags\">fn_flags</a> &amp; <a class=\"id\" href=\"#RTN_ROOT\">RTN_ROOT</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#FIB6_SUBTREE\">FIB6_SUBTREE</a>(<a class=\"id\" href=\"#pn\">pn</a>) = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nstate\">nstate</a> = <a class=\"id\" href=\"#FWS_L\">FWS_L</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#fn_flags\">fn_flags</a> &amp; <a class=\"id\" href=\"#RTN_ROOT\">RTN_ROOT</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pn\">pn</a>-><a class=\"id\" href=\"#right\">right</a> == <a class=\"id\" href=\"#fn\">fn</a>) <a class=\"id\" href=\"#pn\">pn</a>-><a class=\"id\" href=\"#right\">right</a> = <a class=\"id\" href=\"#child\">child</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#pn\">pn</a>-><a class=\"id\" href=\"#left\">left</a> == <a class=\"id\" href=\"#fn\">fn</a>) <a class=\"id\" href=\"#pn\">pn</a>-><a class=\"id\" href=\"#left\">left</a> = <a class=\"id\" href=\"#child\">child</a>;", 
"#if <a class=\"id\" href=\"#RT6_DEBUG\">RT6_DEBUG</a> >= 2", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(1);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#child\">child</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#pn\">pn</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nstate\">nstate</a> = <a class=\"id\" href=\"#FWS_R\">FWS_R</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_SUBTREES\">CONFIG_IPV6_SUBTREES</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#fib6_walker_lock\">fib6_walker_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#FOR_WALKERS\">FOR_WALKERS</a>(<a class=\"id\" href=\"#w\">w</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#child\">child</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#root\">root</a> == <a class=\"id\" href=\"#fn\">fn</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#root\">root</a> = <a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#RT6_TRACE\">RT6_TRACE</a>(\"W %p adjusted by delroot 1\\n\", <a class=\"id\" href=\"#w\">w</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#node\">node</a> == <a class=\"id\" href=\"#fn\">fn</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#RT6_TRACE\">RT6_TRACE</a>(\"W %p adjusted by delnode 1, s=%d/%d\\n\", <a class=\"id\" href=\"#w\">w</a>, <a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#state\">state</a>, <a class=\"id\" href=\"#nstate\">nstate</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#pn\">pn</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#nstate\">nstate</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#root\">root</a> == <a class=\"id\" href=\"#fn\">fn</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#root\">root</a> = <a class=\"id\" href=\"#child\">child</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#RT6_TRACE\">RT6_TRACE</a>(\"W %p adjusted by delroot 2\\n\", <a class=\"id\" href=\"#w\">w</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#node\">node</a> == <a class=\"id\" href=\"#fn\">fn</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#child\">child</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#children\">children</a>&amp;2) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#RT6_TRACE\">RT6_TRACE</a>(\"W %p adjusted by delnode 2, s=%d\\n\", <a class=\"id\" href=\"#w\">w</a>, <a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#state\">state</a>>=<a class=\"id\" href=\"#FWS_R\">FWS_R</a> ? <a class=\"id\" href=\"#FWS_U\">FWS_U</a> : <a class=\"id\" href=\"#FWS_INIT\">FWS_INIT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#RT6_TRACE\">RT6_TRACE</a>(\"W %p adjusted by delnode 2, s=%d\\n\", <a class=\"id\" href=\"#w\">w</a>, <a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#state\">state</a>>=<a class=\"id\" href=\"#FWS_C\">FWS_C</a> ? <a class=\"id\" href=\"#FWS_U\">FWS_U</a> : <a class=\"id\" href=\"#FWS_INIT\">FWS_INIT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#fib6_walker_lock\">fib6_walker_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node_free\">node_free</a>(<a class=\"id\" href=\"#fn\">fn</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pn\">pn</a>-><a class=\"id\" href=\"#fn_flags\">fn_flags</a>&amp;<a class=\"id\" href=\"#RTN_RTINFO\">RTN_RTINFO</a> || <a class=\"id\" href=\"#FIB6_SUBTREE\">FIB6_SUBTREE</a>(<a class=\"id\" href=\"#pn\">pn</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#pn\">pn</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt6_release\">rt6_release</a>(<a class=\"id\" href=\"#pn\">pn</a>-><a class=\"id\" href=\"#leaf\">leaf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pn\">pn</a>-><a class=\"id\" href=\"#leaf\">leaf</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#pn\">pn</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#fib6_del_route\">fib6_del_route</a>(struct <a class=\"id\" href=\"#fib6_node\">fib6_node</a> *<a class=\"id\" href=\"#fn\">fn</a>, struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> **<a class=\"id\" href=\"#rtp\">rtp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#nl_info\">nl_info</a> *<a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib6_walker_t\">fib6_walker_t</a> *<a class=\"id\" href=\"#w\">w</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> *<a class=\"id\" href=\"#rt\">rt</a> = *<a class=\"id\" href=\"#rtp\">rtp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#nl_net\">nl_net</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#RT6_TRACE\">RT6_TRACE</a>(\"fib6_del_route\\n\");", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Unlink it */</span>", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#rtp\">rtp</a> = <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#rt6_next\">rt6_next</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_node\">rt6i_node</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#rt6_stats\">rt6_stats</a>-><a class=\"id\" href=\"#fib_rt_entries\">fib_rt_entries</a>--;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#rt6_stats\">rt6_stats</a>-><a class=\"id\" href=\"#fib_discarded_routes\">fib_discarded_routes</a>++;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Reset round-robin state, if necessary */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#rr_ptr\">rr_ptr</a> == <a class=\"id\" href=\"#rt\">rt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#rr_ptr\">rr_ptr</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Adjust walkers */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#fib6_walker_lock\">fib6_walker_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#FOR_WALKERS\">FOR_WALKERS</a>(<a class=\"id\" href=\"#w\">w</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#state\">state</a> == <a class=\"id\" href=\"#FWS_C\">FWS_C</a> && <a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#leaf\">leaf</a> == <a class=\"id\" href=\"#rt\">rt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#RT6_TRACE\">RT6_TRACE</a>(\"walker %p adjusted by delroute\\n\", <a class=\"id\" href=\"#w\">w</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#leaf\">leaf</a> = <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#rt6_next\">rt6_next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#leaf\">leaf</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#FWS_U\">FWS_U</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#fib6_walker_lock\">fib6_walker_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#rt6_next\">rt6_next</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If it was last route, expunge its radix tree node */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#leaf\">leaf</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#fn_flags\">fn_flags</a> &= ~<a class=\"id\" href=\"#RTN_RTINFO\">RTN_RTINFO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#rt6_stats\">rt6_stats</a>-><a class=\"id\" href=\"#fib_route_nodes\">fib_route_nodes</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#fib6_repair_tree\">fib6_repair_tree</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#fn\">fn</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_ref\">rt6i_ref</a>) != 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* This route is used as dummy address holder in some split</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * nodes. It is not leaked, but it still holds other resources,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * which must be released in time. So, scan ascendant nodes</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * and replace dummy references to this route with references</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * to still alive ones.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#fn\">fn</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#fn_flags\">fn_flags</a>&amp;<a class=\"id\" href=\"#RTN_RTINFO\">RTN_RTINFO</a>) && <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#leaf\">leaf</a> == <a class=\"id\" href=\"#rt\">rt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#leaf\">leaf</a> = <a class=\"id\" href=\"#fib6_find_prefix\">fib6_find_prefix</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#fn\">fn</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#leaf\">leaf</a>-><a class=\"id\" href=\"#rt6i_ref\">rt6i_ref</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt6_release\">rt6_release</a>(<a class=\"id\" href=\"#rt\">rt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* No more references are possible at this point. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_ref\">rt6i_ref</a>) != 1);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet6_rt_notify\">inet6_rt_notify</a>(<a class=\"id\" href=\"#RTM_DELROUTE\">RTM_DELROUTE</a>, <a class=\"id\" href=\"#rt\">rt</a>, <a class=\"id\" href=\"#info\">info</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rt6_release\">rt6_release</a>(<a class=\"id\" href=\"#rt\">rt</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#fib6_del\">fib6_del</a>(struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> *<a class=\"id\" href=\"#rt\">rt</a>, struct <a class=\"id\" href=\"#nl_info\">nl_info</a> *<a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#nl_net\">nl_net</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib6_node\">fib6_node</a> *<a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_node\">rt6i_node</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> **<a class=\"id\" href=\"#rtp\">rtp</a>;", 
"", 
"#if <a class=\"id\" href=\"#RT6_DEBUG\">RT6_DEBUG</a> >= 2", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#obsolete\">obsolete</a>&gt;0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#fn\">fn</a> != <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fn\">fn</a> == <a class=\"id\" href=\"#NULL\">NULL</a> || <a class=\"id\" href=\"#rt\">rt</a> == <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#ip6_null_entry\">ip6_null_entry</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!(<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#fn_flags\">fn_flags</a> &amp; <a class=\"id\" href=\"#RTN_RTINFO\">RTN_RTINFO</a>));", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_flags\">rt6i_flags</a>&amp;<a class=\"id\" href=\"#RTF_CACHE\">RTF_CACHE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#fib6_node\">fib6_node</a> *<a class=\"id\" href=\"#pn\">pn</a> = <a class=\"id\" href=\"#fn\">fn</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_SUBTREES\">CONFIG_IPV6_SUBTREES</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* clones of this route might be in another subtree */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_src\">rt6i_src</a>.<a class=\"id\" href=\"#plen\">plen</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>while (!(<a class=\"id\" href=\"#pn\">pn</a>-><a class=\"id\" href=\"#fn_flags\">fn_flags</a>&amp;<a class=\"id\" href=\"#RTN_ROOT\">RTN_ROOT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pn\">pn</a> = <a class=\"id\" href=\"#pn\">pn</a>-><a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pn\">pn</a> = <a class=\"id\" href=\"#pn\">pn</a>-><a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fib6_prune_clones\">fib6_prune_clones</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#nl_net\">nl_net</a>, <a class=\"id\" href=\"#pn\">pn</a>, <a class=\"id\" href=\"#rt\">rt</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Walk the leaf entries looking for ourself</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#rtp\">rtp</a> = &amp;<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#leaf\">leaf</a>; *<a class=\"id\" href=\"#rtp\">rtp</a>; <a class=\"id\" href=\"#rtp\">rtp</a> = &amp;(*<a class=\"id\" href=\"#rtp\">rtp</a>)-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#rt6_next\">rt6_next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (*<a class=\"id\" href=\"#rtp\">rtp</a> == <a class=\"id\" href=\"#rt\">rt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fib6_del_route\">fib6_del_route</a>(<a class=\"id\" href=\"#fn\">fn</a>, <a class=\"id\" href=\"#rtp\">rtp</a>, <a class=\"id\" href=\"#info\">info</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Tree traversal function.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Certainly, it is not interrupt safe.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>However, it is internally reenterable wrt itself and fib6_add/fib6_del.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>It means, that we can modify tree during walking</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>and use this function for garbage collection, clone pruning,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>cleaning tree when a device goes down etc. etc.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>It guarantees that every node will be traversed,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>and that it will be traversed only once.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Callback function w-&gt;func may return:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>0 -&gt; continue walking.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>positive value -&gt; walking is suspended (used by tree dumps,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>and probably by gc, if it will be split to several slices)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>negative value -&gt; terminate walking.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>The function itself returns:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>0   -&gt; walk is complete.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>&gt;0  -&gt; walk is incomplete (i.e. suspended)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>&lt;0  -&gt; walk is terminated by an error.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#fib6_walk_continue\">fib6_walk_continue</a>(struct <a class=\"id\" href=\"#fib6_walker_t\">fib6_walker_t</a> *<a class=\"id\" href=\"#w\">w</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib6_node\">fib6_node</a> *<a class=\"id\" href=\"#fn\">fn</a>, *<a class=\"id\" href=\"#pn\">pn</a>;", 
"", 
"<span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fn\">fn</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#prune\">prune</a> && <a class=\"id\" href=\"#fn\">fn</a> != <a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#root\">root</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#fn_flags\">fn_flags</a>&amp;<a class=\"id\" href=\"#RTN_RTINFO\">RTN_RTINFO</a> && <a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#state\">state</a> &lt; <a class=\"id\" href=\"#FWS_C\">FWS_C</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#FWS_C\">FWS_C</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#leaf\">leaf</a> = <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#leaf\">leaf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#state\">state</a>) {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_SUBTREES\">CONFIG_IPV6_SUBTREES</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#FWS_S\">FWS_S</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#FIB6_SUBTREE\">FIB6_SUBTREE</a>(<a class=\"id\" href=\"#fn\">fn</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#FIB6_SUBTREE\">FIB6_SUBTREE</a>(<a class=\"id\" href=\"#fn\">fn</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#FWS_L\">FWS_L</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#FWS_L\">FWS_L</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#left\">left</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#left\">left</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#FWS_INIT\">FWS_INIT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#FWS_R\">FWS_R</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#FWS_R\">FWS_R</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#right\">right</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#right\">right</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#FWS_INIT\">FWS_INIT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#FWS_C\">FWS_C</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#leaf\">leaf</a> = <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#leaf\">leaf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#FWS_C\">FWS_C</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#leaf\">leaf</a> && <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#fn_flags\">fn_flags</a>&amp;<a class=\"id\" href=\"#RTN_RTINFO\">RTN_RTINFO</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#count\">count</a> &lt; <a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#skip\">skip</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#count\">count</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#func\">func</a>(<a class=\"id\" href=\"#w\">w</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#count\">count</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#FWS_U\">FWS_U</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#FWS_U\">FWS_U</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fn\">fn</a> == <a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#root\">root</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pn\">pn</a> = <a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#pn\">pn</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_SUBTREES\">CONFIG_IPV6_SUBTREES</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#FIB6_SUBTREE\">FIB6_SUBTREE</a>(<a class=\"id\" href=\"#pn\">pn</a>) == <a class=\"id\" href=\"#fn\">fn</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!(<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#fn_flags\">fn_flags</a> &amp; <a class=\"id\" href=\"#RTN_ROOT\">RTN_ROOT</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#FWS_L\">FWS_L</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pn\">pn</a>-><a class=\"id\" href=\"#left\">left</a> == <a class=\"id\" href=\"#fn\">fn</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#FWS_R\">FWS_R</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pn\">pn</a>-><a class=\"id\" href=\"#right\">right</a> == <a class=\"id\" href=\"#fn\">fn</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#FWS_C\">FWS_C</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#leaf\">leaf</a> = <a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#leaf\">leaf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"#if <a class=\"id\" href=\"#RT6_DEBUG\">RT6_DEBUG</a> >= 2", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(1);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#fib6_walk\">fib6_walk</a>(struct <a class=\"id\" href=\"#fib6_walker_t\">fib6_walker_t</a> *<a class=\"id\" href=\"#w\">w</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#res\">res</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#FWS_INIT\">FWS_INIT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#root\">root</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fib6_walker_link\">fib6_walker_link</a>(<a class=\"id\" href=\"#w\">w</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#fib6_walk_continue\">fib6_walk_continue</a>(<a class=\"id\" href=\"#w\">w</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a> <= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fib6_walker_unlink\">fib6_walker_unlink</a>(<a class=\"id\" href=\"#w\">w</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#fib6_clean_node\">fib6_clean_node</a>(struct <a class=\"id\" href=\"#fib6_walker_t\">fib6_walker_t</a> *<a class=\"id\" href=\"#w\">w</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> *<a class=\"id\" href=\"#rt\">rt</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib6_cleaner_t\">fib6_cleaner_t</a> *<a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#w\">w</a>, struct <a class=\"id\" href=\"#fib6_cleaner_t\">fib6_cleaner_t</a>, <a class=\"id\" href=\"#w\">w</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nl_info\">nl_info</a> <a class=\"id\" href=\"#info\">info</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#nl_net\">nl_net</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#net\">net</a>,", 
"<span class=\"ts\"/>};", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#rt\">rt</a> = <a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#leaf\">leaf</a>; <a class=\"id\" href=\"#rt\">rt</a>; <a class=\"id\" href=\"#rt\">rt</a> = <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#rt6_next\">rt6_next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#func\">func</a>(<a class=\"id\" href=\"#rt\">rt</a>, <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#leaf\">leaf</a> = <a class=\"id\" href=\"#rt\">rt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#fib6_del\">fib6_del</a>(<a class=\"id\" href=\"#rt\">rt</a>, &amp;<a class=\"id\" href=\"#info\">info</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a>) {", 
"#if <a class=\"id\" href=\"#RT6_DEBUG\">RT6_DEBUG</a> >= 2", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"fib6_clean_node: del failed: rt=%p@%p err=%d\\n\", <a class=\"id\" href=\"#rt\">rt</a>, <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_node\">rt6i_node</a>, <a class=\"id\" href=\"#res\">res</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#res\">res</a> != 0);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a>-><a class=\"id\" href=\"#leaf\">leaf</a> = <a class=\"id\" href=\"#rt\">rt</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Convenient frontend to tree walker.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>func is called on each route.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>It may return -1 -&gt; delete this route.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>              0  -&gt; continue walking</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>prune==1 -&gt; only immediate children of node (certainly,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ignoring pure split nodes) will be scanned.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#fib6_clean_tree\">fib6_clean_tree</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#fib6_node\">fib6_node</a> *<a class=\"id\" href=\"#root\">root</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    int (*<a class=\"id\" href=\"#func\">func</a>)(struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> *, void *<a class=\"id\" href=\"#arg\">arg</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    int <a class=\"id\" href=\"#prune\">prune</a>, void *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib6_cleaner_t\">fib6_cleaner_t</a> <a class=\"id\" href=\"#c\">c</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>.<a class=\"id\" href=\"#w\">w</a>.<a class=\"id\" href=\"#root\">root</a> = <a class=\"id\" href=\"#root\">root</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>.<a class=\"id\" href=\"#w\">w</a>.<a class=\"id\" href=\"#func\">func</a> = <a class=\"id\" href=\"#fib6_clean_node\">fib6_clean_node</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>.<a class=\"id\" href=\"#w\">w</a>.<a class=\"id\" href=\"#prune\">prune</a> = <a class=\"id\" href=\"#prune\">prune</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>.<a class=\"id\" href=\"#w\">w</a>.<a class=\"id\" href=\"#count\">count</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>.<a class=\"id\" href=\"#w\">w</a>.<a class=\"id\" href=\"#skip\">skip</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>.<a class=\"id\" href=\"#func\">func</a> = <a class=\"id\" href=\"#func\">func</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>.<a class=\"id\" href=\"#arg\">arg</a> = <a class=\"id\" href=\"#arg\">arg</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>.<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#net\">net</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fib6_walk\">fib6_walk</a>(&amp;<a class=\"id\" href=\"#c\">c</a>.<a class=\"id\" href=\"#w\">w</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#fib6_clean_all\">fib6_clean_all</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, int (*<a class=\"id\" href=\"#func\">func</a>)(struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> *, void *<a class=\"id\" href=\"#arg\">arg</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>    int <a class=\"id\" href=\"#prune\">prune</a>, void *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib6_table\">fib6_table</a> *<a class=\"id\" href=\"#table\">table</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#h\">h</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#h\">h</a> = 0; <a class=\"id\" href=\"#h\">h</a> &lt; <a class=\"id\" href=\"#FIB6_TABLE_HASHSZ\">FIB6_TABLE_HASHSZ</a>; <a class=\"id\" href=\"#h\">h</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = &amp;<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#fib_table_hash\">fib_table_hash</a>[<a class=\"id\" href=\"#h\">h</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlist_for_each_entry_rcu\">hlist_for_each_entry_rcu</a>(<a class=\"id\" href=\"#table\">table</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#head\">head</a>, <a class=\"id\" href=\"#tb6_hlist\">tb6_hlist</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#tb6_lock\">tb6_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fib6_clean_tree\">fib6_clean_tree</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#tb6_root\">tb6_root</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#func\">func</a>, <a class=\"id\" href=\"#prune\">prune</a>, <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#tb6_lock\">tb6_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"}", 
"", 
"static int <a class=\"id\" href=\"#fib6_prune_clone\">fib6_prune_clone</a>(struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> *<a class=\"id\" href=\"#rt\">rt</a>, void *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_flags\">rt6i_flags</a> &amp; <a class=\"id\" href=\"#RTF_CACHE\">RTF_CACHE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#RT6_TRACE\">RT6_TRACE</a>(\"pruning clone %p\\n\", <a class=\"id\" href=\"#rt\">rt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#fib6_prune_clones\">fib6_prune_clones</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#fib6_node\">fib6_node</a> *<a class=\"id\" href=\"#fn\">fn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> *<a class=\"id\" href=\"#rt\">rt</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fib6_clean_tree\">fib6_clean_tree</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#fn\">fn</a>, <a class=\"id\" href=\"#fib6_prune_clone\">fib6_prune_clone</a>, 1, <a class=\"id\" href=\"#rt\">rt</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Garbage collection</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static struct <a class=\"id\" href=\"#fib6_gc_args\">fib6_gc_args</a>", 
"{", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timeout\">timeout</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#more\">more</a>;", 
"} <a class=\"id\" href=\"#gc_args\">gc_args</a>;", 
"", 
"static int <a class=\"id\" href=\"#fib6_age\">fib6_age</a>(struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> *<a class=\"id\" href=\"#rt\">rt</a>, void *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#now\">now</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>check addrconf expiration here.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Routes are expired even if they are in use.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Also age clones. Note, that clones are aged out</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>only if they are not in use now.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_flags\">rt6i_flags</a>&amp;<a class=\"id\" href=\"#RTF_EXPIRES\">RTF_EXPIRES</a> && <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_expires\">rt6i_expires</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#time_after\">time_after</a>(<a class=\"id\" href=\"#now\">now</a>, <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_expires\">rt6i_expires</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#RT6_TRACE\">RT6_TRACE</a>(\"expiring %p\\n\", <a class=\"id\" href=\"#rt\">rt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gc_args\">gc_args</a>.<a class=\"id\" href=\"#more\">more</a>++;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_flags\">rt6i_flags</a> &amp; <a class=\"id\" href=\"#RTF_CACHE\">RTF_CACHE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#__refcnt\">__refcnt</a>) == 0 &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#time_after_eq\">time_after_eq</a>(<a class=\"id\" href=\"#now\">now</a>, <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#lastuse\">lastuse</a> + <a class=\"id\" href=\"#gc_args\">gc_args</a>.<a class=\"id\" href=\"#timeout\">timeout</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#RT6_TRACE\">RT6_TRACE</a>(\"aging clone %p\\n\", <a class=\"id\" href=\"#rt\">rt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if ((<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_flags\">rt6i_flags</a> &amp; <a class=\"id\" href=\"#RTF_GATEWAY\">RTF_GATEWAY</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (!(<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_nexthop\">rt6i_nexthop</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#NTF_ROUTER\">NTF_ROUTER</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#RT6_TRACE\">RT6_TRACE</a>(\"purging route %p via non-router but gateway\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#rt\">rt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gc_args\">gc_args</a>.<a class=\"id\" href=\"#more\">more</a>++;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#DEFINE_SPINLOCK\">DEFINE_SPINLOCK</a>(<a class=\"id\" href=\"#fib6_gc_lock\">fib6_gc_lock</a>);", 
"", 
"void <a class=\"id\" href=\"#fib6_run_gc\">fib6_run_gc</a>(unsigned long <a class=\"id\" href=\"#expires\">expires</a>, struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#expires\">expires</a> != ~0UL) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#fib6_gc_lock\">fib6_gc_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gc_args\">gc_args</a>.<a class=\"id\" href=\"#timeout\">timeout</a> = <a class=\"id\" href=\"#expires\">expires</a> ? (int)<a class=\"id\" href=\"#expires\">expires</a> :", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#sysctl\">sysctl</a>.<a class=\"id\" href=\"#ip6_rt_gc_interval\">ip6_rt_gc_interval</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#spin_trylock_bh\">spin_trylock_bh</a>(&amp;<a class=\"id\" href=\"#fib6_gc_lock\">fib6_gc_lock</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mod_timer\">mod_timer</a>(&amp;<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#ip6_fib_timer\">ip6_fib_timer</a>, <a class=\"id\" href=\"#jiffies\">jiffies</a> + <a class=\"id\" href=\"#HZ\">HZ</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gc_args\">gc_args</a>.<a class=\"id\" href=\"#timeout\">timeout</a> = <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#sysctl\">sysctl</a>.<a class=\"id\" href=\"#ip6_rt_gc_interval\">ip6_rt_gc_interval</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gc_args\">gc_args</a>.<a class=\"id\" href=\"#more\">more</a> = <a class=\"id\" href=\"#icmp6_dst_gc\">icmp6_dst_gc</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fib6_clean_all\">fib6_clean_all</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#fib6_age\">fib6_age</a>, 0, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#gc_args\">gc_args</a>.<a class=\"id\" href=\"#more\">more</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mod_timer\">mod_timer</a>(&amp;<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#ip6_fib_timer\">ip6_fib_timer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#round_jiffies\">round_jiffies</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>+ <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#sysctl\">sysctl</a>.<a class=\"id\" href=\"#ip6_rt_gc_interval\">ip6_rt_gc_interval</a>));", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#del_timer\">del_timer</a>(&amp;<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#ip6_fib_timer\">ip6_fib_timer</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#fib6_gc_lock\">fib6_gc_lock</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#fib6_gc_timer_cb\">fib6_gc_timer_cb</a>(unsigned long <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fib6_run_gc\">fib6_run_gc</a>(0, (struct <a class=\"id\" href=\"#net\">net</a> *)<a class=\"id\" href=\"#arg\">arg</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__net_init\">__net_init</a> <a class=\"id\" href=\"#fib6_net_init\">fib6_net_init</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#setup_timer\">setup_timer</a>(&amp;<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#ip6_fib_timer\">ip6_fib_timer</a>, <a class=\"id\" href=\"#fib6_gc_timer_cb\">fib6_gc_timer_cb</a>, (unsigned long)<a class=\"id\" href=\"#net\">net</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#rt6_stats\">rt6_stats</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#rt6_stats\">rt6_stats</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#rt6_stats\">rt6_stats</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_timer\">out_timer</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#fib_table_hash\">fib_table_hash</a> = <a class=\"id\" href=\"#kcalloc\">kcalloc</a>(<a class=\"id\" href=\"#FIB6_TABLE_HASHSZ\">FIB6_TABLE_HASHSZ</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   sizeof(*<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#fib_table_hash\">fib_table_hash</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#fib_table_hash\">fib_table_hash</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_rt6_stats\">out_rt6_stats</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#fib6_main_tbl\">fib6_main_tbl</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#fib6_main_tbl\">fib6_main_tbl</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#fib6_main_tbl\">fib6_main_tbl</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_fib_table_hash\">out_fib_table_hash</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#fib6_main_tbl\">fib6_main_tbl</a>-><a class=\"id\" href=\"#tb6_id\">tb6_id</a> = <a class=\"id\" href=\"#RT6_TABLE_MAIN\">RT6_TABLE_MAIN</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#fib6_main_tbl\">fib6_main_tbl</a>-><a class=\"id\" href=\"#tb6_root\">tb6_root</a>.<a class=\"id\" href=\"#leaf\">leaf</a> = <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#ip6_null_entry\">ip6_null_entry</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#fib6_main_tbl\">fib6_main_tbl</a>-><a class=\"id\" href=\"#tb6_root\">tb6_root</a>.<a class=\"id\" href=\"#fn_flags\">fn_flags</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#RTN_ROOT\">RTN_ROOT</a> | <a class=\"id\" href=\"#RTN_TL_ROOT\">RTN_TL_ROOT</a> | <a class=\"id\" href=\"#RTN_RTINFO\">RTN_RTINFO</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_MULTIPLE_TABLES\">CONFIG_IPV6_MULTIPLE_TABLES</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#fib6_local_tbl\">fib6_local_tbl</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#fib6_local_tbl\">fib6_local_tbl</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#fib6_local_tbl\">fib6_local_tbl</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_fib6_main_tbl\">out_fib6_main_tbl</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#fib6_local_tbl\">fib6_local_tbl</a>-><a class=\"id\" href=\"#tb6_id\">tb6_id</a> = <a class=\"id\" href=\"#RT6_TABLE_LOCAL\">RT6_TABLE_LOCAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#fib6_local_tbl\">fib6_local_tbl</a>-><a class=\"id\" href=\"#tb6_root\">tb6_root</a>.<a class=\"id\" href=\"#leaf\">leaf</a> = <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#ip6_null_entry\">ip6_null_entry</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#fib6_local_tbl\">fib6_local_tbl</a>-><a class=\"id\" href=\"#tb6_root\">tb6_root</a>.<a class=\"id\" href=\"#fn_flags\">fn_flags</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#RTN_ROOT\">RTN_ROOT</a> | <a class=\"id\" href=\"#RTN_TL_ROOT\">RTN_TL_ROOT</a> | <a class=\"id\" href=\"#RTN_RTINFO\">RTN_RTINFO</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fib6_tables_init\">fib6_tables_init</a>(<a class=\"id\" href=\"#net\">net</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_MULTIPLE_TABLES\">CONFIG_IPV6_MULTIPLE_TABLES</a>", 
"<a class=\"id\" href=\"#out_fib6_main_tbl\">out_fib6_main_tbl</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#fib6_main_tbl\">fib6_main_tbl</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<a class=\"id\" href=\"#out_fib_table_hash\">out_fib_table_hash</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#fib_table_hash\">fib_table_hash</a>);", 
"<a class=\"id\" href=\"#out_rt6_stats\">out_rt6_stats</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#rt6_stats\">rt6_stats</a>);", 
"<a class=\"id\" href=\"#out_timer\">out_timer</a>:", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
" }", 
"", 
"static void <a class=\"id\" href=\"#fib6_net_exit\">fib6_net_exit</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rt6_ifdown\">rt6_ifdown</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#del_timer_sync\">del_timer_sync</a>(&amp;<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#ip6_fib_timer\">ip6_fib_timer</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_MULTIPLE_TABLES\">CONFIG_IPV6_MULTIPLE_TABLES</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#fib6_local_tbl\">fib6_local_tbl</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#fib6_main_tbl\">fib6_main_tbl</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#fib_table_hash\">fib_table_hash</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#rt6_stats\">rt6_stats</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#pernet_operations\">pernet_operations</a> <a class=\"id\" href=\"#fib6_net_ops\">fib6_net_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#init\">init</a> = <a class=\"id\" href=\"#fib6_net_init\">fib6_net_init</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#exit\">exit</a> = <a class=\"id\" href=\"#fib6_net_exit\">fib6_net_exit</a>,", 
"};", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#fib6_init\">fib6_init</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fib6_node_kmem\">fib6_node_kmem</a> = <a class=\"id\" href=\"#kmem_cache_create\">kmem_cache_create</a>(\"fib6_nodes\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   sizeof(struct <a class=\"id\" href=\"#fib6_node\">fib6_node</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   0, <a class=\"id\" href=\"#SLAB_HWCACHE_ALIGN\">SLAB_HWCACHE_ALIGN</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#fib6_node_kmem\">fib6_node_kmem</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#register_pernet_subsys\">register_pernet_subsys</a>(&amp;<a class=\"id\" href=\"#fib6_net_ops\">fib6_net_ops</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_kmem_cache_create\">out_kmem_cache_create</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#__rtnl_register\">__rtnl_register</a>(<a class=\"id\" href=\"#PF_INET6\">PF_INET6</a>, <a class=\"id\" href=\"#RTM_GETROUTE\">RTM_GETROUTE</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#inet6_dump_fib\">inet6_dump_fib</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unregister_subsys\">out_unregister_subsys</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<a class=\"id\" href=\"#out_unregister_subsys\">out_unregister_subsys</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_pernet_subsys\">unregister_pernet_subsys</a>(&amp;<a class=\"id\" href=\"#fib6_net_ops\">fib6_net_ops</a>);", 
"<a class=\"id\" href=\"#out_kmem_cache_create\">out_kmem_cache_create</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_destroy\">kmem_cache_destroy</a>(<a class=\"id\" href=\"#fib6_node_kmem\">fib6_node_kmem</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#fib6_gc_cleanup\">fib6_gc_cleanup</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_pernet_subsys\">unregister_pernet_subsys</a>(&amp;<a class=\"id\" href=\"#fib6_net_ops\">fib6_net_ops</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_destroy\">kmem_cache_destroy</a>(<a class=\"id\" href=\"#fib6_node_kmem\">fib6_node_kmem</a>);", 
"}", 
];
xr_frag_insert('l/5d/b18dd9695057e959a4693aafbeadba14306a87.xr', __xr_tmp);
