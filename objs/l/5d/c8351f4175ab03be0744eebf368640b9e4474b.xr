var __xr_tmp = [
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * trace_seq_vprintf - sequence printing of trace information</span>", 
"<span class=\"comment\"> * @s: trace sequence descriptor</span>", 
"<span class=\"comment\"> * @fmt: printf format string</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The tracer may use either sequence operations or its own</span>", 
"<span class=\"comment\"> * copy to user routines. To simplify formating of a trace</span>", 
"<span class=\"comment\"> * trace_seq_printf is used to store strings into a special</span>", 
"<span class=\"comment\"> * buffer (@s). Then the output may be either used by</span>", 
"<span class=\"comment\"> * the sequencer or pulled into another buffer.</span>", 
"<span class=\"comment\"> */</span>", 
"int", 
"<a class=\"id\" href=\"#trace_seq_vprintf\">trace_seq_vprintf</a>(struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a>, const char *<a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#va_list\">va_list</a> <a class=\"id\" href=\"#args\">args</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a> = (<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - 1) - <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#full\">full</a> || !<a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#vsnprintf\">vsnprintf</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#buffer\">buffer</a> + <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#args\">args</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If we can't write it all, don't bother writing anything */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> >= <a class=\"id\" href=\"#len\">len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#full\">full</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#trace_seq_vprintf\">trace_seq_vprintf</a>);", 
"", 
"int <a class=\"id\" href=\"#trace_seq_bprintf\">trace_seq_bprintf</a>(struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a>, const char *<a class=\"id\" href=\"#fmt\">fmt</a>, const <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#binary\">binary</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a> = (<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - 1) - <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#full\">full</a> || !<a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#bstr_printf\">bstr_printf</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#buffer\">buffer</a> + <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#binary\">binary</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If we can't write it all, don't bother writing anything */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> >= <a class=\"id\" href=\"#len\">len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#full\">full</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * trace_seq_puts - trace sequence printing of simple string</span>", 
"<span class=\"comment\"> * @s: trace sequence descriptor</span>", 
"<span class=\"comment\"> * @str: simple string to record</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The tracer may use either the sequence operations or its own</span>", 
"<span class=\"comment\"> * copy to user routines. This function records a simple string</span>", 
"<span class=\"comment\"> * into a special buffer (@s) for later retrieval by a sequencer</span>", 
"<span class=\"comment\"> * or other mechanism.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#trace_seq_puts\">trace_seq_puts</a>(struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a>, const char *<a class=\"id\" href=\"#str\">str</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#str\">str</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#full\">full</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; ((<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - 1) - <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#len\">len</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#full\">full</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#buffer\">buffer</a> + <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#str\">str</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#trace_seq_putc\">trace_seq_putc</a>(struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a>, unsigned char <a class=\"id\" href=\"#c\">c</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#full\">full</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#len\">len</a> >= (<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - 1)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#full\">full</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#len\">len</a>++] = <a class=\"id\" href=\"#c\">c</a>;", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#trace_seq_putc\">trace_seq_putc</a>);", 
"", 
"int <a class=\"id\" href=\"#trace_seq_putmem\">trace_seq_putmem</a>(struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a>, const void *<a class=\"id\" href=\"#mem\">mem</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#full\">full</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; ((<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - 1) - <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#len\">len</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#full\">full</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#buffer\">buffer</a> + <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#mem\">mem</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#trace_seq_putmem_hex\">trace_seq_putmem_hex</a>(struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a>, const void *<a class=\"id\" href=\"#mem\">mem</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#hex\">hex</a>[<a class=\"id\" href=\"#HEX_CHARS\">HEX_CHARS</a>];", 
"<span class=\"ts\"/>const unsigned char *<a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#mem\">mem</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#j\">j</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#full\">full</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__BIG_ENDIAN\">__BIG_ENDIAN</a>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0, <a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#len\">len</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"#else", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#len\">len</a>-1, <a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#i\">i</a> >= 0; <a class=\"id\" href=\"#i\">i</a>--) {", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hex\">hex</a>[<a class=\"id\" href=\"#j\">j</a>++] = <a class=\"id\" href=\"#hex_asc_hi\">hex_asc_hi</a>(<a class=\"id\" href=\"#data\">data</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hex\">hex</a>[<a class=\"id\" href=\"#j\">j</a>++] = <a class=\"id\" href=\"#hex_asc_lo\">hex_asc_lo</a>(<a class=\"id\" href=\"#data\">data</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hex\">hex</a>[<a class=\"id\" href=\"#j\">j</a>++] = ' ';", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#trace_seq_putmem\">trace_seq_putmem</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#hex\">hex</a>, <a class=\"id\" href=\"#j\">j</a>);", 
"}", 
"", 
"void *<a class=\"id\" href=\"#trace_seq_reserve\">trace_seq_reserve</a>(struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#full\">full</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; ((<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - 1) - <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#len\">len</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#full\">full</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#buffer\">buffer</a> + <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#trace_seq_path\">trace_seq_path</a>(struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a>, struct <a class=\"id\" href=\"#path\">path</a> *<a class=\"id\" href=\"#path\">path</a>)", 
"{", 
"<span class=\"ts\"/>unsigned char *<a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#full\">full</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#len\">len</a> >= (<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - 1)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#full\">full</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#d_path\">d_path</a>(<a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#buffer\">buffer</a> + <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#p\">p</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#mangle_path\">mangle_path</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#buffer\">buffer</a> + <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#p\">p</a>, \"\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#p\">p</a> - <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#buffer\">buffer</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#len\">len</a>++] = '?';", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#full\">full</a> = 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"const char *", 
"<a class=\"id\" href=\"#ftrace_print_flags_seq\">ftrace_print_flags_seq</a>(struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#p\">p</a>, const char *<a class=\"id\" href=\"#delim\">delim</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       unsigned long <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       const struct <a class=\"id\" href=\"#trace_print_flags\">trace_print_flags</a> *<a class=\"id\" href=\"#flag_array\">flag_array</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#str\">str</a>;", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#buffer\">buffer</a> + <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0;  <a class=\"id\" href=\"#flag_array\">flag_array</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#name\">name</a> && <a class=\"id\" href=\"#flags\">flags</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#flag_array\">flag_array</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#mask\">mask</a>) != <a class=\"id\" href=\"#mask\">mask</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#str\">str</a> = <a class=\"id\" href=\"#flag_array\">flag_array</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#len\">len</a> && <a class=\"id\" href=\"#delim\">delim</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_seq_puts\">trace_seq_puts</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#delim\">delim</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_seq_puts\">trace_seq_puts</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#str\">str</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* check for left over flags */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#len\">len</a> && <a class=\"id\" href=\"#delim\">delim</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_seq_puts\">trace_seq_puts</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#delim\">delim</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"0x%lx\", <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_seq_putc\">trace_seq_putc</a>(<a class=\"id\" href=\"#p\">p</a>, 0);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#ftrace_print_flags_seq\">ftrace_print_flags_seq</a>);", 
"", 
"const char *", 
"<a class=\"id\" href=\"#ftrace_print_symbols_seq\">ftrace_print_symbols_seq</a>(struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#p\">p</a>, unsigned long <a class=\"id\" href=\"#val\">val</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const struct <a class=\"id\" href=\"#trace_print_flags\">trace_print_flags</a> *<a class=\"id\" href=\"#symbol_array\">symbol_array</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#buffer\">buffer</a> + <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0;  <a class=\"id\" href=\"#symbol_array\">symbol_array</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#name\">name</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#val\">val</a> != <a class=\"id\" href=\"#symbol_array\">symbol_array</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#mask\">mask</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_seq_puts\">trace_seq_puts</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#symbol_array\">symbol_array</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"0x%lx\", <a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_seq_putc\">trace_seq_putc</a>(<a class=\"id\" href=\"#p\">p</a>, 0);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#ftrace_print_symbols_seq\">ftrace_print_symbols_seq</a>);", 
"", 
"const char *", 
"<a class=\"id\" href=\"#ftrace_print_hex_seq\">ftrace_print_hex_seq</a>(struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#p\">p</a>, const unsigned char *<a class=\"id\" href=\"#buf\">buf</a>, int <a class=\"id\" href=\"#buf_len\">buf_len</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#buffer\">buffer</a> + <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#buf_len\">buf_len</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"%s%2.2x\", <a class=\"id\" href=\"#i\">i</a> == 0 ? \"\" : \" \", <a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_seq_putc\">trace_seq_putc</a>(<a class=\"id\" href=\"#p\">p</a>, 0);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#ftrace_print_hex_seq\">ftrace_print_hex_seq</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_KRETPROBES\">CONFIG_KRETPROBES</a>", 
"static <a class=\"id\" href=\"#inline\">inline</a> const char *<a class=\"id\" href=\"#kretprobed\">kretprobed</a>(const char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>static const char <a class=\"id\" href=\"#tramp_name\">tramp_name</a>[] = \"kretprobe_trampoline\";", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#size\">size</a> = sizeof(<a class=\"id\" href=\"#tramp_name\">tramp_name</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#strncmp\">strncmp</a>(<a class=\"id\" href=\"#tramp_name\">tramp_name</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#size\">size</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return \"[unknown/kretprobe'd]\";", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#name\">name</a>;", 
"}", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> const char *<a class=\"id\" href=\"#kretprobed\">kretprobed</a>(const char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#name\">name</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_KRETPROBES */</span>", 
"", 
"static int", 
"<a class=\"id\" href=\"#seq_print_sym_short\">seq_print_sym_short</a>(struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a>, const char *<a class=\"id\" href=\"#fmt\">fmt</a>, unsigned long <a class=\"id\" href=\"#address\">address</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_KALLSYMS\">CONFIG_KALLSYMS</a>", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#str\">str</a>[<a class=\"id\" href=\"#KSYM_SYMBOL_LEN\">KSYM_SYMBOL_LEN</a>];", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#name\">name</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kallsyms_lookup\">kallsyms_lookup</a>(<a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#str\">str</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#kretprobed\">kretprobed</a>(<a class=\"id\" href=\"#str\">str</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#name\">name</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#seq_print_sym_offset\">seq_print_sym_offset</a>(struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a>, const char *<a class=\"id\" href=\"#fmt\">fmt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     unsigned long <a class=\"id\" href=\"#address\">address</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_KALLSYMS\">CONFIG_KALLSYMS</a>", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#str\">str</a>[<a class=\"id\" href=\"#KSYM_SYMBOL_LEN\">KSYM_SYMBOL_LEN</a>];", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#name\">name</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sprint_symbol\">sprint_symbol</a>(<a class=\"id\" href=\"#str\">str</a>, <a class=\"id\" href=\"#address\">address</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#kretprobed\">kretprobed</a>(<a class=\"id\" href=\"#str\">str</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#name\">name</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_64BIT\">CONFIG_64BIT</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IP_FMT\">IP_FMT</a> \"%08lx\"", 
"#else", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IP_FMT\">IP_FMT</a> \"%016lx\"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"int <a class=\"id\" href=\"#seq_print_user_ip\">seq_print_user_ip</a>(struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a>, struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      unsigned long <a class=\"id\" href=\"#ip\">ip</a>, unsigned long <a class=\"id\" href=\"#sym_flags\">sym_flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#vmstart\">vmstart</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#full\">full</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mm\">mm</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#mmap_sem\">mmap_sem</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#find_vma\">find_vma</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#vma\">vma</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_file\">vm_file</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vmstart\">vmstart</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#file\">file</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#trace_seq_path\">trace_seq_path</a>(<a class=\"id\" href=\"#s\">s</a>, &amp;<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \"[+0x%lx]\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#ip\">ip</a> - <a class=\"id\" href=\"#vmstart\">vmstart</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#mmap_sem\">mmap_sem</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> && ((<a class=\"id\" href=\"#sym_flags\">sym_flags</a> &amp; <a class=\"id\" href=\"#TRACE_ITER_SYM_ADDR\">TRACE_ITER_SYM_ADDR</a>) || !<a class=\"id\" href=\"#file\">file</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \" <\" <a class=\"id\" href=\"#IP_FMT\">IP_FMT</a> \">\", <a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"int", 
"<a class=\"id\" href=\"#seq_print_userip_objs\">seq_print_userip_objs</a>(const struct <a class=\"id\" href=\"#userstack_entry\">userstack_entry</a> *<a class=\"id\" href=\"#entry\">entry</a>, struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      unsigned long <a class=\"id\" href=\"#sym_flags\">sym_flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 1;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#trace_flags\">trace_flags</a> &amp; <a class=\"id\" href=\"#TRACE_ITER_SYM_USEROBJ\">TRACE_ITER_SYM_USEROBJ</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * we do the lookup on the thread group leader,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * since individual threads might have already quit!</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#find_task_by_vpid\">find_task_by_vpid</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#tgid\">tgid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#task\">task</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a> = <a class=\"id\" href=\"#get_task_mm\">get_task_mm</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#FTRACE_STACK_ENTRIES\">FTRACE_STACK_ENTRIES</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#ip\">ip</a> = <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#caller\">caller</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ip\">ip</a> == <a class=\"id\" href=\"#ULONG_MAX\">ULONG_MAX</a> || !<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#trace_seq_puts\">trace_seq_puts</a>(<a class=\"id\" href=\"#s\">s</a>, \" => \");", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ip\">ip</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#trace_seq_puts\">trace_seq_puts</a>(<a class=\"id\" href=\"#s\">s</a>, \"??\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#trace_seq_puts\">trace_seq_puts</a>(<a class=\"id\" href=\"#s\">s</a>, \"\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#seq_print_user_ip\">seq_print_user_ip</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#ip\">ip</a>, <a class=\"id\" href=\"#sym_flags\">sym_flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#trace_seq_puts\">trace_seq_puts</a>(<a class=\"id\" href=\"#s\">s</a>, \"\\n\");", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mm\">mm</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mmput\">mmput</a>(<a class=\"id\" href=\"#mm\">mm</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"int", 
"<a class=\"id\" href=\"#seq_print_ip_sym\">seq_print_ip_sym</a>(struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a>, unsigned long <a class=\"id\" href=\"#ip\">ip</a>, unsigned long <a class=\"id\" href=\"#sym_flags\">sym_flags</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ip\">ip</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \"0\");", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sym_flags\">sym_flags</a> &amp; <a class=\"id\" href=\"#TRACE_ITER_SYM_OFFSET\">TRACE_ITER_SYM_OFFSET</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#seq_print_sym_offset\">seq_print_sym_offset</a>(<a class=\"id\" href=\"#s\">s</a>, \"%s\", <a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#seq_print_sym_short\">seq_print_sym_short</a>(<a class=\"id\" href=\"#s\">s</a>, \"%s\", <a class=\"id\" href=\"#ip\">ip</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sym_flags\">sym_flags</a> &amp; <a class=\"id\" href=\"#TRACE_ITER_SYM_ADDR\">TRACE_ITER_SYM_ADDR</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \" <\" <a class=\"id\" href=\"#IP_FMT\">IP_FMT</a> \">\", <a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * trace_print_lat_fmt - print the irq, preempt and lockdep fields</span>", 
"<span class=\"comment\"> * @s: trace seq struct to write to</span>", 
"<span class=\"comment\"> * @entry: The trace entry field from the ring buffer</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Prints the generic fields of irqs off, in hard or softirq, preempt</span>", 
"<span class=\"comment\"> * count and lock depth.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#trace_print_lat_fmt\">trace_print_lat_fmt</a>(struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a>, struct <a class=\"id\" href=\"#trace_entry\">trace_entry</a> *<a class=\"id\" href=\"#entry\">entry</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#hardirq\">hardirq</a>, <a class=\"id\" href=\"#softirq\">softirq</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hardirq\">hardirq</a> = <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TRACE_FLAG_HARDIRQ\">TRACE_FLAG_HARDIRQ</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#softirq\">softirq</a> = <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TRACE_FLAG_SOFTIRQ\">TRACE_FLAG_SOFTIRQ</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \"%c%c%c\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      (<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TRACE_FLAG_IRQS_OFF\">TRACE_FLAG_IRQS_OFF</a>) ? 'd' :", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TRACE_FLAG_IRQS_NOSUPPORT\">TRACE_FLAG_IRQS_NOSUPPORT</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  'X' : '.',", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      (<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TRACE_FLAG_NEED_RESCHED\">TRACE_FLAG_NEED_RESCHED</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>'N' : '.',", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      (<a class=\"id\" href=\"#hardirq\">hardirq</a> && <a class=\"id\" href=\"#softirq\">softirq</a>) ? 'H' :", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hardirq\">hardirq</a> ? 'h' : <a class=\"id\" href=\"#softirq\">softirq</a> ? 's' : '.'))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#preempt_count\">preempt_count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \"%x\", <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#preempt_count\">preempt_count</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#trace_seq_putc\">trace_seq_putc</a>(<a class=\"id\" href=\"#s\">s</a>, '.');", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#lock_depth\">lock_depth</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#trace_seq_putc\">trace_seq_putc</a>(<a class=\"id\" href=\"#s\">s</a>, '.');", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \"%d\", <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#lock_depth\">lock_depth</a>);", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#lat_print_generic\">lat_print_generic</a>(struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a>, struct <a class=\"id\" href=\"#trace_entry\">trace_entry</a> *<a class=\"id\" href=\"#entry\">entry</a>, int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#comm\">comm</a>[<a class=\"id\" href=\"#TASK_COMM_LEN\">TASK_COMM_LEN</a>];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_find_cmdline\">trace_find_cmdline</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#comm\">comm</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \"%8.8s-%-5d %3d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#comm\">comm</a>, <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#cpu\">cpu</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#trace_print_lat_fmt\">trace_print_lat_fmt</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#entry\">entry</a>);", 
"}", 
"", 
"static unsigned long <a class=\"id\" href=\"#preempt_mark_thresh\">preempt_mark_thresh</a> = 100;", 
"", 
"static int", 
"<a class=\"id\" href=\"#lat_print_timestamp\">lat_print_timestamp</a>(struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#abs_usecs\">abs_usecs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    unsigned long <a class=\"id\" href=\"#rel_usecs\">rel_usecs</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \" %4lldus%c: \", <a class=\"id\" href=\"#abs_usecs\">abs_usecs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rel_usecs\">rel_usecs</a> &gt; <a class=\"id\" href=\"#preempt_mark_thresh\">preempt_mark_thresh</a> ? '!' :", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#rel_usecs\">rel_usecs</a> &gt; 1 ? '+' : ' ');", 
"}", 
"", 
"int <a class=\"id\" href=\"#trace_print_context\">trace_print_context</a>(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a> = &amp;<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#seq\">seq</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#trace_entry\">trace_entry</a> *<a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#ent\">ent</a>;", 
"<span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#t\">t</a> = <a class=\"id\" href=\"#ns2usecs\">ns2usecs</a>(<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#ts\">ts</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#usec_rem\">usec_rem</a> = <a class=\"id\" href=\"#do_div\">do_div</a>(<a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#USEC_PER_SEC\">USEC_PER_SEC</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#secs\">secs</a> = (unsigned long)<a class=\"id\" href=\"#t\">t</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#comm\">comm</a>[<a class=\"id\" href=\"#TASK_COMM_LEN\">TASK_COMM_LEN</a>];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_find_cmdline\">trace_find_cmdline</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#comm\">comm</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \"%16s-%-5d [%03d] %5lu.%06lu: \",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#comm\">comm</a>, <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#secs\">secs</a>, <a class=\"id\" href=\"#usec_rem\">usec_rem</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#trace_print_lat_context\">trace_print_lat_context</a>(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#next_ts\">next_ts</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a> = &amp;<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#seq\">seq</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#trace_entry\">trace_entry</a> *<a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#ent\">ent</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   *<a class=\"id\" href=\"#next_entry\">next_entry</a> = <a class=\"id\" href=\"#trace_find_next_entry\">trace_find_next_entry</a>(<a class=\"id\" href=\"#iter\">iter</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#next_ts\">next_ts</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#verbose\">verbose</a> = (<a class=\"id\" href=\"#trace_flags\">trace_flags</a> &amp; <a class=\"id\" href=\"#TRACE_ITER_VERBOSE\">TRACE_ITER_VERBOSE</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#abs_usecs\">abs_usecs</a> = <a class=\"id\" href=\"#ns2usecs\">ns2usecs</a>(<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#ts\">ts</a> - <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#tr\">tr</a>-><a class=\"id\" href=\"#time_start\">time_start</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#rel_usecs\">rel_usecs</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#next_entry\">next_entry</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next_ts\">next_ts</a> = <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#ts\">ts</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rel_usecs\">rel_usecs</a> = <a class=\"id\" href=\"#ns2usecs\">ns2usecs</a>(<a class=\"id\" href=\"#next_ts\">next_ts</a> - <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#ts\">ts</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#verbose\">verbose</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>char <a class=\"id\" href=\"#comm\">comm</a>[<a class=\"id\" href=\"#TASK_COMM_LEN\">TASK_COMM_LEN</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_find_cmdline\">trace_find_cmdline</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#comm\">comm</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \"%16s %5d %3d %d %08x %08lx [%08llx]\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \" %ld.%03ldms (+%ld.%03ldms): \", <a class=\"id\" href=\"#comm\">comm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#preempt_count\">preempt_count</a>, <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#idx\">idx</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#ns2usecs\">ns2usecs</a>(<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#ts\">ts</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#abs_usecs\">abs_usecs</a> / <a class=\"id\" href=\"#USEC_PER_MSEC\">USEC_PER_MSEC</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#abs_usecs\">abs_usecs</a> % <a class=\"id\" href=\"#USEC_PER_MSEC\">USEC_PER_MSEC</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#rel_usecs\">rel_usecs</a> / <a class=\"id\" href=\"#USEC_PER_MSEC\">USEC_PER_MSEC</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#rel_usecs\">rel_usecs</a> % <a class=\"id\" href=\"#USEC_PER_MSEC\">USEC_PER_MSEC</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#lat_print_generic\">lat_print_generic</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#lat_print_timestamp\">lat_print_timestamp</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#abs_usecs\">abs_usecs</a>, <a class=\"id\" href=\"#rel_usecs\">rel_usecs</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static const char <a class=\"id\" href=\"#state_to_char\">state_to_char</a>[] = <a class=\"id\" href=\"#TASK_STATE_TO_CHAR_STR\">TASK_STATE_TO_CHAR_STR</a>;", 
"", 
"static int <a class=\"id\" href=\"#task_state_char\">task_state_char</a>(unsigned long <a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#bit\">bit</a> = <a class=\"id\" href=\"#state\">state</a> ? <a class=\"id\" href=\"#__ffs\">__ffs</a>(<a class=\"id\" href=\"#state\">state</a>) + 1 : 0;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bit\">bit</a> &lt; sizeof(<a class=\"id\" href=\"#state_to_char\">state_to_char</a>) - 1 ? <a class=\"id\" href=\"#state_to_char\">state_to_char</a>[<a class=\"id\" href=\"#bit\">bit</a>] : '?';", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * ftrace_find_event - find a registered event</span>", 
"<span class=\"comment\"> * @type: the type of event to look for</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns an event of type @type otherwise NULL</span>", 
"<span class=\"comment\"> * Called with trace_event_read_lock() held.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#trace_event\">trace_event</a> *<a class=\"id\" href=\"#ftrace_find_event\">ftrace_find_event</a>(int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#trace_event\">trace_event</a> *<a class=\"id\" href=\"#event\">event</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#key\">key</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#type\">type</a> &amp; (<a class=\"id\" href=\"#EVENT_HASHSIZE\">EVENT_HASHSIZE</a> - 1);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_for_each_entry\">hlist_for_each_entry</a>(<a class=\"id\" href=\"#event\">event</a>, <a class=\"id\" href=\"#n\">n</a>, &amp;<a class=\"id\" href=\"#event_hash\">event_hash</a>[<a class=\"id\" href=\"#key\">key</a>], <a class=\"id\" href=\"#node\">node</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#type\">type</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#event\">event</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#ftrace_event_list\">ftrace_event_list</a>);", 
"", 
"static int <a class=\"id\" href=\"#trace_search_list\">trace_search_list</a>(struct <a class=\"id\" href=\"#list_head\">list_head</a> **<a class=\"id\" href=\"#list\">list</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#trace_event\">trace_event</a> *<a class=\"id\" href=\"#e\">e</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#__TRACE_LAST_TYPE\">__TRACE_LAST_TYPE</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#ftrace_event_list\">ftrace_event_list</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#list\">list</a> = &amp;<a class=\"id\" href=\"#ftrace_event_list\">ftrace_event_list</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#last\">last</a> + 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We used up all possible max events,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * lets see if somebody freed one.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#e\">e</a>, &amp;<a class=\"id\" href=\"#ftrace_event_list\">ftrace_event_list</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#last\">last</a> + 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a>++;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Did we used up all 65 thousand events??? */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#last\">last</a> + 1) &gt; <a class=\"id\" href=\"#FTRACE_MAX_EVENT\">FTRACE_MAX_EVENT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#list\">list</a> = &amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#last\">last</a> + 1;", 
"}", 
"", 
"void <a class=\"id\" href=\"#trace_event_read_lock\">trace_event_read_lock</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#trace_event_mutex\">trace_event_mutex</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#trace_event_read_unlock\">trace_event_read_unlock</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#trace_event_mutex\">trace_event_mutex</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * register_ftrace_event - register output for an event type</span>", 
"<span class=\"comment\"> * @event: the event type to register</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Event types are stored in a hash and this hash is used to</span>", 
"<span class=\"comment\"> * find a way to print an event. If the @event-&gt;type is set</span>", 
"<span class=\"comment\"> * then it will use that type, otherwise it will assign a</span>", 
"<span class=\"comment\"> * type to use.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If you assign your own type, please make sure it is added</span>", 
"<span class=\"comment\"> * to the trace_type enum in trace.h, to avoid collisions</span>", 
"<span class=\"comment\"> * with the dynamic types.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns the event type number or zero on error.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#register_ftrace_event\">register_ftrace_event</a>(struct <a class=\"id\" href=\"#trace_event\">trace_event</a> *<a class=\"id\" href=\"#event\">event</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#trace_event_mutex\">trace_event_mutex</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#event\">event</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#funcs\">funcs</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#list\">list</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#next_event_type\">next_event_type</a> &gt; <a class=\"id\" href=\"#FTRACE_MAX_EVENT\">FTRACE_MAX_EVENT</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#trace_search_list\">trace_search_list</a>(&amp;<a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#type\">type</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#next_event_type\">next_event_type</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list\">list</a> = &amp;<a class=\"id\" href=\"#ftrace_event_list\">ftrace_event_list</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#ftrace_find_event\">ftrace_find_event</a>(<a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#type\">type</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#type\">type</a> &gt; <a class=\"id\" href=\"#__TRACE_LAST_TYPE\">__TRACE_LAST_TYPE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"Need to add type to trace.h\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Is this event already used */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ftrace_find_event\">ftrace_find_event</a>(<a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#type\">type</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#funcs\">funcs</a>-><a class=\"id\" href=\"#trace\">trace</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#funcs\">funcs</a>-><a class=\"id\" href=\"#trace\">trace</a> = <a class=\"id\" href=\"#trace_nop_print\">trace_nop_print</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#funcs\">funcs</a>-><a class=\"id\" href=\"#raw\">raw</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#funcs\">funcs</a>-><a class=\"id\" href=\"#raw\">raw</a> = <a class=\"id\" href=\"#trace_nop_print\">trace_nop_print</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#funcs\">funcs</a>-><a class=\"id\" href=\"#hex\">hex</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#funcs\">funcs</a>-><a class=\"id\" href=\"#hex\">hex</a> = <a class=\"id\" href=\"#trace_nop_print\">trace_nop_print</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#funcs\">funcs</a>-><a class=\"id\" href=\"#binary\">binary</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#funcs\">funcs</a>-><a class=\"id\" href=\"#binary\">binary</a> = <a class=\"id\" href=\"#trace_nop_print\">trace_nop_print</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#type\">type</a> &amp; (<a class=\"id\" href=\"#EVENT_HASHSIZE\">EVENT_HASHSIZE</a> - 1);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_add_head\">hlist_add_head</a>(&amp;<a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#node\">node</a>, &amp;<a class=\"id\" href=\"#event_hash\">event_hash</a>[<a class=\"id\" href=\"#key\">key</a>]);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#type\">type</a>;", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#trace_event_mutex\">trace_event_mutex</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#register_ftrace_event\">register_ftrace_event</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Used by module code with the trace_event_mutex held for write.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#__unregister_ftrace_event\">__unregister_ftrace_event</a>(struct <a class=\"id\" href=\"#trace_event\">trace_event</a> *<a class=\"id\" href=\"#event\">event</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_del\">hlist_del</a>(&amp;<a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#event\">event</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * unregister_ftrace_event - remove a no longer used event</span>", 
"<span class=\"comment\"> * @event: the event to remove</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#unregister_ftrace_event\">unregister_ftrace_event</a>(struct <a class=\"id\" href=\"#trace_event\">trace_event</a> *<a class=\"id\" href=\"#event\">event</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#trace_event_mutex\">trace_event_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__unregister_ftrace_event\">__unregister_ftrace_event</a>(<a class=\"id\" href=\"#event\">event</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#trace_event_mutex\">trace_event_mutex</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#unregister_ftrace_event\">unregister_ftrace_event</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Standard events</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"enum <a class=\"id\" href=\"#print_line_t\">print_line_t</a> <a class=\"id\" href=\"#trace_nop_print\">trace_nop_print</a>(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>, int <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#trace_event\">trace_event</a> *<a class=\"id\" href=\"#event\">event</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#TRACE_TYPE_HANDLED\">TRACE_TYPE_HANDLED</a>;", 
"}", 
"", 
"<span class=\"comment\">/* TRACE_FN */</span>", 
"static enum <a class=\"id\" href=\"#print_line_t\">print_line_t</a> <a class=\"id\" href=\"#trace_fn_trace\">trace_fn_trace</a>(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>, int <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#trace_event\">trace_event</a> *<a class=\"id\" href=\"#event\">event</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_entry\">ftrace_entry</a> *<a class=\"id\" href=\"#field\">field</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a> = &amp;<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#seq\">seq</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_assign_type\">trace_assign_type</a>(<a class=\"id\" href=\"#field\">field</a>, <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#ent\">ent</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#seq_print_ip_sym\">seq_print_ip_sym</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#ip\">ip</a>, <a class=\"id\" href=\"#flags\">flags</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#partial\">partial</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TRACE_ITER_PRINT_PARENT\">TRACE_ITER_PRINT_PARENT</a>) && <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#parent_ip\">parent_ip</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \" <-\"))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#partial\">partial</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#seq_print_ip_sym\">seq_print_ip_sym</a>(<a class=\"id\" href=\"#s\">s</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#parent_ip\">parent_ip</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#flags\">flags</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#partial\">partial</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \"\\n\"))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#partial\">partial</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#TRACE_TYPE_HANDLED\">TRACE_TYPE_HANDLED</a>;", 
"", 
" <a class=\"id\" href=\"#partial\">partial</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#TRACE_TYPE_PARTIAL_LINE\">TRACE_TYPE_PARTIAL_LINE</a>;", 
"}", 
"", 
"static enum <a class=\"id\" href=\"#print_line_t\">print_line_t</a> <a class=\"id\" href=\"#trace_fn_raw\">trace_fn_raw</a>(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>, int <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#trace_event\">trace_event</a> *<a class=\"id\" href=\"#event\">event</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_entry\">ftrace_entry</a> *<a class=\"id\" href=\"#field\">field</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_assign_type\">trace_assign_type</a>(<a class=\"id\" href=\"#field\">field</a>, <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#ent\">ent</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(&amp;<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#seq\">seq</a>, \"%lx %lx\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#ip\">ip</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#parent_ip\">parent_ip</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#TRACE_TYPE_PARTIAL_LINE\">TRACE_TYPE_PARTIAL_LINE</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#TRACE_TYPE_HANDLED\">TRACE_TYPE_HANDLED</a>;", 
"}", 
"", 
"static enum <a class=\"id\" href=\"#print_line_t\">print_line_t</a> <a class=\"id\" href=\"#trace_fn_hex\">trace_fn_hex</a>(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>, int <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#trace_event\">trace_event</a> *<a class=\"id\" href=\"#event\">event</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_entry\">ftrace_entry</a> *<a class=\"id\" href=\"#field\">field</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a> = &amp;<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#seq\">seq</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_assign_type\">trace_assign_type</a>(<a class=\"id\" href=\"#field\">field</a>, <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#ent\">ent</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SEQ_PUT_HEX_FIELD_RET\">SEQ_PUT_HEX_FIELD_RET</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SEQ_PUT_HEX_FIELD_RET\">SEQ_PUT_HEX_FIELD_RET</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#parent_ip\">parent_ip</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#TRACE_TYPE_HANDLED\">TRACE_TYPE_HANDLED</a>;", 
"}", 
"", 
"static enum <a class=\"id\" href=\"#print_line_t\">print_line_t</a> <a class=\"id\" href=\"#trace_fn_bin\">trace_fn_bin</a>(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>, int <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#trace_event\">trace_event</a> *<a class=\"id\" href=\"#event\">event</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_entry\">ftrace_entry</a> *<a class=\"id\" href=\"#field\">field</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a> = &amp;<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#seq\">seq</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_assign_type\">trace_assign_type</a>(<a class=\"id\" href=\"#field\">field</a>, <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#ent\">ent</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SEQ_PUT_FIELD_RET\">SEQ_PUT_FIELD_RET</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SEQ_PUT_FIELD_RET\">SEQ_PUT_FIELD_RET</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#parent_ip\">parent_ip</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#TRACE_TYPE_HANDLED\">TRACE_TYPE_HANDLED</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#trace_event_functions\">trace_event_functions</a> <a class=\"id\" href=\"#trace_fn_funcs\">trace_fn_funcs</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#trace\">trace</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#trace_fn_trace\">trace_fn_trace</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#raw\">raw</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#trace_fn_raw\">trace_fn_raw</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#hex\">hex</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#trace_fn_hex\">trace_fn_hex</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#binary\">binary</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#trace_fn_bin\">trace_fn_bin</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#trace_event\">trace_event</a> <a class=\"id\" href=\"#trace_fn_event\">trace_fn_event</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#type\">type</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#TRACE_FN\">TRACE_FN</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#funcs\">funcs</a><span class=\"ts\"/><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#trace_fn_funcs\">trace_fn_funcs</a>,", 
"};", 
"", 
"<span class=\"comment\">/* TRACE_CTX an TRACE_WAKE */</span>", 
"static enum <a class=\"id\" href=\"#print_line_t\">print_line_t</a> <a class=\"id\" href=\"#trace_ctxwake_print\">trace_ctxwake_print</a>(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     char *<a class=\"id\" href=\"#delim\">delim</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ctx_switch_entry\">ctx_switch_entry</a> *<a class=\"id\" href=\"#field\">field</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#comm\">comm</a>[<a class=\"id\" href=\"#TASK_COMM_LEN\">TASK_COMM_LEN</a>];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#S\">S</a>, <a class=\"id\" href=\"#T\">T</a>;", 
"", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_assign_type\">trace_assign_type</a>(<a class=\"id\" href=\"#field\">field</a>, <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#ent\">ent</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#T\">T</a> = <a class=\"id\" href=\"#task_state_char\">task_state_char</a>(<a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#next_state\">next_state</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#S\">S</a> = <a class=\"id\" href=\"#task_state_char\">task_state_char</a>(<a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#prev_state\">prev_state</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_find_cmdline\">trace_find_cmdline</a>(<a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#next_pid\">next_pid</a>, <a class=\"id\" href=\"#comm\">comm</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(&amp;<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#seq\">seq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      \" %5d:%3d:%c %s [%03d] %5d:%3d:%c %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#prev_pid\">prev_pid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#prev_prio\">prev_prio</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#S\">S</a>, <a class=\"id\" href=\"#delim\">delim</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#next_cpu\">next_cpu</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#next_pid\">next_pid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#next_prio\">next_prio</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#T\">T</a>, <a class=\"id\" href=\"#comm\">comm</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#TRACE_TYPE_PARTIAL_LINE\">TRACE_TYPE_PARTIAL_LINE</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#TRACE_TYPE_HANDLED\">TRACE_TYPE_HANDLED</a>;", 
"}", 
"", 
"static enum <a class=\"id\" href=\"#print_line_t\">print_line_t</a> <a class=\"id\" href=\"#trace_ctx_print\">trace_ctx_print</a>(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>, int <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#trace_event\">trace_event</a> *<a class=\"id\" href=\"#event\">event</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#trace_ctxwake_print\">trace_ctxwake_print</a>(<a class=\"id\" href=\"#iter\">iter</a>, \"==>\");", 
"}", 
"", 
"static enum <a class=\"id\" href=\"#print_line_t\">print_line_t</a> <a class=\"id\" href=\"#trace_wake_print\">trace_wake_print</a>(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  int <a class=\"id\" href=\"#flags\">flags</a>, struct <a class=\"id\" href=\"#trace_event\">trace_event</a> *<a class=\"id\" href=\"#event\">event</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#trace_ctxwake_print\">trace_ctxwake_print</a>(<a class=\"id\" href=\"#iter\">iter</a>, \"  +\");", 
"}", 
"", 
"static int <a class=\"id\" href=\"#trace_ctxwake_raw\">trace_ctxwake_raw</a>(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>, char <a class=\"id\" href=\"#S\">S</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ctx_switch_entry\">ctx_switch_entry</a> *<a class=\"id\" href=\"#field\">field</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#T\">T</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_assign_type\">trace_assign_type</a>(<a class=\"id\" href=\"#field\">field</a>, <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#ent\">ent</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#S\">S</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#S\">S</a> = <a class=\"id\" href=\"#task_state_char\">task_state_char</a>(<a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#prev_state\">prev_state</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#T\">T</a> = <a class=\"id\" href=\"#task_state_char\">task_state_char</a>(<a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#next_state\">next_state</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(&amp;<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#seq\">seq</a>, \"%d %d %c %d %d %d %c\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#prev_pid\">prev_pid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#prev_prio\">prev_prio</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#S\">S</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#next_cpu\">next_cpu</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#next_pid\">next_pid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#next_prio\">next_prio</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#T\">T</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#TRACE_TYPE_PARTIAL_LINE\">TRACE_TYPE_PARTIAL_LINE</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#TRACE_TYPE_HANDLED\">TRACE_TYPE_HANDLED</a>;", 
"}", 
"", 
"static enum <a class=\"id\" href=\"#print_line_t\">print_line_t</a> <a class=\"id\" href=\"#trace_ctx_raw\">trace_ctx_raw</a>(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>, int <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#trace_event\">trace_event</a> *<a class=\"id\" href=\"#event\">event</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#trace_ctxwake_raw\">trace_ctxwake_raw</a>(<a class=\"id\" href=\"#iter\">iter</a>, 0);", 
"}", 
"", 
"static enum <a class=\"id\" href=\"#print_line_t\">print_line_t</a> <a class=\"id\" href=\"#trace_wake_raw\">trace_wake_raw</a>(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>, int <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#trace_event\">trace_event</a> *<a class=\"id\" href=\"#event\">event</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#trace_ctxwake_raw\">trace_ctxwake_raw</a>(<a class=\"id\" href=\"#iter\">iter</a>, '+');", 
"}", 
"", 
"", 
"static int <a class=\"id\" href=\"#trace_ctxwake_hex\">trace_ctxwake_hex</a>(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>, char <a class=\"id\" href=\"#S\">S</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ctx_switch_entry\">ctx_switch_entry</a> *<a class=\"id\" href=\"#field\">field</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a> = &amp;<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#seq\">seq</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#T\">T</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_assign_type\">trace_assign_type</a>(<a class=\"id\" href=\"#field\">field</a>, <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#ent\">ent</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#S\">S</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#S\">S</a> = <a class=\"id\" href=\"#task_state_char\">task_state_char</a>(<a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#prev_state\">prev_state</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#T\">T</a> = <a class=\"id\" href=\"#task_state_char\">task_state_char</a>(<a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#next_state\">next_state</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SEQ_PUT_HEX_FIELD_RET\">SEQ_PUT_HEX_FIELD_RET</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#prev_pid\">prev_pid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SEQ_PUT_HEX_FIELD_RET\">SEQ_PUT_HEX_FIELD_RET</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#prev_prio\">prev_prio</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SEQ_PUT_HEX_FIELD_RET\">SEQ_PUT_HEX_FIELD_RET</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#S\">S</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SEQ_PUT_HEX_FIELD_RET\">SEQ_PUT_HEX_FIELD_RET</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#next_cpu\">next_cpu</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SEQ_PUT_HEX_FIELD_RET\">SEQ_PUT_HEX_FIELD_RET</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#next_pid\">next_pid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SEQ_PUT_HEX_FIELD_RET\">SEQ_PUT_HEX_FIELD_RET</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#next_prio\">next_prio</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SEQ_PUT_HEX_FIELD_RET\">SEQ_PUT_HEX_FIELD_RET</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#T\">T</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#TRACE_TYPE_HANDLED\">TRACE_TYPE_HANDLED</a>;", 
"}", 
"", 
"static enum <a class=\"id\" href=\"#print_line_t\">print_line_t</a> <a class=\"id\" href=\"#trace_ctx_hex\">trace_ctx_hex</a>(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>, int <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#trace_event\">trace_event</a> *<a class=\"id\" href=\"#event\">event</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#trace_ctxwake_hex\">trace_ctxwake_hex</a>(<a class=\"id\" href=\"#iter\">iter</a>, 0);", 
"}", 
"", 
"static enum <a class=\"id\" href=\"#print_line_t\">print_line_t</a> <a class=\"id\" href=\"#trace_wake_hex\">trace_wake_hex</a>(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>, int <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#trace_event\">trace_event</a> *<a class=\"id\" href=\"#event\">event</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#trace_ctxwake_hex\">trace_ctxwake_hex</a>(<a class=\"id\" href=\"#iter\">iter</a>, '+');", 
"}", 
"", 
"static enum <a class=\"id\" href=\"#print_line_t\">print_line_t</a> <a class=\"id\" href=\"#trace_ctxwake_bin\">trace_ctxwake_bin</a>(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   int <a class=\"id\" href=\"#flags\">flags</a>, struct <a class=\"id\" href=\"#trace_event\">trace_event</a> *<a class=\"id\" href=\"#event\">event</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ctx_switch_entry\">ctx_switch_entry</a> *<a class=\"id\" href=\"#field\">field</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a> = &amp;<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#seq\">seq</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_assign_type\">trace_assign_type</a>(<a class=\"id\" href=\"#field\">field</a>, <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#ent\">ent</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SEQ_PUT_FIELD_RET\">SEQ_PUT_FIELD_RET</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#prev_pid\">prev_pid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SEQ_PUT_FIELD_RET\">SEQ_PUT_FIELD_RET</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#prev_prio\">prev_prio</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SEQ_PUT_FIELD_RET\">SEQ_PUT_FIELD_RET</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#prev_state\">prev_state</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SEQ_PUT_FIELD_RET\">SEQ_PUT_FIELD_RET</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#next_pid\">next_pid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SEQ_PUT_FIELD_RET\">SEQ_PUT_FIELD_RET</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#next_prio\">next_prio</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SEQ_PUT_FIELD_RET\">SEQ_PUT_FIELD_RET</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#next_state\">next_state</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#TRACE_TYPE_HANDLED\">TRACE_TYPE_HANDLED</a>;", 
];
xr_frag_insert('l/5d/c8351f4175ab03be0744eebf368640b9e4474b.xr', __xr_tmp);
