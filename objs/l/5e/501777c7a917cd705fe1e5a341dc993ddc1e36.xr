var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright (C) 2001 - 2003 Sistina Software (UK) Limited.</span>", 
"<span class=\"comment\"> * Copyright (C) 2004 - 2009 Red Hat, Inc. All rights reserved.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file is released under the LGPL.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_DM_IOCTL_V4_H\">_LINUX_DM_IOCTL_V4_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_DM_IOCTL_V4_H\">_LINUX_DM_IOCTL_V4_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_DIR\">DM_DIR</a> \"mapper\"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Slashes not supported */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_CONTROL_NODE\">DM_CONTROL_NODE</a> \"control\"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_MAX_TYPE_NAME\">DM_MAX_TYPE_NAME</a> 16", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_NAME_LEN\">DM_NAME_LEN</a> 128", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_UUID_LEN\">DM_UUID_LEN</a> 129", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * A traditional ioctl interface for the device mapper.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Each device can have two tables associated with it, an</span>", 
"<span class=\"comment\"> * 'active' table which is the one currently used by io passing</span>", 
"<span class=\"comment\"> * through the device, and an 'inactive' one which is a table</span>", 
"<span class=\"comment\"> * that is being prepared as a replacement for the 'active' one.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DM_VERSION:</span>", 
"<span class=\"comment\"> * Just get the version information for the ioctl interface.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DM_REMOVE_ALL:</span>", 
"<span class=\"comment\"> * Remove all dm devices, destroy all tables.  Only really used</span>", 
"<span class=\"comment\"> * for debug.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DM_LIST_DEVICES:</span>", 
"<span class=\"comment\"> * Get a list of all the dm device names.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DM_DEV_CREATE:</span>", 
"<span class=\"comment\"> * Create a new device, neither the 'active' or 'inactive' table</span>", 
"<span class=\"comment\"> * slots will be filled.  The device will be in suspended state</span>", 
"<span class=\"comment\"> * after creation, however any io to the device will get errored</span>", 
"<span class=\"comment\"> * since it will be out-of-bounds.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DM_DEV_REMOVE:</span>", 
"<span class=\"comment\"> * Remove a device, destroy any tables.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DM_DEV_RENAME:</span>", 
"<span class=\"comment\"> * Rename a device.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DM_SUSPEND:</span>", 
"<span class=\"comment\"> * This performs both suspend and resume, depending which flag is</span>", 
"<span class=\"comment\"> * passed in.</span>", 
"<span class=\"comment\"> * Suspend: This command will not return until all pending io to</span>", 
"<span class=\"comment\"> * the device has completed.  Further io will be deferred until</span>", 
"<span class=\"comment\"> * the device is resumed.</span>", 
"<span class=\"comment\"> * Resume: It is no longer an error to issue this command on an</span>", 
"<span class=\"comment\"> * unsuspended device.  If a table is present in the 'inactive'</span>", 
"<span class=\"comment\"> * slot, it will be moved to the active slot, then the old table</span>", 
"<span class=\"comment\"> * from the active slot will be _destroyed_.  Finally the device</span>", 
"<span class=\"comment\"> * is resumed.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DM_DEV_STATUS:</span>", 
"<span class=\"comment\"> * Retrieves the status for the table in the 'active' slot.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DM_DEV_WAIT:</span>", 
"<span class=\"comment\"> * Wait for a significant event to occur to the device.  This</span>", 
"<span class=\"comment\"> * could either be caused by an event triggered by one of the</span>", 
"<span class=\"comment\"> * targets of the table in the 'active' slot, or a table change.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DM_TABLE_LOAD:</span>", 
"<span class=\"comment\"> * Load a table into the 'inactive' slot for the device.  The</span>", 
"<span class=\"comment\"> * device does _not_ need to be suspended prior to this command.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DM_TABLE_CLEAR:</span>", 
"<span class=\"comment\"> * Destroy any table in the 'inactive' slot (ie. abort).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DM_TABLE_DEPS:</span>", 
"<span class=\"comment\"> * Return a set of device dependencies for the 'active' table.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DM_TABLE_STATUS:</span>", 
"<span class=\"comment\"> * Return the targets status for the 'active' table.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DM_TARGET_MSG:</span>", 
"<span class=\"comment\"> * Pass a message string to the target at a specific offset of a device.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DM_DEV_SET_GEOMETRY:</span>", 
"<span class=\"comment\"> * Set the geometry of a device by passing in a string in this format:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * \"cylinders heads sectors_per_track start_sector\"</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Beware that CHS geometry is nearly obsolete and only provided</span>", 
"<span class=\"comment\"> * for compatibility with dm devices that can be booted by a PC</span>", 
"<span class=\"comment\"> * BIOS.  See struct hd_geometry for range limits.  Also note that</span>", 
"<span class=\"comment\"> * the geometry is erased if the device size changes.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * All ioctl arguments consist of a single chunk of memory, with</span>", 
"<span class=\"comment\"> * this structure at the start.  If a uuid is specified any</span>", 
"<span class=\"comment\"> * lookup (eg. for a DM_INFO) will be done on that, *not* the</span>", 
"<span class=\"comment\"> * name.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The version number is made up of three parts:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * major - no backward or forward compatibility,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * minor - only backwards compatible,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * patch - both backwards and forwards compatible.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * All clients of the ioctl interface should fill in the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * version number of the interface that they were</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * compiled with.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * All recognised ioctl commands (ie. those that don't</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * return -ENOTTY) fill out this field, even if the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * command failed.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#version\">version</a>[3];<span class=\"ts\"/><span class=\"comment\">/* in/out */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#data_size\">data_size</a>;<span class=\"ts\"/><span class=\"comment\">/* total size of data passed in</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * including this struct */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#data_start\">data_start</a>;<span class=\"ts\"/><span class=\"comment\">/* offset to start of data</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * relative to start of this struct */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#target_count\">target_count</a>;<span class=\"ts\"/><span class=\"comment\">/* in/out */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__s32\">__s32</a> <a class=\"id\" href=\"#open_count\">open_count</a>;<span class=\"ts\"/><span class=\"comment\">/* out */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#flags\">flags</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* in/out */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * event_nr holds either the event number (input and output) or the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * udev cookie value (input only).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The DM_DEV_WAIT ioctl takes an event number as input.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The DM_SUSPEND, DM_DEV_REMOVE and DM_DEV_RENAME ioctls</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * use the field as a cookie to return in the DM_COOKIE</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * variable with the uevents they issue.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * For output, the ioctls return the event number, not the cookie.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#event_nr\">event_nr</a>;      <span class=\"ts\"/><span class=\"comment\">/* in/out */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#padding\">padding</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#dev\">dev</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* in/out */</span>", 
"", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#name\">name</a>[<a class=\"id\" href=\"#DM_NAME_LEN\">DM_NAME_LEN</a>];<span class=\"ts\"/><span class=\"comment\">/* device name */</span>", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#uuid\">uuid</a>[<a class=\"id\" href=\"#DM_UUID_LEN\">DM_UUID_LEN</a>];<span class=\"ts\"/><span class=\"comment\">/* unique identifier for</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * the block device */</span>", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#data\">data</a>[7];<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* padding or data */</span>", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Used to specify tables.  These structures appear after the</span>", 
"<span class=\"comment\"> * dm_ioctl.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#dm_target_spec\">dm_target_spec</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#sector_start\">sector_start</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__s32\">__s32</a> <a class=\"id\" href=\"#status\">status</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* used when reading from kernel only */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Location of the next dm_target_spec.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * - When specifying targets on a DM_TABLE_LOAD command, this value is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *   the number of bytes from the start of the \"current\" dm_target_spec</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *   to the start of the \"next\" dm_target_spec.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * - When retrieving targets on a DM_TABLE_STATUS command, this value</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *   is the number of bytes from the start of the first dm_target_spec</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *   (that follows the dm_ioctl struct) to the start of the \"next\"</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *   dm_target_spec.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#next\">next</a>;", 
"", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#target_type\">target_type</a>[<a class=\"id\" href=\"#DM_MAX_TYPE_NAME\">DM_MAX_TYPE_NAME</a>];", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Parameter string starts immediately after this object.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Be careful to add padding after string to ensure correct</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * alignment of subsequent dm_target_spec.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Used to retrieve the target dependencies.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#dm_target_deps\">dm_target_deps</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#count\">count</a>;<span class=\"ts\"/><span class=\"comment\">/* Array size */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#padding\">padding</a>;<span class=\"ts\"/><span class=\"comment\">/* unused */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#dev\">dev</a>[0];<span class=\"ts\"/><span class=\"comment\">/* out */</span>", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Used to get a list of all dm devices.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#dm_name_list\">dm_name_list</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#next\">next</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* offset to the next record from</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   the _start_ of this */</span>", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#name\">name</a>[0];", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Used to retrieve the target versions</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#dm_target_versions\">dm_target_versions</a> {", 
"        <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#next\">next</a>;", 
"        <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#version\">version</a>[3];", 
"", 
"        char <a class=\"id\" href=\"#name\">name</a>[0];", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Used to pass message to a target</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#dm_target_msg\">dm_target_msg</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#sector\">sector</a>;<span class=\"ts\"/><span class=\"comment\">/* Device sector */</span>", 
"", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#message\">message</a>[0];", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * If you change this make sure you make the corresponding change</span>", 
"<span class=\"comment\"> * to dm-ioctl.c:lookup_ioctl()</span>", 
"<span class=\"comment\"> */</span>", 
"enum {", 
"<span class=\"ts\"/><span class=\"comment\">/* Top level cmds */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DM_VERSION_CMD\">DM_VERSION_CMD</a> = 0,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DM_REMOVE_ALL_CMD\">DM_REMOVE_ALL_CMD</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DM_LIST_DEVICES_CMD\">DM_LIST_DEVICES_CMD</a>,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* device level cmds */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DM_DEV_CREATE_CMD\">DM_DEV_CREATE_CMD</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DM_DEV_REMOVE_CMD\">DM_DEV_REMOVE_CMD</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DM_DEV_RENAME_CMD\">DM_DEV_RENAME_CMD</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DM_DEV_SUSPEND_CMD\">DM_DEV_SUSPEND_CMD</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DM_DEV_STATUS_CMD\">DM_DEV_STATUS_CMD</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DM_DEV_WAIT_CMD\">DM_DEV_WAIT_CMD</a>,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Table level cmds */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DM_TABLE_LOAD_CMD\">DM_TABLE_LOAD_CMD</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DM_TABLE_CLEAR_CMD\">DM_TABLE_CLEAR_CMD</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DM_TABLE_DEPS_CMD\">DM_TABLE_DEPS_CMD</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DM_TABLE_STATUS_CMD\">DM_TABLE_STATUS_CMD</a>,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Added later */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DM_LIST_VERSIONS_CMD\">DM_LIST_VERSIONS_CMD</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DM_TARGET_MSG_CMD\">DM_TARGET_MSG_CMD</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DM_DEV_SET_GEOMETRY_CMD\">DM_DEV_SET_GEOMETRY_CMD</a>", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_IOCTL\">DM_IOCTL</a> 0xfd", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_VERSION\">DM_VERSION</a>       <a class=\"id\" href=\"#_IOWR\">_IOWR</a>(<a class=\"id\" href=\"#DM_IOCTL\">DM_IOCTL</a>, <a class=\"id\" href=\"#DM_VERSION_CMD\">DM_VERSION_CMD</a>, struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_REMOVE_ALL\">DM_REMOVE_ALL</a>    <a class=\"id\" href=\"#_IOWR\">_IOWR</a>(<a class=\"id\" href=\"#DM_IOCTL\">DM_IOCTL</a>, <a class=\"id\" href=\"#DM_REMOVE_ALL_CMD\">DM_REMOVE_ALL_CMD</a>, struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_LIST_DEVICES\">DM_LIST_DEVICES</a>  <a class=\"id\" href=\"#_IOWR\">_IOWR</a>(<a class=\"id\" href=\"#DM_IOCTL\">DM_IOCTL</a>, <a class=\"id\" href=\"#DM_LIST_DEVICES_CMD\">DM_LIST_DEVICES_CMD</a>, struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_DEV_CREATE\">DM_DEV_CREATE</a>    <a class=\"id\" href=\"#_IOWR\">_IOWR</a>(<a class=\"id\" href=\"#DM_IOCTL\">DM_IOCTL</a>, <a class=\"id\" href=\"#DM_DEV_CREATE_CMD\">DM_DEV_CREATE_CMD</a>, struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_DEV_REMOVE\">DM_DEV_REMOVE</a>    <a class=\"id\" href=\"#_IOWR\">_IOWR</a>(<a class=\"id\" href=\"#DM_IOCTL\">DM_IOCTL</a>, <a class=\"id\" href=\"#DM_DEV_REMOVE_CMD\">DM_DEV_REMOVE_CMD</a>, struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_DEV_RENAME\">DM_DEV_RENAME</a>    <a class=\"id\" href=\"#_IOWR\">_IOWR</a>(<a class=\"id\" href=\"#DM_IOCTL\">DM_IOCTL</a>, <a class=\"id\" href=\"#DM_DEV_RENAME_CMD\">DM_DEV_RENAME_CMD</a>, struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_DEV_SUSPEND\">DM_DEV_SUSPEND</a>   <a class=\"id\" href=\"#_IOWR\">_IOWR</a>(<a class=\"id\" href=\"#DM_IOCTL\">DM_IOCTL</a>, <a class=\"id\" href=\"#DM_DEV_SUSPEND_CMD\">DM_DEV_SUSPEND_CMD</a>, struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_DEV_STATUS\">DM_DEV_STATUS</a>    <a class=\"id\" href=\"#_IOWR\">_IOWR</a>(<a class=\"id\" href=\"#DM_IOCTL\">DM_IOCTL</a>, <a class=\"id\" href=\"#DM_DEV_STATUS_CMD\">DM_DEV_STATUS_CMD</a>, struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_DEV_WAIT\">DM_DEV_WAIT</a>      <a class=\"id\" href=\"#_IOWR\">_IOWR</a>(<a class=\"id\" href=\"#DM_IOCTL\">DM_IOCTL</a>, <a class=\"id\" href=\"#DM_DEV_WAIT_CMD\">DM_DEV_WAIT_CMD</a>, struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_TABLE_LOAD\">DM_TABLE_LOAD</a>    <a class=\"id\" href=\"#_IOWR\">_IOWR</a>(<a class=\"id\" href=\"#DM_IOCTL\">DM_IOCTL</a>, <a class=\"id\" href=\"#DM_TABLE_LOAD_CMD\">DM_TABLE_LOAD_CMD</a>, struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_TABLE_CLEAR\">DM_TABLE_CLEAR</a>   <a class=\"id\" href=\"#_IOWR\">_IOWR</a>(<a class=\"id\" href=\"#DM_IOCTL\">DM_IOCTL</a>, <a class=\"id\" href=\"#DM_TABLE_CLEAR_CMD\">DM_TABLE_CLEAR_CMD</a>, struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_TABLE_DEPS\">DM_TABLE_DEPS</a>    <a class=\"id\" href=\"#_IOWR\">_IOWR</a>(<a class=\"id\" href=\"#DM_IOCTL\">DM_IOCTL</a>, <a class=\"id\" href=\"#DM_TABLE_DEPS_CMD\">DM_TABLE_DEPS_CMD</a>, struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_TABLE_STATUS\">DM_TABLE_STATUS</a>  <a class=\"id\" href=\"#_IOWR\">_IOWR</a>(<a class=\"id\" href=\"#DM_IOCTL\">DM_IOCTL</a>, <a class=\"id\" href=\"#DM_TABLE_STATUS_CMD\">DM_TABLE_STATUS_CMD</a>, struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_LIST_VERSIONS\">DM_LIST_VERSIONS</a> <a class=\"id\" href=\"#_IOWR\">_IOWR</a>(<a class=\"id\" href=\"#DM_IOCTL\">DM_IOCTL</a>, <a class=\"id\" href=\"#DM_LIST_VERSIONS_CMD\">DM_LIST_VERSIONS_CMD</a>, struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_TARGET_MSG\">DM_TARGET_MSG</a><span class=\"ts\"/> <a class=\"id\" href=\"#_IOWR\">_IOWR</a>(<a class=\"id\" href=\"#DM_IOCTL\">DM_IOCTL</a>, <a class=\"id\" href=\"#DM_TARGET_MSG_CMD\">DM_TARGET_MSG_CMD</a>, struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_DEV_SET_GEOMETRY\">DM_DEV_SET_GEOMETRY</a><span class=\"ts\"/><a class=\"id\" href=\"#_IOWR\">_IOWR</a>(<a class=\"id\" href=\"#DM_IOCTL\">DM_IOCTL</a>, <a class=\"id\" href=\"#DM_DEV_SET_GEOMETRY_CMD\">DM_DEV_SET_GEOMETRY_CMD</a>, struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_VERSION_MAJOR\">DM_VERSION_MAJOR</a><span class=\"ts\"/>4", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_VERSION_MINOR\">DM_VERSION_MINOR</a><span class=\"ts\"/>18", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_VERSION_PATCHLEVEL\">DM_VERSION_PATCHLEVEL</a><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_VERSION_EXTRA\">DM_VERSION_EXTRA</a><span class=\"ts\"/>\"-ioctl (2010-06-29)\"", 
"", 
"<span class=\"comment\">/* Status bits */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_READONLY_FLAG\">DM_READONLY_FLAG</a><span class=\"ts\"/>(1 << 0) <span class=\"comment\">/* In/Out */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_SUSPEND_FLAG\">DM_SUSPEND_FLAG</a><span class=\"ts\"/><span class=\"ts\"/>(1 << 1) <span class=\"comment\">/* In/Out */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_PERSISTENT_DEV_FLAG\">DM_PERSISTENT_DEV_FLAG</a><span class=\"ts\"/>(1 << 3) <span class=\"comment\">/* In */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Flag passed into ioctl STATUS command to get table information</span>", 
"<span class=\"comment\"> * rather than current status.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_STATUS_TABLE_FLAG\">DM_STATUS_TABLE_FLAG</a><span class=\"ts\"/>(1 << 4) <span class=\"comment\">/* In */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Flags that indicate whether a table is present in either of</span>", 
"<span class=\"comment\"> * the two table slots that a device has.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_ACTIVE_PRESENT_FLAG\">DM_ACTIVE_PRESENT_FLAG</a>   (1 << 5) <span class=\"comment\">/* Out */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_INACTIVE_PRESENT_FLAG\">DM_INACTIVE_PRESENT_FLAG</a> (1 << 6) <span class=\"comment\">/* Out */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Indicates that the buffer passed in wasn't big enough for the</span>", 
"<span class=\"comment\"> * results.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_BUFFER_FULL_FLAG\">DM_BUFFER_FULL_FLAG</a><span class=\"ts\"/>(1 << 8) <span class=\"comment\">/* Out */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This flag is now ignored.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_SKIP_BDGET_FLAG\">DM_SKIP_BDGET_FLAG</a><span class=\"ts\"/>(1 << 9) <span class=\"comment\">/* In */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Set this to avoid attempting to freeze any filesystem when suspending.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_SKIP_LOCKFS_FLAG\">DM_SKIP_LOCKFS_FLAG</a><span class=\"ts\"/>(1 << 10) <span class=\"comment\">/* In */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Set this to suspend without flushing queued ios.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_NOFLUSH_FLAG\">DM_NOFLUSH_FLAG</a><span class=\"ts\"/><span class=\"ts\"/>(1 << 11) <span class=\"comment\">/* In */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * If set, any table information returned will relate to the inactive</span>", 
"<span class=\"comment\"> * table instead of the live one.  Always check DM_INACTIVE_PRESENT_FLAG</span>", 
"<span class=\"comment\"> * is set before using the data returned.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_QUERY_INACTIVE_TABLE_FLAG\">DM_QUERY_INACTIVE_TABLE_FLAG</a><span class=\"ts\"/>(1 << 12) <span class=\"comment\">/* In */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * If set, a uevent was generated for which the caller may need to wait.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_UEVENT_GENERATED_FLAG\">DM_UEVENT_GENERATED_FLAG</a><span class=\"ts\"/>(1 << 13) <span class=\"comment\">/* Out */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* _LINUX_DM_IOCTL_H */</span>", 
];
xr_frag_insert('l/5e/501777c7a917cd705fe1e5a341dc993ddc1e36.xr', __xr_tmp);
