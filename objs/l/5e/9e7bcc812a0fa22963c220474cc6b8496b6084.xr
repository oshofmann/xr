var __xr_tmp = [
"<span class=\"ts\"/><span class=\"comment\">/* Step 2: check RST bit */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#rst\">rst</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_reset\">tcp_reset</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#discard\">discard</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* ts_recent update must be made after we are sure that the packet</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * is in window.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_replace_ts_recent\">tcp_replace_ts_recent</a>(<a class=\"id\" href=\"#tp\">tp</a>, <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* step 3: check security and precedence [ignored] */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* step 4: Check for a SYN in window. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#syn\">syn</a> && !<a class=\"id\" href=\"#before\">before</a>(<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_nxt\">rcv_nxt</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#syn_inerr\">syn_inerr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#TCP_INC_STATS_BH\">TCP_INC_STATS_BH</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#TCP_MIB_INERRS\">TCP_MIB_INERRS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NET_INC_STATS_BH\">NET_INC_STATS_BH</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#LINUX_MIB_TCPABORTONSYN\">LINUX_MIB_TCPABORTONSYN</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_reset\">tcp_reset</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 1;", 
"", 
"<a class=\"id\" href=\"#discard\">discard</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__kfree_skb\">__kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>TCP receive function for the ESTABLISHED state.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>It is split into a fast path and a slow path. The fast path is</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>disabled when:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- A zero window was announced from us - zero window probing</span>", 
"<span class=\"comment\"> *        is only handled properly in the slow path.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Out of order segments arrived.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Urgent data is expected.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- There is no buffer space left</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Unexpected TCP flags/window values/header lengths are received</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>  (detected by checking the TCP header against pred_flags)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Data is sent in both directions. Fast path only supports pure senders</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>  or pure receivers (this means either the sequence number or the ack</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>  value must stay constant)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Unexpected TCP option.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>When these conditions are not satisfied it drops into a standard</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>receive procedure patterned after RFC793 to handle all cases.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>The first three cases are guaranteed by proper pred_flags setting,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the rest is checked inline. Fast processing is turned on in</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tcp_data_queue when everything is OK.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#tcp_rcv_established\">tcp_rcv_established</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a> *<a class=\"id\" href=\"#th\">th</a>, unsigned <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#res\">res</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Header prediction.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>The code loosely follows the one in the famous</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>\"30 instruction TCP receive\" Van Jacobson mail.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Van's trick is to deposit buffers into socket queue</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>on a device interrupt, to call tcp_recv function</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>on the receive process context and checksum and copy</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>the buffer to user space. smart...</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Our current scheme is not silly either but we take the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>extra cost of the net_bh soft interrupt processing...</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>We do checksum and copy also but from device to kernel.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#saw_tstamp\">saw_tstamp</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*<span class=\"ts\"/>pred_flags is 0xS?10 &lt;&lt; 16 + snd_wnd</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>if header_prediction is to be made</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>'S' will always be tp-&gt;tcp_header_len &gt;&gt; 2</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>'?' will be 0 for the fast path, otherwise pred_flags is 0 to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  turn it off<span class=\"ts\"/>(when there are holes in the receive</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/> space for instance)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>PSH flag is ignored.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#tcp_flag_word\">tcp_flag_word</a>(<a class=\"id\" href=\"#th\">th</a>) &amp; <a class=\"id\" href=\"#TCP_HP_BITS\">TCP_HP_BITS</a>) == <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#pred_flags\">pred_flags</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a> == <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_nxt\">rcv_nxt</a> &&", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#after\">after</a>(<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#ack_seq\">ack_seq</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_nxt\">snd_nxt</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#tcp_header_len\">tcp_header_len</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#tcp_header_len\">tcp_header_len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Timestamp header prediction: tcp_header_len</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * is automatically equal to th-&gt;doff*4 due to pred_flags</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * match.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Check timestamp */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_header_len\">tcp_header_len</a> == sizeof(struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a>) + <a class=\"id\" href=\"#TCPOLEN_TSTAMP_ALIGNED\">TCPOLEN_TSTAMP_ALIGNED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* No? Slow path! */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tcp_parse_aligned_timestamp\">tcp_parse_aligned_timestamp</a>(<a class=\"id\" href=\"#tp\">tp</a>, <a class=\"id\" href=\"#th\">th</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#slow_path\">slow_path</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If PAWS failed, check it more carefully in slow path */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#s32\">s32</a>)(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#rcv_tsval\">rcv_tsval</a> - <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#ts_recent\">ts_recent</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#slow_path\">slow_path</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* DO NOT update ts_recent here, if checksum fails</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * and timestamp was corrupted part, it will result</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * in a hung connection since we will drop all</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * future packets due to the PAWS test.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> <= <a class=\"id\" href=\"#tcp_header_len\">tcp_header_len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Bulk data transfer: sender */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> == <a class=\"id\" href=\"#tcp_header_len\">tcp_header_len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Predicted packet is in window by definition.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * seq == rcv_nxt and rcv_wup &lt;= rcv_nxt.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Hence, check seq&lt;=rcv_wup reduces to:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_header_len\">tcp_header_len</a> ==", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (sizeof(struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a>) + <a class=\"id\" href=\"#TCPOLEN_TSTAMP_ALIGNED\">TCPOLEN_TSTAMP_ALIGNED</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_nxt\">rcv_nxt</a> == <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_wup\">rcv_wup</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_store_ts_recent\">tcp_store_ts_recent</a>(<a class=\"id\" href=\"#tp\">tp</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We know that such packets are checksummed</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * on entry.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_ack\">tcp_ack</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__kfree_skb\">__kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_data_snd_check\">tcp_data_snd_check</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else { <span class=\"comment\">/* Header too small */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#TCP_INC_STATS_BH\">TCP_INC_STATS_BH</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#TCP_MIB_INERRS\">TCP_MIB_INERRS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#discard\">discard</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#eaten\">eaten</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#copied_early\">copied_early</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#copied_seq\">copied_seq</a> == <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_nxt\">rcv_nxt</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#len\">len</a> - <a class=\"id\" href=\"#tcp_header_len\">tcp_header_len</a> <= <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#len\">len</a>) {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET_DMA\">CONFIG_NET_DMA</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_dma_try_early_copy\">tcp_dma_try_early_copy</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#tcp_header_len\">tcp_header_len</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copied_early\">copied_early</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#eaten\">eaten</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#task\">task</a> == <a class=\"id\" href=\"#current\">current</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sock_owned_by_user\">sock_owned_by_user</a>(<a class=\"id\" href=\"#sk\">sk</a>) && !<a class=\"id\" href=\"#copied_early\">copied_early</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__set_current_state\">__set_current_state</a>(<a class=\"id\" href=\"#TASK_RUNNING\">TASK_RUNNING</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tcp_copy_to_iovec\">tcp_copy_to_iovec</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#tcp_header_len\">tcp_header_len</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#eaten\">eaten</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#eaten\">eaten</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Predicted packet is in window by definition.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * seq == rcv_nxt and rcv_wup &lt;= rcv_nxt.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Hence, check seq&lt;=rcv_wup reduces to:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_header_len\">tcp_header_len</a> ==", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (sizeof(struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#TCPOLEN_TSTAMP_ALIGNED\">TCPOLEN_TSTAMP_ALIGNED</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_nxt\">rcv_nxt</a> == <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_wup\">rcv_wup</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_store_ts_recent\">tcp_store_ts_recent</a>(<a class=\"id\" href=\"#tp\">tp</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_rcv_rtt_measure_ts\">tcp_rcv_rtt_measure_ts</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__skb_pull\">__skb_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#tcp_header_len\">tcp_header_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_nxt\">rcv_nxt</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NET_INC_STATS_BH\">NET_INC_STATS_BH</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#LINUX_MIB_TCPHPHITSTOUSER\">LINUX_MIB_TCPHPHITSTOUSER</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copied_early\">copied_early</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_cleanup_rbuf\">tcp_cleanup_rbuf</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#eaten\">eaten</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_checksum_complete_user\">tcp_checksum_complete_user</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#csum_error\">csum_error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Predicted packet is in window by definition.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * seq == rcv_nxt and rcv_wup &lt;= rcv_nxt.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Hence, check seq&lt;=rcv_wup reduces to:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_header_len\">tcp_header_len</a> ==", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (sizeof(struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a>) + <a class=\"id\" href=\"#TCPOLEN_TSTAMP_ALIGNED\">TCPOLEN_TSTAMP_ALIGNED</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_nxt\">rcv_nxt</a> == <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_wup\">rcv_wup</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_store_ts_recent\">tcp_store_ts_recent</a>(<a class=\"id\" href=\"#tp\">tp</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_rcv_rtt_measure_ts\">tcp_rcv_rtt_measure_ts</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((int)<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#truesize\">truesize</a> &gt; <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_forward_alloc\">sk_forward_alloc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#step5\">step5</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NET_INC_STATS_BH\">NET_INC_STATS_BH</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#LINUX_MIB_TCPHPHITS\">LINUX_MIB_TCPHPHITS</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Bulk data transfer: receiver */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__skb_pull\">__skb_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#tcp_header_len\">tcp_header_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__skb_queue_tail\">__skb_queue_tail</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_receive_queue\">sk_receive_queue</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_set_owner_r\">skb_set_owner_r</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_nxt\">rcv_nxt</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_event_data_recv\">tcp_event_data_recv</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#ack_seq\">ack_seq</a> != <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_una\">snd_una</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Well, only one small jumplet in fast path... */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_ack\">tcp_ack</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#FLAG_DATA\">FLAG_DATA</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_data_snd_check\">tcp_data_snd_check</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#inet_csk_ack_scheduled\">inet_csk_ack_scheduled</a>(<a class=\"id\" href=\"#sk\">sk</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#no_ack\">no_ack</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#copied_early\">copied_early</a> || <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_nxt\">rcv_nxt</a> != <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_wup\">rcv_wup</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__tcp_ack_snd_check\">__tcp_ack_snd_check</a>(<a class=\"id\" href=\"#sk\">sk</a>, 0);", 
"<a class=\"id\" href=\"#no_ack\">no_ack</a>:", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET_DMA\">CONFIG_NET_DMA</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copied_early\">copied_early</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__skb_queue_tail\">__skb_queue_tail</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_async_wait_queue\">sk_async_wait_queue</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#eaten\">eaten</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__kfree_skb\">__kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_data_ready\">sk_data_ready</a>(<a class=\"id\" href=\"#sk\">sk</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#slow_path\">slow_path</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &lt; (<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#doff\">doff</a> << 2) || <a class=\"id\" href=\"#tcp_checksum_complete_user\">tcp_checksum_complete_user</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#csum_error\">csum_error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Standard slow path.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#tcp_validate_incoming\">tcp_validate_incoming</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#th\">th</a>, 1);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a> <= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#res\">res</a>;", 
"", 
"<a class=\"id\" href=\"#step5\">step5</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#ack\">ack</a> && <a class=\"id\" href=\"#tcp_ack\">tcp_ack</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#FLAG_SLOWPATH\">FLAG_SLOWPATH</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#discard\">discard</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_rcv_rtt_measure_ts\">tcp_rcv_rtt_measure_ts</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Process urgent data. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_urg\">tcp_urg</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#th\">th</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* step 7: process the segment text */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_data_queue\">tcp_data_queue</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_data_snd_check\">tcp_data_snd_check</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_ack_snd_check\">tcp_ack_snd_check</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#csum_error\">csum_error</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_INC_STATS_BH\">TCP_INC_STATS_BH</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#TCP_MIB_INERRS\">TCP_MIB_INERRS</a>);", 
"", 
"<a class=\"id\" href=\"#discard\">discard</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__kfree_skb\">__kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tcp_rcv_established\">tcp_rcv_established</a>);", 
"", 
"static int <a class=\"id\" href=\"#tcp_rcv_synsent_state_process\">tcp_rcv_synsent_state_process</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a> *<a class=\"id\" href=\"#th\">th</a>, unsigned <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#hash_location\">hash_location</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a> *<a class=\"id\" href=\"#icsk\">icsk</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_cookie_values\">tcp_cookie_values</a> *<a class=\"id\" href=\"#cvp\">cvp</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#cookie_values\">cookie_values</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#saved_clamp\">saved_clamp</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#mss_clamp\">mss_clamp</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_parse_options\">tcp_parse_options</a>(<a class=\"id\" href=\"#skb\">skb</a>, &amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>, &amp;<a class=\"id\" href=\"#hash_location\">hash_location</a>, 0);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#ack\">ack</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* rfc793:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * \"If the state is SYN-SENT then</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *    first check the ACK bit</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *      If the ACK bit is set</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>  If SEG.ACK =&lt; ISS, or SEG.ACK &gt; SND.NXT, send</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *        a reset (unless the RST bit is set, if so drop</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *        the segment and return)\"</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *  We do not send data with SYN, so that RFC-correct</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *  test reduces to:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#ack_seq\">ack_seq</a> != <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_nxt\">snd_nxt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#reset_and_undo\">reset_and_undo</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#saw_tstamp\">saw_tstamp</a> && <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#rcv_tsecr\">rcv_tsecr</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#between\">between</a>(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#rcv_tsecr\">rcv_tsecr</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#retrans_stamp\">retrans_stamp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#tcp_time_stamp\">tcp_time_stamp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NET_INC_STATS_BH\">NET_INC_STATS_BH</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#LINUX_MIB_PAWSACTIVEREJECTED\">LINUX_MIB_PAWSACTIVEREJECTED</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#reset_and_undo\">reset_and_undo</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Now ACK is acceptable.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * \"If the RST bit is set</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *    If the ACK was acceptable then signal the user \"error:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *    connection reset\", drop the segment, enter CLOSED state,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *    delete TCB, and return.\"</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#rst\">rst</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_reset\">tcp_reset</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#discard\">discard</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* rfc793:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *   \"fifth, if neither of the SYN or RST bits is set then</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *    drop the segment and return.\"</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *    See note below!</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *                                        --ANK(990513)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#syn\">syn</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#discard_and_undo\">discard_and_undo</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* rfc793:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *   \"If the SYN bit is on ...</span>", 
];
xr_frag_insert('l/5e/9e7bcc812a0fa22963c220474cc6b8496b6084.xr', __xr_tmp);
