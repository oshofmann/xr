var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * linux/kernel/irq/handle.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 1992, 1998-2006 Linus Torvalds, Ingo Molnar</span>", 
"<span class=\"comment\"> * Copyright (C) 2005-2006, Thomas Gleixner, Russell King</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file contains the core interrupt handling code.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Detailed information is available in Documentation/DocBook/genericirq</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#irq\">irq</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#random\">random</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel_stat\">kernel_stat</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rculist\">rculist</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#hash\">hash</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#radix\">radix</a>-<a class=\"id\" href=\"#tree\">tree</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#trace\">trace</a>/<a class=\"id\" href=\"#events\">events</a>/<a class=\"id\" href=\"#irq\">irq</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"internals.h\"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * lockdep: we want to handle all irq_desc locks as a single lock-class:</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#lock_class_key\">lock_class_key</a> <a class=\"id\" href=\"#irq_desc_lock_class\">irq_desc_lock_class</a>;", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * handle_bad_irq - handle spurious and unhandled irqs</span>", 
"<span class=\"comment\"> * @irq:       the interrupt number</span>", 
"<span class=\"comment\"> * @desc:      description of the interrupt</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Handles spurious and unhandled IRQ's. It also prints a debugmessage.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#handle_bad_irq\">handle_bad_irq</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>, struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#print_irq_desc\">print_irq_desc</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#desc\">desc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kstat_incr_irqs_this_cpu\">kstat_incr_irqs_this_cpu</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#desc\">desc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ack_bad_irq\">ack_bad_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"}", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>) && <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_GENERIC_HARDIRQS\">CONFIG_GENERIC_HARDIRQS</a>)", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#init_irq_default_affinity\">init_irq_default_affinity</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#alloc_cpumask_var\">alloc_cpumask_var</a>(&amp;<a class=\"id\" href=\"#irq_default_affinity\">irq_default_affinity</a>, <a class=\"id\" href=\"#GFP_NOWAIT\">GFP_NOWAIT</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpumask_setall\">cpumask_setall</a>(<a class=\"id\" href=\"#irq_default_affinity\">irq_default_affinity</a>);", 
"}", 
"#else", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#init_irq_default_affinity\">init_irq_default_affinity</a>(void)", 
"{", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Linux has a controller-independent interrupt architecture.</span>", 
"<span class=\"comment\"> * Every controller has a 'controller-template', that is used</span>", 
"<span class=\"comment\"> * by the main code to do the right thing. Each driver-visible</span>", 
"<span class=\"comment\"> * interrupt source is transparently wired to the appropriate</span>", 
"<span class=\"comment\"> * controller. Thus drivers need not be aware of the</span>", 
"<span class=\"comment\"> * interrupt-controller.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The code is designed to be easily extended with new/different</span>", 
"<span class=\"comment\"> * interrupt controllers, without having to do assembly magic or</span>", 
"<span class=\"comment\"> * having to touch the generic code.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Controller mappings for all interrupt sources:</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#nr_irqs\">nr_irqs</a> = <a class=\"id\" href=\"#NR_IRQS\">NR_IRQS</a>;", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#nr_irqs\">nr_irqs</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SPARSE_IRQ\">CONFIG_SPARSE_IRQ</a>", 
"", 
"static struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> <a class=\"id\" href=\"#irq_desc_init\">irq_desc_init</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#irq\">irq</a><span class=\"ts\"/>    = -1,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#status\">status</a><span class=\"ts\"/>    = <a class=\"id\" href=\"#IRQ_DISABLED\">IRQ_DISABLED</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#chip\">chip</a><span class=\"ts\"/>    = &amp;<a class=\"id\" href=\"#no_irq_chip\">no_irq_chip</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#handle_irq\">handle_irq</a> = <a class=\"id\" href=\"#handle_bad_irq\">handle_bad_irq</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#depth\">depth</a>      = 1,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#lock\">lock</a>       = <a class=\"id\" href=\"#__RAW_SPIN_LOCK_UNLOCKED\">__RAW_SPIN_LOCK_UNLOCKED</a>(<a class=\"id\" href=\"#irq_desc_init\">irq_desc_init</a>.<a class=\"id\" href=\"#lock\">lock</a>),", 
"};", 
"", 
"void <a class=\"id\" href=\"#__ref\">__ref</a> <a class=\"id\" href=\"#init_kstat_irqs\">init_kstat_irqs</a>(struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>, int <a class=\"id\" href=\"#node\">node</a>, int <a class=\"id\" href=\"#nr\">nr</a>)", 
"{", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#ptr\">ptr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ptr\">ptr</a> = <a class=\"id\" href=\"#kzalloc_node\">kzalloc_node</a>(<a class=\"id\" href=\"#nr\">nr</a> * sizeof(*<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#kstat_irqs\">kstat_irqs</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * don't overwite if can not get new one</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * init_copy_kstat_irqs() could still use old one</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ptr\">ptr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"  alloc kstat_irqs on node %d\\n\", <a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#kstat_irqs\">kstat_irqs</a> = <a class=\"id\" href=\"#ptr\">ptr</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#init_one_irq_desc\">init_one_irq_desc</a>(int <a class=\"id\" href=\"#irq\">irq</a>, struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>, int <a class=\"id\" href=\"#node\">node</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#desc\">desc</a>, &amp;<a class=\"id\" href=\"#irq_desc_init\">irq_desc_init</a>, sizeof(struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock_init\">raw_spin_lock_init</a>(&amp;<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#irq\">irq</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#node\">node</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lockdep_set_class\">lockdep_set_class</a>(&amp;<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#lock\">lock</a>, &amp;<a class=\"id\" href=\"#irq_desc_lock_class\">irq_desc_lock_class</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_kstat_irqs\">init_kstat_irqs</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#nr_cpu_ids\">nr_cpu_ids</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#kstat_irqs\">kstat_irqs</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"can not alloc kstat_irqs\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(1);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#alloc_desc_masks\">alloc_desc_masks</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#false\">false</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"can not alloc irq_desc cpumasks\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(1);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_desc_masks\">init_desc_masks</a>(<a class=\"id\" href=\"#desc\">desc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arch_init_chip_data\">arch_init_chip_data</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Protect the sparse_irqs:</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#DEFINE_RAW_SPINLOCK\">DEFINE_RAW_SPINLOCK</a>(<a class=\"id\" href=\"#sparse_irq_lock\">sparse_irq_lock</a>);", 
"", 
"static <a class=\"id\" href=\"#RADIX_TREE\">RADIX_TREE</a>(<a class=\"id\" href=\"#irq_desc_tree\">irq_desc_tree</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"", 
"static void <a class=\"id\" href=\"#set_irq_desc\">set_irq_desc</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>, struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#radix_tree_insert\">radix_tree_insert</a>(&amp;<a class=\"id\" href=\"#irq_desc_tree\">irq_desc_tree</a>, <a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#desc\">desc</a>);", 
"}", 
"", 
"struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#irq_to_desc\">irq_to_desc</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#radix_tree_lookup\">radix_tree_lookup</a>(&amp;<a class=\"id\" href=\"#irq_desc_tree\">irq_desc_tree</a>, <a class=\"id\" href=\"#irq\">irq</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#replace_irq_desc\">replace_irq_desc</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>, struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>)", 
"{", 
"<span class=\"ts\"/>void **<a class=\"id\" href=\"#ptr\">ptr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ptr\">ptr</a> = <a class=\"id\" href=\"#radix_tree_lookup_slot\">radix_tree_lookup_slot</a>(&amp;<a class=\"id\" href=\"#irq_desc_tree\">irq_desc_tree</a>, <a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#radix_tree_replace_slot\">radix_tree_replace_slot</a>(<a class=\"id\" href=\"#ptr\">ptr</a>, <a class=\"id\" href=\"#desc\">desc</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> <a class=\"id\" href=\"#irq_desc_legacy\">irq_desc_legacy</a>[<a class=\"id\" href=\"#NR_IRQS_LEGACY\">NR_IRQS_LEGACY</a>] <a class=\"id\" href=\"#__cacheline_aligned_in_smp\">__cacheline_aligned_in_smp</a> = {", 
"<span class=\"ts\"/>[0 ... <a class=\"id\" href=\"#NR_IRQS_LEGACY\">NR_IRQS_LEGACY</a>-1] = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#irq\">irq</a><span class=\"ts\"/>    = -1,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#status\">status</a><span class=\"ts\"/>    = <a class=\"id\" href=\"#IRQ_DISABLED\">IRQ_DISABLED</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#chip\">chip</a><span class=\"ts\"/>    = &amp;<a class=\"id\" href=\"#no_irq_chip\">no_irq_chip</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#handle_irq\">handle_irq</a> = <a class=\"id\" href=\"#handle_bad_irq\">handle_bad_irq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#depth\">depth</a><span class=\"ts\"/>    = 1,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#lock\">lock</a><span class=\"ts\"/>    = <a class=\"id\" href=\"#__RAW_SPIN_LOCK_UNLOCKED\">__RAW_SPIN_LOCK_UNLOCKED</a>(<a class=\"id\" href=\"#irq_desc_init\">irq_desc_init</a>.<a class=\"id\" href=\"#lock\">lock</a>),", 
"<span class=\"ts\"/>}", 
"};", 
"", 
"static unsigned int *<a class=\"id\" href=\"#kstat_irqs_legacy\">kstat_irqs_legacy</a>;", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#early_irq_init\">early_irq_init</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#legacy_count\">legacy_count</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_irq_default_affinity\">init_irq_default_affinity</a>();", 
"", 
"<span class=\"ts\"/> <span class=\"comment\">/* initialize nr_irqs based on nr_cpu_ids */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arch_probe_nr_irqs\">arch_probe_nr_irqs</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"NR_IRQS:%d nr_irqs:%d\\n\", <a class=\"id\" href=\"#NR_IRQS\">NR_IRQS</a>, <a class=\"id\" href=\"#nr_irqs\">nr_irqs</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#irq_desc_legacy\">irq_desc_legacy</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#legacy_count\">legacy_count</a> = <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#irq_desc_legacy\">irq_desc_legacy</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#first_online_node\">first_online_node</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* allocate based on nr_cpu_ids */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kstat_irqs_legacy\">kstat_irqs_legacy</a> = <a class=\"id\" href=\"#kzalloc_node\">kzalloc_node</a>(<a class=\"id\" href=\"#NR_IRQS_LEGACY\">NR_IRQS_LEGACY</a> * <a class=\"id\" href=\"#nr_cpu_ids\">nr_cpu_ids</a> *", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  sizeof(int), <a class=\"id\" href=\"#GFP_NOWAIT\">GFP_NOWAIT</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#legacy_count\">legacy_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#i\">i</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#node\">node</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#kstat_irqs\">kstat_irqs</a> = <a class=\"id\" href=\"#kstat_irqs_legacy\">kstat_irqs_legacy</a> + <a class=\"id\" href=\"#i\">i</a> * <a class=\"id\" href=\"#nr_cpu_ids\">nr_cpu_ids</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lockdep_set_class\">lockdep_set_class</a>(&amp;<a class=\"id\" href=\"#desc\">desc</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#lock\">lock</a>, &amp;<a class=\"id\" href=\"#irq_desc_lock_class\">irq_desc_lock_class</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alloc_desc_masks\">alloc_desc_masks</a>(&amp;<a class=\"id\" href=\"#desc\">desc</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#true\">true</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#init_desc_masks\">init_desc_masks</a>(&amp;<a class=\"id\" href=\"#desc\">desc</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_irq_desc\">set_irq_desc</a>(<a class=\"id\" href=\"#i\">i</a>, &amp;<a class=\"id\" href=\"#desc\">desc</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#arch_early_irq_init\">arch_early_irq_init</a>();", 
"}", 
"", 
"struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> * <a class=\"id\" href=\"#__ref\">__ref</a> <a class=\"id\" href=\"#irq_to_desc_alloc_node\">irq_to_desc_alloc_node</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>, int <a class=\"id\" href=\"#node\">node</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#irq\">irq</a> >= <a class=\"id\" href=\"#nr_irqs\">nr_irqs</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN\">WARN</a>(1, \"irq (%d) >= nr_irqs (%d) in irq_to_desc_alloc\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#nr_irqs\">nr_irqs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#irq_to_desc\">irq_to_desc</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#desc\">desc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#desc\">desc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock_irqsave\">raw_spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#sparse_irq_lock\">sparse_irq_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We have to check it to avoid races with another CPU */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#irq_to_desc\">irq_to_desc</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#desc\">desc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#kzalloc_node\">kzalloc_node</a>(sizeof(*<a class=\"id\" href=\"#desc\">desc</a>), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"  alloc irq_desc for %d on node %d\\n\", <a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#desc\">desc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"can not alloc irq_desc\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(1);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_one_irq_desc\">init_one_irq_desc</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_irq_desc\">set_irq_desc</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#desc\">desc</a>);", 
"", 
"<a class=\"id\" href=\"#out_unlock\">out_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock_irqrestore\">raw_spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#sparse_irq_lock\">sparse_irq_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#desc\">desc</a>;", 
];
xr_frag_insert('l/5e/c3e487205231040a2ffb983c8087b68e665718.xr', __xr_tmp);
