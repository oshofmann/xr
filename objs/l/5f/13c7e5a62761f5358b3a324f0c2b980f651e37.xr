var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Memory mapped I/O tracing</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2008 Pekka Paalanen &lt;pq@iki.fi&gt;</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEBUG\">DEBUG</a> 1", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mmiotrace\">mmiotrace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#atomic\">atomic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"trace.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"trace_output.h\"", 
"", 
"struct <a class=\"id\" href=\"#header_iter\">header_iter</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#trace_array\">trace_array</a> *<a class=\"id\" href=\"#mmio_trace_array\">mmio_trace_array</a>;", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#overrun_detected\">overrun_detected</a>;", 
"static unsigned long <a class=\"id\" href=\"#prev_overruns\">prev_overruns</a>;", 
"static <a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#dropped_count\">dropped_count</a>;", 
"", 
"static void <a class=\"id\" href=\"#mmio_reset_data\">mmio_reset_data</a>(struct <a class=\"id\" href=\"#trace_array\">trace_array</a> *<a class=\"id\" href=\"#tr\">tr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#overrun_detected\">overrun_detected</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#prev_overruns\">prev_overruns</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tracing_reset_online_cpus\">tracing_reset_online_cpus</a>(<a class=\"id\" href=\"#tr\">tr</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#mmio_trace_init\">mmio_trace_init</a>(struct <a class=\"id\" href=\"#trace_array\">trace_array</a> *<a class=\"id\" href=\"#tr\">tr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"in %s\\n\", <a class=\"id\" href=\"#__func__\">__func__</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mmio_trace_array\">mmio_trace_array</a> = <a class=\"id\" href=\"#tr\">tr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mmio_reset_data\">mmio_reset_data</a>(<a class=\"id\" href=\"#tr\">tr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#enable_mmiotrace\">enable_mmiotrace</a>();", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#mmio_trace_reset\">mmio_trace_reset</a>(struct <a class=\"id\" href=\"#trace_array\">trace_array</a> *<a class=\"id\" href=\"#tr\">tr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"in %s\\n\", <a class=\"id\" href=\"#__func__\">__func__</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disable_mmiotrace\">disable_mmiotrace</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mmio_reset_data\">mmio_reset_data</a>(<a class=\"id\" href=\"#tr\">tr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mmio_trace_array\">mmio_trace_array</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#mmio_trace_start\">mmio_trace_start</a>(struct <a class=\"id\" href=\"#trace_array\">trace_array</a> *<a class=\"id\" href=\"#tr\">tr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"in %s\\n\", <a class=\"id\" href=\"#__func__\">__func__</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mmio_reset_data\">mmio_reset_data</a>(<a class=\"id\" href=\"#tr\">tr</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#mmio_print_pcidev\">mmio_print_pcidev</a>(struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a>, const struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#resource_size_t\">resource_size_t</a> <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#pci_driver\">pci_driver</a> *<a class=\"id\" href=\"#drv\">drv</a> = <a class=\"id\" href=\"#pci_dev_driver\">pci_dev_driver</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* XXX: incomplete checks for trace_seq_printf() return value */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> += <a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \"PCIDEV %02x%02x %04x%04x %x\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#number\">number</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devfn\">devfn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#vendor\">vendor</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#device\">device</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * XXX: is pci_resource_to_user() appropriate, since we are</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * supposed to interpret the __ioremap() phys_addr argument based on</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * these printed values?</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 7; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_resource_to_user\">pci_resource_to_user</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#i\">i</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#resource\">resource</a>[<a class=\"id\" href=\"#i\">i</a>], &amp;<a class=\"id\" href=\"#start\">start</a>, &amp;<a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> += <a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \" %llx\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long long)(<a class=\"id\" href=\"#start\">start</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#resource\">resource</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#PCI_REGION_FLAG_MASK\">PCI_REGION_FLAG_MASK</a>)));", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 7; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_resource_to_user\">pci_resource_to_user</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#i\">i</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#resource\">resource</a>[<a class=\"id\" href=\"#i\">i</a>], &amp;<a class=\"id\" href=\"#start\">start</a>, &amp;<a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> += <a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \" %llx\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#resource\">resource</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#start\">start</a> &lt; <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#resource\">resource</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#end\">end</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long long)(<a class=\"id\" href=\"#end\">end</a> - <a class=\"id\" href=\"#start\">start</a>) + 1 : 0);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#drv\">drv</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> += <a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \" %s\\n\", <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> += <a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \" \\n\");", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#destroy_header_iter\">destroy_header_iter</a>(struct <a class=\"id\" href=\"#header_iter\">header_iter</a> *<a class=\"id\" href=\"#hiter\">hiter</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hiter\">hiter</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_dev_put\">pci_dev_put</a>(<a class=\"id\" href=\"#hiter\">hiter</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#hiter\">hiter</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#mmio_pipe_open\">mmio_pipe_open</a>(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#header_iter\">header_iter</a> *<a class=\"id\" href=\"#hiter\">hiter</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a> = &amp;<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#seq\">seq</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \"VERSION 20070824\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hiter\">hiter</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#hiter\">hiter</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hiter\">hiter</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hiter\">hiter</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#pci_get_device\">pci_get_device</a>(<a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#private\">private</a> = <a class=\"id\" href=\"#hiter\">hiter</a>;", 
"}", 
"", 
"<span class=\"comment\">/* XXX: This is not called when the pipe is closed! */</span>", 
"static void <a class=\"id\" href=\"#mmio_close\">mmio_close</a>(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#header_iter\">header_iter</a> *<a class=\"id\" href=\"#hiter\">hiter</a> = <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#destroy_header_iter\">destroy_header_iter</a>(<a class=\"id\" href=\"#hiter\">hiter</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#private\">private</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static unsigned long <a class=\"id\" href=\"#count_overruns\">count_overruns</a>(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#cnt\">cnt</a> = <a class=\"id\" href=\"#atomic_xchg\">atomic_xchg</a>(&amp;<a class=\"id\" href=\"#dropped_count\">dropped_count</a>, 0);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#over\">over</a> = <a class=\"id\" href=\"#ring_buffer_overruns\">ring_buffer_overruns</a>(<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#tr\">tr</a>-><a class=\"id\" href=\"#buffer\">buffer</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#over\">over</a> &gt; <a class=\"id\" href=\"#prev_overruns\">prev_overruns</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cnt\">cnt</a> += <a class=\"id\" href=\"#over\">over</a> - <a class=\"id\" href=\"#prev_overruns\">prev_overruns</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#prev_overruns\">prev_overruns</a> = <a class=\"id\" href=\"#over\">over</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cnt\">cnt</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#mmio_read\">mmio_read</a>(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#cnt\">cnt</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#header_iter\">header_iter</a> *<a class=\"id\" href=\"#hiter\">hiter</a> = <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a> = &amp;<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#seq\">seq</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#n\">n</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#count_overruns\">count_overruns</a>(<a class=\"id\" href=\"#iter\">iter</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* XXX: This is later than where events were lost. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \"MARK 0.000000 Lost %lu events.\\n\", <a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#overrun_detected\">overrun_detected</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_warning\">pr_warning</a>(\"mmiotrace has lost events.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#overrun_detected\">overrun_detected</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#print_out\">print_out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hiter\">hiter</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mmio_print_pcidev\">mmio_print_pcidev</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#hiter\">hiter</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hiter\">hiter</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#pci_get_device\">pci_get_device</a>(<a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#hiter\">hiter</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hiter\">hiter</a>-><a class=\"id\" href=\"#dev\">dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#destroy_header_iter\">destroy_header_iter</a>(<a class=\"id\" href=\"#hiter\">hiter</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#private\">private</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#print_out\">print_out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#trace_seq_to_user\">trace_seq_to_user</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#cnt\">cnt</a>);", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#ret\">ret</a> == -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>) ? 0 : <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static enum <a class=\"id\" href=\"#print_line_t\">print_line_t</a> <a class=\"id\" href=\"#mmio_print_rw\">mmio_print_rw</a>(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#trace_entry\">trace_entry</a> *<a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#ent\">ent</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#trace_mmiotrace_rw\">trace_mmiotrace_rw</a> *<a class=\"id\" href=\"#field\">field</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mmiotrace_rw\">mmiotrace_rw</a> *<a class=\"id\" href=\"#rw\">rw</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#seq\">seq</a>;", 
"<span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#t\">t</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ns2usecs\">ns2usecs</a>(<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#ts\">ts</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#usec_rem\">usec_rem</a><span class=\"ts\"/>= <a class=\"id\" href=\"#do_div\">do_div</a>(<a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#USEC_PER_SEC\">USEC_PER_SEC</a>);", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#secs\">secs</a><span class=\"ts\"/><span class=\"ts\"/>= (unsigned long)<a class=\"id\" href=\"#t\">t</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_assign_type\">trace_assign_type</a>(<a class=\"id\" href=\"#field\">field</a>, <a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rw\">rw</a> = &amp;<a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#rw\">rw</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#rw\">rw</a>-><a class=\"id\" href=\"#opcode\">opcode</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MMIO_READ\">MMIO_READ</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"R %d %u.%06lu %d 0x%llx 0x%lx 0x%lx %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rw\">rw</a>-><a class=\"id\" href=\"#width\">width</a>, <a class=\"id\" href=\"#secs\">secs</a>, <a class=\"id\" href=\"#usec_rem\">usec_rem</a>, <a class=\"id\" href=\"#rw\">rw</a>-><a class=\"id\" href=\"#map_id\">map_id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long long)<a class=\"id\" href=\"#rw\">rw</a>-><a class=\"id\" href=\"#phys\">phys</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rw\">rw</a>-><a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#rw\">rw</a>-><a class=\"id\" href=\"#pc\">pc</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MMIO_WRITE\">MMIO_WRITE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"W %d %u.%06lu %d 0x%llx 0x%lx 0x%lx %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rw\">rw</a>-><a class=\"id\" href=\"#width\">width</a>, <a class=\"id\" href=\"#secs\">secs</a>, <a class=\"id\" href=\"#usec_rem\">usec_rem</a>, <a class=\"id\" href=\"#rw\">rw</a>-><a class=\"id\" href=\"#map_id\">map_id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long long)<a class=\"id\" href=\"#rw\">rw</a>-><a class=\"id\" href=\"#phys\">phys</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rw\">rw</a>-><a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#rw\">rw</a>-><a class=\"id\" href=\"#pc\">pc</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MMIO_UNKNOWN_OP\">MMIO_UNKNOWN_OP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"UNKNOWN %u.%06lu %d 0x%llx %02lx,%02lx,\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"%02lx 0x%lx %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#secs\">secs</a>, <a class=\"id\" href=\"#usec_rem\">usec_rem</a>, <a class=\"id\" href=\"#rw\">rw</a>-><a class=\"id\" href=\"#map_id\">map_id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long long)<a class=\"id\" href=\"#rw\">rw</a>-><a class=\"id\" href=\"#phys\">phys</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#rw\">rw</a>-><a class=\"id\" href=\"#value\">value</a> >> 16) &amp; 0xff, (<a class=\"id\" href=\"#rw\">rw</a>-><a class=\"id\" href=\"#value\">value</a> >> 8) &amp; 0xff,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#rw\">rw</a>-><a class=\"id\" href=\"#value\">value</a> >> 0) &amp; 0xff, <a class=\"id\" href=\"#rw\">rw</a>-><a class=\"id\" href=\"#pc\">pc</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \"rw what?\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#TRACE_TYPE_HANDLED\">TRACE_TYPE_HANDLED</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#TRACE_TYPE_PARTIAL_LINE\">TRACE_TYPE_PARTIAL_LINE</a>;", 
"}", 
"", 
"static enum <a class=\"id\" href=\"#print_line_t\">print_line_t</a> <a class=\"id\" href=\"#mmio_print_map\">mmio_print_map</a>(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#trace_entry\">trace_entry</a> *<a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#ent\">ent</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#trace_mmiotrace_map\">trace_mmiotrace_map</a> *<a class=\"id\" href=\"#field\">field</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mmiotrace_map\">mmiotrace_map</a> *<a class=\"id\" href=\"#m\">m</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#seq\">seq</a>;", 
"<span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#t\">t</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ns2usecs\">ns2usecs</a>(<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#ts\">ts</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#usec_rem\">usec_rem</a><span class=\"ts\"/>= <a class=\"id\" href=\"#do_div\">do_div</a>(<a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#USEC_PER_SEC\">USEC_PER_SEC</a>);", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#secs\">secs</a><span class=\"ts\"/><span class=\"ts\"/>= (unsigned long)<a class=\"id\" href=\"#t\">t</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_assign_type\">trace_assign_type</a>(<a class=\"id\" href=\"#field\">field</a>, <a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a> = &amp;<a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#map\">map</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#opcode\">opcode</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MMIO_PROBE\">MMIO_PROBE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"MAP %u.%06lu %d 0x%llx 0x%lx 0x%lx 0x%lx %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#secs\">secs</a>, <a class=\"id\" href=\"#usec_rem\">usec_rem</a>, <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#map_id\">map_id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long long)<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#phys\">phys</a>, <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#virt\">virt</a>, <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0UL, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MMIO_UNPROBE\">MMIO_UNPROBE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"UNMAP %u.%06lu %d 0x%lx %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#secs\">secs</a>, <a class=\"id\" href=\"#usec_rem\">usec_rem</a>, <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#map_id\">map_id</a>, 0UL, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \"map what?\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#TRACE_TYPE_HANDLED\">TRACE_TYPE_HANDLED</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#TRACE_TYPE_PARTIAL_LINE\">TRACE_TYPE_PARTIAL_LINE</a>;", 
"}", 
"", 
"static enum <a class=\"id\" href=\"#print_line_t\">print_line_t</a> <a class=\"id\" href=\"#mmio_print_mark\">mmio_print_mark</a>(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#trace_entry\">trace_entry</a> *<a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#ent\">ent</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#print_entry\">print_entry</a> *<a class=\"id\" href=\"#print\">print</a> = (struct <a class=\"id\" href=\"#print_entry\">print_entry</a> *)<a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#msg\">msg</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#print\">print</a>-><a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#seq\">seq</a>;", 
"<span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#t\">t</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ns2usecs\">ns2usecs</a>(<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#ts\">ts</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#usec_rem\">usec_rem</a><span class=\"ts\"/>= <a class=\"id\" href=\"#do_div\">do_div</a>(<a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#USEC_PER_SEC\">USEC_PER_SEC</a>);", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#secs\">secs</a><span class=\"ts\"/><span class=\"ts\"/>= (unsigned long)<a class=\"id\" href=\"#t\">t</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* The trailing newline must be in the message. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \"MARK %u.%06lu %s\", <a class=\"id\" href=\"#secs\">secs</a>, <a class=\"id\" href=\"#usec_rem\">usec_rem</a>, <a class=\"id\" href=\"#msg\">msg</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#TRACE_TYPE_PARTIAL_LINE\">TRACE_TYPE_PARTIAL_LINE</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#TRACE_TYPE_HANDLED\">TRACE_TYPE_HANDLED</a>;", 
"}", 
"", 
"static enum <a class=\"id\" href=\"#print_line_t\">print_line_t</a> <a class=\"id\" href=\"#mmio_print_line\">mmio_print_line</a>(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#ent\">ent</a>-><a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TRACE_MMIO_RW\">TRACE_MMIO_RW</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#mmio_print_rw\">mmio_print_rw</a>(<a class=\"id\" href=\"#iter\">iter</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TRACE_MMIO_MAP\">TRACE_MMIO_MAP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#mmio_print_map\">mmio_print_map</a>(<a class=\"id\" href=\"#iter\">iter</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TRACE_PRINT\">TRACE_PRINT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#mmio_print_mark\">mmio_print_mark</a>(<a class=\"id\" href=\"#iter\">iter</a>);", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#TRACE_TYPE_HANDLED\">TRACE_TYPE_HANDLED</a>; <span class=\"comment\">/* ignore unknown entries */</span>", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#tracer\">tracer</a> <a class=\"id\" href=\"#mmio_tracer\">mmio_tracer</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> =", 
"{", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= \"mmiotrace\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#init\">init</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#mmio_trace_init\">mmio_trace_init</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#reset\">reset</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#mmio_trace_reset\">mmio_trace_reset</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#mmio_trace_start\">mmio_trace_start</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#pipe_open\">pipe_open</a><span class=\"ts\"/>= <a class=\"id\" href=\"#mmio_pipe_open\">mmio_pipe_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#close\">close</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#mmio_close\">mmio_close</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#mmio_read\">mmio_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#print_line\">print_line</a><span class=\"ts\"/>= <a class=\"id\" href=\"#mmio_print_line\">mmio_print_line</a>,", 
"};", 
];
xr_frag_insert('l/5f/13c7e5a62761f5358b3a324f0c2b980f651e37.xr', __xr_tmp);
