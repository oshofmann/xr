var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright 2006 PathScale, Inc.  All Rights Reserved.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> * it under the terms of version 2 of the GNU General Public License</span>", 
"<span class=\"comment\"> * as published by the Free Software Foundation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>", 
"<span class=\"comment\"> * GNU General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\"> * along with this program; if not, write to the Free Software Foundation,</span>", 
"<span class=\"comment\"> * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#io\">io</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * __iowrite32_copy - copy data to MMIO space, in 32-bit units</span>", 
"<span class=\"comment\"> * @to: destination, in MMIO space (must be 32-bit aligned)</span>", 
"<span class=\"comment\"> * @from: source (must be 32-bit aligned)</span>", 
"<span class=\"comment\"> * @count: number of 32-bit quantities to copy</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copy data from kernel space to MMIO space, in units of 32 bits at a</span>", 
"<span class=\"comment\"> * time.  Order of access is not guaranteed, nor is a memory barrier</span>", 
"<span class=\"comment\"> * performed afterwards.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#weak\">weak</a>)) <a class=\"id\" href=\"#__iowrite32_copy\">__iowrite32_copy</a>(void <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#to\">to</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const void *<a class=\"id\" href=\"#from\">from</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#to\">to</a>;", 
"<span class=\"ts\"/>const <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#src\">src</a> = <a class=\"id\" href=\"#from\">from</a>;", 
"<span class=\"ts\"/>const <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#src\">src</a> + <a class=\"id\" href=\"#count\">count</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#src\">src</a> &lt; <a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__raw_writel\">__raw_writel</a>(*<a class=\"id\" href=\"#src\">src</a>++, <a class=\"id\" href=\"#dst\">dst</a>++);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#__iowrite32_copy\">__iowrite32_copy</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * __iowrite64_copy - copy data to MMIO space, in 64-bit or 32-bit units</span>", 
"<span class=\"comment\"> * @to: destination, in MMIO space (must be 64-bit aligned)</span>", 
"<span class=\"comment\"> * @from: source (must be 64-bit aligned)</span>", 
"<span class=\"comment\"> * @count: number of 64-bit quantities to copy</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copy data from kernel space to MMIO space, in units of 32 or 64 bits at a</span>", 
"<span class=\"comment\"> * time.  Order of access is not guaranteed, nor is a memory barrier</span>", 
"<span class=\"comment\"> * performed afterwards.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#weak\">weak</a>)) <a class=\"id\" href=\"#__iowrite64_copy\">__iowrite64_copy</a>(void <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#to\">to</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const void *<a class=\"id\" href=\"#from\">from</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_64BIT\">CONFIG_64BIT</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#to\">to</a>;", 
"<span class=\"ts\"/>const <a class=\"id\" href=\"#u64\">u64</a> *<a class=\"id\" href=\"#src\">src</a> = <a class=\"id\" href=\"#from\">from</a>;", 
"<span class=\"ts\"/>const <a class=\"id\" href=\"#u64\">u64</a> *<a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#src\">src</a> + <a class=\"id\" href=\"#count\">count</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#src\">src</a> &lt; <a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__raw_writeq\">__raw_writeq</a>(*<a class=\"id\" href=\"#src\">src</a>++, <a class=\"id\" href=\"#dst\">dst</a>++);", 
"#else", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__iowrite32_copy\">__iowrite32_copy</a>(<a class=\"id\" href=\"#to\">to</a>, <a class=\"id\" href=\"#from\">from</a>, <a class=\"id\" href=\"#count\">count</a> * 2);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#__iowrite64_copy\">__iowrite64_copy</a>);", 
];
xr_frag_insert('l/5f/a7b70f5e58135db6cbb16b5c3073d695306548.xr', __xr_tmp);
