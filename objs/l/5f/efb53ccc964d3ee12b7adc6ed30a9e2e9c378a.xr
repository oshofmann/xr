var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  sr.c Copyright (C) 1992 David Giller</span>", 
"<span class=\"comment\"> *           Copyright (C) 1993, 1994, 1995, 1999 Eric Youngdale</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  adapted from:</span>", 
"<span class=\"comment\"> *      sd.c Copyright (C) 1992 Drew Eckhardt</span>", 
"<span class=\"comment\"> *      Linux scsi disk driver by</span>", 
"<span class=\"comment\"> *              Drew Eckhardt &lt;drew@colorado.edu&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Modified by Eric Youngdale ericy@andante.org to</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>add scatter-gather, multiple outstanding request, and other</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>enhancements.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *      Modified by Eric Youngdale eric@andante.org to support loadable</span>", 
"<span class=\"comment\"> *      low-level scsi drivers.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *      Modified by Thomas Quinot thomas@melchior.cuivre.fdn.fr to</span>", 
"<span class=\"comment\"> *      provide auto-eject.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *      Modified by Gerd Knorr &lt;kraxel@cs.tu-berlin.de&gt; to support the</span>", 
"<span class=\"comment\"> *      generic cdrom interface</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *      Modified by Jens Axboe &lt;axboe@suse.de&gt; - Uniform sr_packet()</span>", 
"<span class=\"comment\"> *      interface, capabilities probe additions, ioctl cleanups, etc.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Modified by Richard Gooch &lt;rgooch@atnf.csiro.au&gt; to support devfs</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Modified by Jens Axboe &lt;axboe@suse.de&gt; - support DVD-RAM</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>transparently and lose the GHOST hack</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Modified by Arnaldo Carvalho de Melo &lt;acme@conectiva.com.br&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>check resource allocation in sr_init and some cleanups</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bio\">bio</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cdrom\">cdrom</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blkdev\">blkdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mutex\">mutex</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#smp_lock\">smp_lock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi\">scsi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_dbg\">scsi_dbg</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_device\">scsi_device</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_driver\">scsi_driver</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_eh\">scsi_eh</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_host\">scsi_host</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_ioctl\">scsi_ioctl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;<span class=\"ts\"/><span class=\"comment\">/* For the door lock/unlock commands */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"scsi_logging.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"sr.h\"", 
"", 
"", 
"<a class=\"id\" href=\"#MODULE_DESCRIPTION\">MODULE_DESCRIPTION</a>(\"SCSI cdrom (sr) driver\");", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
"<a class=\"id\" href=\"#MODULE_ALIAS_BLOCKDEV_MAJOR\">MODULE_ALIAS_BLOCKDEV_MAJOR</a>(<a class=\"id\" href=\"#SCSI_CDROM_MAJOR\">SCSI_CDROM_MAJOR</a>);", 
"<a class=\"id\" href=\"#MODULE_ALIAS_SCSI_DEVICE\">MODULE_ALIAS_SCSI_DEVICE</a>(<a class=\"id\" href=\"#TYPE_ROM\">TYPE_ROM</a>);", 
"<a class=\"id\" href=\"#MODULE_ALIAS_SCSI_DEVICE\">MODULE_ALIAS_SCSI_DEVICE</a>(<a class=\"id\" href=\"#TYPE_WORM\">TYPE_WORM</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SR_DISKS\">SR_DISKS</a><span class=\"ts\"/>256", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SR_CAPABILITIES\">SR_CAPABILITIES</a> \\", 
"<span class=\"ts\"/>(<a class=\"id\" href=\"#CDC_CLOSE_TRAY\">CDC_CLOSE_TRAY</a>|<a class=\"id\" href=\"#CDC_OPEN_TRAY\">CDC_OPEN_TRAY</a>|<a class=\"id\" href=\"#CDC_LOCK\">CDC_LOCK</a>|<a class=\"id\" href=\"#CDC_SELECT_SPEED\">CDC_SELECT_SPEED</a>| \\", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#CDC_SELECT_DISC\">CDC_SELECT_DISC</a>|<a class=\"id\" href=\"#CDC_MULTI_SESSION\">CDC_MULTI_SESSION</a>|<a class=\"id\" href=\"#CDC_MCN\">CDC_MCN</a>|<a class=\"id\" href=\"#CDC_MEDIA_CHANGED\">CDC_MEDIA_CHANGED</a>| \\", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#CDC_PLAY_AUDIO\">CDC_PLAY_AUDIO</a>|<a class=\"id\" href=\"#CDC_RESET\">CDC_RESET</a>|<a class=\"id\" href=\"#CDC_DRIVE_STATUS\">CDC_DRIVE_STATUS</a>| \\", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#CDC_CD_R\">CDC_CD_R</a>|<a class=\"id\" href=\"#CDC_CD_RW\">CDC_CD_RW</a>|<a class=\"id\" href=\"#CDC_DVD\">CDC_DVD</a>|<a class=\"id\" href=\"#CDC_DVD_R\">CDC_DVD_R</a>|<a class=\"id\" href=\"#CDC_DVD_RAM\">CDC_DVD_RAM</a>|<a class=\"id\" href=\"#CDC_GENERIC_PACKET\">CDC_GENERIC_PACKET</a>| \\", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#CDC_MRW\">CDC_MRW</a>|<a class=\"id\" href=\"#CDC_MRW_W\">CDC_MRW_W</a>|<a class=\"id\" href=\"#CDC_RAM\">CDC_RAM</a>)", 
"", 
"static int <a class=\"id\" href=\"#sr_probe\">sr_probe</a>(struct <a class=\"id\" href=\"#device\">device</a> *);", 
"static int <a class=\"id\" href=\"#sr_remove\">sr_remove</a>(struct <a class=\"id\" href=\"#device\">device</a> *);", 
"static int <a class=\"id\" href=\"#sr_done\">sr_done</a>(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *);", 
"", 
"static struct <a class=\"id\" href=\"#scsi_driver\">scsi_driver</a> <a class=\"id\" href=\"#sr_template\">sr_template</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#gendrv\">gendrv</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a>   <span class=\"ts\"/>= \"sr\",", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#probe\">probe</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#sr_probe\">sr_probe</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#remove\">remove</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#sr_remove\">sr_remove</a>,", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#done\">done</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#sr_done\">sr_done</a>,", 
"};", 
"", 
"static unsigned long <a class=\"id\" href=\"#sr_index_bits\">sr_index_bits</a>[<a class=\"id\" href=\"#SR_DISKS\">SR_DISKS</a> / <a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a>];", 
"static <a class=\"id\" href=\"#DEFINE_SPINLOCK\">DEFINE_SPINLOCK</a>(<a class=\"id\" href=\"#sr_index_lock\">sr_index_lock</a>);", 
"", 
"<span class=\"comment\">/* This semaphore is used to mediate the 0-&gt;1 reference get in the</span>", 
"<span class=\"comment\"> * face of object destruction (i.e. we can't allow a get on an</span>", 
"<span class=\"comment\"> * object after last put) */</span>", 
"static <a class=\"id\" href=\"#DEFINE_MUTEX\">DEFINE_MUTEX</a>(<a class=\"id\" href=\"#sr_ref_mutex\">sr_ref_mutex</a>);", 
"", 
"static int <a class=\"id\" href=\"#sr_open\">sr_open</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *, int);", 
"static void <a class=\"id\" href=\"#sr_release\">sr_release</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *);", 
"", 
"static void <a class=\"id\" href=\"#get_sectorsize\">get_sectorsize</a>(struct <a class=\"id\" href=\"#scsi_cd\">scsi_cd</a> *);", 
"static void <a class=\"id\" href=\"#get_capabilities\">get_capabilities</a>(struct <a class=\"id\" href=\"#scsi_cd\">scsi_cd</a> *);", 
"", 
"static int <a class=\"id\" href=\"#sr_media_change\">sr_media_change</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *, int);", 
"static int <a class=\"id\" href=\"#sr_packet\">sr_packet</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *, struct <a class=\"id\" href=\"#packet_command\">packet_command</a> *);", 
"", 
"static struct <a class=\"id\" href=\"#cdrom_device_ops\">cdrom_device_ops</a> <a class=\"id\" href=\"#sr_dops\">sr_dops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#sr_open\">sr_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/> <span class=\"ts\"/>= <a class=\"id\" href=\"#sr_release\">sr_release</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#drive_status\">drive_status</a><span class=\"ts\"/> <span class=\"ts\"/>= <a class=\"id\" href=\"#sr_drive_status\">sr_drive_status</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#media_changed\">media_changed</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#sr_media_change\">sr_media_change</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#tray_move\">tray_move</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#sr_tray_move\">sr_tray_move</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#lock_door\">lock_door</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#sr_lock_door\">sr_lock_door</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#select_speed\">select_speed</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#sr_select_speed\">sr_select_speed</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#get_last_session\">get_last_session</a><span class=\"ts\"/>= <a class=\"id\" href=\"#sr_get_last_session\">sr_get_last_session</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#get_mcn\">get_mcn</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#sr_get_mcn\">sr_get_mcn</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#reset\">reset</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#sr_reset\">sr_reset</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#audio_ioctl\">audio_ioctl</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#sr_audio_ioctl\">sr_audio_ioctl</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#capability\">capability</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#SR_CAPABILITIES\">SR_CAPABILITIES</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#generic_packet\">generic_packet</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#sr_packet\">sr_packet</a>,", 
"};", 
"", 
"static void <a class=\"id\" href=\"#sr_kref_release\">sr_kref_release</a>(struct <a class=\"id\" href=\"#kref\">kref</a> *<a class=\"id\" href=\"#kref\">kref</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#scsi_cd\">scsi_cd</a> *<a class=\"id\" href=\"#scsi_cd\">scsi_cd</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#private_data\">private_data</a>, struct <a class=\"id\" href=\"#scsi_cd\">scsi_cd</a>, <a class=\"id\" href=\"#driver\">driver</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The get and put routines for the struct scsi_cd.  Note this entity</span>", 
"<span class=\"comment\"> * has a scsi_device pointer and owns a reference to this.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#scsi_cd\">scsi_cd</a> *<a class=\"id\" href=\"#scsi_cd_get\">scsi_cd_get</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_cd\">scsi_cd</a> *<a class=\"id\" href=\"#cd\">cd</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#sr_ref_mutex\">sr_ref_mutex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#private_data\">private_data</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a> = <a class=\"id\" href=\"#scsi_cd\">scsi_cd</a>(<a class=\"id\" href=\"#disk\">disk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kref_get\">kref_get</a>(&amp;<a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#kref\">kref</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#scsi_device_get\">scsi_device_get</a>(<a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#device\">device</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_put\">out_put</a>;", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
" <a class=\"id\" href=\"#out_put\">out_put</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kref_put\">kref_put</a>(&amp;<a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#kref\">kref</a>, <a class=\"id\" href=\"#sr_kref_release\">sr_kref_release</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#sr_ref_mutex\">sr_ref_mutex</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cd\">cd</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#scsi_cd_put\">scsi_cd_put</a>(struct <a class=\"id\" href=\"#scsi_cd\">scsi_cd</a> *<a class=\"id\" href=\"#cd\">cd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a> = <a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#device\">device</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#sr_ref_mutex\">sr_ref_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kref_put\">kref_put</a>(&amp;<a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#kref\">kref</a>, <a class=\"id\" href=\"#sr_kref_release\">sr_kref_release</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scsi_device_put\">scsi_device_put</a>(<a class=\"id\" href=\"#sdev\">sdev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#sr_ref_mutex\">sr_ref_mutex</a>);", 
"}", 
"", 
"<span class=\"comment\">/* identical to scsi_test_unit_ready except that it doesn't</span>", 
"<span class=\"comment\"> * eat the NOT_READY returns for removable media */</span>", 
"int <a class=\"id\" href=\"#sr_test_unit_ready\">sr_test_unit_ready</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a>, struct <a class=\"id\" href=\"#scsi_sense_hdr\">scsi_sense_hdr</a> *<a class=\"id\" href=\"#sshdr\">sshdr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retries\">retries</a> = <a class=\"id\" href=\"#MAX_RETRIES\">MAX_RETRIES</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#the_result\">the_result</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#cmd\">cmd</a>[] = {<a class=\"id\" href=\"#TEST_UNIT_READY\">TEST_UNIT_READY</a>, 0, 0, 0, 0, 0 };", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* issue TEST_UNIT_READY until the initial startup UNIT_ATTENTION</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * conditions are gone, or a timeout happens</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#the_result\">the_result</a> = <a class=\"id\" href=\"#scsi_execute_req\">scsi_execute_req</a>(<a class=\"id\" href=\"#sdev\">sdev</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#DMA_NONE\">DMA_NONE</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      0, <a class=\"id\" href=\"#sshdr\">sshdr</a>, <a class=\"id\" href=\"#SR_TIMEOUT\">SR_TIMEOUT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#retries\">retries</a>--, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#scsi_sense_valid\">scsi_sense_valid</a>(<a class=\"id\" href=\"#sshdr\">sshdr</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sshdr\">sshdr</a>-><a class=\"id\" href=\"#sense_key\">sense_key</a> == <a class=\"id\" href=\"#UNIT_ATTENTION\">UNIT_ATTENTION</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#changed\">changed</a> = 1;", 
"", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#retries\">retries</a> &gt; 0 &&", 
"<span class=\"ts\"/><span class=\"ts\"/> (!<a class=\"id\" href=\"#scsi_status_is_good\">scsi_status_is_good</a>(<a class=\"id\" href=\"#the_result\">the_result</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>  (<a class=\"id\" href=\"#scsi_sense_valid\">scsi_sense_valid</a>(<a class=\"id\" href=\"#sshdr\">sshdr</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#sshdr\">sshdr</a>-><a class=\"id\" href=\"#sense_key\">sense_key</a> == <a class=\"id\" href=\"#UNIT_ATTENTION\">UNIT_ATTENTION</a>)));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#the_result\">the_result</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This function checks to see if the media has been changed in the</span>", 
"<span class=\"comment\"> * CDROM drive.  It is possible that we have already sensed a change,</span>", 
"<span class=\"comment\"> * or the drive may have sensed one and not yet reported it.  We must</span>", 
"<span class=\"comment\"> * be ready for either case. This function always reports the current</span>", 
"<span class=\"comment\"> * value of the changed bit.  If flag is 0, then the changed bit is reset.</span>", 
"<span class=\"comment\"> * This function could be done as an ioctl, but we would need to have</span>", 
"<span class=\"comment\"> * an inode for that to work, and we do not always have one.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#sr_media_change\">sr_media_change</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>, int <a class=\"id\" href=\"#slot\">slot</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_cd\">scsi_cd</a> *<a class=\"id\" href=\"#cd\">cd</a> = <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_sense_hdr\">scsi_sense_hdr</a> *<a class=\"id\" href=\"#sshdr\">sshdr</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#CDSL_CURRENT\">CDSL_CURRENT</a> != <a class=\"id\" href=\"#slot\">slot</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* no changer support */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sshdr\">sshdr</a> =  <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#sshdr\">sshdr</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#sr_test_unit_ready\">sr_test_unit_ready</a>(<a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#device\">device</a>, <a class=\"id\" href=\"#sshdr\">sshdr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> || (<a class=\"id\" href=\"#scsi_sense_valid\">scsi_sense_valid</a>(<a class=\"id\" href=\"#sshdr\">sshdr</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>       <span class=\"comment\">/* 0x3a is medium not present */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#sshdr\">sshdr</a>-><a class=\"id\" href=\"#asc\">asc</a> == 0x3a)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Media not present or unable to test, unit probably not</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * ready. This usually means there is no disc in the drive.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Mark as changed, and we will figure it out later once</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the drive is available again.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#changed\">changed</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* This will force a flush, if called from check_disk_change */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>};", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#changed\">changed</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#changed\">changed</a> = 0;", 
"<span class=\"ts\"/><span class=\"comment\">/* If the disk changed, the capacity will now be different,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so we force a re-read of this information */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* check multisession offset etc */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sr_cd_check\">sr_cd_check</a>(<a class=\"id\" href=\"#cdi\">cdi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_sectorsize\">get_sectorsize</a>(<a class=\"id\" href=\"#cd\">cd</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/* Notify userspace, that media has changed. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> != <a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#previous_state\">previous_state</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sdev_evt_send_simple\">sdev_evt_send_simple</a>(<a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#device\">device</a>, <a class=\"id\" href=\"#SDEV_EVT_MEDIA_CHANGE\">SDEV_EVT_MEDIA_CHANGE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#previous_state\">previous_state</a> = <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sshdr\">sshdr</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
" ", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * sr_done is the interrupt routine for the device driver.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * It will be notified on the end of a SCSI read / write, and will take one</span>", 
"<span class=\"comment\"> * of several actions based on success or failure.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#sr_done\">sr_done</a>(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#SCpnt\">SCpnt</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#this_count\">this_count</a> = <a class=\"id\" href=\"#scsi_bufflen\">scsi_bufflen</a>(<a class=\"id\" href=\"#SCpnt\">SCpnt</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#good_bytes\">good_bytes</a> = (<a class=\"id\" href=\"#result\">result</a> == 0 ? <a class=\"id\" href=\"#this_count\">this_count</a> : 0);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#block_sectors\">block_sectors</a> = 0;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#error_sector\">error_sector</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_cd\">scsi_cd</a> *<a class=\"id\" href=\"#cd\">cd</a> = <a class=\"id\" href=\"#scsi_cd\">scsi_cd</a>(<a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#request\">request</a>-><a class=\"id\" href=\"#rq_disk\">rq_disk</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#DEBUG\">DEBUG</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"sr.c done: %x\\n\", <a class=\"id\" href=\"#result\">result</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Handle MEDIUM ERRORs or VOLUME OVERFLOWs that indicate partial</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * success.  Since this is a relatively rare error condition, no</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * care is taken to avoid unnecessary additional work such as</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * memcpy's that could be avoided.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#driver_byte\">driver_byte</a>(<a class=\"id\" href=\"#result\">result</a>) != 0 &&<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* An error occurred */</span>", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#sense_buffer\">sense_buffer</a>[0] &amp; 0x7f) == 0x70) { <span class=\"comment\">/* Sense current */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#sense_buffer\">sense_buffer</a>[2]) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#MEDIUM_ERROR\">MEDIUM_ERROR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#VOLUME_OVERFLOW\">VOLUME_OVERFLOW</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ILLEGAL_REQUEST\">ILLEGAL_REQUEST</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#sense_buffer\">sense_buffer</a>[0] &amp; 0x90))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error_sector\">error_sector</a> = (<a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#sense_buffer\">sense_buffer</a>[3] << 24) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#sense_buffer\">sense_buffer</a>[4] << 16) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#sense_buffer\">sense_buffer</a>[5] << 8) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#sense_buffer\">sense_buffer</a>[6];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#request\">request</a>-><a class=\"id\" href=\"#bio\">bio</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#block_sectors\">block_sectors</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio_sectors\">bio_sectors</a>(<a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#request\">request</a>-><a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#block_sectors\">block_sectors</a> &lt; 4)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#block_sectors\">block_sectors</a> = 4;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#sector_size\">sector_size</a> == 2048)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error_sector\">error_sector</a> <<= 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error_sector\">error_sector</a> &= ~(<a class=\"id\" href=\"#block_sectors\">block_sectors</a> - 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#good_bytes\">good_bytes</a> = (<a class=\"id\" href=\"#error_sector\">error_sector</a> -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#blk_rq_pos\">blk_rq_pos</a>(<a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#request\">request</a>)) << 9;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#good_bytes\">good_bytes</a> &lt; 0 || <a class=\"id\" href=\"#good_bytes\">good_bytes</a> >= <a class=\"id\" href=\"#this_count\">this_count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#good_bytes\">good_bytes</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * The SCSI specification allows for the value</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * returned by READ CAPACITY to be up to 75 2K</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * sectors past the last readable block.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Therefore, if we hit a medium error within the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * last 75 2K sectors, we decrease the saved size</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * value.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error_sector\">error_sector</a> &lt; <a class=\"id\" href=\"#get_capacity\">get_capacity</a>(<a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#disk\">disk</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#capacity\">capacity</a> - <a class=\"id\" href=\"#error_sector\">error_sector</a> &lt; 4 * 75)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_capacity\">set_capacity</a>(<a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#disk\">disk</a>, <a class=\"id\" href=\"#error_sector\">error_sector</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#RECOVERED_ERROR\">RECOVERED_ERROR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#good_bytes\">good_bytes</a> = <a class=\"id\" href=\"#this_count\">this_count</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#good_bytes\">good_bytes</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#sr_prep_fn\">sr_prep_fn</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#block\">block</a> = 0, <a class=\"id\" href=\"#this_count\">this_count</a>, <a class=\"id\" href=\"#s_size\">s_size</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_cd\">scsi_cd</a> *<a class=\"id\" href=\"#cd\">cd</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#SCpnt\">SCpnt</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdp\">sdp</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queuedata\">queuedata</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_type\">cmd_type</a> == <a class=\"id\" href=\"#REQ_TYPE_BLOCK_PC\">REQ_TYPE_BLOCK_PC</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#scsi_setup_blk_pc_cmnd\">scsi_setup_blk_pc_cmnd</a>(<a class=\"id\" href=\"#sdp\">sdp</a>, <a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_type\">cmd_type</a> != <a class=\"id\" href=\"#REQ_TYPE_FS\">REQ_TYPE_FS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#BLKPREP_KILL\">BLKPREP_KILL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#scsi_setup_fs_cmnd\">scsi_setup_fs_cmnd</a>(<a class=\"id\" href=\"#sdp\">sdp</a>, <a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != <a class=\"id\" href=\"#BLKPREP_OK\">BLKPREP_OK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a> = <a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#special\">special</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a> = <a class=\"id\" href=\"#scsi_cd\">scsi_cd</a>(<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#rq_disk\">rq_disk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* from here on until we're complete, any goto out</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * is used for a killable error condition */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#BLKPREP_KILL\">BLKPREP_KILL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_HLQUEUE\">SCSI_LOG_HLQUEUE</a>(1, <a class=\"id\" href=\"#printk\">printk</a>(\"Doing sr request, dev = %s, block = %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#disk_name\">disk_name</a>, <a class=\"id\" href=\"#block\">block</a>));", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#device\">device</a> || !<a class=\"id\" href=\"#scsi_device_online\">scsi_device_online</a>(<a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#device\">device</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_HLQUEUE\">SCSI_LOG_HLQUEUE</a>(2, <a class=\"id\" href=\"#printk\">printk</a>(\"Finishing %u sectors\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#blk_rq_sectors\">blk_rq_sectors</a>(<a class=\"id\" href=\"#rq\">rq</a>)));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_HLQUEUE\">SCSI_LOG_HLQUEUE</a>(2, <a class=\"id\" href=\"#printk\">printk</a>(\"Retry with 0x%p\\n\", <a class=\"id\" href=\"#SCpnt\">SCpnt</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#changed\">changed</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * quietly refuse to do anything to a changed disc until the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * changed bit has been reset</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we do lazy blocksize switching (when reading XA sectors,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * see CDROMREADMODE2 ioctl) </span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s_size\">s_size</a> = <a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#sector_size\">sector_size</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#s_size\">s_size</a> &gt; 2048) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#in_interrupt\">in_interrupt</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sr_set_blocklength\">sr_set_blocklength</a>(<a class=\"id\" href=\"#cd\">cd</a>, 2048);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"sr: can't switch blocksize: in interrupt\\n\");", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#s_size\">s_size</a> != 512 && <a class=\"id\" href=\"#s_size\">s_size</a> != 1024 && <a class=\"id\" href=\"#s_size\">s_size</a> != 2048) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scmd_printk\">scmd_printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, <a class=\"id\" href=\"#SCpnt\">SCpnt</a>, \"bad sector size %d\\n\", <a class=\"id\" href=\"#s_size\">s_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rq_data_dir\">rq_data_dir</a>(<a class=\"id\" href=\"#rq\">rq</a>) == <a class=\"id\" href=\"#WRITE\">WRITE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#writeable\">writeable</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[0] = <a class=\"id\" href=\"#WRITE_10\">WRITE_10</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#sc_data_direction\">sc_data_direction</a> = <a class=\"id\" href=\"#DMA_TO_DEVICE\">DMA_TO_DEVICE</a>;", 
" <span class=\"ts\"/> <span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>.<a class=\"id\" href=\"#media_written\">media_written</a> = 1;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#rq_data_dir\">rq_data_dir</a>(<a class=\"id\" href=\"#rq\">rq</a>) == <a class=\"id\" href=\"#READ\">READ</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[0] = <a class=\"id\" href=\"#READ_10\">READ_10</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#sc_data_direction\">sc_data_direction</a> = <a class=\"id\" href=\"#DMA_FROM_DEVICE\">DMA_FROM_DEVICE</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_dump_rq_flags\">blk_dump_rq_flags</a>(<a class=\"id\" href=\"#rq\">rq</a>, \"Unknown sr command\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#sg\">sg</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#size\">size</a> = 0, <a class=\"id\" href=\"#sg_count\">sg_count</a> = <a class=\"id\" href=\"#scsi_sg_count\">scsi_sg_count</a>(<a class=\"id\" href=\"#SCpnt\">SCpnt</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsi_for_each_sg\">scsi_for_each_sg</a>(<a class=\"id\" href=\"#SCpnt\">SCpnt</a>, <a class=\"id\" href=\"#sg\">sg</a>, <a class=\"id\" href=\"#sg_count\">sg_count</a>, <a class=\"id\" href=\"#i\">i</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> += <a class=\"id\" href=\"#sg\">sg</a>-><a class=\"id\" href=\"#length\">length</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> != <a class=\"id\" href=\"#scsi_bufflen\">scsi_bufflen</a>(<a class=\"id\" href=\"#SCpnt\">SCpnt</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scmd_printk\">scmd_printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, <a class=\"id\" href=\"#SCpnt\">SCpnt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"mismatch count %d, bytes %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#scsi_bufflen\">scsi_bufflen</a>(<a class=\"id\" href=\"#SCpnt\">SCpnt</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#scsi_bufflen\">scsi_bufflen</a>(<a class=\"id\" href=\"#SCpnt\">SCpnt</a>) &gt; <a class=\"id\" href=\"#size\">size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#sdb\">sdb</a>.<a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * request doesn't start on hw block boundary, add scatter pads</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (((unsigned int)<a class=\"id\" href=\"#blk_rq_pos\">blk_rq_pos</a>(<a class=\"id\" href=\"#rq\">rq</a>) % (<a class=\"id\" href=\"#s_size\">s_size</a> >> 9)) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#scsi_bufflen\">scsi_bufflen</a>(<a class=\"id\" href=\"#SCpnt\">SCpnt</a>) % <a class=\"id\" href=\"#s_size\">s_size</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scmd_printk\">scmd_printk</a>(<a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a>, <a class=\"id\" href=\"#SCpnt\">SCpnt</a>, \"unaligned transfer\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#this_count\">this_count</a> = (<a class=\"id\" href=\"#scsi_bufflen\">scsi_bufflen</a>(<a class=\"id\" href=\"#SCpnt\">SCpnt</a>) >> 9) / (<a class=\"id\" href=\"#s_size\">s_size</a> >> 9);", 
"", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_HLQUEUE\">SCSI_LOG_HLQUEUE</a>(2, <a class=\"id\" href=\"#printk\">printk</a>(\"%s : %s %d/%u 512 byte blocks.\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>.<a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#rq_data_dir\">rq_data_dir</a>(<a class=\"id\" href=\"#rq\">rq</a>) == <a class=\"id\" href=\"#WRITE\">WRITE</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"writing\" : \"reading\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_count\">this_count</a>, <a class=\"id\" href=\"#blk_rq_sectors\">blk_rq_sectors</a>(<a class=\"id\" href=\"#rq\">rq</a>)));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[1] = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#block\">block</a> = (unsigned int)<a class=\"id\" href=\"#blk_rq_pos\">blk_rq_pos</a>(<a class=\"id\" href=\"#rq\">rq</a>) / (<a class=\"id\" href=\"#s_size\">s_size</a> >> 9);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#this_count\">this_count</a> &gt; 0xffff) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_count\">this_count</a> = 0xffff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#sdb\">sdb</a>.<a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#this_count\">this_count</a> * <a class=\"id\" href=\"#s_size\">s_size</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[2] = (unsigned char) (<a class=\"id\" href=\"#block\">block</a> >> 24) &amp; 0xff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[3] = (unsigned char) (<a class=\"id\" href=\"#block\">block</a> >> 16) &amp; 0xff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[4] = (unsigned char) (<a class=\"id\" href=\"#block\">block</a> >> 8) &amp; 0xff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[5] = (unsigned char) <a class=\"id\" href=\"#block\">block</a> &amp; 0xff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[6] = <a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[9] = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[7] = (unsigned char) (<a class=\"id\" href=\"#this_count\">this_count</a> >> 8) &amp; 0xff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[8] = (unsigned char) <a class=\"id\" href=\"#this_count\">this_count</a> &amp; 0xff;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We shouldn't disconnect in the middle of a sector, so with a dumb</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * host adapter, it's safe to assume that we can at least transfer</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * this many bytes between each connect / disconnect.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#transfersize\">transfersize</a> = <a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#sector_size\">sector_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#underflow\">underflow</a> = <a class=\"id\" href=\"#this_count\">this_count</a> << 9;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#allowed\">allowed</a> = <a class=\"id\" href=\"#MAX_RETRIES\">MAX_RETRIES</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This indicates that the command is ready from our end to be</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * queued.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#BLKPREP_OK\">BLKPREP_OK</a>;", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#scsi_prep_return\">scsi_prep_return</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#rq\">rq</a>, <a class=\"id\" href=\"#ret\">ret</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#sr_block_open\">sr_block_open</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#fmode_t\">fmode_t</a> <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_cd\">scsi_cd</a> *<a class=\"id\" href=\"#cd\">cd</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_kernel\">lock_kernel</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a> = <a class=\"id\" href=\"#scsi_cd_get\">scsi_cd_get</a>(<a class=\"id\" href=\"#bdev\">bdev</a>-><a class=\"id\" href=\"#bd_disk\">bd_disk</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cd\">cd</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdrom_open\">cdrom_open</a>(&amp;<a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#mode\">mode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsi_cd_put\">scsi_cd_put</a>(<a class=\"id\" href=\"#cd\">cd</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_kernel\">unlock_kernel</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#sr_block_release\">sr_block_release</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>, <a class=\"id\" href=\"#fmode_t\">fmode_t</a> <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_cd\">scsi_cd</a> *<a class=\"id\" href=\"#cd\">cd</a> = <a class=\"id\" href=\"#scsi_cd\">scsi_cd</a>(<a class=\"id\" href=\"#disk\">disk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_kernel\">lock_kernel</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdrom_release\">cdrom_release</a>(&amp;<a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#mode\">mode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scsi_cd_put\">scsi_cd_put</a>(<a class=\"id\" href=\"#cd\">cd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_kernel\">unlock_kernel</a>();", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#sr_block_ioctl\">sr_block_ioctl</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#fmode_t\">fmode_t</a> <a class=\"id\" href=\"#mode\">mode</a>, unsigned <a class=\"id\" href=\"#cmd\">cmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned long <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_cd\">scsi_cd</a> *<a class=\"id\" href=\"#cd\">cd</a> = <a class=\"id\" href=\"#scsi_cd\">scsi_cd</a>(<a class=\"id\" href=\"#bdev\">bdev</a>-><a class=\"id\" href=\"#bd_disk\">bd_disk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a> = <a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#device\">device</a>;", 
"<span class=\"ts\"/>void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#argp\">argp</a> = (void <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#arg\">arg</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_kernel\">lock_kernel</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Send SCSI addressing ioctls directly to mid level, send other</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ioctls to cdrom/block level.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#cmd\">cmd</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SCSI_IOCTL_GET_IDLUN\">SCSI_IOCTL_GET_IDLUN</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SCSI_IOCTL_GET_BUS_NUMBER\">SCSI_IOCTL_GET_BUS_NUMBER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#scsi_ioctl\">scsi_ioctl</a>(<a class=\"id\" href=\"#sdev\">sdev</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#argp\">argp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cdrom_ioctl\">cdrom_ioctl</a>(&amp;<a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>, <a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ENODEV means that we didn't recognise the ioctl, or that we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * cannot execute it in the current device state.  In either</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * case fall through to scsi_ioctl, which will return ENDOEV again</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * if it doesn't recognise the ioctl</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#scsi_nonblockable_ioctl\">scsi_nonblockable_ioctl</a>(<a class=\"id\" href=\"#sdev\">sdev</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#argp\">argp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#mode\">mode</a> &amp; <a class=\"id\" href=\"#FMODE_NDELAY\">FMODE_NDELAY</a>) != 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#scsi_ioctl\">scsi_ioctl</a>(<a class=\"id\" href=\"#sdev\">sdev</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#argp\">argp</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_kernel\">unlock_kernel</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#sr_block_media_changed\">sr_block_media_changed</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_cd\">scsi_cd</a> *<a class=\"id\" href=\"#cd\">cd</a> = <a class=\"id\" href=\"#scsi_cd\">scsi_cd</a>(<a class=\"id\" href=\"#disk\">disk</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cdrom_media_changed\">cdrom_media_changed</a>(&amp;<a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#block_device_operations\">block_device_operations</a> <a class=\"id\" href=\"#sr_bdops\">sr_bdops</a> =", 
"{", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#sr_block_open\">sr_block_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#sr_block_release\">sr_block_release</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ioctl\">ioctl</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#sr_block_ioctl\">sr_block_ioctl</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#media_changed\">media_changed</a><span class=\"ts\"/>= <a class=\"id\" href=\"#sr_block_media_changed\">sr_block_media_changed</a>,", 
"<span class=\"ts\"/><span class=\"comment\">/* </span>", 
"<span class=\"comment\"><span class=\"ts\"/> * No compat_ioctl for now because sr_block_ioctl never</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * seems to pass arbitary ioctls down to host drivers.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"};", 
"", 
"static int <a class=\"id\" href=\"#sr_open\">sr_open</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>, int <a class=\"id\" href=\"#purpose\">purpose</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_cd\">scsi_cd</a> *<a class=\"id\" href=\"#cd\">cd</a> = <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a> = <a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#device\">device</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the device is in error recovery, wait until it is done.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the device is offline, then disallow any access to it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#scsi_block_when_processing_errors\">scsi_block_when_processing_errors</a>(<a class=\"id\" href=\"#sdev\">sdev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_out\">error_out</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#error_out\">error_out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;<span class=\"ts\"/>", 
"}", 
"", 
"static void <a class=\"id\" href=\"#sr_release\">sr_release</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_cd\">scsi_cd</a> *<a class=\"id\" href=\"#cd\">cd</a> = <a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#handle\">handle</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#sector_size\">sector_size</a> &gt; 2048)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sr_set_blocklength\">sr_set_blocklength</a>(<a class=\"id\" href=\"#cd\">cd</a>, 2048);", 
"", 
"}", 
"", 
"static int <a class=\"id\" href=\"#sr_probe\">sr_probe</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a> = <a class=\"id\" href=\"#to_scsi_device\">to_scsi_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_cd\">scsi_cd</a> *<a class=\"id\" href=\"#cd\">cd</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#minor\">minor</a>, <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#TYPE_ROM\">TYPE_ROM</a> && <a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#TYPE_WORM\">TYPE_WORM</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#cd\">cd</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cd\">cd</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kref_init\">kref_init</a>(&amp;<a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#kref\">kref</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disk\">disk</a> = <a class=\"id\" href=\"#alloc_disk\">alloc_disk</a>(1);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#disk\">disk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail_free\">fail_free</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#sr_index_lock\">sr_index_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#minor\">minor</a> = <a class=\"id\" href=\"#find_first_zero_bit\">find_first_zero_bit</a>(<a class=\"id\" href=\"#sr_index_bits\">sr_index_bits</a>, <a class=\"id\" href=\"#SR_DISKS\">SR_DISKS</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#minor\">minor</a> == <a class=\"id\" href=\"#SR_DISKS\">SR_DISKS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#sr_index_lock\">sr_index_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail_put\">fail_put</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__set_bit\">__set_bit</a>(<a class=\"id\" href=\"#minor\">minor</a>, <a class=\"id\" href=\"#sr_index_bits\">sr_index_bits</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#sr_index_lock\">sr_index_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#major\">major</a> = <a class=\"id\" href=\"#SCSI_CDROM_MAJOR\">SCSI_CDROM_MAJOR</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#first_minor\">first_minor</a> = <a class=\"id\" href=\"#minor\">minor</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#disk_name\">disk_name</a>, \"sr%d\", <a class=\"id\" href=\"#minor\">minor</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#fops\">fops</a> = &amp;<a class=\"id\" href=\"#sr_bdops\">sr_bdops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#GENHD_FL_CD\">GENHD_FL_CD</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_queue_rq_timeout\">blk_queue_rq_timeout</a>(<a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#request_queue\">request_queue</a>, <a class=\"id\" href=\"#SR_TIMEOUT\">SR_TIMEOUT</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#device\">device</a> = <a class=\"id\" href=\"#sdev\">sdev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#disk\">disk</a> = <a class=\"id\" href=\"#disk\">disk</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#driver\">driver</a> = &amp;<a class=\"id\" href=\"#sr_template\">sr_template</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#disk\">disk</a> = <a class=\"id\" href=\"#disk\">disk</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#capacity\">capacity</a> = 0x1fffff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#changed\">changed</a> = 1;<span class=\"ts\"/><span class=\"comment\">/* force recheck CD type */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#previous_state\">previous_state</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#use\">use</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#readcd_known\">readcd_known</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#readcd_cdda\">readcd_cdda</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>.<a class=\"id\" href=\"#ops\">ops</a> = &amp;<a class=\"id\" href=\"#sr_dops\">sr_dops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>.<a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#cd\">cd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>.<a class=\"id\" href=\"#mask\">mask</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>.<a class=\"id\" href=\"#capacity\">capacity</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>.<a class=\"id\" href=\"#name\">name</a>, \"sr%d\", <a class=\"id\" href=\"#minor\">minor</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#sector_size\">sector_size</a> = 2048;<span class=\"ts\"/><span class=\"comment\">/* A guess, just in case */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* FIXME: need to handle a get_capabilities failure properly ?? */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_capabilities\">get_capabilities</a>(<a class=\"id\" href=\"#cd\">cd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_queue_prep_rq\">blk_queue_prep_rq</a>(<a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#request_queue\">request_queue</a>, <a class=\"id\" href=\"#sr_prep_fn\">sr_prep_fn</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sr_vendor_init\">sr_vendor_init</a>(<a class=\"id\" href=\"#cd\">cd</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#driverfs_dev\">driverfs_dev</a> = &amp;<a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#sdev_gendev\">sdev_gendev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_capacity\">set_capacity</a>(<a class=\"id\" href=\"#disk\">disk</a>, <a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#capacity\">capacity</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#private_data\">private_data</a> = &amp;<a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#driver\">driver</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#queue\">queue</a> = <a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#request_queue\">request_queue</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>.<a class=\"id\" href=\"#disk\">disk</a> = <a class=\"id\" href=\"#disk\">disk</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#register_cdrom\">register_cdrom</a>(&amp;<a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail_put\">fail_put</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_set_drvdata\">dev_set_drvdata</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#cd\">cd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#GENHD_FL_REMOVABLE\">GENHD_FL_REMOVABLE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#add_disk\">add_disk</a>(<a class=\"id\" href=\"#disk\">disk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sdev_printk\">sdev_printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a>, <a class=\"id\" href=\"#sdev\">sdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    \"Attached scsi CD-ROM %s\\n\", <a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>.<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#fail_put\">fail_put</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_disk\">put_disk</a>(<a class=\"id\" href=\"#disk\">disk</a>);", 
"<a class=\"id\" href=\"#fail_free\">fail_free</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#cd\">cd</a>);", 
"<a class=\"id\" href=\"#fail\">fail</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"", 
"static void <a class=\"id\" href=\"#get_sectorsize\">get_sectorsize</a>(struct <a class=\"id\" href=\"#scsi_cd\">scsi_cd</a> *<a class=\"id\" href=\"#cd\">cd</a>)", 
"{", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#cmd\">cmd</a>[10];", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#buffer\">buffer</a>[8];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#the_result\">the_result</a>, <a class=\"id\" href=\"#retries\">retries</a> = 3;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#sector_size\">sector_size</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#queue\">queue</a>;", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#READ_CAPACITY\">READ_CAPACITY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>((void *) &amp;<a class=\"id\" href=\"#cmd\">cmd</a>[1], 0, 9);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, 0, sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Do the command and wait.. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#the_result\">the_result</a> = <a class=\"id\" href=\"#scsi_execute_req\">scsi_execute_req</a>(<a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#device\">device</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#DMA_FROM_DEVICE\">DMA_FROM_DEVICE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#buffer\">buffer</a>, sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>), <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#SR_TIMEOUT\">SR_TIMEOUT</a>, <a class=\"id\" href=\"#MAX_RETRIES\">MAX_RETRIES</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retries\">retries</a>--;", 
"", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#the_result\">the_result</a> && <a class=\"id\" href=\"#retries\">retries</a>);", 
"", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#the_result\">the_result</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#capacity\">capacity</a> = 0x1fffff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sector_size\">sector_size</a> = 2048;<span class=\"ts\"/><span class=\"comment\">/* A guess, just in case */</span>", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>long <a class=\"id\" href=\"#last_written\">last_written</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#capacity\">capacity</a> = 1 + ((<a class=\"id\" href=\"#buffer\">buffer</a>[0] << 24) | (<a class=\"id\" href=\"#buffer\">buffer</a>[1] << 16) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#buffer\">buffer</a>[2] << 8) | <a class=\"id\" href=\"#buffer\">buffer</a>[3]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * READ_CAPACITY doesn't return the correct size on</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * certain UDF media.  If last_written is larger, use</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * it instead.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * http://bugzilla.kernel.org/show_bug.cgi?id=9668</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#cdrom_get_last_written\">cdrom_get_last_written</a>(&amp;<a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>, &amp;<a class=\"id\" href=\"#last_written\">last_written</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#capacity\">capacity</a> = <a class=\"id\" href=\"#max_t\">max_t</a>(long, <a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#capacity\">capacity</a>, <a class=\"id\" href=\"#last_written\">last_written</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sector_size\">sector_size</a> = (<a class=\"id\" href=\"#buffer\">buffer</a>[4] << 24) |", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#buffer\">buffer</a>[5] << 16) | (<a class=\"id\" href=\"#buffer\">buffer</a>[6] << 8) | <a class=\"id\" href=\"#buffer\">buffer</a>[7];", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#sector_size\">sector_size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * HP 4020i CD-Recorder reports 2340 byte sectors</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Philips CD-Writers report 2352 byte sectors</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Use 2k sectors for them..</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>case 0:", 
"<span class=\"ts\"/><span class=\"ts\"/>case 2340:", 
"<span class=\"ts\"/><span class=\"ts\"/>case 2352:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sector_size\">sector_size</a> = 2048;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fall through */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>case 2048:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#capacity\">capacity</a> *= 4;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fall through */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>case 512:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"%s: unsupported sector size %d.\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>.<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#sector_size\">sector_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#capacity\">capacity</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#sector_size\">sector_size</a> = <a class=\"id\" href=\"#sector_size\">sector_size</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Add this so that we have the ability to correctly gauge</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * what the device is capable of.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_capacity\">set_capacity</a>(<a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#disk\">disk</a>, <a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#capacity\">capacity</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#queue\">queue</a> = <a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#request_queue\">request_queue</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_queue_logical_block_size\">blk_queue_logical_block_size</a>(<a class=\"id\" href=\"#queue\">queue</a>, <a class=\"id\" href=\"#sector_size\">sector_size</a>);", 
"", 
"<span class=\"ts\"/>return;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#get_capabilities\">get_capabilities</a>(struct <a class=\"id\" href=\"#scsi_cd\">scsi_cd</a> *<a class=\"id\" href=\"#cd\">cd</a>)", 
"{", 
"<span class=\"ts\"/>unsigned char *<a class=\"id\" href=\"#buffer\">buffer</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_mode_data\">scsi_mode_data</a> <a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_sense_hdr\">scsi_sense_hdr</a> <a class=\"id\" href=\"#sshdr\">sshdr</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>, <a class=\"id\" href=\"#n\">n</a>;", 
"", 
"<span class=\"ts\"/>static const char *<a class=\"id\" href=\"#loadmech\">loadmech</a>[] =", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>\"caddy\",", 
"<span class=\"ts\"/><span class=\"ts\"/>\"tray\",", 
"<span class=\"ts\"/><span class=\"ts\"/>\"pop-up\",", 
"<span class=\"ts\"/><span class=\"ts\"/>\"\",", 
"<span class=\"ts\"/><span class=\"ts\"/>\"changer\",", 
"<span class=\"ts\"/><span class=\"ts\"/>\"cartridge changer\",", 
"<span class=\"ts\"/><span class=\"ts\"/>\"\",", 
"<span class=\"ts\"/><span class=\"ts\"/>\"\"", 
"<span class=\"ts\"/>};", 
"", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* allocate transfer buffer */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(512, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a> | <a class=\"id\" href=\"#GFP_DMA\">GFP_DMA</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#buffer\">buffer</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"sr: out of memory.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* eat unit attentions */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sr_test_unit_ready\">sr_test_unit_ready</a>(<a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#device\">device</a>, &amp;<a class=\"id\" href=\"#sshdr\">sshdr</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* ask for mode page 0x2a */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#scsi_mode_sense\">scsi_mode_sense</a>(<a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#device\">device</a>, 0, 0x2a, <a class=\"id\" href=\"#buffer\">buffer</a>, 128,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#SR_TIMEOUT\">SR_TIMEOUT</a>, 3, &amp;<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#scsi_status_is_good\">scsi_status_is_good</a>(<a class=\"id\" href=\"#rc\">rc</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* failed, drive doesn't have capabilities mode page */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>.<a class=\"id\" href=\"#speed\">speed</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>.<a class=\"id\" href=\"#mask\">mask</a> |= (<a class=\"id\" href=\"#CDC_CD_R\">CDC_CD_R</a> | <a class=\"id\" href=\"#CDC_CD_RW\">CDC_CD_RW</a> | <a class=\"id\" href=\"#CDC_DVD_R\">CDC_DVD_R</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#CDC_DVD\">CDC_DVD</a> | <a class=\"id\" href=\"#CDC_DVD_RAM\">CDC_DVD_RAM</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#CDC_SELECT_DISC\">CDC_SELECT_DISC</a> | <a class=\"id\" href=\"#CDC_SELECT_SPEED\">CDC_SELECT_SPEED</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#CDC_MRW\">CDC_MRW</a> | <a class=\"id\" href=\"#CDC_MRW_W\">CDC_MRW_W</a> | <a class=\"id\" href=\"#CDC_RAM\">CDC_RAM</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#buffer\">buffer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"%s: scsi-1 drive\\n\", <a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>.<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#header_length\">header_length</a> + <a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#block_descriptor_length\">block_descriptor_length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>.<a class=\"id\" href=\"#speed\">speed</a> = ((<a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#n\">n</a> + 8] << 8) + <a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#n\">n</a> + 9]) / 176;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#readcd_known\">readcd_known</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#readcd_cdda\">readcd_cdda</a> = <a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#n\">n</a> + 5] &amp; 0x01;", 
"<span class=\"ts\"/><span class=\"comment\">/* print some capability bits */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"%s: scsi3-mmc drive: %dx/%dx %s%s%s%s%s%s\\n\", <a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>.<a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/>       ((<a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#n\">n</a> + 14] << 8) + <a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#n\">n</a> + 15]) / 176,", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>.<a class=\"id\" href=\"#speed\">speed</a>,", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#n\">n</a> + 3] &amp; 0x01 ? \"writer \" : \"\", <span class=\"comment\">/* CD Writer */</span>", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#n\">n</a> + 3] &amp; 0x20 ? \"dvd-ram \" : \"\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#n\">n</a> + 2] &amp; 0x02 ? \"cd/rw \" : \"\", <span class=\"comment\">/* can read rewriteable */</span>", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#n\">n</a> + 4] &amp; 0x20 ? \"xa/form2 \" : \"\",<span class=\"ts\"/><span class=\"comment\">/* can read xa/from2 */</span>", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#n\">n</a> + 5] &amp; 0x01 ? \"cdda \" : \"\", <span class=\"comment\">/* can read audio data */</span>", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#loadmech\">loadmech</a>[<a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#n\">n</a> + 6] >> 5]);", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#n\">n</a> + 6] >> 5) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* caddy drives can't close tray... */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>.<a class=\"id\" href=\"#mask\">mask</a> |= <a class=\"id\" href=\"#CDC_CLOSE_TRAY\">CDC_CLOSE_TRAY</a>;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#n\">n</a> + 2] &amp; 0x8) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* not a DVD drive */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>.<a class=\"id\" href=\"#mask\">mask</a> |= <a class=\"id\" href=\"#CDC_DVD\">CDC_DVD</a>;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#n\">n</a> + 3] &amp; 0x20) == 0) ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* can't write DVD-RAM media */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>.<a class=\"id\" href=\"#mask\">mask</a> |= <a class=\"id\" href=\"#CDC_DVD_RAM\">CDC_DVD_RAM</a>;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#n\">n</a> + 3] &amp; 0x10) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* can't write DVD-R media */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>.<a class=\"id\" href=\"#mask\">mask</a> |= <a class=\"id\" href=\"#CDC_DVD_R\">CDC_DVD_R</a>;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#n\">n</a> + 3] &amp; 0x2) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* can't write CD-RW media */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>.<a class=\"id\" href=\"#mask\">mask</a> |= <a class=\"id\" href=\"#CDC_CD_RW\">CDC_CD_RW</a>;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#n\">n</a> + 3] &amp; 0x1) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* can't write CD-R media */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>.<a class=\"id\" href=\"#mask\">mask</a> |= <a class=\"id\" href=\"#CDC_CD_R\">CDC_CD_R</a>;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#n\">n</a> + 6] &amp; 0x8) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* can't eject */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>.<a class=\"id\" href=\"#mask\">mask</a> |= <a class=\"id\" href=\"#CDC_OPEN_TRAY\">CDC_OPEN_TRAY</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#n\">n</a> + 6] >> 5) == <a class=\"id\" href=\"#mechtype_individual_changer\">mechtype_individual_changer</a> ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#n\">n</a> + 6] >> 5) == <a class=\"id\" href=\"#mechtype_cartridge_changer\">mechtype_cartridge_changer</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>.<a class=\"id\" href=\"#capacity\">capacity</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#cdrom_number_of_slots\">cdrom_number_of_slots</a>(&amp;<a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>.<a class=\"id\" href=\"#capacity\">capacity</a> <= 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* not a changer */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>.<a class=\"id\" href=\"#mask\">mask</a> |= <a class=\"id\" href=\"#CDC_SELECT_DISC\">CDC_SELECT_DISC</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*else    I don't think it can close its tray</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>cd-&gt;cdi.mask |= CDC_CLOSE_TRAY; */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * if DVD-RAM, MRW-W or CD-RW, we are randomly writable</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>.<a class=\"id\" href=\"#mask\">mask</a> &amp; (<a class=\"id\" href=\"#CDC_DVD_RAM\">CDC_DVD_RAM</a> | <a class=\"id\" href=\"#CDC_MRW_W\">CDC_MRW_W</a> | <a class=\"id\" href=\"#CDC_RAM\">CDC_RAM</a> | <a class=\"id\" href=\"#CDC_CD_RW\">CDC_CD_RW</a>)) !=", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#CDC_DVD_RAM\">CDC_DVD_RAM</a> | <a class=\"id\" href=\"#CDC_MRW_W\">CDC_MRW_W</a> | <a class=\"id\" href=\"#CDC_RAM\">CDC_RAM</a> | <a class=\"id\" href=\"#CDC_CD_RW\">CDC_CD_RW</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#writeable\">writeable</a> = 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#buffer\">buffer</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * sr_packet() is the entry point for the generic commands generated</span>", 
"<span class=\"comment\"> * by the Uniform CD-ROM layer. </span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#sr_packet\">sr_packet</a>(struct <a class=\"id\" href=\"#cdrom_device_info\">cdrom_device_info</a> *<a class=\"id\" href=\"#cdi\">cdi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> *<a class=\"id\" href=\"#cgc\">cgc</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#timeout\">timeout</a> <= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#timeout\">timeout</a> = <a class=\"id\" href=\"#IOCTL_TIMEOUT\">IOCTL_TIMEOUT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sr_do_ioctl\">sr_do_ioctl</a>(<a class=\"id\" href=\"#cdi\">cdi</a>-><a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#cgc\">cgc</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#stat\">stat</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>sr_kref_release - Called to free the scsi_cd structure</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@kref: pointer to embedded kref</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>sr_ref_mutex must be held entering this routine.  Because it is</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>called on last put, you should always use the scsi_cd_get()</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>scsi_cd_put() helpers which manipulate the semaphore directly</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>and never do a direct kref_put().</span>", 
"<span class=\"comment\"> **/</span>", 
"static void <a class=\"id\" href=\"#sr_kref_release\">sr_kref_release</a>(struct <a class=\"id\" href=\"#kref\">kref</a> *<a class=\"id\" href=\"#kref\">kref</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_cd\">scsi_cd</a> *<a class=\"id\" href=\"#cd\">cd</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#kref\">kref</a>, struct <a class=\"id\" href=\"#scsi_cd\">scsi_cd</a>, <a class=\"id\" href=\"#kref\">kref</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a> = <a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#disk\">disk</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#sr_index_lock\">sr_index_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#MINOR\">MINOR</a>(<a class=\"id\" href=\"#disk_devt\">disk_devt</a>(<a class=\"id\" href=\"#disk\">disk</a>)), <a class=\"id\" href=\"#sr_index_bits\">sr_index_bits</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#sr_index_lock\">sr_index_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_cdrom\">unregister_cdrom</a>(&amp;<a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#cdi\">cdi</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#private_data\">private_data</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_disk\">put_disk</a>(<a class=\"id\" href=\"#disk\">disk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#cd\">cd</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#sr_remove\">sr_remove</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_cd\">scsi_cd</a> *<a class=\"id\" href=\"#cd\">cd</a> = <a class=\"id\" href=\"#dev_get_drvdata\">dev_get_drvdata</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_queue_prep_rq\">blk_queue_prep_rq</a>(<a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#request_queue\">request_queue</a>, <a class=\"id\" href=\"#scsi_prep_fn\">scsi_prep_fn</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#del_gendisk\">del_gendisk</a>(<a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#disk\">disk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#sr_ref_mutex\">sr_ref_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kref_put\">kref_put</a>(&amp;<a class=\"id\" href=\"#cd\">cd</a>-><a class=\"id\" href=\"#kref\">kref</a>, <a class=\"id\" href=\"#sr_kref_release\">sr_kref_release</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#sr_ref_mutex\">sr_ref_mutex</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#init_sr\">init_sr</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#register_blkdev\">register_blkdev</a>(<a class=\"id\" href=\"#SCSI_CDROM_MAJOR\">SCSI_CDROM_MAJOR</a>, \"sr\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#scsi_register_driver\">scsi_register_driver</a>(&amp;<a class=\"id\" href=\"#sr_template\">sr_template</a>.<a class=\"id\" href=\"#gendrv\">gendrv</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unregister_blkdev\">unregister_blkdev</a>(<a class=\"id\" href=\"#SCSI_CDROM_MAJOR\">SCSI_CDROM_MAJOR</a>, \"sr\");", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__exit\">__exit</a> <a class=\"id\" href=\"#exit_sr\">exit_sr</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scsi_unregister_driver\">scsi_unregister_driver</a>(&amp;<a class=\"id\" href=\"#sr_template\">sr_template</a>.<a class=\"id\" href=\"#gendrv\">gendrv</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_blkdev\">unregister_blkdev</a>(<a class=\"id\" href=\"#SCSI_CDROM_MAJOR\">SCSI_CDROM_MAJOR</a>, \"sr\");", 
"}", 
"", 
"<a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#init_sr\">init_sr</a>);", 
"<a class=\"id\" href=\"#module_exit\">module_exit</a>(<a class=\"id\" href=\"#exit_sr\">exit_sr</a>);", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
];
xr_frag_insert('l/5f/efb53ccc964d3ee12b7adc6ed30a9e2e9c378a.xr', __xr_tmp);
