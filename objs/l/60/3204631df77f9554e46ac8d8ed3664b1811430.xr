var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * net/sched/sch_api.c<span class=\"ts\"/>Packet scheduler API.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Authors:<span class=\"ts\"/>Alexey Kuznetsov, &lt;kuznet@ms2.inr.ac.ru&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Fixes:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Rani Assaf &lt;rani@magic.metawire.com&gt; :980802: JIFFIES and CPU clock sources are repaired.</span>", 
"<span class=\"comment\"> * Eduardo J. Blanco &lt;ejbs@netlabs.com.uy&gt; :990222: kmod support</span>", 
"<span class=\"comment\"> * Jamal Hadi Salim &lt;hadi@nortelnetworks.com&gt;: 990601: ingress support</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#skbuff\">skbuff</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kmod\">kmod</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#hrtimer\">hrtimer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#lockdep\">lockdep</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#net_namespace\">net_namespace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#sock\">sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#netlink\">netlink</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#pkt_sched\">pkt_sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static int <a class=\"id\" href=\"#qdisc_notify\">qdisc_notify</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#oskb\">oskb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#clid\">clid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#old\">old</a>, struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#new\">new</a>);", 
"static int <a class=\"id\" href=\"#tclass_notify\">tclass_notify</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#oskb\">oskb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *<a class=\"id\" href=\"#n\">n</a>, struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#q\">q</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned long <a class=\"id\" href=\"#cl\">cl</a>, int <a class=\"id\" href=\"#event\">event</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   Short review.</span>", 
"<span class=\"comment\">   -------------</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   This file consists of two interrelated parts:</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   1. queueing disciplines manager frontend.</span>", 
"<span class=\"comment\">   2. traffic classes manager frontend.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   Generally, queueing discipline (\"qdisc\") is a black box,</span>", 
"<span class=\"comment\">   which is able to enqueue packets and to dequeue them (when</span>", 
"<span class=\"comment\">   device is ready to send something) in order and at times</span>", 
"<span class=\"comment\">   determined by algorithm hidden in it.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   qdisc's are divided to two categories:</span>", 
"<span class=\"comment\">   - \"queues\", which have no internal structure visible from outside.</span>", 
"<span class=\"comment\">   - \"schedulers\", which split all the packets to \"traffic classes\",</span>", 
"<span class=\"comment\">     using \"packet classifiers\" (look at cls_api.c)</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   In turn, classes may have child qdiscs (as rule, queues)</span>", 
"<span class=\"comment\">   attached to them etc. etc. etc.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   The goal of the routines in this file is to translate</span>", 
"<span class=\"comment\">   information supplied by user in the form of handles</span>", 
"<span class=\"comment\">   to more intelligible for kernel form, to make some sanity</span>", 
"<span class=\"comment\">   checks and part of work, which is common to all qdiscs</span>", 
"<span class=\"comment\">   and to provide rtnetlink notifications.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   All real intelligent work is done inside qdisc modules.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   Every discipline has two major routines: enqueue and dequeue.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   ---dequeue</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   dequeue usually returns a skb to send. It is allowed to return NULL,</span>", 
"<span class=\"comment\">   but it does not mean that queue is empty, it just means that</span>", 
"<span class=\"comment\">   discipline does not want to send anything this time.</span>", 
"<span class=\"comment\">   Queue is really empty if q-&gt;q.qlen == 0.</span>", 
"<span class=\"comment\">   For complicated disciplines with multiple queues q-&gt;q is not</span>", 
"<span class=\"comment\">   real packet queue, but however q-&gt;q.qlen must be valid.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   ---enqueue</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   enqueue returns 0, if packet was enqueued successfully.</span>", 
"<span class=\"comment\">   If packet (this one or another one) was dropped, it returns</span>", 
"<span class=\"comment\">   not zero error code.</span>", 
"<span class=\"comment\">   NET_XMIT_DROP <span class=\"ts\"/>- this packet dropped</span>", 
"<span class=\"comment\">     Expected action: do not backoff, but wait until queue will clear.</span>", 
"<span class=\"comment\">   NET_XMIT_CN<span class=\"ts\"/> <span class=\"ts\"/>- probably this packet enqueued, but another one dropped.</span>", 
"<span class=\"comment\">     Expected action: backoff or ignore</span>", 
"<span class=\"comment\">   NET_XMIT_POLICED<span class=\"ts\"/>- dropped by police.</span>", 
"<span class=\"comment\">     Expected action: backoff or error to real-time apps.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   Auxiliary routines:</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   ---peek</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   like dequeue but without removing a packet from the queue</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   ---reset</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   returns qdisc to initial state: purge all buffers, clear all</span>", 
"<span class=\"comment\">   timers, counters (except for statistics) etc.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   ---init</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   initializes newly created qdisc.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   ---destroy</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   destroys resources allocated by init and during lifetime of qdisc.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   ---change</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   changes qdisc parameters.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/* Protects list of registered TC modules. It is pure SMP lock. */</span>", 
"static <a class=\"id\" href=\"#DEFINE_RWLOCK\">DEFINE_RWLOCK</a>(<a class=\"id\" href=\"#qdisc_mod_lock\">qdisc_mod_lock</a>);", 
"", 
"", 
"<span class=\"comment\">/************************************************</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Queueing disciplines manipulation.<span class=\"ts\"/>*</span>", 
"<span class=\"comment\"> ************************************************/</span>", 
"", 
"", 
"<span class=\"comment\">/* The list of all installed queueing disciplines. */</span>", 
"", 
"static struct <a class=\"id\" href=\"#Qdisc_ops\">Qdisc_ops</a> *<a class=\"id\" href=\"#qdisc_base\">qdisc_base</a>;", 
"", 
"<span class=\"comment\">/* Register/uregister queueing discipline */</span>", 
"", 
"int <a class=\"id\" href=\"#register_qdisc\">register_qdisc</a>(struct <a class=\"id\" href=\"#Qdisc_ops\">Qdisc_ops</a> *<a class=\"id\" href=\"#qops\">qops</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#Qdisc_ops\">Qdisc_ops</a> *<a class=\"id\" href=\"#q\">q</a>, **<a class=\"id\" href=\"#qp\">qp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EEXIST\">EEXIST</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock\">write_lock</a>(&amp;<a class=\"id\" href=\"#qdisc_mod_lock\">qdisc_mod_lock</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#qp\">qp</a> = &amp;<a class=\"id\" href=\"#qdisc_base\">qdisc_base</a>; (<a class=\"id\" href=\"#q\">q</a> = *<a class=\"id\" href=\"#qp\">qp</a>) != <a class=\"id\" href=\"#NULL\">NULL</a>; <a class=\"id\" href=\"#qp\">qp</a> = &amp;<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#next\">next</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#qops\">qops</a>-><a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#id\">id</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#qops\">qops</a>-><a class=\"id\" href=\"#enqueue\">enqueue</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qops\">qops</a>-><a class=\"id\" href=\"#enqueue\">enqueue</a> = <a class=\"id\" href=\"#noop_qdisc_ops\">noop_qdisc_ops</a>.<a class=\"id\" href=\"#enqueue\">enqueue</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#qops\">qops</a>-><a class=\"id\" href=\"#peek\">peek</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#qops\">qops</a>-><a class=\"id\" href=\"#dequeue\">dequeue</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qops\">qops</a>-><a class=\"id\" href=\"#peek\">peek</a> = <a class=\"id\" href=\"#noop_qdisc_ops\">noop_qdisc_ops</a>.<a class=\"id\" href=\"#peek\">peek</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_einval\">out_einval</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#qops\">qops</a>-><a class=\"id\" href=\"#dequeue\">dequeue</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qops\">qops</a>-><a class=\"id\" href=\"#dequeue\">dequeue</a> = <a class=\"id\" href=\"#noop_qdisc_ops\">noop_qdisc_ops</a>.<a class=\"id\" href=\"#dequeue\">dequeue</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#qops\">qops</a>-><a class=\"id\" href=\"#cl_ops\">cl_ops</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#Qdisc_class_ops\">Qdisc_class_ops</a> *<a class=\"id\" href=\"#cops\">cops</a> = <a class=\"id\" href=\"#qops\">qops</a>-><a class=\"id\" href=\"#cl_ops\">cl_ops</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#cops\">cops</a>-><a class=\"id\" href=\"#get\">get</a> && <a class=\"id\" href=\"#cops\">cops</a>-><a class=\"id\" href=\"#put\">put</a> && <a class=\"id\" href=\"#cops\">cops</a>-><a class=\"id\" href=\"#walk\">walk</a> && <a class=\"id\" href=\"#cops\">cops</a>-><a class=\"id\" href=\"#leaf\">leaf</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_einval\">out_einval</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cops\">cops</a>-><a class=\"id\" href=\"#tcf_chain\">tcf_chain</a> && !(<a class=\"id\" href=\"#cops\">cops</a>-><a class=\"id\" href=\"#bind_tcf\">bind_tcf</a> && <a class=\"id\" href=\"#cops\">cops</a>-><a class=\"id\" href=\"#unbind_tcf\">unbind_tcf</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_einval\">out_einval</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qops\">qops</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#qp\">qp</a> = <a class=\"id\" href=\"#qops\">qops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock\">write_unlock</a>(&amp;<a class=\"id\" href=\"#qdisc_mod_lock\">qdisc_mod_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<a class=\"id\" href=\"#out_einval\">out_einval</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#register_qdisc\">register_qdisc</a>);", 
"", 
"int <a class=\"id\" href=\"#unregister_qdisc\">unregister_qdisc</a>(struct <a class=\"id\" href=\"#Qdisc_ops\">Qdisc_ops</a> *<a class=\"id\" href=\"#qops\">qops</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#Qdisc_ops\">Qdisc_ops</a> *<a class=\"id\" href=\"#q\">q</a>, **<a class=\"id\" href=\"#qp\">qp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock\">write_lock</a>(&amp;<a class=\"id\" href=\"#qdisc_mod_lock\">qdisc_mod_lock</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#qp\">qp</a> = &amp;<a class=\"id\" href=\"#qdisc_base\">qdisc_base</a>; (<a class=\"id\" href=\"#q\">q</a>=*<a class=\"id\" href=\"#qp\">qp</a>)!=<a class=\"id\" href=\"#NULL\">NULL</a>; <a class=\"id\" href=\"#qp\">qp</a> = &amp;<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#next\">next</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#q\">q</a> == <a class=\"id\" href=\"#qops\">qops</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#q\">q</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#qp\">qp</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock\">write_unlock</a>(&amp;<a class=\"id\" href=\"#qdisc_mod_lock\">qdisc_mod_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#unregister_qdisc\">unregister_qdisc</a>);", 
"", 
"<span class=\"comment\">/* We know handle. Find qdisc among all qdisc's attached to device</span>", 
"<span class=\"comment\">   (root qdisc, all its children, children of children etc.)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#qdisc_match_from_root\">qdisc_match_from_root</a>(struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#root\">root</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#handle\">handle</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#q\">q</a>;", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TCQ_F_BUILTIN\">TCQ_F_BUILTIN</a>) &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#handle\">handle</a> == <a class=\"id\" href=\"#handle\">handle</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#root\">root</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#q\">q</a>, &amp;<a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#handle\">handle</a> == <a class=\"id\" href=\"#handle\">handle</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#q\">q</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#qdisc_list_add\">qdisc_list_add</a>(struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#parent\">parent</a> != <a class=\"id\" href=\"#TC_H_ROOT\">TC_H_ROOT</a>) && !(<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TCQ_F_INGRESS\">TCQ_F_INGRESS</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#qdisc_dev\">qdisc_dev</a>(<a class=\"id\" href=\"#q\">q</a>)-><a class=\"id\" href=\"#qdisc\">qdisc</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#qdisc_list_del\">qdisc_list_del</a>(struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#parent\">parent</a> != <a class=\"id\" href=\"#TC_H_ROOT\">TC_H_ROOT</a>) && !(<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TCQ_F_INGRESS\">TCQ_F_INGRESS</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#qdisc_list_del\">qdisc_list_del</a>);", 
"", 
"struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#qdisc_lookup\">qdisc_lookup</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#handle\">handle</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#q\">q</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a> = <a class=\"id\" href=\"#qdisc_match_from_root\">qdisc_match_from_root</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#qdisc\">qdisc</a>, <a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#q\">q</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a> = <a class=\"id\" href=\"#qdisc_match_from_root\">qdisc_match_from_root</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#rx_queue\">rx_queue</a>.<a class=\"id\" href=\"#qdisc_sleeping\">qdisc_sleeping</a>, <a class=\"id\" href=\"#handle\">handle</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#q\">q</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#qdisc_leaf\">qdisc_leaf</a>(struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#classid\">classid</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#cl\">cl</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#leaf\">leaf</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#Qdisc_class_ops\">Qdisc_class_ops</a> *<a class=\"id\" href=\"#cops\">cops</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#cl_ops\">cl_ops</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cops\">cops</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cl\">cl</a> = <a class=\"id\" href=\"#cops\">cops</a>-><a class=\"id\" href=\"#get\">get</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#classid\">classid</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cl\">cl</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#leaf\">leaf</a> = <a class=\"id\" href=\"#cops\">cops</a>-><a class=\"id\" href=\"#leaf\">leaf</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#cl\">cl</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cops\">cops</a>-><a class=\"id\" href=\"#put\">put</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#cl\">cl</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#leaf\">leaf</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Find queueing discipline by name */</span>", 
"", 
"static struct <a class=\"id\" href=\"#Qdisc_ops\">Qdisc_ops</a> *<a class=\"id\" href=\"#qdisc_lookup_ops\">qdisc_lookup_ops</a>(struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#kind\">kind</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#Qdisc_ops\">Qdisc_ops</a> *<a class=\"id\" href=\"#q\">q</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#kind\">kind</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#qdisc_mod_lock\">qdisc_mod_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#q\">q</a> = <a class=\"id\" href=\"#qdisc_base\">qdisc_base</a>; <a class=\"id\" href=\"#q\">q</a>; <a class=\"id\" href=\"#q\">q</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nla_strcmp\">nla_strcmp</a>(<a class=\"id\" href=\"#kind\">kind</a>, <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#id\">id</a>) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#try_module_get\">try_module_get</a>(<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#owner\">owner</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#qdisc_mod_lock\">qdisc_mod_lock</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#q\">q</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#qdisc_rate_table\">qdisc_rate_table</a> *<a class=\"id\" href=\"#qdisc_rtab_list\">qdisc_rtab_list</a>;", 
"", 
"struct <a class=\"id\" href=\"#qdisc_rate_table\">qdisc_rate_table</a> *<a class=\"id\" href=\"#qdisc_get_rtab\">qdisc_get_rtab</a>(struct <a class=\"id\" href=\"#tc_ratespec\">tc_ratespec</a> *<a class=\"id\" href=\"#r\">r</a>, struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#tab\">tab</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#qdisc_rate_table\">qdisc_rate_table</a> *<a class=\"id\" href=\"#rtab\">rtab</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#rtab\">rtab</a> = <a class=\"id\" href=\"#qdisc_rtab_list\">qdisc_rtab_list</a>; <a class=\"id\" href=\"#rtab\">rtab</a>; <a class=\"id\" href=\"#rtab\">rtab</a> = <a class=\"id\" href=\"#rtab\">rtab</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#memcmp\">memcmp</a>(&amp;<a class=\"id\" href=\"#rtab\">rtab</a>-><a class=\"id\" href=\"#rate\">rate</a>, <a class=\"id\" href=\"#r\">r</a>, sizeof(struct <a class=\"id\" href=\"#tc_ratespec\">tc_ratespec</a>)) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtab\">rtab</a>-><a class=\"id\" href=\"#refcnt\">refcnt</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rtab\">rtab</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tab\">tab</a> == <a class=\"id\" href=\"#NULL\">NULL</a> || <a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#rate\">rate</a> == 0 || <a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#cell_log\">cell_log</a> == 0 ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#nla_len\">nla_len</a>(<a class=\"id\" href=\"#tab\">tab</a>) != <a class=\"id\" href=\"#TC_RTAB_SIZE\">TC_RTAB_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtab\">rtab</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#rtab\">rtab</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rtab\">rtab</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtab\">rtab</a>-><a class=\"id\" href=\"#rate\">rate</a> = *<a class=\"id\" href=\"#r\">r</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtab\">rtab</a>-><a class=\"id\" href=\"#refcnt\">refcnt</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#rtab\">rtab</a>-><a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#nla_data\">nla_data</a>(<a class=\"id\" href=\"#tab\">tab</a>), 1024);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtab\">rtab</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#qdisc_rtab_list\">qdisc_rtab_list</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qdisc_rtab_list\">qdisc_rtab_list</a> = <a class=\"id\" href=\"#rtab\">rtab</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rtab\">rtab</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#qdisc_get_rtab\">qdisc_get_rtab</a>);", 
"", 
"void <a class=\"id\" href=\"#qdisc_put_rtab\">qdisc_put_rtab</a>(struct <a class=\"id\" href=\"#qdisc_rate_table\">qdisc_rate_table</a> *<a class=\"id\" href=\"#tab\">tab</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#qdisc_rate_table\">qdisc_rate_table</a> *<a class=\"id\" href=\"#rtab\">rtab</a>, **<a class=\"id\" href=\"#rtabp\">rtabp</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tab\">tab</a> || --<a class=\"id\" href=\"#tab\">tab</a>-><a class=\"id\" href=\"#refcnt\">refcnt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#rtabp\">rtabp</a> = &amp;<a class=\"id\" href=\"#qdisc_rtab_list\">qdisc_rtab_list</a>; (<a class=\"id\" href=\"#rtab\">rtab</a>=*<a class=\"id\" href=\"#rtabp\">rtabp</a>) != <a class=\"id\" href=\"#NULL\">NULL</a>; <a class=\"id\" href=\"#rtabp\">rtabp</a> = &amp;<a class=\"id\" href=\"#rtab\">rtab</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rtab\">rtab</a> == <a class=\"id\" href=\"#tab\">tab</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#rtabp\">rtabp</a> = <a class=\"id\" href=\"#rtab\">rtab</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#rtab\">rtab</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#qdisc_put_rtab\">qdisc_put_rtab</a>);", 
"", 
"static <a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#qdisc_stab_list\">qdisc_stab_list</a>);", 
"static <a class=\"id\" href=\"#DEFINE_SPINLOCK\">DEFINE_SPINLOCK</a>(<a class=\"id\" href=\"#qdisc_stab_lock\">qdisc_stab_lock</a>);", 
"", 
"static const struct <a class=\"id\" href=\"#nla_policy\">nla_policy</a> <a class=\"id\" href=\"#stab_policy\">stab_policy</a>[<a class=\"id\" href=\"#TCA_STAB_MAX\">TCA_STAB_MAX</a> + 1] = {", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#TCA_STAB_BASE\">TCA_STAB_BASE</a>]<span class=\"ts\"/>= { .<a class=\"id\" href=\"#len\">len</a> = sizeof(struct <a class=\"id\" href=\"#tc_sizespec\">tc_sizespec</a>) },", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#TCA_STAB_DATA\">TCA_STAB_DATA</a>] = { .<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#NLA_BINARY\">NLA_BINARY</a> },", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#qdisc_size_table\">qdisc_size_table</a> *<a class=\"id\" href=\"#qdisc_get_stab\">qdisc_get_stab</a>(struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#opt\">opt</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#tb\">tb</a>[<a class=\"id\" href=\"#TCA_STAB_MAX\">TCA_STAB_MAX</a> + 1];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#qdisc_size_table\">qdisc_size_table</a> *<a class=\"id\" href=\"#stab\">stab</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tc_sizespec\">tc_sizespec</a> *<a class=\"id\" href=\"#s\">s</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#tsize\">tsize</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> *<a class=\"id\" href=\"#tab\">tab</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#nla_parse_nested\">nla_parse_nested</a>(<a class=\"id\" href=\"#tb\">tb</a>, <a class=\"id\" href=\"#TCA_STAB_MAX\">TCA_STAB_MAX</a>, <a class=\"id\" href=\"#opt\">opt</a>, <a class=\"id\" href=\"#stab_policy\">stab_policy</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tb\">tb</a>[<a class=\"id\" href=\"#TCA_STAB_BASE\">TCA_STAB_BASE</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EINVAL\">EINVAL</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a> = <a class=\"id\" href=\"#nla_data\">nla_data</a>(<a class=\"id\" href=\"#tb\">tb</a>[<a class=\"id\" href=\"#TCA_STAB_BASE\">TCA_STAB_BASE</a>]);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#tsize\">tsize</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tb\">tb</a>[<a class=\"id\" href=\"#TCA_STAB_DATA\">TCA_STAB_DATA</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EINVAL\">EINVAL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tab\">tab</a> = <a class=\"id\" href=\"#nla_data\">nla_data</a>(<a class=\"id\" href=\"#tb\">tb</a>[<a class=\"id\" href=\"#TCA_STAB_DATA\">TCA_STAB_DATA</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tsize\">tsize</a> = <a class=\"id\" href=\"#nla_len\">nla_len</a>(<a class=\"id\" href=\"#tb\">tb</a>[<a class=\"id\" href=\"#TCA_STAB_DATA\">TCA_STAB_DATA</a>]) / sizeof(<a class=\"id\" href=\"#u16\">u16</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#s\">s</a> || <a class=\"id\" href=\"#tsize\">tsize</a> != <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#tsize\">tsize</a> || (!<a class=\"id\" href=\"#tab\">tab</a> && <a class=\"id\" href=\"#tsize\">tsize</a> &gt; 0))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EINVAL\">EINVAL</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#qdisc_stab_lock\">qdisc_stab_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#stab\">stab</a>, &amp;<a class=\"id\" href=\"#qdisc_stab_list\">qdisc_stab_list</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#memcmp\">memcmp</a>(&amp;<a class=\"id\" href=\"#stab\">stab</a>-><a class=\"id\" href=\"#szopts\">szopts</a>, <a class=\"id\" href=\"#s\">s</a>, sizeof(*<a class=\"id\" href=\"#s\">s</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tsize\">tsize</a> &gt; 0 && <a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#stab\">stab</a>-><a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#tab\">tab</a>, <a class=\"id\" href=\"#tsize\">tsize</a> * sizeof(<a class=\"id\" href=\"#u16\">u16</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stab\">stab</a>-><a class=\"id\" href=\"#refcnt\">refcnt</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#qdisc_stab_lock\">qdisc_stab_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#stab\">stab</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#qdisc_stab_lock\">qdisc_stab_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stab\">stab</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#stab\">stab</a>) + <a class=\"id\" href=\"#tsize\">tsize</a> * sizeof(<a class=\"id\" href=\"#u16\">u16</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#stab\">stab</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stab\">stab</a>-><a class=\"id\" href=\"#refcnt\">refcnt</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stab\">stab</a>-><a class=\"id\" href=\"#szopts\">szopts</a> = *<a class=\"id\" href=\"#s\">s</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tsize\">tsize</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#stab\">stab</a>-><a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#tab\">tab</a>, <a class=\"id\" href=\"#tsize\">tsize</a> * sizeof(<a class=\"id\" href=\"#u16\">u16</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#qdisc_stab_lock\">qdisc_stab_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#stab\">stab</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#qdisc_stab_list\">qdisc_stab_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#qdisc_stab_lock\">qdisc_stab_lock</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#stab\">stab</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#qdisc_put_stab\">qdisc_put_stab</a>(struct <a class=\"id\" href=\"#qdisc_size_table\">qdisc_size_table</a> *<a class=\"id\" href=\"#tab\">tab</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tab\">tab</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#qdisc_stab_lock\">qdisc_stab_lock</a>);", 
"", 
"<span class=\"ts\"/>if (--<a class=\"id\" href=\"#tab\">tab</a>-><a class=\"id\" href=\"#refcnt\">refcnt</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#tab\">tab</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#tab\">tab</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#qdisc_stab_lock\">qdisc_stab_lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#qdisc_put_stab\">qdisc_put_stab</a>);", 
"", 
"static int <a class=\"id\" href=\"#qdisc_dump_stab\">qdisc_dump_stab</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#qdisc_size_table\">qdisc_size_table</a> *<a class=\"id\" href=\"#stab\">stab</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#nest\">nest</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nest\">nest</a> = <a class=\"id\" href=\"#nla_nest_start\">nla_nest_start</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#TCA_STAB\">TCA_STAB</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nest\">nest</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#nla_put_failure\">nla_put_failure</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NLA_PUT\">NLA_PUT</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#TCA_STAB_BASE\">TCA_STAB_BASE</a>, sizeof(<a class=\"id\" href=\"#stab\">stab</a>-><a class=\"id\" href=\"#szopts\">szopts</a>), &amp;<a class=\"id\" href=\"#stab\">stab</a>-><a class=\"id\" href=\"#szopts\">szopts</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nla_nest_end\">nla_nest_end</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#nest\">nest</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<a class=\"id\" href=\"#nla_put_failure\">nla_put_failure</a>:", 
"<span class=\"ts\"/>return -1;", 
"}", 
"", 
"void <a class=\"id\" href=\"#qdisc_calculate_pkt_len\">qdisc_calculate_pkt_len</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#qdisc_size_table\">qdisc_size_table</a> *<a class=\"id\" href=\"#stab\">stab</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#pkt_len\">pkt_len</a>, <a class=\"id\" href=\"#slot\">slot</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt_len\">pkt_len</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> + <a class=\"id\" href=\"#stab\">stab</a>-><a class=\"id\" href=\"#szopts\">szopts</a>.<a class=\"id\" href=\"#overhead\">overhead</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#stab\">stab</a>-><a class=\"id\" href=\"#szopts\">szopts</a>.<a class=\"id\" href=\"#tsize\">tsize</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#slot\">slot</a> = <a class=\"id\" href=\"#pkt_len\">pkt_len</a> + <a class=\"id\" href=\"#stab\">stab</a>-><a class=\"id\" href=\"#szopts\">szopts</a>.<a class=\"id\" href=\"#cell_align\">cell_align</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#slot\">slot</a> &lt; 0))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#slot\">slot</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#slot\">slot</a> >>= <a class=\"id\" href=\"#stab\">stab</a>-><a class=\"id\" href=\"#szopts\">szopts</a>.<a class=\"id\" href=\"#cell_log\">cell_log</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#slot\">slot</a> &lt; <a class=\"id\" href=\"#stab\">stab</a>-><a class=\"id\" href=\"#szopts\">szopts</a>.<a class=\"id\" href=\"#tsize\">tsize</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_len\">pkt_len</a> = <a class=\"id\" href=\"#stab\">stab</a>-><a class=\"id\" href=\"#data\">data</a>[<a class=\"id\" href=\"#slot\">slot</a>];", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_len\">pkt_len</a> = <a class=\"id\" href=\"#stab\">stab</a>-><a class=\"id\" href=\"#data\">data</a>[<a class=\"id\" href=\"#stab\">stab</a>-><a class=\"id\" href=\"#szopts\">szopts</a>.<a class=\"id\" href=\"#tsize\">tsize</a> - 1] *", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#slot\">slot</a> / <a class=\"id\" href=\"#stab\">stab</a>-><a class=\"id\" href=\"#szopts\">szopts</a>.<a class=\"id\" href=\"#tsize\">tsize</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stab\">stab</a>-><a class=\"id\" href=\"#data\">data</a>[<a class=\"id\" href=\"#slot\">slot</a> % <a class=\"id\" href=\"#stab\">stab</a>-><a class=\"id\" href=\"#szopts\">szopts</a>.<a class=\"id\" href=\"#tsize\">tsize</a>];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt_len\">pkt_len</a> <<= <a class=\"id\" href=\"#stab\">stab</a>-><a class=\"id\" href=\"#szopts\">szopts</a>.<a class=\"id\" href=\"#size_log\">size_log</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#pkt_len\">pkt_len</a> &lt; 1))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_len\">pkt_len</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qdisc_skb_cb\">qdisc_skb_cb</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#pkt_len\">pkt_len</a> = <a class=\"id\" href=\"#pkt_len\">pkt_len</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#qdisc_calculate_pkt_len\">qdisc_calculate_pkt_len</a>);", 
"", 
"void <a class=\"id\" href=\"#qdisc_warn_nonwc\">qdisc_warn_nonwc</a>(char *<a class=\"id\" href=\"#txt\">txt</a>, struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#qdisc\">qdisc</a>)", 
"{", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#qdisc\">qdisc</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TCQ_F_WARN_NONWC\">TCQ_F_WARN_NONWC</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"%s: %s qdisc %X: is non-work-conserving?\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#txt\">txt</a>, <a class=\"id\" href=\"#qdisc\">qdisc</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#qdisc\">qdisc</a>-><a class=\"id\" href=\"#handle\">handle</a> >> 16);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qdisc\">qdisc</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#TCQ_F_WARN_NONWC\">TCQ_F_WARN_NONWC</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#qdisc_warn_nonwc\">qdisc_warn_nonwc</a>);", 
"", 
"static enum <a class=\"id\" href=\"#hrtimer_restart\">hrtimer_restart</a> <a class=\"id\" href=\"#qdisc_watchdog\">qdisc_watchdog</a>(struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#qdisc_watchdog\">qdisc_watchdog</a> *<a class=\"id\" href=\"#wd\">wd</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#timer\">timer</a>, struct <a class=\"id\" href=\"#qdisc_watchdog\">qdisc_watchdog</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#timer\">timer</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wd\">wd</a>-><a class=\"id\" href=\"#qdisc\">qdisc</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#TCQ_F_THROTTLED\">TCQ_F_THROTTLED</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__netif_schedule\">__netif_schedule</a>(<a class=\"id\" href=\"#qdisc_root\">qdisc_root</a>(<a class=\"id\" href=\"#wd\">wd</a>-><a class=\"id\" href=\"#qdisc\">qdisc</a>));", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#HRTIMER_NORESTART\">HRTIMER_NORESTART</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#qdisc_watchdog_init\">qdisc_watchdog_init</a>(struct <a class=\"id\" href=\"#qdisc_watchdog\">qdisc_watchdog</a> *<a class=\"id\" href=\"#wd\">wd</a>, struct <a class=\"id\" href=\"#Qdisc\">Qdisc</a> *<a class=\"id\" href=\"#qdisc\">qdisc</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hrtimer_init\">hrtimer_init</a>(&amp;<a class=\"id\" href=\"#wd\">wd</a>-><a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#CLOCK_MONOTONIC\">CLOCK_MONOTONIC</a>, <a class=\"id\" href=\"#HRTIMER_MODE_ABS\">HRTIMER_MODE_ABS</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wd\">wd</a>-><a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#function\">function</a> = <a class=\"id\" href=\"#qdisc_watchdog\">qdisc_watchdog</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wd\">wd</a>-><a class=\"id\" href=\"#qdisc\">qdisc</a> = <a class=\"id\" href=\"#qdisc\">qdisc</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#qdisc_watchdog_init\">qdisc_watchdog_init</a>);", 
"", 
"void <a class=\"id\" href=\"#qdisc_watchdog_schedule\">qdisc_watchdog_schedule</a>(struct <a class=\"id\" href=\"#qdisc_watchdog\">qdisc_watchdog</a> *<a class=\"id\" href=\"#wd\">wd</a>, <a class=\"id\" href=\"#psched_time_t\">psched_time_t</a> <a class=\"id\" href=\"#expires\">expires</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#time\">time</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#__QDISC_STATE_DEACTIVATED\">__QDISC_STATE_DEACTIVATED</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     &amp;<a class=\"id\" href=\"#qdisc_root_sleeping\">qdisc_root_sleeping</a>(<a class=\"id\" href=\"#wd\">wd</a>-><a class=\"id\" href=\"#qdisc\">qdisc</a>)-><a class=\"id\" href=\"#state\">state</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wd\">wd</a>-><a class=\"id\" href=\"#qdisc\">qdisc</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#TCQ_F_THROTTLED\">TCQ_F_THROTTLED</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#time\">time</a> = <a class=\"id\" href=\"#ktime_set\">ktime_set</a>(0, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#time\">time</a> = <a class=\"id\" href=\"#ktime_add_ns\">ktime_add_ns</a>(<a class=\"id\" href=\"#time\">time</a>, <a class=\"id\" href=\"#PSCHED_TICKS2NS\">PSCHED_TICKS2NS</a>(<a class=\"id\" href=\"#expires\">expires</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hrtimer_start\">hrtimer_start</a>(&amp;<a class=\"id\" href=\"#wd\">wd</a>-><a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#time\">time</a>, <a class=\"id\" href=\"#HRTIMER_MODE_ABS\">HRTIMER_MODE_ABS</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#qdisc_watchdog_schedule\">qdisc_watchdog_schedule</a>);", 
"", 
"void <a class=\"id\" href=\"#qdisc_watchdog_cancel\">qdisc_watchdog_cancel</a>(struct <a class=\"id\" href=\"#qdisc_watchdog\">qdisc_watchdog</a> *<a class=\"id\" href=\"#wd\">wd</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hrtimer_cancel\">hrtimer_cancel</a>(&amp;<a class=\"id\" href=\"#wd\">wd</a>-><a class=\"id\" href=\"#timer\">timer</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wd\">wd</a>-><a class=\"id\" href=\"#qdisc\">qdisc</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#TCQ_F_THROTTLED\">TCQ_F_THROTTLED</a>;", 
"}", 
];
xr_frag_insert('l/60/3204631df77f9554e46ac8d8ed3664b1811430.xr', __xr_tmp);
