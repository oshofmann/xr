var __xr_tmp = [
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Stop upper layers calling the device hard_start_xmit routine.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Used for flow control when transmit resources are unavailable.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#netif_stop_queue\">netif_stop_queue</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netif_tx_stop_queue\">netif_tx_stop_queue</a>(<a class=\"id\" href=\"#netdev_get_tx_queue\">netdev_get_tx_queue</a>(<a class=\"id\" href=\"#dev\">dev</a>, 0));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#netif_tx_stop_all_queues\">netif_tx_stop_all_queues</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#num_tx_queues\">num_tx_queues</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#netdev_queue\">netdev_queue</a> *<a class=\"id\" href=\"#txq\">txq</a> = <a class=\"id\" href=\"#netdev_get_tx_queue\">netdev_get_tx_queue</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netif_tx_stop_queue\">netif_tx_stop_queue</a>(<a class=\"id\" href=\"#txq\">txq</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#netif_tx_queue_stopped\">netif_tx_queue_stopped</a>(const struct <a class=\"id\" href=\"#netdev_queue\">netdev_queue</a> *<a class=\"id\" href=\"#dev_queue\">dev_queue</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#__QUEUE_STATE_XOFF\">__QUEUE_STATE_XOFF</a>, &amp;<a class=\"id\" href=\"#dev_queue\">dev_queue</a>-><a class=\"id\" href=\"#state\">state</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>netif_queue_stopped - test if transmit queue is flowblocked</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@dev: network device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Test if transmit queue on device is currently unable to send.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#netif_queue_stopped\">netif_queue_stopped</a>(const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#netif_tx_queue_stopped\">netif_tx_queue_stopped</a>(<a class=\"id\" href=\"#netdev_get_tx_queue\">netdev_get_tx_queue</a>(<a class=\"id\" href=\"#dev\">dev</a>, 0));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#netif_tx_queue_frozen\">netif_tx_queue_frozen</a>(const struct <a class=\"id\" href=\"#netdev_queue\">netdev_queue</a> *<a class=\"id\" href=\"#dev_queue\">dev_queue</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#__QUEUE_STATE_FROZEN\">__QUEUE_STATE_FROZEN</a>, &amp;<a class=\"id\" href=\"#dev_queue\">dev_queue</a>-><a class=\"id\" href=\"#state\">state</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>netif_running - test if up</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@dev: network device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Test if the device has been brought up.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#netif_running\">netif_running</a>(const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#__LINK_STATE_START\">__LINK_STATE_START</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#state\">state</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Routines to manage the subqueues on a device.  We only need start</span>", 
"<span class=\"comment\"> * stop, and a check if it's stopped.  All other device management is</span>", 
"<span class=\"comment\"> * done at the overall netdevice level.</span>", 
"<span class=\"comment\"> * Also test the device if we're multiqueue.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>netif_start_subqueue - allow sending packets on subqueue</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@dev: network device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@queue_index: sub queue index</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Start individual transmit queue of a device with multiple transmit queues.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#netif_start_subqueue\">netif_start_subqueue</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#queue_index\">queue_index</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netdev_queue\">netdev_queue</a> *<a class=\"id\" href=\"#txq\">txq</a> = <a class=\"id\" href=\"#netdev_get_tx_queue\">netdev_get_tx_queue</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#queue_index\">queue_index</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netif_tx_start_queue\">netif_tx_start_queue</a>(<a class=\"id\" href=\"#txq\">txq</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>netif_stop_subqueue - stop sending packets on subqueue</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@dev: network device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@queue_index: sub queue index</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Stop individual transmit queue of a device with multiple transmit queues.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#netif_stop_subqueue\">netif_stop_subqueue</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#queue_index\">queue_index</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netdev_queue\">netdev_queue</a> *<a class=\"id\" href=\"#txq\">txq</a> = <a class=\"id\" href=\"#netdev_get_tx_queue\">netdev_get_tx_queue</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#queue_index\">queue_index</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NETPOLL_TRAP\">CONFIG_NETPOLL_TRAP</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#netpoll_trap\">netpoll_trap</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netif_tx_stop_queue\">netif_tx_stop_queue</a>(<a class=\"id\" href=\"#txq\">txq</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>netif_subqueue_stopped - test status of subqueue</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@dev: network device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@queue_index: sub queue index</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Check individual transmit queue of a device with multiple transmit queues.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#__netif_subqueue_stopped\">__netif_subqueue_stopped</a>(const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#queue_index\">queue_index</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netdev_queue\">netdev_queue</a> *<a class=\"id\" href=\"#txq\">txq</a> = <a class=\"id\" href=\"#netdev_get_tx_queue\">netdev_get_tx_queue</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#queue_index\">queue_index</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#netif_tx_queue_stopped\">netif_tx_queue_stopped</a>(<a class=\"id\" href=\"#txq\">txq</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#netif_subqueue_stopped\">netif_subqueue_stopped</a>(const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__netif_subqueue_stopped\">__netif_subqueue_stopped</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#skb_get_queue_mapping\">skb_get_queue_mapping</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>netif_wake_subqueue - allow sending packets on subqueue</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@dev: network device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@queue_index: sub queue index</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Resume individual transmit queue of a device with multiple transmit queues.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#netif_wake_subqueue\">netif_wake_subqueue</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#queue_index\">queue_index</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netdev_queue\">netdev_queue</a> *<a class=\"id\" href=\"#txq\">txq</a> = <a class=\"id\" href=\"#netdev_get_tx_queue\">netdev_get_tx_queue</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#queue_index\">queue_index</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NETPOLL_TRAP\">CONFIG_NETPOLL_TRAP</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#netpoll_trap\">netpoll_trap</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_and_clear_bit\">test_and_clear_bit</a>(<a class=\"id\" href=\"#__QUEUE_STATE_XOFF\">__QUEUE_STATE_XOFF</a>, &amp;<a class=\"id\" href=\"#txq\">txq</a>-><a class=\"id\" href=\"#state\">state</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__netif_schedule\">__netif_schedule</a>(<a class=\"id\" href=\"#txq\">txq</a>-><a class=\"id\" href=\"#qdisc\">qdisc</a>);", 
"}", 
"", 
];
xr_frag_insert('l/60/ee460839acc0fe223022388d92780aebffcbfd.xr', __xr_tmp);
