var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  linux/fs/ext4/super.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 1992, 1993, 1994, 1995</span>", 
"<span class=\"comment\"> * Remy Card (card@masi.ibp.fr)</span>", 
"<span class=\"comment\"> * Laboratoire MASI - Institut Blaise Pascal</span>", 
"<span class=\"comment\"> * Universite Pierre et Marie Curie (Paris VI)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  from</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  linux/fs/minix/inode.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 1991, 1992  Linus Torvalds</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Big-endian to little-endian byte-swapping/bitmaps by</span>", 
"<span class=\"comment\"> *        David S. Miller (davem@caip.rutgers.edu), 1995</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#vmalloc\">vmalloc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jbd2\">jbd2</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blkdev\">blkdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#parser\">parser</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#smp_lock\">smp_lock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#buffer_head\">buffer_head</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#exportfs\">exportfs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#vfs\">vfs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#random\">random</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mount\">mount</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#namei\">namei</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#quotaops\">quotaops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ctype\">ctype</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#log2\">log2</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#crc16\">crc16</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"ext4.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"ext4_jbd2.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"xattr.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"acl.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"mballoc.h\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CREATE_TRACE_POINTS\">CREATE_TRACE_POINTS</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#trace\">trace</a>/<a class=\"id\" href=\"#events\">events</a>/<a class=\"id\" href=\"#ext4\">ext4</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#proc_dir_entry\">proc_dir_entry</a> *<a class=\"id\" href=\"#ext4_proc_root\">ext4_proc_root</a>;", 
"static struct <a class=\"id\" href=\"#kset\">kset</a> *<a class=\"id\" href=\"#ext4_kset\">ext4_kset</a>;", 
"", 
"static int <a class=\"id\" href=\"#ext4_load_journal\">ext4_load_journal</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *, struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned long <a class=\"id\" href=\"#journal_devnum\">journal_devnum</a>);", 
"static int <a class=\"id\" href=\"#ext4_commit_super\">ext4_commit_super</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#sync\">sync</a>);", 
"static void <a class=\"id\" href=\"#ext4_mark_recovery_complete\">ext4_mark_recovery_complete</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a> *<a class=\"id\" href=\"#es\">es</a>);", 
"static void <a class=\"id\" href=\"#ext4_clear_journal_err\">ext4_clear_journal_err</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a> *<a class=\"id\" href=\"#es\">es</a>);", 
"static int <a class=\"id\" href=\"#ext4_sync_fs\">ext4_sync_fs</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#wait\">wait</a>);", 
"static const char *<a class=\"id\" href=\"#ext4_decode_error\">ext4_decode_error</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#errno\">errno</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     char <a class=\"id\" href=\"#nbuf\">nbuf</a>[16]);", 
"static int <a class=\"id\" href=\"#ext4_remount\">ext4_remount</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int *<a class=\"id\" href=\"#flags\">flags</a>, char *<a class=\"id\" href=\"#data\">data</a>);", 
"static int <a class=\"id\" href=\"#ext4_statfs\">ext4_statfs</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, struct <a class=\"id\" href=\"#kstatfs\">kstatfs</a> *<a class=\"id\" href=\"#buf\">buf</a>);", 
"static int <a class=\"id\" href=\"#ext4_unfreeze\">ext4_unfreeze</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>);", 
"static void <a class=\"id\" href=\"#ext4_write_super\">ext4_write_super</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>);", 
"static int <a class=\"id\" href=\"#ext4_freeze\">ext4_freeze</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>);", 
"static int <a class=\"id\" href=\"#ext4_get_sb\">ext4_get_sb</a>(struct <a class=\"id\" href=\"#file_system_type\">file_system_type</a> *<a class=\"id\" href=\"#fs_type\">fs_type</a>, int <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       const char *<a class=\"id\" href=\"#dev_name\">dev_name</a>, void *<a class=\"id\" href=\"#data\">data</a>, struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#mnt\">mnt</a>);", 
"", 
"#if !<a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_EXT3_FS\">CONFIG_EXT3_FS</a>) && !<a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_EXT3_FS_MODULE\">CONFIG_EXT3_FS_MODULE</a>) && <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_EXT4_USE_FOR_EXT23\">CONFIG_EXT4_USE_FOR_EXT23</a>)", 
"static struct <a class=\"id\" href=\"#file_system_type\">file_system_type</a> <a class=\"id\" href=\"#ext3_fs_type\">ext3_fs_type</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= \"ext3\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#get_sb\">get_sb</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_get_sb\">ext4_get_sb</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#kill_sb\">kill_sb</a><span class=\"ts\"/>= <a class=\"id\" href=\"#kill_block_super\">kill_block_super</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#fs_flags\">fs_flags</a><span class=\"ts\"/>= <a class=\"id\" href=\"#FS_REQUIRES_DEV\">FS_REQUIRES_DEV</a>,", 
"};", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IS_EXT3_SB\">IS_EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>) ((<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>-><a class=\"id\" href=\"#bd_holder\">bd_holder</a> == &amp;<a class=\"id\" href=\"#ext3_fs_type\">ext3_fs_type</a>)", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IS_EXT3_SB\">IS_EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>) (0)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#ext4_block_bitmap\">ext4_block_bitmap</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#bg\">bg</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#bg\">bg</a>-><a class=\"id\" href=\"#bg_block_bitmap_lo\">bg_block_bitmap_lo</a>) |", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#EXT4_DESC_SIZE\">EXT4_DESC_SIZE</a>(<a class=\"id\" href=\"#sb\">sb</a>) >= <a class=\"id\" href=\"#EXT4_MIN_DESC_SIZE_64BIT\">EXT4_MIN_DESC_SIZE_64BIT</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/> (<a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a>)<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#bg\">bg</a>-><a class=\"id\" href=\"#bg_block_bitmap_hi\">bg_block_bitmap_hi</a>) << 32 : 0);", 
"}", 
"", 
"<a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#ext4_inode_bitmap\">ext4_inode_bitmap</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#bg\">bg</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#bg\">bg</a>-><a class=\"id\" href=\"#bg_inode_bitmap_lo\">bg_inode_bitmap_lo</a>) |", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#EXT4_DESC_SIZE\">EXT4_DESC_SIZE</a>(<a class=\"id\" href=\"#sb\">sb</a>) >= <a class=\"id\" href=\"#EXT4_MIN_DESC_SIZE_64BIT\">EXT4_MIN_DESC_SIZE_64BIT</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/> (<a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a>)<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#bg\">bg</a>-><a class=\"id\" href=\"#bg_inode_bitmap_hi\">bg_inode_bitmap_hi</a>) << 32 : 0);", 
"}", 
"", 
"<a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#ext4_inode_table\">ext4_inode_table</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#bg\">bg</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#bg\">bg</a>-><a class=\"id\" href=\"#bg_inode_table_lo\">bg_inode_table_lo</a>) |", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#EXT4_DESC_SIZE\">EXT4_DESC_SIZE</a>(<a class=\"id\" href=\"#sb\">sb</a>) >= <a class=\"id\" href=\"#EXT4_MIN_DESC_SIZE_64BIT\">EXT4_MIN_DESC_SIZE_64BIT</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/> (<a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a>)<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#bg\">bg</a>-><a class=\"id\" href=\"#bg_inode_table_hi\">bg_inode_table_hi</a>) << 32 : 0);", 
"}", 
"", 
"<a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#ext4_free_blks_count\">ext4_free_blks_count</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#bg\">bg</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#bg\">bg</a>-><a class=\"id\" href=\"#bg_free_blocks_count_lo\">bg_free_blocks_count_lo</a>) |", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#EXT4_DESC_SIZE\">EXT4_DESC_SIZE</a>(<a class=\"id\" href=\"#sb\">sb</a>) >= <a class=\"id\" href=\"#EXT4_MIN_DESC_SIZE_64BIT\">EXT4_MIN_DESC_SIZE_64BIT</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/> (<a class=\"id\" href=\"#__u32\">__u32</a>)<a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#bg\">bg</a>-><a class=\"id\" href=\"#bg_free_blocks_count_hi\">bg_free_blocks_count_hi</a>) << 16 : 0);", 
"}", 
"", 
"<a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#ext4_free_inodes_count\">ext4_free_inodes_count</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#bg\">bg</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#bg\">bg</a>-><a class=\"id\" href=\"#bg_free_inodes_count_lo\">bg_free_inodes_count_lo</a>) |", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#EXT4_DESC_SIZE\">EXT4_DESC_SIZE</a>(<a class=\"id\" href=\"#sb\">sb</a>) >= <a class=\"id\" href=\"#EXT4_MIN_DESC_SIZE_64BIT\">EXT4_MIN_DESC_SIZE_64BIT</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/> (<a class=\"id\" href=\"#__u32\">__u32</a>)<a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#bg\">bg</a>-><a class=\"id\" href=\"#bg_free_inodes_count_hi\">bg_free_inodes_count_hi</a>) << 16 : 0);", 
"}", 
"", 
"<a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#ext4_used_dirs_count\">ext4_used_dirs_count</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#bg\">bg</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#bg\">bg</a>-><a class=\"id\" href=\"#bg_used_dirs_count_lo\">bg_used_dirs_count_lo</a>) |", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#EXT4_DESC_SIZE\">EXT4_DESC_SIZE</a>(<a class=\"id\" href=\"#sb\">sb</a>) >= <a class=\"id\" href=\"#EXT4_MIN_DESC_SIZE_64BIT\">EXT4_MIN_DESC_SIZE_64BIT</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/> (<a class=\"id\" href=\"#__u32\">__u32</a>)<a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#bg\">bg</a>-><a class=\"id\" href=\"#bg_used_dirs_count_hi\">bg_used_dirs_count_hi</a>) << 16 : 0);", 
"}", 
"", 
"<a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#ext4_itable_unused_count\">ext4_itable_unused_count</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#bg\">bg</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#bg\">bg</a>-><a class=\"id\" href=\"#bg_itable_unused_lo\">bg_itable_unused_lo</a>) |", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#EXT4_DESC_SIZE\">EXT4_DESC_SIZE</a>(<a class=\"id\" href=\"#sb\">sb</a>) >= <a class=\"id\" href=\"#EXT4_MIN_DESC_SIZE_64BIT\">EXT4_MIN_DESC_SIZE_64BIT</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/> (<a class=\"id\" href=\"#__u32\">__u32</a>)<a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#bg\">bg</a>-><a class=\"id\" href=\"#bg_itable_unused_hi\">bg_itable_unused_hi</a>) << 16 : 0);", 
"}", 
"", 
"void <a class=\"id\" href=\"#ext4_block_bitmap_set\">ext4_block_bitmap_set</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#bg\">bg</a>, <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#blk\">blk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bg\">bg</a>-><a class=\"id\" href=\"#bg_block_bitmap_lo\">bg_block_bitmap_lo</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>((<a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#blk\">blk</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_DESC_SIZE\">EXT4_DESC_SIZE</a>(<a class=\"id\" href=\"#sb\">sb</a>) >= <a class=\"id\" href=\"#EXT4_MIN_DESC_SIZE_64BIT\">EXT4_MIN_DESC_SIZE_64BIT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bg\">bg</a>-><a class=\"id\" href=\"#bg_block_bitmap_hi\">bg_block_bitmap_hi</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#blk\">blk</a> >> 32);", 
"}", 
"", 
"void <a class=\"id\" href=\"#ext4_inode_bitmap_set\">ext4_inode_bitmap_set</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#bg\">bg</a>, <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#blk\">blk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bg\">bg</a>-><a class=\"id\" href=\"#bg_inode_bitmap_lo\">bg_inode_bitmap_lo</a>  = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>((<a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#blk\">blk</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_DESC_SIZE\">EXT4_DESC_SIZE</a>(<a class=\"id\" href=\"#sb\">sb</a>) >= <a class=\"id\" href=\"#EXT4_MIN_DESC_SIZE_64BIT\">EXT4_MIN_DESC_SIZE_64BIT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bg\">bg</a>-><a class=\"id\" href=\"#bg_inode_bitmap_hi\">bg_inode_bitmap_hi</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#blk\">blk</a> >> 32);", 
"}", 
"", 
"void <a class=\"id\" href=\"#ext4_inode_table_set\">ext4_inode_table_set</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#bg\">bg</a>, <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#blk\">blk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bg\">bg</a>-><a class=\"id\" href=\"#bg_inode_table_lo\">bg_inode_table_lo</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>((<a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#blk\">blk</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_DESC_SIZE\">EXT4_DESC_SIZE</a>(<a class=\"id\" href=\"#sb\">sb</a>) >= <a class=\"id\" href=\"#EXT4_MIN_DESC_SIZE_64BIT\">EXT4_MIN_DESC_SIZE_64BIT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bg\">bg</a>-><a class=\"id\" href=\"#bg_inode_table_hi\">bg_inode_table_hi</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#blk\">blk</a> >> 32);", 
"}", 
"", 
"void <a class=\"id\" href=\"#ext4_free_blks_set\">ext4_free_blks_set</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#bg\">bg</a>, <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bg\">bg</a>-><a class=\"id\" href=\"#bg_free_blocks_count_lo\">bg_free_blocks_count_lo</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>((<a class=\"id\" href=\"#__u16\">__u16</a>)<a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_DESC_SIZE\">EXT4_DESC_SIZE</a>(<a class=\"id\" href=\"#sb\">sb</a>) >= <a class=\"id\" href=\"#EXT4_MIN_DESC_SIZE_64BIT\">EXT4_MIN_DESC_SIZE_64BIT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bg\">bg</a>-><a class=\"id\" href=\"#bg_free_blocks_count_hi\">bg_free_blocks_count_hi</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#count\">count</a> >> 16);", 
"}", 
"", 
"void <a class=\"id\" href=\"#ext4_free_inodes_set\">ext4_free_inodes_set</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#bg\">bg</a>, <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bg\">bg</a>-><a class=\"id\" href=\"#bg_free_inodes_count_lo\">bg_free_inodes_count_lo</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>((<a class=\"id\" href=\"#__u16\">__u16</a>)<a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_DESC_SIZE\">EXT4_DESC_SIZE</a>(<a class=\"id\" href=\"#sb\">sb</a>) >= <a class=\"id\" href=\"#EXT4_MIN_DESC_SIZE_64BIT\">EXT4_MIN_DESC_SIZE_64BIT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bg\">bg</a>-><a class=\"id\" href=\"#bg_free_inodes_count_hi\">bg_free_inodes_count_hi</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#count\">count</a> >> 16);", 
"}", 
"", 
"void <a class=\"id\" href=\"#ext4_used_dirs_set\">ext4_used_dirs_set</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#bg\">bg</a>, <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bg\">bg</a>-><a class=\"id\" href=\"#bg_used_dirs_count_lo\">bg_used_dirs_count_lo</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>((<a class=\"id\" href=\"#__u16\">__u16</a>)<a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_DESC_SIZE\">EXT4_DESC_SIZE</a>(<a class=\"id\" href=\"#sb\">sb</a>) >= <a class=\"id\" href=\"#EXT4_MIN_DESC_SIZE_64BIT\">EXT4_MIN_DESC_SIZE_64BIT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bg\">bg</a>-><a class=\"id\" href=\"#bg_used_dirs_count_hi\">bg_used_dirs_count_hi</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#count\">count</a> >> 16);", 
"}", 
"", 
"void <a class=\"id\" href=\"#ext4_itable_unused_set\">ext4_itable_unused_set</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#bg\">bg</a>, <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bg\">bg</a>-><a class=\"id\" href=\"#bg_itable_unused_lo\">bg_itable_unused_lo</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>((<a class=\"id\" href=\"#__u16\">__u16</a>)<a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_DESC_SIZE\">EXT4_DESC_SIZE</a>(<a class=\"id\" href=\"#sb\">sb</a>) >= <a class=\"id\" href=\"#EXT4_MIN_DESC_SIZE_64BIT\">EXT4_MIN_DESC_SIZE_64BIT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bg\">bg</a>-><a class=\"id\" href=\"#bg_itable_unused_hi\">bg_itable_unused_hi</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#count\">count</a> >> 16);", 
"}", 
"", 
"", 
"<span class=\"comment\">/* Just increment the non-pointer handle value */</span>", 
"static <a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#ext4_get_nojournal\">ext4_get_nojournal</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#journal_info\">journal_info</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#ref_cnt\">ref_cnt</a> = (unsigned long)<a class=\"id\" href=\"#handle\">handle</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#ref_cnt\">ref_cnt</a> >= <a class=\"id\" href=\"#EXT4_NOJOURNAL_MAX_REF_COUNT\">EXT4_NOJOURNAL_MAX_REF_COUNT</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ref_cnt\">ref_cnt</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a> = (<a class=\"id\" href=\"#handle_t\">handle_t</a> *)<a class=\"id\" href=\"#ref_cnt\">ref_cnt</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#journal_info\">journal_info</a> = <a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#handle\">handle</a>;", 
"}", 
"", 
"", 
"<span class=\"comment\">/* Decrement the non-pointer handle value */</span>", 
"static void <a class=\"id\" href=\"#ext4_put_nojournal\">ext4_put_nojournal</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#ref_cnt\">ref_cnt</a> = (unsigned long)<a class=\"id\" href=\"#handle\">handle</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#ref_cnt\">ref_cnt</a> == 0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ref_cnt\">ref_cnt</a>--;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a> = (<a class=\"id\" href=\"#handle_t\">handle_t</a> *)<a class=\"id\" href=\"#ref_cnt\">ref_cnt</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#journal_info\">journal_info</a> = <a class=\"id\" href=\"#handle\">handle</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Wrappers for jbd2_journal_start/end.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The only special thing we need to do here is to make sure that all</span>", 
"<span class=\"comment\"> * journal_end calls result in the superblock being marked dirty, so</span>", 
"<span class=\"comment\"> * that sync() will call the filesystem's write_super callback if</span>", 
"<span class=\"comment\"> * appropriate.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#ext4_journal_start_sb\">ext4_journal_start_sb</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#nblocks\">nblocks</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EROFS\">EROFS</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vfs_check_frozen\">vfs_check_frozen</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#SB_FREEZE_TRANS\">SB_FREEZE_TRANS</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Special case here: if the journal has aborted behind our</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * backs (eg. EIO in the commit thread), then we still need to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * take the FS itself readonly cleanly. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#is_journal_aborted\">is_journal_aborted</a>(<a class=\"id\" href=\"#journal\">journal</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_abort\">ext4_abort</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"Detected aborted journal\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EROFS\">EROFS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#jbd2_journal_start\">jbd2_journal_start</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#nblocks\">nblocks</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ext4_get_nojournal\">ext4_get_nojournal</a>();", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The only special thing we need to do here is to make sure that all</span>", 
"<span class=\"comment\"> * jbd2_journal_stop calls result in the superblock being marked dirty, so</span>", 
"<span class=\"comment\"> * that sync() will call the filesystem's write_super callback if</span>", 
"<span class=\"comment\"> * appropriate.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#__ext4_journal_stop\">__ext4_journal_stop</a>(const char *<a class=\"id\" href=\"#where\">where</a>, unsigned int <a class=\"id\" href=\"#line\">line</a>, <a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ext4_handle_valid\">ext4_handle_valid</a>(<a class=\"id\" href=\"#handle\">handle</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_put_nojournal\">ext4_put_nojournal</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#h_transaction\">h_transaction</a>-><a class=\"id\" href=\"#t_journal\">t_journal</a>-><a class=\"id\" href=\"#j_private\">j_private</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#h_err\">h_err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#jbd2_journal_stop\">jbd2_journal_stop</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__ext4_std_error\">__ext4_std_error</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#where\">where</a>, <a class=\"id\" href=\"#line\">line</a>, <a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#ext4_journal_abort_handle\">ext4_journal_abort_handle</a>(const char *<a class=\"id\" href=\"#caller\">caller</a>, unsigned int <a class=\"id\" href=\"#line\">line</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       const char *<a class=\"id\" href=\"#err_fn\">err_fn</a>, struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, int <a class=\"id\" href=\"#err\">err</a>)", 
"{", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#nbuf\">nbuf</a>[16];", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#errstr\">errstr</a> = <a class=\"id\" href=\"#ext4_decode_error\">ext4_decode_error</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#err\">err</a>, <a class=\"id\" href=\"#nbuf\">nbuf</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#ext4_handle_valid\">ext4_handle_valid</a>(<a class=\"id\" href=\"#handle\">handle</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bh\">bh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUFFER_TRACE\">BUFFER_TRACE</a>(<a class=\"id\" href=\"#bh\">bh</a>, \"abort\");", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#h_err\">h_err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#h_err\">h_err</a> = <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_handle_aborted\">is_handle_aborted</a>(<a class=\"id\" href=\"#handle\">handle</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s:%d: aborting transaction: %s in %s\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#caller\">caller</a>, <a class=\"id\" href=\"#line\">line</a>, <a class=\"id\" href=\"#errstr\">errstr</a>, <a class=\"id\" href=\"#err_fn\">err_fn</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_abort_handle\">jbd2_journal_abort_handle</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__save_error_info\">__save_error_info</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, const char *<a class=\"id\" href=\"#func\">func</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    unsigned int <a class=\"id\" href=\"#line\">line</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a> *<a class=\"id\" href=\"#es\">es</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_mount_state\">s_mount_state</a> |= <a class=\"id\" href=\"#EXT4_ERROR_FS\">EXT4_ERROR_FS</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_state\">s_state</a> |= <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#EXT4_ERROR_FS\">EXT4_ERROR_FS</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_last_error_time\">s_last_error_time</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#get_seconds\">get_seconds</a>());", 
"<span class=\"ts\"/><a class=\"id\" href=\"#strncpy\">strncpy</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_last_error_func\">s_last_error_func</a>, <a class=\"id\" href=\"#func\">func</a>, sizeof(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_last_error_func\">s_last_error_func</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_last_error_line\">s_last_error_line</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#line\">line</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_first_error_time\">s_first_error_time</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_first_error_time\">s_first_error_time</a> = <a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_last_error_time\">s_last_error_time</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strncpy\">strncpy</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_first_error_func\">s_first_error_func</a>, <a class=\"id\" href=\"#func\">func</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sizeof(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_first_error_func\">s_first_error_func</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_first_error_line\">s_first_error_line</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#line\">line</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_first_error_ino\">s_first_error_ino</a> = <a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_last_error_ino\">s_last_error_ino</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_first_error_block\">s_first_error_block</a> = <a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_last_error_block\">s_last_error_block</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Start the daily error reporting function if it hasn't been</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * started already</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_error_count\">s_error_count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mod_timer\">mod_timer</a>(&amp;<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_err_report\">s_err_report</a>, <a class=\"id\" href=\"#jiffies\">jiffies</a> + 24*60*60*<a class=\"id\" href=\"#HZ\">HZ</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_error_count\">s_error_count</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_error_count\">s_error_count</a>) + 1);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#save_error_info\">save_error_info</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, const char *<a class=\"id\" href=\"#func\">func</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    unsigned int <a class=\"id\" href=\"#line\">line</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__save_error_info\">__save_error_info</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#func\">func</a>, <a class=\"id\" href=\"#line\">line</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_commit_super\">ext4_commit_super</a>(<a class=\"id\" href=\"#sb\">sb</a>, 1);", 
"}", 
"", 
"", 
"<span class=\"comment\">/* Deal with the reporting of failure conditions on a filesystem such as</span>", 
"<span class=\"comment\"> * inconsistencies detected or read IO failures.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * On ext2, we can store the error state of the filesystem in the</span>", 
"<span class=\"comment\"> * superblock.  That is not possible on ext4, because we may have other</span>", 
"<span class=\"comment\"> * write ordering constraints on the superblock which prevent us from</span>", 
"<span class=\"comment\"> * writing it out straight away; and given that the journal is about to</span>", 
"<span class=\"comment\"> * be aborted, we can't rely on the current, or future, transactions to</span>", 
"<span class=\"comment\"> * write out the superblock safely.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We'll just use the jbd2_journal_abort() error code to record an error in</span>", 
"<span class=\"comment\"> * the journal instead.  On recovery, the journal will complain about</span>", 
"<span class=\"comment\"> * that error until we've noted it down and cleared it.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#ext4_handle_error\">ext4_handle_error</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#ERRORS_CONT\">ERRORS_CONT</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_mount_flags\">s_mount_flags</a> |= <a class=\"id\" href=\"#EXT4_MF_FS_ABORTED\">EXT4_MF_FS_ABORTED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_abort\">jbd2_journal_abort</a>(<a class=\"id\" href=\"#journal\">journal</a>, -<a class=\"id\" href=\"#EIO\">EIO</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#ERRORS_RO\">ERRORS_RO</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_CRIT\">KERN_CRIT</a>, \"Remounting filesystem read-only\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> |= <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#ERRORS_PANIC\">ERRORS_PANIC</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"EXT4-fs (device %s): panic forced after error\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_id\">s_id</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#__ext4_error\">__ext4_error</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, const char *<a class=\"id\" href=\"#function\">function</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  unsigned int <a class=\"id\" href=\"#line\">line</a>, const char *<a class=\"id\" href=\"#fmt\">fmt</a>, ...)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_list\">va_list</a> <a class=\"id\" href=\"#args\">args</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_start\">va_start</a>(<a class=\"id\" href=\"#args\">args</a>, <a class=\"id\" href=\"#fmt\">fmt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CRIT\">KERN_CRIT</a> \"EXT4-fs error (device %s): %s:%d: comm %s: \",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_id\">s_id</a>, <a class=\"id\" href=\"#function\">function</a>, <a class=\"id\" href=\"#line\">line</a>, <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#comm\">comm</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vprintk\">vprintk</a>(<a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#args\">args</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_end\">va_end</a>(<a class=\"id\" href=\"#args\">args</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_handle_error\">ext4_handle_error</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#ext4_error_inode\">ext4_error_inode</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, const char *<a class=\"id\" href=\"#function\">function</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      unsigned int <a class=\"id\" href=\"#line\">line</a>, <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#block\">block</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      const char *<a class=\"id\" href=\"#fmt\">fmt</a>, ...)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_list\">va_list</a> <a class=\"id\" href=\"#args\">args</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a> *<a class=\"id\" href=\"#es\">es</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_last_error_ino\">s_last_error_ino</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_last_error_block\">s_last_error_block</a> = <a class=\"id\" href=\"#cpu_to_le64\">cpu_to_le64</a>(<a class=\"id\" href=\"#block\">block</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#save_error_info\">save_error_info</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#function\">function</a>, <a class=\"id\" href=\"#line\">line</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_start\">va_start</a>(<a class=\"id\" href=\"#args\">args</a>, <a class=\"id\" href=\"#fmt\">fmt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CRIT\">KERN_CRIT</a> \"EXT4-fs error (device %s): %s:%d: inode #%lu: \",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_id\">s_id</a>, <a class=\"id\" href=\"#function\">function</a>, <a class=\"id\" href=\"#line\">line</a>, <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#block\">block</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"block %llu: \", <a class=\"id\" href=\"#block\">block</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"comm %s: \", <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#comm\">comm</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vprintk\">vprintk</a>(<a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#args\">args</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_end\">va_end</a>(<a class=\"id\" href=\"#args\">args</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_handle_error\">ext4_handle_error</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#ext4_error_file\">ext4_error_file</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, const char *<a class=\"id\" href=\"#function\">function</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     unsigned int <a class=\"id\" href=\"#line\">line</a>, const char *<a class=\"id\" href=\"#fmt\">fmt</a>, ...)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_list\">va_list</a> <a class=\"id\" href=\"#args\">args</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a> *<a class=\"id\" href=\"#es\">es</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_dentry\">f_dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#pathname\">pathname</a>[80], *<a class=\"id\" href=\"#path\">path</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_last_error_ino\">s_last_error_ino</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#save_error_info\">save_error_info</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#function\">function</a>, <a class=\"id\" href=\"#line\">line</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_start\">va_start</a>(<a class=\"id\" href=\"#args\">args</a>, <a class=\"id\" href=\"#fmt\">fmt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a> = <a class=\"id\" href=\"#d_path\">d_path</a>(&amp;(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>), <a class=\"id\" href=\"#pathname\">pathname</a>, sizeof(<a class=\"id\" href=\"#pathname\">pathname</a>));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#path\">path</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a> = \"(unknown)\";", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CRIT\">KERN_CRIT</a>", 
"<span class=\"ts\"/>       \"EXT4-fs error (device %s): %s:%d: inode #%lu \"", 
"<span class=\"ts\"/>       \"(comm %s path %s): \",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_id\">s_id</a>, <a class=\"id\" href=\"#function\">function</a>, <a class=\"id\" href=\"#line\">line</a>, <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>,", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#comm\">comm</a>, <a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vprintk\">vprintk</a>(<a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#args\">args</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_end\">va_end</a>(<a class=\"id\" href=\"#args\">args</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_handle_error\">ext4_handle_error</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>);", 
"}", 
"", 
"static const char *<a class=\"id\" href=\"#ext4_decode_error\">ext4_decode_error</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#errno\">errno</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     char <a class=\"id\" href=\"#nbuf\">nbuf</a>[16])", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#errstr\">errstr</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#errno\">errno</a>) {", 
"<span class=\"ts\"/>case -<a class=\"id\" href=\"#EIO\">EIO</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#errstr\">errstr</a> = \"IO failure\";", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#errstr\">errstr</a> = \"Out of memory\";", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case -<a class=\"id\" href=\"#EROFS\">EROFS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#sb\">sb</a> || (<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a>-><a class=\"id\" href=\"#j_flags\">j_flags</a> &amp; <a class=\"id\" href=\"#JBD2_ABORT\">JBD2_ABORT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#errstr\">errstr</a> = \"Journal has aborted\";", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#errstr\">errstr</a> = \"Readonly filesystem\";", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If the caller passed in an extra buffer for unknown</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * errors, textualise them now.  Else we just return</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * NULL. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nbuf\">nbuf</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Check for truncated error codes... */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#nbuf\">nbuf</a>, 16, \"error %d\", -<a class=\"id\" href=\"#errno\">errno</a>) >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#errstr\">errstr</a> = <a class=\"id\" href=\"#nbuf\">nbuf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#errstr\">errstr</a>;", 
"}", 
"", 
"<span class=\"comment\">/* __ext4_std_error decodes expected errors from journaling functions</span>", 
"<span class=\"comment\"> * automatically and invokes the appropriate error response.  */</span>", 
"", 
"void <a class=\"id\" href=\"#__ext4_std_error\">__ext4_std_error</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, const char *<a class=\"id\" href=\"#function\">function</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      unsigned int <a class=\"id\" href=\"#line\">line</a>, int <a class=\"id\" href=\"#errno\">errno</a>)", 
"{", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#nbuf\">nbuf</a>[16];", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#errstr\">errstr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Special case: if the error is EROFS, and we're not already</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * inside a transaction, then there's really no point in logging</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * an error. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#errno\">errno</a> == -<a class=\"id\" href=\"#EROFS\">EROFS</a> && <a class=\"id\" href=\"#journal_current_handle\">journal_current_handle</a>() == <a class=\"id\" href=\"#NULL\">NULL</a> &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#errstr\">errstr</a> = <a class=\"id\" href=\"#ext4_decode_error\">ext4_decode_error</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#errno\">errno</a>, <a class=\"id\" href=\"#nbuf\">nbuf</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CRIT\">KERN_CRIT</a> \"EXT4-fs error (device %s) in %s:%d: %s\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_id\">s_id</a>, <a class=\"id\" href=\"#function\">function</a>, <a class=\"id\" href=\"#line\">line</a>, <a class=\"id\" href=\"#errstr\">errstr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#save_error_info\">save_error_info</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#function\">function</a>, <a class=\"id\" href=\"#line\">line</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_handle_error\">ext4_handle_error</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext4_abort is a much stronger failure handler than ext4_error.  The</span>", 
"<span class=\"comment\"> * abort function may be used to deal with unrecoverable failures such</span>", 
"<span class=\"comment\"> * as journal IO errors or ENOMEM at a critical moment in log management.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We unconditionally force the filesystem into an ABORT|READONLY state,</span>", 
"<span class=\"comment\"> * unless the error response on the fs has been set to panic in which</span>", 
"<span class=\"comment\"> * case we take the easy way out and panic immediately.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#__ext4_abort\">__ext4_abort</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, const char *<a class=\"id\" href=\"#function\">function</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#line\">line</a>, const char *<a class=\"id\" href=\"#fmt\">fmt</a>, ...)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_list\">va_list</a> <a class=\"id\" href=\"#args\">args</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#save_error_info\">save_error_info</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#function\">function</a>, <a class=\"id\" href=\"#line\">line</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_start\">va_start</a>(<a class=\"id\" href=\"#args\">args</a>, <a class=\"id\" href=\"#fmt\">fmt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CRIT\">KERN_CRIT</a> \"EXT4-fs error (device %s): %s:%d: \", <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_id\">s_id</a>,", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#function\">function</a>, <a class=\"id\" href=\"#line\">line</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vprintk\">vprintk</a>(<a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#args\">args</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_end\">va_end</a>(<a class=\"id\" href=\"#args\">args</a>);", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_CRIT\">KERN_CRIT</a>, \"Remounting filesystem read-only\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> |= <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_mount_flags\">s_mount_flags</a> |= <a class=\"id\" href=\"#EXT4_MF_FS_ABORTED\">EXT4_MF_FS_ABORTED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_abort\">jbd2_journal_abort</a>(<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a>, -<a class=\"id\" href=\"#EIO\">EIO</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#save_error_info\">save_error_info</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#function\">function</a>, <a class=\"id\" href=\"#line\">line</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#ERRORS_PANIC\">ERRORS_PANIC</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"EXT4-fs panic from previous error\\n\");", 
"}", 
"", 
"void <a class=\"id\" href=\"#ext4_msg\">ext4_msg</a> (struct <a class=\"id\" href=\"#super_block\">super_block</a> * <a class=\"id\" href=\"#sb\">sb</a>, const char *<a class=\"id\" href=\"#prefix\">prefix</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   const char *<a class=\"id\" href=\"#fmt\">fmt</a>, ...)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_list\">va_list</a> <a class=\"id\" href=\"#args\">args</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_start\">va_start</a>(<a class=\"id\" href=\"#args\">args</a>, <a class=\"id\" href=\"#fmt\">fmt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"%sEXT4-fs (%s): \", <a class=\"id\" href=\"#prefix\">prefix</a>, <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_id\">s_id</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vprintk\">vprintk</a>(<a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#args\">args</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_end\">va_end</a>(<a class=\"id\" href=\"#args\">args</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#__ext4_warning\">__ext4_warning</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, const char *<a class=\"id\" href=\"#function\">function</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    unsigned int <a class=\"id\" href=\"#line\">line</a>, const char *<a class=\"id\" href=\"#fmt\">fmt</a>, ...)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_list\">va_list</a> <a class=\"id\" href=\"#args\">args</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_start\">va_start</a>(<a class=\"id\" href=\"#args\">args</a>, <a class=\"id\" href=\"#fmt\">fmt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"EXT4-fs warning (device %s): %s:%d: \",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_id\">s_id</a>, <a class=\"id\" href=\"#function\">function</a>, <a class=\"id\" href=\"#line\">line</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vprintk\">vprintk</a>(<a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#args\">args</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_end\">va_end</a>(<a class=\"id\" href=\"#args\">args</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#__ext4_grp_locked_error\">__ext4_grp_locked_error</a>(const char *<a class=\"id\" href=\"#function\">function</a>, unsigned int <a class=\"id\" href=\"#line\">line</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#grp\">grp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned long <a class=\"id\" href=\"#ino\">ino</a>, <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#block\">block</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     const char *<a class=\"id\" href=\"#fmt\">fmt</a>, ...)", 
"<a class=\"id\" href=\"#__releases\">__releases</a>(<a class=\"id\" href=\"#bitlock\">bitlock</a>)", 
"<a class=\"id\" href=\"#__acquires\">__acquires</a>(<a class=\"id\" href=\"#bitlock\">bitlock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_list\">va_list</a> <a class=\"id\" href=\"#args\">args</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a> *<a class=\"id\" href=\"#es\">es</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_last_error_ino\">s_last_error_ino</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#ino\">ino</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_last_error_block\">s_last_error_block</a> = <a class=\"id\" href=\"#cpu_to_le64\">cpu_to_le64</a>(<a class=\"id\" href=\"#block\">block</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__save_error_info\">__save_error_info</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#function\">function</a>, <a class=\"id\" href=\"#line\">line</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_start\">va_start</a>(<a class=\"id\" href=\"#args\">args</a>, <a class=\"id\" href=\"#fmt\">fmt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CRIT\">KERN_CRIT</a> \"EXT4-fs error (device %s): %s:%d: group %u\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_id\">s_id</a>, <a class=\"id\" href=\"#function\">function</a>, <a class=\"id\" href=\"#line\">line</a>, <a class=\"id\" href=\"#grp\">grp</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ino\">ino</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"inode %lu: \", <a class=\"id\" href=\"#ino\">ino</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#block\">block</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"block %llu:\", (unsigned long long) <a class=\"id\" href=\"#block\">block</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vprintk\">vprintk</a>(<a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#args\">args</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_end\">va_end</a>(<a class=\"id\" href=\"#args\">args</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#ERRORS_CONT\">ERRORS_CONT</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_commit_super\">ext4_commit_super</a>(<a class=\"id\" href=\"#sb\">sb</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_unlock_group\">ext4_unlock_group</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#grp\">grp</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_handle_error\">ext4_handle_error</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We only get here in the ERRORS_RO case; relocking the group</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * may be dangerous, but nothing bad will happen since the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * filesystem will have already been marked read/only and the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * journal has been aborted.  We return 1 as a hint to callers</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * who might what to use the return value from</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ext4_grp_locked_error() to distinguish beween the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ERRORS_CONT and ERRORS_RO case, and perhaps return more</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * aggressively from the ext4 function in question, with a</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * more appropriate error code.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_lock_group\">ext4_lock_group</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#grp\">grp</a>);", 
"<span class=\"ts\"/>return;", 
"}", 
"", 
"void <a class=\"id\" href=\"#ext4_update_dynamic_rev\">ext4_update_dynamic_rev</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a> *<a class=\"id\" href=\"#es\">es</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_rev_level\">s_rev_level</a>) &gt; <a class=\"id\" href=\"#EXT4_GOOD_OLD_REV\">EXT4_GOOD_OLD_REV</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_warning\">ext4_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     \"updating to rev %d because of new feature flag, \"", 
"<span class=\"ts\"/><span class=\"ts\"/>     \"running e2fsck is recommended\",", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#EXT4_DYNAMIC_REV\">EXT4_DYNAMIC_REV</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_first_ino\">s_first_ino</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#EXT4_GOOD_OLD_FIRST_INO\">EXT4_GOOD_OLD_FIRST_INO</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_inode_size\">s_inode_size</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#EXT4_GOOD_OLD_INODE_SIZE\">EXT4_GOOD_OLD_INODE_SIZE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_rev_level\">s_rev_level</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#EXT4_DYNAMIC_REV\">EXT4_DYNAMIC_REV</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* leave es-&gt;s_feature_*compat flags alone */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* es-&gt;s_uuid will be set by e2fsck if empty */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The rest of the superblock fields should be zero, and if not it</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * means they are likely already in use, so leave them alone.  We</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * can leave it up to e2fsck to clean up any inconsistencies there.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Open the external journal device</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#ext4_blkdev_get\">ext4_blkdev_get</a>(<a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#b\">b</a>[<a class=\"id\" href=\"#BDEVNAME_SIZE\">BDEVNAME_SIZE</a>];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bdev\">bdev</a> = <a class=\"id\" href=\"#open_by_devnum\">open_by_devnum</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#FMODE_READ\">FMODE_READ</a>|<a class=\"id\" href=\"#FMODE_WRITE\">FMODE_WRITE</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#bdev\">bdev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bdev\">bdev</a>;", 
"", 
"<a class=\"id\" href=\"#fail\">fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"failed to open journal device %s: %ld\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__bdevname\">__bdevname</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#b\">b</a>), <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#bdev\">bdev</a>));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Release the journal device</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ext4_blkdev_put\">ext4_blkdev_put</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bd_release\">bd_release</a>(<a class=\"id\" href=\"#bdev\">bdev</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#blkdev_put\">blkdev_put</a>(<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#FMODE_READ\">FMODE_READ</a>|<a class=\"id\" href=\"#FMODE_WRITE\">FMODE_WRITE</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext4_blkdev_remove\">ext4_blkdev_remove</a>(struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bdev\">bdev</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#journal_bdev\">journal_bdev</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bdev\">bdev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ext4_blkdev_put\">ext4_blkdev_put</a>(<a class=\"id\" href=\"#bdev\">bdev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#journal_bdev\">journal_bdev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#orphan_list_entry\">orphan_list_entry</a>(struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#l\">l</a>)", 
"{", 
"<span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#l\">l</a>, struct <a class=\"id\" href=\"#ext4_inode_info\">ext4_inode_info</a>, <a class=\"id\" href=\"#i_orphan\">i_orphan</a>)-><a class=\"id\" href=\"#vfs_inode\">vfs_inode</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#dump_orphan_list\">dump_orphan_list</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#l\">l</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"sb orphan head is %d\",", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_last_orphan\">s_last_orphan</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"sb_info orphan list:\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each\">list_for_each</a>(<a class=\"id\" href=\"#l\">l</a>, &amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_orphan\">s_orphan</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#orphan_list_entry\">orphan_list_entry</a>(<a class=\"id\" href=\"#l\">l</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"  \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"inode %s:%lu at %p: mode %o, nlink %d, next %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_id\">s_id</a>, <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>, <a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>, <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_nlink\">i_nlink</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#NEXT_ORPHAN\">NEXT_ORPHAN</a>(<a class=\"id\" href=\"#inode\">inode</a>));", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ext4_put_super\">ext4_put_super</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a> *<a class=\"id\" href=\"#es\">es</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dquot_disable\">dquot_disable</a>(<a class=\"id\" href=\"#sb\">sb</a>, -1, <a class=\"id\" href=\"#DQUOT_USAGE_ENABLED\">DQUOT_USAGE_ENABLED</a> | <a class=\"id\" href=\"#DQUOT_LIMITS_ENABLED\">DQUOT_LIMITS_ENABLED</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flush_workqueue\">flush_workqueue</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#dio_unwritten_wq\">dio_unwritten_wq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#destroy_workqueue\">destroy_workqueue</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#dio_unwritten_wq\">dio_unwritten_wq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_super\">lock_super</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_kernel\">lock_kernel</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_dirt\">s_dirt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_commit_super\">ext4_commit_super</a>(<a class=\"id\" href=\"#sb\">sb</a>, 1);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_journal\">s_journal</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#jbd2_journal_destroy\">jbd2_journal_destroy</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_journal\">s_journal</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_journal\">s_journal</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_abort\">ext4_abort</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"Couldn't clean up the journal\");", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_release_system_zone\">ext4_release_system_zone</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_mb_release\">ext4_mb_release</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_release\">ext4_ext_release</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_xattr_put_super\">ext4_xattr_put_super</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_CLEAR_INCOMPAT_FEATURE\">EXT4_CLEAR_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_RECOVER\">EXT4_FEATURE_INCOMPAT_RECOVER</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_state\">s_state</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_state\">s_mount_state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_commit_super\">ext4_commit_super</a>(<a class=\"id\" href=\"#sb\">sb</a>, 1);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_proc\">s_proc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#remove_proc_entry\">remove_proc_entry</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_id\">s_id</a>, <a class=\"id\" href=\"#ext4_proc_root\">ext4_proc_root</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobject_del\">kobject_del</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_kobj\">s_kobj</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_gdb_count\">s_gdb_count</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_group_desc\">s_group_desc</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_group_desc\">s_group_desc</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_vmalloc_addr\">is_vmalloc_addr</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_flex_groups\">s_flex_groups</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vfree\">vfree</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_flex_groups\">s_flex_groups</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_flex_groups\">s_flex_groups</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#percpu_counter_destroy\">percpu_counter_destroy</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_freeblocks_counter\">s_freeblocks_counter</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#percpu_counter_destroy\">percpu_counter_destroy</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_freeinodes_counter\">s_freeinodes_counter</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#percpu_counter_destroy\">percpu_counter_destroy</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_dirs_counter\">s_dirs_counter</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#percpu_counter_destroy\">percpu_counter_destroy</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_dirtyblocks_counter\">s_dirtyblocks_counter</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_sbh\">s_sbh</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Debugging code just in case the in-memory inode orphan list</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * isn't empty.  The on-disk one can be non-empty if we've</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * detected an error and taken the fs readonly, but the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * in-memory list had better be clean by this point. */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_orphan\">s_orphan</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dump_orphan_list\">dump_orphan_list</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#sbi\">sbi</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT\">J_ASSERT</a>(<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_orphan\">s_orphan</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#invalidate_bdev\">invalidate_bdev</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#journal_bdev\">journal_bdev</a> && <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#journal_bdev\">journal_bdev</a> != <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Invalidate the journal device's buffers.  We don't want them</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * floating about in memory - the physical journal device may</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * hotswapped, and it breaks the `ro-after' testing code.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sync_blockdev\">sync_blockdev</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#journal_bdev\">journal_bdev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#invalidate_bdev\">invalidate_bdev</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#journal_bdev\">journal_bdev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_blkdev_remove\">ext4_blkdev_remove</a>(<a class=\"id\" href=\"#sbi\">sbi</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_fs_info\">s_fs_info</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Now that we are completely done shutting down the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * superblock, we need to actually destroy the kobject.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_kernel\">unlock_kernel</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_super\">unlock_super</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobject_put\">kobject_put</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_kobj\">s_kobj</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wait_for_completion\">wait_for_completion</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_kobj_unregister\">s_kobj_unregister</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_blockgroup_lock\">s_blockgroup_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sbi\">sbi</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#kmem_cache\">kmem_cache</a> *<a class=\"id\" href=\"#ext4_inode_cachep\">ext4_inode_cachep</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Called inside transaction, so use GFP_NOFS</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#ext4_alloc_inode\">ext4_alloc_inode</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_inode_info\">ext4_inode_info</a> *<a class=\"id\" href=\"#ei\">ei</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a> = <a class=\"id\" href=\"#kmem_cache_alloc\">kmem_cache_alloc</a>(<a class=\"id\" href=\"#ext4_inode_cachep\">ext4_inode_cachep</a>, <a class=\"id\" href=\"#GFP_NOFS\">GFP_NOFS</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ei\">ei</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#vfs_inode\">vfs_inode</a>.<a class=\"id\" href=\"#i_version\">i_version</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#vfs_inode\">vfs_inode</a>.<a class=\"id\" href=\"#i_data\">i_data</a>.<a class=\"id\" href=\"#writeback_index\">writeback_index</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_cached_extent\">i_cached_extent</a>, 0, sizeof(struct <a class=\"id\" href=\"#ext4_ext_cache\">ext4_ext_cache</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_prealloc_list\">i_prealloc_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_prealloc_lock\">i_prealloc_lock</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Note:  We can be called before EXT4_SB(sb)-&gt;s_journal is set,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * therefore it can be null here.  Don't check it, just initialize</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * jinode.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_init_jbd_inode\">jbd2_journal_init_jbd_inode</a>(&amp;<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#jinode\">jinode</a>, &amp;<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#vfs_inode\">vfs_inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_reserved_data_blocks\">i_reserved_data_blocks</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_reserved_meta_blocks\">i_reserved_meta_blocks</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_allocated_meta_blocks\">i_allocated_meta_blocks</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_da_metadata_calc_len\">i_da_metadata_calc_len</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_delalloc_reserved_flag\">i_delalloc_reserved_flag</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;(<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_block_reservation_lock\">i_block_reservation_lock</a>));", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_reserved_quota\">i_reserved_quota</a> = 0;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_completed_io_list\">i_completed_io_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_completed_io_lock\">i_completed_io_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#cur_aio_dio\">cur_aio_dio</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_sync_tid\">i_sync_tid</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_datasync_tid\">i_datasync_tid</a> = 0;", 
"", 
"<span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#vfs_inode\">vfs_inode</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ext4_destroy_inode\">ext4_destroy_inode</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;(<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_orphan\">i_orphan</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"Inode %lu (%p): orphan list check failed!\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>, <a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#print_hex_dump\">print_hex_dump</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, \"\", <a class=\"id\" href=\"#DUMP_PREFIX_ADDRESS\">DUMP_PREFIX_ADDRESS</a>, 16, 4,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>), sizeof(struct <a class=\"id\" href=\"#ext4_inode_info\">ext4_inode_info</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#true\">true</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dump_stack\">dump_stack</a>();", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_free\">kmem_cache_free</a>(<a class=\"id\" href=\"#ext4_inode_cachep\">ext4_inode_cachep</a>, <a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>));", 
"}", 
"", 
"static void <a class=\"id\" href=\"#init_once\">init_once</a>(void *<a class=\"id\" href=\"#foo\">foo</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_inode_info\">ext4_inode_info</a> *<a class=\"id\" href=\"#ei\">ei</a> = (struct <a class=\"id\" href=\"#ext4_inode_info\">ext4_inode_info</a> *) <a class=\"id\" href=\"#foo\">foo</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_orphan\">i_orphan</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EXT4_FS_XATTR\">CONFIG_EXT4_FS_XATTR</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_rwsem\">init_rwsem</a>(&amp;<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#xattr_sem\">xattr_sem</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_rwsem\">init_rwsem</a>(&amp;<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_data_sem\">i_data_sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode_init_once\">inode_init_once</a>(&amp;<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#vfs_inode\">vfs_inode</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#init_inodecache\">init_inodecache</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_inode_cachep\">ext4_inode_cachep</a> = <a class=\"id\" href=\"#kmem_cache_create\">kmem_cache_create</a>(\"ext4_inode_cache\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     sizeof(struct <a class=\"id\" href=\"#ext4_inode_info\">ext4_inode_info</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     0, (<a class=\"id\" href=\"#SLAB_RECLAIM_ACCOUNT\">SLAB_RECLAIM_ACCOUNT</a>|", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SLAB_MEM_SPREAD\">SLAB_MEM_SPREAD</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#init_once\">init_once</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_inode_cachep\">ext4_inode_cachep</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#destroy_inodecache\">destroy_inodecache</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_destroy\">kmem_cache_destroy</a>(<a class=\"id\" href=\"#ext4_inode_cachep\">ext4_inode_cachep</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#ext4_clear_inode\">ext4_clear_inode</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#invalidate_inode_buffers\">invalidate_inode_buffers</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end_writeback\">end_writeback</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dquot_drop\">dquot_drop</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_discard_preallocations\">ext4_discard_preallocations</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_JOURNAL\">EXT4_JOURNAL</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_release_jbd_inode\">jbd2_journal_release_jbd_inode</a>(<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#jinode\">jinode</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ext4_show_quota_options\">ext4_show_quota_options</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>)", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_jquota_fmt\">s_jquota_fmt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#fmtname\">fmtname</a> = \"\";", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_jquota_fmt\">s_jquota_fmt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#QFMT_VFS_OLD\">QFMT_VFS_OLD</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fmtname\">fmtname</a> = \"vfsold\";", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#QFMT_VFS_V0\">QFMT_VFS_V0</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fmtname\">fmtname</a> = \"vfsv0\";", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#QFMT_VFS_V1\">QFMT_VFS_V1</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fmtname\">fmtname</a> = \"vfsv1\";", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",jqfmt=%s\", <a class=\"id\" href=\"#fmtname\">fmtname</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#USRQUOTA\">USRQUOTA</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",usrjquota=%s\", <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#USRQUOTA\">USRQUOTA</a>]);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#GRPQUOTA\">GRPQUOTA</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",grpjquota=%s\", <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#GRPQUOTA\">GRPQUOTA</a>]);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#USRQUOTA\">USRQUOTA</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",usrquota\");", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#GRPQUOTA\">GRPQUOTA</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",grpquota\");", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Show an option if</span>", 
"<span class=\"comment\"> *  - it's set to a non-default value OR</span>", 
"<span class=\"comment\"> *  - if the per-sb default is different from the global default</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ext4_show_options\">ext4_show_options</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#vfs\">vfs</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#def_errors\">def_errors</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#vfs\">vfs</a>-><a class=\"id\" href=\"#mnt_sb\">mnt_sb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a> *<a class=\"id\" href=\"#es\">es</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_default_mount_opts\">s_default_mount_opts</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#def_errors\">def_errors</a>     = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_errors\">s_errors</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_sb_block\">s_sb_block</a> != 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",sb=%llu\", <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_sb_block\">s_sb_block</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#MINIX_DF\">MINIX_DF</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",minixdf\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#GRPID\">GRPID</a>) && !(<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT4_DEFM_BSDGROUPS\">EXT4_DEFM_BSDGROUPS</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",grpid\");", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#GRPID\">GRPID</a>) && (<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT4_DEFM_BSDGROUPS\">EXT4_DEFM_BSDGROUPS</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",nogrpid\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resuid\">s_resuid</a> != <a class=\"id\" href=\"#EXT4_DEF_RESUID\">EXT4_DEF_RESUID</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_def_resuid\">s_def_resuid</a>) != <a class=\"id\" href=\"#EXT4_DEF_RESUID\">EXT4_DEF_RESUID</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",resuid=%u\", <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resuid\">s_resuid</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resgid\">s_resgid</a> != <a class=\"id\" href=\"#EXT4_DEF_RESGID\">EXT4_DEF_RESGID</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_def_resgid\">s_def_resgid</a>) != <a class=\"id\" href=\"#EXT4_DEF_RESGID\">EXT4_DEF_RESGID</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",resgid=%u\", <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resgid\">s_resgid</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#ERRORS_RO\">ERRORS_RO</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#def_errors\">def_errors</a> == <a class=\"id\" href=\"#EXT4_ERRORS_PANIC\">EXT4_ERRORS_PANIC</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#def_errors\">def_errors</a> == <a class=\"id\" href=\"#EXT4_ERRORS_CONTINUE\">EXT4_ERRORS_CONTINUE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",errors=remount-ro\");", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#ERRORS_CONT\">ERRORS_CONT</a>) && <a class=\"id\" href=\"#def_errors\">def_errors</a> != <a class=\"id\" href=\"#EXT4_ERRORS_CONTINUE\">EXT4_ERRORS_CONTINUE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",errors=continue\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#ERRORS_PANIC\">ERRORS_PANIC</a>) && <a class=\"id\" href=\"#def_errors\">def_errors</a> != <a class=\"id\" href=\"#EXT4_ERRORS_PANIC\">EXT4_ERRORS_PANIC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",errors=panic\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#NO_UID32\">NO_UID32</a>) && !(<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT4_DEFM_UID16\">EXT4_DEFM_UID16</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",nouid32\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#DEBUG\">DEBUG</a>) && !(<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT4_DEFM_DEBUG\">EXT4_DEFM_DEBUG</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",debug\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#OLDALLOC\">OLDALLOC</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",oldalloc\");", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EXT4_FS_XATTR\">CONFIG_EXT4_FS_XATTR</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#XATTR_USER\">XATTR_USER</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>!(<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT4_DEFM_XATTR_USER\">EXT4_DEFM_XATTR_USER</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",user_xattr\");", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#XATTR_USER\">XATTR_USER</a>) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT4_DEFM_XATTR_USER\">EXT4_DEFM_XATTR_USER</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",nouser_xattr\");", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EXT4_FS_POSIX_ACL\">CONFIG_EXT4_FS_POSIX_ACL</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#POSIX_ACL\">POSIX_ACL</a>) && !(<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT4_DEFM_ACL\">EXT4_DEFM_ACL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",acl\");", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#POSIX_ACL\">POSIX_ACL</a>) && (<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT4_DEFM_ACL\">EXT4_DEFM_ACL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",noacl\");", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_commit_interval\">s_commit_interval</a> != <a class=\"id\" href=\"#JBD2_DEFAULT_MAX_COMMIT_AGE\">JBD2_DEFAULT_MAX_COMMIT_AGE</a>*<a class=\"id\" href=\"#HZ\">HZ</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",commit=%u\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (unsigned) (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_commit_interval\">s_commit_interval</a> / <a class=\"id\" href=\"#HZ\">HZ</a>));", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_min_batch_time\">s_min_batch_time</a> != <a class=\"id\" href=\"#EXT4_DEF_MIN_BATCH_TIME\">EXT4_DEF_MIN_BATCH_TIME</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",min_batch_time=%u\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (unsigned) <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_min_batch_time\">s_min_batch_time</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_max_batch_time\">s_max_batch_time</a> != <a class=\"id\" href=\"#EXT4_DEF_MAX_BATCH_TIME\">EXT4_DEF_MAX_BATCH_TIME</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",max_batch_time=%u\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (unsigned) <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_min_batch_time\">s_min_batch_time</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We're changing the default of barrier mount option, so</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * let's always display its mount state so it's clear what its</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * status is.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",barrier=\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#BARRIER\">BARRIER</a>) ? \"1\" : \"0\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#JOURNAL_ASYNC_COMMIT\">JOURNAL_ASYNC_COMMIT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",journal_async_commit\");", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#JOURNAL_CHECKSUM\">JOURNAL_CHECKSUM</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",journal_checksum\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#I_VERSION\">I_VERSION</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",i_version\");", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#DELALLOC\">DELALLOC</a>) &&", 
"<span class=\"ts\"/>    !(<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT4_DEFM_NODELALLOC\">EXT4_DEFM_NODELALLOC</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",nodelalloc\");", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_stripe\">s_stripe</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",stripe=%lu\", <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_stripe\">s_stripe</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * journal mode get enabled in different ways</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * So just print the value even if we didn't specify it</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#DATA_FLAGS\">DATA_FLAGS</a>) == <a class=\"id\" href=\"#EXT4_MOUNT_JOURNAL_DATA\">EXT4_MOUNT_JOURNAL_DATA</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",data=journal\");", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#DATA_FLAGS\">DATA_FLAGS</a>) == <a class=\"id\" href=\"#EXT4_MOUNT_ORDERED_DATA\">EXT4_MOUNT_ORDERED_DATA</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",data=ordered\");", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#DATA_FLAGS\">DATA_FLAGS</a>) == <a class=\"id\" href=\"#EXT4_MOUNT_WRITEBACK_DATA\">EXT4_MOUNT_WRITEBACK_DATA</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",data=writeback\");", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inode_readahead_blks\">s_inode_readahead_blks</a> != <a class=\"id\" href=\"#EXT4_DEF_INODE_READAHEAD_BLKS\">EXT4_DEF_INODE_READAHEAD_BLKS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",inode_readahead_blks=%u\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inode_readahead_blks\">s_inode_readahead_blks</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#DATA_ERR_ABORT\">DATA_ERR_ABORT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",data_err=abort\");", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#NO_AUTO_DA_ALLOC\">NO_AUTO_DA_ALLOC</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",noauto_da_alloc\");", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#DISCARD\">DISCARD</a>) && !(<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT4_DEFM_DISCARD\">EXT4_DEFM_DISCARD</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",discard\");", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#NOLOAD\">NOLOAD</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",norecovery\");", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#DIOREAD_NOLOCK\">DIOREAD_NOLOCK</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",dioread_nolock\");", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#BLOCK_VALIDITY\">BLOCK_VALIDITY</a>) &&", 
"<span class=\"ts\"/>    !(<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT4_DEFM_BLOCK_VALIDITY\">EXT4_DEFM_BLOCK_VALIDITY</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",block_validity\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_show_quota_options\">ext4_show_quota_options</a>(<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#sb\">sb</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#ext4_nfs_get_inode\">ext4_nfs_get_inode</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#ino\">ino</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#generation\">generation</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ino\">ino</a> &lt; <a class=\"id\" href=\"#EXT4_FIRST_INO\">EXT4_FIRST_INO</a>(<a class=\"id\" href=\"#sb\">sb</a>) && <a class=\"id\" href=\"#ino\">ino</a> != <a class=\"id\" href=\"#EXT4_ROOT_INO\">EXT4_ROOT_INO</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ESTALE\">ESTALE</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ino\">ino</a> &gt; <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_inodes_count\">s_inodes_count</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ESTALE\">ESTALE</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* iget isn't really right if the inode is currently unallocated!!</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ext4_read_inode will return a bad_inode if the inode had been</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * deleted, so we should be safe.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Currently we don't know the generation for parent directory, so</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * a generation of 0 means \"accept any\"</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#ext4_iget\">ext4_iget</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#ino\">ino</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_CAST\">ERR_CAST</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#generation\">generation</a> && <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_generation\">i_generation</a> != <a class=\"id\" href=\"#generation\">generation</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ESTALE\">ESTALE</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#inode\">inode</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#ext4_fh_to_dentry\">ext4_fh_to_dentry</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, struct <a class=\"id\" href=\"#fid\">fid</a> *<a class=\"id\" href=\"#fid\">fid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#fh_len\">fh_len</a>, int <a class=\"id\" href=\"#fh_type\">fh_type</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#generic_fh_to_dentry\">generic_fh_to_dentry</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#fid\">fid</a>, <a class=\"id\" href=\"#fh_len\">fh_len</a>, <a class=\"id\" href=\"#fh_type\">fh_type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ext4_nfs_get_inode\">ext4_nfs_get_inode</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#ext4_fh_to_parent\">ext4_fh_to_parent</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, struct <a class=\"id\" href=\"#fid\">fid</a> *<a class=\"id\" href=\"#fid\">fid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#fh_len\">fh_len</a>, int <a class=\"id\" href=\"#fh_type\">fh_type</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#generic_fh_to_parent\">generic_fh_to_parent</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#fid\">fid</a>, <a class=\"id\" href=\"#fh_len\">fh_len</a>, <a class=\"id\" href=\"#fh_type\">fh_type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ext4_nfs_get_inode\">ext4_nfs_get_inode</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Try to release metadata pages (indirect blocks, directories) which are</span>", 
"<span class=\"comment\"> * mapped via the block device.  Since these pages could have journal heads</span>", 
"<span class=\"comment\"> * which would prevent try_to_free_buffers() from freeing them, we must use</span>", 
"<span class=\"comment\"> * jbd2 layer's try_to_free_buffers() function to release them.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#bdev_try_to_free_page\">bdev_try_to_free_page</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#wait\">wait</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#PageChecked\">PageChecked</a>(<a class=\"id\" href=\"#page\">page</a>));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#page_has_buffers\">page_has_buffers</a>(<a class=\"id\" href=\"#page\">page</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#jbd2_journal_try_to_free_buffers\">jbd2_journal_try_to_free_buffers</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#page\">page</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wait\">wait</a> &amp; ~<a class=\"id\" href=\"#__GFP_WAIT\">__GFP_WAIT</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#try_to_free_buffers\">try_to_free_buffers</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#QTYPE2NAME\">QTYPE2NAME</a>(<a class=\"id\" href=\"#t\">t</a>) ((<a class=\"id\" href=\"#t\">t</a>) == <a class=\"id\" href=\"#USRQUOTA\">USRQUOTA</a> ? \"user\" : \"group\")", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#QTYPE2MOPT\">QTYPE2MOPT</a>(<a class=\"id\" href=\"#on\">on</a>, <a class=\"id\" href=\"#t\">t</a>) ((<a class=\"id\" href=\"#t\">t</a>) == <a class=\"id\" href=\"#USRQUOTA\">USRQUOTA</a>?((<a class=\"id\" href=\"#on\">on</a>)##<a class=\"id\" href=\"#USRJQUOTA\">USRJQUOTA</a>):((<a class=\"id\" href=\"#on\">on</a>)##<a class=\"id\" href=\"#GRPJQUOTA\">GRPJQUOTA</a>))", 
"", 
"static int <a class=\"id\" href=\"#ext4_write_dquot\">ext4_write_dquot</a>(struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#dquot\">dquot</a>);", 
"static int <a class=\"id\" href=\"#ext4_acquire_dquot\">ext4_acquire_dquot</a>(struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#dquot\">dquot</a>);", 
"static int <a class=\"id\" href=\"#ext4_release_dquot\">ext4_release_dquot</a>(struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#dquot\">dquot</a>);", 
"static int <a class=\"id\" href=\"#ext4_mark_dquot_dirty\">ext4_mark_dquot_dirty</a>(struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#dquot\">dquot</a>);", 
"static int <a class=\"id\" href=\"#ext4_write_info\">ext4_write_info</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>);", 
"static int <a class=\"id\" href=\"#ext4_quota_on\">ext4_quota_on</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>, int <a class=\"id\" href=\"#format_id\">format_id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#path\">path</a>);", 
"static int <a class=\"id\" href=\"#ext4_quota_off\">ext4_quota_off</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>);", 
"static int <a class=\"id\" href=\"#ext4_quota_on_mount\">ext4_quota_on_mount</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>);", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ext4_quota_read\">ext4_quota_read</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>, char *<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#off\">off</a>);", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ext4_quota_write\">ext4_quota_write</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const char *<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#off\">off</a>);", 
"", 
"static const struct <a class=\"id\" href=\"#dquot_operations\">dquot_operations</a> <a class=\"id\" href=\"#ext4_quota_operations\">ext4_quota_operations</a> = {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#get_reserved_space\">get_reserved_space</a> = <a class=\"id\" href=\"#ext4_get_reserved_space\">ext4_get_reserved_space</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write_dquot\">write_dquot</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_write_dquot\">ext4_write_dquot</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#acquire_dquot\">acquire_dquot</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_acquire_dquot\">ext4_acquire_dquot</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release_dquot\">release_dquot</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_release_dquot\">ext4_release_dquot</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#mark_dirty\">mark_dirty</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_mark_dquot_dirty\">ext4_mark_dquot_dirty</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write_info\">write_info</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_write_info\">ext4_write_info</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#alloc_dquot\">alloc_dquot</a><span class=\"ts\"/>= <a class=\"id\" href=\"#dquot_alloc\">dquot_alloc</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#destroy_dquot\">destroy_dquot</a><span class=\"ts\"/>= <a class=\"id\" href=\"#dquot_destroy\">dquot_destroy</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#quotactl_ops\">quotactl_ops</a> <a class=\"id\" href=\"#ext4_qctl_operations\">ext4_qctl_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#quota_on\">quota_on</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_quota_on\">ext4_quota_on</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#quota_off\">quota_off</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_quota_off\">ext4_quota_off</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#quota_sync\">quota_sync</a><span class=\"ts\"/>= <a class=\"id\" href=\"#dquot_quota_sync\">dquot_quota_sync</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#get_info\">get_info</a><span class=\"ts\"/>= <a class=\"id\" href=\"#dquot_get_dqinfo\">dquot_get_dqinfo</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_info\">set_info</a><span class=\"ts\"/>= <a class=\"id\" href=\"#dquot_set_dqinfo\">dquot_set_dqinfo</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#get_dqblk\">get_dqblk</a><span class=\"ts\"/>= <a class=\"id\" href=\"#dquot_get_dqblk\">dquot_get_dqblk</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_dqblk\">set_dqblk</a><span class=\"ts\"/>= <a class=\"id\" href=\"#dquot_set_dqblk\">dquot_set_dqblk</a>", 
"};", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static const struct <a class=\"id\" href=\"#super_operations\">super_operations</a> <a class=\"id\" href=\"#ext4_sops\">ext4_sops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#alloc_inode\">alloc_inode</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_alloc_inode\">ext4_alloc_inode</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#destroy_inode\">destroy_inode</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_destroy_inode\">ext4_destroy_inode</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write_inode\">write_inode</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_write_inode\">ext4_write_inode</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#dirty_inode\">dirty_inode</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_dirty_inode\">ext4_dirty_inode</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#evict_inode\">evict_inode</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_evict_inode\">ext4_evict_inode</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#put_super\">put_super</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_put_super\">ext4_put_super</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sync_fs\">sync_fs</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_sync_fs\">ext4_sync_fs</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#freeze_fs\">freeze_fs</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_freeze\">ext4_freeze</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#unfreeze_fs\">unfreeze_fs</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_unfreeze\">ext4_unfreeze</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#statfs\">statfs</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_statfs\">ext4_statfs</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#remount_fs\">remount_fs</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_remount\">ext4_remount</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show_options\">show_options</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_show_options\">ext4_show_options</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#quota_read\">quota_read</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_quota_read\">ext4_quota_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#quota_write\">quota_write</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_quota_write\">ext4_quota_write</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#bdev_try_to_free_page\">bdev_try_to_free_page</a> = <a class=\"id\" href=\"#bdev_try_to_free_page\">bdev_try_to_free_page</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#super_operations\">super_operations</a> <a class=\"id\" href=\"#ext4_nojournal_sops\">ext4_nojournal_sops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#alloc_inode\">alloc_inode</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_alloc_inode\">ext4_alloc_inode</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#destroy_inode\">destroy_inode</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_destroy_inode\">ext4_destroy_inode</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write_inode\">write_inode</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_write_inode\">ext4_write_inode</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#dirty_inode\">dirty_inode</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_dirty_inode\">ext4_dirty_inode</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#evict_inode\">evict_inode</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_evict_inode\">ext4_evict_inode</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write_super\">write_super</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_write_super\">ext4_write_super</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#put_super\">put_super</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_put_super\">ext4_put_super</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#statfs\">statfs</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_statfs\">ext4_statfs</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#remount_fs\">remount_fs</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_remount\">ext4_remount</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show_options\">show_options</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_show_options\">ext4_show_options</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#quota_read\">quota_read</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_quota_read\">ext4_quota_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#quota_write\">quota_write</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_quota_write\">ext4_quota_write</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#bdev_try_to_free_page\">bdev_try_to_free_page</a> = <a class=\"id\" href=\"#bdev_try_to_free_page\">bdev_try_to_free_page</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#export_operations\">export_operations</a> <a class=\"id\" href=\"#ext4_export_ops\">ext4_export_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#fh_to_dentry\">fh_to_dentry</a> = <a class=\"id\" href=\"#ext4_fh_to_dentry\">ext4_fh_to_dentry</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#fh_to_parent\">fh_to_parent</a> = <a class=\"id\" href=\"#ext4_fh_to_parent\">ext4_fh_to_parent</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#get_parent\">get_parent</a> = <a class=\"id\" href=\"#ext4_get_parent\">ext4_get_parent</a>,", 
"};", 
"", 
"enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_bsd_df\">Opt_bsd_df</a>, <a class=\"id\" href=\"#Opt_minix_df\">Opt_minix_df</a>, <a class=\"id\" href=\"#Opt_grpid\">Opt_grpid</a>, <a class=\"id\" href=\"#Opt_nogrpid\">Opt_nogrpid</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_resgid\">Opt_resgid</a>, <a class=\"id\" href=\"#Opt_resuid\">Opt_resuid</a>, <a class=\"id\" href=\"#Opt_sb\">Opt_sb</a>, <a class=\"id\" href=\"#Opt_err_cont\">Opt_err_cont</a>, <a class=\"id\" href=\"#Opt_err_panic\">Opt_err_panic</a>, <a class=\"id\" href=\"#Opt_err_ro\">Opt_err_ro</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_nouid32\">Opt_nouid32</a>, <a class=\"id\" href=\"#Opt_debug\">Opt_debug</a>, <a class=\"id\" href=\"#Opt_oldalloc\">Opt_oldalloc</a>, <a class=\"id\" href=\"#Opt_orlov\">Opt_orlov</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_user_xattr\">Opt_user_xattr</a>, <a class=\"id\" href=\"#Opt_nouser_xattr\">Opt_nouser_xattr</a>, <a class=\"id\" href=\"#Opt_acl\">Opt_acl</a>, <a class=\"id\" href=\"#Opt_noacl\">Opt_noacl</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_auto_da_alloc\">Opt_auto_da_alloc</a>, <a class=\"id\" href=\"#Opt_noauto_da_alloc\">Opt_noauto_da_alloc</a>, <a class=\"id\" href=\"#Opt_noload\">Opt_noload</a>, <a class=\"id\" href=\"#Opt_nobh\">Opt_nobh</a>, <a class=\"id\" href=\"#Opt_bh\">Opt_bh</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_commit\">Opt_commit</a>, <a class=\"id\" href=\"#Opt_min_batch_time\">Opt_min_batch_time</a>, <a class=\"id\" href=\"#Opt_max_batch_time\">Opt_max_batch_time</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_journal_update\">Opt_journal_update</a>, <a class=\"id\" href=\"#Opt_journal_dev\">Opt_journal_dev</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_journal_checksum\">Opt_journal_checksum</a>, <a class=\"id\" href=\"#Opt_journal_async_commit\">Opt_journal_async_commit</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_abort\">Opt_abort</a>, <a class=\"id\" href=\"#Opt_data_journal\">Opt_data_journal</a>, <a class=\"id\" href=\"#Opt_data_ordered\">Opt_data_ordered</a>, <a class=\"id\" href=\"#Opt_data_writeback\">Opt_data_writeback</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_data_err_abort\">Opt_data_err_abort</a>, <a class=\"id\" href=\"#Opt_data_err_ignore\">Opt_data_err_ignore</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_usrjquota\">Opt_usrjquota</a>, <a class=\"id\" href=\"#Opt_grpjquota\">Opt_grpjquota</a>, <a class=\"id\" href=\"#Opt_offusrjquota\">Opt_offusrjquota</a>, <a class=\"id\" href=\"#Opt_offgrpjquota\">Opt_offgrpjquota</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_jqfmt_vfsold\">Opt_jqfmt_vfsold</a>, <a class=\"id\" href=\"#Opt_jqfmt_vfsv0\">Opt_jqfmt_vfsv0</a>, <a class=\"id\" href=\"#Opt_jqfmt_vfsv1\">Opt_jqfmt_vfsv1</a>, <a class=\"id\" href=\"#Opt_quota\">Opt_quota</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_noquota\">Opt_noquota</a>, <a class=\"id\" href=\"#Opt_ignore\">Opt_ignore</a>, <a class=\"id\" href=\"#Opt_barrier\">Opt_barrier</a>, <a class=\"id\" href=\"#Opt_nobarrier\">Opt_nobarrier</a>, <a class=\"id\" href=\"#Opt_err\">Opt_err</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_resize\">Opt_resize</a>, <a class=\"id\" href=\"#Opt_usrquota\">Opt_usrquota</a>, <a class=\"id\" href=\"#Opt_grpquota\">Opt_grpquota</a>, <a class=\"id\" href=\"#Opt_i_version\">Opt_i_version</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_stripe\">Opt_stripe</a>, <a class=\"id\" href=\"#Opt_delalloc\">Opt_delalloc</a>, <a class=\"id\" href=\"#Opt_nodelalloc\">Opt_nodelalloc</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_block_validity\">Opt_block_validity</a>, <a class=\"id\" href=\"#Opt_noblock_validity\">Opt_noblock_validity</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_inode_readahead_blks\">Opt_inode_readahead_blks</a>, <a class=\"id\" href=\"#Opt_journal_ioprio\">Opt_journal_ioprio</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_dioread_nolock\">Opt_dioread_nolock</a>, <a class=\"id\" href=\"#Opt_dioread_lock\">Opt_dioread_lock</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_discard\">Opt_discard</a>, <a class=\"id\" href=\"#Opt_nodiscard\">Opt_nodiscard</a>,", 
"};", 
"", 
"static const <a class=\"id\" href=\"#match_table_t\">match_table_t</a> <a class=\"id\" href=\"#tokens\">tokens</a> = {", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_bsd_df\">Opt_bsd_df</a>, \"bsddf\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_minix_df\">Opt_minix_df</a>, \"minixdf\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_grpid\">Opt_grpid</a>, \"grpid\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_grpid\">Opt_grpid</a>, \"bsdgroups\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_nogrpid\">Opt_nogrpid</a>, \"nogrpid\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_nogrpid\">Opt_nogrpid</a>, \"sysvgroups\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_resgid\">Opt_resgid</a>, \"resgid=%u\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_resuid\">Opt_resuid</a>, \"resuid=%u\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_sb\">Opt_sb</a>, \"sb=%u\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_err_cont\">Opt_err_cont</a>, \"errors=continue\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_err_panic\">Opt_err_panic</a>, \"errors=panic\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_err_ro\">Opt_err_ro</a>, \"errors=remount-ro\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_nouid32\">Opt_nouid32</a>, \"nouid32\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_debug\">Opt_debug</a>, \"debug\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_oldalloc\">Opt_oldalloc</a>, \"oldalloc\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_orlov\">Opt_orlov</a>, \"orlov\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_user_xattr\">Opt_user_xattr</a>, \"user_xattr\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_nouser_xattr\">Opt_nouser_xattr</a>, \"nouser_xattr\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_acl\">Opt_acl</a>, \"acl\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_noacl\">Opt_noacl</a>, \"noacl\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_noload\">Opt_noload</a>, \"noload\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_noload\">Opt_noload</a>, \"norecovery\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_nobh\">Opt_nobh</a>, \"nobh\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_bh\">Opt_bh</a>, \"bh\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_commit\">Opt_commit</a>, \"commit=%u\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_min_batch_time\">Opt_min_batch_time</a>, \"min_batch_time=%u\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_max_batch_time\">Opt_max_batch_time</a>, \"max_batch_time=%u\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_journal_update\">Opt_journal_update</a>, \"journal=update\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_journal_dev\">Opt_journal_dev</a>, \"journal_dev=%u\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_journal_checksum\">Opt_journal_checksum</a>, \"journal_checksum\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_journal_async_commit\">Opt_journal_async_commit</a>, \"journal_async_commit\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_abort\">Opt_abort</a>, \"abort\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_data_journal\">Opt_data_journal</a>, \"data=journal\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_data_ordered\">Opt_data_ordered</a>, \"data=ordered\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_data_writeback\">Opt_data_writeback</a>, \"data=writeback\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_data_err_abort\">Opt_data_err_abort</a>, \"data_err=abort\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_data_err_ignore\">Opt_data_err_ignore</a>, \"data_err=ignore\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_offusrjquota\">Opt_offusrjquota</a>, \"usrjquota=\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_usrjquota\">Opt_usrjquota</a>, \"usrjquota=%s\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_offgrpjquota\">Opt_offgrpjquota</a>, \"grpjquota=\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_grpjquota\">Opt_grpjquota</a>, \"grpjquota=%s\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_jqfmt_vfsold\">Opt_jqfmt_vfsold</a>, \"jqfmt=vfsold\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_jqfmt_vfsv0\">Opt_jqfmt_vfsv0</a>, \"jqfmt=vfsv0\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_jqfmt_vfsv1\">Opt_jqfmt_vfsv1</a>, \"jqfmt=vfsv1\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_grpquota\">Opt_grpquota</a>, \"grpquota\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_noquota\">Opt_noquota</a>, \"noquota\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_quota\">Opt_quota</a>, \"quota\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_usrquota\">Opt_usrquota</a>, \"usrquota\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_barrier\">Opt_barrier</a>, \"barrier=%u\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_barrier\">Opt_barrier</a>, \"barrier\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_nobarrier\">Opt_nobarrier</a>, \"nobarrier\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_i_version\">Opt_i_version</a>, \"i_version\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_stripe\">Opt_stripe</a>, \"stripe=%u\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_resize\">Opt_resize</a>, \"resize\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_delalloc\">Opt_delalloc</a>, \"delalloc\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_nodelalloc\">Opt_nodelalloc</a>, \"nodelalloc\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_block_validity\">Opt_block_validity</a>, \"block_validity\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_noblock_validity\">Opt_noblock_validity</a>, \"noblock_validity\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_inode_readahead_blks\">Opt_inode_readahead_blks</a>, \"inode_readahead_blks=%u\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_journal_ioprio\">Opt_journal_ioprio</a>, \"journal_ioprio=%u\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_auto_da_alloc\">Opt_auto_da_alloc</a>, \"auto_da_alloc=%u\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_auto_da_alloc\">Opt_auto_da_alloc</a>, \"auto_da_alloc\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_noauto_da_alloc\">Opt_noauto_da_alloc</a>, \"noauto_da_alloc\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_dioread_nolock\">Opt_dioread_nolock</a>, \"dioread_nolock\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_dioread_lock\">Opt_dioread_lock</a>, \"dioread_lock\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_discard\">Opt_discard</a>, \"discard\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_nodiscard\">Opt_nodiscard</a>, \"nodiscard\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_err\">Opt_err</a>, <a class=\"id\" href=\"#NULL\">NULL</a>},", 
"};", 
"", 
"static <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#get_sb_block\">get_sb_block</a>(void **<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a><span class=\"ts\"/><a class=\"id\" href=\"#sb_block\">sb_block</a>;", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#options\">options</a> = (char *) *<a class=\"id\" href=\"#data\">data</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#options\">options</a> || <a class=\"id\" href=\"#strncmp\">strncmp</a>(<a class=\"id\" href=\"#options\">options</a>, \"sb=\", 3) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;<span class=\"ts\"/><span class=\"comment\">/* Default location */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#options\">options</a> += 3;", 
"<span class=\"ts\"/><span class=\"comment\">/* TODO: use simple_strtoll with &gt;32bit ext4 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb_block\">sb_block</a> = <a class=\"id\" href=\"#simple_strtoul\">simple_strtoul</a>(<a class=\"id\" href=\"#options\">options</a>, &amp;<a class=\"id\" href=\"#options\">options</a>, 0);", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#options\">options</a> && *<a class=\"id\" href=\"#options\">options</a> != ',') {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"EXT4-fs: Invalid sb specification: %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       (char *) *<a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#options\">options</a> == ',')", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#options\">options</a>++;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#data\">data</a> = (void *) <a class=\"id\" href=\"#options\">options</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sb_block\">sb_block</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEFAULT_JOURNAL_IOPRIO\">DEFAULT_JOURNAL_IOPRIO</a> (<a class=\"id\" href=\"#IOPRIO_PRIO_VALUE\">IOPRIO_PRIO_VALUE</a>(<a class=\"id\" href=\"#IOPRIO_CLASS_BE\">IOPRIO_CLASS_BE</a>, 3))", 
"static char <a class=\"id\" href=\"#deprecated_msg\">deprecated_msg</a>[] = \"Mount option \\\"%s\\\" will be removed by %s\\n\"", 
"<span class=\"ts\"/>\"Contact linux-ext4@vger.kernel.org if you think we should keep it.\\n\";", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"static int <a class=\"id\" href=\"#set_qf_name\">set_qf_name</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#qtype\">qtype</a>, <a class=\"id\" href=\"#substring_t\">substring_t</a> *<a class=\"id\" href=\"#args\">args</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#qname\">qname</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sb_any_quota_loaded\">sb_any_quota_loaded</a>(<a class=\"id\" href=\"#sb\">sb</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>!<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#qtype\">qtype</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"Cannot change journaled \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"quota options when quota turned on\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qname\">qname</a> = <a class=\"id\" href=\"#match_strdup\">match_strdup</a>(<a class=\"id\" href=\"#args\">args</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#qname\">qname</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"Not enough memory for storing quotafile name\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#qtype\">qtype</a>] &&", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#qtype\">qtype</a>], <a class=\"id\" href=\"#qname\">qname</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"%s quota file already specified\", <a class=\"id\" href=\"#QTYPE2NAME\">QTYPE2NAME</a>(<a class=\"id\" href=\"#qtype\">qtype</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#qname\">qname</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#qtype\">qtype</a>] = <a class=\"id\" href=\"#qname\">qname</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#strchr\">strchr</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#qtype\">qtype</a>], '/')) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"quotafile must be on filesystem root\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#qtype\">qtype</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#qtype\">qtype</a>] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#QUOTA\">QUOTA</a>);", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#clear_qf_name\">clear_qf_name</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#qtype\">qtype</a>)", 
"{", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sb_any_quota_loaded\">sb_any_quota_loaded</a>(<a class=\"id\" href=\"#sb\">sb</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#qtype\">qtype</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"Cannot change journaled quota options\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\" when quota turned on\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The space will be released later when all options are confirmed</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to be correct</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#qtype\">qtype</a>] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>return 1;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static int <a class=\"id\" href=\"#parse_options\">parse_options</a>(char *<a class=\"id\" href=\"#options\">options</a>, struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned long *<a class=\"id\" href=\"#journal_devnum\">journal_devnum</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned int *<a class=\"id\" href=\"#journal_ioprio\">journal_ioprio</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> *<a class=\"id\" href=\"#n_blocks_count\">n_blocks_count</a>, int <a class=\"id\" href=\"#is_remount\">is_remount</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#substring_t\">substring_t</a> <a class=\"id\" href=\"#args\">args</a>[<a class=\"id\" href=\"#MAX_OPT_ARGS\">MAX_OPT_ARGS</a>];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#data_opt\">data_opt</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#option\">option</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#qfmt\">qfmt</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#options\">options</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#strsep\">strsep</a>(&amp;<a class=\"id\" href=\"#options\">options</a>, \",\")) != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#token\">token</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!*<a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Initialize args struct so we know whether arg was</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * found; some options take optional arguments.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#args\">args</a>[0].<a class=\"id\" href=\"#to\">to</a> = <a class=\"id\" href=\"#args\">args</a>[0].<a class=\"id\" href=\"#from\">from</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#token\">token</a> = <a class=\"id\" href=\"#match_token\">match_token</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#tokens\">tokens</a>, <a class=\"id\" href=\"#args\">args</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#token\">token</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_bsd_df\">Opt_bsd_df</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>, <a class=\"id\" href=\"#deprecated_msg\">deprecated_msg</a>, <a class=\"id\" href=\"#p\">p</a>, \"2.6.38\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#MINIX_DF\">MINIX_DF</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_minix_df\">Opt_minix_df</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>, <a class=\"id\" href=\"#deprecated_msg\">deprecated_msg</a>, <a class=\"id\" href=\"#p\">p</a>, \"2.6.38\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#MINIX_DF\">MINIX_DF</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_grpid\">Opt_grpid</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>, <a class=\"id\" href=\"#deprecated_msg\">deprecated_msg</a>, <a class=\"id\" href=\"#p\">p</a>, \"2.6.38\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#GRPID\">GRPID</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_nogrpid\">Opt_nogrpid</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>, <a class=\"id\" href=\"#deprecated_msg\">deprecated_msg</a>, <a class=\"id\" href=\"#p\">p</a>, \"2.6.38\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#GRPID\">GRPID</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_resuid\">Opt_resuid</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#match_int\">match_int</a>(&amp;<a class=\"id\" href=\"#args\">args</a>[0], &amp;<a class=\"id\" href=\"#option\">option</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resuid\">s_resuid</a> = <a class=\"id\" href=\"#option\">option</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_resgid\">Opt_resgid</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#match_int\">match_int</a>(&amp;<a class=\"id\" href=\"#args\">args</a>[0], &amp;<a class=\"id\" href=\"#option\">option</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resgid\">s_resgid</a> = <a class=\"id\" href=\"#option\">option</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_sb\">Opt_sb</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* handled by get_sb_block() instead of here */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* *sb_block = match_int(&amp;args[0]); */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_err_panic\">Opt_err_panic</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ERRORS_CONT\">ERRORS_CONT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ERRORS_RO\">ERRORS_RO</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ERRORS_PANIC\">ERRORS_PANIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_err_ro\">Opt_err_ro</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ERRORS_CONT\">ERRORS_CONT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ERRORS_PANIC\">ERRORS_PANIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ERRORS_RO\">ERRORS_RO</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_err_cont\">Opt_err_cont</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ERRORS_RO\">ERRORS_RO</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ERRORS_PANIC\">ERRORS_PANIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ERRORS_CONT\">ERRORS_CONT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_nouid32\">Opt_nouid32</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#NO_UID32\">NO_UID32</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_debug\">Opt_debug</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#DEBUG\">DEBUG</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_oldalloc\">Opt_oldalloc</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#OLDALLOC\">OLDALLOC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_orlov\">Opt_orlov</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#OLDALLOC\">OLDALLOC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EXT4_FS_XATTR\">CONFIG_EXT4_FS_XATTR</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_user_xattr\">Opt_user_xattr</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#XATTR_USER\">XATTR_USER</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_nouser_xattr\">Opt_nouser_xattr</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#XATTR_USER\">XATTR_USER</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"#else", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_user_xattr\">Opt_user_xattr</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_nouser_xattr\">Opt_nouser_xattr</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"(no)user_xattr options not supported\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EXT4_FS_POSIX_ACL\">CONFIG_EXT4_FS_POSIX_ACL</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_acl\">Opt_acl</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#POSIX_ACL\">POSIX_ACL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_noacl\">Opt_noacl</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#POSIX_ACL\">POSIX_ACL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"#else", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_acl\">Opt_acl</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_noacl\">Opt_noacl</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"(no)acl options not supported\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_journal_update\">Opt_journal_update</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* @@@ FIXME */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Eventually we will want to be able to create</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   a journal file here.  For now, only allow the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   user to specify an existing inode to be the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   journal file. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#is_remount\">is_remount</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"Cannot specify journal on remount\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#UPDATE_JOURNAL\">UPDATE_JOURNAL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_journal_dev\">Opt_journal_dev</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#is_remount\">is_remount</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"Cannot specify journal on remount\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#match_int\">match_int</a>(&amp;<a class=\"id\" href=\"#args\">args</a>[0], &amp;<a class=\"id\" href=\"#option\">option</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#journal_devnum\">journal_devnum</a> = <a class=\"id\" href=\"#option\">option</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_journal_checksum\">Opt_journal_checksum</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#JOURNAL_CHECKSUM\">JOURNAL_CHECKSUM</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_journal_async_commit\">Opt_journal_async_commit</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#JOURNAL_ASYNC_COMMIT\">JOURNAL_ASYNC_COMMIT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#JOURNAL_CHECKSUM\">JOURNAL_CHECKSUM</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_noload\">Opt_noload</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#NOLOAD\">NOLOAD</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_commit\">Opt_commit</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#match_int\">match_int</a>(&amp;<a class=\"id\" href=\"#args\">args</a>[0], &amp;<a class=\"id\" href=\"#option\">option</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#option\">option</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#option\">option</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#option\">option</a> = <a class=\"id\" href=\"#JBD2_DEFAULT_MAX_COMMIT_AGE\">JBD2_DEFAULT_MAX_COMMIT_AGE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_commit_interval\">s_commit_interval</a> = <a class=\"id\" href=\"#HZ\">HZ</a> * <a class=\"id\" href=\"#option\">option</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_max_batch_time\">Opt_max_batch_time</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#match_int\">match_int</a>(&amp;<a class=\"id\" href=\"#args\">args</a>[0], &amp;<a class=\"id\" href=\"#option\">option</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#option\">option</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#option\">option</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#option\">option</a> = <a class=\"id\" href=\"#EXT4_DEF_MAX_BATCH_TIME\">EXT4_DEF_MAX_BATCH_TIME</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_max_batch_time\">s_max_batch_time</a> = <a class=\"id\" href=\"#option\">option</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_min_batch_time\">Opt_min_batch_time</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#match_int\">match_int</a>(&amp;<a class=\"id\" href=\"#args\">args</a>[0], &amp;<a class=\"id\" href=\"#option\">option</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#option\">option</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_min_batch_time\">s_min_batch_time</a> = <a class=\"id\" href=\"#option\">option</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_data_journal\">Opt_data_journal</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data_opt\">data_opt</a> = <a class=\"id\" href=\"#EXT4_MOUNT_JOURNAL_DATA\">EXT4_MOUNT_JOURNAL_DATA</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#datacheck\">datacheck</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_data_ordered\">Opt_data_ordered</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data_opt\">data_opt</a> = <a class=\"id\" href=\"#EXT4_MOUNT_ORDERED_DATA\">EXT4_MOUNT_ORDERED_DATA</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#datacheck\">datacheck</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_data_writeback\">Opt_data_writeback</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data_opt\">data_opt</a> = <a class=\"id\" href=\"#EXT4_MOUNT_WRITEBACK_DATA\">EXT4_MOUNT_WRITEBACK_DATA</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#datacheck\">datacheck</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#is_remount\">is_remount</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#DATA_FLAGS\">DATA_FLAGS</a>) != <a class=\"id\" href=\"#data_opt\">data_opt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"Cannot change data mode on remount\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#DATA_FLAGS\">DATA_FLAGS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a> |= <a class=\"id\" href=\"#data_opt\">data_opt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_data_err_abort\">Opt_data_err_abort</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#DATA_ERR_ABORT\">DATA_ERR_ABORT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_data_err_ignore\">Opt_data_err_ignore</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#DATA_ERR_ABORT\">DATA_ERR_ABORT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_usrjquota\">Opt_usrjquota</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#set_qf_name\">set_qf_name</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#USRQUOTA\">USRQUOTA</a>, &amp;<a class=\"id\" href=\"#args\">args</a>[0]))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_grpjquota\">Opt_grpjquota</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#set_qf_name\">set_qf_name</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#GRPQUOTA\">GRPQUOTA</a>, &amp;<a class=\"id\" href=\"#args\">args</a>[0]))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_offusrjquota\">Opt_offusrjquota</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#clear_qf_name\">clear_qf_name</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#USRQUOTA\">USRQUOTA</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_offgrpjquota\">Opt_offgrpjquota</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#clear_qf_name\">clear_qf_name</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#GRPQUOTA\">GRPQUOTA</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_jqfmt_vfsold\">Opt_jqfmt_vfsold</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qfmt\">qfmt</a> = <a class=\"id\" href=\"#QFMT_VFS_OLD\">QFMT_VFS_OLD</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#set_qf_format\">set_qf_format</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_jqfmt_vfsv0\">Opt_jqfmt_vfsv0</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qfmt\">qfmt</a> = <a class=\"id\" href=\"#QFMT_VFS_V0\">QFMT_VFS_V0</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#set_qf_format\">set_qf_format</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_jqfmt_vfsv1\">Opt_jqfmt_vfsv1</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qfmt\">qfmt</a> = <a class=\"id\" href=\"#QFMT_VFS_V1\">QFMT_VFS_V1</a>;", 
"<a class=\"id\" href=\"#set_qf_format\">set_qf_format</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sb_any_quota_loaded\">sb_any_quota_loaded</a>(<a class=\"id\" href=\"#sb\">sb</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_jquota_fmt\">s_jquota_fmt</a> != <a class=\"id\" href=\"#qfmt\">qfmt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"Cannot change \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"journaled quota options when \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"quota turned on\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_jquota_fmt\">s_jquota_fmt</a> = <a class=\"id\" href=\"#qfmt\">qfmt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_quota\">Opt_quota</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_usrquota\">Opt_usrquota</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#QUOTA\">QUOTA</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#USRQUOTA\">USRQUOTA</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_grpquota\">Opt_grpquota</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#QUOTA\">QUOTA</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#GRPQUOTA\">GRPQUOTA</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_noquota\">Opt_noquota</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sb_any_quota_loaded\">sb_any_quota_loaded</a>(<a class=\"id\" href=\"#sb\">sb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"Cannot change quota \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"options when quota turned on\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#QUOTA\">QUOTA</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#USRQUOTA\">USRQUOTA</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#GRPQUOTA\">GRPQUOTA</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"#else", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_quota\">Opt_quota</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_usrquota\">Opt_usrquota</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_grpquota\">Opt_grpquota</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"quota options not supported\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_usrjquota\">Opt_usrjquota</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_grpjquota\">Opt_grpjquota</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_offusrjquota\">Opt_offusrjquota</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_offgrpjquota\">Opt_offgrpjquota</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_jqfmt_vfsold\">Opt_jqfmt_vfsold</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_jqfmt_vfsv0\">Opt_jqfmt_vfsv0</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_jqfmt_vfsv1\">Opt_jqfmt_vfsv1</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"journaled quota options not supported\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_noquota\">Opt_noquota</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_abort\">Opt_abort</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_flags\">s_mount_flags</a> |= <a class=\"id\" href=\"#EXT4_MF_FS_ABORTED\">EXT4_MF_FS_ABORTED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_nobarrier\">Opt_nobarrier</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#BARRIER\">BARRIER</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_barrier\">Opt_barrier</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#args\">args</a>[0].<a class=\"id\" href=\"#from\">from</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#match_int\">match_int</a>(&amp;<a class=\"id\" href=\"#args\">args</a>[0], &amp;<a class=\"id\" href=\"#option\">option</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#option\">option</a> = 1;<span class=\"ts\"/><span class=\"comment\">/* No argument, default to 1 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#option\">option</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#BARRIER\">BARRIER</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#BARRIER\">BARRIER</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_ignore\">Opt_ignore</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_resize\">Opt_resize</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_remount\">is_remount</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"resize option only available \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"for remount\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#match_int\">match_int</a>(&amp;<a class=\"id\" href=\"#args\">args</a>[0], &amp;<a class=\"id\" href=\"#option\">option</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#n_blocks_count\">n_blocks_count</a> = <a class=\"id\" href=\"#option\">option</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_nobh\">Opt_nobh</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"Ignoring deprecated nobh option\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_bh\">Opt_bh</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"Ignoring deprecated bh option\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_i_version\">Opt_i_version</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#I_VERSION\">I_VERSION</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> |= <a class=\"id\" href=\"#MS_I_VERSION\">MS_I_VERSION</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_nodelalloc\">Opt_nodelalloc</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#DELALLOC\">DELALLOC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_stripe\">Opt_stripe</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#match_int\">match_int</a>(&amp;<a class=\"id\" href=\"#args\">args</a>[0], &amp;<a class=\"id\" href=\"#option\">option</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#option\">option</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_stripe\">s_stripe</a> = <a class=\"id\" href=\"#option\">option</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_delalloc\">Opt_delalloc</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#DELALLOC\">DELALLOC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_block_validity\">Opt_block_validity</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#BLOCK_VALIDITY\">BLOCK_VALIDITY</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_noblock_validity\">Opt_noblock_validity</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#BLOCK_VALIDITY\">BLOCK_VALIDITY</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_inode_readahead_blks\">Opt_inode_readahead_blks</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#match_int\">match_int</a>(&amp;<a class=\"id\" href=\"#args\">args</a>[0], &amp;<a class=\"id\" href=\"#option\">option</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#option\">option</a> &lt; 0 || <a class=\"id\" href=\"#option\">option</a> &gt; (1 << 30))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_power_of_2\">is_power_of_2</a>(<a class=\"id\" href=\"#option\">option</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"EXT4-fs: inode_readahead_blks\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \" must be a power of 2\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inode_readahead_blks\">s_inode_readahead_blks</a> = <a class=\"id\" href=\"#option\">option</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_journal_ioprio\">Opt_journal_ioprio</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#match_int\">match_int</a>(&amp;<a class=\"id\" href=\"#args\">args</a>[0], &amp;<a class=\"id\" href=\"#option\">option</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#option\">option</a> &lt; 0 || <a class=\"id\" href=\"#option\">option</a> &gt; 7)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#journal_ioprio\">journal_ioprio</a> = <a class=\"id\" href=\"#IOPRIO_PRIO_VALUE\">IOPRIO_PRIO_VALUE</a>(<a class=\"id\" href=\"#IOPRIO_CLASS_BE\">IOPRIO_CLASS_BE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#option\">option</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_noauto_da_alloc\">Opt_noauto_da_alloc</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>,<a class=\"id\" href=\"#NO_AUTO_DA_ALLOC\">NO_AUTO_DA_ALLOC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_auto_da_alloc\">Opt_auto_da_alloc</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#args\">args</a>[0].<a class=\"id\" href=\"#from\">from</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#match_int\">match_int</a>(&amp;<a class=\"id\" href=\"#args\">args</a>[0], &amp;<a class=\"id\" href=\"#option\">option</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#option\">option</a> = 1;<span class=\"ts\"/><span class=\"comment\">/* No argument, default to 1 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#option\">option</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#NO_AUTO_DA_ALLOC\">NO_AUTO_DA_ALLOC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>,<a class=\"id\" href=\"#NO_AUTO_DA_ALLOC\">NO_AUTO_DA_ALLOC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_discard\">Opt_discard</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#DISCARD\">DISCARD</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_nodiscard\">Opt_nodiscard</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#DISCARD\">DISCARD</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_dioread_nolock\">Opt_dioread_nolock</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#DIOREAD_NOLOCK\">DIOREAD_NOLOCK</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_dioread_lock\">Opt_dioread_lock</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#DIOREAD_NOLOCK\">DIOREAD_NOLOCK</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"Unrecognized mount option \\\"%s\\\" \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"or missing value\", <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#USRQUOTA\">USRQUOTA</a>] || <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#GRPQUOTA\">GRPQUOTA</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#USRQUOTA\">USRQUOTA</a>) && <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#USRQUOTA\">USRQUOTA</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#USRQUOTA\">USRQUOTA</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#GRPQUOTA\">GRPQUOTA</a>) && <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#GRPQUOTA\">GRPQUOTA</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#GRPQUOTA\">GRPQUOTA</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#GRPQUOTA\">GRPQUOTA</a>) || <a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#USRQUOTA\">USRQUOTA</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"old and new quota \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"format mixing\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_jquota_fmt\">s_jquota_fmt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"journaled quota format \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"not specified\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_jquota_fmt\">s_jquota_fmt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"journaled quota format \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"specified with no journaling \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"enabled\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext4_setup_super\">ext4_setup_super</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a> *<a class=\"id\" href=\"#es\">es</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    int <a class=\"id\" href=\"#read_only\">read_only</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#res\">res</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_rev_level\">s_rev_level</a>) &gt; <a class=\"id\" href=\"#EXT4_MAX_SUPP_REV\">EXT4_MAX_SUPP_REV</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"revision level too high, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"forcing read-only mode\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#read_only\">read_only</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_state\">s_mount_state</a> &amp; <a class=\"id\" href=\"#EXT4_VALID_FS\">EXT4_VALID_FS</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>, \"warning: mounting unchecked fs, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"running e2fsck is recommended\");", 
"<span class=\"ts\"/>else if ((<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_state\">s_mount_state</a> &amp; <a class=\"id\" href=\"#EXT4_ERROR_FS\">EXT4_ERROR_FS</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"warning: mounting fs with errors, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"running e2fsck is recommended\");", 
"<span class=\"ts\"/>else if ((<a class=\"id\" href=\"#__s16\">__s16</a>) <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_max_mnt_count\">s_max_mnt_count</a>) >= 0 &&", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_mnt_count\">s_mnt_count</a>) >=", 
"<span class=\"ts\"/><span class=\"ts\"/> (unsigned short) (<a class=\"id\" href=\"#__s16\">__s16</a>) <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_max_mnt_count\">s_max_mnt_count</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"warning: maximal mount count reached, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"running e2fsck is recommended\");", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_checkinterval\">s_checkinterval</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_lastcheck\">s_lastcheck</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_checkinterval\">s_checkinterval</a>) <= <a class=\"id\" href=\"#get_seconds\">get_seconds</a>()))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"warning: checktime reached, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"running e2fsck is recommended\");", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_journal\">s_journal</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_state\">s_state</a> &= <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(~<a class=\"id\" href=\"#EXT4_VALID_FS\">EXT4_VALID_FS</a>);", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#__s16\">__s16</a>) <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_max_mnt_count\">s_max_mnt_count</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_max_mnt_count\">s_max_mnt_count</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#EXT4_DFL_MAX_MNT_COUNT\">EXT4_DFL_MAX_MNT_COUNT</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#le16_add_cpu\">le16_add_cpu</a>(&amp;<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_mnt_count\">s_mnt_count</a>, 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_mtime\">s_mtime</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#get_seconds\">get_seconds</a>());", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_update_dynamic_rev\">ext4_update_dynamic_rev</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_journal\">s_journal</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_SET_INCOMPAT_FEATURE\">EXT4_SET_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_RECOVER\">EXT4_FEATURE_INCOMPAT_RECOVER</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_commit_super\">ext4_commit_super</a>(<a class=\"id\" href=\"#sb\">sb</a>, 1);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#DEBUG\">DEBUG</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"[EXT4 FS bs=%lu, gc=%u, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"bpg=%lu, ipg=%lu, mo=%04x]\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_groups_count\">s_groups_count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_BLOCKS_PER_GROUP\">EXT4_BLOCKS_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_INODES_PER_GROUP\">EXT4_INODES_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext4_fill_flex_info\">ext4_fill_flex_info</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#gdp\">gdp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#flex_group_count\">flex_group_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#flex_group\">flex_group</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#groups_per_flex\">groups_per_flex</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_log_groups_per_flex\">s_log_groups_per_flex</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_log_groups_per_flex\">s_log_groups_per_flex</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#groups_per_flex\">groups_per_flex</a> = 1 << <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_log_groups_per_flex\">s_log_groups_per_flex</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#groups_per_flex\">groups_per_flex</a> &lt; 2) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_log_groups_per_flex\">s_log_groups_per_flex</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We allocate both existing and potentially added groups */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flex_group_count\">flex_group_count</a> = ((<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_groups_count\">s_groups_count</a> + <a class=\"id\" href=\"#groups_per_flex\">groups_per_flex</a> - 1) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_reserved_gdt_blocks\">s_reserved_gdt_blocks</a>) + 1) <<", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#EXT4_DESC_PER_BLOCK_BITS\">EXT4_DESC_PER_BLOCK_BITS</a>(<a class=\"id\" href=\"#sb\">sb</a>))) / <a class=\"id\" href=\"#groups_per_flex\">groups_per_flex</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#flex_group_count\">flex_group_count</a> * sizeof(struct <a class=\"id\" href=\"#flex_groups\">flex_groups</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_flex_groups\">s_flex_groups</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(<a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_flex_groups\">s_flex_groups</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_flex_groups\">s_flex_groups</a> = <a class=\"id\" href=\"#vmalloc\">vmalloc</a>(<a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_flex_groups\">s_flex_groups</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_flex_groups\">s_flex_groups</a>, 0, <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_flex_groups\">s_flex_groups</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"not enough memory for \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"%u flex groups\", <a class=\"id\" href=\"#flex_group_count\">flex_group_count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed\">failed</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_groups_count\">s_groups_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gdp\">gdp</a> = <a class=\"id\" href=\"#ext4_get_group_desc\">ext4_get_group_desc</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flex_group\">flex_group</a> = <a class=\"id\" href=\"#ext4_flex_group\">ext4_flex_group</a>(<a class=\"id\" href=\"#sbi\">sbi</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_add\">atomic_add</a>(<a class=\"id\" href=\"#ext4_free_inodes_count\">ext4_free_inodes_count</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#gdp\">gdp</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_flex_groups\">s_flex_groups</a>[<a class=\"id\" href=\"#flex_group\">flex_group</a>].<a class=\"id\" href=\"#free_inodes\">free_inodes</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_add\">atomic_add</a>(<a class=\"id\" href=\"#ext4_free_blks_count\">ext4_free_blks_count</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#gdp\">gdp</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_flex_groups\">s_flex_groups</a>[<a class=\"id\" href=\"#flex_group\">flex_group</a>].<a class=\"id\" href=\"#free_blocks\">free_blocks</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_add\">atomic_add</a>(<a class=\"id\" href=\"#ext4_used_dirs_count\">ext4_used_dirs_count</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#gdp\">gdp</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_flex_groups\">s_flex_groups</a>[<a class=\"id\" href=\"#flex_group\">flex_group</a>].<a class=\"id\" href=\"#used_dirs\">used_dirs</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 1;", 
"<a class=\"id\" href=\"#failed\">failed</a>:", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<a class=\"id\" href=\"#__le16\">__le16</a> <a class=\"id\" href=\"#ext4_group_desc_csum\">ext4_group_desc_csum</a>(struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a>, <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#block_group\">block_group</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#gdp\">gdp</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#crc\">crc</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_feature_ro_compat\">s_feature_ro_compat</a> &amp;", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#EXT4_FEATURE_RO_COMPAT_GDT_CSUM\">EXT4_FEATURE_RO_COMPAT_GDT_CSUM</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a>, <a class=\"id\" href=\"#bg_checksum\">bg_checksum</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> <a class=\"id\" href=\"#le_group\">le_group</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#block_group\">block_group</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crc\">crc</a> = <a class=\"id\" href=\"#crc16\">crc16</a>(~0, <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_uuid\">s_uuid</a>, sizeof(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_uuid\">s_uuid</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crc\">crc</a> = <a class=\"id\" href=\"#crc16\">crc16</a>(<a class=\"id\" href=\"#crc\">crc</a>, (<a class=\"id\" href=\"#__u8\">__u8</a> *)&amp;<a class=\"id\" href=\"#le_group\">le_group</a>, sizeof(<a class=\"id\" href=\"#le_group\">le_group</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crc\">crc</a> = <a class=\"id\" href=\"#crc16\">crc16</a>(<a class=\"id\" href=\"#crc\">crc</a>, (<a class=\"id\" href=\"#__u8\">__u8</a> *)<a class=\"id\" href=\"#gdp\">gdp</a>, <a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += sizeof(<a class=\"id\" href=\"#gdp\">gdp</a>-><a class=\"id\" href=\"#bg_checksum\">bg_checksum</a>); <span class=\"comment\">/* skip checksum */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* for checksum of struct ext4_group_desc do the rest...*/</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_feature_incompat\">s_feature_incompat</a> &amp;", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_64BIT\">EXT4_FEATURE_INCOMPAT_64BIT</a>)) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#offset\">offset</a> &lt; <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_desc_size\">s_desc_size</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crc\">crc</a> = <a class=\"id\" href=\"#crc16\">crc16</a>(<a class=\"id\" href=\"#crc\">crc</a>, (<a class=\"id\" href=\"#__u8\">__u8</a> *)<a class=\"id\" href=\"#gdp\">gdp</a> + <a class=\"id\" href=\"#offset\">offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_desc_size\">s_desc_size</a>) -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#crc\">crc</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#ext4_group_desc_csum_verify\">ext4_group_desc_csum_verify</a>(struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a>, <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#block_group\">block_group</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#gdp\">gdp</a>)", 
"{", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_feature_ro_compat\">s_feature_ro_compat</a> &amp;", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#EXT4_FEATURE_RO_COMPAT_GDT_CSUM\">EXT4_FEATURE_RO_COMPAT_GDT_CSUM</a>)) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#gdp\">gdp</a>-><a class=\"id\" href=\"#bg_checksum\">bg_checksum</a> != <a class=\"id\" href=\"#ext4_group_desc_csum\">ext4_group_desc_csum</a>(<a class=\"id\" href=\"#sbi\">sbi</a>, <a class=\"id\" href=\"#block_group\">block_group</a>, <a class=\"id\" href=\"#gdp\">gdp</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<span class=\"comment\">/* Called at mount-time, super-block is locked */</span>", 
"static int <a class=\"id\" href=\"#ext4_check_descriptors\">ext4_check_descriptors</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#first_block\">first_block</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_first_data_block\">s_first_data_block</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#last_block\">last_block</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#block_bitmap\">block_bitmap</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#inode_bitmap\">inode_bitmap</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#inode_table\">inode_table</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#flexbg_flag\">flexbg_flag</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_HAS_INCOMPAT_FEATURE\">EXT4_HAS_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_FLEX_BG\">EXT4_FEATURE_INCOMPAT_FLEX_BG</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flexbg_flag\">flexbg_flag</a> = 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_debug\">ext4_debug</a>(\"Checking group descriptors\");", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_groups_count\">s_groups_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#gdp\">gdp</a> = <a class=\"id\" href=\"#ext4_get_group_desc\">ext4_get_group_desc</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> == <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_groups_count\">s_groups_count</a> - 1 || <a class=\"id\" href=\"#flexbg_flag\">flexbg_flag</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_block\">last_block</a> = <a class=\"id\" href=\"#ext4_blocks_count\">ext4_blocks_count</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>) - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_block\">last_block</a> = <a class=\"id\" href=\"#first_block\">first_block</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#EXT4_BLOCKS_PER_GROUP\">EXT4_BLOCKS_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>) - 1);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#block_bitmap\">block_bitmap</a> = <a class=\"id\" href=\"#ext4_block_bitmap\">ext4_block_bitmap</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#gdp\">gdp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#block_bitmap\">block_bitmap</a> &lt; <a class=\"id\" href=\"#first_block\">first_block</a> || <a class=\"id\" href=\"#block_bitmap\">block_bitmap</a> &gt; <a class=\"id\" href=\"#last_block\">last_block</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"ext4_check_descriptors: \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"Block bitmap for group %u not in group \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"(block %llu)!\", <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#block_bitmap\">block_bitmap</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode_bitmap\">inode_bitmap</a> = <a class=\"id\" href=\"#ext4_inode_bitmap\">ext4_inode_bitmap</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#gdp\">gdp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inode_bitmap\">inode_bitmap</a> &lt; <a class=\"id\" href=\"#first_block\">first_block</a> || <a class=\"id\" href=\"#inode_bitmap\">inode_bitmap</a> &gt; <a class=\"id\" href=\"#last_block\">last_block</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"ext4_check_descriptors: \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"Inode bitmap for group %u not in group \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"(block %llu)!\", <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#inode_bitmap\">inode_bitmap</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode_table\">inode_table</a> = <a class=\"id\" href=\"#ext4_inode_table\">ext4_inode_table</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#gdp\">gdp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inode_table\">inode_table</a> &lt; <a class=\"id\" href=\"#first_block\">first_block</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#inode_table\">inode_table</a> + <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_itb_per_group\">s_itb_per_group</a> - 1 &gt; <a class=\"id\" href=\"#last_block\">last_block</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"ext4_check_descriptors: \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"Inode table for group %u not in group \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"(block %llu)!\", <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#inode_table\">inode_table</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_lock_group\">ext4_lock_group</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ext4_group_desc_csum_verify\">ext4_group_desc_csum_verify</a>(<a class=\"id\" href=\"#sbi\">sbi</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#gdp\">gdp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"ext4_check_descriptors: \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"Checksum for group %u failed (%u!=%u)\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#ext4_group_desc_csum\">ext4_group_desc_csum</a>(<a class=\"id\" href=\"#sbi\">sbi</a>, <a class=\"id\" href=\"#i\">i</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#gdp\">gdp</a>)), <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#gdp\">gdp</a>-><a class=\"id\" href=\"#bg_checksum\">bg_checksum</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_unlock_group\">ext4_unlock_group</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_unlock_group\">ext4_unlock_group</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#flexbg_flag\">flexbg_flag</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#first_block\">first_block</a> += <a class=\"id\" href=\"#EXT4_BLOCKS_PER_GROUP\">EXT4_BLOCKS_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_free_blocks_count_set\">ext4_free_blocks_count_set</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>, <a class=\"id\" href=\"#ext4_count_free_blocks\">ext4_count_free_blocks</a>(<a class=\"id\" href=\"#sb\">sb</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_free_inodes_count\">s_free_inodes_count</a> =<a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#ext4_count_free_inodes\">ext4_count_free_inodes</a>(<a class=\"id\" href=\"#sb\">sb</a>));", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<span class=\"comment\">/* ext4_orphan_cleanup() walks a singly-linked list of inodes (starting at</span>", 
"<span class=\"comment\"> * the superblock) which were deleted from all directories, but held open by</span>", 
"<span class=\"comment\"> * a process at the time of a crash.  We walk the list and try to delete these</span>", 
"<span class=\"comment\"> * inodes at recovery time (only with a read-write filesystem).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * In order to keep the orphan inode chain consistent during traversal (in</span>", 
"<span class=\"comment\"> * case of crash during recovery), we link each inode into the superblock</span>", 
"<span class=\"comment\"> * orphan list_head and handle it the same way as an inode deletion during</span>", 
"<span class=\"comment\"> * normal operation (which journals the operations for us).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We only do an iget() and an iput() on each inode, which is very safe if we</span>", 
"<span class=\"comment\"> * accidentally point at an in-use or already deleted inode.  The worst that</span>", 
"<span class=\"comment\"> * can happen in this case is that we get a \"bit already cleared\" message from</span>", 
"<span class=\"comment\"> * ext4_free_inode().  The only reason we would point at a wrong inode is if</span>", 
"<span class=\"comment\"> * e2fsck was run on this filesystem, and it must have already done the orphan</span>", 
"<span class=\"comment\"> * inode cleanup for us, so we can safely abort without any further action.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#ext4_orphan_cleanup\">ext4_orphan_cleanup</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a> *<a class=\"id\" href=\"#es\">es</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#s_flags\">s_flags</a> = <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nr_orphans\">nr_orphans</a> = 0, <a class=\"id\" href=\"#nr_truncates\">nr_truncates</a> = 0;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_last_orphan\">s_last_orphan</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(4, \"no orphan inodes to clean up\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bdev_read_only\">bdev_read_only</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"write access \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"unavailable, skipping orphan cleanup\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_mount_state\">s_mount_state</a> &amp; <a class=\"id\" href=\"#EXT4_ERROR_FS\">EXT4_ERROR_FS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_last_orphan\">s_last_orphan</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(1, \"Errors on filesystem, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"clearing orphan list.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_last_orphan\">s_last_orphan</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(1, \"Skipping orphan recovery on fs with errors.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, \"orphan cleanup on readonly fs\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &= ~<a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* Needed for iput() to work correctly and not trash data */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> |= <a class=\"id\" href=\"#MS_ACTIVE\">MS_ACTIVE</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Turn on quotas so that they are updated correctly */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#i\">i</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ext4_quota_on_mount\">ext4_quota_on_mount</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"Cannot turn on journaled \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"quota: error %d\", <a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_last_orphan\">s_last_orphan</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#ext4_orphan_get\">ext4_orphan_get</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_last_orphan\">s_last_orphan</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#inode\">inode</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_last_orphan\">s_last_orphan</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_orphan\">i_orphan</a>, &amp;<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_orphan\">s_orphan</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dquot_initialize\">dquot_initialize</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_nlink\">i_nlink</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"%s: truncating inode %lu to %lld bytes\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>, <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(2, \"truncating inode %lu to %lld bytes\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>, <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_truncate\">ext4_truncate</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_truncates\">nr_truncates</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"%s: deleting unreferenced inode %lu\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(2, \"deleting unreferenced inode %lu\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_orphans\">nr_orphans</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#inode\">inode</a>);  <span class=\"comment\">/* The delete magic happens here! */</span>", 
"<span class=\"ts\"/>}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PLURAL\">PLURAL</a>(<a class=\"id\" href=\"#x\">x</a>) (<a class=\"id\" href=\"#x\">x</a>), ((<a class=\"id\" href=\"#x\">x</a>) == 1) ? \"\" : \"s\"", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nr_orphans\">nr_orphans</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, \"%d orphan inode%s deleted\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#PLURAL\">PLURAL</a>(<a class=\"id\" href=\"#nr_orphans\">nr_orphans</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nr_truncates\">nr_truncates</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, \"%d truncate%s cleaned up\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#PLURAL\">PLURAL</a>(<a class=\"id\" href=\"#nr_truncates\">nr_truncates</a>));", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* Turn quotas off */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sb_dqopt\">sb_dqopt</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#files\">files</a>[<a class=\"id\" href=\"#i\">i</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dquot_quota_off\">dquot_quota_off</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> = <a class=\"id\" href=\"#s_flags\">s_flags</a>; <span class=\"comment\">/* Restore MS_RDONLY status */</span>", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Maximal extent format file size.</span>", 
"<span class=\"comment\"> * Resulting logical blkno at s_maxbytes must fit in our on-disk</span>", 
"<span class=\"comment\"> * extent format containers, within a sector_t, and within i_blocks</span>", 
"<span class=\"comment\"> * in the vfs.  ext4 inode has 48 bits of i_block in fsblock units,</span>", 
"<span class=\"comment\"> * so that won't be a limiting factor.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Note, this does *not* consider any metadata overhead for vfs i_blocks.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#ext4_max_size\">ext4_max_size</a>(int <a class=\"id\" href=\"#blkbits\">blkbits</a>, int <a class=\"id\" href=\"#has_huge_files\">has_huge_files</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#upper_limit\">upper_limit</a> = <a class=\"id\" href=\"#MAX_LFS_FILESIZE\">MAX_LFS_FILESIZE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* small i_blocks in vfs inode? */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#has_huge_files\">has_huge_files</a> || sizeof(<a class=\"id\" href=\"#blkcnt_t\">blkcnt_t</a>) &lt; sizeof(<a class=\"id\" href=\"#u64\">u64</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * CONFIG_LBDAF is not enabled implies the inode</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * i_block represent total blocks in 512 bytes</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * 32 == size of vfs inode i_blocks * 8</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#upper_limit\">upper_limit</a> = (1LL << 32) - 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* total blocks in file system block size */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#upper_limit\">upper_limit</a> >>= (<a class=\"id\" href=\"#blkbits\">blkbits</a> - 9);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#upper_limit\">upper_limit</a> <<= <a class=\"id\" href=\"#blkbits\">blkbits</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* 32-bit extent-start container, ee_block */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = 1LL << 32;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> <<= <a class=\"id\" href=\"#blkbits\">blkbits</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> -= 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Sanity check against vm- &amp; vfs- imposed limits */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a> &gt; <a class=\"id\" href=\"#upper_limit\">upper_limit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#upper_limit\">upper_limit</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Maximal bitmap file size.  There is a direct, and {,double-,triple-}indirect</span>", 
"<span class=\"comment\"> * block limit, and also a limit of (2^48 - 1) 512-byte sectors in i_blocks.</span>", 
"<span class=\"comment\"> * We need to be 1 filesystem block less than the 2^48 sector limit.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#ext4_max_bitmap_size\">ext4_max_bitmap_size</a>(int <a class=\"id\" href=\"#bits\">bits</a>, int <a class=\"id\" href=\"#has_huge_files\">has_huge_files</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#EXT4_NDIR_BLOCKS\">EXT4_NDIR_BLOCKS</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#meta_blocks\">meta_blocks</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#upper_limit\">upper_limit</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* This is calculated to be the largest file size for a dense, block</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * mapped file such that the file's total number of 512-byte sectors,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * including data and all indirect blocks, does not exceed (2^48 - 1).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * __u32 i_blocks_lo and _u16 i_blocks_high represent the total</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * number of 512-byte sectors of the file.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#has_huge_files\">has_huge_files</a> || sizeof(<a class=\"id\" href=\"#blkcnt_t\">blkcnt_t</a>) &lt; sizeof(<a class=\"id\" href=\"#u64\">u64</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * !has_huge_files or CONFIG_LBDAF not enabled implies that</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the inode i_block field represents total file blocks in</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * 2^32 512-byte sectors == size of vfs inode i_blocks * 8</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#upper_limit\">upper_limit</a> = (1LL << 32) - 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* total blocks in file system block size */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#upper_limit\">upper_limit</a> >>= (<a class=\"id\" href=\"#bits\">bits</a> - 9);", 
"", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We use 48 bit ext4_inode i_blocks</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * With EXT4_HUGE_FILE_FL set the i_blocks</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * represent total number of blocks in</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * file system block size</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#upper_limit\">upper_limit</a> = (1LL << 48) - 1;", 
"", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* indirect blocks */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#meta_blocks\">meta_blocks</a> = 1;", 
"<span class=\"ts\"/><span class=\"comment\">/* double indirect blocks */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#meta_blocks\">meta_blocks</a> += 1 + (1LL << (<a class=\"id\" href=\"#bits\">bits</a>-2));", 
"<span class=\"ts\"/><span class=\"comment\">/* tripple indirect blocks */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#meta_blocks\">meta_blocks</a> += 1 + (1LL << (<a class=\"id\" href=\"#bits\">bits</a>-2)) + (1LL << (2*(<a class=\"id\" href=\"#bits\">bits</a>-2)));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#upper_limit\">upper_limit</a> -= <a class=\"id\" href=\"#meta_blocks\">meta_blocks</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#upper_limit\">upper_limit</a> <<= <a class=\"id\" href=\"#bits\">bits</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> += 1LL << (<a class=\"id\" href=\"#bits\">bits</a>-2);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> += 1LL << (2*(<a class=\"id\" href=\"#bits\">bits</a>-2));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> += 1LL << (3*(<a class=\"id\" href=\"#bits\">bits</a>-2));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> <<= <a class=\"id\" href=\"#bits\">bits</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a> &gt; <a class=\"id\" href=\"#upper_limit\">upper_limit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#upper_limit\">upper_limit</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a> &gt; <a class=\"id\" href=\"#MAX_LFS_FILESIZE\">MAX_LFS_FILESIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#MAX_LFS_FILESIZE\">MAX_LFS_FILESIZE</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#descriptor_loc\">descriptor_loc</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#logical_sb_block\">logical_sb_block</a>, int <a class=\"id\" href=\"#nr\">nr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#bg\">bg</a>, <a class=\"id\" href=\"#first_meta_bg\">first_meta_bg</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#has_super\">has_super</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#first_meta_bg\">first_meta_bg</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_first_meta_bg\">s_first_meta_bg</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#EXT4_HAS_INCOMPAT_FEATURE\">EXT4_HAS_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_META_BG\">EXT4_FEATURE_INCOMPAT_META_BG</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#nr\">nr</a> &lt; <a class=\"id\" href=\"#first_meta_bg\">first_meta_bg</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#logical_sb_block\">logical_sb_block</a> + <a class=\"id\" href=\"#nr\">nr</a> + 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bg\">bg</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_desc_per_block\">s_desc_per_block</a> * <a class=\"id\" href=\"#nr\">nr</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_bg_has_super\">ext4_bg_has_super</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#bg\">bg</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#has_super\">has_super</a> = 1;", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#has_super\">has_super</a> + <a class=\"id\" href=\"#ext4_group_first_block_no\">ext4_group_first_block_no</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#bg\">bg</a>));", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * ext4_get_stripe_size: Get the stripe size.</span>", 
"<span class=\"comment\"> * @sbi: In memory super block info</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If we have specified it via mount option, then</span>", 
"<span class=\"comment\"> * use the mount option value. If the value specified at mount time is</span>", 
"<span class=\"comment\"> * greater than the blocks per group use the super block value.</span>", 
"<span class=\"comment\"> * If the super block value is greater than blocks per group return 0.</span>", 
"<span class=\"comment\"> * Allocator needs it be less than blocks per group.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"static unsigned long <a class=\"id\" href=\"#ext4_get_stripe_size\">ext4_get_stripe_size</a>(struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#stride\">stride</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_raid_stride\">s_raid_stride</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#stripe_width\">stripe_width</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_raid_stripe_width\">s_raid_stripe_width</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_stripe\">s_stripe</a> && <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_stripe\">s_stripe</a> <= <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_blocks_per_group\">s_blocks_per_group</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_stripe\">s_stripe</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#stripe_width\">stripe_width</a> <= <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_blocks_per_group\">s_blocks_per_group</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#stripe_width\">stripe_width</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#stride\">stride</a> <= <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_blocks_per_group\">s_blocks_per_group</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#stride\">stride</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* sysfs supprt */</span>", 
"", 
"struct <a class=\"id\" href=\"#ext4_attr\">ext4_attr</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#attribute\">attribute</a> <a class=\"id\" href=\"#attr\">attr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> (*<a class=\"id\" href=\"#show\">show</a>)(struct <a class=\"id\" href=\"#ext4_attr\">ext4_attr</a> *, struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *, char *);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> (*<a class=\"id\" href=\"#store\">store</a>)(struct <a class=\"id\" href=\"#ext4_attr\">ext4_attr</a> *, struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const char *, <a class=\"id\" href=\"#size_t\">size_t</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#offset\">offset</a>;", 
"};", 
"", 
"static int <a class=\"id\" href=\"#parse_strtoul\">parse_strtoul</a>(const char *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#max\">max</a>, unsigned long *<a class=\"id\" href=\"#value\">value</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#endp\">endp</a>;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#simple_strtoul\">simple_strtoul</a>(<a class=\"id\" href=\"#skip_spaces\">skip_spaces</a>(<a class=\"id\" href=\"#buf\">buf</a>), &amp;<a class=\"id\" href=\"#endp\">endp</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#endp\">endp</a> = <a class=\"id\" href=\"#skip_spaces\">skip_spaces</a>(<a class=\"id\" href=\"#endp\">endp</a>);", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#endp\">endp</a> || *<a class=\"id\" href=\"#value\">value</a> &gt; <a class=\"id\" href=\"#max\">max</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#delayed_allocation_blocks_show\">delayed_allocation_blocks_show</a>(struct <a class=\"id\" href=\"#ext4_attr\">ext4_attr</a> *<a class=\"id\" href=\"#a\">a</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>, \"%llu\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#s64\">s64</a>) <a class=\"id\" href=\"#percpu_counter_sum\">percpu_counter_sum</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_dirtyblocks_counter\">s_dirtyblocks_counter</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#session_write_kbytes_show\">session_write_kbytes_show</a>(struct <a class=\"id\" href=\"#ext4_attr\">ext4_attr</a> *<a class=\"id\" href=\"#a\">a</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_buddy_cache\">s_buddy_cache</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>-><a class=\"id\" href=\"#bd_part\">bd_part</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>, \"0\\n\");", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>, \"%lu\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#part_stat_read\">part_stat_read</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>-><a class=\"id\" href=\"#bd_part\">bd_part</a>, <a class=\"id\" href=\"#sectors\">sectors</a>[1]) -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_sectors_written_start\">s_sectors_written_start</a>) >> 1);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#lifetime_write_kbytes_show\">lifetime_write_kbytes_show</a>(struct <a class=\"id\" href=\"#ext4_attr\">ext4_attr</a> *<a class=\"id\" href=\"#a\">a</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_buddy_cache\">s_buddy_cache</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>-><a class=\"id\" href=\"#bd_part\">bd_part</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>, \"0\\n\");", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>, \"%llu\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long long)(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_kbytes_written\">s_kbytes_written</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#part_stat_read\">part_stat_read</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>-><a class=\"id\" href=\"#bd_part\">bd_part</a>, <a class=\"id\" href=\"#sectors\">sectors</a>[1]) -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_sectors_written_start\">s_sectors_written_start</a>) >> 1)));", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#inode_readahead_blks_store\">inode_readahead_blks_store</a>(struct <a class=\"id\" href=\"#ext4_attr\">ext4_attr</a> *<a class=\"id\" href=\"#a\">a</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#t\">t</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#parse_strtoul\">parse_strtoul</a>(<a class=\"id\" href=\"#buf\">buf</a>, 0x40000000, &amp;<a class=\"id\" href=\"#t\">t</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_power_of_2\">is_power_of_2</a>(<a class=\"id\" href=\"#t\">t</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inode_readahead_blks\">s_inode_readahead_blks</a> = <a class=\"id\" href=\"#t\">t</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#sbi_ui_show\">sbi_ui_show</a>(struct <a class=\"id\" href=\"#ext4_attr\">ext4_attr</a> *<a class=\"id\" href=\"#a\">a</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int *<a class=\"id\" href=\"#ui\">ui</a> = (unsigned int *) (((char *) <a class=\"id\" href=\"#sbi\">sbi</a>) + <a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#offset\">offset</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>, \"%u\\n\", *<a class=\"id\" href=\"#ui\">ui</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#sbi_ui_store\">sbi_ui_store</a>(struct <a class=\"id\" href=\"#ext4_attr\">ext4_attr</a> *<a class=\"id\" href=\"#a\">a</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int *<a class=\"id\" href=\"#ui\">ui</a> = (unsigned int *) (((char *) <a class=\"id\" href=\"#sbi\">sbi</a>) + <a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#t\">t</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#parse_strtoul\">parse_strtoul</a>(<a class=\"id\" href=\"#buf\">buf</a>, 0xffffffff, &amp;<a class=\"id\" href=\"#t\">t</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#ui\">ui</a> = <a class=\"id\" href=\"#t\">t</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_ATTR_OFFSET\">EXT4_ATTR_OFFSET</a>(<a class=\"id\" href=\"#_name\">_name</a>,<a class=\"id\" href=\"#_mode\">_mode</a>,<a class=\"id\" href=\"#_show\">_show</a>,<a class=\"id\" href=\"#_store\">_store</a>,<a class=\"id\" href=\"#_elname\">_elname</a>) \\", 
"static struct <a class=\"id\" href=\"#ext4_attr\">ext4_attr</a> <a class=\"id\" href=\"#ext4_attr_\">ext4_attr_</a>##<a class=\"id\" href=\"#_name\">_name</a> = {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#attr\">attr</a> = {.<a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#__stringify\">__stringify</a>(<a class=\"id\" href=\"#_name\">_name</a>), .<a class=\"id\" href=\"#mode\">mode</a> = <a class=\"id\" href=\"#_mode\">_mode</a> },<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a><span class=\"ts\"/>= <a class=\"id\" href=\"#_show\">_show</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#store\">store</a><span class=\"ts\"/>= <a class=\"id\" href=\"#_store\">_store</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a>, <a class=\"id\" href=\"#_elname\">_elname</a>),<span class=\"ts\"/>\\", 
"}", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_ATTR\">EXT4_ATTR</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#show\">show</a>, <a class=\"id\" href=\"#store\">store</a>) \\", 
"static struct <a class=\"id\" href=\"#ext4_attr\">ext4_attr</a> <a class=\"id\" href=\"#ext4_attr_\">ext4_attr_</a>##<a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#__ATTR\">__ATTR</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#show\">show</a>, <a class=\"id\" href=\"#store\">store</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_RO_ATTR\">EXT4_RO_ATTR</a>(<a class=\"id\" href=\"#name\">name</a>) <a class=\"id\" href=\"#EXT4_ATTR\">EXT4_ATTR</a>(<a class=\"id\" href=\"#name\">name</a>, 0444, <a class=\"id\" href=\"#name\">name</a>##<a class=\"id\" href=\"#_show\">_show</a>, <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_RW_ATTR\">EXT4_RW_ATTR</a>(<a class=\"id\" href=\"#name\">name</a>) <a class=\"id\" href=\"#EXT4_ATTR\">EXT4_ATTR</a>(<a class=\"id\" href=\"#name\">name</a>, 0644, <a class=\"id\" href=\"#name\">name</a>##<a class=\"id\" href=\"#_show\">_show</a>, <a class=\"id\" href=\"#name\">name</a>##<a class=\"id\" href=\"#_store\">_store</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_RW_ATTR_SBI_UI\">EXT4_RW_ATTR_SBI_UI</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#elname\">elname</a>)<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ATTR_OFFSET\">EXT4_ATTR_OFFSET</a>(<a class=\"id\" href=\"#name\">name</a>, 0644, <a class=\"id\" href=\"#sbi_ui_show\">sbi_ui_show</a>, <a class=\"id\" href=\"#sbi_ui_store\">sbi_ui_store</a>, <a class=\"id\" href=\"#elname\">elname</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ATTR_LIST\">ATTR_LIST</a>(<a class=\"id\" href=\"#name\">name</a>) &amp;<a class=\"id\" href=\"#ext4_attr_\">ext4_attr_</a>##<a class=\"id\" href=\"#name\">name</a>.<a class=\"id\" href=\"#attr\">attr</a>", 
"", 
"<a class=\"id\" href=\"#EXT4_RO_ATTR\">EXT4_RO_ATTR</a>(<a class=\"id\" href=\"#delayed_allocation_blocks\">delayed_allocation_blocks</a>);", 
"<a class=\"id\" href=\"#EXT4_RO_ATTR\">EXT4_RO_ATTR</a>(<a class=\"id\" href=\"#session_write_kbytes\">session_write_kbytes</a>);", 
"<a class=\"id\" href=\"#EXT4_RO_ATTR\">EXT4_RO_ATTR</a>(<a class=\"id\" href=\"#lifetime_write_kbytes\">lifetime_write_kbytes</a>);", 
"<a class=\"id\" href=\"#EXT4_ATTR_OFFSET\">EXT4_ATTR_OFFSET</a>(<a class=\"id\" href=\"#inode_readahead_blks\">inode_readahead_blks</a>, 0644, <a class=\"id\" href=\"#sbi_ui_show\">sbi_ui_show</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#inode_readahead_blks_store\">inode_readahead_blks_store</a>, <a class=\"id\" href=\"#s_inode_readahead_blks\">s_inode_readahead_blks</a>);", 
"<a class=\"id\" href=\"#EXT4_RW_ATTR_SBI_UI\">EXT4_RW_ATTR_SBI_UI</a>(<a class=\"id\" href=\"#inode_goal\">inode_goal</a>, <a class=\"id\" href=\"#s_inode_goal\">s_inode_goal</a>);", 
"<a class=\"id\" href=\"#EXT4_RW_ATTR_SBI_UI\">EXT4_RW_ATTR_SBI_UI</a>(<a class=\"id\" href=\"#mb_stats\">mb_stats</a>, <a class=\"id\" href=\"#s_mb_stats\">s_mb_stats</a>);", 
"<a class=\"id\" href=\"#EXT4_RW_ATTR_SBI_UI\">EXT4_RW_ATTR_SBI_UI</a>(<a class=\"id\" href=\"#mb_max_to_scan\">mb_max_to_scan</a>, <a class=\"id\" href=\"#s_mb_max_to_scan\">s_mb_max_to_scan</a>);", 
"<a class=\"id\" href=\"#EXT4_RW_ATTR_SBI_UI\">EXT4_RW_ATTR_SBI_UI</a>(<a class=\"id\" href=\"#mb_min_to_scan\">mb_min_to_scan</a>, <a class=\"id\" href=\"#s_mb_min_to_scan\">s_mb_min_to_scan</a>);", 
"<a class=\"id\" href=\"#EXT4_RW_ATTR_SBI_UI\">EXT4_RW_ATTR_SBI_UI</a>(<a class=\"id\" href=\"#mb_order2_req\">mb_order2_req</a>, <a class=\"id\" href=\"#s_mb_order2_reqs\">s_mb_order2_reqs</a>);", 
"<a class=\"id\" href=\"#EXT4_RW_ATTR_SBI_UI\">EXT4_RW_ATTR_SBI_UI</a>(<a class=\"id\" href=\"#mb_stream_req\">mb_stream_req</a>, <a class=\"id\" href=\"#s_mb_stream_request\">s_mb_stream_request</a>);", 
"<a class=\"id\" href=\"#EXT4_RW_ATTR_SBI_UI\">EXT4_RW_ATTR_SBI_UI</a>(<a class=\"id\" href=\"#mb_group_prealloc\">mb_group_prealloc</a>, <a class=\"id\" href=\"#s_mb_group_prealloc\">s_mb_group_prealloc</a>);", 
"<a class=\"id\" href=\"#EXT4_RW_ATTR_SBI_UI\">EXT4_RW_ATTR_SBI_UI</a>(<a class=\"id\" href=\"#max_writeback_mb_bump\">max_writeback_mb_bump</a>, <a class=\"id\" href=\"#s_max_writeback_mb_bump\">s_max_writeback_mb_bump</a>);", 
"", 
"static struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#ext4_attrs\">ext4_attrs</a>[] = {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ATTR_LIST\">ATTR_LIST</a>(<a class=\"id\" href=\"#delayed_allocation_blocks\">delayed_allocation_blocks</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ATTR_LIST\">ATTR_LIST</a>(<a class=\"id\" href=\"#session_write_kbytes\">session_write_kbytes</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ATTR_LIST\">ATTR_LIST</a>(<a class=\"id\" href=\"#lifetime_write_kbytes\">lifetime_write_kbytes</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ATTR_LIST\">ATTR_LIST</a>(<a class=\"id\" href=\"#inode_readahead_blks\">inode_readahead_blks</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ATTR_LIST\">ATTR_LIST</a>(<a class=\"id\" href=\"#inode_goal\">inode_goal</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ATTR_LIST\">ATTR_LIST</a>(<a class=\"id\" href=\"#mb_stats\">mb_stats</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ATTR_LIST\">ATTR_LIST</a>(<a class=\"id\" href=\"#mb_max_to_scan\">mb_max_to_scan</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ATTR_LIST\">ATTR_LIST</a>(<a class=\"id\" href=\"#mb_min_to_scan\">mb_min_to_scan</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ATTR_LIST\">ATTR_LIST</a>(<a class=\"id\" href=\"#mb_order2_req\">mb_order2_req</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ATTR_LIST\">ATTR_LIST</a>(<a class=\"id\" href=\"#mb_stream_req\">mb_stream_req</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ATTR_LIST\">ATTR_LIST</a>(<a class=\"id\" href=\"#mb_group_prealloc\">mb_group_prealloc</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ATTR_LIST\">ATTR_LIST</a>(<a class=\"id\" href=\"#max_writeback_mb_bump\">max_writeback_mb_bump</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>,", 
"};", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ext4_attr_show\">ext4_attr_show</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#kobj\">kobj</a>, struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s_kobj\">s_kobj</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_attr\">ext4_attr</a> *<a class=\"id\" href=\"#a\">a</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#attr\">attr</a>, struct <a class=\"id\" href=\"#ext4_attr\">ext4_attr</a>, <a class=\"id\" href=\"#attr\">attr</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#show\">show</a> ? <a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#show\">show</a>(<a class=\"id\" href=\"#a\">a</a>, <a class=\"id\" href=\"#sbi\">sbi</a>, <a class=\"id\" href=\"#buf\">buf</a>) : 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ext4_attr_store\">ext4_attr_store</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#kobj\">kobj</a>, struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s_kobj\">s_kobj</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_attr\">ext4_attr</a> *<a class=\"id\" href=\"#a\">a</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#attr\">attr</a>, struct <a class=\"id\" href=\"#ext4_attr\">ext4_attr</a>, <a class=\"id\" href=\"#attr\">attr</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#store\">store</a> ? <a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#store\">store</a>(<a class=\"id\" href=\"#a\">a</a>, <a class=\"id\" href=\"#sbi\">sbi</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#len\">len</a>) : 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ext4_sb_release\">ext4_sb_release</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>)", 
];
xr_frag_insert('l/60/f5e0342dce69108f004cacbcb1e960a344b000.xr', __xr_tmp);
