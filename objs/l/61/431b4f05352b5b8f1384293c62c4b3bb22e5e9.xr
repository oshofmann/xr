var __xr_tmp = [
"<span class=\"comment\"> * (C) Copyright 2005 Robert Love</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fsnotify_backend\">fsnotify_backend</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#audit\">audit</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * fsnotify_d_instantiate - instantiate a dentry for inode</span>", 
"<span class=\"comment\"> * Called with dcache_lock held.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#fsnotify_d_instantiate\">fsnotify_d_instantiate</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__fsnotify_d_instantiate\">__fsnotify_d_instantiate</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Notify this dentry's parent about a child's events. */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#fsnotify_parent\">fsnotify_parent</a>(struct <a class=\"id\" href=\"#path\">path</a> *<a class=\"id\" href=\"#path\">path</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dentry\">dentry</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dentry\">dentry</a> = <a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#dentry\">dentry</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__fsnotify_parent\">__fsnotify_parent</a>(<a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#mask\">mask</a>);", 
"}", 
"", 
"<span class=\"comment\">/* simple call site for access decisions */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#fsnotify_perm\">fsnotify_perm</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, int <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#path\">path</a> *<a class=\"id\" href=\"#path\">path</a> = &amp;<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#fsnotify_mask\">fsnotify_mask</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_mode\">f_mode</a> &amp; <a class=\"id\" href=\"#FMODE_NONOTIFY\">FMODE_NONOTIFY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#mask\">mask</a> &amp; (<a class=\"id\" href=\"#MAY_READ\">MAY_READ</a> | <a class=\"id\" href=\"#MAY_OPEN\">MAY_OPEN</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mask\">mask</a> &amp; <a class=\"id\" href=\"#MAY_OPEN\">MAY_OPEN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_mask\">fsnotify_mask</a> = <a class=\"id\" href=\"#FS_OPEN_PERM\">FS_OPEN_PERM</a>;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#mask\">mask</a> &amp; <a class=\"id\" href=\"#MAY_READ\">MAY_READ</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_mask\">fsnotify_mask</a> = <a class=\"id\" href=\"#FS_ACCESS_PERM\">FS_ACCESS_PERM</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#fsnotify\">fsnotify</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#fsnotify_mask\">fsnotify_mask</a>, <a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#FSNOTIFY_EVENT_PATH\">FSNOTIFY_EVENT_PATH</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * fsnotify_d_move - dentry has been moved</span>", 
"<span class=\"comment\"> * Called with dcache_lock and dentry-&gt;d_lock held.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#fsnotify_d_move\">fsnotify_d_move</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * On move we need to update dentry-&gt;d_flags to indicate if the new parent</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * cares about events from this dentry.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__fsnotify_update_dcache_flags\">__fsnotify_update_dcache_flags</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * fsnotify_link_count - inode's link count changed</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#fsnotify_link_count\">fsnotify_link_count</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fsnotify\">fsnotify</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#FS_ATTRIB\">FS_ATTRIB</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#FSNOTIFY_EVENT_INODE\">FSNOTIFY_EVENT_INODE</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * fsnotify_move - file old_name at old_dir was moved to new_name at new_dir</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#fsnotify_move\">fsnotify_move</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#old_dir\">old_dir</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#new_dir\">new_dir</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const unsigned char *<a class=\"id\" href=\"#old_name\">old_name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> int <a class=\"id\" href=\"#isdir\">isdir</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#target\">target</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#moved\">moved</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#source\">source</a> = <a class=\"id\" href=\"#moved\">moved</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#fs_cookie\">fs_cookie</a> = <a class=\"id\" href=\"#fsnotify_get_cookie\">fsnotify_get_cookie</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#old_dir_mask\">old_dir_mask</a> = (<a class=\"id\" href=\"#FS_EVENT_ON_CHILD\">FS_EVENT_ON_CHILD</a> | <a class=\"id\" href=\"#FS_MOVED_FROM\">FS_MOVED_FROM</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#new_dir_mask\">new_dir_mask</a> = (<a class=\"id\" href=\"#FS_EVENT_ON_CHILD\">FS_EVENT_ON_CHILD</a> | <a class=\"id\" href=\"#FS_MOVED_TO\">FS_MOVED_TO</a>);", 
"<span class=\"ts\"/>const unsigned char *<a class=\"id\" href=\"#new_name\">new_name</a> = <a class=\"id\" href=\"#moved\">moved</a>-><a class=\"id\" href=\"#d_name\">d_name</a>.<a class=\"id\" href=\"#name\">name</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#old_dir\">old_dir</a> == <a class=\"id\" href=\"#new_dir\">new_dir</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_dir_mask\">old_dir_mask</a> |= <a class=\"id\" href=\"#FS_DN_RENAME\">FS_DN_RENAME</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#isdir\">isdir</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_dir_mask\">old_dir_mask</a> |= <a class=\"id\" href=\"#FS_IN_ISDIR\">FS_IN_ISDIR</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_dir_mask\">new_dir_mask</a> |= <a class=\"id\" href=\"#FS_IN_ISDIR\">FS_IN_ISDIR</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fsnotify\">fsnotify</a>(<a class=\"id\" href=\"#old_dir\">old_dir</a>, <a class=\"id\" href=\"#old_dir_mask\">old_dir_mask</a>, <a class=\"id\" href=\"#old_dir\">old_dir</a>, <a class=\"id\" href=\"#FSNOTIFY_EVENT_INODE\">FSNOTIFY_EVENT_INODE</a>, <a class=\"id\" href=\"#old_name\">old_name</a>, <a class=\"id\" href=\"#fs_cookie\">fs_cookie</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fsnotify\">fsnotify</a>(<a class=\"id\" href=\"#new_dir\">new_dir</a>, <a class=\"id\" href=\"#new_dir_mask\">new_dir_mask</a>, <a class=\"id\" href=\"#new_dir\">new_dir</a>, <a class=\"id\" href=\"#FSNOTIFY_EVENT_INODE\">FSNOTIFY_EVENT_INODE</a>, <a class=\"id\" href=\"#new_name\">new_name</a>, <a class=\"id\" href=\"#fs_cookie\">fs_cookie</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#target\">target</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_link_count\">fsnotify_link_count</a>(<a class=\"id\" href=\"#target\">target</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#source\">source</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fsnotify\">fsnotify</a>(<a class=\"id\" href=\"#source\">source</a>, <a class=\"id\" href=\"#FS_MOVE_SELF\">FS_MOVE_SELF</a>, <a class=\"id\" href=\"#moved\">moved</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>, <a class=\"id\" href=\"#FSNOTIFY_EVENT_INODE\">FSNOTIFY_EVENT_INODE</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_inode_child\">audit_inode_child</a>(<a class=\"id\" href=\"#moved\">moved</a>, <a class=\"id\" href=\"#new_dir\">new_dir</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * fsnotify_inode_delete - and inode is being evicted from cache, clean up is needed</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#fsnotify_inode_delete\">fsnotify_inode_delete</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__fsnotify_inode_delete\">__fsnotify_inode_delete</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * fsnotify_vfsmount_delete - a vfsmount is being destroyed, clean up is needed</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#fsnotify_vfsmount_delete\">fsnotify_vfsmount_delete</a>(struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#mnt\">mnt</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__fsnotify_vfsmount_delete\">__fsnotify_vfsmount_delete</a>(<a class=\"id\" href=\"#mnt\">mnt</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * fsnotify_nameremove - a filename was removed from a directory</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#fsnotify_nameremove\">fsnotify_nameremove</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, int <a class=\"id\" href=\"#isdir\">isdir</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#FS_DELETE\">FS_DELETE</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#isdir\">isdir</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> |= <a class=\"id\" href=\"#FS_IN_ISDIR\">FS_IN_ISDIR</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_parent\">fsnotify_parent</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#mask\">mask</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * fsnotify_inoderemove - an inode is going away</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#fsnotify_inoderemove\">fsnotify_inoderemove</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fsnotify\">fsnotify</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#FS_DELETE_SELF\">FS_DELETE_SELF</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#FSNOTIFY_EVENT_INODE\">FSNOTIFY_EVENT_INODE</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__fsnotify_inode_delete\">__fsnotify_inode_delete</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * fsnotify_create - 'name' was linked in</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#fsnotify_create\">fsnotify_create</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_inode_child\">audit_inode_child</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fsnotify\">fsnotify</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#FS_CREATE\">FS_CREATE</a>, <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>, <a class=\"id\" href=\"#FSNOTIFY_EVENT_INODE\">FSNOTIFY_EVENT_INODE</a>, <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_name\">d_name</a>.<a class=\"id\" href=\"#name\">name</a>, 0);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * fsnotify_link - new hardlink in 'inode' directory</span>", 
"<span class=\"comment\"> * Note: We have to pass also the linked inode ptr as some filesystems leave</span>", 
"<span class=\"comment\"> *   new_dentry-&gt;d_inode NULL and instantiate inode pointer later</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#fsnotify_link\">fsnotify_link</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#new_dentry\">new_dentry</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_link_count\">fsnotify_link_count</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_inode_child\">audit_inode_child</a>(<a class=\"id\" href=\"#new_dentry\">new_dentry</a>, <a class=\"id\" href=\"#dir\">dir</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fsnotify\">fsnotify</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#FS_CREATE\">FS_CREATE</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#FSNOTIFY_EVENT_INODE\">FSNOTIFY_EVENT_INODE</a>, <a class=\"id\" href=\"#new_dentry\">new_dentry</a>-><a class=\"id\" href=\"#d_name\">d_name</a>.<a class=\"id\" href=\"#name\">name</a>, 0);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * fsnotify_mkdir - directory 'name' was created</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#fsnotify_mkdir\">fsnotify_mkdir</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#mask\">mask</a> = (<a class=\"id\" href=\"#FS_CREATE\">FS_CREATE</a> | <a class=\"id\" href=\"#FS_IN_ISDIR\">FS_IN_ISDIR</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#d_inode\">d_inode</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_inode_child\">audit_inode_child</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fsnotify\">fsnotify</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#mask\">mask</a>, <a class=\"id\" href=\"#d_inode\">d_inode</a>, <a class=\"id\" href=\"#FSNOTIFY_EVENT_INODE\">FSNOTIFY_EVENT_INODE</a>, <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_name\">d_name</a>.<a class=\"id\" href=\"#name\">name</a>, 0);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * fsnotify_access - file was read</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#fsnotify_access\">fsnotify_access</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#path\">path</a> *<a class=\"id\" href=\"#path\">path</a> = &amp;<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#FS_ACCESS\">FS_ACCESS</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#S_ISDIR\">S_ISDIR</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> |= <a class=\"id\" href=\"#FS_IN_ISDIR\">FS_IN_ISDIR</a>;", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_mode\">f_mode</a> &amp; <a class=\"id\" href=\"#FMODE_NONOTIFY\">FMODE_NONOTIFY</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_parent\">fsnotify_parent</a>(<a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fsnotify\">fsnotify</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#mask\">mask</a>, <a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#FSNOTIFY_EVENT_PATH\">FSNOTIFY_EVENT_PATH</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * fsnotify_modify - file was modified</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#fsnotify_modify\">fsnotify_modify</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#path\">path</a> *<a class=\"id\" href=\"#path\">path</a> = &amp;<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#FS_MODIFY\">FS_MODIFY</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#S_ISDIR\">S_ISDIR</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> |= <a class=\"id\" href=\"#FS_IN_ISDIR\">FS_IN_ISDIR</a>;", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_mode\">f_mode</a> &amp; <a class=\"id\" href=\"#FMODE_NONOTIFY\">FMODE_NONOTIFY</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_parent\">fsnotify_parent</a>(<a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fsnotify\">fsnotify</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#mask\">mask</a>, <a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#FSNOTIFY_EVENT_PATH\">FSNOTIFY_EVENT_PATH</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * fsnotify_open - file was opened</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#fsnotify_open\">fsnotify_open</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#path\">path</a> *<a class=\"id\" href=\"#path\">path</a> = &amp;<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#FS_OPEN\">FS_OPEN</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#S_ISDIR\">S_ISDIR</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> |= <a class=\"id\" href=\"#FS_IN_ISDIR\">FS_IN_ISDIR</a>;", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_mode\">f_mode</a> &amp; <a class=\"id\" href=\"#FMODE_NONOTIFY\">FMODE_NONOTIFY</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_parent\">fsnotify_parent</a>(<a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fsnotify\">fsnotify</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#mask\">mask</a>, <a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#FSNOTIFY_EVENT_PATH\">FSNOTIFY_EVENT_PATH</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * fsnotify_close - file was closed</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#fsnotify_close\">fsnotify_close</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#path\">path</a> *<a class=\"id\" href=\"#path\">path</a> = &amp;<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fmode_t\">fmode_t</a> <a class=\"id\" href=\"#mode\">mode</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_mode\">f_mode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#mask\">mask</a> = (<a class=\"id\" href=\"#mode\">mode</a> &amp; <a class=\"id\" href=\"#FMODE_WRITE\">FMODE_WRITE</a>) ? <a class=\"id\" href=\"#FS_CLOSE_WRITE\">FS_CLOSE_WRITE</a> : <a class=\"id\" href=\"#FS_CLOSE_NOWRITE\">FS_CLOSE_NOWRITE</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#S_ISDIR\">S_ISDIR</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> |= <a class=\"id\" href=\"#FS_IN_ISDIR\">FS_IN_ISDIR</a>;", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_mode\">f_mode</a> &amp; <a class=\"id\" href=\"#FMODE_NONOTIFY\">FMODE_NONOTIFY</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_parent\">fsnotify_parent</a>(<a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fsnotify\">fsnotify</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#mask\">mask</a>, <a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#FSNOTIFY_EVENT_PATH\">FSNOTIFY_EVENT_PATH</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * fsnotify_xattr - extended attributes were changed</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#fsnotify_xattr\">fsnotify_xattr</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#FS_ATTRIB\">FS_ATTRIB</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#S_ISDIR\">S_ISDIR</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> |= <a class=\"id\" href=\"#FS_IN_ISDIR\">FS_IN_ISDIR</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_parent\">fsnotify_parent</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fsnotify\">fsnotify</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#mask\">mask</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#FSNOTIFY_EVENT_INODE\">FSNOTIFY_EVENT_INODE</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * fsnotify_change - notify_change event.  file was modified and/or metadata</span>", 
"<span class=\"comment\"> * was changed.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#fsnotify_change\">fsnotify_change</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, unsigned int <a class=\"id\" href=\"#ia_valid\">ia_valid</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#mask\">mask</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; <a class=\"id\" href=\"#ATTR_UID\">ATTR_UID</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> |= <a class=\"id\" href=\"#FS_ATTRIB\">FS_ATTRIB</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; <a class=\"id\" href=\"#ATTR_GID\">ATTR_GID</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> |= <a class=\"id\" href=\"#FS_ATTRIB\">FS_ATTRIB</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; <a class=\"id\" href=\"#ATTR_SIZE\">ATTR_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> |= <a class=\"id\" href=\"#FS_MODIFY\">FS_MODIFY</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* both times implies a utime(s) call */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; (<a class=\"id\" href=\"#ATTR_ATIME\">ATTR_ATIME</a> | <a class=\"id\" href=\"#ATTR_MTIME\">ATTR_MTIME</a>)) == (<a class=\"id\" href=\"#ATTR_ATIME\">ATTR_ATIME</a> | <a class=\"id\" href=\"#ATTR_MTIME\">ATTR_MTIME</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> |= <a class=\"id\" href=\"#FS_ATTRIB\">FS_ATTRIB</a>;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; <a class=\"id\" href=\"#ATTR_ATIME\">ATTR_ATIME</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> |= <a class=\"id\" href=\"#FS_ACCESS\">FS_ACCESS</a>;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; <a class=\"id\" href=\"#ATTR_MTIME\">ATTR_MTIME</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> |= <a class=\"id\" href=\"#FS_MODIFY\">FS_MODIFY</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; <a class=\"id\" href=\"#ATTR_MODE\">ATTR_MODE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> |= <a class=\"id\" href=\"#FS_ATTRIB\">FS_ATTRIB</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mask\">mask</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#S_ISDIR\">S_ISDIR</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> |= <a class=\"id\" href=\"#FS_IN_ISDIR\">FS_IN_ISDIR</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_parent\">fsnotify_parent</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fsnotify\">fsnotify</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#mask\">mask</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#FSNOTIFY_EVENT_INODE\">FSNOTIFY_EVENT_INODE</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_FSNOTIFY\">CONFIG_FSNOTIFY</a>)<span class=\"ts\"/><span class=\"comment\">/* notify helpers */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * fsnotify_oldname_init - save off the old filename before we change it</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> const unsigned char *<a class=\"id\" href=\"#fsnotify_oldname_init\">fsnotify_oldname_init</a>(const unsigned char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#kstrdup\">kstrdup</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * fsnotify_oldname_free - free the name we got from fsnotify_oldname_init</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#fsnotify_oldname_free\">fsnotify_oldname_free</a>(const unsigned char *<a class=\"id\" href=\"#old_name\">old_name</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#old_name\">old_name</a>);", 
"}", 
"", 
"#else<span class=\"ts\"/><span class=\"comment\">/* CONFIG_FSNOTIFY */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> const char *<a class=\"id\" href=\"#fsnotify_oldname_init\">fsnotify_oldname_init</a>(const unsigned char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#fsnotify_oldname_free\">fsnotify_oldname_free</a>(const unsigned char *<a class=\"id\" href=\"#old_name\">old_name</a>)", 
"{", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/*  CONFIG_FSNOTIFY */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* _LINUX_FS_NOTIFY_H */</span>", 
];
xr_frag_insert('l/61/431b4f05352b5b8f1384293c62c4b3bb22e5e9.xr', __xr_tmp);
