var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  linux/mm/vmalloc.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 1993  Linus Torvalds</span>", 
"<span class=\"comment\"> *  Support of BIGMEM added by Gerhard Wichert, Siemens AG, July 1999</span>", 
"<span class=\"comment\"> *  SMP-safe vmalloc/vfree/ioremap, Tigran Aivazian &lt;tigran@veritas.com&gt;, May 2000</span>", 
"<span class=\"comment\"> *  Major rework to support vmap/vunmap, Christoph Hellwig, SGI, August 2002</span>", 
"<span class=\"comment\"> *  Numa awareness, Christoph Lameter, SGI, June 2005</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#vmalloc\">vmalloc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#highmem\">highmem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#debugobjects\">debugobjects</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kallsyms\">kallsyms</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rbtree\">rbtree</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#radix\">radix</a>-<a class=\"id\" href=\"#tree\">tree</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rcupdate\">rcupdate</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pfn\">pfn</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kmemleak\">kmemleak</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#atomic\">atomic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#tlbflush\">tlbflush</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#shmparam\">shmparam</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#vmap_lazy_unmap\">vmap_lazy_unmap</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"", 
"<span class=\"comment\">/*** Page table manipulation functions ***/</span>", 
"", 
"static void <a class=\"id\" href=\"#vunmap_pte_range\">vunmap_pte_range</a>(<a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#pmd\">pmd</a>, unsigned long <a class=\"id\" href=\"#addr\">addr</a>, unsigned long <a class=\"id\" href=\"#end\">end</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#pte\">pte</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte\">pte</a> = <a class=\"id\" href=\"#pte_offset_kernel\">pte_offset_kernel</a>(<a class=\"id\" href=\"#pmd\">pmd</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#ptent\">ptent</a> = <a class=\"id\" href=\"#ptep_get_and_clear\">ptep_get_and_clear</a>(&amp;<a class=\"id\" href=\"#init_mm\">init_mm</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#pte\">pte</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#pte_none\">pte_none</a>(<a class=\"id\" href=\"#ptent\">ptent</a>) && !<a class=\"id\" href=\"#pte_present\">pte_present</a>(<a class=\"id\" href=\"#ptent\">ptent</a>));", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#pte\">pte</a>++, <a class=\"id\" href=\"#addr\">addr</a> += <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>, <a class=\"id\" href=\"#addr\">addr</a> != <a class=\"id\" href=\"#end\">end</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#vunmap_pmd_range\">vunmap_pmd_range</a>(<a class=\"id\" href=\"#pud_t\">pud_t</a> *<a class=\"id\" href=\"#pud\">pud</a>, unsigned long <a class=\"id\" href=\"#addr\">addr</a>, unsigned long <a class=\"id\" href=\"#end\">end</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#pmd\">pmd</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#next\">next</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmd\">pmd</a> = <a class=\"id\" href=\"#pmd_offset\">pmd_offset</a>(<a class=\"id\" href=\"#pud\">pud</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#pmd_addr_end\">pmd_addr_end</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pmd_none_or_clear_bad\">pmd_none_or_clear_bad</a>(<a class=\"id\" href=\"#pmd\">pmd</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vunmap_pte_range\">vunmap_pte_range</a>(<a class=\"id\" href=\"#pmd\">pmd</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#next\">next</a>);", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#pmd\">pmd</a>++, <a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#next\">next</a>, <a class=\"id\" href=\"#addr\">addr</a> != <a class=\"id\" href=\"#end\">end</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#vunmap_pud_range\">vunmap_pud_range</a>(<a class=\"id\" href=\"#pgd_t\">pgd_t</a> *<a class=\"id\" href=\"#pgd\">pgd</a>, unsigned long <a class=\"id\" href=\"#addr\">addr</a>, unsigned long <a class=\"id\" href=\"#end\">end</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pud_t\">pud_t</a> *<a class=\"id\" href=\"#pud\">pud</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#next\">next</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pud\">pud</a> = <a class=\"id\" href=\"#pud_offset\">pud_offset</a>(<a class=\"id\" href=\"#pgd\">pgd</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#pud_addr_end\">pud_addr_end</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pud_none_or_clear_bad\">pud_none_or_clear_bad</a>(<a class=\"id\" href=\"#pud\">pud</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vunmap_pmd_range\">vunmap_pmd_range</a>(<a class=\"id\" href=\"#pud\">pud</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#next\">next</a>);", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#pud\">pud</a>++, <a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#next\">next</a>, <a class=\"id\" href=\"#addr\">addr</a> != <a class=\"id\" href=\"#end\">end</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#vunmap_page_range\">vunmap_page_range</a>(unsigned long <a class=\"id\" href=\"#addr\">addr</a>, unsigned long <a class=\"id\" href=\"#end\">end</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgd_t\">pgd_t</a> *<a class=\"id\" href=\"#pgd\">pgd</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#next\">next</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#addr\">addr</a> >= <a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgd\">pgd</a> = <a class=\"id\" href=\"#pgd_offset_k\">pgd_offset_k</a>(<a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#pgd_addr_end\">pgd_addr_end</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pgd_none_or_clear_bad\">pgd_none_or_clear_bad</a>(<a class=\"id\" href=\"#pgd\">pgd</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vunmap_pud_range\">vunmap_pud_range</a>(<a class=\"id\" href=\"#pgd\">pgd</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#next\">next</a>);", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#pgd\">pgd</a>++, <a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#next\">next</a>, <a class=\"id\" href=\"#addr\">addr</a> != <a class=\"id\" href=\"#end\">end</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#vmap_pte_range\">vmap_pte_range</a>(<a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#pmd\">pmd</a>, unsigned long <a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#pgprot_t\">pgprot_t</a> <a class=\"id\" href=\"#prot\">prot</a>, struct <a class=\"id\" href=\"#page\">page</a> **<a class=\"id\" href=\"#pages\">pages</a>, int *<a class=\"id\" href=\"#nr\">nr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#pte\">pte</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * nr is a running index into the array which helps higher level</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * callers keep track of where we're up to.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte\">pte</a> = <a class=\"id\" href=\"#pte_alloc_kernel\">pte_alloc_kernel</a>(<a class=\"id\" href=\"#pmd\">pmd</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pte\">pte</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#pages\">pages</a>[*<a class=\"id\" href=\"#nr\">nr</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#pte_none\">pte_none</a>(*<a class=\"id\" href=\"#pte\">pte</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#page\">page</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_pte_at\">set_pte_at</a>(&amp;<a class=\"id\" href=\"#init_mm\">init_mm</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#pte\">pte</a>, <a class=\"id\" href=\"#mk_pte\">mk_pte</a>(<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#prot\">prot</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#nr\">nr</a>)++;", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#pte\">pte</a>++, <a class=\"id\" href=\"#addr\">addr</a> += <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>, <a class=\"id\" href=\"#addr\">addr</a> != <a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#vmap_pmd_range\">vmap_pmd_range</a>(<a class=\"id\" href=\"#pud_t\">pud_t</a> *<a class=\"id\" href=\"#pud\">pud</a>, unsigned long <a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#pgprot_t\">pgprot_t</a> <a class=\"id\" href=\"#prot\">prot</a>, struct <a class=\"id\" href=\"#page\">page</a> **<a class=\"id\" href=\"#pages\">pages</a>, int *<a class=\"id\" href=\"#nr\">nr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#pmd\">pmd</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#next\">next</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmd\">pmd</a> = <a class=\"id\" href=\"#pmd_alloc\">pmd_alloc</a>(&amp;<a class=\"id\" href=\"#init_mm\">init_mm</a>, <a class=\"id\" href=\"#pud\">pud</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pmd\">pmd</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#pmd_addr_end\">pmd_addr_end</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#vmap_pte_range\">vmap_pte_range</a>(<a class=\"id\" href=\"#pmd\">pmd</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#next\">next</a>, <a class=\"id\" href=\"#prot\">prot</a>, <a class=\"id\" href=\"#pages\">pages</a>, <a class=\"id\" href=\"#nr\">nr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#pmd\">pmd</a>++, <a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#next\">next</a>, <a class=\"id\" href=\"#addr\">addr</a> != <a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#vmap_pud_range\">vmap_pud_range</a>(<a class=\"id\" href=\"#pgd_t\">pgd_t</a> *<a class=\"id\" href=\"#pgd\">pgd</a>, unsigned long <a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#pgprot_t\">pgprot_t</a> <a class=\"id\" href=\"#prot\">prot</a>, struct <a class=\"id\" href=\"#page\">page</a> **<a class=\"id\" href=\"#pages\">pages</a>, int *<a class=\"id\" href=\"#nr\">nr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pud_t\">pud_t</a> *<a class=\"id\" href=\"#pud\">pud</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#next\">next</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pud\">pud</a> = <a class=\"id\" href=\"#pud_alloc\">pud_alloc</a>(&amp;<a class=\"id\" href=\"#init_mm\">init_mm</a>, <a class=\"id\" href=\"#pgd\">pgd</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pud\">pud</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#pud_addr_end\">pud_addr_end</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#vmap_pmd_range\">vmap_pmd_range</a>(<a class=\"id\" href=\"#pud\">pud</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#next\">next</a>, <a class=\"id\" href=\"#prot\">prot</a>, <a class=\"id\" href=\"#pages\">pages</a>, <a class=\"id\" href=\"#nr\">nr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#pud\">pud</a>++, <a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#next\">next</a>, <a class=\"id\" href=\"#addr\">addr</a> != <a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Set up page tables in kva (addr, end). The ptes shall have prot \"prot\", and</span>", 
"<span class=\"comment\"> * will have pfns corresponding to the \"pages\" array.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Ie. pte at addr+N*PAGE_SIZE shall point to pfn corresponding to pages[N]</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#vmap_page_range_noflush\">vmap_page_range_noflush</a>(unsigned long <a class=\"id\" href=\"#start\">start</a>, unsigned long <a class=\"id\" href=\"#end\">end</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#pgprot_t\">pgprot_t</a> <a class=\"id\" href=\"#prot\">prot</a>, struct <a class=\"id\" href=\"#page\">page</a> **<a class=\"id\" href=\"#pages\">pages</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgd_t\">pgd_t</a> *<a class=\"id\" href=\"#pgd\">pgd</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#start\">start</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nr\">nr</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#addr\">addr</a> >= <a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgd\">pgd</a> = <a class=\"id\" href=\"#pgd_offset_k\">pgd_offset_k</a>(<a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#pgd_addr_end\">pgd_addr_end</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#vmap_pud_range\">vmap_pud_range</a>(<a class=\"id\" href=\"#pgd\">pgd</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#next\">next</a>, <a class=\"id\" href=\"#prot\">prot</a>, <a class=\"id\" href=\"#pages\">pages</a>, &amp;<a class=\"id\" href=\"#nr\">nr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#pgd\">pgd</a>++, <a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#next\">next</a>, <a class=\"id\" href=\"#addr\">addr</a> != <a class=\"id\" href=\"#end\">end</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nr\">nr</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#vmap_page_range\">vmap_page_range</a>(unsigned long <a class=\"id\" href=\"#start\">start</a>, unsigned long <a class=\"id\" href=\"#end\">end</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#pgprot_t\">pgprot_t</a> <a class=\"id\" href=\"#prot\">prot</a>, struct <a class=\"id\" href=\"#page\">page</a> **<a class=\"id\" href=\"#pages\">pages</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#vmap_page_range_noflush\">vmap_page_range_noflush</a>(<a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#prot\">prot</a>, <a class=\"id\" href=\"#pages\">pages</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flush_cache_vmap\">flush_cache_vmap</a>(<a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#is_vmalloc_or_module_addr\">is_vmalloc_or_module_addr</a>(const void *<a class=\"id\" href=\"#x\">x</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ARM, x86-64 and sparc64 put modules in a special place,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and fall back on vmalloc() if that fails. Others</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * just put it in the vmalloc space.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_MODULES\">CONFIG_MODULES</a>) && <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#MODULES_VADDR\">MODULES_VADDR</a>)", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#addr\">addr</a> = (unsigned long)<a class=\"id\" href=\"#x\">x</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr\">addr</a> >= <a class=\"id\" href=\"#MODULES_VADDR\">MODULES_VADDR</a> && <a class=\"id\" href=\"#addr\">addr</a> &lt; <a class=\"id\" href=\"#MODULES_END\">MODULES_END</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#is_vmalloc_addr\">is_vmalloc_addr</a>(<a class=\"id\" href=\"#x\">x</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Walk a vmap address to the struct page it maps.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#vmalloc_to_page\">vmalloc_to_page</a>(const void *<a class=\"id\" href=\"#vmalloc_addr\">vmalloc_addr</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#addr\">addr</a> = (unsigned long) <a class=\"id\" href=\"#vmalloc_addr\">vmalloc_addr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgd_t\">pgd_t</a> *<a class=\"id\" href=\"#pgd\">pgd</a> = <a class=\"id\" href=\"#pgd_offset_k\">pgd_offset_k</a>(<a class=\"id\" href=\"#addr\">addr</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * XXX we might need to change this if we add VIRTUAL_BUG_ON for</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * architectures that do not vmalloc module space</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VIRTUAL_BUG_ON\">VIRTUAL_BUG_ON</a>(!<a class=\"id\" href=\"#is_vmalloc_or_module_addr\">is_vmalloc_or_module_addr</a>(<a class=\"id\" href=\"#vmalloc_addr\">vmalloc_addr</a>));", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pgd_none\">pgd_none</a>(*<a class=\"id\" href=\"#pgd\">pgd</a>)) {", 
];
xr_frag_insert('l/61/8afbf903c80f9d8f8995303cd936b9d39a592a.xr', __xr_tmp);
