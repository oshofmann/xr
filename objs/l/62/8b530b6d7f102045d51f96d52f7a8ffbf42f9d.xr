var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * INET<span class=\"ts\"/><span class=\"ts\"/>An implementation of the TCP/IP protocol suite for the LINUX</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>operating system.  INET is implemented using the  BSD Socket</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>interface as the means of communication with the user level.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Implementation of the Transmission Control Protocol(TCP).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>IPv4 specific functions</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>code split from:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>linux/ipv4/tcp.c</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>linux/ipv4/tcp_input.c</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>linux/ipv4/tcp_output.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>See tcp.c for author information</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *      modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *      as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *      2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Changes:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>David S. Miller<span class=\"ts\"/>:<span class=\"ts\"/>New socket lookup architecture.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>This code is dedicated to John Dyson.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>David S. Miller :<span class=\"ts\"/>Change semantics of established hash,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>half is devoted to TIME_WAIT sockets</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>and the rest go in the other half.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Andi Kleen :<span class=\"ts\"/><span class=\"ts\"/>Add support for syncookies and fixed</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>some bugs: ip options weren't passed to</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>the TCP layer, missed a check for an</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>ACK bit.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Andi Kleen :<span class=\"ts\"/><span class=\"ts\"/>Implemented fast path mtu discovery.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>     <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>Fixed many serious bugs in the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>request_sock handling and moved</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>most of it into the af independent code.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>Added tail drop and some other bugfixes.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>Added new listen semantics.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Mike McLagan<span class=\"ts\"/>:<span class=\"ts\"/>Routing by source</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Juan Jose Ciarlante:<span class=\"ts\"/><span class=\"ts\"/>ip_dynaddr bits</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Andi Kleen:<span class=\"ts\"/><span class=\"ts\"/>various fixes.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Vitaly E. Lavrov<span class=\"ts\"/>:<span class=\"ts\"/>Transparent proxy revived after year</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>coma.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Andi Kleen<span class=\"ts\"/><span class=\"ts\"/>:<span class=\"ts\"/>Fix new listen.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Andi Kleen<span class=\"ts\"/><span class=\"ts\"/>:<span class=\"ts\"/>Fix accept error reporting.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>YOSHIFUJI Hideaki @USAGI and:<span class=\"ts\"/>Support IPV6_V6ONLY socket option, which</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Alexey Kuznetsov<span class=\"ts\"/><span class=\"ts\"/>allow both IPv4 and IPv6 sockets to bind</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>a single port at the same time.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bottom_half\">bottom_half</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fcntl\">fcntl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#random\">random</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cache\">cache</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jhash\">jhash</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#times\">times</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#net_namespace\">net_namespace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#icmp\">icmp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#inet_hashtables\">inet_hashtables</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#tcp\">tcp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#transp_v6\">transp_v6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#inet_common\">inet_common</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#timewait_sock\">timewait_sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#xfrm\">xfrm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#netdma\">netdma</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#inet\">inet</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#stddef\">stddef</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#crypto\">crypto</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#scatterlist\">scatterlist</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"int <a class=\"id\" href=\"#sysctl_tcp_tw_reuse\">sysctl_tcp_tw_reuse</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a>;", 
"int <a class=\"id\" href=\"#sysctl_tcp_low_latency\">sysctl_tcp_low_latency</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a>;", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#sysctl_tcp_low_latency\">sysctl_tcp_low_latency</a>);", 
"", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TCP_MD5SIG\">CONFIG_TCP_MD5SIG</a>", 
"static struct <a class=\"id\" href=\"#tcp_md5sig_key\">tcp_md5sig_key</a> *<a class=\"id\" href=\"#tcp_v4_md5_do_lookup\">tcp_v4_md5_do_lookup</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#addr\">addr</a>);", 
"static int <a class=\"id\" href=\"#tcp_v4_md5_hash_hdr\">tcp_v4_md5_hash_hdr</a>(char *<a class=\"id\" href=\"#md5_hash\">md5_hash</a>, struct <a class=\"id\" href=\"#tcp_md5sig_key\">tcp_md5sig_key</a> *<a class=\"id\" href=\"#key\">key</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#saddr\">saddr</a>, struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a> *<a class=\"id\" href=\"#th\">th</a>);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a>", 
"struct <a class=\"id\" href=\"#tcp_md5sig_key\">tcp_md5sig_key</a> *<a class=\"id\" href=\"#tcp_v4_md5_do_lookup\">tcp_v4_md5_do_lookup</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"struct <a class=\"id\" href=\"#inet_hashinfo\">inet_hashinfo</a> <a class=\"id\" href=\"#tcp_hashinfo\">tcp_hashinfo</a>;", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tcp_hashinfo\">tcp_hashinfo</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#tcp_v4_init_sequence\">tcp_v4_init_sequence</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#secure_tcp_sequence_number\">secure_tcp_sequence_number</a>(<a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#daddr\">daddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#saddr\">saddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#dest\">dest</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#source\">source</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#tcp_twsk_unique\">tcp_twsk_unique</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sktw\">sktw</a>, void *<a class=\"id\" href=\"#twp\">twp</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#tcp_timewait_sock\">tcp_timewait_sock</a> *<a class=\"id\" href=\"#tcptw\">tcptw</a> = <a class=\"id\" href=\"#tcp_twsk\">tcp_twsk</a>(<a class=\"id\" href=\"#sktw\">sktw</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* With PAWS, it is safe from the viewpoint</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   of data integrity. Even without PAWS it is safe provided sequence</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   spaces do not overlap i.e. at data rates &lt;= 80Mbit/sec.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\"><span class=\"ts\"/>   Actually, the idea is close to VJ's one, only timestamp cache is</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   held not per host, but per port pair and TW bucket is used as state</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   holder.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\"><span class=\"ts\"/>   If TW bucket has been already destroyed we fall back to VJ's scheme</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   and use initial timestamp retrieved from peer table.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_ts_recent_stamp\">tw_ts_recent_stamp</a> &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#twp\">twp</a> == <a class=\"id\" href=\"#NULL\">NULL</a> || (<a class=\"id\" href=\"#sysctl_tcp_tw_reuse\">sysctl_tcp_tw_reuse</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#get_seconds\">get_seconds</a>() - <a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_ts_recent_stamp\">tw_ts_recent_stamp</a> &gt; 1))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#write_seq\">write_seq</a> = <a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_snd_nxt\">tw_snd_nxt</a> + 65535 + 2;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#write_seq\">write_seq</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#write_seq\">write_seq</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#ts_recent\">ts_recent</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_ts_recent\">tw_ts_recent</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#ts_recent_stamp\">ts_recent_stamp</a> = <a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_ts_recent_stamp\">tw_ts_recent_stamp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_hold\">sock_hold</a>(<a class=\"id\" href=\"#sktw\">sktw</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#tcp_twsk_unique\">tcp_twsk_unique</a>);", 
"", 
"<span class=\"comment\">/* This will initiate an outgoing connection. */</span>", 
"int <a class=\"id\" href=\"#tcp_v4_connect\">tcp_v4_connect</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *<a class=\"id\" href=\"#uaddr\">uaddr</a>, int <a class=\"id\" href=\"#addr_len\">addr_len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_in\">sockaddr_in</a> *<a class=\"id\" href=\"#usin\">usin</a> = (struct <a class=\"id\" href=\"#sockaddr_in\">sockaddr_in</a> *)<a class=\"id\" href=\"#uaddr\">uaddr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtable\">rtable</a> *<a class=\"id\" href=\"#rt\">rt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#nexthop\">nexthop</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr_len\">addr_len</a> &lt; sizeof(struct <a class=\"id\" href=\"#sockaddr_in\">sockaddr_in</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#usin\">usin</a>-><a class=\"id\" href=\"#sin_family\">sin_family</a> != <a class=\"id\" href=\"#AF_INET\">AF_INET</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EAFNOSUPPORT\">EAFNOSUPPORT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nexthop\">nexthop</a> = <a class=\"id\" href=\"#daddr\">daddr</a> = <a class=\"id\" href=\"#usin\">usin</a>-><a class=\"id\" href=\"#sin_addr\">sin_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#opt\">opt</a> && <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#srr\">srr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#daddr\">daddr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nexthop\">nexthop</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#faddr\">faddr</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#ip_route_connect\">ip_route_connect</a>(&amp;<a class=\"id\" href=\"#rt\">rt</a>, <a class=\"id\" href=\"#nexthop\">nexthop</a>, <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_saddr\">inet_saddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#RT_CONN_FLAGS\">RT_CONN_FLAGS</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_bound_dev_if\">sk_bound_dev_if</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#IPPROTO_TCP\">IPPROTO_TCP</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_sport\">inet_sport</a>, <a class=\"id\" href=\"#usin\">usin</a>-><a class=\"id\" href=\"#sin_port\">sin_port</a>, <a class=\"id\" href=\"#sk\">sk</a>, 1);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tmp\">tmp</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tmp\">tmp</a> == -<a class=\"id\" href=\"#ENETUNREACH\">ENETUNREACH</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP_INC_STATS_BH\">IP_INC_STATS_BH</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#IPSTATS_MIB_OUTNOROUTES\">IPSTATS_MIB_OUTNOROUTES</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt_flags\">rt_flags</a> &amp; (<a class=\"id\" href=\"#RTCF_MULTICAST\">RTCF_MULTICAST</a> | <a class=\"id\" href=\"#RTCF_BROADCAST\">RTCF_BROADCAST</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip_rt_put\">ip_rt_put</a>(<a class=\"id\" href=\"#rt\">rt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENETUNREACH\">ENETUNREACH</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#opt\">opt</a> || !<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#srr\">srr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#daddr\">daddr</a> = <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt_dst\">rt_dst</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_saddr\">inet_saddr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_saddr\">inet_saddr</a> = <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt_src\">rt_src</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_rcv_saddr\">inet_rcv_saddr</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_saddr\">inet_saddr</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#ts_recent_stamp\">ts_recent_stamp</a> && <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_daddr\">inet_daddr</a> != <a class=\"id\" href=\"#daddr\">daddr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Reset inherited state */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#ts_recent\">ts_recent</a><span class=\"ts\"/>   = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#ts_recent_stamp\">ts_recent_stamp</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#write_seq\">write_seq</a><span class=\"ts\"/><span class=\"ts\"/>   = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_death_row\">tcp_death_row</a>.<a class=\"id\" href=\"#sysctl_tw_recycle\">sysctl_tw_recycle</a> &&", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#ts_recent_stamp\">ts_recent_stamp</a> && <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt_dst\">rt_dst</a> == <a class=\"id\" href=\"#daddr\">daddr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_peer\">inet_peer</a> *<a class=\"id\" href=\"#peer\">peer</a> = <a class=\"id\" href=\"#rt_get_peer\">rt_get_peer</a>(<a class=\"id\" href=\"#rt\">rt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * VJ's idea. We save last timestamp seen from</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the destination in peer table, when entering state</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * TIME-WAIT * and initialize rx_opt.ts_recent from it,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * when trying new connection.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#peer\">peer</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_peer_refcheck\">inet_peer_refcheck</a>(<a class=\"id\" href=\"#peer\">peer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#get_seconds\">get_seconds</a>() - <a class=\"id\" href=\"#peer\">peer</a>-><a class=\"id\" href=\"#tcp_ts_stamp\">tcp_ts_stamp</a> <= <a class=\"id\" href=\"#TCP_PAWS_MSL\">TCP_PAWS_MSL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#ts_recent_stamp\">ts_recent_stamp</a> = <a class=\"id\" href=\"#peer\">peer</a>-><a class=\"id\" href=\"#tcp_ts_stamp\">tcp_ts_stamp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#ts_recent\">ts_recent</a> = <a class=\"id\" href=\"#peer\">peer</a>-><a class=\"id\" href=\"#tcp_ts\">tcp_ts</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_dport\">inet_dport</a> = <a class=\"id\" href=\"#usin\">usin</a>-><a class=\"id\" href=\"#sin_port\">sin_port</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_daddr\">inet_daddr</a> = <a class=\"id\" href=\"#daddr\">daddr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#icsk_ext_hdr_len\">icsk_ext_hdr_len</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#opt\">opt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#icsk_ext_hdr_len\">icsk_ext_hdr_len</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#optlen\">optlen</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#mss_clamp\">mss_clamp</a> = <a class=\"id\" href=\"#TCP_MSS_DEFAULT\">TCP_MSS_DEFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Socket identity is still unknown (sport may be zero).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * However we set state to SYN-SENT and not releasing socket</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * lock select source port, enter ourselves into the hash tables and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * complete initialization after this.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_set_state\">tcp_set_state</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#TCP_SYN_SENT\">TCP_SYN_SENT</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#inet_hash_connect\">inet_hash_connect</a>(&amp;<a class=\"id\" href=\"#tcp_death_row\">tcp_death_row</a>, <a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failure\">failure</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ip_route_newports\">ip_route_newports</a>(&amp;<a class=\"id\" href=\"#rt\">rt</a>, <a class=\"id\" href=\"#IPPROTO_TCP\">IPPROTO_TCP</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_sport\">inet_sport</a>, <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_dport\">inet_dport</a>, <a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failure\">failure</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* OK, now commit destination to socket.  */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_gso_type\">sk_gso_type</a> = <a class=\"id\" href=\"#SKB_GSO_TCPV4\">SKB_GSO_TCPV4</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_setup_caps\">sk_setup_caps</a>(<a class=\"id\" href=\"#sk\">sk</a>, &amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#write_seq\">write_seq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#write_seq\">write_seq</a> = <a class=\"id\" href=\"#secure_tcp_sequence_number\">secure_tcp_sequence_number</a>(<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_saddr\">inet_saddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_daddr\">inet_daddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_sport\">inet_sport</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#usin\">usin</a>-><a class=\"id\" href=\"#sin_port\">sin_port</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_id\">inet_id</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#write_seq\">write_seq</a> ^ <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#tcp_connect\">tcp_connect</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rt\">rt</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failure\">failure</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#failure\">failure</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This unhashes the socket and releases the local port,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * if necessary.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_set_state\">tcp_set_state</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#TCP_CLOSE\">TCP_CLOSE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip_rt_put\">ip_rt_put</a>(<a class=\"id\" href=\"#rt\">rt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_route_caps\">sk_route_caps</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_dport\">inet_dport</a> = 0;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tcp_v4_connect\">tcp_v4_connect</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This routine does path mtu discovery as defined in RFC1191.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#do_pmtu_discovery\">do_pmtu_discovery</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#iphdr\">iphdr</a> *<a class=\"id\" href=\"#iph\">iph</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mtu\">mtu</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We are not interested in TCP_LISTEN and open_requests (SYN-ACKs</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * send out by Linux are always &lt;576bytes so they should go through</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * unfragmented).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> == <a class=\"id\" href=\"#TCP_LISTEN\">TCP_LISTEN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We don't check in the destentry if pmtu discovery is forbidden</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * on this route. We just assume that no packet_to_big packets</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * are send back when pmtu discovery is not active.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * There is a small race when the user changes this flag in the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * route, but I think that's acceptable.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#__sk_dst_check\">__sk_dst_check</a>(<a class=\"id\" href=\"#sk\">sk</a>, 0)) == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#update_pmtu\">update_pmtu</a>(<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#mtu\">mtu</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Something is about to be wrong... Remember soft error</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * for the case, if this connection will not able to recover.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mtu\">mtu</a> &lt; <a class=\"id\" href=\"#dst_mtu\">dst_mtu</a>(<a class=\"id\" href=\"#dst\">dst</a>) && <a class=\"id\" href=\"#ip_dont_fragment\">ip_dont_fragment</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#dst\">dst</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_err_soft\">sk_err_soft</a> = <a class=\"id\" href=\"#EMSGSIZE\">EMSGSIZE</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mtu\">mtu</a> = <a class=\"id\" href=\"#dst_mtu\">dst_mtu</a>(<a class=\"id\" href=\"#dst\">dst</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#pmtudisc\">pmtudisc</a> != <a class=\"id\" href=\"#IP_PMTUDISC_DONT\">IP_PMTUDISC_DONT</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#icsk_pmtu_cookie\">icsk_pmtu_cookie</a> &gt; <a class=\"id\" href=\"#mtu\">mtu</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_sync_mss\">tcp_sync_mss</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#mtu\">mtu</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Resend the TCP packet because it's</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * clear that the old packet has been</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * dropped. This is the new \"fast\" path mtu</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * discovery.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_simple_retransmit\">tcp_simple_retransmit</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>} <span class=\"comment\">/* else let the usual retransmit timer handle it */</span>", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This routine is called by the ICMP module when it gets some</span>", 
"<span class=\"comment\"> * sort of error condition.  If err &lt; 0 then the socket should</span>", 
"<span class=\"comment\"> * be closed and the error returned to the user.  If err &gt; 0</span>", 
"<span class=\"comment\"> * it's just the icmp type &lt;&lt; 8 | icmp code.  After adjustment</span>", 
"<span class=\"comment\"> * header points to the first 8 bytes of the tcp header.  We need</span>", 
"<span class=\"comment\"> * to find the appropriate port.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The locking strategy used here is very \"optimistic\". When</span>", 
"<span class=\"comment\"> * someone else accesses the socket the ICMP is just dropped</span>", 
"<span class=\"comment\"> * and for some paths there is no check at all.</span>", 
"<span class=\"comment\"> * A more general error queue to queue errors for later handling</span>", 
"<span class=\"comment\"> * is probably better.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#tcp_v4_err\">tcp_v4_err</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#icmp_skb\">icmp_skb</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iphdr\">iphdr</a> *<a class=\"id\" href=\"#iph\">iph</a> = (struct <a class=\"id\" href=\"#iphdr\">iphdr</a> *)<a class=\"id\" href=\"#icmp_skb\">icmp_skb</a>-><a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a> *<a class=\"id\" href=\"#th\">th</a> = (struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a> *)(<a class=\"id\" href=\"#icmp_skb\">icmp_skb</a>-><a class=\"id\" href=\"#data\">data</a> + (<a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#ihl\">ihl</a> << 2));", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a> *<a class=\"id\" href=\"#icsk\">icsk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a>;", 
"<span class=\"ts\"/>const int <a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#icmp_hdr\">icmp_hdr</a>(<a class=\"id\" href=\"#icmp_skb\">icmp_skb</a>)-><a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/>const int <a class=\"id\" href=\"#code\">code</a> = <a class=\"id\" href=\"#icmp_hdr\">icmp_hdr</a>(<a class=\"id\" href=\"#icmp_skb\">icmp_skb</a>)-><a class=\"id\" href=\"#code\">code</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#seq\">seq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#remaining\">remaining</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#icmp_skb\">icmp_skb</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#icmp_skb\">icmp_skb</a>-><a class=\"id\" href=\"#len\">len</a> &lt; (<a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#ihl\">ihl</a> << 2) + 8) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ICMP_INC_STATS_BH\">ICMP_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ICMP_MIB_INERRORS\">ICMP_MIB_INERRORS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#inet_lookup\">inet_lookup</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#tcp_hashinfo\">tcp_hashinfo</a>, <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#dest\">dest</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#source\">source</a>, <a class=\"id\" href=\"#inet_iif\">inet_iif</a>(<a class=\"id\" href=\"#icmp_skb\">icmp_skb</a>));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sk\">sk</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ICMP_INC_STATS_BH\">ICMP_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ICMP_MIB_INERRORS\">ICMP_MIB_INERRORS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> == <a class=\"id\" href=\"#TCP_TIME_WAIT\">TCP_TIME_WAIT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_twsk_put\">inet_twsk_put</a>(<a class=\"id\" href=\"#inet_twsk\">inet_twsk</a>(<a class=\"id\" href=\"#sk\">sk</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh_lock_sock\">bh_lock_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* If too many ICMPs get dropped on busy</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * servers this needs to be solved differently.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sock_owned_by_user\">sock_owned_by_user</a>(<a class=\"id\" href=\"#sk\">sk</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NET_INC_STATS_BH\">NET_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#LINUX_MIB_LOCKDROPPEDICMPS\">LINUX_MIB_LOCKDROPPEDICMPS</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> == <a class=\"id\" href=\"#TCP_CLOSE\">TCP_CLOSE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#ttl\">ttl</a> &lt; <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#min_ttl\">min_ttl</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NET_INC_STATS_BH\">NET_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#LINUX_MIB_TCPMINTTLDROP\">LINUX_MIB_TCPMINTTLDROP</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icsk\">icsk</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq\">seq</a> = <a class=\"id\" href=\"#ntohl\">ntohl</a>(<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#seq\">seq</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> != <a class=\"id\" href=\"#TCP_LISTEN\">TCP_LISTEN</a> &&", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#between\">between</a>(<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_una\">snd_una</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_nxt\">snd_nxt</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NET_INC_STATS_BH\">NET_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#LINUX_MIB_OUTOFWINDOWICMPS\">LINUX_MIB_OUTOFWINDOWICMPS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ICMP_SOURCE_QUENCH\">ICMP_SOURCE_QUENCH</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Just silently ignore these. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ICMP_PARAMETERPROB\">ICMP_PARAMETERPROB</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#EPROTO\">EPROTO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ICMP_DEST_UNREACH\">ICMP_DEST_UNREACH</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#code\">code</a> &gt; <a class=\"id\" href=\"#NR_ICMP_UNREACH\">NR_ICMP_UNREACH</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#code\">code</a> == <a class=\"id\" href=\"#ICMP_FRAG_NEEDED\">ICMP_FRAG_NEEDED</a>) { <span class=\"comment\">/* PMTU discovery (RFC1191) */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#sock_owned_by_user\">sock_owned_by_user</a>(<a class=\"id\" href=\"#sk\">sk</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_pmtu_discovery\">do_pmtu_discovery</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#iph\">iph</a>, <a class=\"id\" href=\"#info\">info</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#icmp_err_convert\">icmp_err_convert</a>[<a class=\"id\" href=\"#code\">code</a>].<a class=\"id\" href=\"#errno\">errno</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* check if icmp_skb allows revert of backoff</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * (see draft-zimmermann-tcp-lcd) */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#code\">code</a> != <a class=\"id\" href=\"#ICMP_NET_UNREACH\">ICMP_NET_UNREACH</a> && <a class=\"id\" href=\"#code\">code</a> != <a class=\"id\" href=\"#ICMP_HOST_UNREACH\">ICMP_HOST_UNREACH</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#seq\">seq</a> != <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_una\">snd_una</a>  || !<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_retransmits\">icsk_retransmits</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_backoff\">icsk_backoff</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_backoff\">icsk_backoff</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#icsk_rto\">icsk_rto</a> = <a class=\"id\" href=\"#__tcp_set_rto\">__tcp_set_rto</a>(<a class=\"id\" href=\"#tp\">tp</a>) <<", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_backoff\">icsk_backoff</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_bound_rto\">tcp_bound_rto</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#tcp_write_queue_head\">tcp_write_queue_head</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#remaining\">remaining</a> = <a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_rto\">icsk_rto</a> - <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_rto\">icsk_rto</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_time_stamp\">tcp_time_stamp</a> - <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#when\">when</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#remaining\">remaining</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_csk_reset_xmit_timer\">inet_csk_reset_xmit_timer</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#ICSK_TIME_RETRANS\">ICSK_TIME_RETRANS</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#remaining\">remaining</a>, <a class=\"id\" href=\"#TCP_RTO_MAX\">TCP_RTO_MAX</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#sock_owned_by_user\">sock_owned_by_user</a>(<a class=\"id\" href=\"#sk\">sk</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* RTO revert clocked out retransmission,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * but socket is locked. Will defer. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_csk_reset_xmit_timer\">inet_csk_reset_xmit_timer</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#ICSK_TIME_RETRANS\">ICSK_TIME_RETRANS</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#HZ\">HZ</a>/20, <a class=\"id\" href=\"#TCP_RTO_MAX\">TCP_RTO_MAX</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* RTO revert clocked out retransmission.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Will retransmit now */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_retransmit_timer\">tcp_retransmit_timer</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ICMP_TIME_EXCEEDED\">ICMP_TIME_EXCEEDED</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#EHOSTUNREACH\">EHOSTUNREACH</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>, **<a class=\"id\" href=\"#prev\">prev</a>;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TCP_LISTEN\">TCP_LISTEN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sock_owned_by_user\">sock_owned_by_user</a>(<a class=\"id\" href=\"#sk\">sk</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a> = <a class=\"id\" href=\"#inet_csk_search_req\">inet_csk_search_req</a>(<a class=\"id\" href=\"#sk\">sk</a>, &amp;<a class=\"id\" href=\"#prev\">prev</a>, <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#dest\">dest</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#saddr\">saddr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#req\">req</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ICMPs are not backlogged, hence we cannot get</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   an established socket here.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#seq\">seq</a> != <a class=\"id\" href=\"#tcp_rsk\">tcp_rsk</a>(<a class=\"id\" href=\"#req\">req</a>)-><a class=\"id\" href=\"#snt_isn\">snt_isn</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NET_INC_STATS_BH\">NET_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#LINUX_MIB_OUTOFWINDOWICMPS\">LINUX_MIB_OUTOFWINDOWICMPS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Still in SYN_RECV, just remove it silently.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * There is no good way to pass the error to the newly</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * created socket, and POSIX does not want network</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * errors returned from accept().</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_csk_reqsk_queue_drop\">inet_csk_reqsk_queue_drop</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#prev\">prev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TCP_SYN_SENT\">TCP_SYN_SENT</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TCP_SYN_RECV\">TCP_SYN_RECV</a>:  <span class=\"comment\">/* Cannot happen.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       It can f.e. if SYNs crossed.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#sock_owned_by_user\">sock_owned_by_user</a>(<a class=\"id\" href=\"#sk\">sk</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_err\">sk_err</a> = <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_error_report\">sk_error_report</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_done\">tcp_done</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_err_soft\">sk_err_soft</a> = <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If we've already connected we will keep trying</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * until we time out, or the user gives up.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * rfc1122 4.2.3.9 allows to consider as hard errors</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * only PROTO_UNREACH and PORT_UNREACH (well, FRAG_FAILED too,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * but it is obsoleted by pmtu discovery).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Note, that in modern internet, where routing is unreliable</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and in each dark corner broken firewalls sit, sending random</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * errors ordered by their masters even this two messages finally lose</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * their original sense (even Linux sends invalid PORT_UNREACHs)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Now we are in compliance with RFCs.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>--ANK (980905)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sock_owned_by_user\">sock_owned_by_user</a>(<a class=\"id\" href=\"#sk\">sk</a>) && <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#recverr\">recverr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_err\">sk_err</a> = <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_error_report\">sk_error_report</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>} else<span class=\"ts\"/>{ <span class=\"comment\">/* Only an error on timeout */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_err_soft\">sk_err_soft</a> = <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh_unlock_sock\">bh_unlock_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_put\">sock_put</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__tcp_v4_send_check\">__tcp_v4_send_check</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#daddr\">daddr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a> *<a class=\"id\" href=\"#th\">th</a> = <a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> == <a class=\"id\" href=\"#CHECKSUM_PARTIAL\">CHECKSUM_PARTIAL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#check\">check</a> = ~<a class=\"id\" href=\"#tcp_v4_check\">tcp_v4_check</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum_start\">csum_start</a> = <a class=\"id\" href=\"#skb_transport_header\">skb_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>) - <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum_offset\">csum_offset</a> = <a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a>, <a class=\"id\" href=\"#check\">check</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#check\">check</a> = <a class=\"id\" href=\"#tcp_v4_check\">tcp_v4_check</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#daddr\">daddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#csum_partial\">csum_partial</a>(<a class=\"id\" href=\"#th\">th</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#doff\">doff</a> << 2,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a>));", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/* This routine computes an IPv4 TCP checksum. */</span>", 
"void <a class=\"id\" href=\"#tcp_v4_send_check\">tcp_v4_send_check</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__tcp_v4_send_check\">__tcp_v4_send_check</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_saddr\">inet_saddr</a>, <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_daddr\">inet_daddr</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tcp_v4_send_check\">tcp_v4_send_check</a>);", 
"", 
"int <a class=\"id\" href=\"#tcp_v4_gso_send_check\">tcp_v4_gso_send_check</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#iphdr\">iphdr</a> *<a class=\"id\" href=\"#iph\">iph</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a> *<a class=\"id\" href=\"#th\">th</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pskb_may_pull\">pskb_may_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(*<a class=\"id\" href=\"#th\">th</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a> = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#th\">th</a> = <a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#check\">check</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> = <a class=\"id\" href=\"#CHECKSUM_PARTIAL\">CHECKSUM_PARTIAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__tcp_v4_send_check\">__tcp_v4_send_check</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#daddr\">daddr</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This routine will send an RST to the other tcp.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Someone asks: why I NEVER use socket parameters (TOS, TTL etc.)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>      for reset.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Answer: if a packet caused RST, it is not for a socket</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>existing in our system, if it is matched to a socket,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>it is just duplicate segment or bug in other side's TCP.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>So that we build reply only basing on parameters</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>arrived with segment.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Exception: precedence violation. We do not implement it in any case.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#tcp_v4_send_reset\">tcp_v4_send_reset</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a> *<a class=\"id\" href=\"#th\">th</a> = <a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a> <a class=\"id\" href=\"#th\">th</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TCP_MD5SIG\">CONFIG_TCP_MD5SIG</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#opt\">opt</a>[(<a class=\"id\" href=\"#TCPOLEN_MD5SIG_ALIGNED\">TCPOLEN_MD5SIG_ALIGNED</a> >> 2)];", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#rep\">rep</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip_reply_arg\">ip_reply_arg</a> <a class=\"id\" href=\"#arg\">arg</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TCP_MD5SIG\">CONFIG_TCP_MD5SIG</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_md5sig_key\">tcp_md5sig_key</a> *<a class=\"id\" href=\"#key\">key</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Never send a reset in response to a reset. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#rst\">rst</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_rtable\">skb_rtable</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#rt_type\">rt_type</a> != <a class=\"id\" href=\"#RTN_LOCAL\">RTN_LOCAL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Swap the send and the receive. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#rep\">rep</a>, 0, sizeof(<a class=\"id\" href=\"#rep\">rep</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rep\">rep</a>.<a class=\"id\" href=\"#th\">th</a>.<a class=\"id\" href=\"#dest\">dest</a>   = <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#source\">source</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rep\">rep</a>.<a class=\"id\" href=\"#th\">th</a>.<a class=\"id\" href=\"#source\">source</a> = <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#dest\">dest</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rep\">rep</a>.<a class=\"id\" href=\"#th\">th</a>.<a class=\"id\" href=\"#doff\">doff</a>   = sizeof(struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a>) / 4;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rep\">rep</a>.<a class=\"id\" href=\"#th\">th</a>.<a class=\"id\" href=\"#rst\">rst</a>    = 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#ack\">ack</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rep\">rep</a>.<a class=\"id\" href=\"#th\">th</a>.<a class=\"id\" href=\"#seq\">seq</a> = <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#ack_seq\">ack_seq</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rep\">rep</a>.<a class=\"id\" href=\"#th\">th</a>.<a class=\"id\" href=\"#ack\">ack</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rep\">rep</a>.<a class=\"id\" href=\"#th\">th</a>.<a class=\"id\" href=\"#ack_seq\">ack_seq</a> = <a class=\"id\" href=\"#htonl\">htonl</a>(<a class=\"id\" href=\"#ntohl\">ntohl</a>(<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#seq\">seq</a>) + <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#syn\">syn</a> + <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#fin\">fin</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> - (<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#doff\">doff</a> << 2));", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#arg\">arg</a>, 0, sizeof(<a class=\"id\" href=\"#arg\">arg</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a>.<a class=\"id\" href=\"#iov\">iov</a>[0].<a class=\"id\" href=\"#iov_base\">iov_base</a> = (unsigned char *)&amp;<a class=\"id\" href=\"#rep\">rep</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a>.<a class=\"id\" href=\"#iov\">iov</a>[0].<a class=\"id\" href=\"#iov_len\">iov_len</a>  = sizeof(<a class=\"id\" href=\"#rep\">rep</a>.<a class=\"id\" href=\"#th\">th</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TCP_MD5SIG\">CONFIG_TCP_MD5SIG</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#sk\">sk</a> ? <a class=\"id\" href=\"#tcp_v4_md5_do_lookup\">tcp_v4_md5_do_lookup</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#daddr\">daddr</a>) : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#key\">key</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rep\">rep</a>.<a class=\"id\" href=\"#opt\">opt</a>[0] = <a class=\"id\" href=\"#htonl\">htonl</a>((<a class=\"id\" href=\"#TCPOPT_NOP\">TCPOPT_NOP</a> << 24) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (<a class=\"id\" href=\"#TCPOPT_NOP\">TCPOPT_NOP</a> << 16) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (<a class=\"id\" href=\"#TCPOPT_MD5SIG\">TCPOPT_MD5SIG</a> << 8) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#TCPOLEN_MD5SIG\">TCPOLEN_MD5SIG</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Update length and the length the header thinks exists */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a>.<a class=\"id\" href=\"#iov\">iov</a>[0].<a class=\"id\" href=\"#iov_len\">iov_len</a> += <a class=\"id\" href=\"#TCPOLEN_MD5SIG_ALIGNED\">TCPOLEN_MD5SIG_ALIGNED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rep\">rep</a>.<a class=\"id\" href=\"#th\">th</a>.<a class=\"id\" href=\"#doff\">doff</a> = <a class=\"id\" href=\"#arg\">arg</a>.<a class=\"id\" href=\"#iov\">iov</a>[0].<a class=\"id\" href=\"#iov_len\">iov_len</a> / 4;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_v4_md5_hash_hdr\">tcp_v4_md5_hash_hdr</a>((<a class=\"id\" href=\"#__u8\">__u8</a> *) &amp;<a class=\"id\" href=\"#rep\">rep</a>.<a class=\"id\" href=\"#opt\">opt</a>[1],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#saddr\">saddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#daddr\">daddr</a>, &amp;<a class=\"id\" href=\"#rep\">rep</a>.<a class=\"id\" href=\"#th\">th</a>);", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a>.<a class=\"id\" href=\"#csum\">csum</a> = <a class=\"id\" href=\"#csum_tcpudp_nofold\">csum_tcpudp_nofold</a>(<a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#daddr\">daddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#saddr\">saddr</a>, <span class=\"comment\">/* XXX */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#arg\">arg</a>.<a class=\"id\" href=\"#iov\">iov</a>[0].<a class=\"id\" href=\"#iov_len\">iov_len</a>, <a class=\"id\" href=\"#IPPROTO_TCP\">IPPROTO_TCP</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a>.<a class=\"id\" href=\"#csumoffset\">csumoffset</a> = <a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a>, <a class=\"id\" href=\"#check\">check</a>) / 2;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a>.<a class=\"id\" href=\"#flags\">flags</a> = (<a class=\"id\" href=\"#sk\">sk</a> && <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#transparent\">transparent</a>) ? <a class=\"id\" href=\"#IP_REPLY_ARG_NOSRCCHECK\">IP_REPLY_ARG_NOSRCCHECK</a> : 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip_send_reply\">ip_send_reply</a>(<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv4\">ipv4</a>.<a class=\"id\" href=\"#tcp_sock\">tcp_sock</a>, <a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      &amp;<a class=\"id\" href=\"#arg\">arg</a>, <a class=\"id\" href=\"#arg\">arg</a>.<a class=\"id\" href=\"#iov\">iov</a>[0].<a class=\"id\" href=\"#iov_len\">iov_len</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_INC_STATS_BH\">TCP_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#TCP_MIB_OUTSEGS\">TCP_MIB_OUTSEGS</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_INC_STATS_BH\">TCP_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#TCP_MIB_OUTRSTS\">TCP_MIB_OUTRSTS</a>);", 
"}", 
"", 
"<span class=\"comment\">/* The code following below sending ACKs in SYN-RECV and TIME-WAIT states</span>", 
"<span class=\"comment\">   outside socket context is ugly, certainly. What can I do?</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#tcp_v4_send_ack\">tcp_v4_send_ack</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ack\">ack</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#win\">win</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ts\">ts</a>, int <a class=\"id\" href=\"#oif\">oif</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#tcp_md5sig_key\">tcp_md5sig_key</a> *<a class=\"id\" href=\"#key\">key</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    int <a class=\"id\" href=\"#reply_flags\">reply_flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a> *<a class=\"id\" href=\"#th\">th</a> = <a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a> <a class=\"id\" href=\"#th\">th</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#opt\">opt</a>[(<a class=\"id\" href=\"#TCPOLEN_TSTAMP_ALIGNED\">TCPOLEN_TSTAMP_ALIGNED</a> >> 2)", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TCP_MD5SIG\">CONFIG_TCP_MD5SIG</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   + (<a class=\"id\" href=\"#TCPOLEN_MD5SIG_ALIGNED\">TCPOLEN_MD5SIG_ALIGNED</a> >> 2)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>];", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#rep\">rep</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip_reply_arg\">ip_reply_arg</a> <a class=\"id\" href=\"#arg\">arg</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#rep\">rep</a>.<a class=\"id\" href=\"#th\">th</a>, 0, sizeof(struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#arg\">arg</a>, 0, sizeof(<a class=\"id\" href=\"#arg\">arg</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a>.<a class=\"id\" href=\"#iov\">iov</a>[0].<a class=\"id\" href=\"#iov_base\">iov_base</a> = (unsigned char *)&amp;<a class=\"id\" href=\"#rep\">rep</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a>.<a class=\"id\" href=\"#iov\">iov</a>[0].<a class=\"id\" href=\"#iov_len\">iov_len</a>  = sizeof(<a class=\"id\" href=\"#rep\">rep</a>.<a class=\"id\" href=\"#th\">th</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ts\">ts</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rep\">rep</a>.<a class=\"id\" href=\"#opt\">opt</a>[0] = <a class=\"id\" href=\"#htonl\">htonl</a>((<a class=\"id\" href=\"#TCPOPT_NOP\">TCPOPT_NOP</a> << 24) | (<a class=\"id\" href=\"#TCPOPT_NOP\">TCPOPT_NOP</a> << 16) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (<a class=\"id\" href=\"#TCPOPT_TIMESTAMP\">TCPOPT_TIMESTAMP</a> << 8) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#TCPOLEN_TIMESTAMP\">TCPOLEN_TIMESTAMP</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rep\">rep</a>.<a class=\"id\" href=\"#opt\">opt</a>[1] = <a class=\"id\" href=\"#htonl\">htonl</a>(<a class=\"id\" href=\"#tcp_time_stamp\">tcp_time_stamp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rep\">rep</a>.<a class=\"id\" href=\"#opt\">opt</a>[2] = <a class=\"id\" href=\"#htonl\">htonl</a>(<a class=\"id\" href=\"#ts\">ts</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a>.<a class=\"id\" href=\"#iov\">iov</a>[0].<a class=\"id\" href=\"#iov_len\">iov_len</a> += <a class=\"id\" href=\"#TCPOLEN_TSTAMP_ALIGNED\">TCPOLEN_TSTAMP_ALIGNED</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Swap the send and the receive. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rep\">rep</a>.<a class=\"id\" href=\"#th\">th</a>.<a class=\"id\" href=\"#dest\">dest</a>    = <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#source\">source</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rep\">rep</a>.<a class=\"id\" href=\"#th\">th</a>.<a class=\"id\" href=\"#source\">source</a>  = <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#dest\">dest</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rep\">rep</a>.<a class=\"id\" href=\"#th\">th</a>.<a class=\"id\" href=\"#doff\">doff</a>    = <a class=\"id\" href=\"#arg\">arg</a>.<a class=\"id\" href=\"#iov\">iov</a>[0].<a class=\"id\" href=\"#iov_len\">iov_len</a> / 4;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rep\">rep</a>.<a class=\"id\" href=\"#th\">th</a>.<a class=\"id\" href=\"#seq\">seq</a>     = <a class=\"id\" href=\"#htonl\">htonl</a>(<a class=\"id\" href=\"#seq\">seq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rep\">rep</a>.<a class=\"id\" href=\"#th\">th</a>.<a class=\"id\" href=\"#ack_seq\">ack_seq</a> = <a class=\"id\" href=\"#htonl\">htonl</a>(<a class=\"id\" href=\"#ack\">ack</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rep\">rep</a>.<a class=\"id\" href=\"#th\">th</a>.<a class=\"id\" href=\"#ack\">ack</a>     = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rep\">rep</a>.<a class=\"id\" href=\"#th\">th</a>.<a class=\"id\" href=\"#window\">window</a>  = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#win\">win</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TCP_MD5SIG\">CONFIG_TCP_MD5SIG</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#key\">key</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#offset\">offset</a> = (<a class=\"id\" href=\"#ts\">ts</a>) ? 3 : 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rep\">rep</a>.<a class=\"id\" href=\"#opt\">opt</a>[<a class=\"id\" href=\"#offset\">offset</a>++] = <a class=\"id\" href=\"#htonl\">htonl</a>((<a class=\"id\" href=\"#TCPOPT_NOP\">TCPOPT_NOP</a> << 24) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (<a class=\"id\" href=\"#TCPOPT_NOP\">TCPOPT_NOP</a> << 16) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (<a class=\"id\" href=\"#TCPOPT_MD5SIG\">TCPOPT_MD5SIG</a> << 8) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#TCPOLEN_MD5SIG\">TCPOLEN_MD5SIG</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a>.<a class=\"id\" href=\"#iov\">iov</a>[0].<a class=\"id\" href=\"#iov_len\">iov_len</a> += <a class=\"id\" href=\"#TCPOLEN_MD5SIG_ALIGNED\">TCPOLEN_MD5SIG_ALIGNED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rep\">rep</a>.<a class=\"id\" href=\"#th\">th</a>.<a class=\"id\" href=\"#doff\">doff</a> = <a class=\"id\" href=\"#arg\">arg</a>.<a class=\"id\" href=\"#iov\">iov</a>[0].<a class=\"id\" href=\"#iov_len\">iov_len</a>/4;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_v4_md5_hash_hdr\">tcp_v4_md5_hash_hdr</a>((<a class=\"id\" href=\"#__u8\">__u8</a> *) &amp;<a class=\"id\" href=\"#rep\">rep</a>.<a class=\"id\" href=\"#opt\">opt</a>[<a class=\"id\" href=\"#offset\">offset</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#saddr\">saddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#daddr\">daddr</a>, &amp;<a class=\"id\" href=\"#rep\">rep</a>.<a class=\"id\" href=\"#th\">th</a>);", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#reply_flags\">reply_flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a>.<a class=\"id\" href=\"#csum\">csum</a> = <a class=\"id\" href=\"#csum_tcpudp_nofold\">csum_tcpudp_nofold</a>(<a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#daddr\">daddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#saddr\">saddr</a>, <span class=\"comment\">/* XXX */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#arg\">arg</a>.<a class=\"id\" href=\"#iov\">iov</a>[0].<a class=\"id\" href=\"#iov_len\">iov_len</a>, <a class=\"id\" href=\"#IPPROTO_TCP\">IPPROTO_TCP</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a>.<a class=\"id\" href=\"#csumoffset\">csumoffset</a> = <a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a>, <a class=\"id\" href=\"#check\">check</a>) / 2;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#oif\">oif</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a>.<a class=\"id\" href=\"#bound_dev_if\">bound_dev_if</a> = <a class=\"id\" href=\"#oif\">oif</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip_send_reply\">ip_send_reply</a>(<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv4\">ipv4</a>.<a class=\"id\" href=\"#tcp_sock\">tcp_sock</a>, <a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      &amp;<a class=\"id\" href=\"#arg\">arg</a>, <a class=\"id\" href=\"#arg\">arg</a>.<a class=\"id\" href=\"#iov\">iov</a>[0].<a class=\"id\" href=\"#iov_len\">iov_len</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_INC_STATS_BH\">TCP_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#TCP_MIB_OUTSEGS\">TCP_MIB_OUTSEGS</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#tcp_v4_timewait_ack\">tcp_v4_timewait_ack</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_timewait_sock\">inet_timewait_sock</a> *<a class=\"id\" href=\"#tw\">tw</a> = <a class=\"id\" href=\"#inet_twsk\">inet_twsk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_timewait_sock\">tcp_timewait_sock</a> *<a class=\"id\" href=\"#tcptw\">tcptw</a> = <a class=\"id\" href=\"#tcp_twsk\">tcp_twsk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_v4_send_ack\">tcp_v4_send_ack</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_snd_nxt\">tw_snd_nxt</a>, <a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_rcv_nxt\">tw_rcv_nxt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_rcv_wnd\">tw_rcv_wnd</a> >> <a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_rcv_wscale\">tw_rcv_wscale</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_ts_recent\">tw_ts_recent</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_bound_dev_if\">tw_bound_dev_if</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_twsk_md5_key\">tcp_twsk_md5_key</a>(<a class=\"id\" href=\"#tcptw\">tcptw</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_transparent\">tw_transparent</a> ? <a class=\"id\" href=\"#IP_REPLY_ARG_NOSRCCHECK\">IP_REPLY_ARG_NOSRCCHECK</a> : 0", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet_twsk_put\">inet_twsk_put</a>(<a class=\"id\" href=\"#tw\">tw</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#tcp_v4_reqsk_send_ack\">tcp_v4_reqsk_send_ack</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_v4_send_ack\">tcp_v4_send_ack</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#tcp_rsk\">tcp_rsk</a>(<a class=\"id\" href=\"#req\">req</a>)-><a class=\"id\" href=\"#snt_isn\">snt_isn</a> + 1,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_rsk\">tcp_rsk</a>(<a class=\"id\" href=\"#req\">req</a>)-><a class=\"id\" href=\"#rcv_isn\">rcv_isn</a> + 1, <a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#rcv_wnd\">rcv_wnd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#ts_recent\">ts_recent</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_v4_md5_do_lookup\">tcp_v4_md5_do_lookup</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#daddr\">daddr</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_rsk\">inet_rsk</a>(<a class=\"id\" href=\"#req\">req</a>)-><a class=\"id\" href=\"#no_srccheck\">no_srccheck</a> ? <a class=\"id\" href=\"#IP_REPLY_ARG_NOSRCCHECK\">IP_REPLY_ARG_NOSRCCHECK</a> : 0);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Send a SYN-ACK after having received a SYN.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This still operates on a request_sock only, not on a big</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>socket.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#tcp_v4_send_synack\">tcp_v4_send_synack</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#request_values\">request_values</a> *<a class=\"id\" href=\"#rvp\">rvp</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#inet_request_sock\">inet_request_sock</a> *<a class=\"id\" href=\"#ireq\">ireq</a> = <a class=\"id\" href=\"#inet_rsk\">inet_rsk</a>(<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -1;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> * <a class=\"id\" href=\"#skb\">skb</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* First, grab a route. */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dst\">dst</a> && (<a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#inet_csk_route_req\">inet_csk_route_req</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#req\">req</a>)) == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#tcp_make_synack\">tcp_make_synack</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#rvp\">rvp</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__tcp_v4_send_check\">__tcp_v4_send_check</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#loc_addr\">loc_addr</a>, <a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#rmt_addr\">rmt_addr</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ip_build_and_send_pkt\">ip_build_and_send_pkt</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#loc_addr\">loc_addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#rmt_addr\">rmt_addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#opt\">opt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#net_xmit_eval\">net_xmit_eval</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst_release\">dst_release</a>(<a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#tcp_v4_rtx_synack\">tcp_v4_rtx_synack</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#request_values\">request_values</a> *<a class=\"id\" href=\"#rvp\">rvp</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_INC_STATS_BH\">TCP_INC_STATS_BH</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#TCP_MIB_RETRANSSEGS\">TCP_MIB_RETRANSSEGS</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tcp_v4_send_synack\">tcp_v4_send_synack</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#rvp\">rvp</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>IPv4 request_sock destructor.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#tcp_v4_reqsk_destructor\">tcp_v4_reqsk_destructor</a>(struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#inet_rsk\">inet_rsk</a>(<a class=\"id\" href=\"#req\">req</a>)-><a class=\"id\" href=\"#opt\">opt</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#syn_flood_warning\">syn_flood_warning</a>(const struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#msg\">msg</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYN_COOKIES\">CONFIG_SYN_COOKIES</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sysctl_tcp_syncookies\">sysctl_tcp_syncookies</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a> = \"Sending cookies\";", 
"<span class=\"ts\"/>else", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a> = \"Dropping request\";", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_info\">pr_info</a>(\"TCP: Possible SYN flooding on port %d. %s.\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#dest\">dest</a>), <a class=\"id\" href=\"#msg\">msg</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Save and compile IPv4 options into the request_sock if needed.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#ip_options\">ip_options</a> *<a class=\"id\" href=\"#tcp_v4_save_options\">tcp_v4_save_options</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip_options\">ip_options</a> *<a class=\"id\" href=\"#opt\">opt</a> = &amp;(<a class=\"id\" href=\"#IPCB\">IPCB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#opt\">opt</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip_options\">ip_options</a> *<a class=\"id\" href=\"#dopt\">dopt</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#opt\">opt</a> && <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#optlen\">optlen</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#opt_size\">opt_size</a> = <a class=\"id\" href=\"#optlength\">optlength</a>(<a class=\"id\" href=\"#opt\">opt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dopt\">dopt</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#opt_size\">opt_size</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dopt\">dopt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ip_options_echo\">ip_options_echo</a>(<a class=\"id\" href=\"#dopt\">dopt</a>, <a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#dopt\">dopt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dopt\">dopt</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dopt\">dopt</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TCP_MD5SIG\">CONFIG_TCP_MD5SIG</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * RFC2385 MD5 checksumming requires a mapping of</span>", 
"<span class=\"comment\"> * IP address-&gt;MD5 Key.</span>", 
"<span class=\"comment\"> * We need to maintain these in the sk structure.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/* Find the Key structure for an address.  */</span>", 
"static struct <a class=\"id\" href=\"#tcp_md5sig_key\">tcp_md5sig_key</a> *", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_v4_md5_do_lookup\">tcp_v4_md5_do_lookup</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#md5sig_info\">md5sig_info</a> || !<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#md5sig_info\">md5sig_info</a>-><a class=\"id\" href=\"#entries4\">entries4</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#md5sig_info\">md5sig_info</a>-><a class=\"id\" href=\"#entries4\">entries4</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#md5sig_info\">md5sig_info</a>-><a class=\"id\" href=\"#keys4\">keys4</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#addr\">addr</a> == <a class=\"id\" href=\"#addr\">addr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#md5sig_info\">md5sig_info</a>-><a class=\"id\" href=\"#keys4\">keys4</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#base\">base</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#tcp_md5sig_key\">tcp_md5sig_key</a> *<a class=\"id\" href=\"#tcp_v4_md5_lookup\">tcp_v4_md5_lookup</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#addr_sk\">addr_sk</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tcp_v4_md5_do_lookup\">tcp_v4_md5_do_lookup</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#addr_sk\">addr_sk</a>)-><a class=\"id\" href=\"#inet_daddr\">inet_daddr</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tcp_v4_md5_lookup\">tcp_v4_md5_lookup</a>);", 
"", 
"static struct <a class=\"id\" href=\"#tcp_md5sig_key\">tcp_md5sig_key</a> *<a class=\"id\" href=\"#tcp_v4_reqsk_md5_lookup\">tcp_v4_reqsk_md5_lookup</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tcp_v4_md5_do_lookup\">tcp_v4_md5_do_lookup</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#inet_rsk\">inet_rsk</a>(<a class=\"id\" href=\"#req\">req</a>)-><a class=\"id\" href=\"#rmt_addr\">rmt_addr</a>);", 
"}", 
"", 
"<span class=\"comment\">/* This can be called on a newly created socket, from other files */</span>", 
"int <a class=\"id\" href=\"#tcp_v4_md5_do_add\">tcp_v4_md5_do_add</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#newkey\">newkey</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#newkeylen\">newkeylen</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Add Key to the list */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_md5sig_key\">tcp_md5sig_key</a> *<a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp4_md5sig_key\">tcp4_md5sig_key</a> *<a class=\"id\" href=\"#keys\">keys</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#tcp_v4_md5_do_lookup\">tcp_v4_md5_do_lookup</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#key\">key</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Pre-existing entry - just update that one. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#key\">key</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#newkey\">newkey</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#keylen\">keylen</a> = <a class=\"id\" href=\"#newkeylen\">newkeylen</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_md5sig_info\">tcp_md5sig_info</a> *<a class=\"id\" href=\"#md5sig\">md5sig</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#md5sig_info\">md5sig_info</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#md5sig_info\">md5sig_info</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#md5sig_info\">md5sig_info</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#md5sig_info\">md5sig_info</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#newkey\">newkey</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_nocaps_add\">sk_nocaps_add</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#NETIF_F_GSO_MASK\">NETIF_F_GSO_MASK</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_alloc_md5sig_pool\">tcp_alloc_md5sig_pool</a>(<a class=\"id\" href=\"#sk\">sk</a>) == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#newkey\">newkey</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#md5sig\">md5sig</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#md5sig_info\">md5sig_info</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#md5sig\">md5sig</a>-><a class=\"id\" href=\"#alloced4\">alloced4</a> == <a class=\"id\" href=\"#md5sig\">md5sig</a>-><a class=\"id\" href=\"#entries4\">entries4</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#keys\">keys</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>((sizeof(*<a class=\"id\" href=\"#keys\">keys</a>) *", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#md5sig\">md5sig</a>-><a class=\"id\" href=\"#entries4\">entries4</a> + 1)), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#keys\">keys</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#newkey\">newkey</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_free_md5sig_pool\">tcp_free_md5sig_pool</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#md5sig\">md5sig</a>-><a class=\"id\" href=\"#entries4\">entries4</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#keys\">keys</a>, <a class=\"id\" href=\"#md5sig\">md5sig</a>-><a class=\"id\" href=\"#keys4\">keys4</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       sizeof(*<a class=\"id\" href=\"#keys\">keys</a>) * <a class=\"id\" href=\"#md5sig\">md5sig</a>-><a class=\"id\" href=\"#entries4\">entries4</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Free old key list, and reference new one */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#md5sig\">md5sig</a>-><a class=\"id\" href=\"#keys4\">keys4</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#md5sig\">md5sig</a>-><a class=\"id\" href=\"#keys4\">keys4</a> = <a class=\"id\" href=\"#keys\">keys</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#md5sig\">md5sig</a>-><a class=\"id\" href=\"#alloced4\">alloced4</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#md5sig\">md5sig</a>-><a class=\"id\" href=\"#entries4\">entries4</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#md5sig\">md5sig</a>-><a class=\"id\" href=\"#keys4\">keys4</a>[<a class=\"id\" href=\"#md5sig\">md5sig</a>-><a class=\"id\" href=\"#entries4\">entries4</a> - 1].<a class=\"id\" href=\"#addr\">addr</a>        = <a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#md5sig\">md5sig</a>-><a class=\"id\" href=\"#keys4\">keys4</a>[<a class=\"id\" href=\"#md5sig\">md5sig</a>-><a class=\"id\" href=\"#entries4\">entries4</a> - 1].<a class=\"id\" href=\"#base\">base</a>.<a class=\"id\" href=\"#key\">key</a>    = <a class=\"id\" href=\"#newkey\">newkey</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#md5sig\">md5sig</a>-><a class=\"id\" href=\"#keys4\">keys4</a>[<a class=\"id\" href=\"#md5sig\">md5sig</a>-><a class=\"id\" href=\"#entries4\">entries4</a> - 1].<a class=\"id\" href=\"#base\">base</a>.<a class=\"id\" href=\"#keylen\">keylen</a> = <a class=\"id\" href=\"#newkeylen\">newkeylen</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tcp_v4_md5_do_add\">tcp_v4_md5_do_add</a>);", 
"", 
"static int <a class=\"id\" href=\"#tcp_v4_md5_add_func\">tcp_v4_md5_add_func</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#addr_sk\">addr_sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#newkey\">newkey</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#newkeylen\">newkeylen</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tcp_v4_md5_do_add\">tcp_v4_md5_do_add</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#addr_sk\">addr_sk</a>)-><a class=\"id\" href=\"#inet_daddr\">inet_daddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#newkey\">newkey</a>, <a class=\"id\" href=\"#newkeylen\">newkeylen</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#tcp_v4_md5_do_del\">tcp_v4_md5_do_del</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#md5sig_info\">md5sig_info</a>-><a class=\"id\" href=\"#entries4\">entries4</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#md5sig_info\">md5sig_info</a>-><a class=\"id\" href=\"#keys4\">keys4</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#addr\">addr</a> == <a class=\"id\" href=\"#addr\">addr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Free the key */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#md5sig_info\">md5sig_info</a>-><a class=\"id\" href=\"#keys4\">keys4</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#base\">base</a>.<a class=\"id\" href=\"#key\">key</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#md5sig_info\">md5sig_info</a>-><a class=\"id\" href=\"#entries4\">entries4</a>--;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#md5sig_info\">md5sig_info</a>-><a class=\"id\" href=\"#entries4\">entries4</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#md5sig_info\">md5sig_info</a>-><a class=\"id\" href=\"#keys4\">keys4</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#md5sig_info\">md5sig_info</a>-><a class=\"id\" href=\"#keys4\">keys4</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#md5sig_info\">md5sig_info</a>-><a class=\"id\" href=\"#alloced4\">alloced4</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#md5sig_info\">md5sig_info</a>-><a class=\"id\" href=\"#entries4\">entries4</a> != <a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Need to do some manipulation */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memmove\">memmove</a>(&amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#md5sig_info\">md5sig_info</a>-><a class=\"id\" href=\"#keys4\">keys4</a>[<a class=\"id\" href=\"#i\">i</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#md5sig_info\">md5sig_info</a>-><a class=\"id\" href=\"#keys4\">keys4</a>[<a class=\"id\" href=\"#i\">i</a>+1],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#md5sig_info\">md5sig_info</a>-><a class=\"id\" href=\"#entries4\">entries4</a> - <a class=\"id\" href=\"#i\">i</a>) *", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> sizeof(struct <a class=\"id\" href=\"#tcp4_md5sig_key\">tcp4_md5sig_key</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_free_md5sig_pool\">tcp_free_md5sig_pool</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tcp_v4_md5_do_del\">tcp_v4_md5_do_del</a>);", 
"", 
"static void <a class=\"id\" href=\"#tcp_v4_clear_md5_list\">tcp_v4_clear_md5_list</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Free each key, then the set of key keys,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the crypto element, and then decrement our</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * hold on the last resort crypto.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#md5sig_info\">md5sig_info</a>-><a class=\"id\" href=\"#entries4\">entries4</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#md5sig_info\">md5sig_info</a>-><a class=\"id\" href=\"#entries4\">entries4</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#md5sig_info\">md5sig_info</a>-><a class=\"id\" href=\"#keys4\">keys4</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#base\">base</a>.<a class=\"id\" href=\"#key\">key</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#md5sig_info\">md5sig_info</a>-><a class=\"id\" href=\"#entries4\">entries4</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_free_md5sig_pool\">tcp_free_md5sig_pool</a>();", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#md5sig_info\">md5sig_info</a>-><a class=\"id\" href=\"#keys4\">keys4</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#md5sig_info\">md5sig_info</a>-><a class=\"id\" href=\"#keys4\">keys4</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#md5sig_info\">md5sig_info</a>-><a class=\"id\" href=\"#keys4\">keys4</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#md5sig_info\">md5sig_info</a>-><a class=\"id\" href=\"#alloced4\">alloced4</a>  = 0;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#tcp_v4_parse_md5_keys\">tcp_v4_parse_md5_keys</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optval\">optval</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> int <a class=\"id\" href=\"#optlen\">optlen</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_md5sig\">tcp_md5sig</a> <a class=\"id\" href=\"#cmd\">cmd</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_in\">sockaddr_in</a> *<a class=\"id\" href=\"#sin\">sin</a> = (struct <a class=\"id\" href=\"#sockaddr_in\">sockaddr_in</a> *)&amp;<a class=\"id\" href=\"#cmd\">cmd</a>.<a class=\"id\" href=\"#tcpm_addr\">tcpm_addr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#newkey\">newkey</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#optlen\">optlen</a> &lt; sizeof(<a class=\"id\" href=\"#cmd\">cmd</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#optval\">optval</a>, sizeof(<a class=\"id\" href=\"#cmd\">cmd</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sin\">sin</a>-><a class=\"id\" href=\"#sin_family\">sin_family</a> != <a class=\"id\" href=\"#AF_INET\">AF_INET</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cmd\">cmd</a>.<a class=\"id\" href=\"#tcpm_key\">tcpm_key</a> || !<a class=\"id\" href=\"#cmd\">cmd</a>.<a class=\"id\" href=\"#tcpm_keylen\">tcpm_keylen</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#md5sig_info\">md5sig_info</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#tcp_v4_md5_do_del\">tcp_v4_md5_do_del</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#sin\">sin</a>-><a class=\"id\" href=\"#sin_addr\">sin_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cmd\">cmd</a>.<a class=\"id\" href=\"#tcpm_keylen\">tcpm_keylen</a> &gt; <a class=\"id\" href=\"#TCP_MD5SIG_MAXKEYLEN\">TCP_MD5SIG_MAXKEYLEN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#md5sig_info\">md5sig_info</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_md5sig_info\">tcp_md5sig_info</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#p\">p</a>), <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_allocation\">sk_allocation</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#md5sig_info\">md5sig_info</a> = <a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_nocaps_add\">sk_nocaps_add</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#NETIF_F_GSO_MASK\">NETIF_F_GSO_MASK</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newkey\">newkey</a> = <a class=\"id\" href=\"#kmemdup\">kmemdup</a>(<a class=\"id\" href=\"#cmd\">cmd</a>.<a class=\"id\" href=\"#tcpm_key\">tcpm_key</a>, <a class=\"id\" href=\"#cmd\">cmd</a>.<a class=\"id\" href=\"#tcpm_keylen\">tcpm_keylen</a>, <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_allocation\">sk_allocation</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#newkey\">newkey</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tcp_v4_md5_do_add\">tcp_v4_md5_do_add</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#sin\">sin</a>-><a class=\"id\" href=\"#sin_addr\">sin_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#newkey\">newkey</a>, <a class=\"id\" href=\"#cmd\">cmd</a>.<a class=\"id\" href=\"#tcpm_keylen\">tcpm_keylen</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#tcp_v4_md5_hash_pseudoheader\">tcp_v4_md5_hash_pseudoheader</a>(struct <a class=\"id\" href=\"#tcp_md5sig_pool\">tcp_md5sig_pool</a> *<a class=\"id\" href=\"#hp\">hp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#saddr\">saddr</a>, int <a class=\"id\" href=\"#nbytes\">nbytes</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp4_pseudohdr\">tcp4_pseudohdr</a> *<a class=\"id\" href=\"#bp\">bp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> <a class=\"id\" href=\"#sg\">sg</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bp\">bp</a> = &amp;<a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#md5_blk\">md5_blk</a>.<a class=\"id\" href=\"#ip4\">ip4</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 1. the TCP pseudo-header (in the order: source IP address,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * destination IP address, zero-padded protocol number, and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * segment length)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bp\">bp</a>-><a class=\"id\" href=\"#saddr\">saddr</a> = <a class=\"id\" href=\"#saddr\">saddr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bp\">bp</a>-><a class=\"id\" href=\"#daddr\">daddr</a> = <a class=\"id\" href=\"#daddr\">daddr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bp\">bp</a>-><a class=\"id\" href=\"#pad\">pad</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bp\">bp</a>-><a class=\"id\" href=\"#protocol\">protocol</a> = <a class=\"id\" href=\"#IPPROTO_TCP\">IPPROTO_TCP</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bp\">bp</a>-><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(<a class=\"id\" href=\"#nbytes\">nbytes</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg_init_one\">sg_init_one</a>(&amp;<a class=\"id\" href=\"#sg\">sg</a>, <a class=\"id\" href=\"#bp\">bp</a>, sizeof(*<a class=\"id\" href=\"#bp\">bp</a>));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_hash_update\">crypto_hash_update</a>(&amp;<a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#md5_desc\">md5_desc</a>, &amp;<a class=\"id\" href=\"#sg\">sg</a>, sizeof(*<a class=\"id\" href=\"#bp\">bp</a>));", 
"}", 
"", 
"static int <a class=\"id\" href=\"#tcp_v4_md5_hash_hdr\">tcp_v4_md5_hash_hdr</a>(char *<a class=\"id\" href=\"#md5_hash\">md5_hash</a>, struct <a class=\"id\" href=\"#tcp_md5sig_key\">tcp_md5sig_key</a> *<a class=\"id\" href=\"#key\">key</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#saddr\">saddr</a>, struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a> *<a class=\"id\" href=\"#th\">th</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_md5sig_pool\">tcp_md5sig_pool</a> *<a class=\"id\" href=\"#hp\">hp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hash_desc\">hash_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hp\">hp</a> = <a class=\"id\" href=\"#tcp_get_md5sig_pool\">tcp_get_md5sig_pool</a>();", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hp\">hp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#clear_hash_noput\">clear_hash_noput</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a> = &amp;<a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#md5_desc\">md5_desc</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#crypto_hash_init\">crypto_hash_init</a>(<a class=\"id\" href=\"#desc\">desc</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#clear_hash\">clear_hash</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_v4_md5_hash_pseudoheader\">tcp_v4_md5_hash_pseudoheader</a>(<a class=\"id\" href=\"#hp\">hp</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#doff\">doff</a> << 2))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#clear_hash\">clear_hash</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_md5_hash_header\">tcp_md5_hash_header</a>(<a class=\"id\" href=\"#hp\">hp</a>, <a class=\"id\" href=\"#th\">th</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#clear_hash\">clear_hash</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_md5_hash_key\">tcp_md5_hash_key</a>(<a class=\"id\" href=\"#hp\">hp</a>, <a class=\"id\" href=\"#key\">key</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#clear_hash\">clear_hash</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#crypto_hash_final\">crypto_hash_final</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#md5_hash\">md5_hash</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#clear_hash\">clear_hash</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_put_md5sig_pool\">tcp_put_md5sig_pool</a>();", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#clear_hash\">clear_hash</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_put_md5sig_pool\">tcp_put_md5sig_pool</a>();", 
"<a class=\"id\" href=\"#clear_hash_noput\">clear_hash_noput</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#md5_hash\">md5_hash</a>, 0, 16);", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"int <a class=\"id\" href=\"#tcp_v4_md5_hash_skb\">tcp_v4_md5_hash_skb</a>(char *<a class=\"id\" href=\"#md5_hash\">md5_hash</a>, struct <a class=\"id\" href=\"#tcp_md5sig_key\">tcp_md5sig_key</a> *<a class=\"id\" href=\"#key\">key</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_md5sig_pool\">tcp_md5sig_pool</a> *<a class=\"id\" href=\"#hp\">hp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hash_desc\">hash_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a> *<a class=\"id\" href=\"#th\">th</a> = <a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#daddr\">daddr</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#saddr\">saddr</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#inet_saddr\">inet_saddr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#daddr\">daddr</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#inet_daddr\">inet_daddr</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#req\">req</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#saddr\">saddr</a> = <a class=\"id\" href=\"#inet_rsk\">inet_rsk</a>(<a class=\"id\" href=\"#req\">req</a>)-><a class=\"id\" href=\"#loc_addr\">loc_addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#daddr\">daddr</a> = <a class=\"id\" href=\"#inet_rsk\">inet_rsk</a>(<a class=\"id\" href=\"#req\">req</a>)-><a class=\"id\" href=\"#rmt_addr\">rmt_addr</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#iphdr\">iphdr</a> *<a class=\"id\" href=\"#iph\">iph</a> = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#saddr\">saddr</a> = <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#saddr\">saddr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#daddr\">daddr</a> = <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#daddr\">daddr</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hp\">hp</a> = <a class=\"id\" href=\"#tcp_get_md5sig_pool\">tcp_get_md5sig_pool</a>();", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hp\">hp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#clear_hash_noput\">clear_hash_noput</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a> = &amp;<a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#md5_desc\">md5_desc</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#crypto_hash_init\">crypto_hash_init</a>(<a class=\"id\" href=\"#desc\">desc</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#clear_hash\">clear_hash</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_v4_md5_hash_pseudoheader\">tcp_v4_md5_hash_pseudoheader</a>(<a class=\"id\" href=\"#hp\">hp</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#clear_hash\">clear_hash</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_md5_hash_header\">tcp_md5_hash_header</a>(<a class=\"id\" href=\"#hp\">hp</a>, <a class=\"id\" href=\"#th\">th</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#clear_hash\">clear_hash</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_md5_hash_skb_data\">tcp_md5_hash_skb_data</a>(<a class=\"id\" href=\"#hp\">hp</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#doff\">doff</a> << 2))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#clear_hash\">clear_hash</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_md5_hash_key\">tcp_md5_hash_key</a>(<a class=\"id\" href=\"#hp\">hp</a>, <a class=\"id\" href=\"#key\">key</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#clear_hash\">clear_hash</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#crypto_hash_final\">crypto_hash_final</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#md5_hash\">md5_hash</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#clear_hash\">clear_hash</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_put_md5sig_pool\">tcp_put_md5sig_pool</a>();", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#clear_hash\">clear_hash</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_put_md5sig_pool\">tcp_put_md5sig_pool</a>();", 
"<a class=\"id\" href=\"#clear_hash_noput\">clear_hash_noput</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#md5_hash\">md5_hash</a>, 0, 16);", 
"<span class=\"ts\"/>return 1;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tcp_v4_md5_hash_skb\">tcp_v4_md5_hash_skb</a>);", 
"", 
"static int <a class=\"id\" href=\"#tcp_v4_inbound_md5_hash\">tcp_v4_inbound_md5_hash</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This gets called for each TCP segment that arrives</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so we want to be efficient.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We have 3 drop cases:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * o No MD5 hash and one expected.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * o MD5 hash and we're not expecting one.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * o MD5 hash and its wrong.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a> *<a class=\"id\" href=\"#hash_location\">hash_location</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_md5sig_key\">tcp_md5sig_key</a> *<a class=\"id\" href=\"#hash_expected\">hash_expected</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#iphdr\">iphdr</a> *<a class=\"id\" href=\"#iph\">iph</a> = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a> *<a class=\"id\" href=\"#th\">th</a> = <a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#genhash\">genhash</a>;", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#newhash\">newhash</a>[16];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hash_expected\">hash_expected</a> = <a class=\"id\" href=\"#tcp_v4_md5_do_lookup\">tcp_v4_md5_do_lookup</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#saddr\">saddr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hash_location\">hash_location</a> = <a class=\"id\" href=\"#tcp_parse_md5sig_option\">tcp_parse_md5sig_option</a>(<a class=\"id\" href=\"#th\">th</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We've parsed the options - do we have a hash? */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hash_expected\">hash_expected</a> && !<a class=\"id\" href=\"#hash_location\">hash_location</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hash_expected\">hash_expected</a> && !<a class=\"id\" href=\"#hash_location\">hash_location</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NET_INC_STATS_BH\">NET_INC_STATS_BH</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#LINUX_MIB_TCPMD5NOTFOUND\">LINUX_MIB_TCPMD5NOTFOUND</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hash_expected\">hash_expected</a> && <a class=\"id\" href=\"#hash_location\">hash_location</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NET_INC_STATS_BH\">NET_INC_STATS_BH</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#LINUX_MIB_TCPMD5UNEXPECTED\">LINUX_MIB_TCPMD5UNEXPECTED</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Okay, so this is hash_expected and hash_location -</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so we need to calculate the checksum.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#genhash\">genhash</a> = <a class=\"id\" href=\"#tcp_v4_md5_hash_skb\">tcp_v4_md5_hash_skb</a>(<a class=\"id\" href=\"#newhash\">newhash</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#hash_expected\">hash_expected</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#genhash\">genhash</a> || <a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#hash_location\">hash_location</a>, <a class=\"id\" href=\"#newhash\">newhash</a>, 16) != 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#net_ratelimit\">net_ratelimit</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"MD5 Hash failed for (%pI4, %d)->(%pI4, %d)%s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#source\">source</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#dest\">dest</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#genhash\">genhash</a> ? \" tcp_v4_calc_md5_hash failed\" : \"\");", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"struct <a class=\"id\" href=\"#request_sock_ops\">request_sock_ops</a> <a class=\"id\" href=\"#tcp_request_sock_ops\">tcp_request_sock_ops</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#family\">family</a><span class=\"ts\"/><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#PF_INET\">PF_INET</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#obj_size\">obj_size</a><span class=\"ts\"/>=<span class=\"ts\"/>sizeof(struct <a class=\"id\" href=\"#tcp_request_sock\">tcp_request_sock</a>),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#rtx_syn_ack\">rtx_syn_ack</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#tcp_v4_rtx_synack\">tcp_v4_rtx_synack</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#send_ack\">send_ack</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#tcp_v4_reqsk_send_ack\">tcp_v4_reqsk_send_ack</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#destructor\">destructor</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#tcp_v4_reqsk_destructor\">tcp_v4_reqsk_destructor</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#send_reset\">send_reset</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#tcp_v4_send_reset\">tcp_v4_send_reset</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#syn_ack_timeout\">syn_ack_timeout</a> = <span class=\"ts\"/><a class=\"id\" href=\"#tcp_syn_ack_timeout\">tcp_syn_ack_timeout</a>,", 
"};", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TCP_MD5SIG\">CONFIG_TCP_MD5SIG</a>", 
"static const struct <a class=\"id\" href=\"#tcp_request_sock_ops\">tcp_request_sock_ops</a> <a class=\"id\" href=\"#tcp_request_sock_ipv4_ops\">tcp_request_sock_ipv4_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#md5_lookup\">md5_lookup</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#tcp_v4_reqsk_md5_lookup\">tcp_v4_reqsk_md5_lookup</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#calc_md5_hash\">calc_md5_hash</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#tcp_v4_md5_hash_skb\">tcp_v4_md5_hash_skb</a>,", 
"};", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static struct <a class=\"id\" href=\"#timewait_sock_ops\">timewait_sock_ops</a> <a class=\"id\" href=\"#tcp_timewait_sock_ops\">tcp_timewait_sock_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#twsk_obj_size\">twsk_obj_size</a><span class=\"ts\"/>= sizeof(struct <a class=\"id\" href=\"#tcp_timewait_sock\">tcp_timewait_sock</a>),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#twsk_unique\">twsk_unique</a><span class=\"ts\"/>= <a class=\"id\" href=\"#tcp_twsk_unique\">tcp_twsk_unique</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#twsk_destructor\">twsk_destructor</a>= <a class=\"id\" href=\"#tcp_twsk_destructor\">tcp_twsk_destructor</a>,", 
"};", 
"", 
"int <a class=\"id\" href=\"#tcp_v4_conn_request\">tcp_v4_conn_request</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_extend_values\">tcp_extend_values</a> <a class=\"id\" href=\"#tmp_ext\">tmp_ext</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_options_received\">tcp_options_received</a> <a class=\"id\" href=\"#tmp_opt\">tmp_opt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#hash_location\">hash_location</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_request_sock\">inet_request_sock</a> *<a class=\"id\" href=\"#ireq\">ireq</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#saddr\">saddr</a> = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#saddr\">saddr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#daddr\">daddr</a> = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#daddr\">daddr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#isn\">isn</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#when\">when</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYN_COOKIES\">CONFIG_SYN_COOKIES</a>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#want_cookie\">want_cookie</a> = 0;", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#want_cookie\">want_cookie</a> 0 <span class=\"comment\">/* Argh, why doesn't gcc optimize this :( */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Never answer to SYNs send to broadcast or multicast */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_rtable\">skb_rtable</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#rt_flags\">rt_flags</a> &amp; (<a class=\"id\" href=\"#RTCF_BROADCAST\">RTCF_BROADCAST</a> | <a class=\"id\" href=\"#RTCF_MULTICAST\">RTCF_MULTICAST</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* TW buckets are converted to open requests without</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * limitations, they conserve resources and peer is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * evidently real one.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inet_csk_reqsk_queue_is_full\">inet_csk_reqsk_queue_is_full</a>(<a class=\"id\" href=\"#sk\">sk</a>) && !<a class=\"id\" href=\"#isn\">isn</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#net_ratelimit\">net_ratelimit</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#syn_flood_warning\">syn_flood_warning</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYN_COOKIES\">CONFIG_SYN_COOKIES</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sysctl_tcp_syncookies\">sysctl_tcp_syncookies</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#want_cookie\">want_cookie</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Accept backlog is full. If we have already queued enough</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * of warm entries in syn queue, drop request. It is better than</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * clogging syn queue with openreqs with exponentially increasing</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * timeout.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk_acceptq_is_full\">sk_acceptq_is_full</a>(<a class=\"id\" href=\"#sk\">sk</a>) && <a class=\"id\" href=\"#inet_csk_reqsk_queue_young\">inet_csk_reqsk_queue_young</a>(<a class=\"id\" href=\"#sk\">sk</a>) &gt; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a> = <a class=\"id\" href=\"#inet_reqsk_alloc\">inet_reqsk_alloc</a>(&amp;<a class=\"id\" href=\"#tcp_request_sock_ops\">tcp_request_sock_ops</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#req\">req</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TCP_MD5SIG\">CONFIG_TCP_MD5SIG</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_rsk\">tcp_rsk</a>(<a class=\"id\" href=\"#req\">req</a>)-><a class=\"id\" href=\"#af_specific\">af_specific</a> = &amp;<a class=\"id\" href=\"#tcp_request_sock_ipv4_ops\">tcp_request_sock_ipv4_ops</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_clear_options\">tcp_clear_options</a>(&amp;<a class=\"id\" href=\"#tmp_opt\">tmp_opt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp_opt\">tmp_opt</a>.<a class=\"id\" href=\"#mss_clamp\">mss_clamp</a> = <a class=\"id\" href=\"#TCP_MSS_DEFAULT\">TCP_MSS_DEFAULT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp_opt\">tmp_opt</a>.<a class=\"id\" href=\"#user_mss\">user_mss</a>  = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#user_mss\">user_mss</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_parse_options\">tcp_parse_options</a>(<a class=\"id\" href=\"#skb\">skb</a>, &amp;<a class=\"id\" href=\"#tmp_opt\">tmp_opt</a>, &amp;<a class=\"id\" href=\"#hash_location\">hash_location</a>, 0);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tmp_opt\">tmp_opt</a>.<a class=\"id\" href=\"#cookie_plus\">cookie_plus</a> &gt; 0 &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#tmp_opt\">tmp_opt</a>.<a class=\"id\" href=\"#saw_tstamp\">saw_tstamp</a> &&", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#cookie_out_never\">cookie_out_never</a> &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#sysctl_tcp_cookie_size\">sysctl_tcp_cookie_size</a> &gt; 0 ||", 
"<span class=\"ts\"/>     (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#cookie_values\">cookie_values</a> != <a class=\"id\" href=\"#NULL\">NULL</a> &&", 
"<span class=\"ts\"/>      <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#cookie_values\">cookie_values</a>-><a class=\"id\" href=\"#cookie_desired\">cookie_desired</a> &gt; 0))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#c\">c</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#mess\">mess</a> = &amp;<a class=\"id\" href=\"#tmp_ext\">tmp_ext</a>.<a class=\"id\" href=\"#cookie_bakery\">cookie_bakery</a>[<a class=\"id\" href=\"#COOKIE_DIGEST_WORDS\">COOKIE_DIGEST_WORDS</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#tmp_opt\">tmp_opt</a>.<a class=\"id\" href=\"#cookie_plus\">cookie_plus</a> - <a class=\"id\" href=\"#TCPOLEN_COOKIE_BASE\">TCPOLEN_COOKIE_BASE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_cookie_generator\">tcp_cookie_generator</a>(&amp;<a class=\"id\" href=\"#tmp_ext\">tmp_ext</a>.<a class=\"id\" href=\"#cookie_bakery\">cookie_bakery</a>[0]) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop_and_release\">drop_and_release</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Secret recipe starts with IP addresses */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#mess\">mess</a>++ ^= (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#daddr\">daddr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#mess\">mess</a>++ ^= (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#saddr\">saddr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* plus variable length Initiator Cookie */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = (<a class=\"id\" href=\"#u8\">u8</a> *)<a class=\"id\" href=\"#mess\">mess</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#l\">l</a>-- &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#c\">c</a>++ ^= *<a class=\"id\" href=\"#hash_location\">hash_location</a>++;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYN_COOKIES\">CONFIG_SYN_COOKIES</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#want_cookie\">want_cookie</a> = 0;<span class=\"ts\"/><span class=\"comment\">/* not our kind of cookie */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp_ext\">tmp_ext</a>.<a class=\"id\" href=\"#cookie_out_never\">cookie_out_never</a> = 0; <span class=\"comment\">/* false */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp_ext\">tmp_ext</a>.<a class=\"id\" href=\"#cookie_plus\">cookie_plus</a> = <a class=\"id\" href=\"#tmp_opt\">tmp_opt</a>.<a class=\"id\" href=\"#cookie_plus\">cookie_plus</a>;", 
"<span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#cookie_in_always\">cookie_in_always</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* redundant indications, but ensure initialization. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp_ext\">tmp_ext</a>.<a class=\"id\" href=\"#cookie_out_never\">cookie_out_never</a> = 1; <span class=\"comment\">/* true */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp_ext\">tmp_ext</a>.<a class=\"id\" href=\"#cookie_plus\">cookie_plus</a> = 0;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop_and_release\">drop_and_release</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp_ext\">tmp_ext</a>.<a class=\"id\" href=\"#cookie_in_always\">cookie_in_always</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#cookie_in_always\">cookie_in_always</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#want_cookie\">want_cookie</a> && !<a class=\"id\" href=\"#tmp_opt\">tmp_opt</a>.<a class=\"id\" href=\"#saw_tstamp\">saw_tstamp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_clear_options\">tcp_clear_options</a>(&amp;<a class=\"id\" href=\"#tmp_opt\">tmp_opt</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp_opt\">tmp_opt</a>.<a class=\"id\" href=\"#tstamp_ok\">tstamp_ok</a> = <a class=\"id\" href=\"#tmp_opt\">tmp_opt</a>.<a class=\"id\" href=\"#saw_tstamp\">saw_tstamp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_openreq_init\">tcp_openreq_init</a>(<a class=\"id\" href=\"#req\">req</a>, &amp;<a class=\"id\" href=\"#tmp_opt\">tmp_opt</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ireq\">ireq</a> = <a class=\"id\" href=\"#inet_rsk\">inet_rsk</a>(<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#loc_addr\">loc_addr</a> = <a class=\"id\" href=\"#daddr\">daddr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#rmt_addr\">rmt_addr</a> = <a class=\"id\" href=\"#saddr\">saddr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#no_srccheck\">no_srccheck</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#transparent\">transparent</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#opt\">opt</a> = <a class=\"id\" href=\"#tcp_v4_save_options\">tcp_v4_save_options</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#security_inet_conn_request\">security_inet_conn_request</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#req\">req</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop_and_free\">drop_and_free</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#want_cookie\">want_cookie</a> || <a class=\"id\" href=\"#tmp_opt\">tmp_opt</a>.<a class=\"id\" href=\"#tstamp_ok\">tstamp_ok</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#TCP_ECN_create_request\">TCP_ECN_create_request</a>(<a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#want_cookie\">want_cookie</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#isn\">isn</a> = <a class=\"id\" href=\"#cookie_v4_init_sequence\">cookie_v4_init_sequence</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, &amp;<a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#mss\">mss</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#cookie_ts\">cookie_ts</a> = <a class=\"id\" href=\"#tmp_opt\">tmp_opt</a>.<a class=\"id\" href=\"#tstamp_ok\">tstamp_ok</a>;", 
"<span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#isn\">isn</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_peer\">inet_peer</a> *<a class=\"id\" href=\"#peer\">peer</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* VJ's idea. We save last timestamp seen</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * from the destination in peer table, when entering</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * state TIME-WAIT, and check against it before</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * accepting new connection request.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If \"isn\" is not zero, this request hit alive</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * timewait bucket, so that all the necessary checks</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * are made in the function processing timewait state.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tmp_opt\">tmp_opt</a>.<a class=\"id\" href=\"#saw_tstamp\">saw_tstamp</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#tcp_death_row\">tcp_death_row</a>.<a class=\"id\" href=\"#sysctl_tw_recycle\">sysctl_tw_recycle</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#inet_csk_route_req\">inet_csk_route_req</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#req\">req</a>)) != <a class=\"id\" href=\"#NULL\">NULL</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#peer\">peer</a> = <a class=\"id\" href=\"#rt_get_peer\">rt_get_peer</a>((struct <a class=\"id\" href=\"#rtable\">rtable</a> *)<a class=\"id\" href=\"#dst\">dst</a>)) != <a class=\"id\" href=\"#NULL\">NULL</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#peer\">peer</a>-><a class=\"id\" href=\"#v4daddr\">v4daddr</a> == <a class=\"id\" href=\"#saddr\">saddr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_peer_refcheck\">inet_peer_refcheck</a>(<a class=\"id\" href=\"#peer\">peer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#get_seconds\">get_seconds</a>() - <a class=\"id\" href=\"#peer\">peer</a>-><a class=\"id\" href=\"#tcp_ts_stamp\">tcp_ts_stamp</a> &lt; <a class=\"id\" href=\"#TCP_PAWS_MSL\">TCP_PAWS_MSL</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#s32\">s32</a>)(<a class=\"id\" href=\"#peer\">peer</a>-><a class=\"id\" href=\"#tcp_ts\">tcp_ts</a> - <a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#ts_recent\">ts_recent</a>) &gt;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#TCP_PAWS_WINDOW\">TCP_PAWS_WINDOW</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NET_INC_STATS_BH\">NET_INC_STATS_BH</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#LINUX_MIB_PAWSPASSIVEREJECTED\">LINUX_MIB_PAWSPASSIVEREJECTED</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop_and_release\">drop_and_release</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Kill the following clause, if you dislike this way. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (!<a class=\"id\" href=\"#sysctl_tcp_syncookies\">sysctl_tcp_syncookies</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (<a class=\"id\" href=\"#sysctl_max_syn_backlog\">sysctl_max_syn_backlog</a> - <a class=\"id\" href=\"#inet_csk_reqsk_queue_len\">inet_csk_reqsk_queue_len</a>(<a class=\"id\" href=\"#sk\">sk</a>) &lt;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (<a class=\"id\" href=\"#sysctl_max_syn_backlog\">sysctl_max_syn_backlog</a> >> 2)) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (!<a class=\"id\" href=\"#peer\">peer</a> || !<a class=\"id\" href=\"#peer\">peer</a>-><a class=\"id\" href=\"#tcp_ts_stamp\">tcp_ts_stamp</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (!<a class=\"id\" href=\"#dst\">dst</a> || !<a class=\"id\" href=\"#dst_metric\">dst_metric</a>(<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#RTAX_RTT\">RTAX_RTT</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Without syncookies last quarter of</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * backlog is filled with destinations,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * proven to be alive.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * It means that we continue to communicate</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * to destinations, already remembered</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * to the moment of synflood.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#LIMIT_NETDEBUG\">LIMIT_NETDEBUG</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"TCP: drop open request from %pI4/%u\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#source\">source</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop_and_release\">drop_and_release</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#isn\">isn</a> = <a class=\"id\" href=\"#tcp_v4_init_sequence\">tcp_v4_init_sequence</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_rsk\">tcp_rsk</a>(<a class=\"id\" href=\"#req\">req</a>)-><a class=\"id\" href=\"#snt_isn\">snt_isn</a> = <a class=\"id\" href=\"#isn\">isn</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_v4_send_synack\">tcp_v4_send_synack</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#req\">req</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (struct <a class=\"id\" href=\"#request_values\">request_values</a> *)&amp;<a class=\"id\" href=\"#tmp_ext\">tmp_ext</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#want_cookie\">want_cookie</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop_and_free\">drop_and_free</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet_csk_reqsk_queue_hash_add\">inet_csk_reqsk_queue_hash_add</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#TCP_TIMEOUT_INIT\">TCP_TIMEOUT_INIT</a>);", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#drop_and_release\">drop_and_release</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst_release\">dst_release</a>(<a class=\"id\" href=\"#dst\">dst</a>);", 
"<a class=\"id\" href=\"#drop_and_free\">drop_and_free</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reqsk_free\">reqsk_free</a>(<a class=\"id\" href=\"#req\">req</a>);", 
"<a class=\"id\" href=\"#drop\">drop</a>:", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tcp_v4_conn_request\">tcp_v4_conn_request</a>);", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The three way handshake has completed - we got a valid synack -</span>", 
"<span class=\"comment\"> * now create the new socket.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#tcp_v4_syn_recv_sock\">tcp_v4_syn_recv_sock</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_request_sock\">inet_request_sock</a> *<a class=\"id\" href=\"#ireq\">ireq</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#newinet\">newinet</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#newtp\">newtp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#newsk\">newsk</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TCP_MD5SIG\">CONFIG_TCP_MD5SIG</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_md5sig_key\">tcp_md5sig_key</a> *<a class=\"id\" href=\"#key\">key</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk_acceptq_is_full\">sk_acceptq_is_full</a>(<a class=\"id\" href=\"#sk\">sk</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_overflow\">exit_overflow</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dst\">dst</a> && (<a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#inet_csk_route_req\">inet_csk_route_req</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#req\">req</a>)) == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit\">exit</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newsk\">newsk</a> = <a class=\"id\" href=\"#tcp_create_openreq_child\">tcp_create_openreq_child</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#newsk\">newsk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit\">exit</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newsk\">newsk</a>-><a class=\"id\" href=\"#sk_gso_type\">sk_gso_type</a> = <a class=\"id\" href=\"#SKB_GSO_TCPV4\">SKB_GSO_TCPV4</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_setup_caps\">sk_setup_caps</a>(<a class=\"id\" href=\"#newsk\">newsk</a>, <a class=\"id\" href=\"#dst\">dst</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a><span class=\"ts\"/><span class=\"ts\"/>      = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#newsk\">newsk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newinet\">newinet</a><span class=\"ts\"/><span class=\"ts\"/>      = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#newsk\">newsk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ireq\">ireq</a><span class=\"ts\"/><span class=\"ts\"/>      = <a class=\"id\" href=\"#inet_rsk\">inet_rsk</a>(<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newinet\">newinet</a>-><a class=\"id\" href=\"#inet_daddr\">inet_daddr</a>   = <a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#rmt_addr\">rmt_addr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newinet\">newinet</a>-><a class=\"id\" href=\"#inet_rcv_saddr\">inet_rcv_saddr</a> = <a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#loc_addr\">loc_addr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newinet\">newinet</a>-><a class=\"id\" href=\"#inet_saddr\">inet_saddr</a><span class=\"ts\"/>      = <a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#loc_addr\">loc_addr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newinet\">newinet</a>-><a class=\"id\" href=\"#opt\">opt</a><span class=\"ts\"/>      = <a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#opt\">opt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#opt\">opt</a><span class=\"ts\"/>      = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newinet\">newinet</a>-><a class=\"id\" href=\"#mc_index\">mc_index</a>     = <a class=\"id\" href=\"#inet_iif\">inet_iif</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newinet\">newinet</a>-><a class=\"id\" href=\"#mc_ttl\">mc_ttl</a><span class=\"ts\"/>      = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#ttl\">ttl</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#newsk\">newsk</a>)-><a class=\"id\" href=\"#icsk_ext_hdr_len\">icsk_ext_hdr_len</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#newinet\">newinet</a>-><a class=\"id\" href=\"#opt\">opt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#newsk\">newsk</a>)-><a class=\"id\" href=\"#icsk_ext_hdr_len\">icsk_ext_hdr_len</a> = <a class=\"id\" href=\"#newinet\">newinet</a>-><a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#optlen\">optlen</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newinet\">newinet</a>-><a class=\"id\" href=\"#inet_id\">inet_id</a> = <a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#write_seq\">write_seq</a> ^ <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_mtup_init\">tcp_mtup_init</a>(<a class=\"id\" href=\"#newsk\">newsk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_sync_mss\">tcp_sync_mss</a>(<a class=\"id\" href=\"#newsk\">newsk</a>, <a class=\"id\" href=\"#dst_mtu\">dst_mtu</a>(<a class=\"id\" href=\"#dst\">dst</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#advmss\">advmss</a> = <a class=\"id\" href=\"#dst_metric\">dst_metric</a>(<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#RTAX_ADVMSS\">RTAX_ADVMSS</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#user_mss\">user_mss</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#user_mss\">user_mss</a> &lt; <a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#advmss\">advmss</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#advmss\">advmss</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#user_mss\">user_mss</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_initialize_rcv_mss\">tcp_initialize_rcv_mss</a>(<a class=\"id\" href=\"#newsk\">newsk</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TCP_MD5SIG\">CONFIG_TCP_MD5SIG</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* Copy over the MD5 key from the original socket */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#tcp_v4_md5_do_lookup\">tcp_v4_md5_do_lookup</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#newinet\">newinet</a>-><a class=\"id\" href=\"#inet_daddr\">inet_daddr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#key\">key</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We're using one, so create a matching key</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * on the newsk structure. If we fail to get</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * memory, then we end up not copying the key</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * across. Shucks.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#newkey\">newkey</a> = <a class=\"id\" href=\"#kmemdup\">kmemdup</a>(<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#keylen\">keylen</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#newkey\">newkey</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_v4_md5_do_add\">tcp_v4_md5_do_add</a>(<a class=\"id\" href=\"#newsk\">newsk</a>, <a class=\"id\" href=\"#newinet\">newinet</a>-><a class=\"id\" href=\"#inet_daddr\">inet_daddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#newkey\">newkey</a>, <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#keylen\">keylen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_nocaps_add\">sk_nocaps_add</a>(<a class=\"id\" href=\"#newsk\">newsk</a>, <a class=\"id\" href=\"#NETIF_F_GSO_MASK\">NETIF_F_GSO_MASK</a>);", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__inet_hash_nolisten\">__inet_hash_nolisten</a>(<a class=\"id\" href=\"#newsk\">newsk</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__inet_inherit_port\">__inet_inherit_port</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#newsk\">newsk</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#newsk\">newsk</a>;", 
"", 
"<a class=\"id\" href=\"#exit_overflow\">exit_overflow</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NET_INC_STATS_BH\">NET_INC_STATS_BH</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#LINUX_MIB_LISTENOVERFLOWS\">LINUX_MIB_LISTENOVERFLOWS</a>);", 
"<a class=\"id\" href=\"#exit\">exit</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NET_INC_STATS_BH\">NET_INC_STATS_BH</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#LINUX_MIB_LISTENDROPS\">LINUX_MIB_LISTENDROPS</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst_release\">dst_release</a>(<a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tcp_v4_syn_recv_sock\">tcp_v4_syn_recv_sock</a>);", 
"", 
"static struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#tcp_v4_hnd_req\">tcp_v4_hnd_req</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a> *<a class=\"id\" href=\"#th\">th</a> = <a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#iphdr\">iphdr</a> *<a class=\"id\" href=\"#iph\">iph</a> = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#nsk\">nsk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_sock\">request_sock</a> **<a class=\"id\" href=\"#prev\">prev</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Find possible connection requests. */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a> = <a class=\"id\" href=\"#inet_csk_search_req\">inet_csk_search_req</a>(<a class=\"id\" href=\"#sk\">sk</a>, &amp;<a class=\"id\" href=\"#prev\">prev</a>, <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#source\">source</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#daddr\">daddr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#req\">req</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#tcp_check_req\">tcp_check_req</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#prev\">prev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nsk\">nsk</a> = <a class=\"id\" href=\"#inet_lookup_established\">inet_lookup_established</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), &amp;<a class=\"id\" href=\"#tcp_hashinfo\">tcp_hashinfo</a>, <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#saddr\">saddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#source\">source</a>, <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#dest\">dest</a>, <a class=\"id\" href=\"#inet_iif\">inet_iif</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nsk\">nsk</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nsk\">nsk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> != <a class=\"id\" href=\"#TCP_TIME_WAIT\">TCP_TIME_WAIT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh_lock_sock\">bh_lock_sock</a>(<a class=\"id\" href=\"#nsk\">nsk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#nsk\">nsk</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_twsk_put\">inet_twsk_put</a>(<a class=\"id\" href=\"#inet_twsk\">inet_twsk</a>(<a class=\"id\" href=\"#nsk\">nsk</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYN_COOKIES\">CONFIG_SYN_COOKIES</a>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#syn\">syn</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#cookie_v4_check\">cookie_v4_check</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, &amp;(<a class=\"id\" href=\"#IPCB\">IPCB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#opt\">opt</a>));", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sk\">sk</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#__sum16\">__sum16</a> <a class=\"id\" href=\"#tcp_v4_checksum_init\">tcp_v4_checksum_init</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#iphdr\">iphdr</a> *<a class=\"id\" href=\"#iph\">iph</a> = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> == <a class=\"id\" href=\"#CHECKSUM_COMPLETE\">CHECKSUM_COMPLETE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tcp_v4_check\">tcp_v4_check</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#saddr\">saddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> = <a class=\"id\" href=\"#CHECKSUM_UNNECESSARY\">CHECKSUM_UNNECESSARY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a> = <a class=\"id\" href=\"#csum_tcpudp_nofold\">csum_tcpudp_nofold</a>(<a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#daddr\">daddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#IPPROTO_TCP\">IPPROTO_TCP</a>, 0);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> <= 76) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#__skb_checksum_complete\">__skb_checksum_complete</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"", 
"<span class=\"comment\">/* The socket must have it's spinlock held when we get</span>", 
"<span class=\"comment\"> * here.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We have a potential double-lock case here, so even when</span>", 
"<span class=\"comment\"> * doing backlog processing we use the BH locking scheme.</span>", 
"<span class=\"comment\"> * This is because we cannot sleep with the original spinlock</span>", 
"<span class=\"comment\"> * held.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#tcp_v4_do_rcv\">tcp_v4_do_rcv</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#rsk\">rsk</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TCP_MD5SIG\">CONFIG_TCP_MD5SIG</a>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We really want to reject the packet as early as possible</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * if:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  o We're expecting an MD5'd packet and this is no MD5 tcp option</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  o There is an MD5 option and we're not expecting one</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_v4_inbound_md5_hash\">tcp_v4_inbound_md5_hash</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#discard\">discard</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> == <a class=\"id\" href=\"#TCP_ESTABLISHED\">TCP_ESTABLISHED</a>) { <span class=\"comment\">/* Fast path */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_rps_save_rxhash\">sock_rps_save_rxhash</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#rxhash\">rxhash</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#TCP_CHECK_TIMER\">TCP_CHECK_TIMER</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_rcv_established\">tcp_rcv_established</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>), <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rsk\">rsk</a> = <a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#reset\">reset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#TCP_CHECK_TIMER\">TCP_CHECK_TIMER</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> &lt; <a class=\"id\" href=\"#tcp_hdrlen\">tcp_hdrlen</a>(<a class=\"id\" href=\"#skb\">skb</a>) || <a class=\"id\" href=\"#tcp_checksum_complete\">tcp_checksum_complete</a>(<a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#csum_err\">csum_err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> == <a class=\"id\" href=\"#TCP_LISTEN\">TCP_LISTEN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#nsk\">nsk</a> = <a class=\"id\" href=\"#tcp_v4_hnd_req\">tcp_v4_hnd_req</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#nsk\">nsk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#discard\">discard</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nsk\">nsk</a> != <a class=\"id\" href=\"#sk\">sk</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_child_process\">tcp_child_process</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#nsk\">nsk</a>, <a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rsk\">rsk</a> = <a class=\"id\" href=\"#nsk\">nsk</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#reset\">reset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_rps_save_rxhash\">sock_rps_save_rxhash</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#rxhash\">rxhash</a>);", 
"", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_CHECK_TIMER\">TCP_CHECK_TIMER</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_rcv_state_process\">tcp_rcv_state_process</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>), <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rsk\">rsk</a> = <a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#reset\">reset</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_CHECK_TIMER\">TCP_CHECK_TIMER</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#reset\">reset</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_v4_send_reset\">tcp_v4_send_reset</a>(<a class=\"id\" href=\"#rsk\">rsk</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<a class=\"id\" href=\"#discard\">discard</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Be careful here. If this function gets more complicated and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * gcc suffers from register pressure on the x86, sk (in %ebx)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * might be destroyed here. This current version compiles correctly,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * but you have been warned.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#csum_err\">csum_err</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_INC_STATS_BH\">TCP_INC_STATS_BH</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#TCP_MIB_INERRS\">TCP_MIB_INERRS</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#discard\">discard</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tcp_v4_do_rcv\">tcp_v4_do_rcv</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>From tcp_input.c</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#tcp_v4_rcv\">tcp_v4_rcv</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#iphdr\">iphdr</a> *<a class=\"id\" href=\"#iph\">iph</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a> *<a class=\"id\" href=\"#th\">th</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#pkt_type\">pkt_type</a> != <a class=\"id\" href=\"#PACKET_HOST\">PACKET_HOST</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#discard_it\">discard_it</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Count it even if it's bad */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_INC_STATS_BH\">TCP_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#TCP_MIB_INSEGS\">TCP_MIB_INSEGS</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pskb_may_pull\">pskb_may_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#discard_it\">discard_it</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#th\">th</a> = <a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#doff\">doff</a> &lt; sizeof(struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a>) / 4)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad_packet\">bad_packet</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pskb_may_pull\">pskb_may_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#doff\">doff</a> * 4))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#discard_it\">discard_it</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* An explanation is required here, I think.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Packet length and doff are validated by header prediction,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * provided case of th-&gt;doff==0 is eliminated.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * So, we defer the checks. */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb_csum_unnecessary\">skb_csum_unnecessary</a>(<a class=\"id\" href=\"#skb\">skb</a>) && <a class=\"id\" href=\"#tcp_v4_checksum_init\">tcp_v4_checksum_init</a>(<a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad_packet\">bad_packet</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#th\">th</a> = <a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a> = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a> = <a class=\"id\" href=\"#ntohl\">ntohl</a>(<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#seq\">seq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a> = (<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a> + <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#syn\">syn</a> + <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#fin\">fin</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> - <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#doff\">doff</a> * 4);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#ack_seq\">ack_seq</a> = <a class=\"id\" href=\"#ntohl\">ntohl</a>(<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#ack_seq\">ack_seq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#when\">when</a><span class=\"ts\"/> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/> = <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#tos\">tos</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#sacked\">sacked</a><span class=\"ts\"/> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#__inet_lookup_skb\">__inet_lookup_skb</a>(&amp;<a class=\"id\" href=\"#tcp_hashinfo\">tcp_hashinfo</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#source\">source</a>, <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#dest\">dest</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sk\">sk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#no_tcp_socket\">no_tcp_socket</a>;", 
"", 
"<a class=\"id\" href=\"#process\">process</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> == <a class=\"id\" href=\"#TCP_TIME_WAIT\">TCP_TIME_WAIT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#do_time_wait\">do_time_wait</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#ttl\">ttl</a> &lt; <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#min_ttl\">min_ttl</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NET_INC_STATS_BH\">NET_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#LINUX_MIB_TCPMINTTLDROP\">LINUX_MIB_TCPMINTTLDROP</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#discard_and_relse\">discard_and_relse</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#xfrm4_policy_check\">xfrm4_policy_check</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#XFRM_POLICY_IN\">XFRM_POLICY_IN</a>, <a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#discard_and_relse\">discard_and_relse</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nf_reset\">nf_reset</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk_filter\">sk_filter</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#discard_and_relse\">discard_and_relse</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh_lock_sock_nested\">bh_lock_sock_nested</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sock_owned_by_user\">sock_owned_by_user</a>(<a class=\"id\" href=\"#sk\">sk</a>)) {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET_DMA\">CONFIG_NET_DMA</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#dma_chan\">dma_chan</a> && <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#pinned_list\">pinned_list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#dma_chan\">dma_chan</a> = <a class=\"id\" href=\"#dma_find_channel\">dma_find_channel</a>(<a class=\"id\" href=\"#DMA_MEMCPY\">DMA_MEMCPY</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#dma_chan\">dma_chan</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#tcp_v4_do_rcv\">tcp_v4_do_rcv</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tcp_prequeue\">tcp_prequeue</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#tcp_v4_do_rcv\">tcp_v4_do_rcv</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#sk_add_backlog\">sk_add_backlog</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh_unlock_sock\">bh_unlock_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NET_INC_STATS_BH\">NET_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#LINUX_MIB_TCPBACKLOGDROP\">LINUX_MIB_TCPBACKLOGDROP</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#discard_and_relse\">discard_and_relse</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh_unlock_sock\">bh_unlock_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_put\">sock_put</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<a class=\"id\" href=\"#no_tcp_socket\">no_tcp_socket</a>:", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#xfrm4_policy_check\">xfrm4_policy_check</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#XFRM_POLICY_IN\">XFRM_POLICY_IN</a>, <a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#discard_it\">discard_it</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> &lt; (<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#doff\">doff</a> << 2) || <a class=\"id\" href=\"#tcp_checksum_complete\">tcp_checksum_complete</a>(<a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<a class=\"id\" href=\"#bad_packet\">bad_packet</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#TCP_INC_STATS_BH\">TCP_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#TCP_MIB_INERRS\">TCP_MIB_INERRS</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_v4_send_reset\">tcp_v4_send_reset</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#discard_it\">discard_it</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/* Discard frame. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#discard_and_relse\">discard_and_relse</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_put\">sock_put</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#discard_it\">discard_it</a>;", 
"", 
"<a class=\"id\" href=\"#do_time_wait\">do_time_wait</a>:", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#xfrm4_policy_check\">xfrm4_policy_check</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#XFRM_POLICY_IN\">XFRM_POLICY_IN</a>, <a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_twsk_put\">inet_twsk_put</a>(<a class=\"id\" href=\"#inet_twsk\">inet_twsk</a>(<a class=\"id\" href=\"#sk\">sk</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#discard_it\">discard_it</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> &lt; (<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#doff\">doff</a> << 2) || <a class=\"id\" href=\"#tcp_checksum_complete\">tcp_checksum_complete</a>(<a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#TCP_INC_STATS_BH\">TCP_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#TCP_MIB_INERRS\">TCP_MIB_INERRS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_twsk_put\">inet_twsk_put</a>(<a class=\"id\" href=\"#inet_twsk\">inet_twsk</a>(<a class=\"id\" href=\"#sk\">sk</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#discard_it\">discard_it</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#tcp_timewait_state_process\">tcp_timewait_state_process</a>(<a class=\"id\" href=\"#inet_twsk\">inet_twsk</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#th\">th</a>)) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TCP_TW_SYN\">TCP_TW_SYN</a>: {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk2\">sk2</a> = <a class=\"id\" href=\"#inet_lookup_listener\">inet_lookup_listener</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#tcp_hashinfo\">tcp_hashinfo</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#dest\">dest</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_iif\">inet_iif</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk2\">sk2</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_twsk_deschedule\">inet_twsk_deschedule</a>(<a class=\"id\" href=\"#inet_twsk\">inet_twsk</a>(<a class=\"id\" href=\"#sk\">sk</a>), &amp;<a class=\"id\" href=\"#tcp_death_row\">tcp_death_row</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_twsk_put\">inet_twsk_put</a>(<a class=\"id\" href=\"#inet_twsk\">inet_twsk</a>(<a class=\"id\" href=\"#sk\">sk</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#sk2\">sk2</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#process\">process</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Fall through to ACK */</span>", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TCP_TW_ACK\">TCP_TW_ACK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_v4_timewait_ack\">tcp_v4_timewait_ack</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TCP_TW_RST\">TCP_TW_RST</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#no_tcp_socket\">no_tcp_socket</a>;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TCP_TW_SUCCESS\">TCP_TW_SUCCESS</a>:;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#discard_it\">discard_it</a>;", 
"}", 
"", 
"<span class=\"comment\">/* VJ's idea. Save last timestamp seen from this destination</span>", 
"<span class=\"comment\"> * and hold it at least for normal timewait interval to use for duplicate</span>", 
"<span class=\"comment\"> * segment detection in subsequent connections, before they enter synchronized</span>", 
"<span class=\"comment\"> * state.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#tcp_v4_remember_stamp\">tcp_v4_remember_stamp</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtable\">rtable</a> *<a class=\"id\" href=\"#rt\">rt</a> = (struct <a class=\"id\" href=\"#rtable\">rtable</a> *)<a class=\"id\" href=\"#__sk_dst_get\">__sk_dst_get</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_peer\">inet_peer</a> *<a class=\"id\" href=\"#peer\">peer</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#release_it\">release_it</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rt\">rt</a> || <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt_dst\">rt_dst</a> != <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_daddr\">inet_daddr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#peer\">peer</a> = <a class=\"id\" href=\"#inet_getpeer\">inet_getpeer</a>(<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_daddr\">inet_daddr</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#release_it\">release_it</a> = 1;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#peer\">peer</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt_bind_peer\">rt_bind_peer</a>(<a class=\"id\" href=\"#rt\">rt</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#peer\">peer</a> = <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#peer\">peer</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#peer\">peer</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#s32\">s32</a>)(<a class=\"id\" href=\"#peer\">peer</a>-><a class=\"id\" href=\"#tcp_ts\">tcp_ts</a> - <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#ts_recent\">ts_recent</a>) <= 0 ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    ((<a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#get_seconds\">get_seconds</a>() - <a class=\"id\" href=\"#peer\">peer</a>-><a class=\"id\" href=\"#tcp_ts_stamp\">tcp_ts_stamp</a> &gt; <a class=\"id\" href=\"#TCP_PAWS_MSL\">TCP_PAWS_MSL</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#peer\">peer</a>-><a class=\"id\" href=\"#tcp_ts_stamp\">tcp_ts_stamp</a> <= (<a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#ts_recent_stamp\">ts_recent_stamp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#peer\">peer</a>-><a class=\"id\" href=\"#tcp_ts_stamp\">tcp_ts_stamp</a> = (<a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#ts_recent_stamp\">ts_recent_stamp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#peer\">peer</a>-><a class=\"id\" href=\"#tcp_ts\">tcp_ts</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#ts_recent\">ts_recent</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#release_it\">release_it</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_putpeer\">inet_putpeer</a>(<a class=\"id\" href=\"#peer\">peer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tcp_v4_remember_stamp\">tcp_v4_remember_stamp</a>);", 
"", 
"int <a class=\"id\" href=\"#tcp_v4_tw_remember_stamp\">tcp_v4_tw_remember_stamp</a>(struct <a class=\"id\" href=\"#inet_timewait_sock\">inet_timewait_sock</a> *<a class=\"id\" href=\"#tw\">tw</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_peer\">inet_peer</a> *<a class=\"id\" href=\"#peer\">peer</a> = <a class=\"id\" href=\"#inet_getpeer\">inet_getpeer</a>(<a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_daddr\">tw_daddr</a>, 1);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#peer\">peer</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#tcp_timewait_sock\">tcp_timewait_sock</a> *<a class=\"id\" href=\"#tcptw\">tcptw</a> = <a class=\"id\" href=\"#tcp_twsk\">tcp_twsk</a>((struct <a class=\"id\" href=\"#sock\">sock</a> *)<a class=\"id\" href=\"#tw\">tw</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#s32\">s32</a>)(<a class=\"id\" href=\"#peer\">peer</a>-><a class=\"id\" href=\"#tcp_ts\">tcp_ts</a> - <a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_ts_recent\">tw_ts_recent</a>) <= 0 ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    ((<a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#get_seconds\">get_seconds</a>() - <a class=\"id\" href=\"#peer\">peer</a>-><a class=\"id\" href=\"#tcp_ts_stamp\">tcp_ts_stamp</a> &gt; <a class=\"id\" href=\"#TCP_PAWS_MSL\">TCP_PAWS_MSL</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#peer\">peer</a>-><a class=\"id\" href=\"#tcp_ts_stamp\">tcp_ts_stamp</a> <= (<a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_ts_recent_stamp\">tw_ts_recent_stamp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#peer\">peer</a>-><a class=\"id\" href=\"#tcp_ts_stamp\">tcp_ts_stamp</a> = (<a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_ts_recent_stamp\">tw_ts_recent_stamp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#peer\">peer</a>-><a class=\"id\" href=\"#tcp_ts\">tcp_ts</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_ts_recent\">tw_ts_recent</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_putpeer\">inet_putpeer</a>(<a class=\"id\" href=\"#peer\">peer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"const struct <a class=\"id\" href=\"#inet_connection_sock_af_ops\">inet_connection_sock_af_ops</a> <a class=\"id\" href=\"#ipv4_specific\">ipv4_specific</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#queue_xmit\">queue_xmit</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#ip_queue_xmit\">ip_queue_xmit</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#send_check\">send_check</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#tcp_v4_send_check\">tcp_v4_send_check</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#rebuild_header\">rebuild_header</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_sk_rebuild_header\">inet_sk_rebuild_header</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#conn_request\">conn_request</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#tcp_v4_conn_request\">tcp_v4_conn_request</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#syn_recv_sock\">syn_recv_sock</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#tcp_v4_syn_recv_sock\">tcp_v4_syn_recv_sock</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#remember_stamp\">remember_stamp</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#tcp_v4_remember_stamp\">tcp_v4_remember_stamp</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#net_header_len\">net_header_len</a><span class=\"ts\"/>   = sizeof(struct <a class=\"id\" href=\"#iphdr\">iphdr</a>),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#setsockopt\">setsockopt</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#ip_setsockopt\">ip_setsockopt</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#getsockopt\">getsockopt</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#ip_getsockopt\">ip_getsockopt</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#addr2sockaddr\">addr2sockaddr</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_csk_addr2sockaddr\">inet_csk_addr2sockaddr</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sockaddr_len\">sockaddr_len</a><span class=\"ts\"/>   = sizeof(struct <a class=\"id\" href=\"#sockaddr_in\">sockaddr_in</a>),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#bind_conflict\">bind_conflict</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_csk_bind_conflict\">inet_csk_bind_conflict</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#compat_setsockopt\">compat_setsockopt</a> = <a class=\"id\" href=\"#compat_ip_setsockopt\">compat_ip_setsockopt</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#compat_getsockopt\">compat_getsockopt</a> = <a class=\"id\" href=\"#compat_ip_getsockopt\">compat_ip_getsockopt</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#ipv4_specific\">ipv4_specific</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TCP_MD5SIG\">CONFIG_TCP_MD5SIG</a>", 
"static const struct <a class=\"id\" href=\"#tcp_sock_af_ops\">tcp_sock_af_ops</a> <a class=\"id\" href=\"#tcp_sock_ipv4_specific\">tcp_sock_ipv4_specific</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#md5_lookup\">md5_lookup</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tcp_v4_md5_lookup\">tcp_v4_md5_lookup</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#calc_md5_hash\">calc_md5_hash</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tcp_v4_md5_hash_skb\">tcp_v4_md5_hash_skb</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#md5_add\">md5_add</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tcp_v4_md5_add_func\">tcp_v4_md5_add_func</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#md5_parse\">md5_parse</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tcp_v4_parse_md5_keys\">tcp_v4_parse_md5_keys</a>,", 
"};", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/* NOTE: A lot of things set to zero explicitly by call to</span>", 
"<span class=\"comment\"> *       sk_alloc() so need not be done here.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#tcp_v4_init_sock\">tcp_v4_init_sock</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a> *<a class=\"id\" href=\"#icsk\">icsk</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_queue_head_init\">skb_queue_head_init</a>(&amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#out_of_order_queue\">out_of_order_queue</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_init_xmit_timers\">tcp_init_xmit_timers</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_prequeue_init\">tcp_prequeue_init</a>(<a class=\"id\" href=\"#tp\">tp</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_rto\">icsk_rto</a> = <a class=\"id\" href=\"#TCP_TIMEOUT_INIT\">TCP_TIMEOUT_INIT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#mdev\">mdev</a> = <a class=\"id\" href=\"#TCP_TIMEOUT_INIT\">TCP_TIMEOUT_INIT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* So many TCP implementations out there (incorrectly) count the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * initial SYN frame in their delayed-ACK and congestion control</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * algorithms that we must have the following bandaid to talk</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * efficiently to them.  -DaveM</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd\">snd_cwnd</a> = 2;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* See draft-stevens-tcpca-spec-01 for discussion of the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * initialization of these values.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_ssthresh\">snd_ssthresh</a> = <a class=\"id\" href=\"#TCP_INFINITE_SSTHRESH\">TCP_INFINITE_SSTHRESH</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd_clamp\">snd_cwnd_clamp</a> = ~0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#mss_cache\">mss_cache</a> = <a class=\"id\" href=\"#TCP_MSS_DEFAULT\">TCP_MSS_DEFAULT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#reordering\">reordering</a> = <a class=\"id\" href=\"#sysctl_tcp_reordering\">sysctl_tcp_reordering</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ca_ops\">icsk_ca_ops</a> = &amp;<a class=\"id\" href=\"#tcp_init_congestion_ops\">tcp_init_congestion_ops</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> = <a class=\"id\" href=\"#TCP_CLOSE\">TCP_CLOSE</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_write_space\">sk_write_space</a> = <a class=\"id\" href=\"#sk_stream_write_space\">sk_stream_write_space</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_set_flag\">sock_set_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_USE_WRITE_QUEUE\">SOCK_USE_WRITE_QUEUE</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_af_ops\">icsk_af_ops</a> = &amp;<a class=\"id\" href=\"#ipv4_specific\">ipv4_specific</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_sync_mss\">icsk_sync_mss</a> = <a class=\"id\" href=\"#tcp_sync_mss\">tcp_sync_mss</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TCP_MD5SIG\">CONFIG_TCP_MD5SIG</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#af_specific\">af_specific</a> = &amp;<a class=\"id\" href=\"#tcp_sock_ipv4_specific\">tcp_sock_ipv4_specific</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* TCP Cookie Transactions */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sysctl_tcp_cookie_size\">sysctl_tcp_cookie_size</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Default, cookies without s_data_payload. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#cookie_values\">cookie_values</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#cookie_values\">cookie_values</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_allocation\">sk_allocation</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#cookie_values\">cookie_values</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kref_init\">kref_init</a>(&amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#cookie_values\">cookie_values</a>-><a class=\"id\" href=\"#kref\">kref</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* Presumed zeroed, in order of appearance:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>cookie_in_always, cookie_out_never,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>s_data_constant, s_data_in, s_data_out</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_sndbuf\">sk_sndbuf</a> = <a class=\"id\" href=\"#sysctl_tcp_wmem\">sysctl_tcp_wmem</a>[1];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rcvbuf\">sk_rcvbuf</a> = <a class=\"id\" href=\"#sysctl_tcp_rmem\">sysctl_tcp_rmem</a>[1];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_bh_disable\">local_bh_disable</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#percpu_counter_inc\">percpu_counter_inc</a>(&amp;<a class=\"id\" href=\"#tcp_sockets_allocated\">tcp_sockets_allocated</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_bh_enable\">local_bh_enable</a>();", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"void <a class=\"id\" href=\"#tcp_v4_destroy_sock\">tcp_v4_destroy_sock</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_clear_xmit_timers\">tcp_clear_xmit_timers</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_cleanup_congestion_control\">tcp_cleanup_congestion_control</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Cleanup up the write buffer. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_write_queue_purge\">tcp_write_queue_purge</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Cleans up our, hopefully empty, out_of_order_queue. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__skb_queue_purge\">__skb_queue_purge</a>(&amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#out_of_order_queue\">out_of_order_queue</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TCP_MD5SIG\">CONFIG_TCP_MD5SIG</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* Clean up the MD5 key list, if any */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#md5sig_info\">md5sig_info</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_v4_clear_md5_list\">tcp_v4_clear_md5_list</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#md5sig_info\">md5sig_info</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#md5sig_info\">md5sig_info</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET_DMA\">CONFIG_NET_DMA</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* Cleans up our sk_async_wait_queue */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__skb_queue_purge\">__skb_queue_purge</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_async_wait_queue\">sk_async_wait_queue</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Clean prequeue, it must be empty really */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__skb_queue_purge\">__skb_queue_purge</a>(&amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#prequeue\">prequeue</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Clean up a referenced TCP bind bucket. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#icsk_bind_hash\">icsk_bind_hash</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_put_port\">inet_put_port</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If sendmsg cached page exists, toss it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_sndmsg_page\">sk_sndmsg_page</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__free_page\">__free_page</a>(<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_sndmsg_page\">sk_sndmsg_page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_sndmsg_page\">sk_sndmsg_page</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* TCP Cookie Transactions */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#cookie_values\">cookie_values</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kref_put\">kref_put</a>(&amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#cookie_values\">cookie_values</a>-><a class=\"id\" href=\"#kref\">kref</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#tcp_cookie_values_release\">tcp_cookie_values_release</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#cookie_values\">cookie_values</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#percpu_counter_dec\">percpu_counter_dec</a>(&amp;<a class=\"id\" href=\"#tcp_sockets_allocated\">tcp_sockets_allocated</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tcp_v4_destroy_sock\">tcp_v4_destroy_sock</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROC_FS\">CONFIG_PROC_FS</a>", 
"<span class=\"comment\">/* Proc filesystem TCP sock list dumping. */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#inet_timewait_sock\">inet_timewait_sock</a> *<a class=\"id\" href=\"#tw_head\">tw_head</a>(struct <a class=\"id\" href=\"#hlist_nulls_head\">hlist_nulls_head</a> *<a class=\"id\" href=\"#head\">head</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#hlist_nulls_empty\">hlist_nulls_empty</a>(<a class=\"id\" href=\"#head\">head</a>) ? <a class=\"id\" href=\"#NULL\">NULL</a> :", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#first\">first</a>, struct <a class=\"id\" href=\"#inet_timewait_sock\">inet_timewait_sock</a>, <a class=\"id\" href=\"#tw_node\">tw_node</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#inet_timewait_sock\">inet_timewait_sock</a> *<a class=\"id\" href=\"#tw_next\">tw_next</a>(struct <a class=\"id\" href=\"#inet_timewait_sock\">inet_timewait_sock</a> *<a class=\"id\" href=\"#tw\">tw</a>)", 
"{", 
"<span class=\"ts\"/>return !<a class=\"id\" href=\"#is_a_nulls\">is_a_nulls</a>(<a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_node\">tw_node</a>.<a class=\"id\" href=\"#next\">next</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlist_nulls_entry\">hlist_nulls_entry</a>(<a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_node\">tw_node</a>.<a class=\"id\" href=\"#next\">next</a>, <a class=\"id\" href=\"#typeof\">typeof</a>(*<a class=\"id\" href=\"#tw\">tw</a>), <a class=\"id\" href=\"#tw_node\">tw_node</a>) : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Get next listener socket follow cur.  If cur is NULL, get first socket</span>", 
"<span class=\"comment\"> * starting from bucket given in st-&gt;bucket; when st-&gt;bucket is zero the</span>", 
"<span class=\"comment\"> * very first socket in the hash table is returned.</span>", 
"<span class=\"comment\"> */</span>", 
"static void *<a class=\"id\" href=\"#listening_get_next\">listening_get_next</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#cur\">cur</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a> *<a class=\"id\" href=\"#icsk\">icsk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_nulls_node\">hlist_nulls_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#cur\">cur</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_listen_hashbucket\">inet_listen_hashbucket</a> *<a class=\"id\" href=\"#ilb\">ilb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_iter_state\">tcp_iter_state</a> *<a class=\"id\" href=\"#st\">st</a> = <a class=\"id\" href=\"#seq\">seq</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#seq_file_net\">seq_file_net</a>(<a class=\"id\" href=\"#seq\">seq</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sk\">sk</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ilb\">ilb</a> = &amp;<a class=\"id\" href=\"#tcp_hashinfo\">tcp_hashinfo</a>.<a class=\"id\" href=\"#listening_hash\">listening_hash</a>[<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#bucket\">bucket</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#ilb\">ilb</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#sk_nulls_head\">sk_nulls_head</a>(&amp;<a class=\"id\" href=\"#ilb\">ilb</a>-><a class=\"id\" href=\"#head\">head</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#get_sk\">get_sk</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ilb\">ilb</a> = &amp;<a class=\"id\" href=\"#tcp_hashinfo\">tcp_hashinfo</a>.<a class=\"id\" href=\"#listening_hash\">listening_hash</a>[<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#bucket\">bucket</a>];", 
"<span class=\"ts\"/>++<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#num\">num</a>;", 
"<span class=\"ts\"/>++<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#offset\">offset</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#state\">state</a> == <a class=\"id\" href=\"#TCP_SEQ_STATE_OPENREQ\">TCP_SEQ_STATE_OPENREQ</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a> = <a class=\"id\" href=\"#cur\">cur</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icsk\">icsk</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#syn_wait_sk\">syn_wait_sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a> = <a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#dl_next\">dl_next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>while (1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#req\">req</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#rsk_ops\">rsk_ops</a>-><a class=\"id\" href=\"#family\">family</a> == <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#family\">family</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#req\">req</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a> = <a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#dl_next\">dl_next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (++<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#sbucket\">sbucket</a> >= <a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_accept_queue\">icsk_accept_queue</a>.<a class=\"id\" href=\"#listen_opt\">listen_opt</a>-><a class=\"id\" href=\"#nr_table_entries\">nr_table_entries</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<a class=\"id\" href=\"#get_req\">get_req</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a> = <a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_accept_queue\">icsk_accept_queue</a>.<a class=\"id\" href=\"#listen_opt\">listen_opt</a>-><a class=\"id\" href=\"#syn_table\">syn_table</a>[<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#sbucket\">sbucket</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a><span class=\"ts\"/>  = <a class=\"id\" href=\"#sk_next\">sk_next</a>(<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#syn_wait_sk\">syn_wait_sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#TCP_SEQ_STATE_LISTENING\">TCP_SEQ_STATE_LISTENING</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_accept_queue\">icsk_accept_queue</a>.<a class=\"id\" href=\"#syn_wait_lock\">syn_wait_lock</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icsk\">icsk</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_lock_bh\">read_lock_bh</a>(&amp;<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_accept_queue\">icsk_accept_queue</a>.<a class=\"id\" href=\"#syn_wait_lock\">syn_wait_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#reqsk_queue_len\">reqsk_queue_len</a>(&amp;<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_accept_queue\">icsk_accept_queue</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#start_req\">start_req</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_accept_queue\">icsk_accept_queue</a>.<a class=\"id\" href=\"#syn_wait_lock\">syn_wait_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#sk_next\">sk_next</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#get_sk\">get_sk</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_nulls_for_each_from\">sk_nulls_for_each_from</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#node\">node</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_family\">sk_family</a> == <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#family\">family</a> && <a class=\"id\" href=\"#net_eq\">net_eq</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#net\">net</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icsk\">icsk</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_lock_bh\">read_lock_bh</a>(&amp;<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_accept_queue\">icsk_accept_queue</a>.<a class=\"id\" href=\"#syn_wait_lock\">syn_wait_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#reqsk_queue_len\">reqsk_queue_len</a>(&amp;<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_accept_queue\">icsk_accept_queue</a>)) {", 
"<a class=\"id\" href=\"#start_req\">start_req</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#uid\">uid</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#sock_i_uid\">sock_i_uid</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#syn_wait_sk\">syn_wait_sk</a> = <a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#state\">state</a><span class=\"ts\"/>= <a class=\"id\" href=\"#TCP_SEQ_STATE_OPENREQ\">TCP_SEQ_STATE_OPENREQ</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#sbucket\">sbucket</a><span class=\"ts\"/>= 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#get_req\">get_req</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_accept_queue\">icsk_accept_queue</a>.<a class=\"id\" href=\"#syn_wait_lock\">syn_wait_lock</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#ilb\">ilb</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"<span class=\"ts\"/>if (++<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#bucket\">bucket</a> &lt; <a class=\"id\" href=\"#INET_LHTABLE_SIZE\">INET_LHTABLE_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ilb\">ilb</a> = &amp;<a class=\"id\" href=\"#tcp_hashinfo\">tcp_hashinfo</a>.<a class=\"id\" href=\"#listening_hash\">listening_hash</a>[<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#bucket\">bucket</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#ilb\">ilb</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#sk_nulls_head\">sk_nulls_head</a>(&amp;<a class=\"id\" href=\"#ilb\">ilb</a>-><a class=\"id\" href=\"#head\">head</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#get_sk\">get_sk</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cur\">cur</a>;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#listening_get_idx\">listening_get_idx</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_iter_state\">tcp_iter_state</a> *<a class=\"id\" href=\"#st\">st</a> = <a class=\"id\" href=\"#seq\">seq</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#bucket\">bucket</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#listening_get_next\">listening_get_next</a>(<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#rc\">rc</a> && *<a class=\"id\" href=\"#pos\">pos</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#listening_get_next\">listening_get_next</a>(<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#rc\">rc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>--*<a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#empty_bucket\">empty_bucket</a>(struct <a class=\"id\" href=\"#tcp_iter_state\">tcp_iter_state</a> *<a class=\"id\" href=\"#st\">st</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#hlist_nulls_empty\">hlist_nulls_empty</a>(&amp;<a class=\"id\" href=\"#tcp_hashinfo\">tcp_hashinfo</a>.<a class=\"id\" href=\"#ehash\">ehash</a>[<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#bucket\">bucket</a>].<a class=\"id\" href=\"#chain\">chain</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlist_nulls_empty\">hlist_nulls_empty</a>(&amp;<a class=\"id\" href=\"#tcp_hashinfo\">tcp_hashinfo</a>.<a class=\"id\" href=\"#ehash\">ehash</a>[<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#bucket\">bucket</a>].<a class=\"id\" href=\"#twchain\">twchain</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Get first established socket starting from bucket given in st-&gt;bucket.</span>", 
"<span class=\"comment\"> * If st-&gt;bucket is zero, the very first socket in the hash is returned.</span>", 
"<span class=\"comment\"> */</span>", 
"static void *<a class=\"id\" href=\"#established_get_first\">established_get_first</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_iter_state\">tcp_iter_state</a> *<a class=\"id\" href=\"#st\">st</a> = <a class=\"id\" href=\"#seq\">seq</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#seq_file_net\">seq_file_net</a>(<a class=\"id\" href=\"#seq\">seq</a>);", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"<span class=\"ts\"/>for (; <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#bucket\">bucket</a> <= <a class=\"id\" href=\"#tcp_hashinfo\">tcp_hashinfo</a>.<a class=\"id\" href=\"#ehash_mask\">ehash_mask</a>; ++<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#bucket\">bucket</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_nulls_node\">hlist_nulls_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_timewait_sock\">inet_timewait_sock</a> *<a class=\"id\" href=\"#tw\">tw</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a> = <a class=\"id\" href=\"#inet_ehash_lockp\">inet_ehash_lockp</a>(&amp;<a class=\"id\" href=\"#tcp_hashinfo\">tcp_hashinfo</a>, <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#bucket\">bucket</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Lockless fast path for the common case of empty buckets */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#empty_bucket\">empty_bucket</a>(<a class=\"id\" href=\"#st\">st</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_nulls_for_each\">sk_nulls_for_each</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#node\">node</a>, &amp;<a class=\"id\" href=\"#tcp_hashinfo\">tcp_hashinfo</a>.<a class=\"id\" href=\"#ehash\">ehash</a>[<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#bucket\">bucket</a>].<a class=\"id\" href=\"#chain\">chain</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_family\">sk_family</a> != <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#family\">family</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#net_eq\">net_eq</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#net\">net</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#TCP_SEQ_STATE_TIME_WAIT\">TCP_SEQ_STATE_TIME_WAIT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_twsk_for_each\">inet_twsk_for_each</a>(<a class=\"id\" href=\"#tw\">tw</a>, <a class=\"id\" href=\"#node\">node</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#tcp_hashinfo\">tcp_hashinfo</a>.<a class=\"id\" href=\"#ehash\">ehash</a>[<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#bucket\">bucket</a>].<a class=\"id\" href=\"#twchain\">twchain</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_family\">tw_family</a> != <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#family\">family</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#net_eq\">net_eq</a>(<a class=\"id\" href=\"#twsk_net\">twsk_net</a>(<a class=\"id\" href=\"#tw\">tw</a>), <a class=\"id\" href=\"#net\">net</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#tw\">tw</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#TCP_SEQ_STATE_ESTABLISHED\">TCP_SEQ_STATE_ESTABLISHED</a>;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#established_get_next\">established_get_next</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#cur\">cur</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#cur\">cur</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_timewait_sock\">inet_timewait_sock</a> *<a class=\"id\" href=\"#tw\">tw</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_nulls_node\">hlist_nulls_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_iter_state\">tcp_iter_state</a> *<a class=\"id\" href=\"#st\">st</a> = <a class=\"id\" href=\"#seq\">seq</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#seq_file_net\">seq_file_net</a>(<a class=\"id\" href=\"#seq\">seq</a>);", 
"", 
"<span class=\"ts\"/>++<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#num\">num</a>;", 
"<span class=\"ts\"/>++<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#offset\">offset</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#state\">state</a> == <a class=\"id\" href=\"#TCP_SEQ_STATE_TIME_WAIT\">TCP_SEQ_STATE_TIME_WAIT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tw\">tw</a> = <a class=\"id\" href=\"#cur\">cur</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tw\">tw</a> = <a class=\"id\" href=\"#tw_next\">tw_next</a>(<a class=\"id\" href=\"#tw\">tw</a>);", 
"<a class=\"id\" href=\"#get_tw\">get_tw</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#tw\">tw</a> && (<a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_family\">tw_family</a> != <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#family\">family</a> || !<a class=\"id\" href=\"#net_eq\">net_eq</a>(<a class=\"id\" href=\"#twsk_net\">twsk_net</a>(<a class=\"id\" href=\"#tw\">tw</a>), <a class=\"id\" href=\"#net\">net</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tw\">tw</a> = <a class=\"id\" href=\"#tw_next\">tw_next</a>(<a class=\"id\" href=\"#tw\">tw</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tw\">tw</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#tw\">tw</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(<a class=\"id\" href=\"#inet_ehash_lockp\">inet_ehash_lockp</a>(&amp;<a class=\"id\" href=\"#tcp_hashinfo\">tcp_hashinfo</a>, <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#bucket\">bucket</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#TCP_SEQ_STATE_ESTABLISHED\">TCP_SEQ_STATE_ESTABLISHED</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Look for next non empty bucket */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>while (++<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#bucket\">bucket</a> <= <a class=\"id\" href=\"#tcp_hashinfo\">tcp_hashinfo</a>.<a class=\"id\" href=\"#ehash_mask\">ehash_mask</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#empty_bucket\">empty_bucket</a>(<a class=\"id\" href=\"#st\">st</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#bucket\">bucket</a> &gt; <a class=\"id\" href=\"#tcp_hashinfo\">tcp_hashinfo</a>.<a class=\"id\" href=\"#ehash_mask\">ehash_mask</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(<a class=\"id\" href=\"#inet_ehash_lockp\">inet_ehash_lockp</a>(&amp;<a class=\"id\" href=\"#tcp_hashinfo\">tcp_hashinfo</a>, <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#bucket\">bucket</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#sk_nulls_head\">sk_nulls_head</a>(&amp;<a class=\"id\" href=\"#tcp_hashinfo\">tcp_hashinfo</a>.<a class=\"id\" href=\"#ehash\">ehash</a>[<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#bucket\">bucket</a>].<a class=\"id\" href=\"#chain\">chain</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#sk_nulls_next\">sk_nulls_next</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_nulls_for_each_from\">sk_nulls_for_each_from</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#node\">node</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_family\">sk_family</a> == <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#family\">family</a> && <a class=\"id\" href=\"#net_eq\">net_eq</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#net\">net</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#found\">found</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#TCP_SEQ_STATE_TIME_WAIT\">TCP_SEQ_STATE_TIME_WAIT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tw\">tw</a> = <a class=\"id\" href=\"#tw_head\">tw_head</a>(&amp;<a class=\"id\" href=\"#tcp_hashinfo\">tcp_hashinfo</a>.<a class=\"id\" href=\"#ehash\">ehash</a>[<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#bucket\">bucket</a>].<a class=\"id\" href=\"#twchain\">twchain</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#get_tw\">get_tw</a>;", 
"<a class=\"id\" href=\"#found\">found</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#sk\">sk</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cur\">cur</a>;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#established_get_idx\">established_get_idx</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_iter_state\">tcp_iter_state</a> *<a class=\"id\" href=\"#st\">st</a> = <a class=\"id\" href=\"#seq\">seq</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#bucket\">bucket</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#established_get_first\">established_get_first</a>(<a class=\"id\" href=\"#seq\">seq</a>);", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#rc\">rc</a> && <a class=\"id\" href=\"#pos\">pos</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#established_get_next\">established_get_next</a>(<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#rc\">rc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>--<a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#tcp_get_idx\">tcp_get_idx</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_iter_state\">tcp_iter_state</a> *<a class=\"id\" href=\"#st\">st</a> = <a class=\"id\" href=\"#seq\">seq</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#TCP_SEQ_STATE_LISTENING\">TCP_SEQ_STATE_LISTENING</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a><span class=\"ts\"/>  = <a class=\"id\" href=\"#listening_get_idx\">listening_get_idx</a>(<a class=\"id\" href=\"#seq\">seq</a>, &amp;<a class=\"id\" href=\"#pos\">pos</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rc\">rc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#TCP_SEQ_STATE_ESTABLISHED\">TCP_SEQ_STATE_ESTABLISHED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a><span class=\"ts\"/>  = <a class=\"id\" href=\"#established_get_idx\">established_get_idx</a>(<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#tcp_seek_last_pos\">tcp_seek_last_pos</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_iter_state\">tcp_iter_state</a> *<a class=\"id\" href=\"#st\">st</a> = <a class=\"id\" href=\"#seq\">seq</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#orig_num\">orig_num</a> = <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#num\">num</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#state\">state</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TCP_SEQ_STATE_OPENREQ\">TCP_SEQ_STATE_OPENREQ</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TCP_SEQ_STATE_LISTENING\">TCP_SEQ_STATE_LISTENING</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#bucket\">bucket</a> >= <a class=\"id\" href=\"#INET_LHTABLE_SIZE\">INET_LHTABLE_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#TCP_SEQ_STATE_LISTENING\">TCP_SEQ_STATE_LISTENING</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#listening_get_next\">listening_get_next</a>(<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#offset\">offset</a>-- && <a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#listening_get_next\">listening_get_next</a>(<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#rc\">rc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#bucket\">bucket</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Fallthrough */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TCP_SEQ_STATE_ESTABLISHED\">TCP_SEQ_STATE_ESTABLISHED</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TCP_SEQ_STATE_TIME_WAIT\">TCP_SEQ_STATE_TIME_WAIT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#TCP_SEQ_STATE_ESTABLISHED\">TCP_SEQ_STATE_ESTABLISHED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#bucket\">bucket</a> &gt; <a class=\"id\" href=\"#tcp_hashinfo\">tcp_hashinfo</a>.<a class=\"id\" href=\"#ehash_mask\">ehash_mask</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#established_get_first\">established_get_first</a>(<a class=\"id\" href=\"#seq\">seq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#offset\">offset</a>-- && <a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#established_get_next\">established_get_next</a>(<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#rc\">rc</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#num\">num</a> = <a class=\"id\" href=\"#orig_num\">orig_num</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#tcp_seq_start\">tcp_seq_start</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_iter_state\">tcp_iter_state</a> *<a class=\"id\" href=\"#st\">st</a> = <a class=\"id\" href=\"#seq\">seq</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#pos\">pos</a> && *<a class=\"id\" href=\"#pos\">pos</a> == <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#last_pos\">last_pos</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#tcp_seek_last_pos\">tcp_seek_last_pos</a>(<a class=\"id\" href=\"#seq\">seq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#TCP_SEQ_STATE_LISTENING\">TCP_SEQ_STATE_LISTENING</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#num\">num</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#bucket\">bucket</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = *<a class=\"id\" href=\"#pos\">pos</a> ? <a class=\"id\" href=\"#tcp_get_idx\">tcp_get_idx</a>(<a class=\"id\" href=\"#seq\">seq</a>, *<a class=\"id\" href=\"#pos\">pos</a> - 1) : <a class=\"id\" href=\"#SEQ_START_TOKEN\">SEQ_START_TOKEN</a>;", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#last_pos\">last_pos</a> = *<a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#tcp_seq_next\">tcp_seq_next</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_iter_state\">tcp_iter_state</a> *<a class=\"id\" href=\"#st\">st</a> = <a class=\"id\" href=\"#seq\">seq</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#v\">v</a> == <a class=\"id\" href=\"#SEQ_START_TOKEN\">SEQ_START_TOKEN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#tcp_get_idx\">tcp_get_idx</a>(<a class=\"id\" href=\"#seq\">seq</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#state\">state</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TCP_SEQ_STATE_OPENREQ\">TCP_SEQ_STATE_OPENREQ</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TCP_SEQ_STATE_LISTENING\">TCP_SEQ_STATE_LISTENING</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#listening_get_next\">listening_get_next</a>(<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#v\">v</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#rc\">rc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#TCP_SEQ_STATE_ESTABLISHED\">TCP_SEQ_STATE_ESTABLISHED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#bucket\">bucket</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a><span class=\"ts\"/>  = <a class=\"id\" href=\"#established_get_first\">established_get_first</a>(<a class=\"id\" href=\"#seq\">seq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TCP_SEQ_STATE_ESTABLISHED\">TCP_SEQ_STATE_ESTABLISHED</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TCP_SEQ_STATE_TIME_WAIT\">TCP_SEQ_STATE_TIME_WAIT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#established_get_next\">established_get_next</a>(<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#v\">v</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>++*<a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#last_pos\">last_pos</a> = *<a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#tcp_seq_stop\">tcp_seq_stop</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_iter_state\">tcp_iter_state</a> *<a class=\"id\" href=\"#st\">st</a> = <a class=\"id\" href=\"#seq\">seq</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#state\">state</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TCP_SEQ_STATE_OPENREQ\">TCP_SEQ_STATE_OPENREQ</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#v\">v</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a> *<a class=\"id\" href=\"#icsk\">icsk</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#syn_wait_sk\">syn_wait_sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_accept_queue\">icsk_accept_queue</a>.<a class=\"id\" href=\"#syn_wait_lock\">syn_wait_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TCP_SEQ_STATE_LISTENING\">TCP_SEQ_STATE_LISTENING</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#v\">v</a> != <a class=\"id\" href=\"#SEQ_START_TOKEN\">SEQ_START_TOKEN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#tcp_hashinfo\">tcp_hashinfo</a>.<a class=\"id\" href=\"#listening_hash\">listening_hash</a>[<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#bucket\">bucket</a>].<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TCP_SEQ_STATE_TIME_WAIT\">TCP_SEQ_STATE_TIME_WAIT</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TCP_SEQ_STATE_ESTABLISHED\">TCP_SEQ_STATE_ESTABLISHED</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#v\">v</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(<a class=\"id\" href=\"#inet_ehash_lockp\">inet_ehash_lockp</a>(&amp;<a class=\"id\" href=\"#tcp_hashinfo\">tcp_hashinfo</a>, <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#bucket\">bucket</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#tcp_seq_open\">tcp_seq_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_seq_afinfo\">tcp_seq_afinfo</a> *<a class=\"id\" href=\"#afinfo\">afinfo</a> = <a class=\"id\" href=\"#PDE\">PDE</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_iter_state\">tcp_iter_state</a> *<a class=\"id\" href=\"#s\">s</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#seq_open_net\">seq_open_net</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#afinfo\">afinfo</a>-><a class=\"id\" href=\"#seq_ops\">seq_ops</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  sizeof(struct <a class=\"id\" href=\"#tcp_iter_state\">tcp_iter_state</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a> = ((struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *)<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>)-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#family\">family</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#afinfo\">afinfo</a>-><a class=\"id\" href=\"#family\">family</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#last_pos\">last_pos</a> <span class=\"ts\"/><span class=\"ts\"/>= 0;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#tcp_proc_register\">tcp_proc_register</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#tcp_seq_afinfo\">tcp_seq_afinfo</a> *<a class=\"id\" href=\"#afinfo\">afinfo</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proc_dir_entry\">proc_dir_entry</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#afinfo\">afinfo</a>-><a class=\"id\" href=\"#seq_fops\">seq_fops</a>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tcp_seq_open\">tcp_seq_open</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#afinfo\">afinfo</a>-><a class=\"id\" href=\"#seq_fops\">seq_fops</a>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_read\">seq_read</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#afinfo\">afinfo</a>-><a class=\"id\" href=\"#seq_fops\">seq_fops</a>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#afinfo\">afinfo</a>-><a class=\"id\" href=\"#seq_fops\">seq_fops</a>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_release_net\">seq_release_net</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#afinfo\">afinfo</a>-><a class=\"id\" href=\"#seq_ops\">seq_ops</a>.<a class=\"id\" href=\"#start\">start</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tcp_seq_start\">tcp_seq_start</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#afinfo\">afinfo</a>-><a class=\"id\" href=\"#seq_ops\">seq_ops</a>.<a class=\"id\" href=\"#next\">next</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tcp_seq_next\">tcp_seq_next</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#afinfo\">afinfo</a>-><a class=\"id\" href=\"#seq_ops\">seq_ops</a>.<a class=\"id\" href=\"#stop\">stop</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tcp_seq_stop\">tcp_seq_stop</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#proc_create_data\">proc_create_data</a>(<a class=\"id\" href=\"#afinfo\">afinfo</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#proc_net\">proc_net</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     &amp;<a class=\"id\" href=\"#afinfo\">afinfo</a>-><a class=\"id\" href=\"#seq_fops\">seq_fops</a>, <a class=\"id\" href=\"#afinfo\">afinfo</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tcp_proc_register\">tcp_proc_register</a>);", 
"", 
"void <a class=\"id\" href=\"#tcp_proc_unregister\">tcp_proc_unregister</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#tcp_seq_afinfo\">tcp_seq_afinfo</a> *<a class=\"id\" href=\"#afinfo\">afinfo</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proc_net_remove\">proc_net_remove</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#afinfo\">afinfo</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tcp_proc_unregister\">tcp_proc_unregister</a>);", 
"", 
"static void <a class=\"id\" href=\"#get_openreq4\">get_openreq4</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#f\">f</a>, int <a class=\"id\" href=\"#i\">i</a>, int <a class=\"id\" href=\"#uid\">uid</a>, int *<a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#inet_request_sock\">inet_request_sock</a> *<a class=\"id\" href=\"#ireq\">ireq</a> = <a class=\"id\" href=\"#inet_rsk\">inet_rsk</a>(<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ttd\">ttd</a> = <a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#expires\">expires</a> - <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#f\">f</a>, \"%4d: %08X:%04X %08X:%04X\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\" %02X %08X:%08X %02X:%08lX %08X %5d %8d %u %d %p%n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#loc_addr\">loc_addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#inet_sport\">inet_sport</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#rmt_addr\">rmt_addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#rmt_port\">rmt_port</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#TCP_SYN_RECV\">TCP_SYN_RECV</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>0, 0, <span class=\"comment\">/* could print option size, but that is af dependent. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>1,    <span class=\"comment\">/* timers active (only the expire timer) */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jiffies_to_clock_t\">jiffies_to_clock_t</a>(<a class=\"id\" href=\"#ttd\">ttd</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#retrans\">retrans</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uid\">uid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>0,  <span class=\"comment\">/* non standard timer */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>0, <span class=\"comment\">/* open_requests have no inode */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_refcnt\">sk_refcnt</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#get_tcp4_sock\">get_tcp4_sock</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#f\">f</a>, int <a class=\"id\" href=\"#i\">i</a>, int *<a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#timer_active\">timer_active</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#timer_expires\">timer_expires</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a> *<a class=\"id\" href=\"#icsk\">icsk</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#dest\">dest</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_daddr\">inet_daddr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#src\">src</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_rcv_saddr\">inet_rcv_saddr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#destp\">destp</a> = <a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_dport\">inet_dport</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#srcp\">srcp</a> = <a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_sport\">inet_sport</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rx_queue\">rx_queue</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_pending\">icsk_pending</a> == <a class=\"id\" href=\"#ICSK_TIME_RETRANS\">ICSK_TIME_RETRANS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timer_active\">timer_active</a><span class=\"ts\"/>= 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timer_expires\">timer_expires</a><span class=\"ts\"/>= <a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_timeout\">icsk_timeout</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_pending\">icsk_pending</a> == <a class=\"id\" href=\"#ICSK_TIME_PROBE0\">ICSK_TIME_PROBE0</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timer_active\">timer_active</a><span class=\"ts\"/>= 4;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timer_expires\">timer_expires</a><span class=\"ts\"/>= <a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_timeout\">icsk_timeout</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#timer_pending\">timer_pending</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_timer\">sk_timer</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timer_active\">timer_active</a><span class=\"ts\"/>= 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timer_expires\">timer_expires</a><span class=\"ts\"/>= <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_timer\">sk_timer</a>.<a class=\"id\" href=\"#expires\">expires</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timer_active\">timer_active</a><span class=\"ts\"/>= 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timer_expires\">timer_expires</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> == <a class=\"id\" href=\"#TCP_LISTEN\">TCP_LISTEN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rx_queue\">rx_queue</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_ack_backlog\">sk_ack_backlog</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * because we dont lock socket, we might find a transient negative value</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rx_queue\">rx_queue</a> = <a class=\"id\" href=\"#max_t\">max_t</a>(int, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_nxt\">rcv_nxt</a> - <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#copied_seq\">copied_seq</a>, 0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#f\">f</a>, \"%4d: %08X:%04X %08X:%04X %02X %08X:%08X %02X:%08lX \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"%08X %5d %8d %lu %d %p %lu %lu %u %u %d%n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#src\">src</a>, <a class=\"id\" href=\"#srcp\">srcp</a>, <a class=\"id\" href=\"#dest\">dest</a>, <a class=\"id\" href=\"#destp\">destp</a>, <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#write_seq\">write_seq</a> - <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_una\">snd_una</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rx_queue\">rx_queue</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timer_active\">timer_active</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jiffies_to_clock_t\">jiffies_to_clock_t</a>(<a class=\"id\" href=\"#timer_expires\">timer_expires</a> - <a class=\"id\" href=\"#jiffies\">jiffies</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_retransmits\">icsk_retransmits</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_i_uid\">sock_i_uid</a>(<a class=\"id\" href=\"#sk\">sk</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_probes_out\">icsk_probes_out</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_i_ino\">sock_i_ino</a>(<a class=\"id\" href=\"#sk\">sk</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_refcnt\">sk_refcnt</a>), <a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jiffies_to_clock_t\">jiffies_to_clock_t</a>(<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_rto\">icsk_rto</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jiffies_to_clock_t\">jiffies_to_clock_t</a>(<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ack\">icsk_ack</a>.<a class=\"id\" href=\"#ato\">ato</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ack\">icsk_ack</a>.<a class=\"id\" href=\"#quick\">quick</a> << 1) | <a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ack\">icsk_ack</a>.<a class=\"id\" href=\"#pingpong\">pingpong</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd\">snd_cwnd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_in_initial_slowstart\">tcp_in_initial_slowstart</a>(<a class=\"id\" href=\"#tp\">tp</a>) ? -1 : <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_ssthresh\">snd_ssthresh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#get_timewait4_sock\">get_timewait4_sock</a>(struct <a class=\"id\" href=\"#inet_timewait_sock\">inet_timewait_sock</a> *<a class=\"id\" href=\"#tw\">tw</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#f\">f</a>, int <a class=\"id\" href=\"#i\">i</a>, int *<a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#dest\">dest</a>, <a class=\"id\" href=\"#src\">src</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#destp\">destp</a>, <a class=\"id\" href=\"#srcp\">srcp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ttd\">ttd</a> = <a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_ttd\">tw_ttd</a> - <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ttd\">ttd</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ttd\">ttd</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dest\">dest</a>  = <a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_daddr\">tw_daddr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#src\">src</a>   = <a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_rcv_saddr\">tw_rcv_saddr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#destp\">destp</a> = <a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_dport\">tw_dport</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#srcp\">srcp</a>  = <a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_sport\">tw_sport</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#f\">f</a>, \"%4d: %08X:%04X %08X:%04X\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\" %02X %08X:%08X %02X:%08lX %08X %5d %8d %d %d %p%n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#src\">src</a>, <a class=\"id\" href=\"#srcp\">srcp</a>, <a class=\"id\" href=\"#dest\">dest</a>, <a class=\"id\" href=\"#destp\">destp</a>, <a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_substate\">tw_substate</a>, 0, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/>3, <a class=\"id\" href=\"#jiffies_to_clock_t\">jiffies_to_clock_t</a>(<a class=\"id\" href=\"#ttd\">ttd</a>), 0, 0, 0, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_refcnt\">tw_refcnt</a>), <a class=\"id\" href=\"#tw\">tw</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TMPSZ\">TMPSZ</a> 150", 
"", 
"static int <a class=\"id\" href=\"#tcp4_seq_show\">tcp4_seq_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_iter_state\">tcp_iter_state</a> *<a class=\"id\" href=\"#st\">st</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#v\">v</a> == <a class=\"id\" href=\"#SEQ_START_TOKEN\">SEQ_START_TOKEN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"%-*s\\n\", <a class=\"id\" href=\"#TMPSZ\">TMPSZ</a> - 1,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"  sl  local_address rem_address   st tx_queue \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"rx_queue tr tm->when retrnsmt   uid  timeout \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"inode\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a> = <a class=\"id\" href=\"#seq\">seq</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#state\">state</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TCP_SEQ_STATE_LISTENING\">TCP_SEQ_STATE_LISTENING</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TCP_SEQ_STATE_ESTABLISHED\">TCP_SEQ_STATE_ESTABLISHED</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_tcp4_sock\">get_tcp4_sock</a>(<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#num\">num</a>, &amp;<a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TCP_SEQ_STATE_OPENREQ\">TCP_SEQ_STATE_OPENREQ</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_openreq4\">get_openreq4</a>(<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#syn_wait_sk\">syn_wait_sk</a>, <a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#num\">num</a>, <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#uid\">uid</a>, &amp;<a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TCP_SEQ_STATE_TIME_WAIT\">TCP_SEQ_STATE_TIME_WAIT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_timewait4_sock\">get_timewait4_sock</a>(<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#num\">num</a>, &amp;<a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"%*s\\n\", <a class=\"id\" href=\"#TMPSZ\">TMPSZ</a> - 1 - <a class=\"id\" href=\"#len\">len</a>, \"\");", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#tcp_seq_afinfo\">tcp_seq_afinfo</a> <a class=\"id\" href=\"#tcp4_seq_afinfo\">tcp4_seq_afinfo</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= \"tcp\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#family\">family</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#AF_INET\">AF_INET</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#seq_fops\">seq_fops</a><span class=\"ts\"/>= {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#seq_ops\">seq_ops</a><span class=\"ts\"/>= {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tcp4_seq_show\">tcp4_seq_show</a>,", 
"<span class=\"ts\"/>},", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__net_init\">__net_init</a> <a class=\"id\" href=\"#tcp4_proc_init_net\">tcp4_proc_init_net</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tcp_proc_register\">tcp_proc_register</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#tcp4_seq_afinfo\">tcp4_seq_afinfo</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__net_exit\">__net_exit</a> <a class=\"id\" href=\"#tcp4_proc_exit_net\">tcp4_proc_exit_net</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_proc_unregister\">tcp_proc_unregister</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#tcp4_seq_afinfo\">tcp4_seq_afinfo</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#pernet_operations\">pernet_operations</a> <a class=\"id\" href=\"#tcp4_net_ops\">tcp4_net_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#init\">init</a> = <a class=\"id\" href=\"#tcp4_proc_init_net\">tcp4_proc_init_net</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#exit\">exit</a> = <a class=\"id\" href=\"#tcp4_proc_exit_net\">tcp4_proc_exit_net</a>,", 
"};", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#tcp4_proc_init\">tcp4_proc_init</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#register_pernet_subsys\">register_pernet_subsys</a>(&amp;<a class=\"id\" href=\"#tcp4_net_ops\">tcp4_net_ops</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#tcp4_proc_exit\">tcp4_proc_exit</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_pernet_subsys\">unregister_pernet_subsys</a>(&amp;<a class=\"id\" href=\"#tcp4_net_ops\">tcp4_net_ops</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_PROC_FS */</span>", 
"", 
"struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> **<a class=\"id\" href=\"#tcp4_gro_receive\">tcp4_gro_receive</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> **<a class=\"id\" href=\"#head\">head</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iphdr\">iphdr</a> *<a class=\"id\" href=\"#iph\">iph</a> = <a class=\"id\" href=\"#skb_gro_network_header\">skb_gro_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CHECKSUM_COMPLETE\">CHECKSUM_COMPLETE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tcp_v4_check\">tcp_v4_check</a>(<a class=\"id\" href=\"#skb_gro_len\">skb_gro_len</a>(<a class=\"id\" href=\"#skb\">skb</a>), <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#daddr\">daddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> = <a class=\"id\" href=\"#CHECKSUM_UNNECESSARY\">CHECKSUM_UNNECESSARY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fall through */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CHECKSUM_NONE\">CHECKSUM_NONE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NAPI_GRO_CB\">NAPI_GRO_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#flush\">flush</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tcp_gro_receive\">tcp_gro_receive</a>(<a class=\"id\" href=\"#head\">head</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tcp4_gro_receive\">tcp4_gro_receive</a>);", 
"", 
"int <a class=\"id\" href=\"#tcp4_gro_complete\">tcp4_gro_complete</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iphdr\">iphdr</a> *<a class=\"id\" href=\"#iph\">iph</a> = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a> *<a class=\"id\" href=\"#th\">th</a> = <a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#check\">check</a> = ~<a class=\"id\" href=\"#tcp_v4_check\">tcp_v4_check</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> - <a class=\"id\" href=\"#skb_transport_offset\">skb_transport_offset</a>(<a class=\"id\" href=\"#skb\">skb</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#daddr\">daddr</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_type\">gso_type</a> = <a class=\"id\" href=\"#SKB_GSO_TCPV4\">SKB_GSO_TCPV4</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tcp_gro_complete\">tcp_gro_complete</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tcp4_gro_complete\">tcp4_gro_complete</a>);", 
"", 
"struct <a class=\"id\" href=\"#proto\">proto</a> <a class=\"id\" href=\"#tcp_prot\">tcp_prot</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= \"TCP\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#close\">close</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tcp_close\">tcp_close</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#connect\">connect</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tcp_v4_connect\">tcp_v4_connect</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#disconnect\">disconnect</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tcp_disconnect\">tcp_disconnect</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#accept\">accept</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#inet_csk_accept\">inet_csk_accept</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ioctl\">ioctl</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tcp_ioctl\">tcp_ioctl</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#init\">init</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tcp_v4_init_sock\">tcp_v4_init_sock</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#destroy\">destroy</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tcp_v4_destroy_sock\">tcp_v4_destroy_sock</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#shutdown\">shutdown</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tcp_shutdown\">tcp_shutdown</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#setsockopt\">setsockopt</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tcp_setsockopt\">tcp_setsockopt</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#getsockopt\">getsockopt</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tcp_getsockopt\">tcp_getsockopt</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#recvmsg\">recvmsg</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tcp_recvmsg\">tcp_recvmsg</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sendmsg\">sendmsg</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tcp_sendmsg\">tcp_sendmsg</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sendpage\">sendpage</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tcp_sendpage\">tcp_sendpage</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#backlog_rcv\">backlog_rcv</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tcp_v4_do_rcv\">tcp_v4_do_rcv</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#hash\">hash</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#inet_hash\">inet_hash</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#unhash\">unhash</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#inet_unhash\">inet_unhash</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#get_port\">get_port</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#inet_csk_get_port\">inet_csk_get_port</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#enter_memory_pressure\">enter_memory_pressure</a><span class=\"ts\"/>= <a class=\"id\" href=\"#tcp_enter_memory_pressure\">tcp_enter_memory_pressure</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sockets_allocated\">sockets_allocated</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#tcp_sockets_allocated\">tcp_sockets_allocated</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#orphan_count\">orphan_count</a><span class=\"ts\"/><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#tcp_orphan_count\">tcp_orphan_count</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#memory_allocated\">memory_allocated</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#tcp_memory_allocated\">tcp_memory_allocated</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#memory_pressure\">memory_pressure</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#tcp_memory_pressure\">tcp_memory_pressure</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sysctl_mem\">sysctl_mem</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#sysctl_tcp_mem\">sysctl_tcp_mem</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sysctl_wmem\">sysctl_wmem</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#sysctl_tcp_wmem\">sysctl_tcp_wmem</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sysctl_rmem\">sysctl_rmem</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#sysctl_tcp_rmem\">sysctl_tcp_rmem</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#max_header\">max_header</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#MAX_TCP_HEADER\">MAX_TCP_HEADER</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#obj_size\">obj_size</a><span class=\"ts\"/><span class=\"ts\"/>= sizeof(struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a>),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#slab_flags\">slab_flags</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#SLAB_DESTROY_BY_RCU\">SLAB_DESTROY_BY_RCU</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#twsk_prot\">twsk_prot</a><span class=\"ts\"/><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#tcp_timewait_sock_ops\">tcp_timewait_sock_ops</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#rsk_prot\">rsk_prot</a><span class=\"ts\"/><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#tcp_request_sock_ops\">tcp_request_sock_ops</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#h\">h</a>.<a class=\"id\" href=\"#hashinfo\">hashinfo</a><span class=\"ts\"/><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#tcp_hashinfo\">tcp_hashinfo</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#no_autobind\">no_autobind</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#true\">true</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#compat_setsockopt\">compat_setsockopt</a><span class=\"ts\"/>= <a class=\"id\" href=\"#compat_tcp_setsockopt\">compat_tcp_setsockopt</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#compat_getsockopt\">compat_getsockopt</a><span class=\"ts\"/>= <a class=\"id\" href=\"#compat_tcp_getsockopt\">compat_tcp_getsockopt</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tcp_prot\">tcp_prot</a>);", 
"", 
"", 
"static int <a class=\"id\" href=\"#__net_init\">__net_init</a> <a class=\"id\" href=\"#tcp_sk_init\">tcp_sk_init</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#inet_ctl_sock_create\">inet_ctl_sock_create</a>(&amp;<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv4\">ipv4</a>.<a class=\"id\" href=\"#tcp_sock\">tcp_sock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#PF_INET\">PF_INET</a>, <a class=\"id\" href=\"#SOCK_RAW\">SOCK_RAW</a>, <a class=\"id\" href=\"#IPPROTO_TCP\">IPPROTO_TCP</a>, <a class=\"id\" href=\"#net\">net</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__net_exit\">__net_exit</a> <a class=\"id\" href=\"#tcp_sk_exit\">tcp_sk_exit</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet_ctl_sock_destroy\">inet_ctl_sock_destroy</a>(<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv4\">ipv4</a>.<a class=\"id\" href=\"#tcp_sock\">tcp_sock</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__net_exit\">__net_exit</a> <a class=\"id\" href=\"#tcp_sk_exit_batch\">tcp_sk_exit_batch</a>(struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#net_exit_list\">net_exit_list</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet_twsk_purge\">inet_twsk_purge</a>(&amp;<a class=\"id\" href=\"#tcp_hashinfo\">tcp_hashinfo</a>, &amp;<a class=\"id\" href=\"#tcp_death_row\">tcp_death_row</a>, <a class=\"id\" href=\"#AF_INET\">AF_INET</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#pernet_operations\">pernet_operations</a> <a class=\"id\" href=\"#__net_initdata\">__net_initdata</a> <a class=\"id\" href=\"#tcp_sk_ops\">tcp_sk_ops</a> = {", 
"       .<a class=\"id\" href=\"#init\">init</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#tcp_sk_init\">tcp_sk_init</a>,", 
"       .<a class=\"id\" href=\"#exit\">exit</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#tcp_sk_exit\">tcp_sk_exit</a>,", 
"       .<a class=\"id\" href=\"#exit_batch\">exit_batch</a> = <a class=\"id\" href=\"#tcp_sk_exit_batch\">tcp_sk_exit_batch</a>,", 
"};", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#tcp_v4_init\">tcp_v4_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet_hashinfo_init\">inet_hashinfo_init</a>(&amp;<a class=\"id\" href=\"#tcp_hashinfo\">tcp_hashinfo</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#register_pernet_subsys\">register_pernet_subsys</a>(&amp;<a class=\"id\" href=\"#tcp_sk_ops\">tcp_sk_ops</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"Failed to create the TCP control socket.\\n\");", 
"}", 
];
xr_frag_insert('l/62/8b530b6d7f102045d51f96d52f7a8ffbf42f9d.xr', __xr_tmp);
