var __xr_tmp = [
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HIBERNATION\">CONFIG_HIBERNATION</a>", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * Mark ACPI NVS memory region, so that we can save/restore it during</span>", 
"<span class=\"comment\"> * hibernation and the subsequent resume.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#e820_mark_nvs_memory\">e820_mark_nvs_memory</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#nr_map\">nr_map</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#e820entry\">e820entry</a> *<a class=\"id\" href=\"#ei\">ei</a> = &amp;<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#map\">map</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#E820_NVS\">E820_NVS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#suspend_nvs_register\">suspend_nvs_register</a>(<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#core_initcall\">core_initcall</a>(<a class=\"id\" href=\"#e820_mark_nvs_memory\">e820_mark_nvs_memory</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Find a free area with specified alignment in a specific range.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#find_e820_area\">find_e820_area</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#align\">align</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#nr_map\">nr_map</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#e820entry\">e820entry</a> *<a class=\"id\" href=\"#ei\">ei</a> = &amp;<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#map\">map</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#ei_start\">ei_start</a>, <a class=\"id\" href=\"#ei_last\">ei_last</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#E820_RAM\">E820_RAM</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ei_last\">ei_last</a> = <a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#addr\">addr</a> + <a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ei_start\">ei_start</a> = <a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#find_early_area\">find_early_area</a>(<a class=\"id\" href=\"#ei_start\">ei_start</a>, <a class=\"id\" href=\"#ei_last\">ei_last</a>, <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#align\">align</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#addr\">addr</a> != -1ULL)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return -1ULL;", 
"}", 
"", 
"<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#find_fw_memmap_area\">find_fw_memmap_area</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#align\">align</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#find_e820_area\">find_e820_area</a>(<a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#align\">align</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#get_max_mapped\">get_max_mapped</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#max_pfn_mapped\">max_pfn_mapped</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> <<= <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#end\">end</a>;", 
"}", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Find next free range after *start</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#find_e820_area_size\">find_e820_area_size</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#u64\">u64</a> *<a class=\"id\" href=\"#sizep\">sizep</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#align\">align</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#nr_map\">nr_map</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#e820entry\">e820entry</a> *<a class=\"id\" href=\"#ei\">ei</a> = &amp;<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#map\">map</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#ei_start\">ei_start</a>, <a class=\"id\" href=\"#ei_last\">ei_last</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#E820_RAM\">E820_RAM</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ei_last\">ei_last</a> = <a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#addr\">addr</a> + <a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ei_start\">ei_start</a> = <a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#find_early_area_size\">find_early_area_size</a>(<a class=\"id\" href=\"#ei_start\">ei_start</a>, <a class=\"id\" href=\"#ei_last\">ei_last</a>, <a class=\"id\" href=\"#start\">start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#sizep\">sizep</a>, <a class=\"id\" href=\"#align\">align</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#addr\">addr</a> != -1ULL)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return -1ULL;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * pre allocated 4k and reserved it in e820</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#early_reserve_e820\">early_reserve_e820</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#startt\">startt</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#sizet\">sizet</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#align\">align</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#size\">size</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start\">start</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#startt\">startt</a>; ; <a class=\"id\" href=\"#start\">start</a> += <a class=\"id\" href=\"#size\">size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#find_e820_area_size\">find_e820_area_size</a>(<a class=\"id\" href=\"#start\">start</a>, &amp;<a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#align\">align</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#start\">start</a> + 1))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> >= <a class=\"id\" href=\"#sizet\">sizet</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#start\">start</a> >= <a class=\"id\" href=\"#MAXMEM\">MAXMEM</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#start\">start</a> + <a class=\"id\" href=\"#size\">size</a> &gt; <a class=\"id\" href=\"#MAXMEM\">MAXMEM</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#MAXMEM\">MAXMEM</a> - <a class=\"id\" href=\"#start\">start</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#round_down\">round_down</a>(<a class=\"id\" href=\"#start\">start</a> + <a class=\"id\" href=\"#size\">size</a> - <a class=\"id\" href=\"#sizet\">sizet</a>, <a class=\"id\" href=\"#align\">align</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr\">addr</a> &lt; <a class=\"id\" href=\"#start\">start</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e820_update_range\">e820_update_range</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#sizet\">sizet</a>, <a class=\"id\" href=\"#E820_RAM\">E820_RAM</a>, <a class=\"id\" href=\"#E820_RESERVED\">E820_RESERVED</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e820_update_range_saved\">e820_update_range_saved</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#sizet\">sizet</a>, <a class=\"id\" href=\"#E820_RAM\">E820_RAM</a>, <a class=\"id\" href=\"#E820_RESERVED\">E820_RESERVED</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"update e820 for early_reserve_e820\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#update_e820\">update_e820</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#update_e820_saved\">update_e820_saved</a>();", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#addr\">addr</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"# <a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_PAE\">CONFIG_X86_PAE</a>", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_ARCH_PFN\">MAX_ARCH_PFN</a><span class=\"ts\"/><span class=\"ts\"/>(1ULL<<(36-<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>))", 
"# else", 
"#  <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_ARCH_PFN\">MAX_ARCH_PFN</a><span class=\"ts\"/><span class=\"ts\"/>(1ULL<<(32-<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>))", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"#else <span class=\"comment\">/* CONFIG_X86_32 */</span>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_ARCH_PFN\">MAX_ARCH_PFN</a> <a class=\"id\" href=\"#MAXMEM\">MAXMEM</a>>><a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Find the highest page frame number we have available</span>", 
"<span class=\"comment\"> */</span>", 
"static unsigned long <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#e820_end_pfn\">e820_end_pfn</a>(unsigned long <a class=\"id\" href=\"#limit_pfn\">limit_pfn</a>, unsigned <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#last_pfn\">last_pfn</a> = 0;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#max_arch_pfn\">max_arch_pfn</a> = <a class=\"id\" href=\"#MAX_ARCH_PFN\">MAX_ARCH_PFN</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#nr_map\">nr_map</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#e820entry\">e820entry</a> *<a class=\"id\" href=\"#ei\">ei</a> = &amp;<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#map\">map</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start_pfn\">start_pfn</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#end_pfn\">end_pfn</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#type\">type</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_pfn\">start_pfn</a> = <a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#addr\">addr</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end_pfn\">end_pfn</a> = (<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#addr\">addr</a> + <a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#size\">size</a>) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#start_pfn\">start_pfn</a> >= <a class=\"id\" href=\"#limit_pfn\">limit_pfn</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#end_pfn\">end_pfn</a> &gt; <a class=\"id\" href=\"#limit_pfn\">limit_pfn</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_pfn\">last_pfn</a> = <a class=\"id\" href=\"#limit_pfn\">limit_pfn</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#end_pfn\">end_pfn</a> &gt; <a class=\"id\" href=\"#last_pfn\">last_pfn</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_pfn\">last_pfn</a> = <a class=\"id\" href=\"#end_pfn\">end_pfn</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#last_pfn\">last_pfn</a> &gt; <a class=\"id\" href=\"#max_arch_pfn\">max_arch_pfn</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_pfn\">last_pfn</a> = <a class=\"id\" href=\"#max_arch_pfn\">max_arch_pfn</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"last_pfn = %#lx max_arch_pfn = %#lx\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#last_pfn\">last_pfn</a>, <a class=\"id\" href=\"#max_arch_pfn\">max_arch_pfn</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#last_pfn\">last_pfn</a>;", 
"}", 
"unsigned long <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#e820_end_of_ram_pfn\">e820_end_of_ram_pfn</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#e820_end_pfn\">e820_end_pfn</a>(<a class=\"id\" href=\"#MAX_ARCH_PFN\">MAX_ARCH_PFN</a>, <a class=\"id\" href=\"#E820_RAM\">E820_RAM</a>);", 
"}", 
"", 
"unsigned long <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#e820_end_of_low_ram_pfn\">e820_end_of_low_ram_pfn</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#e820_end_pfn\">e820_end_pfn</a>(1UL<<(32 - <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>), <a class=\"id\" href=\"#E820_RAM\">E820_RAM</a>);", 
"}", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Finds an active region in the address range from start_pfn to last_pfn and</span>", 
"<span class=\"comment\"> * returns its range in ei_startpfn and ei_endpfn for the e820 entry.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#e820_find_active_region\">e820_find_active_region</a>(const struct <a class=\"id\" href=\"#e820entry\">e820entry</a> *<a class=\"id\" href=\"#ei\">ei</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned long <a class=\"id\" href=\"#start_pfn\">start_pfn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned long <a class=\"id\" href=\"#last_pfn\">last_pfn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned long *<a class=\"id\" href=\"#ei_startpfn\">ei_startpfn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned long *<a class=\"id\" href=\"#ei_endpfn\">ei_endpfn</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#align\">align</a> = <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#ei_startpfn\">ei_startpfn</a> = <a class=\"id\" href=\"#round_up\">round_up</a>(<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#align\">align</a>) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#ei_endpfn\">ei_endpfn</a> = <a class=\"id\" href=\"#round_down\">round_down</a>(<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#addr\">addr</a> + <a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#align\">align</a>) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Skip map entries smaller than a page */</span>", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#ei_startpfn\">ei_startpfn</a> >= *<a class=\"id\" href=\"#ei_endpfn\">ei_endpfn</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Skip if map is outside the node */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#E820_RAM\">E820_RAM</a> || *<a class=\"id\" href=\"#ei_endpfn\">ei_endpfn</a> <= <a class=\"id\" href=\"#start_pfn\">start_pfn</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    *<a class=\"id\" href=\"#ei_startpfn\">ei_startpfn</a> >= <a class=\"id\" href=\"#last_pfn\">last_pfn</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check for overlaps */</span>", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#ei_startpfn\">ei_startpfn</a> &lt; <a class=\"id\" href=\"#start_pfn\">start_pfn</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#ei_startpfn\">ei_startpfn</a> = <a class=\"id\" href=\"#start_pfn\">start_pfn</a>;", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#ei_endpfn\">ei_endpfn</a> &gt; <a class=\"id\" href=\"#last_pfn\">last_pfn</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#ei_endpfn\">ei_endpfn</a> = <a class=\"id\" href=\"#last_pfn\">last_pfn</a>;", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<span class=\"comment\">/* Walk the e820 map and register active regions within a node */</span>", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#e820_register_active_regions\">e820_register_active_regions</a>(int <a class=\"id\" href=\"#nid\">nid</a>, unsigned long <a class=\"id\" href=\"#start_pfn\">start_pfn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned long <a class=\"id\" href=\"#last_pfn\">last_pfn</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#ei_startpfn\">ei_startpfn</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#ei_endpfn\">ei_endpfn</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#nr_map\">nr_map</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#e820_find_active_region\">e820_find_active_region</a>(&amp;<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#map\">map</a>[<a class=\"id\" href=\"#i\">i</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#start_pfn\">start_pfn</a>, <a class=\"id\" href=\"#last_pfn\">last_pfn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    &amp;<a class=\"id\" href=\"#ei_startpfn\">ei_startpfn</a>, &amp;<a class=\"id\" href=\"#ei_endpfn\">ei_endpfn</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_active_range\">add_active_range</a>(<a class=\"id\" href=\"#nid\">nid</a>, <a class=\"id\" href=\"#ei_startpfn\">ei_startpfn</a>, <a class=\"id\" href=\"#ei_endpfn\">ei_endpfn</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Find the hole size (in bytes) in the memory range.</span>", 
"<span class=\"comment\"> * @start: starting address of the memory range to scan</span>", 
"<span class=\"comment\"> * @end: ending address of the memory range to scan</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#e820_hole_size\">e820_hole_size</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#end\">end</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start_pfn\">start_pfn</a> = <a class=\"id\" href=\"#start\">start</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#last_pfn\">last_pfn</a> = <a class=\"id\" href=\"#end\">end</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#ei_startpfn\">ei_startpfn</a>, <a class=\"id\" href=\"#ei_endpfn\">ei_endpfn</a>, <a class=\"id\" href=\"#ram\">ram</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#nr_map\">nr_map</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#e820_find_active_region\">e820_find_active_region</a>(&amp;<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#map\">map</a>[<a class=\"id\" href=\"#i\">i</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#start_pfn\">start_pfn</a>, <a class=\"id\" href=\"#last_pfn\">last_pfn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    &amp;<a class=\"id\" href=\"#ei_startpfn\">ei_startpfn</a>, &amp;<a class=\"id\" href=\"#ei_endpfn\">ei_endpfn</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ram\">ram</a> += <a class=\"id\" href=\"#ei_endpfn\">ei_endpfn</a> - <a class=\"id\" href=\"#ei_startpfn\">ei_startpfn</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#end\">end</a> - <a class=\"id\" href=\"#start\">start</a> - ((<a class=\"id\" href=\"#u64\">u64</a>)<a class=\"id\" href=\"#ram\">ram</a> << <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#early_panic\">early_panic</a>(char *<a class=\"id\" href=\"#msg\">msg</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#early_printk\">early_printk</a>(<a class=\"id\" href=\"#msg\">msg</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(<a class=\"id\" href=\"#msg\">msg</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#userdef\">userdef</a> <a class=\"id\" href=\"#__initdata\">__initdata</a>;", 
"", 
"<span class=\"comment\">/* \"mem=nopentium\" disables the 4MB page tables. */</span>", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#parse_memopt\">parse_memopt</a>(char *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#mem_size\">mem_size</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#p\">p</a>, \"nopentium\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#setup_clear_cpu_cap\">setup_clear_cpu_cap</a>(<a class=\"id\" href=\"#X86_FEATURE_PSE\">X86_FEATURE_PSE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#userdef\">userdef</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mem_size\">mem_size</a> = <a class=\"id\" href=\"#memparse\">memparse</a>(<a class=\"id\" href=\"#p\">p</a>, &amp;<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e820_remove_range\">e820_remove_range</a>(<a class=\"id\" href=\"#mem_size\">mem_size</a>, <a class=\"id\" href=\"#ULLONG_MAX\">ULLONG_MAX</a> - <a class=\"id\" href=\"#mem_size\">mem_size</a>, <a class=\"id\" href=\"#E820_RAM\">E820_RAM</a>, 1);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#early_param\">early_param</a>(\"mem\", <a class=\"id\" href=\"#parse_memopt\">parse_memopt</a>);", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#parse_memmap_opt\">parse_memmap_opt</a>(char *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#oldp\">oldp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start_at\">start_at</a>, <a class=\"id\" href=\"#mem_size\">mem_size</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#strncmp\">strncmp</a>(<a class=\"id\" href=\"#p\">p</a>, \"exactmap\", 8)) {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_CRASH_DUMP\">CONFIG_CRASH_DUMP</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If we are doing a crash dump, we still need to know</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the real mem size before original memory map is</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * reset.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#saved_max_pfn\">saved_max_pfn</a> = <a class=\"id\" href=\"#e820_end_of_ram_pfn\">e820_end_of_ram_pfn</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#nr_map\">nr_map</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#userdef\">userdef</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#oldp\">oldp</a> = <a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mem_size\">mem_size</a> = <a class=\"id\" href=\"#memparse\">memparse</a>(<a class=\"id\" href=\"#p\">p</a>, &amp;<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a> == <a class=\"id\" href=\"#oldp\">oldp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#userdef\">userdef</a> = 1;", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#p\">p</a> == '@') {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_at\">start_at</a> = <a class=\"id\" href=\"#memparse\">memparse</a>(<a class=\"id\" href=\"#p\">p</a>+1, &amp;<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e820_add_region\">e820_add_region</a>(<a class=\"id\" href=\"#start_at\">start_at</a>, <a class=\"id\" href=\"#mem_size\">mem_size</a>, <a class=\"id\" href=\"#E820_RAM\">E820_RAM</a>);", 
"<span class=\"ts\"/>} else if (*<a class=\"id\" href=\"#p\">p</a> == '#') {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_at\">start_at</a> = <a class=\"id\" href=\"#memparse\">memparse</a>(<a class=\"id\" href=\"#p\">p</a>+1, &amp;<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e820_add_region\">e820_add_region</a>(<a class=\"id\" href=\"#start_at\">start_at</a>, <a class=\"id\" href=\"#mem_size\">mem_size</a>, <a class=\"id\" href=\"#E820_ACPI\">E820_ACPI</a>);", 
"<span class=\"ts\"/>} else if (*<a class=\"id\" href=\"#p\">p</a> == '$') {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_at\">start_at</a> = <a class=\"id\" href=\"#memparse\">memparse</a>(<a class=\"id\" href=\"#p\">p</a>+1, &amp;<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e820_add_region\">e820_add_region</a>(<a class=\"id\" href=\"#start_at\">start_at</a>, <a class=\"id\" href=\"#mem_size\">mem_size</a>, <a class=\"id\" href=\"#E820_RESERVED\">E820_RESERVED</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e820_remove_range\">e820_remove_range</a>(<a class=\"id\" href=\"#mem_size\">mem_size</a>, <a class=\"id\" href=\"#ULLONG_MAX\">ULLONG_MAX</a> - <a class=\"id\" href=\"#mem_size\">mem_size</a>, <a class=\"id\" href=\"#E820_RAM\">E820_RAM</a>, 1);", 
"", 
"<span class=\"ts\"/>return *<a class=\"id\" href=\"#p\">p</a> == '\\0' ? 0 : -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"}", 
"<a class=\"id\" href=\"#early_param\">early_param</a>(\"memmap\", <a class=\"id\" href=\"#parse_memmap_opt\">parse_memmap_opt</a>);", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#finish_e820_parsing\">finish_e820_parsing</a>(void)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#userdef\">userdef</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#nr\">nr</a> = <a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#nr_map\">nr_map</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sanitize_e820_map\">sanitize_e820_map</a>(<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#map\">map</a>, <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#map\">map</a>), &amp;<a class=\"id\" href=\"#nr\">nr</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#early_panic\">early_panic</a>(\"Invalid user supplied memory map\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#nr_map\">nr_map</a> = <a class=\"id\" href=\"#nr\">nr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"user-defined physical RAM map:\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e820_print_map\">e820_print_map</a>(\"user\");", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> const char *<a class=\"id\" href=\"#e820_type_to_string\">e820_type_to_string</a>(int <a class=\"id\" href=\"#e820_type\">e820_type</a>)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#e820_type\">e820_type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#E820_RESERVED_KERN\">E820_RESERVED_KERN</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#E820_RAM\">E820_RAM</a>:<span class=\"ts\"/>return \"System RAM\";", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#E820_ACPI\">E820_ACPI</a>:<span class=\"ts\"/>return \"ACPI Tables\";", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#E820_NVS\">E820_NVS</a>:<span class=\"ts\"/>return \"ACPI Non-volatile Storage\";", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#E820_UNUSABLE\">E820_UNUSABLE</a>:<span class=\"ts\"/>return \"Unusable memory\";", 
"<span class=\"ts\"/>default:<span class=\"ts\"/>return \"reserved\";", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Mark e820 reserved areas as busy for the resource manager.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#resource\">resource</a> <a class=\"id\" href=\"#__initdata\">__initdata</a> *<a class=\"id\" href=\"#e820_res\">e820_res</a>;", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#e820_reserve_resources\">e820_reserve_resources</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#resource\">resource</a> *<a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#end\">end</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#alloc_bootmem\">alloc_bootmem</a>(sizeof(struct <a class=\"id\" href=\"#resource\">resource</a>) * <a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#nr_map\">nr_map</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e820_res\">e820_res</a> = <a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#nr_map\">nr_map</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#map\">map</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#addr\">addr</a> + <a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#map\">map</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#size\">size</a> - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#end\">end</a> != (<a class=\"id\" href=\"#resource_size_t\">resource_size_t</a>)<a class=\"id\" href=\"#end\">end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#e820_type_to_string\">e820_type_to_string</a>(<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#map\">map</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#map\">map</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#end\">end</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#IORESOURCE_MEM\">IORESOURCE_MEM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * don't register the region that could be conflicted with</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * pci device BAR resource and insert them later in</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * pcibios_resource_survey()</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#map\">map</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#E820_RESERVED\">E820_RESERVED</a> || <a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#start\">start</a> &lt; (1ULL<<20)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#IORESOURCE_BUSY\">IORESOURCE_BUSY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#insert_resource\">insert_resource</a>(&amp;<a class=\"id\" href=\"#iomem_resource\">iomem_resource</a>, <a class=\"id\" href=\"#res\">res</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>++;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#e820_saved\">e820_saved</a>.<a class=\"id\" href=\"#nr_map\">nr_map</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#e820entry\">e820entry</a> *<a class=\"id\" href=\"#entry\">entry</a> = &amp;<a class=\"id\" href=\"#e820_saved\">e820_saved</a>.<a class=\"id\" href=\"#map\">map</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#firmware_map_add_early\">firmware_map_add_early</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#addr\">addr</a> + <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#size\">size</a> - 1,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e820_type_to_string\">e820_type_to_string</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#type\">type</a>));", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/* How much should we pad RAM ending depending on where it is? */</span>", 
"static unsigned long <a class=\"id\" href=\"#ram_alignment\">ram_alignment</a>(<a class=\"id\" href=\"#resource_size_t\">resource_size_t</a> <a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#mb\">mb</a> = <a class=\"id\" href=\"#pos\">pos</a> >> 20;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* To 64kB in the first megabyte */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mb\">mb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 64*1024;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* To 1MB in the first 16MB */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mb\">mb</a> &lt; 16)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1024*1024;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* To 64MB for anything above that */</span>", 
"<span class=\"ts\"/>return 64*1024*1024;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_RESOURCE_SIZE\">MAX_RESOURCE_SIZE</a> ((<a class=\"id\" href=\"#resource_size_t\">resource_size_t</a>)-1)", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#e820_reserve_resources_late\">e820_reserve_resources_late</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#resource\">resource</a> *<a class=\"id\" href=\"#res\">res</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#e820_res\">e820_res</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#nr_map\">nr_map</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#parent\">parent</a> && <a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#insert_resource_expand_to_fit\">insert_resource_expand_to_fit</a>(&amp;<a class=\"id\" href=\"#iomem_resource\">iomem_resource</a>, <a class=\"id\" href=\"#res\">res</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>++;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Try to bump up RAM regions to reasonable boundaries to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * avoid stolen RAM:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#nr_map\">nr_map</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#e820entry\">e820entry</a> *<a class=\"id\" href=\"#entry\">entry</a> = &amp;<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#map\">map</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#E820_RAM\">E820_RAM</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#addr\">addr</a> + <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#round_up\">round_up</a>(<a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#ram_alignment\">ram_alignment</a>(<a class=\"id\" href=\"#start\">start</a>)) - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#end\">end</a> &gt; <a class=\"id\" href=\"#MAX_RESOURCE_SIZE\">MAX_RESOURCE_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#MAX_RESOURCE_SIZE\">MAX_RESOURCE_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#start\">start</a> >= <a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"reserve RAM buffer: %016llx - %016llx \",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reserve_region_with_split\">reserve_region_with_split</a>(&amp;<a class=\"id\" href=\"#iomem_resource\">iomem_resource</a>, <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"RAM buffer\");", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"char *<a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#default_machine_specific_memory_setup\">default_machine_specific_memory_setup</a>(void)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#who\">who</a> = \"BIOS-e820\";", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#new_nr\">new_nr</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Try to copy the BIOS-supplied E820-map.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Otherwise fake a memory map; one section from 0k-&gt;640k,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the next section from 1mb-&gt;appropriate_mem_k</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_nr\">new_nr</a> = <a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#e820_entries\">e820_entries</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sanitize_e820_map\">sanitize_e820_map</a>(<a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#e820_map\">e820_map</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#e820_map\">e820_map</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#new_nr\">new_nr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#e820_entries\">e820_entries</a> = <a class=\"id\" href=\"#new_nr\">new_nr</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#append_e820_map\">append_e820_map</a>(<a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#e820_map\">e820_map</a>, <a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#e820_entries\">e820_entries</a>)", 
"<span class=\"ts\"/>  &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#mem_size\">mem_size</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* compare results from other methods and take the greater */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#alt_mem_k\">alt_mem_k</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>    &lt; <a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#screen_info\">screen_info</a>.<a class=\"id\" href=\"#ext_mem_k\">ext_mem_k</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mem_size\">mem_size</a> = <a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#screen_info\">screen_info</a>.<a class=\"id\" href=\"#ext_mem_k\">ext_mem_k</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#who\">who</a> = \"BIOS-88\";", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mem_size\">mem_size</a> = <a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#alt_mem_k\">alt_mem_k</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#who\">who</a> = \"BIOS-e801\";", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#nr_map\">nr_map</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e820_add_region\">e820_add_region</a>(0, <a class=\"id\" href=\"#LOWMEMSIZE\">LOWMEMSIZE</a>(), <a class=\"id\" href=\"#E820_RAM\">E820_RAM</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e820_add_region\">e820_add_region</a>(<a class=\"id\" href=\"#HIGH_MEMORY\">HIGH_MEMORY</a>, <a class=\"id\" href=\"#mem_size\">mem_size</a> << 10, <a class=\"id\" href=\"#E820_RAM\">E820_RAM</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* In case someone cares... */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#who\">who</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#setup_memory_map\">setup_memory_map</a>(void)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#who\">who</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#who\">who</a> = <a class=\"id\" href=\"#x86_init\">x86_init</a>.<a class=\"id\" href=\"#resources\">resources</a>.<a class=\"id\" href=\"#memory_setup\">memory_setup</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#e820_saved\">e820_saved</a>, &amp;<a class=\"id\" href=\"#e820\">e820</a>, sizeof(struct <a class=\"id\" href=\"#e820map\">e820map</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"BIOS-provided physical RAM map:\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e820_print_map\">e820_print_map</a>(<a class=\"id\" href=\"#who\">who</a>);", 
"}", 
];
xr_frag_insert('l/63/560cb9084f4d47995d1a520f2dc7d4cd5bae91.xr', __xr_tmp);
