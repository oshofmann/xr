var __xr_tmp = [
"<span class=\"comment\"><span class=\"ts\"/> * grab the reference to task.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#pid\">pid</a> = <a class=\"id\" href=\"#get_task_pid\">get_task_pid</a>(<a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#PIDTYPE_PID\">PIDTYPE_PID</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#pid\">pid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#task_dumpable\">task_dumpable</a>(<a class=\"id\" href=\"#task\">task</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cred\">cred</a> = <a class=\"id\" href=\"#__task_cred\">__task_cred</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_uid\">i_uid</a> = <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#euid\">euid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_gid\">i_gid</a> = <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#egid\">egid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#security_task_to_inode\">security_task_to_inode</a>(<a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#inode\">inode</a>;", 
"", 
"<a class=\"id\" href=\"#out_unlock\">out_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pid_getattr\">pid_getattr</a>(struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#mnt\">mnt</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, struct <a class=\"id\" href=\"#kstat\">kstat</a> *<a class=\"id\" href=\"#stat\">stat</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#cred\">cred</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#generic_fillattr\">generic_fillattr</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#stat\">stat</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stat\">stat</a>-><a class=\"id\" href=\"#uid\">uid</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stat\">stat</a>-><a class=\"id\" href=\"#gid\">gid</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#pid_task\">pid_task</a>(<a class=\"id\" href=\"#proc_pid\">proc_pid</a>(<a class=\"id\" href=\"#inode\">inode</a>), <a class=\"id\" href=\"#PIDTYPE_PID\">PIDTYPE_PID</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#task\">task</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a> == (<a class=\"id\" href=\"#S_IFDIR\">S_IFDIR</a>|<a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>|<a class=\"id\" href=\"#S_IXUGO\">S_IXUGO</a>)) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#task_dumpable\">task_dumpable</a>(<a class=\"id\" href=\"#task\">task</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cred\">cred</a> = <a class=\"id\" href=\"#__task_cred\">__task_cred</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stat\">stat</a>-><a class=\"id\" href=\"#uid\">uid</a> = <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#euid\">euid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stat\">stat</a>-><a class=\"id\" href=\"#gid\">gid</a> = <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#egid\">egid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* dentry stuff */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Exceptional case: normally we are not allowed to unhash a busy</span>", 
"<span class=\"comment\"> * directory. In this case, however, we can do it - no aliasing problems</span>", 
"<span class=\"comment\"> * due to the way we treat inodes.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Rewrite the inode's ownerships here because the owning task may have</span>", 
"<span class=\"comment\"> * performed a setuid(), etc.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Before the /proc/pid/status file was created the only way to read</span>", 
"<span class=\"comment\"> * the effective uid of a /process was to stat /proc/pid.  Reading</span>", 
"<span class=\"comment\"> * /proc/pid/status is slow enough that procps and other packages</span>", 
"<span class=\"comment\"> * kept stating /proc/pid.  To keep the rules in /proc simple I have</span>", 
"<span class=\"comment\"> * made this apply to all per process world readable and executable</span>", 
"<span class=\"comment\"> * directories.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#pid_revalidate\">pid_revalidate</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, struct <a class=\"id\" href=\"#nameidata\">nameidata</a> *<a class=\"id\" href=\"#nd\">nd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#get_proc_task\">get_proc_task</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#cred\">cred</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#task\">task</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a> == (<a class=\"id\" href=\"#S_IFDIR\">S_IFDIR</a>|<a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>|<a class=\"id\" href=\"#S_IXUGO\">S_IXUGO</a>)) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#task_dumpable\">task_dumpable</a>(<a class=\"id\" href=\"#task\">task</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cred\">cred</a> = <a class=\"id\" href=\"#__task_cred\">__task_cred</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_uid\">i_uid</a> = <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#euid\">euid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_gid\">i_gid</a> = <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#egid\">egid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_uid\">i_uid</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_gid\">i_gid</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a> &= ~(<a class=\"id\" href=\"#S_ISUID\">S_ISUID</a> | <a class=\"id\" href=\"#S_ISGID\">S_ISGID</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#security_task_to_inode\">security_task_to_inode</a>(<a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#d_drop\">d_drop</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pid_delete_dentry\">pid_delete_dentry</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> * <a class=\"id\" href=\"#dentry\">dentry</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Is the task we represent dead?</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If so, then don't put the dentry on the lru list,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * kill it immediately.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>return !<a class=\"id\" href=\"#proc_pid\">proc_pid</a>(<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>)-><a class=\"id\" href=\"#tasks\">tasks</a>[<a class=\"id\" href=\"#PIDTYPE_PID\">PIDTYPE_PID</a>].<a class=\"id\" href=\"#first\">first</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#dentry_operations\">dentry_operations</a> <a class=\"id\" href=\"#pid_dentry_operations\">pid_dentry_operations</a> =", 
"{", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#d_revalidate\">d_revalidate</a><span class=\"ts\"/>= <a class=\"id\" href=\"#pid_revalidate\">pid_revalidate</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#d_delete\">d_delete</a><span class=\"ts\"/>= <a class=\"id\" href=\"#pid_delete_dentry\">pid_delete_dentry</a>,", 
"};", 
"", 
"<span class=\"comment\">/* Lookups */</span>", 
"", 
"typedef struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#instantiate_t\">instantiate_t</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *, struct <a class=\"id\" href=\"#dentry\">dentry</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *, const void *);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Fill a directory entry.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If possible create the dcache entry and derive our inode number and</span>", 
"<span class=\"comment\"> * file type from dcache entry.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Since all of the proc inode numbers are dynamically generated, the inode</span>", 
"<span class=\"comment\"> * numbers do not exist until the inode is cache.  This means creating the</span>", 
"<span class=\"comment\"> * the dcache entry in readdir is necessary to keep the inode numbers</span>", 
"<span class=\"comment\"> * reported by readdir in sync with the inode numbers reported</span>", 
"<span class=\"comment\"> * by stat.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#proc_fill_cache\">proc_fill_cache</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, void *<a class=\"id\" href=\"#dirent\">dirent</a>, <a class=\"id\" href=\"#filldir_t\">filldir_t</a> <a class=\"id\" href=\"#filldir\">filldir</a>,", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#name\">name</a>, int <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#instantiate_t\">instantiate_t</a> <a class=\"id\" href=\"#instantiate\">instantiate</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>, const void *<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#child\">child</a>, *<a class=\"id\" href=\"#dir\">dir</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#qstr\">qstr</a> <a class=\"id\" href=\"#qname\">qname</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ino_t\">ino_t</a> <a class=\"id\" href=\"#ino\">ino</a> = 0;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#DT_UNKNOWN\">DT_UNKNOWN</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qname\">qname</a>.<a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qname\">qname</a>.<a class=\"id\" href=\"#len\">len</a>  = <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qname\">qname</a>.<a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#full_name_hash\">full_name_hash</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a> = <a class=\"id\" href=\"#d_lookup\">d_lookup</a>(<a class=\"id\" href=\"#dir\">dir</a>, &amp;<a class=\"id\" href=\"#qname\">qname</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#child\">child</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#new\">new</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a> = <a class=\"id\" href=\"#d_alloc\">d_alloc</a>(<a class=\"id\" href=\"#dir\">dir</a>, &amp;<a class=\"id\" href=\"#qname\">qname</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#new\">new</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a> = <a class=\"id\" href=\"#instantiate\">instantiate</a>(<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>, <a class=\"id\" href=\"#new\">new</a>, <a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#ptr\">ptr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#child\">child</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dput\">dput</a>(<a class=\"id\" href=\"#new\">new</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a> = <a class=\"id\" href=\"#new\">new</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#child\">child</a> || <a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#child\">child</a>) || !<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end_instantiate\">end_instantiate</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inode\">inode</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ino\">ino</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a> >> 12;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dput\">dput</a>(<a class=\"id\" href=\"#child\">child</a>);", 
"<a class=\"id\" href=\"#end_instantiate\">end_instantiate</a>:", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ino\">ino</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ino\">ino</a> = <a class=\"id\" href=\"#find_inode_number\">find_inode_number</a>(<a class=\"id\" href=\"#dir\">dir</a>, &amp;<a class=\"id\" href=\"#qname\">qname</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ino\">ino</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ino\">ino</a> = 1;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#filldir\">filldir</a>(<a class=\"id\" href=\"#dirent\">dirent</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>, <a class=\"id\" href=\"#ino\">ino</a>, <a class=\"id\" href=\"#type\">type</a>);", 
"}", 
"", 
"static unsigned <a class=\"id\" href=\"#name_to_int\">name_to_int</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>)", 
"{", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_name\">d_name</a>.<a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_name\">d_name</a>.<a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#n\">n</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; 1 && *<a class=\"id\" href=\"#name\">name</a> == '0')", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#len\">len</a>-- &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned <a class=\"id\" href=\"#c\">c</a> = *<a class=\"id\" href=\"#name\">name</a>++ - '0';", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> &gt; 9)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a> >= (~0U-9)/10)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> *= 10;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> += <a class=\"id\" href=\"#c\">c</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#n\">n</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return ~0U;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PROC_FDINFO_MAX\">PROC_FDINFO_MAX</a> 64", 
"", 
"static int <a class=\"id\" href=\"#proc_fd_info\">proc_fd_info</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#path\">path</a> *<a class=\"id\" href=\"#path\">path</a>, char *<a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#get_proc_task\">get_proc_task</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#files_struct\">files_struct</a> *<a class=\"id\" href=\"#files\">files</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fd\">fd</a> = <a class=\"id\" href=\"#proc_fd\">proc_fd</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#task\">task</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#files\">files</a> = <a class=\"id\" href=\"#get_files_struct\">get_files_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#files\">files</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We are not taking a ref to the file structure, so we must</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * hold -&gt;file_lock.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#files\">files</a>-><a class=\"id\" href=\"#file_lock\">file_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#fcheck_files\">fcheck_files</a>(<a class=\"id\" href=\"#files\">files</a>, <a class=\"id\" href=\"#fd\">fd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#file\">file</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#path\">path</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#path\">path</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path_get\">path_get</a>(&amp;<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#info\">info</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#PROC_FDINFO_MAX\">PROC_FDINFO_MAX</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"pos:\\t%lli\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"flags:\\t0%o\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (long long) <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_flags\">f_flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#files\">files</a>-><a class=\"id\" href=\"#file_lock\">file_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_files_struct\">put_files_struct</a>(<a class=\"id\" href=\"#files\">files</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#files\">files</a>-><a class=\"id\" href=\"#file_lock\">file_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_files_struct\">put_files_struct</a>(<a class=\"id\" href=\"#files\">files</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#proc_fd_link\">proc_fd_link</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#path\">path</a> *<a class=\"id\" href=\"#path\">path</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#proc_fd_info\">proc_fd_info</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#tid_fd_revalidate\">tid_fd_revalidate</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, struct <a class=\"id\" href=\"#nameidata\">nameidata</a> *<a class=\"id\" href=\"#nd\">nd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#get_proc_task\">get_proc_task</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fd\">fd</a> = <a class=\"id\" href=\"#proc_fd\">proc_fd</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#files_struct\">files_struct</a> *<a class=\"id\" href=\"#files\">files</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#cred\">cred</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#task\">task</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#files\">files</a> = <a class=\"id\" href=\"#get_files_struct\">get_files_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#files\">files</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fcheck_files\">fcheck_files</a>(<a class=\"id\" href=\"#files\">files</a>, <a class=\"id\" href=\"#fd\">fd</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_files_struct\">put_files_struct</a>(<a class=\"id\" href=\"#files\">files</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#task_dumpable\">task_dumpable</a>(<a class=\"id\" href=\"#task\">task</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cred\">cred</a> = <a class=\"id\" href=\"#__task_cred\">__task_cred</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_uid\">i_uid</a> = <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#euid\">euid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_gid\">i_gid</a> = <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#egid\">egid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_uid\">i_uid</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_gid\">i_gid</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a> &= ~(<a class=\"id\" href=\"#S_ISUID\">S_ISUID</a> | <a class=\"id\" href=\"#S_ISGID\">S_ISGID</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#security_task_to_inode\">security_task_to_inode</a>(<a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_files_struct\">put_files_struct</a>(<a class=\"id\" href=\"#files\">files</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#d_drop\">d_drop</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#dentry_operations\">dentry_operations</a> <a class=\"id\" href=\"#tid_fd_dentry_operations\">tid_fd_dentry_operations</a> =", 
"{", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#d_revalidate\">d_revalidate</a><span class=\"ts\"/>= <a class=\"id\" href=\"#tid_fd_revalidate\">tid_fd_revalidate</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#d_delete\">d_delete</a><span class=\"ts\"/>= <a class=\"id\" href=\"#pid_delete_dentry\">pid_delete_dentry</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#proc_fd_instantiate\">proc_fd_instantiate</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>, const void *<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#fd\">fd</a> = *(const unsigned *)<a class=\"id\" href=\"#ptr\">ptr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#files_struct\">files_struct</a> *<a class=\"id\" href=\"#files\">files</a>;", 
" <span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>;", 
" <span class=\"ts\"/>struct <a class=\"id\" href=\"#proc_inode\">proc_inode</a> *<a class=\"id\" href=\"#ei\">ei</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOENT\">ENOENT</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#proc_pid_make_inode\">proc_pid_make_inode</a>(<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#inode\">inode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a> = <a class=\"id\" href=\"#PROC_I\">PROC_I</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#fd\">fd</a> = <a class=\"id\" href=\"#fd\">fd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#files\">files</a> = <a class=\"id\" href=\"#get_files_struct\">get_files_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#files\">files</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_iput\">out_iput</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a> = <a class=\"id\" href=\"#S_IFLNK\">S_IFLNK</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We are not taking a ref to the file structure, so we must</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * hold -&gt;file_lock.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#files\">files</a>-><a class=\"id\" href=\"#file_lock\">file_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#fcheck_files\">fcheck_files</a>(<a class=\"id\" href=\"#files\">files</a>, <a class=\"id\" href=\"#fd\">fd</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#file\">file</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_mode\">f_mode</a> &amp; <a class=\"id\" href=\"#FMODE_READ\">FMODE_READ</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a> |= <a class=\"id\" href=\"#S_IRUSR\">S_IRUSR</a> | <a class=\"id\" href=\"#S_IXUSR\">S_IXUSR</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_mode\">f_mode</a> &amp; <a class=\"id\" href=\"#FMODE_WRITE\">FMODE_WRITE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a> |= <a class=\"id\" href=\"#S_IWUSR\">S_IWUSR</a> | <a class=\"id\" href=\"#S_IXUSR\">S_IXUSR</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#files\">files</a>-><a class=\"id\" href=\"#file_lock\">file_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_files_struct\">put_files_struct</a>(<a class=\"id\" href=\"#files\">files</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_op\">i_op</a> = &amp;<a class=\"id\" href=\"#proc_pid_link_inode_operations\">proc_pid_link_inode_operations</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a> = 64;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#op\">op</a>.<a class=\"id\" href=\"#proc_get_link\">proc_get_link</a> = <a class=\"id\" href=\"#proc_fd_link\">proc_fd_link</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_op\">d_op</a> = &amp;<a class=\"id\" href=\"#tid_fd_dentry_operations\">tid_fd_dentry_operations</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#d_add\">d_add</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Close the race of the process dying before we return the dentry */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tid_fd_revalidate\">tid_fd_revalidate</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#NULL\">NULL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<a class=\"id\" href=\"#out_unlock\">out_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#files\">files</a>-><a class=\"id\" href=\"#file_lock\">file_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_files_struct\">put_files_struct</a>(<a class=\"id\" href=\"#files\">files</a>);", 
"<a class=\"id\" href=\"#out_iput\">out_iput</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#proc_lookupfd_common\">proc_lookupfd_common</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#instantiate_t\">instantiate_t</a> <a class=\"id\" href=\"#instantiate\">instantiate</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#get_proc_task\">get_proc_task</a>(<a class=\"id\" href=\"#dir\">dir</a>);", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#fd\">fd</a> = <a class=\"id\" href=\"#name_to_int\">name_to_int</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOENT\">ENOENT</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#task\">task</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_no_task\">out_no_task</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fd\">fd</a> == ~0U)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#instantiate\">instantiate</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#task\">task</a>, &amp;<a class=\"id\" href=\"#fd\">fd</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<a class=\"id\" href=\"#out_no_task\">out_no_task</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#proc_readfd_common\">proc_readfd_common</a>(struct <a class=\"id\" href=\"#file\">file</a> * <a class=\"id\" href=\"#filp\">filp</a>, void * <a class=\"id\" href=\"#dirent\">dirent</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#filldir_t\">filldir_t</a> <a class=\"id\" href=\"#filldir\">filldir</a>, <a class=\"id\" href=\"#instantiate_t\">instantiate_t</a> <a class=\"id\" href=\"#instantiate\">instantiate</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#get_proc_task\">get_proc_task</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#fd\">fd</a>, <a class=\"id\" href=\"#ino\">ino</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#files_struct\">files_struct</a> * <a class=\"id\" href=\"#files\">files</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_no_task\">out_no_task</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fd\">fd</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>;", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#fd\">fd</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case 0:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#filldir\">filldir</a>(<a class=\"id\" href=\"#dirent\">dirent</a>, \".\", 1, 0, <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>, <a class=\"id\" href=\"#DT_DIR\">DT_DIR</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 1:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ino\">ino</a> = <a class=\"id\" href=\"#parent_ino\">parent_ino</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#filldir\">filldir</a>(<a class=\"id\" href=\"#dirent\">dirent</a>, \"..\", 2, 1, <a class=\"id\" href=\"#ino\">ino</a>, <a class=\"id\" href=\"#DT_DIR\">DT_DIR</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#files\">files</a> = <a class=\"id\" href=\"#get_files_struct\">get_files_struct</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#files\">files</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#fd\">fd</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>-2;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#fd\">fd</a> &lt; <a class=\"id\" href=\"#files_fdtable\">files_fdtable</a>(<a class=\"id\" href=\"#files\">files</a>)-><a class=\"id\" href=\"#max_fds\">max_fds</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#fd\">fd</a>++, <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char <a class=\"id\" href=\"#name\">name</a>[<a class=\"id\" href=\"#PROC_NUMBUF\">PROC_NUMBUF</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#fcheck_files\">fcheck_files</a>(<a class=\"id\" href=\"#files\">files</a>, <a class=\"id\" href=\"#fd\">fd</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#name\">name</a>, sizeof(<a class=\"id\" href=\"#name\">name</a>), \"%d\", <a class=\"id\" href=\"#fd\">fd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#proc_fill_cache\">proc_fill_cache</a>(<a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#dirent\">dirent</a>, <a class=\"id\" href=\"#filldir\">filldir</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#instantiate\">instantiate</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#p\">p</a>, &amp;<a class=\"id\" href=\"#fd\">fd</a>) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_files_struct\">put_files_struct</a>(<a class=\"id\" href=\"#files\">files</a>);", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<a class=\"id\" href=\"#out_no_task\">out_no_task</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#proc_lookupfd\">proc_lookupfd</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#nameidata\">nameidata</a> *<a class=\"id\" href=\"#nd\">nd</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#proc_lookupfd_common\">proc_lookupfd_common</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#proc_fd_instantiate\">proc_fd_instantiate</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#proc_readfd\">proc_readfd</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, void *<a class=\"id\" href=\"#dirent\">dirent</a>, <a class=\"id\" href=\"#filldir_t\">filldir_t</a> <a class=\"id\" href=\"#filldir\">filldir</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#proc_readfd_common\">proc_readfd_common</a>(<a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#dirent\">dirent</a>, <a class=\"id\" href=\"#filldir\">filldir</a>, <a class=\"id\" href=\"#proc_fd_instantiate\">proc_fd_instantiate</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#proc_fdinfo_read\">proc_fdinfo_read</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#tmp\">tmp</a>[<a class=\"id\" href=\"#PROC_FDINFO_MAX\">PROC_FDINFO_MAX</a>];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#proc_fd_info\">proc_fd_info</a>(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#tmp\">tmp</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#simple_read_from_buffer\">simple_read_from_buffer</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#ppos\">ppos</a>, <a class=\"id\" href=\"#tmp\">tmp</a>, <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#tmp\">tmp</a>));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#proc_fdinfo_file_operations\">proc_fdinfo_file_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a>           = <a class=\"id\" href=\"#nonseekable_open\">nonseekable_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_fdinfo_read\">proc_fdinfo_read</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#proc_fd_operations\">proc_fd_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_read_dir\">generic_read_dir</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#readdir\">readdir</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_readfd\">proc_readfd</a>,", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * /proc/pid/fd needs a special permission handler so that a process can still</span>", 
"<span class=\"comment\"> * access /proc/self/fd after it has executed a setuid().</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#proc_fd_permission\">proc_fd_permission</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, int <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rv\">rv</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rv\">rv</a> = <a class=\"id\" href=\"#generic_permission\">generic_permission</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#mask\">mask</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rv\">rv</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#task_pid\">task_pid</a>(<a class=\"id\" href=\"#current\">current</a>) == <a class=\"id\" href=\"#proc_pid\">proc_pid</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rv\">rv</a> = 0;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rv\">rv</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * proc directories can do almost nothing..</span>", 
"<span class=\"comment\"> */</span>", 
"static const struct <a class=\"id\" href=\"#inode_operations\">inode_operations</a> <a class=\"id\" href=\"#proc_fd_inode_operations\">proc_fd_inode_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#lookup\">lookup</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_lookupfd\">proc_lookupfd</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#permission\">permission</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_fd_permission\">proc_fd_permission</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#setattr\">setattr</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_setattr\">proc_setattr</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#proc_fdinfo_instantiate\">proc_fdinfo_instantiate</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>, const void *<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#fd\">fd</a> = *(unsigned *)<a class=\"id\" href=\"#ptr\">ptr</a>;", 
" <span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>;", 
" <span class=\"ts\"/>struct <a class=\"id\" href=\"#proc_inode\">proc_inode</a> *<a class=\"id\" href=\"#ei\">ei</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOENT\">ENOENT</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#proc_pid_make_inode\">proc_pid_make_inode</a>(<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#inode\">inode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a> = <a class=\"id\" href=\"#PROC_I\">PROC_I</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#fd\">fd</a> = <a class=\"id\" href=\"#fd\">fd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a> = <a class=\"id\" href=\"#S_IFREG\">S_IFREG</a> | <a class=\"id\" href=\"#S_IRUSR\">S_IRUSR</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_fop\">i_fop</a> = &amp;<a class=\"id\" href=\"#proc_fdinfo_file_operations\">proc_fdinfo_file_operations</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_op\">d_op</a> = &amp;<a class=\"id\" href=\"#tid_fd_dentry_operations\">tid_fd_dentry_operations</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#d_add\">d_add</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Close the race of the process dying before we return the dentry */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tid_fd_revalidate\">tid_fd_revalidate</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#NULL\">NULL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#proc_lookupfdinfo\">proc_lookupfdinfo</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#nameidata\">nameidata</a> *<a class=\"id\" href=\"#nd\">nd</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#proc_lookupfd_common\">proc_lookupfd_common</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#proc_fdinfo_instantiate\">proc_fdinfo_instantiate</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#proc_readfdinfo\">proc_readfdinfo</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, void *<a class=\"id\" href=\"#dirent\">dirent</a>, <a class=\"id\" href=\"#filldir_t\">filldir_t</a> <a class=\"id\" href=\"#filldir\">filldir</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#proc_readfd_common\">proc_readfd_common</a>(<a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#dirent\">dirent</a>, <a class=\"id\" href=\"#filldir\">filldir</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#proc_fdinfo_instantiate\">proc_fdinfo_instantiate</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#proc_fdinfo_operations\">proc_fdinfo_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_read_dir\">generic_read_dir</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#readdir\">readdir</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_readfdinfo\">proc_readfdinfo</a>,", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * proc directories can do almost nothing..</span>", 
"<span class=\"comment\"> */</span>", 
"static const struct <a class=\"id\" href=\"#inode_operations\">inode_operations</a> <a class=\"id\" href=\"#proc_fdinfo_inode_operations\">proc_fdinfo_inode_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#lookup\">lookup</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_lookupfdinfo\">proc_lookupfdinfo</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#setattr\">setattr</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_setattr\">proc_setattr</a>,", 
"};", 
"", 
"", 
"static struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#proc_pident_instantiate\">proc_pident_instantiate</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>, const void *<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#pid_entry\">pid_entry</a> *<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#ptr\">ptr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proc_inode\">proc_inode</a> *<a class=\"id\" href=\"#ei\">ei</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOENT\">ENOENT</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#proc_pid_make_inode\">proc_pid_make_inode</a>(<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#inode\">inode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a> = <a class=\"id\" href=\"#PROC_I\">PROC_I</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#mode\">mode</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#S_ISDIR\">S_ISDIR</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_nlink\">i_nlink</a> = 2;<span class=\"ts\"/><span class=\"comment\">/* Use getattr to fix if necessary */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#iop\">iop</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_op\">i_op</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#iop\">iop</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#fop\">fop</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_fop\">i_fop</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#fop\">fop</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#op\">op</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#op\">op</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_op\">d_op</a> = &amp;<a class=\"id\" href=\"#pid_dentry_operations\">pid_dentry_operations</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#d_add\">d_add</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Close the race of the process dying before we return the dentry */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pid_revalidate\">pid_revalidate</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#NULL\">NULL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#proc_pident_lookup\">proc_pident_lookup</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>, ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const struct <a class=\"id\" href=\"#pid_entry\">pid_entry</a> *<a class=\"id\" href=\"#ents\">ents</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned int <a class=\"id\" href=\"#nents\">nents</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#get_proc_task\">get_proc_task</a>(<a class=\"id\" href=\"#dir\">dir</a>);", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#pid_entry\">pid_entry</a> *<a class=\"id\" href=\"#p\">p</a>, *<a class=\"id\" href=\"#last\">last</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOENT\">ENOENT</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#task\">task</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_no_task\">out_no_task</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Yes, it does not scale. And it should not. Don't add</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * new entries into /proc/&lt;tgid&gt;/ without very good reasons.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a> = &amp;<a class=\"id\" href=\"#ents\">ents</a>[<a class=\"id\" href=\"#nents\">nents</a> - 1];", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#ents\">ents</a>; <a class=\"id\" href=\"#p\">p</a> <= <a class=\"id\" href=\"#last\">last</a>; <a class=\"id\" href=\"#p\">p</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#len\">len</a> != <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_name\">d_name</a>.<a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_name\">d_name</a>.<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#len\">len</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a> &gt; <a class=\"id\" href=\"#last\">last</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#proc_pident_instantiate\">proc_pident_instantiate</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<a class=\"id\" href=\"#out_no_task\">out_no_task</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#proc_pident_fill_cache\">proc_pident_fill_cache</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, void *<a class=\"id\" href=\"#dirent\">dirent</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#filldir_t\">filldir_t</a> <a class=\"id\" href=\"#filldir\">filldir</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>, const struct <a class=\"id\" href=\"#pid_entry\">pid_entry</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#proc_fill_cache\">proc_fill_cache</a>(<a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#dirent\">dirent</a>, <a class=\"id\" href=\"#filldir\">filldir</a>, <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#proc_pident_instantiate\">proc_pident_instantiate</a>, <a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#proc_pident_readdir\">proc_pident_readdir</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#dirent\">dirent</a>, <a class=\"id\" href=\"#filldir_t\">filldir_t</a> <a class=\"id\" href=\"#filldir\">filldir</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#pid_entry\">pid_entry</a> *<a class=\"id\" href=\"#ents\">ents</a>, unsigned int <a class=\"id\" href=\"#nents\">nents</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#get_proc_task\">get_proc_task</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#pid_entry\">pid_entry</a> *<a class=\"id\" href=\"#p\">p</a>, *<a class=\"id\" href=\"#last\">last</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ino_t\">ino_t</a> <a class=\"id\" href=\"#ino\">ino</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#task\">task</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_no_task\">out_no_task</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>;", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/>case 0:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ino\">ino</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#filldir\">filldir</a>(<a class=\"id\" href=\"#dirent\">dirent</a>, \".\", 1, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#ino\">ino</a>, <a class=\"id\" href=\"#DT_DIR\">DT_DIR</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fall through */</span>", 
"<span class=\"ts\"/>case 1:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ino\">ino</a> = <a class=\"id\" href=\"#parent_ino\">parent_ino</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#filldir\">filldir</a>(<a class=\"id\" href=\"#dirent\">dirent</a>, \"..\", 2, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#ino\">ino</a>, <a class=\"id\" href=\"#DT_DIR\">DT_DIR</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fall through */</span>", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> -= 2;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> >= <a class=\"id\" href=\"#nents\">nents</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#ents\">ents</a> + <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a> = &amp;<a class=\"id\" href=\"#ents\">ents</a>[<a class=\"id\" href=\"#nents\">nents</a> - 1];", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#p\">p</a> <= <a class=\"id\" href=\"#last\">last</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#proc_pident_fill_cache\">proc_pident_fill_cache</a>(<a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#dirent\">dirent</a>, <a class=\"id\" href=\"#filldir\">filldir</a>, <a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#p\">p</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 1;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<a class=\"id\" href=\"#out_no_task\">out_no_task</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SECURITY\">CONFIG_SECURITY</a>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#proc_pid_attr_read\">proc_pid_attr_read</a>(struct <a class=\"id\" href=\"#file\">file</a> * <a class=\"id\" href=\"#file\">file</a>, char <a class=\"id\" href=\"#__user\">__user</a> * <a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> * <a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#get_proc_task\">get_proc_task</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#task\">task</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#security_getprocattr\">security_getprocattr</a>(<a class=\"id\" href=\"#task\">task</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      (char*)<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_name\">d_name</a>.<a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      &amp;<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#length\">length</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#simple_read_from_buffer\">simple_read_from_buffer</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#ppos\">ppos</a>, <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#length\">length</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#length\">length</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#proc_pid_attr_write\">proc_pid_attr_write</a>(struct <a class=\"id\" href=\"#file\">file</a> * <a class=\"id\" href=\"#file\">file</a>, const char <a class=\"id\" href=\"#__user\">__user</a> * <a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> * <a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#get_proc_task\">get_proc_task</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> = -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#task\">task</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_no_task\">out_no_task</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> &gt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* No partial writes. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#ppos\">ppos</a> != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = (char*)<a class=\"id\" href=\"#__get_free_page\">__get_free_page</a>(<a class=\"id\" href=\"#GFP_TEMPORARY\">GFP_TEMPORARY</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#page\">page</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free\">out_free</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Guard against adverse ptrace interaction */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#mutex_lock_interruptible\">mutex_lock_interruptible</a>(&amp;<a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#cred_guard_mutex\">cred_guard_mutex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#length\">length</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free\">out_free</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#security_setprocattr\">security_setprocattr</a>(<a class=\"id\" href=\"#task\">task</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      (char*)<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_name\">d_name</a>.<a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      (void*)<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#cred_guard_mutex\">cred_guard_mutex</a>);", 
"<a class=\"id\" href=\"#out_free\">out_free</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_page\">free_page</a>((unsigned long) <a class=\"id\" href=\"#page\">page</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<a class=\"id\" href=\"#out_no_task\">out_no_task</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#length\">length</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#proc_pid_attr_operations\">proc_pid_attr_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_pid_attr_read\">proc_pid_attr_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write\">write</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_pid_attr_write\">proc_pid_attr_write</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_file_llseek\">generic_file_llseek</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#pid_entry\">pid_entry</a> <a class=\"id\" href=\"#attr_dir_stuff\">attr_dir_stuff</a>[] = {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG\">REG</a>(\"current\",    <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>|<a class=\"id\" href=\"#S_IWUGO\">S_IWUGO</a>, <a class=\"id\" href=\"#proc_pid_attr_operations\">proc_pid_attr_operations</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG\">REG</a>(\"prev\",       <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>,<span class=\"ts\"/>   <a class=\"id\" href=\"#proc_pid_attr_operations\">proc_pid_attr_operations</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG\">REG</a>(\"exec\",       <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>|<a class=\"id\" href=\"#S_IWUGO\">S_IWUGO</a>, <a class=\"id\" href=\"#proc_pid_attr_operations\">proc_pid_attr_operations</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG\">REG</a>(\"fscreate\",   <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>|<a class=\"id\" href=\"#S_IWUGO\">S_IWUGO</a>, <a class=\"id\" href=\"#proc_pid_attr_operations\">proc_pid_attr_operations</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG\">REG</a>(\"keycreate\",  <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>|<a class=\"id\" href=\"#S_IWUGO\">S_IWUGO</a>, <a class=\"id\" href=\"#proc_pid_attr_operations\">proc_pid_attr_operations</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG\">REG</a>(\"sockcreate\", <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>|<a class=\"id\" href=\"#S_IWUGO\">S_IWUGO</a>, <a class=\"id\" href=\"#proc_pid_attr_operations\">proc_pid_attr_operations</a>),", 
"};", 
"", 
"static int <a class=\"id\" href=\"#proc_attr_dir_readdir\">proc_attr_dir_readdir</a>(struct <a class=\"id\" href=\"#file\">file</a> * <a class=\"id\" href=\"#filp\">filp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     void * <a class=\"id\" href=\"#dirent\">dirent</a>, <a class=\"id\" href=\"#filldir_t\">filldir_t</a> <a class=\"id\" href=\"#filldir\">filldir</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#proc_pident_readdir\">proc_pident_readdir</a>(<a class=\"id\" href=\"#filp\">filp</a>,<a class=\"id\" href=\"#dirent\">dirent</a>,<a class=\"id\" href=\"#filldir\">filldir</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#attr_dir_stuff\">attr_dir_stuff</a>,<a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#attr_dir_stuff\">attr_dir_stuff</a>));", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#proc_attr_dir_operations\">proc_attr_dir_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_read_dir\">generic_read_dir</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#readdir\">readdir</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_attr_dir_readdir\">proc_attr_dir_readdir</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#proc_attr_dir_lookup\">proc_attr_dir_lookup</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, struct <a class=\"id\" href=\"#nameidata\">nameidata</a> *<a class=\"id\" href=\"#nd\">nd</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#proc_pident_lookup\">proc_pident_lookup</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#dentry\">dentry</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#attr_dir_stuff\">attr_dir_stuff</a>, <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#attr_dir_stuff\">attr_dir_stuff</a>));", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#inode_operations\">inode_operations</a> <a class=\"id\" href=\"#proc_attr_dir_inode_operations\">proc_attr_dir_inode_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#lookup\">lookup</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_attr_dir_lookup\">proc_attr_dir_lookup</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#getattr\">getattr</a><span class=\"ts\"/>= <a class=\"id\" href=\"#pid_getattr\">pid_getattr</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#setattr\">setattr</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_setattr\">proc_setattr</a>,", 
"};", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_ELF_CORE\">CONFIG_ELF_CORE</a>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#proc_coredump_filter_read\">proc_coredump_filter_read</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#get_proc_task\">get_proc_task</a>(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_dentry\">f_dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#PROC_NUMBUF\">PROC_NUMBUF</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#task\">task</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a> = <a class=\"id\" href=\"#get_task_mm\">get_task_mm</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mm\">mm</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>), \"%08lx\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       ((<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#MMF_DUMP_FILTER_MASK\">MMF_DUMP_FILTER_MASK</a>) >>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#MMF_DUMP_FILTER_SHIFT\">MMF_DUMP_FILTER_SHIFT</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mmput\">mmput</a>(<a class=\"id\" href=\"#mm\">mm</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#simple_read_from_buffer\">simple_read_from_buffer</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#ppos\">ppos</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#proc_coredump_filter_write\">proc_coredump_filter_write</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#PROC_NUMBUF\">PROC_NUMBUF</a>], *<a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#mask\">mask</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, 0, sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> &gt; sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>) - 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>) - 1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_no_task\">out_no_task</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = (unsigned int)<a class=\"id\" href=\"#simple_strtoul\">simple_strtoul</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, &amp;<a class=\"id\" href=\"#end\">end</a>, 0);", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#end\">end</a> == '\\n')", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a>++;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#end\">end</a> - <a class=\"id\" href=\"#buffer\">buffer</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_no_task\">out_no_task</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#get_proc_task\">get_proc_task</a>(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_dentry\">f_dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#task\">task</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_no_task\">out_no_task</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#end\">end</a> - <a class=\"id\" href=\"#buffer\">buffer</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a> = <a class=\"id\" href=\"#get_task_mm\">get_task_mm</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mm\">mm</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_no_mm\">out_no_mm</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0, <a class=\"id\" href=\"#mask\">mask</a> = 1; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#MMF_DUMP_FILTER_BITS\">MMF_DUMP_FILTER_BITS</a>; <a class=\"id\" href=\"#i\">i</a>++, <a class=\"id\" href=\"#mask\">mask</a> <<= 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#val\">val</a> &amp; <a class=\"id\" href=\"#mask\">mask</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#i\">i</a> + <a class=\"id\" href=\"#MMF_DUMP_FILTER_SHIFT\">MMF_DUMP_FILTER_SHIFT</a>, &amp;<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#i\">i</a> + <a class=\"id\" href=\"#MMF_DUMP_FILTER_SHIFT\">MMF_DUMP_FILTER_SHIFT</a>, &amp;<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mmput\">mmput</a>(<a class=\"id\" href=\"#mm\">mm</a>);", 
" <a class=\"id\" href=\"#out_no_mm\">out_no_mm</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
" <a class=\"id\" href=\"#out_no_task\">out_no_task</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#proc_coredump_filter_operations\">proc_coredump_filter_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_coredump_filter_read\">proc_coredump_filter_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write\">write</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_coredump_filter_write\">proc_coredump_filter_write</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_file_llseek\">generic_file_llseek</a>,", 
"};", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * /proc/self:</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#proc_self_readlink\">proc_self_readlink</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buffer\">buffer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      int <a class=\"id\" href=\"#buflen\">buflen</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pid_namespace\">pid_namespace</a> *<a class=\"id\" href=\"#ns\">ns</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_sb\">d_sb</a>-><a class=\"id\" href=\"#s_fs_info\">s_fs_info</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pid_t\">pid_t</a> <a class=\"id\" href=\"#tgid\">tgid</a> = <a class=\"id\" href=\"#task_tgid_nr_ns\">task_tgid_nr_ns</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#ns\">ns</a>);", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#tmp\">tmp</a>[<a class=\"id\" href=\"#PROC_NUMBUF\">PROC_NUMBUF</a>];", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tgid\">tgid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#tmp\">tmp</a>, \"%d\", <a class=\"id\" href=\"#tgid\">tgid</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#vfs_readlink\">vfs_readlink</a>(<a class=\"id\" href=\"#dentry\">dentry</a>,<a class=\"id\" href=\"#buffer\">buffer</a>,<a class=\"id\" href=\"#buflen\">buflen</a>,<a class=\"id\" href=\"#tmp\">tmp</a>);", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#proc_self_follow_link\">proc_self_follow_link</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, struct <a class=\"id\" href=\"#nameidata\">nameidata</a> *<a class=\"id\" href=\"#nd\">nd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pid_namespace\">pid_namespace</a> *<a class=\"id\" href=\"#ns\">ns</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_sb\">d_sb</a>-><a class=\"id\" href=\"#s_fs_info\">s_fs_info</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pid_t\">pid_t</a> <a class=\"id\" href=\"#tgid\">tgid</a> = <a class=\"id\" href=\"#task_tgid_nr_ns\">task_tgid_nr_ns</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#ns\">ns</a>);", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOENT\">ENOENT</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tgid\">tgid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#__getname\">__getname</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#name\">name</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#name\">name</a>, \"%d\", <a class=\"id\" href=\"#tgid\">tgid</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nd_set_link\">nd_set_link</a>(<a class=\"id\" href=\"#nd\">nd</a>, <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#proc_self_put_link\">proc_self_put_link</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, struct <a class=\"id\" href=\"#nameidata\">nameidata</a> *<a class=\"id\" href=\"#nd\">nd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#cookie\">cookie</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#s\">s</a> = <a class=\"id\" href=\"#nd_get_link\">nd_get_link</a>(<a class=\"id\" href=\"#nd\">nd</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#s\">s</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__putname\">__putname</a>(<a class=\"id\" href=\"#s\">s</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#inode_operations\">inode_operations</a> <a class=\"id\" href=\"#proc_self_inode_operations\">proc_self_inode_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#readlink\">readlink</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_self_readlink\">proc_self_readlink</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#follow_link\">follow_link</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_self_follow_link\">proc_self_follow_link</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#put_link\">put_link</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_self_put_link\">proc_self_put_link</a>,", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * proc base</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * These are the directory entries in the root directory of /proc</span>", 
"<span class=\"comment\"> * that properly belong to the /proc filesystem, as they describe</span>", 
"<span class=\"comment\"> * describe something that is process related.</span>", 
"<span class=\"comment\"> */</span>", 
"static const struct <a class=\"id\" href=\"#pid_entry\">pid_entry</a> <a class=\"id\" href=\"#proc_base_stuff\">proc_base_stuff</a>[] = {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NOD\">NOD</a>(\"self\", <a class=\"id\" href=\"#S_IFLNK\">S_IFLNK</a>|<a class=\"id\" href=\"#S_IRWXUGO\">S_IRWXUGO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#proc_self_inode_operations\">proc_self_inode_operations</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, {}),", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Exceptional case: normally we are not allowed to unhash a busy</span>", 
"<span class=\"comment\"> * directory. In this case, however, we can do it - no aliasing problems</span>", 
"<span class=\"comment\"> * due to the way we treat inodes.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#proc_base_revalidate\">proc_base_revalidate</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, struct <a class=\"id\" href=\"#nameidata\">nameidata</a> *<a class=\"id\" href=\"#nd\">nd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#get_proc_task\">get_proc_task</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#task\">task</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#d_drop\">d_drop</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#dentry_operations\">dentry_operations</a> <a class=\"id\" href=\"#proc_base_dentry_operations\">proc_base_dentry_operations</a> =", 
"{", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#d_revalidate\">d_revalidate</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_base_revalidate\">proc_base_revalidate</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#d_delete\">d_delete</a><span class=\"ts\"/>= <a class=\"id\" href=\"#pid_delete_dentry\">pid_delete_dentry</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#proc_base_instantiate\">proc_base_instantiate</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>, const void *<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#pid_entry\">pid_entry</a> *<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#ptr\">ptr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proc_inode\">proc_inode</a> *<a class=\"id\" href=\"#ei\">ei</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Allocate the inode */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#new_inode\">new_inode</a>(<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#inode\">inode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Initialize the inode */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a> = <a class=\"id\" href=\"#PROC_I\">PROC_I</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mtime\">i_mtime</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_atime\">i_atime</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ctime\">i_ctime</a> = <a class=\"id\" href=\"#CURRENT_TIME\">CURRENT_TIME</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * grab the reference to the task.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#pid\">pid</a> = <a class=\"id\" href=\"#get_task_pid\">get_task_pid</a>(<a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#PIDTYPE_PID\">PIDTYPE_PID</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#pid\">pid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_iput\">out_iput</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#mode\">mode</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#S_ISDIR\">S_ISDIR</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_nlink\">i_nlink</a> = 2;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#S_ISLNK\">S_ISLNK</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a> = 64;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#iop\">iop</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_op\">i_op</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#iop\">iop</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#fop\">fop</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_fop\">i_fop</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#fop\">fop</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#op\">op</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#op\">op</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_op\">d_op</a> = &amp;<a class=\"id\" href=\"#proc_base_dentry_operations\">proc_base_dentry_operations</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#d_add\">d_add</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<a class=\"id\" href=\"#out_iput\">out_iput</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#proc_base_lookup\">proc_base_lookup</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#get_proc_task\">get_proc_task</a>(<a class=\"id\" href=\"#dir\">dir</a>);", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#pid_entry\">pid_entry</a> *<a class=\"id\" href=\"#p\">p</a>, *<a class=\"id\" href=\"#last\">last</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOENT\">ENOENT</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#task\">task</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_no_task\">out_no_task</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Lookup the directory entry */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a> = &amp;<a class=\"id\" href=\"#proc_base_stuff\">proc_base_stuff</a>[<a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#proc_base_stuff\">proc_base_stuff</a>) - 1];", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#proc_base_stuff\">proc_base_stuff</a>; <a class=\"id\" href=\"#p\">p</a> <= <a class=\"id\" href=\"#last\">last</a>; <a class=\"id\" href=\"#p\">p</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#len\">len</a> != <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_name\">d_name</a>.<a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_name\">d_name</a>.<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#len\">len</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a> &gt; <a class=\"id\" href=\"#last\">last</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#proc_base_instantiate\">proc_base_instantiate</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<a class=\"id\" href=\"#out_no_task\">out_no_task</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#proc_base_fill_cache\">proc_base_fill_cache</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, void *<a class=\"id\" href=\"#dirent\">dirent</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#filldir_t\">filldir_t</a> <a class=\"id\" href=\"#filldir\">filldir</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>, const struct <a class=\"id\" href=\"#pid_entry\">pid_entry</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#proc_fill_cache\">proc_fill_cache</a>(<a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#dirent\">dirent</a>, <a class=\"id\" href=\"#filldir\">filldir</a>, <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#proc_base_instantiate\">proc_base_instantiate</a>, <a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TASK_IO_ACCOUNTING\">CONFIG_TASK_IO_ACCOUNTING</a>", 
"static int <a class=\"id\" href=\"#do_io_accounting\">do_io_accounting</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>, char *<a class=\"id\" href=\"#buffer\">buffer</a>, int <a class=\"id\" href=\"#whole\">whole</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_io_accounting\">task_io_accounting</a> <a class=\"id\" href=\"#acct\">acct</a> = <a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#ioac\">ioac</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#whole\">whole</a> && <a class=\"id\" href=\"#lock_task_sighand\">lock_task_sighand</a>(<a class=\"id\" href=\"#task\">task</a>, &amp;<a class=\"id\" href=\"#flags\">flags</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#t\">t</a> = <a class=\"id\" href=\"#task\">task</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#task_io_accounting_add\">task_io_accounting_add</a>(&amp;<a class=\"id\" href=\"#acct\">acct</a>, &amp;<a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#ioac\">ioac</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#while_each_thread\">while_each_thread</a>(<a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#t\">t</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#task_io_accounting_add\">task_io_accounting_add</a>(&amp;<a class=\"id\" href=\"#acct\">acct</a>, &amp;<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#ioac\">ioac</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_task_sighand\">unlock_task_sighand</a>(<a class=\"id\" href=\"#task\">task</a>, &amp;<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buffer\">buffer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"rchar: %llu\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"wchar: %llu\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"syscr: %llu\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"syscw: %llu\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"read_bytes: %llu\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"write_bytes: %llu\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"cancelled_write_bytes: %llu\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long long)<a class=\"id\" href=\"#acct\">acct</a>.<a class=\"id\" href=\"#rchar\">rchar</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long long)<a class=\"id\" href=\"#acct\">acct</a>.<a class=\"id\" href=\"#wchar\">wchar</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long long)<a class=\"id\" href=\"#acct\">acct</a>.<a class=\"id\" href=\"#syscr\">syscr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long long)<a class=\"id\" href=\"#acct\">acct</a>.<a class=\"id\" href=\"#syscw\">syscw</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long long)<a class=\"id\" href=\"#acct\">acct</a>.<a class=\"id\" href=\"#read_bytes\">read_bytes</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long long)<a class=\"id\" href=\"#acct\">acct</a>.<a class=\"id\" href=\"#write_bytes\">write_bytes</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long long)<a class=\"id\" href=\"#acct\">acct</a>.<a class=\"id\" href=\"#cancelled_write_bytes\">cancelled_write_bytes</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#proc_tid_io_accounting\">proc_tid_io_accounting</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>, char *<a class=\"id\" href=\"#buffer\">buffer</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#do_io_accounting\">do_io_accounting</a>(<a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, 0);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#proc_tgid_io_accounting\">proc_tgid_io_accounting</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>, char *<a class=\"id\" href=\"#buffer\">buffer</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#do_io_accounting\">do_io_accounting</a>(<a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, 1);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_TASK_IO_ACCOUNTING */</span>", 
"", 
"static int <a class=\"id\" href=\"#proc_pid_personality\">proc_pid_personality</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, struct <a class=\"id\" href=\"#pid_namespace\">pid_namespace</a> *<a class=\"id\" href=\"#ns\">ns</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#pid\">pid</a> *<a class=\"id\" href=\"#pid\">pid</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"%08x\\n\", <a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#personality\">personality</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Thread groups</span>", 
"<span class=\"comment\"> */</span>", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#proc_task_operations\">proc_task_operations</a>;", 
"static const struct <a class=\"id\" href=\"#inode_operations\">inode_operations</a> <a class=\"id\" href=\"#proc_task_inode_operations\">proc_task_inode_operations</a>;", 
"", 
"static const struct <a class=\"id\" href=\"#pid_entry\">pid_entry</a> <a class=\"id\" href=\"#tgid_base_stuff\">tgid_base_stuff</a>[] = {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DIR\">DIR</a>(\"task\",       <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>|<a class=\"id\" href=\"#S_IXUGO\">S_IXUGO</a>, <a class=\"id\" href=\"#proc_task_inode_operations\">proc_task_inode_operations</a>, <a class=\"id\" href=\"#proc_task_operations\">proc_task_operations</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DIR\">DIR</a>(\"fd\",         <a class=\"id\" href=\"#S_IRUSR\">S_IRUSR</a>|<a class=\"id\" href=\"#S_IXUSR\">S_IXUSR</a>, <a class=\"id\" href=\"#proc_fd_inode_operations\">proc_fd_inode_operations</a>, <a class=\"id\" href=\"#proc_fd_operations\">proc_fd_operations</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DIR\">DIR</a>(\"fdinfo\",     <a class=\"id\" href=\"#S_IRUSR\">S_IRUSR</a>|<a class=\"id\" href=\"#S_IXUSR\">S_IXUSR</a>, <a class=\"id\" href=\"#proc_fdinfo_inode_operations\">proc_fdinfo_inode_operations</a>, <a class=\"id\" href=\"#proc_fdinfo_operations\">proc_fdinfo_operations</a>),", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET\">CONFIG_NET</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DIR\">DIR</a>(\"net\",        <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>|<a class=\"id\" href=\"#S_IXUGO\">S_IXUGO</a>, <a class=\"id\" href=\"#proc_net_inode_operations\">proc_net_inode_operations</a>, <a class=\"id\" href=\"#proc_net_operations\">proc_net_operations</a>),", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG\">REG</a>(\"environ\",    <a class=\"id\" href=\"#S_IRUSR\">S_IRUSR</a>, <a class=\"id\" href=\"#proc_environ_operations\">proc_environ_operations</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INF\">INF</a>(\"auxv\",       <a class=\"id\" href=\"#S_IRUSR\">S_IRUSR</a>, <a class=\"id\" href=\"#proc_pid_auxv\">proc_pid_auxv</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ONE\">ONE</a>(\"status\",     <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#proc_pid_status\">proc_pid_status</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ONE\">ONE</a>(\"personality\", <a class=\"id\" href=\"#S_IRUSR\">S_IRUSR</a>, <a class=\"id\" href=\"#proc_pid_personality\">proc_pid_personality</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INF\">INF</a>(\"limits\",<span class=\"ts\"/>  <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#proc_pid_limits\">proc_pid_limits</a>),", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SCHED_DEBUG\">CONFIG_SCHED_DEBUG</a>", 
];
xr_frag_insert('l/63/57c198d753d7c83fc68fd6feea31b4189e9417.xr', __xr_tmp);
