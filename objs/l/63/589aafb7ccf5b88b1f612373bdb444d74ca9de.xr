var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * drivers/base/core.c - core driver model code (device registration, etc)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (c) 2002-3 Patrick Mochel</span>", 
"<span class=\"comment\"> * Copyright (c) 2002-3 Open Source Development Labs</span>", 
"<span class=\"comment\"> * Copyright (c) 2006 Greg Kroah-Hartman &lt;gregkh@suse.de&gt;</span>", 
"<span class=\"comment\"> * Copyright (c) 2006 Novell, Inc.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file is released under the GPLv2</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#device\">device</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#err\">err</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kdev_t\">kdev_t</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#notifier\">notifier</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#genhd\">genhd</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kallsyms\">kallsyms</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mutex\">mutex</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#async\">async</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"base.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"power/power.h\"", 
"", 
"int (*<a class=\"id\" href=\"#platform_notify\">platform_notify</a>)(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>) = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"int (*<a class=\"id\" href=\"#platform_notify_remove\">platform_notify_remove</a>)(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>) = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"static struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#dev_kobj\">dev_kobj</a>;", 
"struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#sysfs_dev_char_kobj\">sysfs_dev_char_kobj</a>;", 
"struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#sysfs_dev_block_kobj\">sysfs_dev_block_kobj</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_BLOCK\">CONFIG_BLOCK</a>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#device_is_not_partition\">device_is_not_partition</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>return !(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a> == &amp;<a class=\"id\" href=\"#part_type\">part_type</a>);", 
"}", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#device_is_not_partition\">device_is_not_partition</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>return 1;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * dev_driver_string - Return a device's driver name, if at all possible</span>", 
"<span class=\"comment\"> * @dev: struct device to get the name of</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Will return the device's driver's name if it is bound to a device.  If</span>", 
"<span class=\"comment\"> * the device is not bound to a device, it will return the name of the bus</span>", 
"<span class=\"comment\"> * it is attached to.  If it is not attached to a bus either, an empty</span>", 
"<span class=\"comment\"> * string will be returned.</span>", 
"<span class=\"comment\"> */</span>", 
"const char *<a class=\"id\" href=\"#dev_driver_string\">dev_driver_string</a>(const struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device_driver\">device_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* dev-&gt;driver can change to NULL underneath us because of unbinding,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so be careful about accessing it.  dev-&gt;bus and dev-&gt;class should</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * never change once they are set, so they don't need special care.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#drv\">drv</a> = <a class=\"id\" href=\"#ACCESS_ONCE\">ACCESS_ONCE</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#drv\">drv</a> ? <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#name\">name</a> :", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a> ? <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#name\">name</a> :", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a> ? <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#name\">name</a> : \"\"));", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#dev_driver_string\">dev_driver_string</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#to_dev\">to_dev</a>(<a class=\"id\" href=\"#obj\">obj</a>) <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#obj\">obj</a>, struct <a class=\"id\" href=\"#device\">device</a>, <a class=\"id\" href=\"#kobj\">kobj</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#to_dev_attr\">to_dev_attr</a>(<a class=\"id\" href=\"#_attr\">_attr</a>) <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#_attr\">_attr</a>, struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a>, <a class=\"id\" href=\"#attr\">attr</a>)", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#dev_attr_show\">dev_attr_show</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>, struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#dev_attr\">dev_attr</a> = <a class=\"id\" href=\"#to_dev_attr\">to_dev_attr</a>(<a class=\"id\" href=\"#attr\">attr</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#to_dev\">to_dev</a>(<a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev_attr\">dev_attr</a>-><a class=\"id\" href=\"#show\">show</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#dev_attr\">dev_attr</a>-><a class=\"id\" href=\"#show\">show</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#dev_attr\">dev_attr</a>, <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> >= (<a class=\"id\" href=\"#ssize_t\">ssize_t</a>)<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#print_symbol\">print_symbol</a>(\"dev_attr_show: %s returned bad count\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long)<a class=\"id\" href=\"#dev_attr\">dev_attr</a>-><a class=\"id\" href=\"#show\">show</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#dev_attr_store\">dev_attr_store</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>, struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#dev_attr\">dev_attr</a> = <a class=\"id\" href=\"#to_dev_attr\">to_dev_attr</a>(<a class=\"id\" href=\"#attr\">attr</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#to_dev\">to_dev</a>(<a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev_attr\">dev_attr</a>-><a class=\"id\" href=\"#store\">store</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#dev_attr\">dev_attr</a>-><a class=\"id\" href=\"#store\">store</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#dev_attr\">dev_attr</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#sysfs_ops\">sysfs_ops</a> <a class=\"id\" href=\"#dev_sysfs_ops\">dev_sysfs_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a><span class=\"ts\"/>= <a class=\"id\" href=\"#dev_attr_show\">dev_attr_show</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#store\">store</a><span class=\"ts\"/>= <a class=\"id\" href=\"#dev_attr_store\">dev_attr_store</a>,", 
"};", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>device_release - free device structure.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@kobj:<span class=\"ts\"/>device's kobject.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This is called once the reference count for the object</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>reaches 0. We forward the call to the device's release</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>method, which should handle actually freeing the structure.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#device_release\">device_release</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#to_dev\">to_dev</a>(<a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device_private\">device_private</a> *<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#release\">release</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#release\">release</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a> && <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a>-><a class=\"id\" href=\"#release\">release</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a>-><a class=\"id\" href=\"#release\">release</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a> && <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#dev_release\">dev_release</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#dev_release\">dev_release</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN\">WARN</a>(1, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"Device '%s' does not have a release() \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"function, it is broken and must be fixed.\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#dev\">dev</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"}", 
"", 
"static const void *<a class=\"id\" href=\"#device_namespace\">device_namespace</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#to_dev\">to_dev</a>(<a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/>const void *<a class=\"id\" href=\"#ns\">ns</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a> && <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#ns_type\">ns_type</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ns\">ns</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#namespace\">namespace</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ns\">ns</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#kobj_type\">kobj_type</a> <a class=\"id\" href=\"#device_ktype\">device_ktype</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#device_release\">device_release</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sysfs_ops\">sysfs_ops</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#dev_sysfs_ops\">dev_sysfs_ops</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#namespace\">namespace</a><span class=\"ts\"/>= <a class=\"id\" href=\"#device_namespace\">device_namespace</a>,", 
"};", 
"", 
"", 
"static int <a class=\"id\" href=\"#dev_uevent_filter\">dev_uevent_filter</a>(struct <a class=\"id\" href=\"#kset\">kset</a> *<a class=\"id\" href=\"#kset\">kset</a>, struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kobj_type\">kobj_type</a> *<a class=\"id\" href=\"#ktype\">ktype</a> = <a class=\"id\" href=\"#get_ktype\">get_ktype</a>(<a class=\"id\" href=\"#kobj\">kobj</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ktype\">ktype</a> == &amp;<a class=\"id\" href=\"#device_ktype\">device_ktype</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#to_dev\">to_dev</a>(<a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static const char *<a class=\"id\" href=\"#dev_uevent_name\">dev_uevent_name</a>(struct <a class=\"id\" href=\"#kset\">kset</a> *<a class=\"id\" href=\"#kset\">kset</a>, struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#to_dev\">to_dev</a>(<a class=\"id\" href=\"#kobj\">kobj</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#dev_uevent\">dev_uevent</a>(struct <a class=\"id\" href=\"#kset\">kset</a> *<a class=\"id\" href=\"#kset\">kset</a>, struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#kobj_uevent_env\">kobj_uevent_env</a> *<a class=\"id\" href=\"#env\">env</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#to_dev\">to_dev</a>(<a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* add device node properties if present */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#MAJOR\">MAJOR</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devt\">devt</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>const char *<a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>const char *<a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mode_t\">mode_t</a> <a class=\"id\" href=\"#mode\">mode</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_uevent_var\">add_uevent_var</a>(<a class=\"id\" href=\"#env\">env</a>, \"MAJOR=%u\", <a class=\"id\" href=\"#MAJOR\">MAJOR</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devt\">devt</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_uevent_var\">add_uevent_var</a>(<a class=\"id\" href=\"#env\">env</a>, \"MINOR=%u\", <a class=\"id\" href=\"#MINOR\">MINOR</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devt\">devt</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#device_get_devnode\">device_get_devnode</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#mode\">mode</a>, &amp;<a class=\"id\" href=\"#tmp\">tmp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#name\">name</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_uevent_var\">add_uevent_var</a>(<a class=\"id\" href=\"#env\">env</a>, \"DEVNAME=%s\", <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#tmp\">tmp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mode\">mode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_uevent_var\">add_uevent_var</a>(<a class=\"id\" href=\"#env\">env</a>, \"DEVMODE=%#o\", <a class=\"id\" href=\"#mode\">mode</a> &amp; 0777);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a> && <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a>-><a class=\"id\" href=\"#name\">name</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_uevent_var\">add_uevent_var</a>(<a class=\"id\" href=\"#env\">env</a>, \"DEVTYPE=%s\", <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_uevent_var\">add_uevent_var</a>(<a class=\"id\" href=\"#env\">env</a>, \"DRIVER=%s\", <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYSFS_DEPRECATED\">CONFIG_SYSFS_DEPRECATED</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* find first bus device in parent chain */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#parent\">parent</a> && !<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#bus\">bus</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#parent\">parent</a> && <a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#bus\">bus</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const char *<a class=\"id\" href=\"#path\">path</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a> = <a class=\"id\" href=\"#kobject_get_path\">kobject_get_path</a>(&amp;<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#path\">path</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_uevent_var\">add_uevent_var</a>(<a class=\"id\" href=\"#env\">env</a>, \"PHYSDEVPATH=%s\", <a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_uevent_var\">add_uevent_var</a>(<a class=\"id\" href=\"#env\">env</a>, \"PHYSDEVBUS=%s\", <a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#driver\">driver</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_uevent_var\">add_uevent_var</a>(<a class=\"id\" href=\"#env\">env</a>, \"PHYSDEVDRIVER=%s\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_uevent_var\">add_uevent_var</a>(<a class=\"id\" href=\"#env\">env</a>, \"PHYSDEVBUS=%s\", <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_uevent_var\">add_uevent_var</a>(<a class=\"id\" href=\"#env\">env</a>, \"PHYSDEVDRIVER=%s\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* have the bus specific function add its stuff */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a> && <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#uevent\">uevent</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#uevent\">uevent</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#env\">env</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"device: '%s': %s: bus uevent() returned %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#retval\">retval</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* have the class specific function add its stuff */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a> && <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#dev_uevent\">dev_uevent</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#dev_uevent\">dev_uevent</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#env\">env</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"device: '%s': %s: class uevent() \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"returned %d\\n\", <a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#dev\">dev</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#retval\">retval</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* have the device type specific fuction add its stuff */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a> && <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a>-><a class=\"id\" href=\"#uevent\">uevent</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a>-><a class=\"id\" href=\"#uevent\">uevent</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#env\">env</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"device: '%s': %s: dev_type uevent() \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"returned %d\\n\", <a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#dev\">dev</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#retval\">retval</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#kset_uevent_ops\">kset_uevent_ops</a> <a class=\"id\" href=\"#device_uevent_ops\">device_uevent_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#filter\">filter</a> =<span class=\"ts\"/><a class=\"id\" href=\"#dev_uevent_filter\">dev_uevent_filter</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_uevent_name\">dev_uevent_name</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#uevent\">uevent</a> =<span class=\"ts\"/><a class=\"id\" href=\"#dev_uevent\">dev_uevent</a>,", 
"};", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#show_uevent\">show_uevent</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#top_kobj\">top_kobj</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kset\">kset</a> *<a class=\"id\" href=\"#kset\">kset</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kobj_uevent_env\">kobj_uevent_env</a> *<a class=\"id\" href=\"#env\">env</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* search the kset, the device belongs to */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#top_kobj\">top_kobj</a> = &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>;", 
"<span class=\"ts\"/>while (!<a class=\"id\" href=\"#top_kobj\">top_kobj</a>-><a class=\"id\" href=\"#kset\">kset</a> && <a class=\"id\" href=\"#top_kobj\">top_kobj</a>-><a class=\"id\" href=\"#parent\">parent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#top_kobj\">top_kobj</a> = <a class=\"id\" href=\"#top_kobj\">top_kobj</a>-><a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#top_kobj\">top_kobj</a>-><a class=\"id\" href=\"#kset\">kset</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kset\">kset</a> = <a class=\"id\" href=\"#top_kobj\">top_kobj</a>-><a class=\"id\" href=\"#kset\">kset</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#kset\">kset</a>-><a class=\"id\" href=\"#uevent_ops\">uevent_ops</a> || !<a class=\"id\" href=\"#kset\">kset</a>-><a class=\"id\" href=\"#uevent_ops\">uevent_ops</a>-><a class=\"id\" href=\"#uevent\">uevent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* respect filter */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#kset\">kset</a>-><a class=\"id\" href=\"#uevent_ops\">uevent_ops</a> && <a class=\"id\" href=\"#kset\">kset</a>-><a class=\"id\" href=\"#uevent_ops\">uevent_ops</a>-><a class=\"id\" href=\"#filter\">filter</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#kset\">kset</a>-><a class=\"id\" href=\"#uevent_ops\">uevent_ops</a>-><a class=\"id\" href=\"#filter\">filter</a>(<a class=\"id\" href=\"#kset\">kset</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#env\">env</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#kobj_uevent_env\">kobj_uevent_env</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#env\">env</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* let the kset specific function add its keys */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#kset\">kset</a>-><a class=\"id\" href=\"#uevent_ops\">uevent_ops</a>-><a class=\"id\" href=\"#uevent\">uevent</a>(<a class=\"id\" href=\"#kset\">kset</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#env\">env</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* copy keys to file */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#envp_idx\">envp_idx</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> += <a class=\"id\" href=\"#sprintf\">sprintf</a>(&amp;<a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#count\">count</a>], \"%s\\n\", <a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#envp\">envp</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#env\">env</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#store_uevent\">store_uevent</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#kobject_action\">kobject_action</a> <a class=\"id\" href=\"#action\">action</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#kobject_action_type\">kobject_action_type</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>, &amp;<a class=\"id\" href=\"#action\">action</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kobject_uevent\">kobject_uevent</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#action\">action</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_err\">dev_err</a>(<a class=\"id\" href=\"#dev\">dev</a>, \"uevent: unknown action-string\\n\");", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> <a class=\"id\" href=\"#uevent_attr\">uevent_attr</a> =", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ATTR\">__ATTR</a>(<a class=\"id\" href=\"#uevent\">uevent</a>, <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a> | <a class=\"id\" href=\"#S_IWUSR\">S_IWUSR</a>, <a class=\"id\" href=\"#show_uevent\">show_uevent</a>, <a class=\"id\" href=\"#store_uevent\">store_uevent</a>);", 
"", 
"static int <a class=\"id\" href=\"#device_add_attributes\">device_add_attributes</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attrs\">attrs</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#attrs\">attrs</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#attr_name\">attr_name</a>(<a class=\"id\" href=\"#attrs\">attrs</a>[<a class=\"id\" href=\"#i\">i</a>]); <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#device_create_file\">device_create_file</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#attrs\">attrs</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>while (--<a class=\"id\" href=\"#i\">i</a> >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_remove_file\">device_remove_file</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#attrs\">attrs</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#device_remove_attributes\">device_remove_attributes</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attrs\">attrs</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#attrs\">attrs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#attr_name\">attr_name</a>(<a class=\"id\" href=\"#attrs\">attrs</a>[<a class=\"id\" href=\"#i\">i</a>]); <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_remove_file\">device_remove_file</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#attrs\">attrs</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#device_add_groups\">device_add_groups</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     const struct <a class=\"id\" href=\"#attribute_group\">attribute_group</a> **<a class=\"id\" href=\"#groups\">groups</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#groups\">groups</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#groups\">groups</a>[<a class=\"id\" href=\"#i\">i</a>]; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#sysfs_create_group\">sysfs_create_group</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#groups\">groups</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>while (--<a class=\"id\" href=\"#i\">i</a> >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_group\">sysfs_remove_group</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#groups\">groups</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#device_remove_groups\">device_remove_groups</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const struct <a class=\"id\" href=\"#attribute_group\">attribute_group</a> **<a class=\"id\" href=\"#groups\">groups</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#groups\">groups</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#groups\">groups</a>[<a class=\"id\" href=\"#i\">i</a>]; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_group\">sysfs_remove_group</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#groups\">groups</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#device_add_attrs\">device_add_attrs</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#class\">class</a> *<a class=\"id\" href=\"#class\">class</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device_type\">device_type</a> *<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#class\">class</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#device_add_attributes\">device_add_attributes</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#dev_attrs\">dev_attrs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#device_add_groups\">device_add_groups</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#type\">type</a>-><a class=\"id\" href=\"#groups\">groups</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_remove_class_attrs\">err_remove_class_attrs</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#device_add_groups\">device_add_groups</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#groups\">groups</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_remove_type_groups\">err_remove_type_groups</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
" <a class=\"id\" href=\"#err_remove_type_groups\">err_remove_type_groups</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_remove_groups\">device_remove_groups</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#type\">type</a>-><a class=\"id\" href=\"#groups\">groups</a>);", 
" <a class=\"id\" href=\"#err_remove_class_attrs\">err_remove_class_attrs</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#class\">class</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_remove_attributes\">device_remove_attributes</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#dev_attrs\">dev_attrs</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#device_remove_attrs\">device_remove_attrs</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#class\">class</a> *<a class=\"id\" href=\"#class\">class</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device_type\">device_type</a> *<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_remove_groups\">device_remove_groups</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#groups\">groups</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_remove_groups\">device_remove_groups</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#type\">type</a>-><a class=\"id\" href=\"#groups\">groups</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#class\">class</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_remove_attributes\">device_remove_attributes</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#dev_attrs\">dev_attrs</a>);", 
"}", 
"", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#show_dev\">show_dev</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#print_dev_t\">print_dev_t</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devt\">devt</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> <a class=\"id\" href=\"#devt_attr\">devt_attr</a> =", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ATTR\">__ATTR</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#show_dev\">show_dev</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"comment\">/* kset to create /sys/devices/  */</span>", 
"struct <a class=\"id\" href=\"#kset\">kset</a> *<a class=\"id\" href=\"#devices_kset\">devices_kset</a>;", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * device_create_file - create sysfs attribute file for device.</span>", 
"<span class=\"comment\"> * @dev: device.</span>", 
"<span class=\"comment\"> * @attr: device attribute descriptor.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#device_create_file\">device_create_file</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       const struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#sysfs_create_file\">sysfs_create_file</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, &amp;<a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#attr\">attr</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * device_remove_file - remove sysfs attribute file.</span>", 
"<span class=\"comment\"> * @dev: device.</span>", 
"<span class=\"comment\"> * @attr: device attribute descriptor.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#device_remove_file\">device_remove_file</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_file\">sysfs_remove_file</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, &amp;<a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#attr\">attr</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * device_create_bin_file - create sysfs binary attribute file for device.</span>", 
"<span class=\"comment\"> * @dev: device.</span>", 
"<span class=\"comment\"> * @attr: device binary attribute descriptor.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#device_create_bin_file\">device_create_bin_file</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const struct <a class=\"id\" href=\"#bin_attribute\">bin_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#sysfs_create_bin_file\">sysfs_create_bin_file</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#attr\">attr</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#device_create_bin_file\">device_create_bin_file</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * device_remove_bin_file - remove sysfs binary attribute file</span>", 
"<span class=\"comment\"> * @dev: device.</span>", 
"<span class=\"comment\"> * @attr: device binary attribute descriptor.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#device_remove_bin_file\">device_remove_bin_file</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const struct <a class=\"id\" href=\"#bin_attribute\">bin_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_bin_file\">sysfs_remove_bin_file</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#attr\">attr</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#device_remove_bin_file\">device_remove_bin_file</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * device_schedule_callback_owner - helper to schedule a callback for a device</span>", 
"<span class=\"comment\"> * @dev: device.</span>", 
"<span class=\"comment\"> * @func: callback function to invoke later.</span>", 
"<span class=\"comment\"> * @owner: module owning the callback routine</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Attribute methods must not unregister themselves or their parent device</span>", 
"<span class=\"comment\"> * (which would amount to the same thing).  Attempts to do so will deadlock,</span>", 
"<span class=\"comment\"> * since unregistration is mutually exclusive with driver callbacks.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Instead methods can call this routine, which will attempt to allocate</span>", 
"<span class=\"comment\"> * and schedule a workqueue request to call back @func with @dev as its</span>", 
"<span class=\"comment\"> * argument in the workqueue's process context.  @dev will be pinned until</span>", 
"<span class=\"comment\"> * @func returns.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This routine is usually called via the inline device_schedule_callback(),</span>", 
"<span class=\"comment\"> * which automatically sets @owner to THIS_MODULE.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 if the request was submitted, -ENOMEM if storage could not</span>", 
"<span class=\"comment\"> * be allocated, -ENODEV if a reference to @owner isn't available.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NOTE: This routine won't work if CONFIG_SYSFS isn't set!  It uses an</span>", 
"<span class=\"comment\"> * underlying sysfs routine (since it is intended for use by attribute</span>", 
"<span class=\"comment\"> * methods), and if sysfs isn't available you'll get nothing but -ENOSYS.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#device_schedule_callback_owner\">device_schedule_callback_owner</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>void (*<a class=\"id\" href=\"#func\">func</a>)(struct <a class=\"id\" href=\"#device\">device</a> *), struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#owner\">owner</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sysfs_schedule_callback\">sysfs_schedule_callback</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(void (*)(void *)) <a class=\"id\" href=\"#func\">func</a>, <a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#owner\">owner</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#device_schedule_callback_owner\">device_schedule_callback_owner</a>);", 
"", 
"static void <a class=\"id\" href=\"#klist_children_get\">klist_children_get</a>(struct <a class=\"id\" href=\"#klist_node\">klist_node</a> *<a class=\"id\" href=\"#n\">n</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device_private\">device_private</a> *<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#to_device_private_parent\">to_device_private_parent</a>(<a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#device\">device</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_device\">get_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#klist_children_put\">klist_children_put</a>(struct <a class=\"id\" href=\"#klist_node\">klist_node</a> *<a class=\"id\" href=\"#n\">n</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device_private\">device_private</a> *<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#to_device_private_parent\">to_device_private_parent</a>(<a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#device\">device</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_device\">put_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * device_initialize - init device structure.</span>", 
"<span class=\"comment\"> * @dev: device.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This prepares the device for use by other layers by initializing</span>", 
"<span class=\"comment\"> * its fields.</span>", 
"<span class=\"comment\"> * It is the first half of device_register(), if called by</span>", 
"<span class=\"comment\"> * that function, though it can also be called separately, so one</span>", 
"<span class=\"comment\"> * may use @dev's fields. In particular, get_device()/put_device()</span>", 
"<span class=\"comment\"> * may be used for reference counting of @dev after calling this</span>", 
"<span class=\"comment\"> * function.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NOTE: Use put_device() to give up your reference instead of freeing</span>", 
"<span class=\"comment\"> * @dev directly once you have called this function.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#device_initialize\">device_initialize</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>.<a class=\"id\" href=\"#kset\">kset</a> = <a class=\"id\" href=\"#devices_kset\">devices_kset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobject_init\">kobject_init</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, &amp;<a class=\"id\" href=\"#device_ktype\">device_ktype</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dma_pools\">dma_pools</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_init\">mutex_init</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lockdep_set_novalidate_class\">lockdep_set_novalidate_class</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devres_lock\">devres_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devres_head\">devres_head</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_pm_init\">device_pm_init</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_dev_node\">set_dev_node</a>(<a class=\"id\" href=\"#dev\">dev</a>, -1);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYSFS_DEPRECATED\">CONFIG_SYSFS_DEPRECATED</a>", 
"static struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#get_device_parent\">get_device_parent</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#parent\">parent</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* class devices without a parent live in /sys/class/&lt;classname&gt;/ */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a> && (!<a class=\"id\" href=\"#parent\">parent</a> || <a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#class\">class</a> != <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#class_subsys\">class_subsys</a>.<a class=\"id\" href=\"#kobj\">kobj</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* all other devices keep their parent */</span>", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#parent\">parent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#kobj\">kobj</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#cleanup_device_parent\">cleanup_device_parent</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>) {}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#cleanup_glue_dir\">cleanup_glue_dir</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#glue_dir\">glue_dir</a>) {}", 
"#else", 
"static struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#virtual_device_parent\">virtual_device_parent</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>static struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#virtual_dir\">virtual_dir</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#virtual_dir\">virtual_dir</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#virtual_dir\">virtual_dir</a> = <a class=\"id\" href=\"#kobject_create_and_add\">kobject_create_and_add</a>(\"virtual\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     &amp;<a class=\"id\" href=\"#devices_kset\">devices_kset</a>-><a class=\"id\" href=\"#kobj\">kobj</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#virtual_dir\">virtual_dir</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#class_dir\">class_dir</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kobject\">kobject</a> <a class=\"id\" href=\"#kobj\">kobj</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#class\">class</a> *<a class=\"id\" href=\"#class\">class</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#to_class_dir\">to_class_dir</a>(<a class=\"id\" href=\"#obj\">obj</a>) <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#obj\">obj</a>, struct <a class=\"id\" href=\"#class_dir\">class_dir</a>, <a class=\"id\" href=\"#kobj\">kobj</a>)", 
"", 
"static void <a class=\"id\" href=\"#class_dir_release\">class_dir_release</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#class_dir\">class_dir</a> *<a class=\"id\" href=\"#dir\">dir</a> = <a class=\"id\" href=\"#to_class_dir\">to_class_dir</a>(<a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#dir\">dir</a>);", 
"}", 
"", 
"static const", 
"struct <a class=\"id\" href=\"#kobj_ns_type_operations\">kobj_ns_type_operations</a> *<a class=\"id\" href=\"#class_dir_child_ns_type\">class_dir_child_ns_type</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#class_dir\">class_dir</a> *<a class=\"id\" href=\"#dir\">dir</a> = <a class=\"id\" href=\"#to_class_dir\">to_class_dir</a>(<a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#ns_type\">ns_type</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#kobj_type\">kobj_type</a> <a class=\"id\" href=\"#class_dir_ktype\">class_dir_ktype</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#class_dir_release\">class_dir_release</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sysfs_ops\">sysfs_ops</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#kobj_sysfs_ops\">kobj_sysfs_ops</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#child_ns_type\">child_ns_type</a><span class=\"ts\"/>= <a class=\"id\" href=\"#class_dir_child_ns_type\">class_dir_child_ns_type</a>", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#kobject\">kobject</a> *", 
"<a class=\"id\" href=\"#class_dir_create_and_add\">class_dir_create_and_add</a>(struct <a class=\"id\" href=\"#class\">class</a> *<a class=\"id\" href=\"#class\">class</a>, struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#parent_kobj\">parent_kobj</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#class_dir\">class_dir</a> *<a class=\"id\" href=\"#dir\">dir</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dir\">dir</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#dir\">dir</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dir\">dir</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#class\">class</a> = <a class=\"id\" href=\"#class\">class</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobject_init\">kobject_init</a>(&amp;<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, &amp;<a class=\"id\" href=\"#class_dir_ktype\">class_dir_ktype</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#kobj\">kobj</a>.<a class=\"id\" href=\"#kset\">kset</a> = &amp;<a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#class_dirs\">class_dirs</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#kobject_add\">kobject_add</a>(&amp;<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#parent_kobj\">parent_kobj</a>, \"%s\", <a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kobject_put\">kobject_put</a>(&amp;<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#kobj\">kobj</a>;", 
"}", 
"", 
"", 
"static struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#get_device_parent\">get_device_parent</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#parent\">parent</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>static <a class=\"id\" href=\"#DEFINE_MUTEX\">DEFINE_MUTEX</a>(<a class=\"id\" href=\"#gdp_mutex\">gdp_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#parent_kobj\">parent_kobj</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#k\">k</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If we have no parent, we live in \"virtual\".</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Class-devices with a non class-device as parent, live</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * in a \"glue\" directory to prevent namespace collisions.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#parent\">parent</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent_kobj\">parent_kobj</a> = <a class=\"id\" href=\"#virtual_device_parent\">virtual_device_parent</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#class\">class</a> && !<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#ns_type\">ns_type</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#kobj\">kobj</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent_kobj\">parent_kobj</a> = &amp;<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#kobj\">kobj</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#gdp_mutex\">gdp_mutex</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* find our class-directory at the parent and reference it */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#class_dirs\">class_dirs</a>.<a class=\"id\" href=\"#list_lock\">list_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#k\">k</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#class_dirs\">class_dirs</a>.<a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#entry\">entry</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#k\">k</a>-><a class=\"id\" href=\"#parent\">parent</a> == <a class=\"id\" href=\"#parent_kobj\">parent_kobj</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kobj\">kobj</a> = <a class=\"id\" href=\"#kobject_get\">kobject_get</a>(<a class=\"id\" href=\"#k\">k</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#class_dirs\">class_dirs</a>.<a class=\"id\" href=\"#list_lock\">list_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#kobj\">kobj</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#gdp_mutex\">gdp_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#kobj\">kobj</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* or create a new class-directory at the parent device */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#k\">k</a> = <a class=\"id\" href=\"#class_dir_create_and_add\">class_dir_create_and_add</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>, <a class=\"id\" href=\"#parent_kobj\">parent_kobj</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* do not emit an uevent for this simple \"glue\" directory */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#gdp_mutex\">gdp_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#k\">k</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#parent\">parent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#kobj\">kobj</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#cleanup_glue_dir\">cleanup_glue_dir</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#glue_dir\">glue_dir</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* see if we live in a \"glue\" directory */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#glue_dir\">glue_dir</a> || !<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#glue_dir\">glue_dir</a>-><a class=\"id\" href=\"#kset\">kset</a> != &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#class_dirs\">class_dirs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobject_put\">kobject_put</a>(<a class=\"id\" href=\"#glue_dir\">glue_dir</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#cleanup_device_parent\">cleanup_device_parent</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cleanup_glue_dir\">cleanup_glue_dir</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>.<a class=\"id\" href=\"#parent\">parent</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static void <a class=\"id\" href=\"#setup_parent\">setup_parent</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#parent\">parent</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobj\">kobj</a> = <a class=\"id\" href=\"#get_device_parent\">get_device_parent</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#kobj\">kobj</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>.<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#kobj\">kobj</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#device_add_class_symlinks\">device_add_class_symlinks</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#sysfs_create_link\">sysfs_create_link</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#class_subsys\">class_subsys</a>.<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"subsystem\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYSFS_DEPRECATED\">CONFIG_SYSFS_DEPRECATED</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* stacked class devices need a symlink in the class directory */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>.<a class=\"id\" href=\"#parent\">parent</a> != &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#class_subsys\">class_subsys</a>.<a class=\"id\" href=\"#kobj\">kobj</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#device_is_not_partition\">device_is_not_partition</a>(<a class=\"id\" href=\"#dev\">dev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#sysfs_create_link\">sysfs_create_link</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#class_subsys\">class_subsys</a>.<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#dev\">dev</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_subsys\">out_subsys</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a> && <a class=\"id\" href=\"#device_is_not_partition\">device_is_not_partition</a>(<a class=\"id\" href=\"#dev\">dev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#class_name\">class_name</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * stacked class devices have the 'device' link</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * pointing to the bus device instead of the parent</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#class\">class</a> && !<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#bus\">bus</a> && <a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#parent\">parent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#parent\">parent</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#sysfs_create_link\">sysfs_create_link</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"device\");", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_busid\">out_busid</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#class_name\">class_name</a> = <a class=\"id\" href=\"#make_class_name\">make_class_name</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#class_name\">class_name</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#sysfs_create_link\">sysfs_create_link</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#class_name\">class_name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#class_name\">class_name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_device\">out_device</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#out_device\">out_device</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a> && <a class=\"id\" href=\"#device_is_not_partition\">device_is_not_partition</a>(<a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_link\">sysfs_remove_link</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, \"device\");", 
"<a class=\"id\" href=\"#out_busid\">out_busid</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>.<a class=\"id\" href=\"#parent\">parent</a> != &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#class_subsys\">class_subsys</a>.<a class=\"id\" href=\"#kobj\">kobj</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#device_is_not_partition\">device_is_not_partition</a>(<a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_delete_link\">sysfs_delete_link</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#class_subsys\">class_subsys</a>.<a class=\"id\" href=\"#kobj\">kobj</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#dev\">dev</a>));", 
"#else", 
"<span class=\"ts\"/><span class=\"comment\">/* link in the class directory pointing to the device */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#sysfs_create_link\">sysfs_create_link</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#class_subsys\">class_subsys</a>.<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#dev\">dev</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_subsys\">out_subsys</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a> && <a class=\"id\" href=\"#device_is_not_partition\">device_is_not_partition</a>(<a class=\"id\" href=\"#dev\">dev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#sysfs_create_link\">sysfs_create_link</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"device\");", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_busid\">out_busid</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#out_busid\">out_busid</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sysfs_delete_link\">sysfs_delete_link</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#class_subsys\">class_subsys</a>.<a class=\"id\" href=\"#kobj\">kobj</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#dev\">dev</a>));", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<a class=\"id\" href=\"#out_subsys\">out_subsys</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_link\">sysfs_remove_link</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, \"subsystem\");", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#device_remove_class_symlinks\">device_remove_class_symlinks</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYSFS_DEPRECATED\">CONFIG_SYSFS_DEPRECATED</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a> && <a class=\"id\" href=\"#device_is_not_partition\">device_is_not_partition</a>(<a class=\"id\" href=\"#dev\">dev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#class_name\">class_name</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#class_name\">class_name</a> = <a class=\"id\" href=\"#make_class_name\">make_class_name</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#name\">name</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#class_name\">class_name</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_link\">sysfs_remove_link</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#class_name\">class_name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#class_name\">class_name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_link\">sysfs_remove_link</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, \"device\");", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>.<a class=\"id\" href=\"#parent\">parent</a> != &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#class_subsys\">class_subsys</a>.<a class=\"id\" href=\"#kobj\">kobj</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#device_is_not_partition\">device_is_not_partition</a>(<a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_delete_link\">sysfs_delete_link</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#class_subsys\">class_subsys</a>.<a class=\"id\" href=\"#kobj\">kobj</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#dev\">dev</a>));", 
"#else", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a> && <a class=\"id\" href=\"#device_is_not_partition\">device_is_not_partition</a>(<a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_link\">sysfs_remove_link</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, \"device\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sysfs_delete_link\">sysfs_delete_link</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#class_subsys\">class_subsys</a>.<a class=\"id\" href=\"#kobj\">kobj</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#dev\">dev</a>));", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_link\">sysfs_remove_link</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, \"subsystem\");", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * dev_set_name - set a device name</span>", 
"<span class=\"comment\"> * @dev: device</span>", 
"<span class=\"comment\"> * @fmt: format string for the device's name</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#dev_set_name\">dev_set_name</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, const char *<a class=\"id\" href=\"#fmt\">fmt</a>, ...)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_list\">va_list</a> <a class=\"id\" href=\"#vargs\">vargs</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_start\">va_start</a>(<a class=\"id\" href=\"#vargs\">vargs</a>, <a class=\"id\" href=\"#fmt\">fmt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#kobject_set_name_vargs\">kobject_set_name_vargs</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#vargs\">vargs</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_end\">va_end</a>(<a class=\"id\" href=\"#vargs\">vargs</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#dev_set_name\">dev_set_name</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * device_to_dev_kobj - select a /sys/dev/ directory for the device</span>", 
"<span class=\"comment\"> * @dev: device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * By default we select char/ for new entries.  Setting class-&gt;dev_obj</span>", 
"<span class=\"comment\"> * to NULL prevents an entry from being created.  class-&gt;dev_kobj must</span>", 
"<span class=\"comment\"> * be set (or cleared) before any devices are registered to the class</span>", 
"<span class=\"comment\"> * otherwise device_create_sys_dev_entry() and</span>", 
"<span class=\"comment\"> * device_remove_sys_dev_entry() will disagree about the the presence</span>", 
"<span class=\"comment\"> * of the link.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#device_to_dev_kobj\">device_to_dev_kobj</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kobj\">kobj</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#dev_kobj\">dev_kobj</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kobj\">kobj</a> = <a class=\"id\" href=\"#sysfs_dev_char_kobj\">sysfs_dev_char_kobj</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#kobj\">kobj</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#device_create_sys_dev_entry\">device_create_sys_dev_entry</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a> = <a class=\"id\" href=\"#device_to_dev_kobj\">device_to_dev_kobj</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#devt_str\">devt_str</a>[15];", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#kobj\">kobj</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#format_dev_t\">format_dev_t</a>(<a class=\"id\" href=\"#devt_str\">devt_str</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devt\">devt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#sysfs_create_link\">sysfs_create_link</a>(<a class=\"id\" href=\"#kobj\">kobj</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#devt_str\">devt_str</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#device_remove_sys_dev_entry\">device_remove_sys_dev_entry</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a> = <a class=\"id\" href=\"#device_to_dev_kobj\">device_to_dev_kobj</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#devt_str\">devt_str</a>[15];", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#kobj\">kobj</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#format_dev_t\">format_dev_t</a>(<a class=\"id\" href=\"#devt_str\">devt_str</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devt\">devt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_link\">sysfs_remove_link</a>(<a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#devt_str\">devt_str</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"int <a class=\"id\" href=\"#device_private_init\">device_private_init</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#p\">p</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#device\">device</a> = <a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#klist_init\">klist_init</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#klist_children\">klist_children</a>, <a class=\"id\" href=\"#klist_children_get\">klist_children_get</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#klist_children_put\">klist_children_put</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * device_add - add device to device hierarchy.</span>", 
"<span class=\"comment\"> * @dev: device.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is part 2 of device_register(), though may be called</span>", 
"<span class=\"comment\"> * separately _iff_ device_initialize() has been called separately.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This adds @dev to the kobject hierarchy via kobject_add(), adds it</span>", 
"<span class=\"comment\"> * to the global and sibling lists for the device, then</span>", 
"<span class=\"comment\"> * adds it to the other relevant subsystems of the driver model.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NOTE: _Never_ directly free @dev after calling this function, even</span>", 
"<span class=\"comment\"> * if it returned an error! Always use put_device() to give up your</span>", 
"<span class=\"comment\"> * reference instead.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#device_add\">device_add</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#class_interface\">class_interface</a> *<a class=\"id\" href=\"#class_intf\">class_intf</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#get_device\">get_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#p\">p</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#device_private_init\">device_private_init</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * for statically allocated devices, which should all be converted</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * some day, we need to initialize the name. We prevent reading back</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the name, and force the use of dev_name()</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#init_name\">init_name</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_set_name\">dev_set_name</a>(<a class=\"id\" href=\"#dev\">dev</a>, \"%s\", <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#init_name\">init_name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#init_name\">init_name</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#dev\">dev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#name_error\">name_error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"device: '%s': %s\\n\", <a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#__func__\">__func__</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#get_device\">get_device</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#setup_parent\">setup_parent</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#parent\">parent</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* use parent numa_node */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#parent\">parent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_dev_node\">set_dev_node</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#dev_to_node\">dev_to_node</a>(<a class=\"id\" href=\"#parent\">parent</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* first, register with generic layer. */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* we require the name to be set before, and pass NULL */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#kobject_add\">kobject_add</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>.<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#Error\">Error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* notify platform of device entry */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#platform_notify\">platform_notify</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#platform_notify\">platform_notify</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#device_create_file\">device_create_file</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#uevent_attr\">uevent_attr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#attrError\">attrError</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#MAJOR\">MAJOR</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devt\">devt</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#device_create_file\">device_create_file</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#devt_attr\">devt_attr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#ueventattrError\">ueventattrError</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#device_create_sys_dev_entry\">device_create_sys_dev_entry</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#devtattrError\">devtattrError</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#devtmpfs_create_node\">devtmpfs_create_node</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#device_add_class_symlinks\">device_add_class_symlinks</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#SymlinkError\">SymlinkError</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#device_add_attrs\">device_add_attrs</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#AttrsError\">AttrsError</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#bus_add_device\">bus_add_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#BusError\">BusError</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#dpm_sysfs_add\">dpm_sysfs_add</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#DPMError\">DPMError</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_pm_add\">device_pm_add</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Notify clients of device addition.  This call must come</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * after dpm_sysf_add() and before kobject_uevent().</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blocking_notifier_call_chain\">blocking_notifier_call_chain</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#bus_notifier\">bus_notifier</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#BUS_NOTIFY_ADD_DEVICE\">BUS_NOTIFY_ADD_DEVICE</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobject_uevent\">kobject_uevent</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#KOBJ_ADD\">KOBJ_ADD</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bus_probe_device\">bus_probe_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#parent\">parent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#klist_add_tail\">klist_add_tail</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#knode_parent\">knode_parent</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#klist_children\">klist_children</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#class_mutex\">class_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* tie the class to the device */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#klist_add_tail\">klist_add_tail</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#knode_class\">knode_class</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#class_devices\">class_devices</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* notify any interfaces that the device is here */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#class_intf\">class_intf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#class_interfaces\">class_interfaces</a>, <a class=\"id\" href=\"#node\">node</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#class_intf\">class_intf</a>-><a class=\"id\" href=\"#add_dev\">add_dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#class_intf\">class_intf</a>-><a class=\"id\" href=\"#add_dev\">add_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#class_intf\">class_intf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#class_mutex\">class_mutex</a>);", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#done\">done</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_device\">put_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
" <a class=\"id\" href=\"#DPMError\">DPMError</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bus_remove_device\">bus_remove_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
" <a class=\"id\" href=\"#BusError\">BusError</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_remove_attrs\">device_remove_attrs</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
" <a class=\"id\" href=\"#AttrsError\">AttrsError</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_remove_class_symlinks\">device_remove_class_symlinks</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
" <a class=\"id\" href=\"#SymlinkError\">SymlinkError</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#MAJOR\">MAJOR</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devt\">devt</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#devtmpfs_delete_node\">devtmpfs_delete_node</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#MAJOR\">MAJOR</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devt\">devt</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_remove_sys_dev_entry\">device_remove_sys_dev_entry</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
" <a class=\"id\" href=\"#devtattrError\">devtattrError</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#MAJOR\">MAJOR</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devt\">devt</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_remove_file\">device_remove_file</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#devt_attr\">devt_attr</a>);", 
" <a class=\"id\" href=\"#ueventattrError\">ueventattrError</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_remove_file\">device_remove_file</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#uevent_attr\">uevent_attr</a>);", 
" <a class=\"id\" href=\"#attrError\">attrError</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobject_uevent\">kobject_uevent</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#KOBJ_REMOVE\">KOBJ_REMOVE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobject_del\">kobject_del</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>);", 
" <a class=\"id\" href=\"#Error\">Error</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cleanup_device_parent\">cleanup_device_parent</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#parent\">parent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_device\">put_device</a>(<a class=\"id\" href=\"#parent\">parent</a>);", 
"<a class=\"id\" href=\"#name_error\">name_error</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * device_register - register a device with the system.</span>", 
"<span class=\"comment\"> * @dev: pointer to the device structure</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This happens in two clean steps - initialize the device</span>", 
"<span class=\"comment\"> * and add it to the system. The two steps can be called</span>", 
"<span class=\"comment\"> * separately, but this is the easiest and most common.</span>", 
"<span class=\"comment\"> * I.e. you should only call the two helpers separately if</span>", 
"<span class=\"comment\"> * have a clearly defined need to use and refcount the device</span>", 
"<span class=\"comment\"> * before it is added to the hierarchy.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NOTE: _Never_ directly free @dev after calling this function, even</span>", 
"<span class=\"comment\"> * if it returned an error! Always use put_device() to give up the</span>", 
"<span class=\"comment\"> * reference initialized in this function instead.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#device_register\">device_register</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_initialize\">device_initialize</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#device_add\">device_add</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * get_device - increment reference count for device.</span>", 
"<span class=\"comment\"> * @dev: device.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This simply forwards the call to kobject_get(), though</span>", 
"<span class=\"comment\"> * we do take care to provide for the case that we get a NULL</span>", 
"<span class=\"comment\"> * pointer passed in.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#get_device\">get_device</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dev\">dev</a> ? <a class=\"id\" href=\"#to_dev\">to_dev</a>(<a class=\"id\" href=\"#kobject_get\">kobject_get</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>)) : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * put_device - decrement reference count.</span>", 
"<span class=\"comment\"> * @dev: device in question.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#put_device\">put_device</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* might_sleep(); */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kobject_put\">kobject_put</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * device_del - delete device from system.</span>", 
"<span class=\"comment\"> * @dev: device.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is the first part of the device unregistration</span>", 
"<span class=\"comment\"> * sequence. This removes the device from the lists we control</span>", 
"<span class=\"comment\"> * from here, has it removed from the other driver model</span>", 
"<span class=\"comment\"> * subsystems it was added to in device_add(), and removes it</span>", 
"<span class=\"comment\"> * from the kobject hierarchy.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NOTE: this should be called manually _iff_ device_add() was</span>", 
"<span class=\"comment\"> * also called manually.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#device_del\">device_del</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#class_interface\">class_interface</a> *<a class=\"id\" href=\"#class_intf\">class_intf</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Notify clients of device removal.  This call must come</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * before dpm_sysfs_remove().</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blocking_notifier_call_chain\">blocking_notifier_call_chain</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#bus_notifier\">bus_notifier</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#BUS_NOTIFY_DEL_DEVICE\">BUS_NOTIFY_DEL_DEVICE</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_pm_remove\">device_pm_remove</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dpm_sysfs_remove\">dpm_sysfs_remove</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#parent\">parent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#klist_del\">klist_del</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#knode_parent\">knode_parent</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#MAJOR\">MAJOR</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devt\">devt</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#devtmpfs_delete_node\">devtmpfs_delete_node</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_remove_sys_dev_entry\">device_remove_sys_dev_entry</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_remove_file\">device_remove_file</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#devt_attr\">devt_attr</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_remove_class_symlinks\">device_remove_class_symlinks</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#class_mutex\">class_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* notify any interfaces that the device is now gone */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#class_intf\">class_intf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#class_interfaces\">class_interfaces</a>, <a class=\"id\" href=\"#node\">node</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#class_intf\">class_intf</a>-><a class=\"id\" href=\"#remove_dev\">remove_dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#class_intf\">class_intf</a>-><a class=\"id\" href=\"#remove_dev\">remove_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#class_intf\">class_intf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* remove the device from the class list */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#klist_del\">klist_del</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#knode_class\">knode_class</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#class_mutex\">class_mutex</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_remove_file\">device_remove_file</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#uevent_attr\">uevent_attr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_remove_attrs\">device_remove_attrs</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bus_remove_device\">bus_remove_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Some platform devices are driven without driver attached</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and managed resources may have been acquired.  Make sure</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * all resources are released.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#devres_release_all\">devres_release_all</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Notify the platform of the removal, in case they</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * need to do anything...</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#platform_notify_remove\">platform_notify_remove</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#platform_notify_remove\">platform_notify_remove</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobject_uevent\">kobject_uevent</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#KOBJ_REMOVE\">KOBJ_REMOVE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cleanup_device_parent\">cleanup_device_parent</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobject_del\">kobject_del</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_device\">put_device</a>(<a class=\"id\" href=\"#parent\">parent</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * device_unregister - unregister device from system.</span>", 
"<span class=\"comment\"> * @dev: device going away.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We do this in two parts, like we do device_register(). First,</span>", 
"<span class=\"comment\"> * we remove it from all the subsystems with device_del(), then</span>", 
"<span class=\"comment\"> * we decrement the reference count via put_device(). If that</span>", 
"<span class=\"comment\"> * is the final reference count, the device will be cleaned up</span>", 
"<span class=\"comment\"> * via device_release() above. Otherwise, the structure will</span>", 
"<span class=\"comment\"> * stick around until the final reference to the device is dropped.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#device_unregister\">device_unregister</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"device: '%s': %s\\n\", <a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#__func__\">__func__</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_del\">device_del</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_device\">put_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#next_device\">next_device</a>(struct <a class=\"id\" href=\"#klist_iter\">klist_iter</a> *<a class=\"id\" href=\"#i\">i</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#klist_node\">klist_node</a> *<a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#klist_next\">klist_next</a>(<a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device_private\">device_private</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#to_device_private_parent\">to_device_private_parent</a>(<a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#device\">device</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dev\">dev</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * device_get_devnode - path of device node file</span>", 
"<span class=\"comment\"> * @dev: device</span>", 
"<span class=\"comment\"> * @mode: returned file access mode</span>", 
"<span class=\"comment\"> * @tmp: possibly allocated string</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Return the relative path of a possible device node.</span>", 
"<span class=\"comment\"> * Non-default names may need to allocate a memory to compose</span>", 
"<span class=\"comment\"> * a name. This memory is returned in tmp and needs to be</span>", 
"<span class=\"comment\"> * freed by the caller.</span>", 
"<span class=\"comment\"> */</span>", 
"const char *<a class=\"id\" href=\"#device_get_devnode\">device_get_devnode</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#mode_t\">mode_t</a> *<a class=\"id\" href=\"#mode\">mode</a>, const char **<a class=\"id\" href=\"#tmp\">tmp</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#s\">s</a>;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* the device type may provide a specific name */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a> && <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a>-><a class=\"id\" href=\"#devnode\">devnode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a>-><a class=\"id\" href=\"#devnode\">devnode</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#mode\">mode</a>);", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#tmp\">tmp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return *<a class=\"id\" href=\"#tmp\">tmp</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* the class may provide a specific name */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a> && <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#devnode\">devnode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#devnode\">devnode</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#mode\">mode</a>);", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#tmp\">tmp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return *<a class=\"id\" href=\"#tmp\">tmp</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* return name without allocation, tmp == NULL */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#strchr\">strchr</a>(<a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#dev\">dev</a>), '!') == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* replace '!' in the name with '/' */</span>", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#kstrdup\">kstrdup</a>(<a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!*<a class=\"id\" href=\"#tmp\">tmp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#s\">s</a> = <a class=\"id\" href=\"#strchr\">strchr</a>(*<a class=\"id\" href=\"#tmp\">tmp</a>, '!')))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>[0] = '/';", 
"<span class=\"ts\"/>return *<a class=\"id\" href=\"#tmp\">tmp</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * device_for_each_child - device child iterator.</span>", 
"<span class=\"comment\"> * @parent: parent struct device.</span>", 
"<span class=\"comment\"> * @data: data for the callback.</span>", 
"<span class=\"comment\"> * @fn: function to be called for each device.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Iterate over @parent's child devices, and call @fn for each,</span>", 
"<span class=\"comment\"> * passing it @data.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We check the return of @fn each time. If it returns anything</span>", 
"<span class=\"comment\"> * other than 0, we break out and return that value.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#device_for_each_child\">device_for_each_child</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#parent\">parent</a>, void *<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  int (*<a class=\"id\" href=\"#fn\">fn</a>)(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, void *<a class=\"id\" href=\"#data\">data</a>))", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#klist_iter\">klist_iter</a> <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#child\">child</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#klist_iter_init\">klist_iter_init</a>(&amp;<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#klist_children\">klist_children</a>, &amp;<a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#child\">child</a> = <a class=\"id\" href=\"#next_device\">next_device</a>(&amp;<a class=\"id\" href=\"#i\">i</a>)) && !<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#fn\">fn</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#klist_iter_exit\">klist_iter_exit</a>(&amp;<a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * device_find_child - device iterator for locating a particular device.</span>", 
"<span class=\"comment\"> * @parent: parent struct device</span>", 
"<span class=\"comment\"> * @data: Data to pass to match function</span>", 
"<span class=\"comment\"> * @match: Callback function to check device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is similar to the device_for_each_child() function above, but it</span>", 
"<span class=\"comment\"> * returns a reference to a device that is 'found' for later use, as</span>", 
"<span class=\"comment\"> * determined by the @match callback.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The callback should return 0 if the device doesn't match and non-zero</span>", 
"<span class=\"comment\"> * if it does.  If the callback returns non-zero and a reference to the</span>", 
"<span class=\"comment\"> * current device can be obtained, this function will return to the caller</span>", 
"<span class=\"comment\"> * and not iterate over any more devices.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#device_find_child\">device_find_child</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#parent\">parent</a>, void *<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> int (*<a class=\"id\" href=\"#match\">match</a>)(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, void *<a class=\"id\" href=\"#data\">data</a>))", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#klist_iter\">klist_iter</a> <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#child\">child</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#parent\">parent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#klist_iter_init\">klist_iter_init</a>(&amp;<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#klist_children\">klist_children</a>, &amp;<a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#child\">child</a> = <a class=\"id\" href=\"#next_device\">next_device</a>(&amp;<a class=\"id\" href=\"#i\">i</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#match\">match</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#data\">data</a>) && <a class=\"id\" href=\"#get_device\">get_device</a>(<a class=\"id\" href=\"#child\">child</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#klist_iter_exit\">klist_iter_exit</a>(&amp;<a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#child\">child</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#devices_init\">devices_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#devices_kset\">devices_kset</a> = <a class=\"id\" href=\"#kset_create_and_add\">kset_create_and_add</a>(\"devices\", &amp;<a class=\"id\" href=\"#device_uevent_ops\">device_uevent_ops</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#devices_kset\">devices_kset</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_kobj\">dev_kobj</a> = <a class=\"id\" href=\"#kobject_create_and_add\">kobject_create_and_add</a>(\"dev\", <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev_kobj\">dev_kobj</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#dev_kobj_err\">dev_kobj_err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sysfs_dev_block_kobj\">sysfs_dev_block_kobj</a> = <a class=\"id\" href=\"#kobject_create_and_add\">kobject_create_and_add</a>(\"block\", <a class=\"id\" href=\"#dev_kobj\">dev_kobj</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sysfs_dev_block_kobj\">sysfs_dev_block_kobj</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#block_kobj_err\">block_kobj_err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sysfs_dev_char_kobj\">sysfs_dev_char_kobj</a> = <a class=\"id\" href=\"#kobject_create_and_add\">kobject_create_and_add</a>(\"char\", <a class=\"id\" href=\"#dev_kobj\">dev_kobj</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sysfs_dev_char_kobj\">sysfs_dev_char_kobj</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#char_kobj_err\">char_kobj_err</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
" <a class=\"id\" href=\"#char_kobj_err\">char_kobj_err</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobject_put\">kobject_put</a>(<a class=\"id\" href=\"#sysfs_dev_block_kobj\">sysfs_dev_block_kobj</a>);", 
" <a class=\"id\" href=\"#block_kobj_err\">block_kobj_err</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobject_put\">kobject_put</a>(<a class=\"id\" href=\"#dev_kobj\">dev_kobj</a>);", 
" <a class=\"id\" href=\"#dev_kobj_err\">dev_kobj_err</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kset_unregister\">kset_unregister</a>(<a class=\"id\" href=\"#devices_kset\">devices_kset</a>);", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#device_for_each_child\">device_for_each_child</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#device_find_child\">device_find_child</a>);", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#device_initialize\">device_initialize</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#device_add\">device_add</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#device_register\">device_register</a>);", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#device_del\">device_del</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#device_unregister\">device_unregister</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#get_device\">get_device</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#put_device\">put_device</a>);", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#device_create_file\">device_create_file</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#device_remove_file\">device_remove_file</a>);", 
"", 
"struct <a class=\"id\" href=\"#root_device\">root_device</a>", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> <a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#owner\">owner</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#to_root_device\">to_root_device</a>(<a class=\"id\" href=\"#dev\">dev</a>) <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#root_device\">root_device</a>, <a class=\"id\" href=\"#dev\">dev</a>)", 
"", 
"static void <a class=\"id\" href=\"#root_device_release\">root_device_release</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#to_root_device\">to_root_device</a>(<a class=\"id\" href=\"#dev\">dev</a>));", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * __root_device_register - allocate and register a root device</span>", 
"<span class=\"comment\"> * @name: root device name</span>", 
"<span class=\"comment\"> * @owner: owner module of the root device, usually THIS_MODULE</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This function allocates a root device and registers it</span>", 
"<span class=\"comment\"> * using device_register(). In order to free the returned</span>", 
"<span class=\"comment\"> * device, use root_device_unregister().</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Root devices are dummy devices which allow other devices</span>", 
"<span class=\"comment\"> * to be grouped under /sys/devices. Use this function to</span>", 
"<span class=\"comment\"> * allocate a root device and then use it as the parent of</span>", 
"<span class=\"comment\"> * any device which should appear under /sys/devices/{name}</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The /sys/devices/{name} directory will also contain a</span>", 
"<span class=\"comment\"> * 'module' symlink which points to the @owner directory</span>", 
"<span class=\"comment\"> * in sysfs.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns &amp;struct device pointer on success, or ERR_PTR() on error.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Note: You probably want to use root_device_register().</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#__root_device_register\">__root_device_register</a>(const char *<a class=\"id\" href=\"#name\">name</a>, struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#owner\">owner</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#root_device\">root_device</a> *<a class=\"id\" href=\"#root\">root</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#root\">root</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#root_device\">root_device</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#root\">root</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#dev_set_name\">dev_set_name</a>(&amp;<a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"%s\", <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#release\">release</a> = <a class=\"id\" href=\"#root_device_release\">root_device_release</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#device_register\">device_register</a>(&amp;<a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_device\">put_device</a>(&amp;<a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/>}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_MODULES\">CONFIG_MODULES</a><span class=\"ts\"/><span class=\"comment\">/* gotta find a \"cleaner\" way to do this */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#owner\">owner</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#module_kobject\">module_kobject</a> *<a class=\"id\" href=\"#mk\">mk</a> = &amp;<a class=\"id\" href=\"#owner\">owner</a>-><a class=\"id\" href=\"#mkobj\">mkobj</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sysfs_create_link\">sysfs_create_link</a>(&amp;<a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#kobj\">kobj</a>, &amp;<a class=\"id\" href=\"#mk\">mk</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, \"module\");", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_unregister\">device_unregister</a>(&amp;<a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#owner\">owner</a> = <a class=\"id\" href=\"#owner\">owner</a>;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#__root_device_register\">__root_device_register</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * root_device_unregister - unregister and free a root device</span>", 
"<span class=\"comment\"> * @dev: device going away</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This function unregisters and cleans up a device that was created by</span>", 
"<span class=\"comment\"> * root_device_register().</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#root_device_unregister\">root_device_unregister</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#root_device\">root_device</a> *<a class=\"id\" href=\"#root\">root</a> = <a class=\"id\" href=\"#to_root_device\">to_root_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#owner\">owner</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_link\">sysfs_remove_link</a>(&amp;<a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#kobj\">kobj</a>, \"module\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_unregister\">device_unregister</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#root_device_unregister\">root_device_unregister</a>);", 
"", 
"", 
"static void <a class=\"id\" href=\"#device_create_release\">device_create_release</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"device: '%s': %s\\n\", <a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#__func__\">__func__</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * device_create_vargs - creates a device and registers it with sysfs</span>", 
"<span class=\"comment\"> * @class: pointer to the struct class that this device should be registered to</span>", 
"<span class=\"comment\"> * @parent: pointer to the parent struct device of this new device, if any</span>", 
"<span class=\"comment\"> * @devt: the dev_t for the char device to be added</span>", 
"<span class=\"comment\"> * @drvdata: the data to be added to the device for callbacks</span>", 
"<span class=\"comment\"> * @fmt: string for the device's name</span>", 
"<span class=\"comment\"> * @args: va_list for the device's name</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This function can be used by char device classes.  A struct device</span>", 
"<span class=\"comment\"> * will be created in sysfs, registered to the specified class.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * A \"dev\" file will be created, showing the dev_t for the device, if</span>", 
"<span class=\"comment\"> * the dev_t is not 0,0.</span>", 
"<span class=\"comment\"> * If a pointer to a parent struct device is passed in, the newly created</span>", 
"<span class=\"comment\"> * struct device will be a child of that device in sysfs.</span>", 
"<span class=\"comment\"> * The pointer to the struct device will be returned from the call.</span>", 
"<span class=\"comment\"> * Any further sysfs files that might be required can be created using this</span>", 
"<span class=\"comment\"> * pointer.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns &amp;struct device pointer on success, or ERR_PTR() on error.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Note: the struct class passed to this function must have previously</span>", 
"<span class=\"comment\"> * been created with a call to class_create().</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#device_create_vargs\">device_create_vargs</a>(struct <a class=\"id\" href=\"#class\">class</a> *<a class=\"id\" href=\"#class\">class</a>, struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#parent\">parent</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#devt\">devt</a>, void *<a class=\"id\" href=\"#drvdata\">drvdata</a>, const char *<a class=\"id\" href=\"#fmt\">fmt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#va_list\">va_list</a> <a class=\"id\" href=\"#args\">args</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#class\">class</a> == <a class=\"id\" href=\"#NULL\">NULL</a> || <a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#class\">class</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devt\">devt</a> = <a class=\"id\" href=\"#devt\">devt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a> = <a class=\"id\" href=\"#class\">class</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#release\">release</a> = <a class=\"id\" href=\"#device_create_release\">device_create_release</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_set_drvdata\">dev_set_drvdata</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#drvdata\">drvdata</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#kobject_set_name_vargs\">kobject_set_name_vargs</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#args\">args</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#device_register\">device_register</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_device\">put_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#retval\">retval</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#device_create_vargs\">device_create_vargs</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * device_create - creates a device and registers it with sysfs</span>", 
"<span class=\"comment\"> * @class: pointer to the struct class that this device should be registered to</span>", 
"<span class=\"comment\"> * @parent: pointer to the parent struct device of this new device, if any</span>", 
"<span class=\"comment\"> * @devt: the dev_t for the char device to be added</span>", 
"<span class=\"comment\"> * @drvdata: the data to be added to the device for callbacks</span>", 
"<span class=\"comment\"> * @fmt: string for the device's name</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This function can be used by char device classes.  A struct device</span>", 
"<span class=\"comment\"> * will be created in sysfs, registered to the specified class.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * A \"dev\" file will be created, showing the dev_t for the device, if</span>", 
"<span class=\"comment\"> * the dev_t is not 0,0.</span>", 
"<span class=\"comment\"> * If a pointer to a parent struct device is passed in, the newly created</span>", 
"<span class=\"comment\"> * struct device will be a child of that device in sysfs.</span>", 
"<span class=\"comment\"> * The pointer to the struct device will be returned from the call.</span>", 
"<span class=\"comment\"> * Any further sysfs files that might be required can be created using this</span>", 
"<span class=\"comment\"> * pointer.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns &amp;struct device pointer on success, or ERR_PTR() on error.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Note: the struct class passed to this function must have previously</span>", 
"<span class=\"comment\"> * been created with a call to class_create().</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#device_create\">device_create</a>(struct <a class=\"id\" href=\"#class\">class</a> *<a class=\"id\" href=\"#class\">class</a>, struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#parent\">parent</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#devt\">devt</a>, void *<a class=\"id\" href=\"#drvdata\">drvdata</a>, const char *<a class=\"id\" href=\"#fmt\">fmt</a>, ...)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_list\">va_list</a> <a class=\"id\" href=\"#vargs\">vargs</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_start\">va_start</a>(<a class=\"id\" href=\"#vargs\">vargs</a>, <a class=\"id\" href=\"#fmt\">fmt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#device_create_vargs\">device_create_vargs</a>(<a class=\"id\" href=\"#class\">class</a>, <a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#devt\">devt</a>, <a class=\"id\" href=\"#drvdata\">drvdata</a>, <a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#vargs\">vargs</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_end\">va_end</a>(<a class=\"id\" href=\"#vargs\">vargs</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dev\">dev</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#device_create\">device_create</a>);", 
"", 
"static int <a class=\"id\" href=\"#__match_devt\">__match_devt</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_t\">dev_t</a> *<a class=\"id\" href=\"#devt\">devt</a> = <a class=\"id\" href=\"#data\">data</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devt\">devt</a> == *<a class=\"id\" href=\"#devt\">devt</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * device_destroy - removes a device that was created with device_create()</span>", 
"<span class=\"comment\"> * @class: pointer to the struct class that this device was registered with</span>", 
"<span class=\"comment\"> * @devt: the dev_t of the device that was previously registered</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This call unregisters and cleans up a device that was created with a</span>", 
"<span class=\"comment\"> * call to device_create().</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#device_destroy\">device_destroy</a>(struct <a class=\"id\" href=\"#class\">class</a> *<a class=\"id\" href=\"#class\">class</a>, <a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#devt\">devt</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#class_find_device\">class_find_device</a>(<a class=\"id\" href=\"#class\">class</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#devt\">devt</a>, <a class=\"id\" href=\"#__match_devt\">__match_devt</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_device\">put_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_unregister\">device_unregister</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#device_destroy\">device_destroy</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * device_rename - renames a device</span>", 
"<span class=\"comment\"> * @dev: the pointer to the struct device to be renamed</span>", 
"<span class=\"comment\"> * @new_name: the new name of the device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * It is the responsibility of the caller to provide mutual</span>", 
"<span class=\"comment\"> * exclusion between two different calls of device_rename</span>", 
"<span class=\"comment\"> * on the same device to ensure that new_name is valid and</span>", 
"<span class=\"comment\"> * won't conflict with other devices.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#device_rename\">device_rename</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, const char *<a class=\"id\" href=\"#new_name\">new_name</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#old_class_name\">old_class_name</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#new_class_name\">new_class_name</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#old_device_name\">old_device_name</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#get_device\">get_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"device: '%s': %s: renaming to '%s'\\n\", <a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#dev\">dev</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#new_name\">new_name</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYSFS_DEPRECATED\">CONFIG_SYSFS_DEPRECATED</a>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>) && (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_class_name\">old_class_name</a> = <a class=\"id\" href=\"#make_class_name\">make_class_name</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#name\">name</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_device_name\">old_device_name</a> = <a class=\"id\" href=\"#kstrdup\">kstrdup</a>(<a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#old_device_name\">old_device_name</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_SYSFS_DEPRECATED\">CONFIG_SYSFS_DEPRECATED</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#sysfs_rename_link\">sysfs_rename_link</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#class_subsys\">class_subsys</a>.<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#old_device_name\">old_device_name</a>, <a class=\"id\" href=\"#new_name\">new_name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#kobject_rename\">kobject_rename</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#new_name\">new_name</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYSFS_DEPRECATED\">CONFIG_SYSFS_DEPRECATED</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#old_class_name\">old_class_name</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_class_name\">new_class_name</a> = <a class=\"id\" href=\"#make_class_name\">make_class_name</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#name\">name</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#new_class_name\">new_class_name</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#sysfs_rename_link\">sysfs_rename_link</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#old_class_name\">old_class_name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#new_class_name\">new_class_name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_device\">put_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#new_class_name\">new_class_name</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#old_class_name\">old_class_name</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#old_device_name\">old_device_name</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#device_rename\">device_rename</a>);", 
"", 
"static int <a class=\"id\" href=\"#device_move_class_links\">device_move_class_links</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#old_parent\">old_parent</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#new_parent\">new_parent</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYSFS_DEPRECATED\">CONFIG_SYSFS_DEPRECATED</a>", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#class_name\">class_name</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#class_name\">class_name</a> = <a class=\"id\" href=\"#make_class_name\">make_class_name</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#name\">name</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#class_name\">class_name</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#old_parent\">old_parent</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_link\">sysfs_remove_link</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, \"device\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_link\">sysfs_remove_link</a>(&amp;<a class=\"id\" href=\"#old_parent\">old_parent</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#class_name\">class_name</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new_parent\">new_parent</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#sysfs_create_link\">sysfs_create_link</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, &amp;<a class=\"id\" href=\"#new_parent\">new_parent</a>-><a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"device\");", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#sysfs_create_link\">sysfs_create_link</a>(&amp;<a class=\"id\" href=\"#new_parent\">new_parent</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#class_name\">class_name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_link\">sysfs_remove_link</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, \"device\");", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 0;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#class_name\">class_name</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"#else", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#old_parent\">old_parent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_link\">sysfs_remove_link</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, \"device\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new_parent\">new_parent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#sysfs_create_link\">sysfs_create_link</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, &amp;<a class=\"id\" href=\"#new_parent\">new_parent</a>-><a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"device\");", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * device_move - moves a device to a new parent</span>", 
"<span class=\"comment\"> * @dev: the pointer to the struct device to be moved</span>", 
"<span class=\"comment\"> * @new_parent: the new parent of the device (can by NULL)</span>", 
"<span class=\"comment\"> * @dpm_order: how to reorder the dpm_list</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#device_move\">device_move</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#new_parent\">new_parent</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>enum <a class=\"id\" href=\"#dpm_order\">dpm_order</a> <a class=\"id\" href=\"#dpm_order\">dpm_order</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#old_parent\">old_parent</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#new_parent_kobj\">new_parent_kobj</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#get_device\">get_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_pm_lock\">device_pm_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_parent\">new_parent</a> = <a class=\"id\" href=\"#get_device\">get_device</a>(<a class=\"id\" href=\"#new_parent\">new_parent</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_parent_kobj\">new_parent_kobj</a> = <a class=\"id\" href=\"#get_device_parent\">get_device_parent</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#new_parent\">new_parent</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"device: '%s': %s: moving to '%s'\\n\", <a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#dev\">dev</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#new_parent\">new_parent</a> ? <a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#new_parent\">new_parent</a>) : \"<NULL>\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#kobject_move\">kobject_move</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#new_parent_kobj\">new_parent_kobj</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cleanup_glue_dir\">cleanup_glue_dir</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#new_parent_kobj\">new_parent_kobj</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_device\">put_device</a>(<a class=\"id\" href=\"#new_parent\">new_parent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_parent\">old_parent</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#new_parent\">new_parent</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#old_parent\">old_parent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#klist_remove\">klist_remove</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#knode_parent\">knode_parent</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new_parent\">new_parent</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#klist_add_tail\">klist_add_tail</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#knode_parent\">knode_parent</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#new_parent\">new_parent</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#klist_children\">klist_children</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_dev_node\">set_dev_node</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#dev_to_node\">dev_to_node</a>(<a class=\"id\" href=\"#new_parent\">new_parent</a>));", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_put\">out_put</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#device_move_class_links\">device_move_class_links</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#old_parent\">old_parent</a>, <a class=\"id\" href=\"#new_parent\">new_parent</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We ignore errors on cleanup since we're hosed anyway... */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_move_class_links\">device_move_class_links</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#new_parent\">new_parent</a>, <a class=\"id\" href=\"#old_parent\">old_parent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#kobject_move\">kobject_move</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, &amp;<a class=\"id\" href=\"#old_parent\">old_parent</a>-><a class=\"id\" href=\"#kobj\">kobj</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#new_parent\">new_parent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#klist_remove\">klist_remove</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#knode_parent\">knode_parent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#old_parent\">old_parent</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#old_parent\">old_parent</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#klist_add_tail\">klist_add_tail</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#knode_parent\">knode_parent</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#old_parent\">old_parent</a>-><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#klist_children\">klist_children</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_dev_node\">set_dev_node</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#dev_to_node\">dev_to_node</a>(<a class=\"id\" href=\"#old_parent\">old_parent</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cleanup_glue_dir\">cleanup_glue_dir</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#new_parent_kobj\">new_parent_kobj</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_device\">put_device</a>(<a class=\"id\" href=\"#new_parent\">new_parent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#dpm_order\">dpm_order</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DPM_ORDER_NONE\">DPM_ORDER_NONE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DPM_ORDER_DEV_AFTER_PARENT\">DPM_ORDER_DEV_AFTER_PARENT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_pm_move_after\">device_pm_move_after</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#new_parent\">new_parent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DPM_ORDER_PARENT_BEFORE_DEV\">DPM_ORDER_PARENT_BEFORE_DEV</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_pm_move_before\">device_pm_move_before</a>(<a class=\"id\" href=\"#new_parent\">new_parent</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#DPM_ORDER_DEV_LAST\">DPM_ORDER_DEV_LAST</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_pm_move_last\">device_pm_move_last</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out_put\">out_put</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_device\">put_device</a>(<a class=\"id\" href=\"#old_parent\">old_parent</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_pm_unlock\">device_pm_unlock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_device\">put_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#device_move\">device_move</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * device_shutdown - call -&gt;shutdown() on each device to shutdown.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#device_shutdown\">device_shutdown</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#devices_kset\">devices_kset</a>-><a class=\"id\" href=\"#list_lock\">list_lock</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Walk the devices list backward, shutting down each in turn.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Beware that device unplug events may also start pulling</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * devices offline, even as the system is shutting down.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>while (!<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#devices_kset\">devices_kset</a>-><a class=\"id\" href=\"#list\">list</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#devices_kset\">devices_kset</a>-><a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#prev\">prev</a>, struct <a class=\"id\" href=\"#device\">device</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kobj\">kobj</a>.<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_device\">get_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Make sure the device is off the kset list, in the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * event that dev-&gt;*-&gt;shutdown() doesn't remove it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del_init\">list_del_init</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>.<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#devices_kset\">devices_kset</a>-><a class=\"id\" href=\"#list_lock\">list_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a> && <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#shutdown\">shutdown</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_dbg\">dev_dbg</a>(<a class=\"id\" href=\"#dev\">dev</a>, \"shutdown\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#shutdown\">shutdown</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a> && <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#shutdown\">shutdown</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_dbg\">dev_dbg</a>(<a class=\"id\" href=\"#dev\">dev</a>, \"shutdown\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#shutdown\">shutdown</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_device\">put_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#devices_kset\">devices_kset</a>-><a class=\"id\" href=\"#list_lock\">list_lock</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#devices_kset\">devices_kset</a>-><a class=\"id\" href=\"#list_lock\">list_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#async_synchronize_full\">async_synchronize_full</a>();", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Device logging functions</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PRINTK\">CONFIG_PRINTK</a>", 
"", 
"static int <a class=\"id\" href=\"#__dev_printk\">__dev_printk</a>(const char *<a class=\"id\" href=\"#level\">level</a>, const struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#va_format\">va_format</a> *<a class=\"id\" href=\"#vaf\">vaf</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#printk\">printk</a>(\"%s(NULL device *): %pV\", <a class=\"id\" href=\"#level\">level</a>, <a class=\"id\" href=\"#vaf\">vaf</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#printk\">printk</a>(\"%s%s %s: %pV\",", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#level\">level</a>, <a class=\"id\" href=\"#dev_driver_string\">dev_driver_string</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#vaf\">vaf</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#dev_printk\">dev_printk</a>(const char *<a class=\"id\" href=\"#level\">level</a>, const struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/>       const char *<a class=\"id\" href=\"#fmt\">fmt</a>, ...)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#va_format\">va_format</a> <a class=\"id\" href=\"#vaf\">vaf</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_list\">va_list</a> <a class=\"id\" href=\"#args\">args</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#r\">r</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_start\">va_start</a>(<a class=\"id\" href=\"#args\">args</a>, <a class=\"id\" href=\"#fmt\">fmt</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vaf\">vaf</a>.<a class=\"id\" href=\"#fmt\">fmt</a> = <a class=\"id\" href=\"#fmt\">fmt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vaf\">vaf</a>.<a class=\"id\" href=\"#va\">va</a> = &amp;<a class=\"id\" href=\"#args\">args</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#__dev_printk\">__dev_printk</a>(<a class=\"id\" href=\"#level\">level</a>, <a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#vaf\">vaf</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_end\">va_end</a>(<a class=\"id\" href=\"#args\">args</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#dev_printk\">dev_printk</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#define_dev_printk_level\">define_dev_printk_level</a>(<a class=\"id\" href=\"#func\">func</a>, <a class=\"id\" href=\"#kern_level\">kern_level</a>)<span class=\"ts\"/><span class=\"ts\"/>\\", 
"int <a class=\"id\" href=\"#func\">func</a>(const struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, const char *<a class=\"id\" href=\"#fmt\">fmt</a>, ...)<span class=\"ts\"/>\\", 
"{<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#va_format\">va_format</a> <a class=\"id\" href=\"#vaf\">vaf</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_list\">va_list</a> <a class=\"id\" href=\"#args\">args</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#r\">r</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_start\">va_start</a>(<a class=\"id\" href=\"#args\">args</a>, <a class=\"id\" href=\"#fmt\">fmt</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vaf\">vaf</a>.<a class=\"id\" href=\"#fmt\">fmt</a> = <a class=\"id\" href=\"#fmt\">fmt</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vaf\">vaf</a>.<a class=\"id\" href=\"#va\">va</a> = &amp;<a class=\"id\" href=\"#args\">args</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#__dev_printk\">__dev_printk</a>(<a class=\"id\" href=\"#kern_level\">kern_level</a>, <a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#vaf\">vaf</a>);<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_end\">va_end</a>(<a class=\"id\" href=\"#args\">args</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"}<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#func\">func</a>);", 
"", 
"<a class=\"id\" href=\"#define_dev_printk_level\">define_dev_printk_level</a>(<a class=\"id\" href=\"#dev_emerg\">dev_emerg</a>, <a class=\"id\" href=\"#KERN_EMERG\">KERN_EMERG</a>);", 
"<a class=\"id\" href=\"#define_dev_printk_level\">define_dev_printk_level</a>(<a class=\"id\" href=\"#dev_alert\">dev_alert</a>, <a class=\"id\" href=\"#KERN_ALERT\">KERN_ALERT</a>);", 
"<a class=\"id\" href=\"#define_dev_printk_level\">define_dev_printk_level</a>(<a class=\"id\" href=\"#dev_crit\">dev_crit</a>, <a class=\"id\" href=\"#KERN_CRIT\">KERN_CRIT</a>);", 
"<a class=\"id\" href=\"#define_dev_printk_level\">define_dev_printk_level</a>(<a class=\"id\" href=\"#dev_err\">dev_err</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>);", 
"<a class=\"id\" href=\"#define_dev_printk_level\">define_dev_printk_level</a>(<a class=\"id\" href=\"#dev_warn\">dev_warn</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>);", 
"<a class=\"id\" href=\"#define_dev_printk_level\">define_dev_printk_level</a>(<a class=\"id\" href=\"#dev_notice\">dev_notice</a>, <a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a>);", 
"<a class=\"id\" href=\"#define_dev_printk_level\">define_dev_printk_level</a>(<a class=\"id\" href=\"#_dev_info\">_dev_info</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/63/589aafb7ccf5b88b1f612373bdb444d74ca9de.xr', __xr_tmp);
