var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright (c) 2008,2009 NEC Software Tohoku, Ltd.</span>", 
"<span class=\"comment\"> * Written by Takashi Sato &lt;t-sato@yk.jp.nec.com&gt;</span>", 
"<span class=\"comment\"> *            Akira Fujita &lt;a-fujita@rs.jp.nec.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify it</span>", 
"<span class=\"comment\"> * under the terms of version 2.1 of the GNU Lesser General Public License</span>", 
"<span class=\"comment\"> * as published by the Free Software Foundation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>", 
"<span class=\"comment\"> * GNU General Public License for more details.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#quotaops\">quotaops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"ext4_jbd2.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"ext4_extents.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"ext4.h\"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * get_ext_path - Find an extent path for designated logical block number.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @inode:<span class=\"ts\"/>an inode which is searched</span>", 
"<span class=\"comment\"> * @lblock:<span class=\"ts\"/>logical block number to find an extent path</span>", 
"<span class=\"comment\"> * @path:<span class=\"ts\"/>pointer to an extent path pointer (for output)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * ext4_ext_find_extent wrapper. Return 0 on success, or a negative error value</span>", 
"<span class=\"comment\"> * on failure.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int", 
"<a class=\"id\" href=\"#get_ext_path\">get_ext_path</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#lblock\">lblock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_ext_path\">ext4_ext_path</a> **<a class=\"id\" href=\"#path\">path</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#path\">path</a> = <a class=\"id\" href=\"#ext4_ext_find_extent\">ext4_ext_find_extent</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#lblock\">lblock</a>, *<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(*<a class=\"id\" href=\"#path\">path</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(*<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#path\">path</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>} else if ((*<a class=\"id\" href=\"#path\">path</a>)[<a class=\"id\" href=\"#ext_depth\">ext_depth</a>(<a class=\"id\" href=\"#inode\">inode</a>)].<a class=\"id\" href=\"#p_ext\">p_ext</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENODATA\">ENODATA</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * copy_extent_status - Copy the extent's initialization status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @src:<span class=\"ts\"/>an extent for getting initialize status</span>", 
"<span class=\"comment\"> * @dest:<span class=\"ts\"/>an extent to be set the status</span>", 
"<span class=\"comment\"> */</span>", 
"static void", 
"<a class=\"id\" href=\"#copy_extent_status\">copy_extent_status</a>(struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#src\">src</a>, struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#dest\">dest</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_ext_is_uninitialized\">ext4_ext_is_uninitialized</a>(<a class=\"id\" href=\"#src\">src</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_mark_uninitialized\">ext4_ext_mark_uninitialized</a>(<a class=\"id\" href=\"#dest\">dest</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dest\">dest</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#dest\">dest</a>));", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * mext_next_extent - Search for the next extent and set it to \"extent\"</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @inode:<span class=\"ts\"/>inode which is searched</span>", 
"<span class=\"comment\"> * @path:<span class=\"ts\"/>this will obtain data for the next extent</span>", 
"<span class=\"comment\"> * @extent:<span class=\"ts\"/>pointer to the next extent we have just gotten</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Search the next extent in the array of ext4_ext_path structure (@path)</span>", 
"<span class=\"comment\"> * and set it to ext4_extent structure (@extent). In addition, the member of</span>", 
"<span class=\"comment\"> * @path (-&gt;p_ext) also points the next extent. Return 0 on success, 1 if</span>", 
"<span class=\"comment\"> * ext4_ext_path structure refers to the last extent, or a negative error</span>", 
"<span class=\"comment\"> * value on failure.</span>", 
"<span class=\"comment\"> */</span>", 
"static int", 
"<a class=\"id\" href=\"#mext_next_extent\">mext_next_extent</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#ext4_ext_path\">ext4_ext_path</a> *<a class=\"id\" href=\"#path\">path</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> **<a class=\"id\" href=\"#extent\">extent</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent_header\">ext4_extent_header</a> *<a class=\"id\" href=\"#eh\">eh</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ppos\">ppos</a>, <a class=\"id\" href=\"#leaf_ppos\">leaf_ppos</a> = <a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#p_depth\">p_depth</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ppos\">ppos</a> = <a class=\"id\" href=\"#leaf_ppos\">leaf_ppos</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT_LAST_EXTENT\">EXT_LAST_EXTENT</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#ppos\">ppos</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>) &gt; <a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#ppos\">ppos</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* leaf block */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#extent\">extent</a> = ++<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#ppos\">ppos</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#ppos\">ppos</a>].<a class=\"id\" href=\"#p_block\">p_block</a> = <a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#ppos\">ppos</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>while (--<a class=\"id\" href=\"#ppos\">ppos</a> >= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT_LAST_INDEX\">EXT_LAST_INDEX</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#ppos\">ppos</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>) &gt;", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#ppos\">ppos</a>].<a class=\"id\" href=\"#p_idx\">p_idx</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#cur_ppos\">cur_ppos</a> = <a class=\"id\" href=\"#ppos\">ppos</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* index block */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#ppos\">ppos</a>].<a class=\"id\" href=\"#p_idx\">p_idx</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#ppos\">ppos</a>].<a class=\"id\" href=\"#p_block\">p_block</a> = <a class=\"id\" href=\"#idx_pblock\">idx_pblock</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#ppos\">ppos</a>].<a class=\"id\" href=\"#p_idx\">p_idx</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#ppos\">ppos</a>+1].<a class=\"id\" href=\"#p_bh\">p_bh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#ppos\">ppos</a>+1].<a class=\"id\" href=\"#p_bh\">p_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#ppos\">ppos</a>+1].<a class=\"id\" href=\"#p_bh\">p_bh</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#ppos\">ppos</a>].<a class=\"id\" href=\"#p_block\">p_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#ppos\">ppos</a>+1].<a class=\"id\" href=\"#p_bh\">p_bh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#ppos\">ppos</a>+1].<a class=\"id\" href=\"#p_hdr\">p_hdr</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_block_hdr\">ext_block_hdr</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#ppos\">ppos</a>+1].<a class=\"id\" href=\"#p_bh\">p_bh</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Halfway index block */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>while (++<a class=\"id\" href=\"#cur_ppos\">cur_ppos</a> &lt; <a class=\"id\" href=\"#leaf_ppos\">leaf_ppos</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#cur_ppos\">cur_ppos</a>].<a class=\"id\" href=\"#p_idx\">p_idx</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT_FIRST_INDEX\">EXT_FIRST_INDEX</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#cur_ppos\">cur_ppos</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#cur_ppos\">cur_ppos</a>].<a class=\"id\" href=\"#p_block\">p_block</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idx_pblock\">idx_pblock</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#cur_ppos\">cur_ppos</a>].<a class=\"id\" href=\"#p_idx\">p_idx</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#cur_ppos\">cur_ppos</a>+1].<a class=\"id\" href=\"#p_bh\">p_bh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#cur_ppos\">cur_ppos</a>+1].<a class=\"id\" href=\"#p_bh\">p_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#cur_ppos\">cur_ppos</a>+1].<a class=\"id\" href=\"#p_bh\">p_bh</a> = <a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#cur_ppos\">cur_ppos</a>].<a class=\"id\" href=\"#p_block\">p_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#cur_ppos\">cur_ppos</a>+1].<a class=\"id\" href=\"#p_bh\">p_bh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#cur_ppos\">cur_ppos</a>+1].<a class=\"id\" href=\"#p_hdr\">p_hdr</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_block_hdr\">ext_block_hdr</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#cur_ppos\">cur_ppos</a>+1].<a class=\"id\" href=\"#p_bh\">p_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#leaf_ppos\">leaf_ppos</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a> = *<a class=\"id\" href=\"#extent\">extent</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#eh\">eh</a> = <a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#leaf_ppos\">leaf_ppos</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* empty leaf is found */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODATA\">ENODATA</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* leaf block */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#leaf_ppos\">leaf_ppos</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a> = *<a class=\"id\" href=\"#extent\">extent</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT_FIRST_EXTENT\">EXT_FIRST_EXTENT</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#leaf_ppos\">leaf_ppos</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#leaf_ppos\">leaf_ppos</a>].<a class=\"id\" href=\"#p_block\">p_block</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#leaf_ppos\">leaf_ppos</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* We found the last extent */</span>", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * mext_check_null_inode - NULL check for two inodes</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If inode1 or inode2 is NULL, return -EIO. Otherwise, return 0.</span>", 
"<span class=\"comment\"> */</span>", 
"static int", 
"<a class=\"id\" href=\"#mext_check_null_inode\">mext_check_null_inode</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode1\">inode1</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode2\">inode2</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      const char *<a class=\"id\" href=\"#function\">function</a>, unsigned int <a class=\"id\" href=\"#line\">line</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inode1\">inode1</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__ext4_error\">__ext4_error</a>(<a class=\"id\" href=\"#inode2\">inode2</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#function\">function</a>, <a class=\"id\" href=\"#line\">line</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"Both inodes should not be NULL: \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"inode1 NULL inode2 %lu\", <a class=\"id\" href=\"#inode2\">inode2</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#inode2\">inode2</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__ext4_error\">__ext4_error</a>(<a class=\"id\" href=\"#inode1\">inode1</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#function\">function</a>, <a class=\"id\" href=\"#line\">line</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"Both inodes should not be NULL: \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"inode1 %lu inode2 NULL\", <a class=\"id\" href=\"#inode1\">inode1</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * double_down_write_data_sem - Acquire two inodes' write lock of i_data_sem</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @orig_inode:<span class=\"ts\"/><span class=\"ts\"/>original inode structure</span>", 
"<span class=\"comment\"> * @donor_inode:<span class=\"ts\"/>donor inode structure</span>", 
"<span class=\"comment\"> * Acquire write lock of i_data_sem of the two inodes (orig and donor) by</span>", 
"<span class=\"comment\"> * i_ino order.</span>", 
"<span class=\"comment\"> */</span>", 
"static void", 
"<a class=\"id\" href=\"#double_down_write_data_sem\">double_down_write_data_sem</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#orig_inode\">orig_inode</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#donor_inode\">donor_inode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#first\">first</a> = <a class=\"id\" href=\"#orig_inode\">orig_inode</a>, *<a class=\"id\" href=\"#second\">second</a> = <a class=\"id\" href=\"#donor_inode\">donor_inode</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Use the inode number to provide the stable locking order instead</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * of its address, because the C language doesn't guarantee you can</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * compare pointers that don't come from the same array.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#donor_inode\">donor_inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a> &lt; <a class=\"id\" href=\"#orig_inode\">orig_inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#first\">first</a> = <a class=\"id\" href=\"#donor_inode\">donor_inode</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#second\">second</a> = <a class=\"id\" href=\"#orig_inode\">orig_inode</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#first\">first</a>)-><a class=\"id\" href=\"#i_data_sem\">i_data_sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write_nested\">down_write_nested</a>(&amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#second\">second</a>)-><a class=\"id\" href=\"#i_data_sem\">i_data_sem</a>, <a class=\"id\" href=\"#SINGLE_DEPTH_NESTING\">SINGLE_DEPTH_NESTING</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * double_up_write_data_sem - Release two inodes' write lock of i_data_sem</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @orig_inode:<span class=\"ts\"/><span class=\"ts\"/>original inode structure to be released its lock first</span>", 
"<span class=\"comment\"> * @donor_inode:<span class=\"ts\"/>donor inode structure to be released its lock second</span>", 
"<span class=\"comment\"> * Release write lock of i_data_sem of two inodes (orig and donor).</span>", 
"<span class=\"comment\"> */</span>", 
"static void", 
"<a class=\"id\" href=\"#double_up_write_data_sem\">double_up_write_data_sem</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#orig_inode\">orig_inode</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#donor_inode\">donor_inode</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#orig_inode\">orig_inode</a>)-><a class=\"id\" href=\"#i_data_sem\">i_data_sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#donor_inode\">donor_inode</a>)-><a class=\"id\" href=\"#i_data_sem\">i_data_sem</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * mext_insert_across_blocks - Insert extents across leaf block</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @handle:<span class=\"ts\"/><span class=\"ts\"/>journal handle</span>", 
"<span class=\"comment\"> * @orig_inode:<span class=\"ts\"/><span class=\"ts\"/>original inode</span>", 
"<span class=\"comment\"> * @o_start:<span class=\"ts\"/><span class=\"ts\"/>first original extent to be changed</span>", 
"<span class=\"comment\"> * @o_end:<span class=\"ts\"/><span class=\"ts\"/>last original extent to be changed</span>", 
"<span class=\"comment\"> * @start_ext:<span class=\"ts\"/><span class=\"ts\"/>first new extent to be inserted</span>", 
"<span class=\"comment\"> * @new_ext:<span class=\"ts\"/><span class=\"ts\"/>middle of new extent to be inserted</span>", 
"<span class=\"comment\"> * @end_ext:<span class=\"ts\"/><span class=\"ts\"/>last new extent to be inserted</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Allocate a new leaf block and insert extents into it. Return 0 on success,</span>", 
"<span class=\"comment\"> * or a negative error value on failure.</span>", 
"<span class=\"comment\"> */</span>", 
"static int", 
"<a class=\"id\" href=\"#mext_insert_across_blocks\">mext_insert_across_blocks</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#orig_inode\">orig_inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#o_start\">o_start</a>, struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#o_end\">o_end</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#start_ext\">start_ext</a>, struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#new_ext\">new_ext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#end_ext\">end_ext</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_ext_path\">ext4_ext_path</a> *<a class=\"id\" href=\"#orig_path\">orig_path</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#eblock\">eblock</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#new_flag\">new_flag</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#end_flag\">end_flag</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#start_ext\">start_ext</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a> && <a class=\"id\" href=\"#new_ext\">new_ext</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a> && <a class=\"id\" href=\"#end_ext\">end_ext</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#o_start\">o_start</a> == <a class=\"id\" href=\"#o_end\">o_end</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*       start_ext   new_ext    end_ext</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * donor |---------|-----------|--------|</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * orig  |------------------------------|</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end_flag\">end_flag</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*       start_ext   new_ext   end_ext</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * donor |---------|----------|---------|</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * orig  |---------------|--------------|</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#o_end\">o_end</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a> = <a class=\"id\" href=\"#end_ext\">end_ext</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#o_end\">o_end</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a> = <a class=\"id\" href=\"#end_ext\">end_ext</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_store_pblock\">ext4_ext_store_pblock</a>(<a class=\"id\" href=\"#o_end\">o_end</a>, <a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(<a class=\"id\" href=\"#end_ext\">end_ext</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#o_start\">o_start</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a> = <a class=\"id\" href=\"#start_ext\">start_ext</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#eblock\">eblock</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#start_ext\">start_ext</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_flag\">new_flag</a> = 1;", 
"", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#start_ext\">start_ext</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a> && <a class=\"id\" href=\"#new_ext\">new_ext</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>   !<a class=\"id\" href=\"#end_ext\">end_ext</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a> && <a class=\"id\" href=\"#o_start\">o_start</a> == <a class=\"id\" href=\"#o_end\">o_end</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*<span class=\"ts\"/> start_ext<span class=\"ts\"/>new_ext</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * donor |--------------|---------------|</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * orig  |------------------------------|</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#o_start\">o_start</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a> = <a class=\"id\" href=\"#start_ext\">start_ext</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#eblock\">eblock</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#start_ext\">start_ext</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_flag\">new_flag</a> = 1;", 
"", 
"<span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#start_ext\">start_ext</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a> && <a class=\"id\" href=\"#new_ext\">new_ext</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#end_ext\">end_ext</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a> && <a class=\"id\" href=\"#o_start\">o_start</a> == <a class=\"id\" href=\"#o_end\">o_end</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*<span class=\"ts\"/>  new_ext<span class=\"ts\"/>end_ext</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * donor |--------------|---------------|</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * orig  |------------------------------|</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#o_end\">o_end</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a> = <a class=\"id\" href=\"#end_ext\">end_ext</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#o_end\">o_end</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a> = <a class=\"id\" href=\"#end_ext\">end_ext</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_store_pblock\">ext4_ext_store_pblock</a>(<a class=\"id\" href=\"#o_end\">o_end</a>, <a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(<a class=\"id\" href=\"#end_ext\">end_ext</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Set 0 to the extent block if new_ext was</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the first block.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#new_ext\">new_ext</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#eblock\">eblock</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#new_ext\">new_ext</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_flag\">new_flag</a> = 1;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_debug\">ext4_debug</a>(\"ext4 move extent: Unexpected insert case\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new_flag\">new_flag</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#get_ext_path\">get_ext_path</a>(<a class=\"id\" href=\"#orig_inode\">orig_inode</a>, <a class=\"id\" href=\"#eblock\">eblock</a>, &amp;<a class=\"id\" href=\"#orig_path\">orig_path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_ext_insert_extent\">ext4_ext_insert_extent</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#orig_inode\">orig_inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#orig_path\">orig_path</a>, <a class=\"id\" href=\"#new_ext\">new_ext</a>, 0))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#end_flag\">end_flag</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#get_ext_path\">get_ext_path</a>(<a class=\"id\" href=\"#orig_inode\">orig_inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#end_ext\">end_ext</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>) - 1, &amp;<a class=\"id\" href=\"#orig_path\">orig_path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_ext_insert_extent\">ext4_ext_insert_extent</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#orig_inode\">orig_inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#orig_path\">orig_path</a>, <a class=\"id\" href=\"#end_ext\">end_ext</a>, 0))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#orig_path\">orig_path</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_drop_refs\">ext4_ext_drop_refs</a>(<a class=\"id\" href=\"#orig_path\">orig_path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#orig_path\">orig_path</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * mext_insert_inside_block - Insert new extent to the extent block</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @o_start:<span class=\"ts\"/><span class=\"ts\"/>first original extent to be moved</span>", 
"<span class=\"comment\"> * @o_end:<span class=\"ts\"/><span class=\"ts\"/>last original extent to be moved</span>", 
"<span class=\"comment\"> * @start_ext:<span class=\"ts\"/><span class=\"ts\"/>first new extent to be inserted</span>", 
"<span class=\"comment\"> * @new_ext:<span class=\"ts\"/><span class=\"ts\"/>middle of new extent to be inserted</span>", 
"<span class=\"comment\"> * @end_ext:<span class=\"ts\"/><span class=\"ts\"/>last new extent to be inserted</span>", 
"<span class=\"comment\"> * @eh:<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>extent header of target leaf block</span>", 
"<span class=\"comment\"> * @range_to_move:<span class=\"ts\"/>used to decide how to insert extent</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Insert extents into the leaf block. The extent (@o_start) is overwritten</span>", 
"<span class=\"comment\"> * by inserted extents.</span>", 
"<span class=\"comment\"> */</span>", 
"static void", 
"<a class=\"id\" href=\"#mext_insert_inside_block\">mext_insert_inside_block</a>(struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#o_start\">o_start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#o_end\">o_end</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#start_ext\">start_ext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#new_ext\">new_ext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#end_ext\">end_ext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#ext4_extent_header\">ext4_extent_header</a> *<a class=\"id\" href=\"#eh\">eh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      int <a class=\"id\" href=\"#range_to_move\">range_to_move</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a> = 0;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Move the existing extents */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#range_to_move\">range_to_move</a> && <a class=\"id\" href=\"#o_end\">o_end</a> &lt; <a class=\"id\" href=\"#EXT_LAST_EXTENT\">EXT_LAST_EXTENT</a>(<a class=\"id\" href=\"#eh\">eh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = (unsigned long)(<a class=\"id\" href=\"#EXT_LAST_EXTENT\">EXT_LAST_EXTENT</a>(<a class=\"id\" href=\"#eh\">eh</a>) + 1) -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long)(<a class=\"id\" href=\"#o_end\">o_end</a> + 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memmove\">memmove</a>(<a class=\"id\" href=\"#o_end\">o_end</a> + 1 + <a class=\"id\" href=\"#range_to_move\">range_to_move</a>, <a class=\"id\" href=\"#o_end\">o_end</a> + 1, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Insert start entry */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#start_ext\">start_ext</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#o_start\">o_start</a>[<a class=\"id\" href=\"#i\">i</a>++].<a class=\"id\" href=\"#ee_len\">ee_len</a> = <a class=\"id\" href=\"#start_ext\">start_ext</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Insert new entry */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new_ext\">new_ext</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#o_start\">o_start</a>[<a class=\"id\" href=\"#i\">i</a>] = *<a class=\"id\" href=\"#new_ext\">new_ext</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_store_pblock\">ext4_ext_store_pblock</a>(&amp;<a class=\"id\" href=\"#o_start\">o_start</a>[<a class=\"id\" href=\"#i\">i</a>++], <a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(<a class=\"id\" href=\"#new_ext\">new_ext</a>));", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Insert end entry */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#end_ext\">end_ext</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#o_start\">o_start</a>[<a class=\"id\" href=\"#i\">i</a>] = *<a class=\"id\" href=\"#end_ext\">end_ext</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Increment the total entries counter on the extent block */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#le16_add_cpu\">le16_add_cpu</a>(&amp;<a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a>, <a class=\"id\" href=\"#range_to_move\">range_to_move</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * mext_insert_extents - Insert new extent</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @handle:<span class=\"ts\"/>journal handle</span>", 
"<span class=\"comment\"> * @orig_inode:<span class=\"ts\"/>original inode</span>", 
"<span class=\"comment\"> * @orig_path:<span class=\"ts\"/>path indicates first extent to be changed</span>", 
"<span class=\"comment\"> * @o_start:<span class=\"ts\"/>first original extent to be changed</span>", 
"<span class=\"comment\"> * @o_end:<span class=\"ts\"/>last original extent to be changed</span>", 
"<span class=\"comment\"> * @start_ext:<span class=\"ts\"/>first new extent to be inserted</span>", 
"<span class=\"comment\"> * @new_ext:<span class=\"ts\"/>middle of new extent to be inserted</span>", 
"<span class=\"comment\"> * @end_ext:<span class=\"ts\"/>last new extent to be inserted</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Call the function to insert extents. If we cannot add more extents into</span>", 
"<span class=\"comment\"> * the leaf block, we call mext_insert_across_blocks() to create a</span>", 
"<span class=\"comment\"> * new leaf block. Otherwise call mext_insert_inside_block(). Return 0</span>", 
"<span class=\"comment\"> * on success, or a negative error value on failure.</span>", 
"<span class=\"comment\"> */</span>", 
"static int", 
"<a class=\"id\" href=\"#mext_insert_extents\">mext_insert_extents</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#orig_inode\">orig_inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#ext4_ext_path\">ext4_ext_path</a> *<a class=\"id\" href=\"#orig_path\">orig_path</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#o_start\">o_start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#o_end\">o_end</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#start_ext\">start_ext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#new_ext\">new_ext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#end_ext\">end_ext</a>)", 
"{", 
"<span class=\"ts\"/>struct  <a class=\"id\" href=\"#ext4_extent_header\">ext4_extent_header</a> *<a class=\"id\" href=\"#eh\">eh</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#need_slots\">need_slots</a>, <a class=\"id\" href=\"#slots_range\">slots_range</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#range_to_move\">range_to_move</a>, <a class=\"id\" href=\"#depth\">depth</a>, <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The extents need to be inserted</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * start_extent + new_extent + end_extent.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#need_slots\">need_slots</a> = (<a class=\"id\" href=\"#start_ext\">start_ext</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a> ? 1 : 0) + (<a class=\"id\" href=\"#end_ext\">end_ext</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a> ? 1 : 0) +", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#new_ext\">new_ext</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a> ? 1 : 0);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* The number of slots between start and end */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#slots_range\">slots_range</a> = ((unsigned long)(<a class=\"id\" href=\"#o_end\">o_end</a> + 1) - (unsigned long)<a class=\"id\" href=\"#o_start\">o_start</a> + 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>/ sizeof(struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Range to move the end of extent */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#range_to_move\">range_to_move</a> = <a class=\"id\" href=\"#need_slots\">need_slots</a> - <a class=\"id\" href=\"#slots_range\">slots_range</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#depth\">depth</a> = <a class=\"id\" href=\"#orig_path\">orig_path</a>-><a class=\"id\" href=\"#p_depth\">p_depth</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#orig_path\">orig_path</a> += <a class=\"id\" href=\"#depth\">depth</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eh\">eh</a> = <a class=\"id\" href=\"#orig_path\">orig_path</a>-><a class=\"id\" href=\"#p_hdr\">p_hdr</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#depth\">depth</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Register to journal */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ext4_journal_get_write_access\">ext4_journal_get_write_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#orig_path\">orig_path</a>-><a class=\"id\" href=\"#p_bh\">p_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Expansion */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#range_to_move\">range_to_move</a> &gt; 0 &&", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#range_to_move\">range_to_move</a> &gt; <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#eh_max\">eh_max</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>- <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a>))) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#mext_insert_across_blocks\">mext_insert_across_blocks</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#orig_inode\">orig_inode</a>, <a class=\"id\" href=\"#o_start\">o_start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#o_end\">o_end</a>, <a class=\"id\" href=\"#start_ext\">start_ext</a>, <a class=\"id\" href=\"#new_ext\">new_ext</a>, <a class=\"id\" href=\"#end_ext\">end_ext</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mext_insert_inside_block\">mext_insert_inside_block</a>(<a class=\"id\" href=\"#o_start\">o_start</a>, <a class=\"id\" href=\"#o_end\">o_end</a>, <a class=\"id\" href=\"#start_ext\">start_ext</a>, <a class=\"id\" href=\"#new_ext\">new_ext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end_ext\">end_ext</a>, <a class=\"id\" href=\"#eh\">eh</a>, <a class=\"id\" href=\"#range_to_move\">range_to_move</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#depth\">depth</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ext4_handle_dirty_metadata\">ext4_handle_dirty_metadata</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#orig_inode\">orig_inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#orig_path\">orig_path</a>-><a class=\"id\" href=\"#p_bh\">p_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ext4_mark_inode_dirty\">ext4_mark_inode_dirty</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#orig_inode\">orig_inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * mext_leaf_block - Move one leaf extent block into the inode.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @handle:<span class=\"ts\"/><span class=\"ts\"/>journal handle</span>", 
"<span class=\"comment\"> * @orig_inode:<span class=\"ts\"/><span class=\"ts\"/>original inode</span>", 
"<span class=\"comment\"> * @orig_path:<span class=\"ts\"/><span class=\"ts\"/>path indicates first extent to be changed</span>", 
"<span class=\"comment\"> * @dext:<span class=\"ts\"/><span class=\"ts\"/>donor extent</span>", 
"<span class=\"comment\"> * @from:<span class=\"ts\"/><span class=\"ts\"/>start offset on the target file</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * In order to insert extents into the leaf block, we must divide the extent</span>", 
"<span class=\"comment\"> * in the leaf block into three extents. The one is located to be inserted</span>", 
"<span class=\"comment\"> * extents, and the others are located around it.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Therefore, this function creates structures to save extents of the leaf</span>", 
"<span class=\"comment\"> * block, and inserts extents by calling mext_insert_extents() with</span>", 
"<span class=\"comment\"> * created extents. Return 0 on success, or a negative error value on failure.</span>", 
"<span class=\"comment\"> */</span>", 
"static int", 
"<a class=\"id\" href=\"#mext_leaf_block\">mext_leaf_block</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#orig_inode\">orig_inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#ext4_ext_path\">ext4_ext_path</a> *<a class=\"id\" href=\"#orig_path\">orig_path</a>, struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#dext\">dext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> *<a class=\"id\" href=\"#from\">from</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#oext\">oext</a>, *<a class=\"id\" href=\"#o_start\">o_start</a>, *<a class=\"id\" href=\"#o_end\">o_end</a>, *<a class=\"id\" href=\"#prev_ext\">prev_ext</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> <a class=\"id\" href=\"#new_ext\">new_ext</a>, <a class=\"id\" href=\"#start_ext\">start_ext</a>, <a class=\"id\" href=\"#end_ext\">end_ext</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#new_ext_end\">new_ext_end</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#oext_alen\">oext_alen</a>, <a class=\"id\" href=\"#new_ext_alen\">new_ext_alen</a>, <a class=\"id\" href=\"#end_ext_alen\">end_ext_alen</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#depth\">depth</a> = <a class=\"id\" href=\"#ext_depth\">ext_depth</a>(<a class=\"id\" href=\"#orig_inode\">orig_inode</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#start_ext\">start_ext</a>.<a class=\"id\" href=\"#ee_block\">ee_block</a> = <a class=\"id\" href=\"#end_ext\">end_ext</a>.<a class=\"id\" href=\"#ee_block\">ee_block</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#o_start\">o_start</a> = <a class=\"id\" href=\"#o_end\">o_end</a> = <a class=\"id\" href=\"#oext\">oext</a> = <a class=\"id\" href=\"#orig_path\">orig_path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#oext_alen\">oext_alen</a> = <a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#oext\">oext</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#start_ext\">start_ext</a>.<a class=\"id\" href=\"#ee_len\">ee_len</a> = <a class=\"id\" href=\"#end_ext\">end_ext</a>.<a class=\"id\" href=\"#ee_len\">ee_len</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_ext\">new_ext</a>.<a class=\"id\" href=\"#ee_block\">ee_block</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(*<a class=\"id\" href=\"#from\">from</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_store_pblock\">ext4_ext_store_pblock</a>(&amp;<a class=\"id\" href=\"#new_ext\">new_ext</a>, <a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(<a class=\"id\" href=\"#dext\">dext</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_ext\">new_ext</a>.<a class=\"id\" href=\"#ee_len\">ee_len</a> = <a class=\"id\" href=\"#dext\">dext</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_ext_alen\">new_ext_alen</a> = <a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(&amp;<a class=\"id\" href=\"#new_ext\">new_ext</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_ext_end\">new_ext_end</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#new_ext\">new_ext</a>.<a class=\"id\" href=\"#ee_block\">ee_block</a>) + <a class=\"id\" href=\"#new_ext_alen\">new_ext_alen</a> - 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Case: original extent is first</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * oext      |--------|</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * new_ext      |--|</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * start_ext |--|</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#oext\">oext</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>) &lt; <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#new_ext\">new_ext</a>.<a class=\"id\" href=\"#ee_block\">ee_block</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#new_ext\">new_ext</a>.<a class=\"id\" href=\"#ee_block\">ee_block</a>) &lt;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#oext\">oext</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>) + <a class=\"id\" href=\"#oext_alen\">oext_alen</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_ext\">start_ext</a>.<a class=\"id\" href=\"#ee_len\">ee_len</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#new_ext\">new_ext</a>.<a class=\"id\" href=\"#ee_block\">ee_block</a>) -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#oext\">oext</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_ext\">start_ext</a>.<a class=\"id\" href=\"#ee_block\">ee_block</a> = <a class=\"id\" href=\"#oext\">oext</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copy_extent_status\">copy_extent_status</a>(<a class=\"id\" href=\"#oext\">oext</a>, &amp;<a class=\"id\" href=\"#start_ext\">start_ext</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#oext\">oext</a> &gt; <a class=\"id\" href=\"#EXT_FIRST_EXTENT\">EXT_FIRST_EXTENT</a>(<a class=\"id\" href=\"#orig_path\">orig_path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prev_ext\">prev_ext</a> = <a class=\"id\" href=\"#oext\">oext</a> - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We can merge new_ext into previous extent,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * if these are contiguous and same extent type.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_can_extents_be_merged\">ext4_can_extents_be_merged</a>(<a class=\"id\" href=\"#orig_inode\">orig_inode</a>, <a class=\"id\" href=\"#prev_ext\">prev_ext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#new_ext\">new_ext</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#o_start\">o_start</a> = <a class=\"id\" href=\"#prev_ext\">prev_ext</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_ext\">start_ext</a>.<a class=\"id\" href=\"#ee_len\">ee_len</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#prev_ext\">prev_ext</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_ext_alen\">new_ext_alen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_ext\">start_ext</a>.<a class=\"id\" href=\"#ee_block\">ee_block</a> = <a class=\"id\" href=\"#oext\">oext</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copy_extent_status\">copy_extent_status</a>(<a class=\"id\" href=\"#prev_ext\">prev_ext</a>, &amp;<a class=\"id\" href=\"#start_ext\">start_ext</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_ext\">new_ext</a>.<a class=\"id\" href=\"#ee_len\">ee_len</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Case: new_ext_end must be less than oext</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * oext      |-----------|</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * new_ext       |-------|</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#oext\">oext</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>) + <a class=\"id\" href=\"#oext_alen\">oext_alen</a> - 1 &lt; <a class=\"id\" href=\"#new_ext_end\">new_ext_end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ERROR_INODE\">EXT4_ERROR_INODE</a>(<a class=\"id\" href=\"#orig_inode\">orig_inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"new_ext_end(%u) should be less than or equal to \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"oext->ee_block(%u) + oext_alen(%d) - 1\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_ext_end\">new_ext_end</a>, <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#oext\">oext</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#oext_alen\">oext_alen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Case: new_ext is smaller than original extent</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * oext    |---------------|</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * new_ext |-----------|</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * end_ext             |---|</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#oext\">oext</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>) <= <a class=\"id\" href=\"#new_ext_end\">new_ext_end</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_ext_end\">new_ext_end</a> &lt; <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#oext\">oext</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>) + <a class=\"id\" href=\"#oext_alen\">oext_alen</a> - 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end_ext\">end_ext</a>.<a class=\"id\" href=\"#ee_len\">ee_len</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#oext\">oext</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#oext_alen\">oext_alen</a> - 1 - <a class=\"id\" href=\"#new_ext_end\">new_ext_end</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copy_extent_status\">copy_extent_status</a>(<a class=\"id\" href=\"#oext\">oext</a>, &amp;<a class=\"id\" href=\"#end_ext\">end_ext</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end_ext_alen\">end_ext_alen</a> = <a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(&amp;<a class=\"id\" href=\"#end_ext\">end_ext</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_store_pblock\">ext4_ext_store_pblock</a>(&amp;<a class=\"id\" href=\"#end_ext\">end_ext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(<a class=\"id\" href=\"#o_end\">o_end</a>) + <a class=\"id\" href=\"#oext_alen\">oext_alen</a> - <a class=\"id\" href=\"#end_ext_alen\">end_ext_alen</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end_ext\">end_ext</a>.<a class=\"id\" href=\"#ee_block\">ee_block</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#o_end\">o_end</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#oext_alen\">oext_alen</a> - <a class=\"id\" href=\"#end_ext_alen\">end_ext_alen</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#mext_insert_extents\">mext_insert_extents</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#orig_inode\">orig_inode</a>, <a class=\"id\" href=\"#orig_path\">orig_path</a>, <a class=\"id\" href=\"#o_start\">o_start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#o_end\">o_end</a>, &amp;<a class=\"id\" href=\"#start_ext\">start_ext</a>, &amp;<a class=\"id\" href=\"#new_ext\">new_ext</a>, &amp;<a class=\"id\" href=\"#end_ext\">end_ext</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * mext_calc_swap_extents - Calculate extents for extent swapping.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @tmp_dext:<span class=\"ts\"/><span class=\"ts\"/>the extent that will belong to the original inode</span>", 
"<span class=\"comment\"> * @tmp_oext:<span class=\"ts\"/><span class=\"ts\"/>the extent that will belong to the donor inode</span>", 
"<span class=\"comment\"> * @orig_off:<span class=\"ts\"/><span class=\"ts\"/>block offset of original inode</span>", 
"<span class=\"comment\"> * @donor_off:<span class=\"ts\"/><span class=\"ts\"/>block offset of donor inode</span>", 
"<span class=\"comment\"> * @max_count:<span class=\"ts\"/><span class=\"ts\"/>the maximum length of extents</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Return 0 on success, or a negative error value on failure.</span>", 
"<span class=\"comment\"> */</span>", 
"static int", 
"<a class=\"id\" href=\"#mext_calc_swap_extents\">mext_calc_swap_extents</a>(struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#tmp_dext\">tmp_dext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#tmp_oext\">tmp_oext</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#orig_off\">orig_off</a>, <a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#donor_off\">donor_off</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#max_count\">max_count</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#diff\">diff</a>, <a class=\"id\" href=\"#orig_diff\">orig_diff</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> <a class=\"id\" href=\"#dext_old\">dext_old</a>, <a class=\"id\" href=\"#oext_old\">oext_old</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#orig_off\">orig_off</a> != <a class=\"id\" href=\"#donor_off\">donor_off</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* original and donor extents have to cover the same block offset */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#orig_off\">orig_off</a> &lt; <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#tmp_oext\">tmp_oext</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#tmp_oext\">tmp_oext</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#tmp_oext\">tmp_oext</a>) - 1 &lt; <a class=\"id\" href=\"#orig_off\">orig_off</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODATA\">ENODATA</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#orig_off\">orig_off</a> &lt; <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#tmp_dext\">tmp_dext</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#tmp_dext\">tmp_dext</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#tmp_dext\">tmp_dext</a>) - 1 &lt; <a class=\"id\" href=\"#orig_off\">orig_off</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODATA\">ENODATA</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dext_old\">dext_old</a> = *<a class=\"id\" href=\"#tmp_dext\">tmp_dext</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#oext_old\">oext_old</a> = *<a class=\"id\" href=\"#tmp_oext\">tmp_oext</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* When tmp_dext is too large, pick up the target range. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#diff\">diff</a> = <a class=\"id\" href=\"#donor_off\">donor_off</a> - <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#tmp_dext\">tmp_dext</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_store_pblock\">ext4_ext_store_pblock</a>(<a class=\"id\" href=\"#tmp_dext\">tmp_dext</a>, <a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(<a class=\"id\" href=\"#tmp_dext\">tmp_dext</a>) + <a class=\"id\" href=\"#diff\">diff</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp_dext\">tmp_dext</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#tmp_dext\">tmp_dext</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>) + <a class=\"id\" href=\"#diff\">diff</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp_dext\">tmp_dext</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#tmp_dext\">tmp_dext</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a>) - <a class=\"id\" href=\"#diff\">diff</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#max_count\">max_count</a> &lt; <a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#tmp_dext\">tmp_dext</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp_dext\">tmp_dext</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#max_count\">max_count</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#orig_diff\">orig_diff</a> = <a class=\"id\" href=\"#orig_off\">orig_off</a> - <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#tmp_oext\">tmp_oext</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_store_pblock\">ext4_ext_store_pblock</a>(<a class=\"id\" href=\"#tmp_oext\">tmp_oext</a>, <a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(<a class=\"id\" href=\"#tmp_oext\">tmp_oext</a>) + <a class=\"id\" href=\"#orig_diff\">orig_diff</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Adjust extent length if donor extent is larger than orig */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#tmp_dext\">tmp_dext</a>) &gt;", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#tmp_oext\">tmp_oext</a>) - <a class=\"id\" href=\"#orig_diff\">orig_diff</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp_dext\">tmp_dext</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#tmp_oext\">tmp_oext</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a>) -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#orig_diff\">orig_diff</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp_oext\">tmp_oext</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#tmp_dext\">tmp_dext</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#copy_extent_status\">copy_extent_status</a>(&amp;<a class=\"id\" href=\"#oext_old\">oext_old</a>, <a class=\"id\" href=\"#tmp_dext\">tmp_dext</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#copy_extent_status\">copy_extent_status</a>(&amp;<a class=\"id\" href=\"#dext_old\">dext_old</a>, <a class=\"id\" href=\"#tmp_oext\">tmp_oext</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * mext_replace_branches - Replace original extents with new extents</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @handle:<span class=\"ts\"/><span class=\"ts\"/>journal handle</span>", 
"<span class=\"comment\"> * @orig_inode:<span class=\"ts\"/><span class=\"ts\"/>original inode</span>", 
"<span class=\"comment\"> * @donor_inode:<span class=\"ts\"/>donor inode</span>", 
"<span class=\"comment\"> * @from:<span class=\"ts\"/><span class=\"ts\"/>block offset of orig_inode</span>", 
"<span class=\"comment\"> * @count:<span class=\"ts\"/><span class=\"ts\"/>block count to be replaced</span>", 
"<span class=\"comment\"> * @err:<span class=\"ts\"/><span class=\"ts\"/>pointer to save return value</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Replace original inode extents and donor inode extents page by page.</span>", 
"<span class=\"comment\"> * We implement this replacement in the following three steps:</span>", 
"<span class=\"comment\"> * 1. Save the block information of original and donor inodes into</span>", 
"<span class=\"comment\"> *    dummy extents.</span>", 
"<span class=\"comment\"> * 2. Change the block information of original inode to point at the</span>", 
"<span class=\"comment\"> *    donor inode blocks.</span>", 
"<span class=\"comment\"> * 3. Change the block information of donor inode to point at the saved</span>", 
"<span class=\"comment\"> *    original inode blocks in the dummy extents.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Return replaced block count.</span>", 
"<span class=\"comment\"> */</span>", 
"static int", 
"<a class=\"id\" href=\"#mext_replace_branches\">mext_replace_branches</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#orig_inode\">orig_inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#donor_inode\">donor_inode</a>, <a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#from\">from</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#count\">count</a>, int *<a class=\"id\" href=\"#err\">err</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_ext_path\">ext4_ext_path</a> *<a class=\"id\" href=\"#orig_path\">orig_path</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_ext_path\">ext4_ext_path</a> *<a class=\"id\" href=\"#donor_path\">donor_path</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#oext\">oext</a>, *<a class=\"id\" href=\"#dext\">dext</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> <a class=\"id\" href=\"#tmp_dext\">tmp_dext</a>, <a class=\"id\" href=\"#tmp_oext\">tmp_oext</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#orig_off\">orig_off</a> = <a class=\"id\" href=\"#from\">from</a>, <a class=\"id\" href=\"#donor_off\">donor_off</a> = <a class=\"id\" href=\"#from\">from</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#depth\">depth</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#replaced_count\">replaced_count</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#dext_alen\">dext_alen</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Protect extent trees against block allocations via delalloc */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#double_down_write_data_sem\">double_down_write_data_sem</a>(<a class=\"id\" href=\"#orig_inode\">orig_inode</a>, <a class=\"id\" href=\"#donor_inode\">donor_inode</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Get the original extent for the block \"orig_off\" */</span>", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#get_ext_path\">get_ext_path</a>(<a class=\"id\" href=\"#orig_inode\">orig_inode</a>, <a class=\"id\" href=\"#orig_off\">orig_off</a>, &amp;<a class=\"id\" href=\"#orig_path\">orig_path</a>);", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Get the donor extent for the head */</span>", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#get_ext_path\">get_ext_path</a>(<a class=\"id\" href=\"#donor_inode\">donor_inode</a>, <a class=\"id\" href=\"#donor_off\">donor_off</a>, &amp;<a class=\"id\" href=\"#donor_path\">donor_path</a>);", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#depth\">depth</a> = <a class=\"id\" href=\"#ext_depth\">ext_depth</a>(<a class=\"id\" href=\"#orig_inode\">orig_inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#oext\">oext</a> = <a class=\"id\" href=\"#orig_path\">orig_path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp_oext\">tmp_oext</a> = *<a class=\"id\" href=\"#oext\">oext</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#depth\">depth</a> = <a class=\"id\" href=\"#ext_depth\">ext_depth</a>(<a class=\"id\" href=\"#donor_inode\">donor_inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dext\">dext</a> = <a class=\"id\" href=\"#donor_path\">donor_path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp_dext\">tmp_dext</a> = *<a class=\"id\" href=\"#dext\">dext</a>;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#mext_calc_swap_extents\">mext_calc_swap_extents</a>(&amp;<a class=\"id\" href=\"#tmp_dext\">tmp_dext</a>, &amp;<a class=\"id\" href=\"#tmp_oext\">tmp_oext</a>, <a class=\"id\" href=\"#orig_off\">orig_off</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#donor_off\">donor_off</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Loop for the donor extents */</span>", 
"<span class=\"ts\"/>while (1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* The extent for donor must be found. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dext\">dext</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ERROR_INODE\">EXT4_ERROR_INODE</a>(<a class=\"id\" href=\"#donor_inode\">donor_inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"The extent for donor must be found\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#donor_off\">donor_off</a> != <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#tmp_dext\">tmp_dext</a>.<a class=\"id\" href=\"#ee_block\">ee_block</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ERROR_INODE\">EXT4_ERROR_INODE</a>(<a class=\"id\" href=\"#donor_inode\">donor_inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"Donor offset(%u) and the first block of donor \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"extent(%u) should be equal\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#donor_off\">donor_off</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#tmp_dext\">tmp_dext</a>.<a class=\"id\" href=\"#ee_block\">ee_block</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Set donor extent to orig extent */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#mext_leaf_block\">mext_leaf_block</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#orig_inode\">orig_inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#orig_path\">orig_path</a>, &amp;<a class=\"id\" href=\"#tmp_dext\">tmp_dext</a>, &amp;<a class=\"id\" href=\"#orig_off\">orig_off</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (*<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Set orig extent to donor extent */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#mext_leaf_block\">mext_leaf_block</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#donor_inode\">donor_inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#donor_path\">donor_path</a>, &amp;<a class=\"id\" href=\"#tmp_oext\">tmp_oext</a>, &amp;<a class=\"id\" href=\"#donor_off\">donor_off</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (*<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dext_alen\">dext_alen</a> = <a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(&amp;<a class=\"id\" href=\"#tmp_dext\">tmp_dext</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#replaced_count\">replaced_count</a> += <a class=\"id\" href=\"#dext_alen\">dext_alen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#donor_off\">donor_off</a> += <a class=\"id\" href=\"#dext_alen\">dext_alen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#orig_off\">orig_off</a> += <a class=\"id\" href=\"#dext_alen\">dext_alen</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Already moved the expected blocks */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#replaced_count\">replaced_count</a> >= <a class=\"id\" href=\"#count\">count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#orig_path\">orig_path</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_drop_refs\">ext4_ext_drop_refs</a>(<a class=\"id\" href=\"#orig_path\">orig_path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#get_ext_path\">get_ext_path</a>(<a class=\"id\" href=\"#orig_inode\">orig_inode</a>, <a class=\"id\" href=\"#orig_off\">orig_off</a>, &amp;<a class=\"id\" href=\"#orig_path\">orig_path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (*<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#depth\">depth</a> = <a class=\"id\" href=\"#ext_depth\">ext_depth</a>(<a class=\"id\" href=\"#orig_inode\">orig_inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#oext\">oext</a> = <a class=\"id\" href=\"#orig_path\">orig_path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp_oext\">tmp_oext</a> = *<a class=\"id\" href=\"#oext\">oext</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#donor_path\">donor_path</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_drop_refs\">ext4_ext_drop_refs</a>(<a class=\"id\" href=\"#donor_path\">donor_path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#get_ext_path\">get_ext_path</a>(<a class=\"id\" href=\"#donor_inode\">donor_inode</a>, <a class=\"id\" href=\"#donor_off\">donor_off</a>, &amp;<a class=\"id\" href=\"#donor_path\">donor_path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (*<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#depth\">depth</a> = <a class=\"id\" href=\"#ext_depth\">ext_depth</a>(<a class=\"id\" href=\"#donor_inode\">donor_inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dext\">dext</a> = <a class=\"id\" href=\"#donor_path\">donor_path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp_dext\">tmp_dext</a> = *<a class=\"id\" href=\"#dext\">dext</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#mext_calc_swap_extents\">mext_calc_swap_extents</a>(&amp;<a class=\"id\" href=\"#tmp_dext\">tmp_dext</a>, &amp;<a class=\"id\" href=\"#tmp_oext\">tmp_oext</a>, <a class=\"id\" href=\"#orig_off\">orig_off</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#donor_off\">donor_off</a>, <a class=\"id\" href=\"#count\">count</a> - <a class=\"id\" href=\"#replaced_count\">replaced_count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (*<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#orig_path\">orig_path</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_drop_refs\">ext4_ext_drop_refs</a>(<a class=\"id\" href=\"#orig_path\">orig_path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#orig_path\">orig_path</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#donor_path\">donor_path</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_drop_refs\">ext4_ext_drop_refs</a>(<a class=\"id\" href=\"#donor_path\">donor_path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#donor_path\">donor_path</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_invalidate_cache\">ext4_ext_invalidate_cache</a>(<a class=\"id\" href=\"#orig_inode\">orig_inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_invalidate_cache\">ext4_ext_invalidate_cache</a>(<a class=\"id\" href=\"#donor_inode\">donor_inode</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#double_up_write_data_sem\">double_up_write_data_sem</a>(<a class=\"id\" href=\"#orig_inode\">orig_inode</a>, <a class=\"id\" href=\"#donor_inode\">donor_inode</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#replaced_count\">replaced_count</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * move_extent_per_page - Move extent data per page</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @o_filp:<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>file structure of original file</span>", 
"<span class=\"comment\"> * @donor_inode:<span class=\"ts\"/><span class=\"ts\"/>donor inode</span>", 
"<span class=\"comment\"> * @orig_page_offset:<span class=\"ts\"/><span class=\"ts\"/>page index on original file</span>", 
"<span class=\"comment\"> * @data_offset_in_page:<span class=\"ts\"/>block index where data swapping starts</span>", 
"<span class=\"comment\"> * @block_len_in_page:<span class=\"ts\"/><span class=\"ts\"/>the number of blocks to be swapped</span>", 
"<span class=\"comment\"> * @uninit:<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>orig extent is uninitialized or not</span>", 
"<span class=\"comment\"> * @err:<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>pointer to save return value</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Save the data in original inode blocks and replace original inode extents</span>", 
"<span class=\"comment\"> * with donor inode extents by calling mext_replace_branches().</span>", 
"<span class=\"comment\"> * Finally, write out the saved data in new original inode blocks. Return</span>", 
"<span class=\"comment\"> * replaced block count.</span>", 
"<span class=\"comment\"> */</span>", 
"static int", 
"<a class=\"id\" href=\"#move_extent_per_page\">move_extent_per_page</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#o_filp\">o_filp</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#donor_inode\">donor_inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#pgoff_t\">pgoff_t</a> <a class=\"id\" href=\"#orig_page_offset\">orig_page_offset</a>, int <a class=\"id\" href=\"#data_offset_in_page\">data_offset_in_page</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  int <a class=\"id\" href=\"#block_len_in_page\">block_len_in_page</a>, int <a class=\"id\" href=\"#uninit\">uninit</a>, int *<a class=\"id\" href=\"#err\">err</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#orig_inode\">orig_inode</a> = <a class=\"id\" href=\"#o_filp\">o_filp</a>-><a class=\"id\" href=\"#f_dentry\">f_dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#address_space\">address_space</a> *<a class=\"id\" href=\"#mapping\">mapping</a> = <a class=\"id\" href=\"#orig_inode\">orig_inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#address_space_operations\">address_space_operations</a> *<a class=\"id\" href=\"#a_ops\">a_ops</a> = <a class=\"id\" href=\"#mapping\">mapping</a>-><a class=\"id\" href=\"#a_ops\">a_ops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#orig_blk_offset\">orig_blk_offset</a>;", 
"<span class=\"ts\"/>long long <a class=\"id\" href=\"#offs\">offs</a> = <a class=\"id\" href=\"#orig_page_offset\">orig_page_offset</a> << <a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#blocksize\">blocksize</a> = <a class=\"id\" href=\"#orig_inode\">orig_inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#w_flags\">w_flags</a> = 0;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#tmp_data_size\">tmp_data_size</a>, <a class=\"id\" href=\"#data_size\">data_size</a>, <a class=\"id\" href=\"#replaced_size\">replaced_size</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#fsdata\">fsdata</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#jblocks\">jblocks</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err2\">err2</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#replaced_count\">replaced_count</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#blocks_per_page\">blocks_per_page</a> = <a class=\"id\" href=\"#PAGE_CACHE_SIZE\">PAGE_CACHE_SIZE</a> >> <a class=\"id\" href=\"#orig_inode\">orig_inode</a>-><a class=\"id\" href=\"#i_blkbits\">i_blkbits</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * It needs twice the amount of ordinary journal buffers because</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * inode and donor_inode may change each different metadata blocks.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jblocks\">jblocks</a> = <a class=\"id\" href=\"#ext4_writepage_trans_blocks\">ext4_writepage_trans_blocks</a>(<a class=\"id\" href=\"#orig_inode\">orig_inode</a>) * 2;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#ext4_journal_start\">ext4_journal_start</a>(<a class=\"id\" href=\"#orig_inode\">orig_inode</a>, <a class=\"id\" href=\"#jblocks\">jblocks</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#segment_eq\">segment_eq</a>(<a class=\"id\" href=\"#get_fs\">get_fs</a>(), <a class=\"id\" href=\"#KERNEL_DS\">KERNEL_DS</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w_flags\">w_flags</a> |= <a class=\"id\" href=\"#AOP_FLAG_UNINTERRUPTIBLE\">AOP_FLAG_UNINTERRUPTIBLE</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#orig_blk_offset\">orig_blk_offset</a> = <a class=\"id\" href=\"#orig_page_offset\">orig_page_offset</a> * <a class=\"id\" href=\"#blocks_per_page\">blocks_per_page</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data_offset_in_page\">data_offset_in_page</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If orig extent is uninitialized one,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * it's not necessary force the page into memory</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and then force it to be written out again.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Just swap data blocks between orig and donor.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#uninit\">uninit</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#replaced_count\">replaced_count</a> = <a class=\"id\" href=\"#mext_replace_branches\">mext_replace_branches</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#orig_inode\">orig_inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#donor_inode\">donor_inode</a>, <a class=\"id\" href=\"#orig_blk_offset\">orig_blk_offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#block_len_in_page\">block_len_in_page</a>, <a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out2\">out2</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offs\">offs</a> = (long long)<a class=\"id\" href=\"#orig_blk_offset\">orig_blk_offset</a> << <a class=\"id\" href=\"#orig_inode\">orig_inode</a>-><a class=\"id\" href=\"#i_blkbits\">i_blkbits</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Calculate data_size */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#orig_blk_offset\">orig_blk_offset</a> + <a class=\"id\" href=\"#block_len_in_page\">block_len_in_page</a> - 1) ==", 
"<span class=\"ts\"/>    ((<a class=\"id\" href=\"#orig_inode\">orig_inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a> - 1) >> <a class=\"id\" href=\"#orig_inode\">orig_inode</a>-><a class=\"id\" href=\"#i_blkbits\">i_blkbits</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Replace the last block */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp_data_size\">tmp_data_size</a> = <a class=\"id\" href=\"#orig_inode\">orig_inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a> &amp; (<a class=\"id\" href=\"#blocksize\">blocksize</a> - 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If data_size equal zero, it shows data_size is multiples of</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * blocksize. So we set appropriate value.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tmp_data_size\">tmp_data_size</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp_data_size\">tmp_data_size</a> = <a class=\"id\" href=\"#blocksize\">blocksize</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data_size\">data_size</a> = <a class=\"id\" href=\"#tmp_data_size\">tmp_data_size</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#block_len_in_page\">block_len_in_page</a> - 1) << <a class=\"id\" href=\"#orig_inode\">orig_inode</a>-><a class=\"id\" href=\"#i_blkbits\">i_blkbits</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data_size\">data_size</a> = <a class=\"id\" href=\"#block_len_in_page\">block_len_in_page</a> << <a class=\"id\" href=\"#orig_inode\">orig_inode</a>-><a class=\"id\" href=\"#i_blkbits\">i_blkbits</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#replaced_size\">replaced_size</a> = <a class=\"id\" href=\"#data_size\">data_size</a>;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#a_ops\">a_ops</a>-><a class=\"id\" href=\"#write_begin\">write_begin</a>(<a class=\"id\" href=\"#o_filp\">o_filp</a>, <a class=\"id\" href=\"#mapping\">mapping</a>, <a class=\"id\" href=\"#offs\">offs</a>, <a class=\"id\" href=\"#data_size\">data_size</a>, <a class=\"id\" href=\"#w_flags\">w_flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> &amp;<a class=\"id\" href=\"#page\">page</a>, &amp;<a class=\"id\" href=\"#fsdata\">fsdata</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(*<a class=\"id\" href=\"#err\">err</a> &lt; 0))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#PageUptodate\">PageUptodate</a>(<a class=\"id\" href=\"#page\">page</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mapping\">mapping</a>-><a class=\"id\" href=\"#a_ops\">a_ops</a>-><a class=\"id\" href=\"#readpage\">readpage</a>(<a class=\"id\" href=\"#o_filp\">o_filp</a>, <a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lock_page\">lock_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * try_to_release_page() doesn't call releasepage in writeback mode.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We should care about the order of writing to the same file</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * by multiple move extent processes.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * It needs to call wait_on_page_writeback() to wait for the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * writeback of the page.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#PageWriteback\">PageWriteback</a>(<a class=\"id\" href=\"#page\">page</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wait_on_page_writeback\">wait_on_page_writeback</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Release old bh and drop refs */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#try_to_release_page\">try_to_release_page</a>(<a class=\"id\" href=\"#page\">page</a>, 0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#replaced_count\">replaced_count</a> = <a class=\"id\" href=\"#mext_replace_branches\">mext_replace_branches</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#orig_inode\">orig_inode</a>, <a class=\"id\" href=\"#donor_inode\">donor_inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#orig_blk_offset\">orig_blk_offset</a>, <a class=\"id\" href=\"#block_len_in_page\">block_len_in_page</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#err2\">err2</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err2\">err2</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#replaced_count\">replaced_count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#block_len_in_page\">block_len_in_page</a> = <a class=\"id\" href=\"#replaced_count\">replaced_count</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#replaced_size\">replaced_size</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#block_len_in_page\">block_len_in_page</a> << <a class=\"id\" href=\"#orig_inode\">orig_inode</a>-><a class=\"id\" href=\"#i_blkbits\">i_blkbits</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#page_has_buffers\">page_has_buffers</a>(<a class=\"id\" href=\"#page\">page</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#create_empty_buffers\">create_empty_buffers</a>(<a class=\"id\" href=\"#page\">page</a>, 1 << <a class=\"id\" href=\"#orig_inode\">orig_inode</a>-><a class=\"id\" href=\"#i_blkbits\">i_blkbits</a>, 0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#page_buffers\">page_buffers</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#data_offset_in_page\">data_offset_in_page</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_this_page\">b_this_page</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#block_len_in_page\">block_len_in_page</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_get_block\">ext4_get_block</a>(<a class=\"id\" href=\"#orig_inode\">orig_inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#sector_t\">sector_t</a>)(<a class=\"id\" href=\"#orig_blk_offset\">orig_blk_offset</a> + <a class=\"id\" href=\"#i\">i</a>), <a class=\"id\" href=\"#bh\">bh</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (*<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_this_page\">b_this_page</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_this_page\">b_this_page</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#a_ops\">a_ops</a>-><a class=\"id\" href=\"#write_end\">write_end</a>(<a class=\"id\" href=\"#o_filp\">o_filp</a>, <a class=\"id\" href=\"#mapping\">mapping</a>, <a class=\"id\" href=\"#offs\">offs</a>, <a class=\"id\" href=\"#data_size\">data_size</a>, <a class=\"id\" href=\"#replaced_size\">replaced_size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#fsdata\">fsdata</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#page\">page</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#PageLocked\">PageLocked</a>(<a class=\"id\" href=\"#page\">page</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_page\">unlock_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_cache_release\">page_cache_release</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_journal_stop\">ext4_journal_stop</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out2\">out2</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_journal_stop\">ext4_journal_stop</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err2\">err2</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#err2\">err2</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#replaced_count\">replaced_count</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * mext_check_arguments - Check whether move extent can be done</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @orig_inode:<span class=\"ts\"/><span class=\"ts\"/>original inode</span>", 
"<span class=\"comment\"> * @donor_inode:<span class=\"ts\"/>donor inode</span>", 
"<span class=\"comment\"> * @orig_start:<span class=\"ts\"/><span class=\"ts\"/>logical start offset in block for orig</span>", 
"<span class=\"comment\"> * @donor_start:<span class=\"ts\"/>logical start offset in block for donor</span>", 
"<span class=\"comment\"> * @len:<span class=\"ts\"/><span class=\"ts\"/>the number of blocks to be moved</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Check the arguments of ext4_move_extents() whether the files can be</span>", 
"<span class=\"comment\"> * exchanged with each other.</span>", 
"<span class=\"comment\"> * Return 0 on success, or a negative error value on failure.</span>", 
"<span class=\"comment\"> */</span>", 
"static int", 
"<a class=\"id\" href=\"#mext_check_arguments\">mext_check_arguments</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#orig_inode\">orig_inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#donor_inode\">donor_inode</a>, <a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#orig_start\">orig_start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#donor_start\">donor_start</a>, <a class=\"id\" href=\"#__u64\">__u64</a> *<a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#orig_blocks\">orig_blocks</a>, <a class=\"id\" href=\"#donor_blocks\">donor_blocks</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#blkbits\">blkbits</a> = <a class=\"id\" href=\"#orig_inode\">orig_inode</a>-><a class=\"id\" href=\"#i_blkbits\">i_blkbits</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#blocksize\">blocksize</a> = 1 << <a class=\"id\" href=\"#blkbits\">blkbits</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#donor_inode\">donor_inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a> &amp; (<a class=\"id\" href=\"#S_ISUID\">S_ISUID</a>|<a class=\"id\" href=\"#S_ISGID\">S_ISGID</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_debug\">ext4_debug</a>(\"ext4 move extent: suid or sgid is set\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \" to donor file [ino:orig %lu, donor %lu]\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#orig_inode\">orig_inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>, <a class=\"id\" href=\"#donor_inode\">donor_inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_IMMUTABLE\">IS_IMMUTABLE</a>(<a class=\"id\" href=\"#donor_inode\">donor_inode</a>) || <a class=\"id\" href=\"#IS_APPEND\">IS_APPEND</a>(<a class=\"id\" href=\"#donor_inode\">donor_inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Ext4 move extent does not support swapfile */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_SWAPFILE\">IS_SWAPFILE</a>(<a class=\"id\" href=\"#orig_inode\">orig_inode</a>) || <a class=\"id\" href=\"#IS_SWAPFILE\">IS_SWAPFILE</a>(<a class=\"id\" href=\"#donor_inode\">donor_inode</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_debug\">ext4_debug</a>(\"ext4 move extent: The argument files should \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"not be swapfile [ino:orig %lu, donor %lu]\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#orig_inode\">orig_inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>, <a class=\"id\" href=\"#donor_inode\">donor_inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Files should be in the same ext4 FS */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#orig_inode\">orig_inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a> != <a class=\"id\" href=\"#donor_inode\">donor_inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_debug\">ext4_debug</a>(\"ext4 move extent: The argument files \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"should be in same FS [ino:orig %lu, donor %lu]\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#orig_inode\">orig_inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>, <a class=\"id\" href=\"#donor_inode\">donor_inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Ext4 move extent supports only extent based file */</span>", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#ext4_test_inode_flag\">ext4_test_inode_flag</a>(<a class=\"id\" href=\"#orig_inode\">orig_inode</a>, <a class=\"id\" href=\"#EXT4_INODE_EXTENTS\">EXT4_INODE_EXTENTS</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_debug\">ext4_debug</a>(\"ext4 move extent: orig file is not extents \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"based file [ino:orig %lu]\\n\", <a class=\"id\" href=\"#orig_inode\">orig_inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EOPNOTSUPP\">EOPNOTSUPP</a>;", 
"<span class=\"ts\"/>} else if (!(<a class=\"id\" href=\"#ext4_test_inode_flag\">ext4_test_inode_flag</a>(<a class=\"id\" href=\"#donor_inode\">donor_inode</a>, <a class=\"id\" href=\"#EXT4_INODE_EXTENTS\">EXT4_INODE_EXTENTS</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_debug\">ext4_debug</a>(\"ext4 move extent: donor file is not extents \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"based file [ino:donor %lu]\\n\", <a class=\"id\" href=\"#donor_inode\">donor_inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EOPNOTSUPP\">EOPNOTSUPP</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if ((!<a class=\"id\" href=\"#orig_inode\">orig_inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a>) || (!<a class=\"id\" href=\"#donor_inode\">donor_inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_debug\">ext4_debug</a>(\"ext4 move extent: File size is 0 byte\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Start offset should be same */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#orig_start\">orig_start</a> != <a class=\"id\" href=\"#donor_start\">donor_start</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_debug\">ext4_debug</a>(\"ext4 move extent: orig and donor's start \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"offset are not same [ino:orig %lu, donor %lu]\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#orig_inode\">orig_inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>, <a class=\"id\" href=\"#donor_inode\">donor_inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#orig_start\">orig_start</a> &gt; <a class=\"id\" href=\"#EXT_MAX_BLOCK\">EXT_MAX_BLOCK</a>) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#donor_start\">donor_start</a> &gt; <a class=\"id\" href=\"#EXT_MAX_BLOCK\">EXT_MAX_BLOCK</a>) ||", 
"<span class=\"ts\"/>    (*<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#EXT_MAX_BLOCK\">EXT_MAX_BLOCK</a>) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#orig_start\">orig_start</a> + *<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#EXT_MAX_BLOCK\">EXT_MAX_BLOCK</a>))  {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_debug\">ext4_debug</a>(\"ext4 move extent: Can't handle over [%u] blocks \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"[ino:orig %lu, donor %lu]\\n\", <a class=\"id\" href=\"#EXT_MAX_BLOCK\">EXT_MAX_BLOCK</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#orig_inode\">orig_inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>, <a class=\"id\" href=\"#donor_inode\">donor_inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#orig_inode\">orig_inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a> &gt; <a class=\"id\" href=\"#donor_inode\">donor_inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#donor_blocks\">donor_blocks</a> = (<a class=\"id\" href=\"#donor_inode\">donor_inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a> + <a class=\"id\" href=\"#blocksize\">blocksize</a> - 1) >> <a class=\"id\" href=\"#blkbits\">blkbits</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* TODO: eliminate this artificial restriction */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#orig_start\">orig_start</a> >= <a class=\"id\" href=\"#donor_blocks\">donor_blocks</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_debug\">ext4_debug</a>(\"ext4 move extent: orig start offset \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"[%llu] should be less than donor file blocks \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"[%u] [ino:orig %lu, donor %lu]\\n\",", 
];
xr_frag_insert('l/63/9146ec277e512adf8d0678af60e52a3df06a75.xr', __xr_tmp);
