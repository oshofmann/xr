var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   int <a class=\"id\" href=\"#newoptlen\">newoptlen</a>);", 
"struct <a class=\"id\" href=\"#ipv6_txoptions\">ipv6_txoptions</a> *<a class=\"id\" href=\"#ipv6_fixup_options\">ipv6_fixup_options</a>(struct <a class=\"id\" href=\"#ipv6_txoptions\">ipv6_txoptions</a> *<a class=\"id\" href=\"#opt_space\">opt_space</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#ipv6_txoptions\">ipv6_txoptions</a> *<a class=\"id\" href=\"#opt\">opt</a>);", 
"", 
"extern int <a class=\"id\" href=\"#ipv6_opt_accepted\">ipv6_opt_accepted</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"int <a class=\"id\" href=\"#ip6_frag_nqueues\">ip6_frag_nqueues</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>);", 
"int <a class=\"id\" href=\"#ip6_frag_mem\">ip6_frag_mem</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IPV6_FRAG_HIGH_THRESH\">IPV6_FRAG_HIGH_THRESH</a><span class=\"ts\"/>(256 * 1024)<span class=\"ts\"/><span class=\"comment\">/* 262144 */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IPV6_FRAG_LOW_THRESH\">IPV6_FRAG_LOW_THRESH</a><span class=\"ts\"/>(192 * 1024)<span class=\"ts\"/><span class=\"comment\">/* 196608 */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IPV6_FRAG_TIMEOUT\">IPV6_FRAG_TIMEOUT</a><span class=\"ts\"/>(60 * <a class=\"id\" href=\"#HZ\">HZ</a>)<span class=\"ts\"/><span class=\"comment\">/* 60 seconds */</span>", 
"", 
"extern int <a class=\"id\" href=\"#__ipv6_addr_type\">__ipv6_addr_type</a>(const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>);", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ipv6_addr_type\">ipv6_addr_type</a>(const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__ipv6_addr_type\">__ipv6_addr_type</a>(<a class=\"id\" href=\"#addr\">addr</a>) &amp; 0xffff;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ipv6_addr_scope\">ipv6_addr_scope</a>(const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__ipv6_addr_type\">__ipv6_addr_type</a>(<a class=\"id\" href=\"#addr\">addr</a>) &amp; <a class=\"id\" href=\"#IPV6_ADDR_SCOPE_MASK\">IPV6_ADDR_SCOPE_MASK</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#__ipv6_addr_src_scope\">__ipv6_addr_src_scope</a>(int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#IPV6_ADDR_ANY\">IPV6_ADDR_ANY</a> ? <a class=\"id\" href=\"#__IPV6_ADDR_SCOPE_INVALID\">__IPV6_ADDR_SCOPE_INVALID</a> : (<a class=\"id\" href=\"#type\">type</a> >> 16));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ipv6_addr_src_scope\">ipv6_addr_src_scope</a>(const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__ipv6_addr_src_scope\">__ipv6_addr_src_scope</a>(<a class=\"id\" href=\"#__ipv6_addr_type\">__ipv6_addr_type</a>(<a class=\"id\" href=\"#addr\">addr</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ipv6_addr_cmp\">ipv6_addr_cmp</a>(const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#a1\">a1</a>, const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#a2\">a2</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#a1\">a1</a>, <a class=\"id\" href=\"#a2\">a2</a>, sizeof(struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int", 
"<a class=\"id\" href=\"#ipv6_masked_addr_cmp\">ipv6_masked_addr_cmp</a>(const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#a1\">a1</a>, const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#m\">m</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#a2\">a2</a>)", 
"{", 
"<span class=\"ts\"/>return (!!(((<a class=\"id\" href=\"#a1\">a1</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[0] ^ <a class=\"id\" href=\"#a2\">a2</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[0]) &amp; <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[0]) |", 
"<span class=\"ts\"/><span class=\"ts\"/>   ((<a class=\"id\" href=\"#a1\">a1</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[1] ^ <a class=\"id\" href=\"#a2\">a2</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[1]) &amp; <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[1]) |", 
"<span class=\"ts\"/><span class=\"ts\"/>   ((<a class=\"id\" href=\"#a1\">a1</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[2] ^ <a class=\"id\" href=\"#a2\">a2</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[2]) &amp; <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[2]) |", 
"<span class=\"ts\"/><span class=\"ts\"/>   ((<a class=\"id\" href=\"#a1\">a1</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[3] ^ <a class=\"id\" href=\"#a2\">a2</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[3]) &amp; <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[3])));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#a1\">a1</a>, const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#a2\">a2</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#a1\">a1</a>, <a class=\"id\" href=\"#a2\">a2</a>, sizeof(struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ipv6_addr_prefix\">ipv6_addr_prefix</a>(struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#pfx\">pfx</a>, ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    int <a class=\"id\" href=\"#plen\">plen</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* caller must guarantee 0 &lt;= plen &lt;= 128 */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#o\">o</a> = <a class=\"id\" href=\"#plen\">plen</a> >> 3,", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#b\">b</a> = <a class=\"id\" href=\"#plen\">plen</a> &amp; 0x7;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#pfx\">pfx</a>-><a class=\"id\" href=\"#s6_addr\">s6_addr</a>, 0, sizeof(<a class=\"id\" href=\"#pfx\">pfx</a>-><a class=\"id\" href=\"#s6_addr\">s6_addr</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#pfx\">pfx</a>-><a class=\"id\" href=\"#s6_addr\">s6_addr</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#o\">o</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#b\">b</a> != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pfx\">pfx</a>-><a class=\"id\" href=\"#s6_addr\">s6_addr</a>[<a class=\"id\" href=\"#o\">o</a>] = <a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#s6_addr\">s6_addr</a>[<a class=\"id\" href=\"#o\">o</a>] &amp; (0xff00 >> <a class=\"id\" href=\"#b\">b</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ipv6_addr_set\">ipv6_addr_set</a>(struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>, ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#w1\">w1</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#w2\">w2</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#w3\">w3</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#w4\">w4</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[0] = <a class=\"id\" href=\"#w1\">w1</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[1] = <a class=\"id\" href=\"#w2\">w2</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[2] = <a class=\"id\" href=\"#w3\">w3</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[3] = <a class=\"id\" href=\"#w4\">w4</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#a1\">a1</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#a2\">a2</a>)", 
"{", 
"<span class=\"ts\"/>return (((<a class=\"id\" href=\"#a1\">a1</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[0] ^ <a class=\"id\" href=\"#a2\">a2</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[0]) |", 
"<span class=\"ts\"/><span class=\"ts\"/> (<a class=\"id\" href=\"#a1\">a1</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[1] ^ <a class=\"id\" href=\"#a2\">a2</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[1]) |", 
"<span class=\"ts\"/><span class=\"ts\"/> (<a class=\"id\" href=\"#a1\">a1</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[2] ^ <a class=\"id\" href=\"#a2\">a2</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[2]) |", 
"<span class=\"ts\"/><span class=\"ts\"/> (<a class=\"id\" href=\"#a1\">a1</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[3] ^ <a class=\"id\" href=\"#a2\">a2</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[3])) == 0);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#__ipv6_prefix_equal\">__ipv6_prefix_equal</a>(const <a class=\"id\" href=\"#__be32\">__be32</a> *<a class=\"id\" href=\"#a1\">a1</a>, const <a class=\"id\" href=\"#__be32\">__be32</a> *<a class=\"id\" href=\"#a2\">a2</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      unsigned int <a class=\"id\" href=\"#prefixlen\">prefixlen</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#pdw\">pdw</a>, <a class=\"id\" href=\"#pbi\">pbi</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* check complete u32 in prefix */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pdw\">pdw</a> = <a class=\"id\" href=\"#prefixlen\">prefixlen</a> >> 5;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pdw\">pdw</a> && <a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#a1\">a1</a>, <a class=\"id\" href=\"#a2\">a2</a>, <a class=\"id\" href=\"#pdw\">pdw</a> << 2))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* check incomplete u32 in prefix */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pbi\">pbi</a> = <a class=\"id\" href=\"#prefixlen\">prefixlen</a> &amp; 0x1f;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pbi\">pbi</a> && ((<a class=\"id\" href=\"#a1\">a1</a>[<a class=\"id\" href=\"#pdw\">pdw</a>] ^ <a class=\"id\" href=\"#a2\">a2</a>[<a class=\"id\" href=\"#pdw\">pdw</a>]) &amp; <a class=\"id\" href=\"#htonl\">htonl</a>((0xffffffff) << (32 - <a class=\"id\" href=\"#pbi\">pbi</a>))))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ipv6_prefix_equal\">ipv6_prefix_equal</a>(const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#a1\">a1</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#a2\">a2</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    unsigned int <a class=\"id\" href=\"#prefixlen\">prefixlen</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__ipv6_prefix_equal\">__ipv6_prefix_equal</a>(<a class=\"id\" href=\"#a1\">a1</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>, <a class=\"id\" href=\"#a2\">a2</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#prefixlen\">prefixlen</a>);", 
"}", 
"", 
"struct <a class=\"id\" href=\"#inet_frag_queue\">inet_frag_queue</a>;", 
"", 
"enum <a class=\"id\" href=\"#ip6_defrag_users\">ip6_defrag_users</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IP6_DEFRAG_LOCAL_DELIVER\">IP6_DEFRAG_LOCAL_DELIVER</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IP6_DEFRAG_CONNTRACK_IN\">IP6_DEFRAG_CONNTRACK_IN</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__IP6_DEFRAG_CONNTRACK_IN\">__IP6_DEFRAG_CONNTRACK_IN</a><span class=\"ts\"/>= <a class=\"id\" href=\"#IP6_DEFRAG_CONNTRACK_IN\">IP6_DEFRAG_CONNTRACK_IN</a> + <a class=\"id\" href=\"#USHRT_MAX\">USHRT_MAX</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IP6_DEFRAG_CONNTRACK_OUT\">IP6_DEFRAG_CONNTRACK_OUT</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__IP6_DEFRAG_CONNTRACK_OUT\">__IP6_DEFRAG_CONNTRACK_OUT</a><span class=\"ts\"/>= <a class=\"id\" href=\"#IP6_DEFRAG_CONNTRACK_OUT\">IP6_DEFRAG_CONNTRACK_OUT</a> + <a class=\"id\" href=\"#USHRT_MAX\">USHRT_MAX</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IP6_DEFRAG_CONNTRACK_BRIDGE_IN\">IP6_DEFRAG_CONNTRACK_BRIDGE_IN</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__IP6_DEFRAG_CONNTRACK_BRIDGE_IN\">__IP6_DEFRAG_CONNTRACK_BRIDGE_IN</a> = <a class=\"id\" href=\"#IP6_DEFRAG_CONNTRACK_BRIDGE_IN\">IP6_DEFRAG_CONNTRACK_BRIDGE_IN</a> + <a class=\"id\" href=\"#USHRT_MAX\">USHRT_MAX</a>,", 
"};", 
"", 
"struct <a class=\"id\" href=\"#ip6_create_arg\">ip6_create_arg</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#user\">user</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#src\">src</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#dst\">dst</a>;", 
"};", 
"", 
"void <a class=\"id\" href=\"#ip6_frag_init\">ip6_frag_init</a>(struct <a class=\"id\" href=\"#inet_frag_queue\">inet_frag_queue</a> *<a class=\"id\" href=\"#q\">q</a>, void *<a class=\"id\" href=\"#a\">a</a>);", 
"int <a class=\"id\" href=\"#ip6_frag_match\">ip6_frag_match</a>(struct <a class=\"id\" href=\"#inet_frag_queue\">inet_frag_queue</a> *<a class=\"id\" href=\"#q\">q</a>, void *<a class=\"id\" href=\"#a\">a</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ipv6_addr_any\">ipv6_addr_any</a>(const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#a\">a</a>)", 
"{", 
"<span class=\"ts\"/>return ((<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[0] | <a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[1] | ", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[2] | <a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[3] ) == 0); ", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ipv6_addr_loopback\">ipv6_addr_loopback</a>(const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#a\">a</a>)", 
"{", 
"<span class=\"ts\"/>return ((<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[0] | <a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[1] |", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[2] | (<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[3] ^ <a class=\"id\" href=\"#htonl\">htonl</a>(1))) == 0);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ipv6_addr_v4mapped\">ipv6_addr_v4mapped</a>(const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#a\">a</a>)", 
"{", 
"<span class=\"ts\"/>return ((<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[0] | <a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[1] |", 
"<span class=\"ts\"/><span class=\"ts\"/> (<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[2] ^ <a class=\"id\" href=\"#htonl\">htonl</a>(0x0000ffff))) == 0);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Check for a RFC 4843 ORCHID address</span>", 
"<span class=\"comment\"> * (Overlay Routable Cryptographic Hash Identifiers)</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ipv6_addr_orchid\">ipv6_addr_orchid</a>(const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#a\">a</a>)", 
"{", 
"<span class=\"ts\"/>return ((<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[0] &amp; <a class=\"id\" href=\"#htonl\">htonl</a>(0xfffffff0))", 
"<span class=\"ts\"/><span class=\"ts\"/>== <a class=\"id\" href=\"#htonl\">htonl</a>(0x20010010));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ipv6_addr_set_v4mapped\">ipv6_addr_set_v4mapped</a>(const <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#v4mapped\">v4mapped</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_set\">ipv6_addr_set</a>(<a class=\"id\" href=\"#v4mapped\">v4mapped</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#htonl\">htonl</a>(0x0000FFFF),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * find the first different bit between two addresses</span>", 
"<span class=\"comment\"> * length of address must be a multiple of 32bits</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#__ipv6_addr_diff\">__ipv6_addr_diff</a>(const void *<a class=\"id\" href=\"#token1\">token1</a>, const void *<a class=\"id\" href=\"#token2\">token2</a>, int <a class=\"id\" href=\"#addrlen\">addrlen</a>)", 
"{", 
"<span class=\"ts\"/>const <a class=\"id\" href=\"#__be32\">__be32</a> *<a class=\"id\" href=\"#a1\">a1</a> = <a class=\"id\" href=\"#token1\">token1</a>, *<a class=\"id\" href=\"#a2\">a2</a> = <a class=\"id\" href=\"#token2\">token2</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addrlen\">addrlen</a> >>= 2;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#addrlen\">addrlen</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#xb\">xb</a> = <a class=\"id\" href=\"#a1\">a1</a>[<a class=\"id\" href=\"#i\">i</a>] ^ <a class=\"id\" href=\"#a2\">a2</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#xb\">xb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#i\">i</a> * 32 + 31 - <a class=\"id\" href=\"#__fls\">__fls</a>(<a class=\"id\" href=\"#ntohl\">ntohl</a>(<a class=\"id\" href=\"#xb\">xb</a>));", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>we should *never* get to this point since that </span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>would mean the addrs are equal</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>However, we do get to it 8) And exacly, when</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>addresses are equal 8)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>ip route add 1111::/128 via ...</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>ip route add 1111::/64 via ...</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>and we are here.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Ideally, this function should stop comparison</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>at prefix length. It does not, but it is still OK,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>if returned value is greater than prefix length.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>--ANK (980803)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#addrlen\">addrlen</a> << 5);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ipv6_addr_diff\">ipv6_addr_diff</a>(const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#a1\">a1</a>, const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#a2\">a2</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__ipv6_addr_diff\">__ipv6_addr_diff</a>(<a class=\"id\" href=\"#a1\">a1</a>, <a class=\"id\" href=\"#a2\">a2</a>, sizeof(struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#__inline__\">__inline__</a> void <a class=\"id\" href=\"#ipv6_select_ident\">ipv6_select_ident</a>(struct <a class=\"id\" href=\"#frag_hdr\">frag_hdr</a> *<a class=\"id\" href=\"#fhdr\">fhdr</a>)", 
"{", 
"<span class=\"ts\"/>static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ipv6_fragmentation_id\">ipv6_fragmentation_id</a> = 1;", 
"<span class=\"ts\"/>static <a class=\"id\" href=\"#DEFINE_SPINLOCK\">DEFINE_SPINLOCK</a>(<a class=\"id\" href=\"#ip6_id_lock\">ip6_id_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#ip6_id_lock\">ip6_id_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fhdr\">fhdr</a>-><a class=\"id\" href=\"#identification\">identification</a> = <a class=\"id\" href=\"#htonl\">htonl</a>(<a class=\"id\" href=\"#ipv6_fragmentation_id\">ipv6_fragmentation_id</a>);", 
"<span class=\"ts\"/>if (++<a class=\"id\" href=\"#ipv6_fragmentation_id\">ipv6_fragmentation_id</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_fragmentation_id\">ipv6_fragmentation_id</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#ip6_id_lock\">ip6_id_lock</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Prototypes exported by ipv6</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>rcv function (called from netdevice level)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"extern int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_rcv\">ipv6_rcv</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#packet_type\">packet_type</a> *<a class=\"id\" href=\"#pt\">pt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#orig_dev\">orig_dev</a>);", 
"", 
"extern int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip6_rcv_finish\">ip6_rcv_finish</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>upper-layer output functions</span>", 
"<span class=\"comment\"> */</span>", 
"extern int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip6_xmit\">ip6_xmit</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#fl\">fl</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#ipv6_txoptions\">ipv6_txoptions</a> *<a class=\"id\" href=\"#opt\">opt</a>);", 
"", 
"extern int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip6_nd_hdr\">ip6_nd_hdr</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#saddr\">saddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#daddr\">daddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   int <a class=\"id\" href=\"#proto\">proto</a>, int <a class=\"id\" href=\"#len\">len</a>);", 
"", 
"extern int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip6_find_1stfragopt\">ip6_find_1stfragopt</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#u8\">u8</a> **<a class=\"id\" href=\"#nexthdr\">nexthdr</a>);", 
"", 
"extern int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip6_append_data\">ip6_append_data</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#getfrag\">getfrag</a>(void *<a class=\"id\" href=\"#from\">from</a>, char *<a class=\"id\" href=\"#to\">to</a>, int <a class=\"id\" href=\"#offset\">offset</a>, int <a class=\"id\" href=\"#len\">len</a>, int <a class=\"id\" href=\"#odd\">odd</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>    <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#from\">from</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#length\">length</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#transhdrlen\">transhdrlen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#hlimit\">hlimit</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#tclass\">tclass</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_txoptions\">ipv6_txoptions</a> *<a class=\"id\" href=\"#opt\">opt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#fl\">fl</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> *<a class=\"id\" href=\"#rt\">rt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#dontfrag\">dontfrag</a>);", 
"", 
"extern int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip6_push_pending_frames\">ip6_push_pending_frames</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"extern void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip6_flush_pending_frames\">ip6_flush_pending_frames</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"extern int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip6_dst_lookup\">ip6_dst_lookup</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> **<a class=\"id\" href=\"#dst\">dst</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#fl\">fl</a>);", 
"extern int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip6_dst_blackhole\">ip6_dst_blackhole</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> **<a class=\"id\" href=\"#dst\">dst</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#fl\">fl</a>);", 
"extern int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip6_sk_dst_lookup\">ip6_sk_dst_lookup</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> **<a class=\"id\" href=\"#dst\">dst</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#fl\">fl</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>skb processing functions</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"extern int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip6_output\">ip6_output</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"extern int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip6_forward\">ip6_forward</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"extern int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip6_input\">ip6_input</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"extern int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip6_mc_input\">ip6_mc_input</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"extern int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__ip6_local_out\">__ip6_local_out</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"extern int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip6_local_out\">ip6_local_out</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Extension header (options) processing</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"extern void <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_push_nfrag_opts\">ipv6_push_nfrag_opts</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#ipv6_txoptions\">ipv6_txoptions</a> *<a class=\"id\" href=\"#opt\">opt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#proto\">proto</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> **<a class=\"id\" href=\"#daddr_p\">daddr_p</a>);", 
"extern void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_push_frag_opts\">ipv6_push_frag_opts</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#ipv6_txoptions\">ipv6_txoptions</a> *<a class=\"id\" href=\"#opt\">opt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#proto\">proto</a>);", 
"", 
"extern int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_skip_exthdr\">ipv6_skip_exthdr</a>(const struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *, int <a class=\"id\" href=\"#start\">start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>         <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#nexthdrp\">nexthdrp</a>);", 
"", 
"extern int <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_ext_hdr\">ipv6_ext_hdr</a>(<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#nexthdr\">nexthdr</a>);", 
"", 
"extern int <a class=\"id\" href=\"#ipv6_find_tlv\">ipv6_find_tlv</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#offset\">offset</a>, int <a class=\"id\" href=\"#type\">type</a>);", 
"", 
"extern struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#fl6_update_dst\">fl6_update_dst</a>(struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#fl\">fl</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       const struct <a class=\"id\" href=\"#ipv6_txoptions\">ipv6_txoptions</a> *<a class=\"id\" href=\"#opt\">opt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#orig\">orig</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>socket options (ipv6_sockglue.c)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"extern int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_setsockopt\">ipv6_setsockopt</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#level\">level</a>, ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#optname\">optname</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optval\">optval</a>, ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#optlen\">optlen</a>);", 
"extern int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_getsockopt\">ipv6_getsockopt</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#level\">level</a>, ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#optname\">optname</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optval\">optval</a>, ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optlen\">optlen</a>);", 
"extern int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#compat_ipv6_setsockopt\">compat_ipv6_setsockopt</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#level\">level</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#optname\">optname</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optval\">optval</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#optlen\">optlen</a>);", 
"extern int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#compat_ipv6_getsockopt\">compat_ipv6_getsockopt</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#level\">level</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#optname\">optname</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optval\">optval</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optlen\">optlen</a>);", 
"", 
"extern int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip6_datagram_connect\">ip6_datagram_connect</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *<a class=\"id\" href=\"#addr\">addr</a>, int <a class=\"id\" href=\"#addr_len\">addr_len</a>);", 
"", 
"extern int <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_recv_error\">ipv6_recv_error</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#msghdr\">msghdr</a> *<a class=\"id\" href=\"#msg\">msg</a>, int <a class=\"id\" href=\"#len\">len</a>);", 
"extern int <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_recv_rxpmtu\">ipv6_recv_rxpmtu</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#msghdr\">msghdr</a> *<a class=\"id\" href=\"#msg\">msg</a>, int <a class=\"id\" href=\"#len\">len</a>);", 
"extern void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_icmp_error\">ipv6_icmp_error</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#err\">err</a>, <a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#port\">port</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#payload\">payload</a>);", 
"extern void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_local_error\">ipv6_local_error</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#err\">err</a>, struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#info\">info</a>);", 
"extern void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_local_rxpmtu\">ipv6_local_rxpmtu</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mtu\">mtu</a>);", 
"", 
"extern int <a class=\"id\" href=\"#inet6_release\">inet6_release</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>);", 
"extern int <a class=\"id\" href=\"#inet6_bind\">inet6_bind</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *<a class=\"id\" href=\"#uaddr\">uaddr</a>, ", 
"<span class=\"ts\"/><span class=\"ts\"/>      int <a class=\"id\" href=\"#addr_len\">addr_len</a>);", 
"extern int <a class=\"id\" href=\"#inet6_getname\">inet6_getname</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *<a class=\"id\" href=\"#uaddr\">uaddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> int *<a class=\"id\" href=\"#uaddr_len\">uaddr_len</a>, int <a class=\"id\" href=\"#peer\">peer</a>);", 
"extern int <a class=\"id\" href=\"#inet6_ioctl\">inet6_ioctl</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>, ", 
"<span class=\"ts\"/><span class=\"ts\"/>       unsigned long <a class=\"id\" href=\"#arg\">arg</a>);", 
"", 
"extern int <a class=\"id\" href=\"#inet6_hash_connect\">inet6_hash_connect</a>(struct <a class=\"id\" href=\"#inet_timewait_death_row\">inet_timewait_death_row</a> *<a class=\"id\" href=\"#death_row\">death_row</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * reassembly.c</span>", 
"<span class=\"comment\"> */</span>", 
"extern const struct <a class=\"id\" href=\"#proto_ops\">proto_ops</a> <a class=\"id\" href=\"#inet6_stream_ops\">inet6_stream_ops</a>;", 
"extern const struct <a class=\"id\" href=\"#proto_ops\">proto_ops</a> <a class=\"id\" href=\"#inet6_dgram_ops\">inet6_dgram_ops</a>;", 
"", 
"struct <a class=\"id\" href=\"#group_source_req\">group_source_req</a>;", 
"struct <a class=\"id\" href=\"#group_filter\">group_filter</a>;", 
"", 
"extern int <a class=\"id\" href=\"#ip6_mc_source\">ip6_mc_source</a>(int <a class=\"id\" href=\"#add\">add</a>, int <a class=\"id\" href=\"#omode\">omode</a>, struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#group_source_req\">group_source_req</a> *<a class=\"id\" href=\"#pgsr\">pgsr</a>);", 
"extern int <a class=\"id\" href=\"#ip6_mc_msfilter\">ip6_mc_msfilter</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#group_filter\">group_filter</a> *<a class=\"id\" href=\"#gsf\">gsf</a>);", 
"extern int <a class=\"id\" href=\"#ip6_mc_msfget\">ip6_mc_msfget</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#group_filter\">group_filter</a> *<a class=\"id\" href=\"#gsf\">gsf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#group_filter\">group_filter</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optval\">optval</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> int <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optlen\">optlen</a>);", 
"extern unsigned int <a class=\"id\" href=\"#inet6_hash_frag\">inet6_hash_frag</a>(<a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#id\">id</a>, const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#saddr\">saddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#rnd\">rnd</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROC_FS\">CONFIG_PROC_FS</a>", 
"extern int  <a class=\"id\" href=\"#ac6_proc_init\">ac6_proc_init</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>);", 
"extern void <a class=\"id\" href=\"#ac6_proc_exit\">ac6_proc_exit</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>);", 
"extern int  <a class=\"id\" href=\"#raw6_proc_init\">raw6_proc_init</a>(void);", 
"extern void <a class=\"id\" href=\"#raw6_proc_exit\">raw6_proc_exit</a>(void);", 
"extern int  <a class=\"id\" href=\"#tcp6_proc_init\">tcp6_proc_init</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>);", 
"extern void <a class=\"id\" href=\"#tcp6_proc_exit\">tcp6_proc_exit</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>);", 
"extern int  <a class=\"id\" href=\"#udp6_proc_init\">udp6_proc_init</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>);", 
"extern void <a class=\"id\" href=\"#udp6_proc_exit\">udp6_proc_exit</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>);", 
"extern int  <a class=\"id\" href=\"#udplite6_proc_init\">udplite6_proc_init</a>(void);", 
"extern void <a class=\"id\" href=\"#udplite6_proc_exit\">udplite6_proc_exit</a>(void);", 
"extern int  <a class=\"id\" href=\"#ipv6_misc_proc_init\">ipv6_misc_proc_init</a>(void);", 
"extern void <a class=\"id\" href=\"#ipv6_misc_proc_exit\">ipv6_misc_proc_exit</a>(void);", 
"extern int <a class=\"id\" href=\"#snmp6_register_dev\">snmp6_register_dev</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>);", 
"extern int <a class=\"id\" href=\"#snmp6_unregister_dev\">snmp6_unregister_dev</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>);", 
"", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ac6_proc_init\">ac6_proc_init</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>) { return 0; }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ac6_proc_exit\">ac6_proc_exit</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>) { }", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#snmp6_register_dev\">snmp6_register_dev</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>) { return 0; }", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#snmp6_unregister_dev\">snmp6_unregister_dev</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>) { return 0; }", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYSCTL\">CONFIG_SYSCTL</a>", 
"extern <a class=\"id\" href=\"#ctl_table\">ctl_table</a> <a class=\"id\" href=\"#ipv6_route_table_template\">ipv6_route_table_template</a>[];", 
"extern <a class=\"id\" href=\"#ctl_table\">ctl_table</a> <a class=\"id\" href=\"#ipv6_icmp_table_template\">ipv6_icmp_table_template</a>[];", 
"", 
"extern struct <a class=\"id\" href=\"#ctl_table\">ctl_table</a> *<a class=\"id\" href=\"#ipv6_icmp_sysctl_init\">ipv6_icmp_sysctl_init</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>);", 
"extern struct <a class=\"id\" href=\"#ctl_table\">ctl_table</a> *<a class=\"id\" href=\"#ipv6_route_sysctl_init\">ipv6_route_sysctl_init</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>);", 
"extern int <a class=\"id\" href=\"#ipv6_sysctl_register\">ipv6_sysctl_register</a>(void);", 
"extern void <a class=\"id\" href=\"#ipv6_sysctl_unregister\">ipv6_sysctl_unregister</a>(void);", 
"extern int <a class=\"id\" href=\"#ipv6_static_sysctl_register\">ipv6_static_sysctl_register</a>(void);", 
"extern void <a class=\"id\" href=\"#ipv6_static_sysctl_unregister\">ipv6_static_sysctl_unregister</a>(void);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __KERNEL__ */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _NET_IPV6_H */</span>", 
];
xr_frag_insert('l/63/ef3dd40b85c665a76bd294f22d95384ccfefa6.xr', __xr_tmp);
