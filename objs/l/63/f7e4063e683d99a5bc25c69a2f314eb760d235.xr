var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__LINUX_MROUTE6_H\">__LINUX_MROUTE6_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__LINUX_MROUTE6_H\">__LINUX_MROUTE6_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sockios\">sockios</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Based on the MROUTING 3.5 defines primarily to keep</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>source compatibility with BSD.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>See the pim6sd code for the original history.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *      Protocol Independent Multicast (PIM) data structures included</span>", 
"<span class=\"comment\"> *      Carlos Picoto (cap@di.fc.ul.pt)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MRT6_BASE\">MRT6_BASE</a><span class=\"ts\"/>200", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MRT6_INIT\">MRT6_INIT</a><span class=\"ts\"/>(<a class=\"id\" href=\"#MRT6_BASE\">MRT6_BASE</a>)<span class=\"ts\"/><span class=\"comment\">/* Activate the kernel mroute code <span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MRT6_DONE\">MRT6_DONE</a><span class=\"ts\"/>(<a class=\"id\" href=\"#MRT6_BASE\">MRT6_BASE</a>+1)<span class=\"ts\"/><span class=\"comment\">/* Shutdown the kernel mroute<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MRT6_ADD_MIF\">MRT6_ADD_MIF</a><span class=\"ts\"/>(<a class=\"id\" href=\"#MRT6_BASE\">MRT6_BASE</a>+2)<span class=\"ts\"/><span class=\"comment\">/* Add a virtual interface<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MRT6_DEL_MIF\">MRT6_DEL_MIF</a><span class=\"ts\"/>(<a class=\"id\" href=\"#MRT6_BASE\">MRT6_BASE</a>+3)<span class=\"ts\"/><span class=\"comment\">/* Delete a virtual interface<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MRT6_ADD_MFC\">MRT6_ADD_MFC</a><span class=\"ts\"/>(<a class=\"id\" href=\"#MRT6_BASE\">MRT6_BASE</a>+4)<span class=\"ts\"/><span class=\"comment\">/* Add a multicast forwarding entry<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MRT6_DEL_MFC\">MRT6_DEL_MFC</a><span class=\"ts\"/>(<a class=\"id\" href=\"#MRT6_BASE\">MRT6_BASE</a>+5)<span class=\"ts\"/><span class=\"comment\">/* Delete a multicast forwarding entry<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MRT6_VERSION\">MRT6_VERSION</a><span class=\"ts\"/>(<a class=\"id\" href=\"#MRT6_BASE\">MRT6_BASE</a>+6)<span class=\"ts\"/><span class=\"comment\">/* Get the kernel multicast version<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MRT6_ASSERT\">MRT6_ASSERT</a><span class=\"ts\"/>(<a class=\"id\" href=\"#MRT6_BASE\">MRT6_BASE</a>+7)<span class=\"ts\"/><span class=\"comment\">/* Activate PIM assert mode<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MRT6_PIM\">MRT6_PIM</a><span class=\"ts\"/>(<a class=\"id\" href=\"#MRT6_BASE\">MRT6_BASE</a>+8)<span class=\"ts\"/><span class=\"comment\">/* enable PIM code<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MRT6_TABLE\">MRT6_TABLE</a><span class=\"ts\"/>(<a class=\"id\" href=\"#MRT6_BASE\">MRT6_BASE</a>+9)<span class=\"ts\"/><span class=\"comment\">/* Specify mroute table ID<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCGETMIFCNT_IN6\">SIOCGETMIFCNT_IN6</a><span class=\"ts\"/><a class=\"id\" href=\"#SIOCPROTOPRIVATE\">SIOCPROTOPRIVATE</a><span class=\"ts\"/><span class=\"comment\">/* IP protocol privates */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCGETSGCNT_IN6\">SIOCGETSGCNT_IN6</a><span class=\"ts\"/>(<a class=\"id\" href=\"#SIOCPROTOPRIVATE\">SIOCPROTOPRIVATE</a>+1)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCGETRPF\">SIOCGETRPF</a><span class=\"ts\"/>(<a class=\"id\" href=\"#SIOCPROTOPRIVATE\">SIOCPROTOPRIVATE</a>+2)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAXMIFS\">MAXMIFS</a><span class=\"ts\"/><span class=\"ts\"/>32", 
"typedef unsigned long <a class=\"id\" href=\"#mifbitmap_t\">mifbitmap_t</a>;<span class=\"ts\"/><span class=\"comment\">/* User mode code depends on this lot */</span>", 
"typedef unsigned short <a class=\"id\" href=\"#mifi_t\">mifi_t</a>;", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ALL_MIFS\">ALL_MIFS</a><span class=\"ts\"/>((<a class=\"id\" href=\"#mifi_t\">mifi_t</a>)(-1))", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#IF_SETSIZE\">IF_SETSIZE</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IF_SETSIZE\">IF_SETSIZE</a><span class=\"ts\"/>256", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"typedef<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#if_mask\">if_mask</a>;", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NIFBITS\">NIFBITS</a> (sizeof(<a class=\"id\" href=\"#if_mask\">if_mask</a>) * 8)        <span class=\"comment\">/* bits per mask */</span>", 
"", 
"#if !<a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>) && !<a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#DIV_ROUND_UP\">DIV_ROUND_UP</a>)", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#DIV_ROUND_UP\">DIV_ROUND_UP</a>(<a class=\"id\" href=\"#x\">x</a>,<a class=\"id\" href=\"#y\">y</a>)<span class=\"ts\"/>(((<a class=\"id\" href=\"#x\">x</a>) + ((<a class=\"id\" href=\"#y\">y</a>) - 1)) / (<a class=\"id\" href=\"#y\">y</a>))", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"typedef struct <a class=\"id\" href=\"#if_set\">if_set</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#if_mask\">if_mask</a> <a class=\"id\" href=\"#ifs_bits\">ifs_bits</a>[<a class=\"id\" href=\"#DIV_ROUND_UP\">DIV_ROUND_UP</a>(<a class=\"id\" href=\"#IF_SETSIZE\">IF_SETSIZE</a>, <a class=\"id\" href=\"#NIFBITS\">NIFBITS</a>)];", 
"} <a class=\"id\" href=\"#if_set\">if_set</a>;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IF_SET\">IF_SET</a>(<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#p\">p</a>)    ((<a class=\"id\" href=\"#p\">p</a>)-><a class=\"id\" href=\"#ifs_bits\">ifs_bits</a>[(<a class=\"id\" href=\"#n\">n</a>)/<a class=\"id\" href=\"#NIFBITS\">NIFBITS</a>] |= (1 << ((<a class=\"id\" href=\"#n\">n</a>) % <a class=\"id\" href=\"#NIFBITS\">NIFBITS</a>)))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IF_CLR\">IF_CLR</a>(<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#p\">p</a>)    ((<a class=\"id\" href=\"#p\">p</a>)-><a class=\"id\" href=\"#ifs_bits\">ifs_bits</a>[(<a class=\"id\" href=\"#n\">n</a>)/<a class=\"id\" href=\"#NIFBITS\">NIFBITS</a>] &= ~(1 << ((<a class=\"id\" href=\"#n\">n</a>) % <a class=\"id\" href=\"#NIFBITS\">NIFBITS</a>)))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IF_ISSET\">IF_ISSET</a>(<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#p\">p</a>)  ((<a class=\"id\" href=\"#p\">p</a>)-><a class=\"id\" href=\"#ifs_bits\">ifs_bits</a>[(<a class=\"id\" href=\"#n\">n</a>)/<a class=\"id\" href=\"#NIFBITS\">NIFBITS</a>] &amp; (1 << ((<a class=\"id\" href=\"#n\">n</a>) % <a class=\"id\" href=\"#NIFBITS\">NIFBITS</a>)))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IF_COPY\">IF_COPY</a>(<a class=\"id\" href=\"#f\">f</a>, <a class=\"id\" href=\"#t\">t</a>)   <a class=\"id\" href=\"#bcopy\">bcopy</a>(<a class=\"id\" href=\"#f\">f</a>, <a class=\"id\" href=\"#t\">t</a>, sizeof(*(<a class=\"id\" href=\"#f\">f</a>)))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IF_ZERO\">IF_ZERO</a>(<a class=\"id\" href=\"#p\">p</a>)      <a class=\"id\" href=\"#bzero\">bzero</a>(<a class=\"id\" href=\"#p\">p</a>, sizeof(*(<a class=\"id\" href=\"#p\">p</a>)))", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Passed by mrouted for an MRT_ADD_MIF - again we use the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>mrouted 3.6 structures for compatibility</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#mif6ctl\">mif6ctl</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mifi_t\">mifi_t</a><span class=\"ts\"/><a class=\"id\" href=\"#mif6c_mifi\">mif6c_mifi</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Index of MIF */</span>", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#mif6c_flags\">mif6c_flags</a>;<span class=\"ts\"/><span class=\"comment\">/* MIFF_ flags */</span>", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#vifc_threshold\">vifc_threshold</a>;<span class=\"ts\"/><span class=\"comment\">/* ttl limit */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/> <a class=\"id\" href=\"#mif6c_pifi\">mif6c_pifi</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* the index of the physical IF */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#vifc_rate_limit\">vifc_rate_limit</a>;<span class=\"ts\"/><span class=\"comment\">/* Rate limiter values (NI) */</span>", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MIFF_REGISTER\">MIFF_REGISTER</a><span class=\"ts\"/>0x1<span class=\"ts\"/><span class=\"comment\">/* register vif<span class=\"ts\"/>*/</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Cache manipulation structures for mrouted and PIMd</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#mf6cctl\">mf6cctl</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_in6\">sockaddr_in6</a> <a class=\"id\" href=\"#mf6cc_origin\">mf6cc_origin</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Origin of mcast<span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_in6\">sockaddr_in6</a> <a class=\"id\" href=\"#mf6cc_mcastgrp\">mf6cc_mcastgrp</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Group in question<span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mifi_t\">mifi_t</a><span class=\"ts\"/><a class=\"id\" href=\"#mf6cc_parent\">mf6cc_parent</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Where it arrived<span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#if_set\">if_set</a> <a class=\"id\" href=\"#mf6cc_ifset\">mf6cc_ifset</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Where it is going */</span>", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Group count retrieval for pim6sd</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#sioc_sg_req6\">sioc_sg_req6</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_in6\">sockaddr_in6</a> <a class=\"id\" href=\"#src\">src</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_in6\">sockaddr_in6</a> <a class=\"id\" href=\"#grp\">grp</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#pktcnt\">pktcnt</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#bytecnt\">bytecnt</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#wrong_if\">wrong_if</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>To get vif packet counts</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#sioc_mif_req6\">sioc_mif_req6</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mifi_t\">mifi_t</a><span class=\"ts\"/><a class=\"id\" href=\"#mifi\">mifi</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Which iface */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#icount\">icount</a>;<span class=\"ts\"/><span class=\"comment\">/* In packets */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#ocount\">ocount</a>;<span class=\"ts\"/><span class=\"comment\">/* Out packets */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#ibytes\">ibytes</a>;<span class=\"ts\"/><span class=\"comment\">/* In bytes */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#obytes\">obytes</a>;<span class=\"ts\"/><span class=\"comment\">/* Out bytes */</span>", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>That's all usermode folks</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pim\">pim</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#skbuff\">skbuff</a>.<a class=\"id\" href=\"#h\">h</a>&gt;<span class=\"ts\"/><span class=\"comment\">/* for struct sk_buff_head */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#net_namespace\">net_namespace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_MROUTE\">CONFIG_IPV6_MROUTE</a>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ip6_mroute_opt\">ip6_mroute_opt</a>(int <a class=\"id\" href=\"#opt\">opt</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#opt\">opt</a> >= <a class=\"id\" href=\"#MRT6_BASE\">MRT6_BASE</a>) && (<a class=\"id\" href=\"#opt\">opt</a> <= <a class=\"id\" href=\"#MRT6_BASE\">MRT6_BASE</a> + 10);", 
"}", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ip6_mroute_opt\">ip6_mroute_opt</a>(int <a class=\"id\" href=\"#opt\">opt</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"struct <a class=\"id\" href=\"#sock\">sock</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_MROUTE\">CONFIG_IPV6_MROUTE</a>", 
"extern int <a class=\"id\" href=\"#ip6_mroute_setsockopt\">ip6_mroute_setsockopt</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *, int, char <a class=\"id\" href=\"#__user\">__user</a> *, unsigned int);", 
"extern int <a class=\"id\" href=\"#ip6_mroute_getsockopt\">ip6_mroute_getsockopt</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *, int, char <a class=\"id\" href=\"#__user\">__user</a> *, int <a class=\"id\" href=\"#__user\">__user</a> *);", 
"extern int <a class=\"id\" href=\"#ip6_mr_input\">ip6_mr_input</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"extern int <a class=\"id\" href=\"#ip6mr_ioctl\">ip6mr_ioctl</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#cmd\">cmd</a>, void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#arg\">arg</a>);", 
"extern int <a class=\"id\" href=\"#ip6_mr_init\">ip6_mr_init</a>(void);", 
"extern void <a class=\"id\" href=\"#ip6_mr_cleanup\">ip6_mr_cleanup</a>(void);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a>", 
"int <a class=\"id\" href=\"#ip6_mroute_setsockopt\">ip6_mroute_setsockopt</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sock\">sock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  int <a class=\"id\" href=\"#optname\">optname</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optval\">optval</a>, unsigned int <a class=\"id\" href=\"#optlen\">optlen</a>)", 
"{", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOPROTOOPT\">ENOPROTOOPT</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a>", 
"int <a class=\"id\" href=\"#ip6_mroute_getsockopt\">ip6_mroute_getsockopt</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sock\">sock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  int <a class=\"id\" href=\"#optname\">optname</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optval\">optval</a>, int <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optlen\">optlen</a>)", 
"{", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOPROTOOPT\">ENOPROTOOPT</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a>", 
"int <a class=\"id\" href=\"#ip6mr_ioctl\">ip6mr_ioctl</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#cmd\">cmd</a>, void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOIOCTLCMD\">ENOIOCTLCMD</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ip6_mr_init\">ip6_mr_init</a>(void)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ip6_mr_cleanup\">ip6_mr_cleanup</a>(void)", 
"{", 
"<span class=\"ts\"/>return;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"struct <a class=\"id\" href=\"#mif_device\">mif_device</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> <span class=\"ts\"/>*<a class=\"id\" href=\"#dev\">dev</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Device we are using */</span>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#bytes_in\">bytes_in</a>,<a class=\"id\" href=\"#bytes_out\">bytes_out</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#pkt_in\">pkt_in</a>,<a class=\"id\" href=\"#pkt_out\">pkt_out</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Statistics <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#rate_limit\">rate_limit</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Traffic shaping (NI) <span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><a class=\"id\" href=\"#threshold\">threshold</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* TTL threshold <span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Control flags <span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Physical interface index<span class=\"ts\"/>*/</span>", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VIFF_STATIC\">VIFF_STATIC</a> 0x8000", 
"", 
"struct <a class=\"id\" href=\"#mfc6_cache\">mfc6_cache</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> <a class=\"id\" href=\"#mf6c_mcastgrp\">mf6c_mcastgrp</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Group the entry belongs to <span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> <a class=\"id\" href=\"#mf6c_origin\">mf6c_origin</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Source of packet <span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mifi_t\">mifi_t</a> <a class=\"id\" href=\"#mf6c_parent\">mf6c_parent</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Source interface<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#mfc_flags\">mfc_flags</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Flags on line<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#expires\">expires</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff_head\">sk_buff_head</a> <a class=\"id\" href=\"#unresolved\">unresolved</a>;<span class=\"ts\"/><span class=\"comment\">/* Unresolved buffers<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#unres\">unres</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#last_assert\">last_assert</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#minvif\">minvif</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#maxvif\">maxvif</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#bytes\">bytes</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#pkt\">pkt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#wrong_if\">wrong_if</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#ttls\">ttls</a>[<a class=\"id\" href=\"#MAXMIFS\">MAXMIFS</a>];<span class=\"ts\"/><span class=\"comment\">/* TTL thresholds<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#mfc_un\">mfc_un</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MFC_STATIC\">MFC_STATIC</a><span class=\"ts\"/><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MFC_NOTIFY\">MFC_NOTIFY</a><span class=\"ts\"/><span class=\"ts\"/>2", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MFC6_LINES\">MFC6_LINES</a><span class=\"ts\"/><span class=\"ts\"/>64", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MFC6_HASH\">MFC6_HASH</a>(<a class=\"id\" href=\"#a\">a</a>, <a class=\"id\" href=\"#g\">g</a>) (((<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)(<a class=\"id\" href=\"#a\">a</a>)-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[0] ^ \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)(<a class=\"id\" href=\"#a\">a</a>)-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[1] ^ \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)(<a class=\"id\" href=\"#a\">a</a>)-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[2] ^ \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)(<a class=\"id\" href=\"#a\">a</a>)-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[3] ^ \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)(<a class=\"id\" href=\"#g\">g</a>)-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[0] ^ \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)(<a class=\"id\" href=\"#g\">g</a>)-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[1] ^ \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)(<a class=\"id\" href=\"#g\">g</a>)-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[2] ^ \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)(<a class=\"id\" href=\"#g\">g</a>)-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[3]) % <a class=\"id\" href=\"#MFC6_LINES\">MFC6_LINES</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MFC_ASSERT_THRESH\">MFC_ASSERT_THRESH</a> (3*<a class=\"id\" href=\"#HZ\">HZ</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Maximal freq. of asserts */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"struct <a class=\"id\" href=\"#rtmsg\">rtmsg</a>;", 
"extern int <a class=\"id\" href=\"#ip6mr_get_route\">ip6mr_get_route</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#rtmsg\">rtmsg</a> *<a class=\"id\" href=\"#rtm\">rtm</a>, int <a class=\"id\" href=\"#nowait\">nowait</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_MROUTE\">CONFIG_IPV6_MROUTE</a>", 
"extern struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#mroute6_socket\">mroute6_socket</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"extern int <a class=\"id\" href=\"#ip6mr_sk_done\">ip6mr_sk_done</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#mroute6_socket\">mroute6_socket</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ip6mr_sk_done\">ip6mr_sk_done</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Structure used to communicate from kernel to multicast router.</span>", 
"<span class=\"comment\"> * We'll overlay the structure onto an MLD header (not an IPv6 heder like igmpmsg{}</span>", 
"<span class=\"comment\"> * used for IPv4 implementation). This is because this structure will be passed via an</span>", 
"<span class=\"comment\"> * IPv6 raw socket, on wich an application will only receiver the payload i.e the data after</span>", 
"<span class=\"comment\"> * the IPv6 header and all the extension headers. (See section 3 of RFC 3542)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#mrt6msg\">mrt6msg</a> {", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MRT6MSG_NOCACHE\">MRT6MSG_NOCACHE</a><span class=\"ts\"/><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MRT6MSG_WRONGMIF\">MRT6MSG_WRONGMIF</a><span class=\"ts\"/>2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MRT6MSG_WHOLEPKT\">MRT6MSG_WHOLEPKT</a><span class=\"ts\"/>3<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* used for use level encap */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#im6_mbz\">im6_mbz</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* must be zero<span class=\"ts\"/><span class=\"ts\"/>   */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#im6_msgtype\">im6_msgtype</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* what type of message    */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#im6_mif\">im6_mif</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* mif rec'd on<span class=\"ts\"/><span class=\"ts\"/>   */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#im6_pad\">im6_pad</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* padding for 64 bit arch */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a><span class=\"ts\"/><a class=\"id\" href=\"#im6_src\">im6_src</a>, <a class=\"id\" href=\"#im6_dst\">im6_dst</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/63/f7e4063e683d99a5bc25c69a2f314eb760d235.xr', __xr_tmp);
