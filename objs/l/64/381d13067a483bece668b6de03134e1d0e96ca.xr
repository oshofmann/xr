var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"\\n    cpu: %i\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"\\n              count: %i\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"\\n              high:  %i\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"\\n              batch: %i\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#i\">i</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#pageset\">pageset</a>-><a class=\"id\" href=\"#pcp\">pcp</a>.<a class=\"id\" href=\"#count\">count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#pageset\">pageset</a>-><a class=\"id\" href=\"#pcp\">pcp</a>.<a class=\"id\" href=\"#high\">high</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#pageset\">pageset</a>-><a class=\"id\" href=\"#pcp\">pcp</a>.<a class=\"id\" href=\"#batch\">batch</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\n  vm stats threshold: %d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pageset\">pageset</a>-><a class=\"id\" href=\"#stat_threshold\">stat_threshold</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"\\n  all_unreclaimable: %u\"", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"\\n  start_pfn:         %lu\"", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"\\n  inactive_ratio:    %u\",", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#all_unreclaimable\">all_unreclaimable</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#zone_start_pfn\">zone_start_pfn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#inactive_ratio\">inactive_ratio</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_putc\">seq_putc</a>(<a class=\"id\" href=\"#m\">m</a>, '\\n');", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Output information about zones in @pgdat.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#zoneinfo_show\">zoneinfo_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pg_data_t\">pg_data_t</a> *<a class=\"id\" href=\"#pgdat\">pgdat</a> = (<a class=\"id\" href=\"#pg_data_t\">pg_data_t</a> *)<a class=\"id\" href=\"#arg\">arg</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#walk_zones_in_node\">walk_zones_in_node</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#pgdat\">pgdat</a>, <a class=\"id\" href=\"#zoneinfo_show_print\">zoneinfo_show_print</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> <a class=\"id\" href=\"#zoneinfo_op\">zoneinfo_op</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a><span class=\"ts\"/>= <a class=\"id\" href=\"#frag_start\">frag_start</a>, <span class=\"comment\">/* iterate over all zones. The same as in</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       * fragmentation. */</span>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#next\">next</a><span class=\"ts\"/>= <a class=\"id\" href=\"#frag_next\">frag_next</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a><span class=\"ts\"/>= <a class=\"id\" href=\"#frag_stop\">frag_stop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a><span class=\"ts\"/>= <a class=\"id\" href=\"#zoneinfo_show\">zoneinfo_show</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#zoneinfo_open\">zoneinfo_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#seq_open\">seq_open</a>(<a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#zoneinfo_op\">zoneinfo_op</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#proc_zoneinfo_file_operations\">proc_zoneinfo_file_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#zoneinfo_open\">zoneinfo_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_release\">seq_release</a>,", 
"};", 
"", 
"static void *<a class=\"id\" href=\"#vmstat_start\">vmstat_start</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long *<a class=\"id\" href=\"#v\">v</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_VM_EVENT_COUNTERS\">CONFIG_VM_EVENT_COUNTERS</a>", 
"<span class=\"ts\"/>unsigned long *<a class=\"id\" href=\"#e\">e</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#pos\">pos</a> >= <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#vmstat_text\">vmstat_text</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_VM_EVENT_COUNTERS\">CONFIG_VM_EVENT_COUNTERS</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#NR_VM_ZONE_STAT_ITEMS\">NR_VM_ZONE_STAT_ITEMS</a> * sizeof(unsigned long)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>+ sizeof(struct <a class=\"id\" href=\"#vm_event_state\">vm_event_state</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"#else", 
"<span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#NR_VM_ZONE_STAT_ITEMS\">NR_VM_ZONE_STAT_ITEMS</a> * sizeof(unsigned long),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#private\">private</a> = <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#v\">v</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#NR_VM_ZONE_STAT_ITEMS\">NR_VM_ZONE_STAT_ITEMS</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#global_page_state\">global_page_state</a>(<a class=\"id\" href=\"#i\">i</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_VM_EVENT_COUNTERS\">CONFIG_VM_EVENT_COUNTERS</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#v\">v</a> + <a class=\"id\" href=\"#NR_VM_ZONE_STAT_ITEMS\">NR_VM_ZONE_STAT_ITEMS</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#all_vm_events\">all_vm_events</a>(<a class=\"id\" href=\"#e\">e</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>[<a class=\"id\" href=\"#PGPGIN\">PGPGIN</a>] /= 2;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* sectors -&gt; kbytes */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>[<a class=\"id\" href=\"#PGPGOUT\">PGPGOUT</a>] /= 2;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#v\">v</a> + *<a class=\"id\" href=\"#pos\">pos</a>;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#vmstat_next\">vmstat_next</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#arg\">arg</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>(*<a class=\"id\" href=\"#pos\">pos</a>)++;", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#pos\">pos</a> >= <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#vmstat_text\">vmstat_text</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>return (unsigned long *)<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#private\">private</a> + *<a class=\"id\" href=\"#pos\">pos</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#vmstat_show\">vmstat_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long *<a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#arg\">arg</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#off\">off</a> = <a class=\"id\" href=\"#l\">l</a> - (unsigned long *)<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"%s %lu\\n\", <a class=\"id\" href=\"#vmstat_text\">vmstat_text</a>[<a class=\"id\" href=\"#off\">off</a>], *<a class=\"id\" href=\"#l\">l</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#vmstat_stop\">vmstat_stop</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#private\">private</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#private\">private</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> <a class=\"id\" href=\"#vmstat_op\">vmstat_op</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a><span class=\"ts\"/>= <a class=\"id\" href=\"#vmstat_start\">vmstat_start</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#next\">next</a><span class=\"ts\"/>= <a class=\"id\" href=\"#vmstat_next\">vmstat_next</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a><span class=\"ts\"/>= <a class=\"id\" href=\"#vmstat_stop\">vmstat_stop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a><span class=\"ts\"/>= <a class=\"id\" href=\"#vmstat_show\">vmstat_show</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#vmstat_open\">vmstat_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#seq_open\">seq_open</a>(<a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#vmstat_op\">vmstat_op</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#proc_vmstat_file_operations\">proc_vmstat_file_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#vmstat_open\">vmstat_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_release\">seq_release</a>,", 
"};", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_PROC_FS */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"static <a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(struct <a class=\"id\" href=\"#delayed_work\">delayed_work</a>, <a class=\"id\" href=\"#vmstat_work\">vmstat_work</a>);", 
"int <a class=\"id\" href=\"#sysctl_stat_interval\">sysctl_stat_interval</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = <a class=\"id\" href=\"#HZ\">HZ</a>;", 
"", 
"static void <a class=\"id\" href=\"#vmstat_update\">vmstat_update</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#w\">w</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#refresh_cpu_vm_stats\">refresh_cpu_vm_stats</a>(<a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>());", 
"<span class=\"ts\"/><a class=\"id\" href=\"#schedule_delayed_work\">schedule_delayed_work</a>(&amp;<a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#vmstat_work\">vmstat_work</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#round_jiffies_relative\">round_jiffies_relative</a>(<a class=\"id\" href=\"#sysctl_stat_interval\">sysctl_stat_interval</a>));", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#start_cpu_timer\">start_cpu_timer</a>(int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#delayed_work\">delayed_work</a> *<a class=\"id\" href=\"#work\">work</a> = &amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#vmstat_work\">vmstat_work</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_DELAYED_WORK_DEFERRABLE\">INIT_DELAYED_WORK_DEFERRABLE</a>(<a class=\"id\" href=\"#work\">work</a>, <a class=\"id\" href=\"#vmstat_update\">vmstat_update</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#schedule_delayed_work_on\">schedule_delayed_work_on</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#work\">work</a>, <a class=\"id\" href=\"#__round_jiffies_relative\">__round_jiffies_relative</a>(<a class=\"id\" href=\"#HZ\">HZ</a>, <a class=\"id\" href=\"#cpu\">cpu</a>));", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Use the cpu notifier to insure that the thresholds are recalculated</span>", 
"<span class=\"comment\"> * when necessary.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#vmstat_cpuup_callback\">vmstat_cpuup_callback</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nfb\">nfb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#action\">action</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#hcpu\">hcpu</a>)", 
"{", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#cpu\">cpu</a> = (long)<a class=\"id\" href=\"#hcpu\">hcpu</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#action\">action</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_ONLINE\">CPU_ONLINE</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_ONLINE_FROZEN\">CPU_ONLINE_FROZEN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#refresh_zone_stat_thresholds\">refresh_zone_stat_thresholds</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_cpu_timer\">start_cpu_timer</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node_set_state\">node_set_state</a>(<a class=\"id\" href=\"#cpu_to_node\">cpu_to_node</a>(<a class=\"id\" href=\"#cpu\">cpu</a>), <a class=\"id\" href=\"#N_CPU\">N_CPU</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_DOWN_PREPARE\">CPU_DOWN_PREPARE</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_DOWN_PREPARE_FROZEN\">CPU_DOWN_PREPARE_FROZEN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cancel_rearming_delayed_work\">cancel_rearming_delayed_work</a>(&amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#vmstat_work\">vmstat_work</a>, <a class=\"id\" href=\"#cpu\">cpu</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#vmstat_work\">vmstat_work</a>, <a class=\"id\" href=\"#cpu\">cpu</a>).<a class=\"id\" href=\"#work\">work</a>.<a class=\"id\" href=\"#func\">func</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_DOWN_FAILED\">CPU_DOWN_FAILED</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_DOWN_FAILED_FROZEN\">CPU_DOWN_FAILED_FROZEN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_cpu_timer\">start_cpu_timer</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_DEAD\">CPU_DEAD</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_DEAD_FROZEN\">CPU_DEAD_FROZEN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#refresh_zone_stat_thresholds\">refresh_zone_stat_thresholds</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NOTIFY_OK\">NOTIFY_OK</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> <a class=\"id\" href=\"#__cpuinitdata\">__cpuinitdata</a> <a class=\"id\" href=\"#vmstat_notifier\">vmstat_notifier</a> =", 
"<span class=\"ts\"/>{ &amp;<a class=\"id\" href=\"#vmstat_cpuup_callback\">vmstat_cpuup_callback</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0 };", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#setup_vmstat\">setup_vmstat</a>(void)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#refresh_zone_stat_thresholds\">refresh_zone_stat_thresholds</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#register_cpu_notifier\">register_cpu_notifier</a>(&amp;<a class=\"id\" href=\"#vmstat_notifier\">vmstat_notifier</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_online_cpu\">for_each_online_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_cpu_timer\">start_cpu_timer</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROC_FS\">CONFIG_PROC_FS</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proc_create\">proc_create</a>(\"buddyinfo\", <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#fragmentation_file_operations\">fragmentation_file_operations</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proc_create\">proc_create</a>(\"pagetypeinfo\", <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#pagetypeinfo_file_ops\">pagetypeinfo_file_ops</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proc_create\">proc_create</a>(\"vmstat\", <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#proc_vmstat_file_operations\">proc_vmstat_file_operations</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proc_create\">proc_create</a>(\"zoneinfo\", <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#proc_zoneinfo_file_operations\">proc_zoneinfo_file_operations</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#setup_vmstat\">setup_vmstat</a>)", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_DEBUG_FS\">CONFIG_DEBUG_FS</a>) && <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_COMPACTION\">CONFIG_COMPACTION</a>)", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#debugfs\">debugfs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#extfrag_debug_root\">extfrag_debug_root</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Return an index indicating how much of the available free memory is</span>", 
"<span class=\"comment\"> * unusable for an allocation of the requested size.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#unusable_free_index\">unusable_free_index</a>(unsigned int <a class=\"id\" href=\"#order\">order</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#contig_page_info\">contig_page_info</a> *<a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* No free memory is interpreted as all free memory is unusable */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#free_pages\">free_pages</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1000;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Index should be a value between 0 and 1. Return a value to 3</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * decimal places.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 0 =&gt; no fragmentation</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 1 =&gt; high fragmentation</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#div_u64\">div_u64</a>((<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#free_pages\">free_pages</a> - (<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#free_blocks_suitable\">free_blocks_suitable</a> << <a class=\"id\" href=\"#order\">order</a>)) * 1000ULL, <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#free_pages\">free_pages</a>);", 
"", 
"}", 
"", 
"static void <a class=\"id\" href=\"#unusable_show_print\">unusable_show_print</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pg_data_t\">pg_data_t</a> *<a class=\"id\" href=\"#pgdat\">pgdat</a>, struct <a class=\"id\" href=\"#zone\">zone</a> *<a class=\"id\" href=\"#zone\">zone</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#order\">order</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#index\">index</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#contig_page_info\">contig_page_info</a> <a class=\"id\" href=\"#info\">info</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"Node %d, zone %8s \",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pgdat\">pgdat</a>-><a class=\"id\" href=\"#node_id\">node_id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#order\">order</a> = 0; <a class=\"id\" href=\"#order\">order</a> &lt; <a class=\"id\" href=\"#MAX_ORDER\">MAX_ORDER</a>; ++<a class=\"id\" href=\"#order\">order</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fill_contig_page_info\">fill_contig_page_info</a>(<a class=\"id\" href=\"#zone\">zone</a>, <a class=\"id\" href=\"#order\">order</a>, &amp;<a class=\"id\" href=\"#info\">info</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#unusable_free_index\">unusable_free_index</a>(<a class=\"id\" href=\"#order\">order</a>, &amp;<a class=\"id\" href=\"#info\">info</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"%d.%03d \", <a class=\"id\" href=\"#index\">index</a> / 1000, <a class=\"id\" href=\"#index\">index</a> % 1000);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_putc\">seq_putc</a>(<a class=\"id\" href=\"#m\">m</a>, '\\n');", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Display unusable free space index</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The unusable free space index measures how much of the available free</span>", 
"<span class=\"comment\"> * memory cannot be used to satisfy an allocation of a given size and is a</span>", 
"<span class=\"comment\"> * value between 0 and 1. The higher the value, the more of free memory is</span>", 
"<span class=\"comment\"> * unusable and by implication, the worse the external fragmentation is. This</span>", 
"<span class=\"comment\"> * can be expressed as a percentage by multiplying by 100.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#unusable_show\">unusable_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pg_data_t\">pg_data_t</a> *<a class=\"id\" href=\"#pgdat\">pgdat</a> = (<a class=\"id\" href=\"#pg_data_t\">pg_data_t</a> *)<a class=\"id\" href=\"#arg\">arg</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* check memoryless node */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#node_state\">node_state</a>(<a class=\"id\" href=\"#pgdat\">pgdat</a>-><a class=\"id\" href=\"#node_id\">node_id</a>, <a class=\"id\" href=\"#N_HIGH_MEMORY\">N_HIGH_MEMORY</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#walk_zones_in_node\">walk_zones_in_node</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#pgdat\">pgdat</a>, <a class=\"id\" href=\"#unusable_show_print\">unusable_show_print</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> <a class=\"id\" href=\"#unusable_op\">unusable_op</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a><span class=\"ts\"/>= <a class=\"id\" href=\"#frag_start\">frag_start</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#next\">next</a><span class=\"ts\"/>= <a class=\"id\" href=\"#frag_next\">frag_next</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a><span class=\"ts\"/>= <a class=\"id\" href=\"#frag_stop\">frag_stop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a><span class=\"ts\"/>= <a class=\"id\" href=\"#unusable_show\">unusable_show</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#unusable_open\">unusable_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#seq_open\">seq_open</a>(<a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#unusable_op\">unusable_op</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#unusable_file_ops\">unusable_file_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#unusable_open\">unusable_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_release\">seq_release</a>,", 
"};", 
"", 
"static void <a class=\"id\" href=\"#extfrag_show_print\">extfrag_show_print</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pg_data_t\">pg_data_t</a> *<a class=\"id\" href=\"#pgdat\">pgdat</a>, struct <a class=\"id\" href=\"#zone\">zone</a> *<a class=\"id\" href=\"#zone\">zone</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#order\">order</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#index\">index</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Alloc on stack as interrupts are disabled for zone walk */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#contig_page_info\">contig_page_info</a> <a class=\"id\" href=\"#info\">info</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"Node %d, zone %8s \",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pgdat\">pgdat</a>-><a class=\"id\" href=\"#node_id\">node_id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#order\">order</a> = 0; <a class=\"id\" href=\"#order\">order</a> &lt; <a class=\"id\" href=\"#MAX_ORDER\">MAX_ORDER</a>; ++<a class=\"id\" href=\"#order\">order</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fill_contig_page_info\">fill_contig_page_info</a>(<a class=\"id\" href=\"#zone\">zone</a>, <a class=\"id\" href=\"#order\">order</a>, &amp;<a class=\"id\" href=\"#info\">info</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#__fragmentation_index\">__fragmentation_index</a>(<a class=\"id\" href=\"#order\">order</a>, &amp;<a class=\"id\" href=\"#info\">info</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"%d.%03d \", <a class=\"id\" href=\"#index\">index</a> / 1000, <a class=\"id\" href=\"#index\">index</a> % 1000);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_putc\">seq_putc</a>(<a class=\"id\" href=\"#m\">m</a>, '\\n');", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Display fragmentation index for orders that allocations would fail for</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#extfrag_show\">extfrag_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pg_data_t\">pg_data_t</a> *<a class=\"id\" href=\"#pgdat\">pgdat</a> = (<a class=\"id\" href=\"#pg_data_t\">pg_data_t</a> *)<a class=\"id\" href=\"#arg\">arg</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#walk_zones_in_node\">walk_zones_in_node</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#pgdat\">pgdat</a>, <a class=\"id\" href=\"#extfrag_show_print\">extfrag_show_print</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> <a class=\"id\" href=\"#extfrag_op\">extfrag_op</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a><span class=\"ts\"/>= <a class=\"id\" href=\"#frag_start\">frag_start</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#next\">next</a><span class=\"ts\"/>= <a class=\"id\" href=\"#frag_next\">frag_next</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a><span class=\"ts\"/>= <a class=\"id\" href=\"#frag_stop\">frag_stop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a><span class=\"ts\"/>= <a class=\"id\" href=\"#extfrag_show\">extfrag_show</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#extfrag_open\">extfrag_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#seq_open\">seq_open</a>(<a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#extfrag_op\">extfrag_op</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#extfrag_file_ops\">extfrag_file_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#extfrag_open\">extfrag_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_release\">seq_release</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#extfrag_debug_init\">extfrag_debug_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#extfrag_debug_root\">extfrag_debug_root</a> = <a class=\"id\" href=\"#debugfs_create_dir\">debugfs_create_dir</a>(\"extfrag\", <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#extfrag_debug_root\">extfrag_debug_root</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#debugfs_create_file\">debugfs_create_file</a>(\"unusable_index\", 0444,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#extfrag_debug_root\">extfrag_debug_root</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#unusable_file_ops\">unusable_file_ops</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#debugfs_create_file\">debugfs_create_file</a>(\"extfrag_index\", 0444,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#extfrag_debug_root\">extfrag_debug_root</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#extfrag_file_ops\">extfrag_file_ops</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#extfrag_debug_init\">extfrag_debug_init</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/64/381d13067a483bece668b6de03134e1d0e96ca.xr', __xr_tmp);
