var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * NETLINK      Kernel-user communication protocol.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/><span class=\"ts\"/>Authors:<span class=\"ts\"/>Alan Cox &lt;alan@lxorguk.ukuu.org.uk&gt;</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>Alexey Kuznetsov &lt;kuznet@ms2.inr.ac.ru&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Tue Jun 26 14:36:48 MEST 2001 Herbert \"herp\" Rosmanith</span>", 
"<span class=\"comment\"> *                               added netlink_proto_exit</span>", 
"<span class=\"comment\"> * Tue Jan 22 18:32:44 BRST 2002 Arnaldo C. de Melo &lt;acme@conectiva.com.br&gt;</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> use nlk_sk, as sk-&gt;protinfo is on a diet 8)</span>", 
"<span class=\"comment\"> * Fri Jul 22 19:51:12 MEST 2005 Harald Welte &lt;laforge@gnumonks.org&gt;</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> - inc module use count of module that owns</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   the kernel socket in case userspace opens</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   socket of same protocol</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> - remove all module support, since netlink is</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   mandatory if CONFIG_NET=y these days</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#capability\">capability</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#signal\">signal</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#stat\">stat</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#un\">un</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fcntl\">fcntl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#termios\">termios</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sockios\">sockios</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#skbuff\">skbuff</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netdevice\">netdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rtnetlink\">rtnetlink</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#notifier\">notifier</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#security\">security</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jhash\">jhash</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jiffies\">jiffies</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#random\">random</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bitops\">bitops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#audit\">audit</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mutex\">mutex</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#net_namespace\">net_namespace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#sock\">sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#scm\">scm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#netlink\">netlink</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NLGRPSZ\">NLGRPSZ</a>(<a class=\"id\" href=\"#x\">x</a>)<span class=\"ts\"/>(<a class=\"id\" href=\"#ALIGN\">ALIGN</a>(<a class=\"id\" href=\"#x\">x</a>, sizeof(unsigned long) * 8) / 8)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NLGRPLONGS\">NLGRPLONGS</a>(<a class=\"id\" href=\"#x\">x</a>)<span class=\"ts\"/>(<a class=\"id\" href=\"#NLGRPSZ\">NLGRPSZ</a>(<a class=\"id\" href=\"#x\">x</a>)/sizeof(unsigned long))", 
"", 
"struct <a class=\"id\" href=\"#netlink_sock\">netlink_sock</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* struct sock has to be the first member of netlink_sock */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pid\">pid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_pid\">dst_pid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_group\">dst_group</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#subscriptions\">subscriptions</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ngroups\">ngroups</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#groups\">groups</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wait_queue_head_t\">wait_queue_head_t</a><span class=\"ts\"/><a class=\"id\" href=\"#wait\">wait</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlink_callback\">netlink_callback</a><span class=\"ts\"/>*<a class=\"id\" href=\"#cb\">cb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mutex\">mutex</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#cb_mutex\">cb_mutex</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mutex\">mutex</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cb_def_mutex\">cb_def_mutex</a>;", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#netlink_rcv\">netlink_rcv</a>)(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#module\">module</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#module\">module</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#listeners_rcu_head\">listeners_rcu_head</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rcu_head\">rcu_head</a> <a class=\"id\" href=\"#rcu_head\">rcu_head</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#ptr\">ptr</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETLINK_KERNEL_SOCKET\">NETLINK_KERNEL_SOCKET</a><span class=\"ts\"/>0x1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETLINK_RECV_PKTINFO\">NETLINK_RECV_PKTINFO</a><span class=\"ts\"/>0x2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETLINK_BROADCAST_SEND_ERROR\">NETLINK_BROADCAST_SEND_ERROR</a><span class=\"ts\"/>0x4", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NETLINK_RECV_NO_ENOBUFS\">NETLINK_RECV_NO_ENOBUFS</a><span class=\"ts\"/>0x8", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#netlink_sock\">netlink_sock</a> *<a class=\"id\" href=\"#nlk_sk\">nlk_sk</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#netlink_sock\">netlink_sock</a>, <a class=\"id\" href=\"#sk\">sk</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#netlink_is_kernel\">netlink_is_kernel</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nlk_sk\">nlk_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#NETLINK_KERNEL_SOCKET\">NETLINK_KERNEL_SOCKET</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#nl_pid_hash\">nl_pid_hash</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#table\">table</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#rehash_time\">rehash_time</a>;", 
"", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#shift\">shift</a>;", 
"", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#entries\">entries</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#max_shift\">max_shift</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#rnd\">rnd</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#netlink_table\">netlink_table</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nl_pid_hash\">nl_pid_hash</a> <a class=\"id\" href=\"#hash\">hash</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> <a class=\"id\" href=\"#mc_list\">mc_list</a>;", 
"<span class=\"ts\"/>unsigned long *<a class=\"id\" href=\"#listeners\">listeners</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#nl_nonroot\">nl_nonroot</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#groups\">groups</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mutex\">mutex</a> *<a class=\"id\" href=\"#cb_mutex\">cb_mutex</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#module\">module</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#registered\">registered</a>;", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#netlink_table\">netlink_table</a> *<a class=\"id\" href=\"#nl_table\">nl_table</a>;", 
"", 
"static <a class=\"id\" href=\"#DECLARE_WAIT_QUEUE_HEAD\">DECLARE_WAIT_QUEUE_HEAD</a>(<a class=\"id\" href=\"#nl_table_wait\">nl_table_wait</a>);", 
"", 
"static int <a class=\"id\" href=\"#netlink_dump\">netlink_dump</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"static void <a class=\"id\" href=\"#netlink_destroy_callback\">netlink_destroy_callback</a>(struct <a class=\"id\" href=\"#netlink_callback\">netlink_callback</a> *<a class=\"id\" href=\"#cb\">cb</a>);", 
"", 
"static <a class=\"id\" href=\"#DEFINE_RWLOCK\">DEFINE_RWLOCK</a>(<a class=\"id\" href=\"#nl_table_lock\">nl_table_lock</a>);", 
"static <a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#nl_table_users\">nl_table_users</a> = <a class=\"id\" href=\"#ATOMIC_INIT\">ATOMIC_INIT</a>(0);", 
"", 
"static <a class=\"id\" href=\"#ATOMIC_NOTIFIER_HEAD\">ATOMIC_NOTIFIER_HEAD</a>(<a class=\"id\" href=\"#netlink_chain\">netlink_chain</a>);", 
"", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#netlink_group_mask\">netlink_group_mask</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#group\">group</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#group\">group</a> ? 1 << (<a class=\"id\" href=\"#group\">group</a> - 1) : 0;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#nl_pid_hashfn\">nl_pid_hashfn</a>(struct <a class=\"id\" href=\"#nl_pid_hash\">nl_pid_hash</a> *<a class=\"id\" href=\"#hash\">hash</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pid\">pid</a>)", 
"{", 
"<span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#hash\">hash</a>-><a class=\"id\" href=\"#table\">table</a>[<a class=\"id\" href=\"#jhash_1word\">jhash_1word</a>(<a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#hash\">hash</a>-><a class=\"id\" href=\"#rnd\">rnd</a>) &amp; <a class=\"id\" href=\"#hash\">hash</a>-><a class=\"id\" href=\"#mask\">mask</a>];", 
"}", 
"", 
"static void <a class=\"id\" href=\"#netlink_sock_destruct\">netlink_sock_destruct</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlink_sock\">netlink_sock</a> *<a class=\"id\" href=\"#nlk\">nlk</a> = <a class=\"id\" href=\"#nlk_sk\">nlk_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#cb\">cb</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#done\">done</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#done\">done</a>(<a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#cb\">cb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netlink_destroy_callback\">netlink_destroy_callback</a>(<a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#cb\">cb</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_queue_purge\">skb_queue_purge</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_receive_queue\">sk_receive_queue</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sock_flag\">sock_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_DEAD\">SOCK_DEAD</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"Freeing alive netlink socket %p\\n\", <a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rmem_alloc\">sk_rmem_alloc</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_wmem_alloc\">sk_wmem_alloc</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#nlk_sk\">nlk_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#groups\">groups</a>);", 
"}", 
"", 
"<span class=\"comment\">/* This lock without WQ_FLAG_EXCLUSIVE is good on UP and it is _very_ bad on</span>", 
"<span class=\"comment\"> * SMP. Look, when several writers sleep and reader wakes them up, all but one</span>", 
"<span class=\"comment\"> * immediately hit write lock and grab all the cpus. Exclusive sleep solves</span>", 
"<span class=\"comment\"> * this, _but_ remember, it adds useless work on UP machines.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#netlink_table_grab\">netlink_table_grab</a>(void)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__acquires\">__acquires</a>(<a class=\"id\" href=\"#nl_table_lock\">nl_table_lock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#might_sleep\">might_sleep</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_irq\">write_lock_irq</a>(&amp;<a class=\"id\" href=\"#nl_table_lock\">nl_table_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#nl_table_users\">nl_table_users</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DECLARE_WAITQUEUE\">DECLARE_WAITQUEUE</a>(<a class=\"id\" href=\"#wait\">wait</a>, <a class=\"id\" href=\"#current\">current</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_wait_queue_exclusive\">add_wait_queue_exclusive</a>(&amp;<a class=\"id\" href=\"#nl_table_wait\">nl_table_wait</a>, &amp;<a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_current_state\">set_current_state</a>(<a class=\"id\" href=\"#TASK_UNINTERRUPTIBLE\">TASK_UNINTERRUPTIBLE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#nl_table_users\">nl_table_users</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_irq\">write_unlock_irq</a>(&amp;<a class=\"id\" href=\"#nl_table_lock\">nl_table_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule\">schedule</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_lock_irq\">write_lock_irq</a>(&amp;<a class=\"id\" href=\"#nl_table_lock\">nl_table_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__set_current_state\">__set_current_state</a>(<a class=\"id\" href=\"#TASK_RUNNING\">TASK_RUNNING</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#remove_wait_queue\">remove_wait_queue</a>(&amp;<a class=\"id\" href=\"#nl_table_wait\">nl_table_wait</a>, &amp;<a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"void <a class=\"id\" href=\"#netlink_table_ungrab\">netlink_table_ungrab</a>(void)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__releases\">__releases</a>(<a class=\"id\" href=\"#nl_table_lock\">nl_table_lock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_irq\">write_unlock_irq</a>(&amp;<a class=\"id\" href=\"#nl_table_lock\">nl_table_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wake_up\">wake_up</a>(&amp;<a class=\"id\" href=\"#nl_table_wait\">nl_table_wait</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void", 
"<a class=\"id\" href=\"#netlink_lock_table\">netlink_lock_table</a>(void)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* read_lock() synchronizes us to netlink_table_grab */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#nl_table_lock\">nl_table_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#nl_table_users\">nl_table_users</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#nl_table_lock\">nl_table_lock</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void", 
"<a class=\"id\" href=\"#netlink_unlock_table\">netlink_unlock_table</a>(void)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_dec_and_test\">atomic_dec_and_test</a>(&amp;<a class=\"id\" href=\"#nl_table_users\">nl_table_users</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up\">wake_up</a>(&amp;<a class=\"id\" href=\"#nl_table_wait\">nl_table_wait</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#netlink_lookup\">netlink_lookup</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, int <a class=\"id\" href=\"#protocol\">protocol</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pid\">pid</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nl_pid_hash\">nl_pid_hash</a> *<a class=\"id\" href=\"#hash\">hash</a> = &amp;<a class=\"id\" href=\"#nl_table\">nl_table</a>[<a class=\"id\" href=\"#protocol\">protocol</a>].<a class=\"id\" href=\"#hash\">hash</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#nl_table_lock\">nl_table_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#nl_pid_hashfn\">nl_pid_hashfn</a>(<a class=\"id\" href=\"#hash\">hash</a>, <a class=\"id\" href=\"#pid\">pid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_for_each\">sk_for_each</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#head\">head</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#net_eq\">net_eq</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#net\">net</a>) && (<a class=\"id\" href=\"#nlk_sk\">nlk_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#pid\">pid</a> == <a class=\"id\" href=\"#pid\">pid</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_hold\">sock_hold</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#found\">found</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<a class=\"id\" href=\"#found\">found</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#nl_table_lock\">nl_table_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sk\">sk</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#nl_pid_hash_zalloc\">nl_pid_hash_zalloc</a>(<a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> <= <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(<a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return (struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__get_free_pages\">__get_free_pages</a>(<a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a> | <a class=\"id\" href=\"#__GFP_ZERO\">__GFP_ZERO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#get_order\">get_order</a>(<a class=\"id\" href=\"#size\">size</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#nl_pid_hash_free\">nl_pid_hash_free</a>(struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#table\">table</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> <= <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#table\">table</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_pages\">free_pages</a>((unsigned long)<a class=\"id\" href=\"#table\">table</a>, <a class=\"id\" href=\"#get_order\">get_order</a>(<a class=\"id\" href=\"#size\">size</a>));", 
"}", 
"", 
"static int <a class=\"id\" href=\"#nl_pid_hash_rehash\">nl_pid_hash_rehash</a>(struct <a class=\"id\" href=\"#nl_pid_hash\">nl_pid_hash</a> *<a class=\"id\" href=\"#hash\">hash</a>, int <a class=\"id\" href=\"#grow\">grow</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#omask\">omask</a>, <a class=\"id\" href=\"#mask\">mask</a>, <a class=\"id\" href=\"#shift\">shift</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#osize\">osize</a>, <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#otable\">otable</a>, *<a class=\"id\" href=\"#table\">table</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#omask\">omask</a> = <a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#hash\">hash</a>-><a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#osize\">osize</a> = <a class=\"id\" href=\"#size\">size</a> = (<a class=\"id\" href=\"#mask\">mask</a> + 1) * sizeof(*<a class=\"id\" href=\"#table\">table</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shift\">shift</a> = <a class=\"id\" href=\"#hash\">hash</a>-><a class=\"id\" href=\"#shift\">shift</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#grow\">grow</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (++<a class=\"id\" href=\"#shift\">shift</a> &gt; <a class=\"id\" href=\"#hash\">hash</a>-><a class=\"id\" href=\"#max_shift\">max_shift</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#mask\">mask</a> * 2 + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> *= 2;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#table\">table</a> = <a class=\"id\" href=\"#nl_pid_hash_zalloc\">nl_pid_hash_zalloc</a>(<a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#table\">table</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#otable\">otable</a> = <a class=\"id\" href=\"#hash\">hash</a>-><a class=\"id\" href=\"#table\">table</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a>-><a class=\"id\" href=\"#table\">table</a> = <a class=\"id\" href=\"#table\">table</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a>-><a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a>-><a class=\"id\" href=\"#shift\">shift</a> = <a class=\"id\" href=\"#shift\">shift</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_random_bytes\">get_random_bytes</a>(&amp;<a class=\"id\" href=\"#hash\">hash</a>-><a class=\"id\" href=\"#rnd\">rnd</a>, sizeof(<a class=\"id\" href=\"#hash\">hash</a>-><a class=\"id\" href=\"#rnd\">rnd</a>));", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> <= <a class=\"id\" href=\"#omask\">omask</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#node\">node</a>, *<a class=\"id\" href=\"#tmp\">tmp</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_for_each_safe\">sk_for_each_safe</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#tmp\">tmp</a>, &amp;<a class=\"id\" href=\"#otable\">otable</a>[<a class=\"id\" href=\"#i\">i</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__sk_add_node\">__sk_add_node</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#nl_pid_hashfn\">nl_pid_hashfn</a>(<a class=\"id\" href=\"#hash\">hash</a>, <a class=\"id\" href=\"#nlk_sk\">nlk_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#pid\">pid</a>));", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nl_pid_hash_free\">nl_pid_hash_free</a>(<a class=\"id\" href=\"#otable\">otable</a>, <a class=\"id\" href=\"#osize\">osize</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a>-><a class=\"id\" href=\"#rehash_time\">rehash_time</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a> + 10 * 60 * <a class=\"id\" href=\"#HZ\">HZ</a>;", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#nl_pid_hash_dilute\">nl_pid_hash_dilute</a>(struct <a class=\"id\" href=\"#nl_pid_hash\">nl_pid_hash</a> *<a class=\"id\" href=\"#hash\">hash</a>, int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#avg\">avg</a> = <a class=\"id\" href=\"#hash\">hash</a>-><a class=\"id\" href=\"#entries\">entries</a> >> <a class=\"id\" href=\"#hash\">hash</a>-><a class=\"id\" href=\"#shift\">shift</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#avg\">avg</a> &gt; 1) && <a class=\"id\" href=\"#nl_pid_hash_rehash\">nl_pid_hash_rehash</a>(<a class=\"id\" href=\"#hash\">hash</a>, 1))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#avg\">avg</a>) && <a class=\"id\" href=\"#time_after\">time_after</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a>, <a class=\"id\" href=\"#hash\">hash</a>-><a class=\"id\" href=\"#rehash_time\">rehash_time</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nl_pid_hash_rehash\">nl_pid_hash_rehash</a>(<a class=\"id\" href=\"#hash\">hash</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#proto_ops\">proto_ops</a> <a class=\"id\" href=\"#netlink_ops\">netlink_ops</a>;", 
"", 
"static void", 
"<a class=\"id\" href=\"#netlink_update_listeners\">netlink_update_listeners</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlink_table\">netlink_table</a> *<a class=\"id\" href=\"#tbl\">tbl</a> = &amp;<a class=\"id\" href=\"#nl_table\">nl_table</a>[<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_protocol\">sk_protocol</a>];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#NLGRPLONGS\">NLGRPLONGS</a>(<a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#groups\">groups</a>); <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_for_each_bound\">sk_for_each_bound</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#node\">node</a>, &amp;<a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#mc_list\">mc_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#NLGRPLONGS\">NLGRPLONGS</a>(<a class=\"id\" href=\"#nlk_sk\">nlk_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#ngroups\">ngroups</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> |= <a class=\"id\" href=\"#nlk_sk\">nlk_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#groups\">groups</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#listeners\">listeners</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* this function is only called with the netlink table \"grabbed\", which</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * makes sure updates are visible before bind or setsockopt return. */</span>", 
"}", 
"", 
"static int <a class=\"id\" href=\"#netlink_insert\">netlink_insert</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pid\">pid</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nl_pid_hash\">nl_pid_hash</a> *<a class=\"id\" href=\"#hash\">hash</a> = &amp;<a class=\"id\" href=\"#nl_table\">nl_table</a>[<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_protocol\">sk_protocol</a>].<a class=\"id\" href=\"#hash\">hash</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EADDRINUSE\">EADDRINUSE</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#osk\">osk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netlink_table_grab\">netlink_table_grab</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#nl_pid_hashfn\">nl_pid_hashfn</a>(<a class=\"id\" href=\"#hash\">hash</a>, <a class=\"id\" href=\"#pid\">pid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_for_each\">sk_for_each</a>(<a class=\"id\" href=\"#osk\">osk</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#head\">head</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#net_eq\">net_eq</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#osk\">osk</a>), <a class=\"id\" href=\"#net\">net</a>) && (<a class=\"id\" href=\"#nlk_sk\">nlk_sk</a>(<a class=\"id\" href=\"#osk\">osk</a>)-><a class=\"id\" href=\"#pid\">pid</a> == <a class=\"id\" href=\"#pid\">pid</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a>++;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#node\">node</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nlk_sk\">nlk_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#pid\">pid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a> &gt; 32 && <a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#hash\">hash</a>-><a class=\"id\" href=\"#entries\">entries</a> >= <a class=\"id\" href=\"#UINT_MAX\">UINT_MAX</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> && <a class=\"id\" href=\"#nl_pid_hash_dilute\">nl_pid_hash_dilute</a>(<a class=\"id\" href=\"#hash\">hash</a>, <a class=\"id\" href=\"#len\">len</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#nl_pid_hashfn\">nl_pid_hashfn</a>(<a class=\"id\" href=\"#hash\">hash</a>, <a class=\"id\" href=\"#pid\">pid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a>-><a class=\"id\" href=\"#entries\">entries</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlk_sk\">nlk_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#pid\">pid</a> = <a class=\"id\" href=\"#pid\">pid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_add_node\">sk_add_node</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#head\">head</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<a class=\"id\" href=\"#err\">err</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netlink_table_ungrab\">netlink_table_ungrab</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#netlink_remove\">netlink_remove</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netlink_table_grab\">netlink_table_grab</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk_del_node_init\">sk_del_node_init</a>(<a class=\"id\" href=\"#sk\">sk</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nl_table\">nl_table</a>[<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_protocol\">sk_protocol</a>].<a class=\"id\" href=\"#hash\">hash</a>.<a class=\"id\" href=\"#entries\">entries</a>--;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nlk_sk\">nlk_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#subscriptions\">subscriptions</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__sk_del_bind_node\">__sk_del_bind_node</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netlink_table_ungrab\">netlink_table_ungrab</a>();", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#proto\">proto</a> <a class=\"id\" href=\"#netlink_proto\">netlink_proto</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/>  = \"NETLINK\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/>  = <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#obj_size\">obj_size</a> = sizeof(struct <a class=\"id\" href=\"#netlink_sock\">netlink_sock</a>),", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__netlink_create\">__netlink_create</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#mutex\">mutex</a> *<a class=\"id\" href=\"#cb_mutex\">cb_mutex</a>, int <a class=\"id\" href=\"#protocol\">protocol</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlink_sock\">netlink_sock</a> *<a class=\"id\" href=\"#nlk\">nlk</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#ops\">ops</a> = &amp;<a class=\"id\" href=\"#netlink_ops\">netlink_ops</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#sk_alloc\">sk_alloc</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#PF_NETLINK\">PF_NETLINK</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>, &amp;<a class=\"id\" href=\"#netlink_proto\">netlink_proto</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sk\">sk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_init_data\">sock_init_data</a>(<a class=\"id\" href=\"#sock\">sock</a>, <a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlk\">nlk</a> = <a class=\"id\" href=\"#nlk_sk\">nlk_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cb_mutex\">cb_mutex</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#cb_mutex\">cb_mutex</a> = <a class=\"id\" href=\"#cb_mutex\">cb_mutex</a>;", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#cb_mutex\">cb_mutex</a> = &amp;<a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#cb_def_mutex\">cb_def_mutex</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_init\">mutex_init</a>(<a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#cb_mutex\">cb_mutex</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_waitqueue_head\">init_waitqueue_head</a>(&amp;<a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#wait\">wait</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_destruct\">sk_destruct</a> = <a class=\"id\" href=\"#netlink_sock_destruct\">netlink_sock_destruct</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_protocol\">sk_protocol</a> = <a class=\"id\" href=\"#protocol\">protocol</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#netlink_create\">netlink_create</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, int <a class=\"id\" href=\"#protocol\">protocol</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  int <a class=\"id\" href=\"#kern\">kern</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#module\">module</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mutex\">mutex</a> *<a class=\"id\" href=\"#cb_mutex\">cb_mutex</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlink_sock\">netlink_sock</a> *<a class=\"id\" href=\"#nlk\">nlk</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#SS_UNCONNECTED\">SS_UNCONNECTED</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#SOCK_RAW\">SOCK_RAW</a> && <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#SOCK_DGRAM\">SOCK_DGRAM</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ESOCKTNOSUPPORT\">ESOCKTNOSUPPORT</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#protocol\">protocol</a> &lt; 0 || <a class=\"id\" href=\"#protocol\">protocol</a> >= <a class=\"id\" href=\"#MAX_LINKS\">MAX_LINKS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPROTONOSUPPORT\">EPROTONOSUPPORT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netlink_lock_table\">netlink_lock_table</a>();", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_MODULES\">CONFIG_MODULES</a>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#nl_table\">nl_table</a>[<a class=\"id\" href=\"#protocol\">protocol</a>].<a class=\"id\" href=\"#registered\">registered</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netlink_unlock_table\">netlink_unlock_table</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#request_module\">request_module</a>(\"net-pf-%d-proto-%d\", <a class=\"id\" href=\"#PF_NETLINK\">PF_NETLINK</a>, <a class=\"id\" href=\"#protocol\">protocol</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netlink_lock_table\">netlink_lock_table</a>();", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nl_table\">nl_table</a>[<a class=\"id\" href=\"#protocol\">protocol</a>].<a class=\"id\" href=\"#registered\">registered</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#try_module_get\">try_module_get</a>(<a class=\"id\" href=\"#nl_table\">nl_table</a>[<a class=\"id\" href=\"#protocol\">protocol</a>].<a class=\"id\" href=\"#module\">module</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#module\">module</a> = <a class=\"id\" href=\"#nl_table\">nl_table</a>[<a class=\"id\" href=\"#protocol\">protocol</a>].<a class=\"id\" href=\"#module\">module</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EPROTONOSUPPORT\">EPROTONOSUPPORT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cb_mutex\">cb_mutex</a> = <a class=\"id\" href=\"#nl_table\">nl_table</a>[<a class=\"id\" href=\"#protocol\">protocol</a>].<a class=\"id\" href=\"#cb_mutex\">cb_mutex</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netlink_unlock_table\">netlink_unlock_table</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#__netlink_create\">__netlink_create</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#sock\">sock</a>, <a class=\"id\" href=\"#cb_mutex\">cb_mutex</a>, <a class=\"id\" href=\"#protocol\">protocol</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_module\">out_module</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_bh_disable\">local_bh_disable</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_prot_inuse_add\">sock_prot_inuse_add</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#netlink_proto\">netlink_proto</a>, 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_bh_enable\">local_bh_enable</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlk\">nlk</a> = <a class=\"id\" href=\"#nlk_sk\">nlk_sk</a>(<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#module\">module</a> = <a class=\"id\" href=\"#module\">module</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<a class=\"id\" href=\"#out_module\">out_module</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#module\">module</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#netlink_release\">netlink_release</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlink_sock\">netlink_sock</a> *<a class=\"id\" href=\"#nlk\">nlk</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sk\">sk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netlink_remove\">netlink_remove</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_orphan\">sock_orphan</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlk\">nlk</a> = <a class=\"id\" href=\"#nlk_sk\">nlk_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * OK. Socket is unlinked, any packets that arrive now</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * will be purged.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible_all\">wake_up_interruptible_all</a>(&amp;<a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#wait\">wait</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_queue_purge\">skb_queue_purge</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_write_queue\">sk_write_queue</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#pid\">pid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#netlink_notify\">netlink_notify</a> <a class=\"id\" href=\"#n\">n</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#protocol\">protocol</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_protocol\">sk_protocol</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#pid\">pid</a> = <a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#pid\">pid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  };", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_notifier_call_chain\">atomic_notifier_call_chain</a>(&amp;<a class=\"id\" href=\"#netlink_chain\">netlink_chain</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NETLINK_URELEASE\">NETLINK_URELEASE</a>, &amp;<a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#module\">module</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netlink_table_grab\">netlink_table_grab</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#netlink_is_kernel\">netlink_is_kernel</a>(<a class=\"id\" href=\"#sk\">sk</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#nl_table\">nl_table</a>[<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_protocol\">sk_protocol</a>].<a class=\"id\" href=\"#registered\">registered</a> == 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (--<a class=\"id\" href=\"#nl_table\">nl_table</a>[<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_protocol\">sk_protocol</a>].<a class=\"id\" href=\"#registered\">registered</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#nl_table\">nl_table</a>[<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_protocol\">sk_protocol</a>].<a class=\"id\" href=\"#listeners\">listeners</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nl_table\">nl_table</a>[<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_protocol\">sk_protocol</a>].<a class=\"id\" href=\"#module\">module</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nl_table\">nl_table</a>[<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_protocol\">sk_protocol</a>].<a class=\"id\" href=\"#registered\">registered</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#subscriptions\">subscriptions</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netlink_update_listeners\">netlink_update_listeners</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netlink_table_ungrab\">netlink_table_ungrab</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#groups\">groups</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#groups\">groups</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_bh_disable\">local_bh_disable</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_prot_inuse_add\">sock_prot_inuse_add</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), &amp;<a class=\"id\" href=\"#netlink_proto\">netlink_proto</a>, -1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_bh_enable\">local_bh_enable</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_put\">sock_put</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#netlink_autobind\">netlink_autobind</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nl_pid_hash\">nl_pid_hash</a> *<a class=\"id\" href=\"#hash\">hash</a> = &amp;<a class=\"id\" href=\"#nl_table\">nl_table</a>[<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_protocol\">sk_protocol</a>].<a class=\"id\" href=\"#hash\">hash</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#osk\">osk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s32\">s32</a> <a class=\"id\" href=\"#pid\">pid</a> = <a class=\"id\" href=\"#task_tgid_vnr\">task_tgid_vnr</a>(<a class=\"id\" href=\"#current\">current</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>static <a class=\"id\" href=\"#s32\">s32</a> <a class=\"id\" href=\"#rover\">rover</a> = -4097;", 
"", 
"<a class=\"id\" href=\"#retry\">retry</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cond_resched\">cond_resched</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netlink_table_grab\">netlink_table_grab</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#nl_pid_hashfn\">nl_pid_hashfn</a>(<a class=\"id\" href=\"#hash\">hash</a>, <a class=\"id\" href=\"#pid\">pid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_for_each\">sk_for_each</a>(<a class=\"id\" href=\"#osk\">osk</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#head\">head</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#net_eq\">net_eq</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#osk\">osk</a>), <a class=\"id\" href=\"#net\">net</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nlk_sk\">nlk_sk</a>(<a class=\"id\" href=\"#osk\">osk</a>)-><a class=\"id\" href=\"#pid\">pid</a> == <a class=\"id\" href=\"#pid\">pid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Bind collision, search negative pid values. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pid\">pid</a> = <a class=\"id\" href=\"#rover\">rover</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rover\">rover</a> &gt; -4097)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rover\">rover</a> = -4097;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netlink_table_ungrab\">netlink_table_ungrab</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#retry\">retry</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netlink_table_ungrab\">netlink_table_ungrab</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#netlink_insert\">netlink_insert</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#pid\">pid</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == -<a class=\"id\" href=\"#EADDRINUSE\">EADDRINUSE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#retry\">retry</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If 2 threads race to autobind, that is fine.  */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#netlink_capable\">netlink_capable</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, unsigned int <a class=\"id\" href=\"#flag\">flag</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#nl_table\">nl_table</a>[<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_protocol\">sk_protocol</a>].<a class=\"id\" href=\"#nl_nonroot\">nl_nonroot</a> &amp; <a class=\"id\" href=\"#flag\">flag</a>) ||", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_NET_ADMIN\">CAP_NET_ADMIN</a>);", 
"}", 
"", 
"static void", 
"<a class=\"id\" href=\"#netlink_update_subscriptions\">netlink_update_subscriptions</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, unsigned int <a class=\"id\" href=\"#subscriptions\">subscriptions</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlink_sock\">netlink_sock</a> *<a class=\"id\" href=\"#nlk\">nlk</a> = <a class=\"id\" href=\"#nlk_sk\">nlk_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#subscriptions\">subscriptions</a> && !<a class=\"id\" href=\"#subscriptions\">subscriptions</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__sk_del_bind_node\">__sk_del_bind_node</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>else if (!<a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#subscriptions\">subscriptions</a> && <a class=\"id\" href=\"#subscriptions\">subscriptions</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_add_bind_node\">sk_add_bind_node</a>(<a class=\"id\" href=\"#sk\">sk</a>, &amp;<a class=\"id\" href=\"#nl_table\">nl_table</a>[<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_protocol\">sk_protocol</a>].<a class=\"id\" href=\"#mc_list\">mc_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#subscriptions\">subscriptions</a> = <a class=\"id\" href=\"#subscriptions\">subscriptions</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#netlink_realloc_groups\">netlink_realloc_groups</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlink_sock\">netlink_sock</a> *<a class=\"id\" href=\"#nlk\">nlk</a> = <a class=\"id\" href=\"#nlk_sk\">nlk_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#groups\">groups</a>;", 
"<span class=\"ts\"/>unsigned long *<a class=\"id\" href=\"#new_groups\">new_groups</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netlink_table_grab\">netlink_table_grab</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#groups\">groups</a> = <a class=\"id\" href=\"#nl_table\">nl_table</a>[<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_protocol\">sk_protocol</a>].<a class=\"id\" href=\"#groups\">groups</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#nl_table\">nl_table</a>[<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_protocol\">sk_protocol</a>].<a class=\"id\" href=\"#registered\">registered</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#ngroups\">ngroups</a> >= <a class=\"id\" href=\"#groups\">groups</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_groups\">new_groups</a> = <a class=\"id\" href=\"#krealloc\">krealloc</a>(<a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#groups\">groups</a>, <a class=\"id\" href=\"#NLGRPSZ\">NLGRPSZ</a>(<a class=\"id\" href=\"#groups\">groups</a>), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new_groups\">new_groups</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>((char *)<a class=\"id\" href=\"#new_groups\">new_groups</a> + <a class=\"id\" href=\"#NLGRPSZ\">NLGRPSZ</a>(<a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#ngroups\">ngroups</a>), 0,", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#NLGRPSZ\">NLGRPSZ</a>(<a class=\"id\" href=\"#groups\">groups</a>) - <a class=\"id\" href=\"#NLGRPSZ\">NLGRPSZ</a>(<a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#ngroups\">ngroups</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#groups\">groups</a> = <a class=\"id\" href=\"#new_groups\">new_groups</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#ngroups\">ngroups</a> = <a class=\"id\" href=\"#groups\">groups</a>;", 
" <a class=\"id\" href=\"#out_unlock\">out_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netlink_table_ungrab\">netlink_table_ungrab</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#netlink_bind\">netlink_bind</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *<a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#addr_len\">addr_len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlink_sock\">netlink_sock</a> *<a class=\"id\" href=\"#nlk\">nlk</a> = <a class=\"id\" href=\"#nlk_sk\">nlk_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_nl\">sockaddr_nl</a> *<a class=\"id\" href=\"#nladdr\">nladdr</a> = (struct <a class=\"id\" href=\"#sockaddr_nl\">sockaddr_nl</a> *)<a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nladdr\">nladdr</a>-><a class=\"id\" href=\"#nl_family\">nl_family</a> != <a class=\"id\" href=\"#AF_NETLINK\">AF_NETLINK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Only superuser is allowed to listen multicasts */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nladdr\">nladdr</a>-><a class=\"id\" href=\"#nl_groups\">nl_groups</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#netlink_capable\">netlink_capable</a>(<a class=\"id\" href=\"#sock\">sock</a>, <a class=\"id\" href=\"#NL_NONROOT_RECV\">NL_NONROOT_RECV</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#netlink_realloc_groups\">netlink_realloc_groups</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#pid\">pid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nladdr\">nladdr</a>-><a class=\"id\" href=\"#nl_pid\">nl_pid</a> != <a class=\"id\" href=\"#nlk\">nlk</a>-><a class=\"id\" href=\"#pid\">pid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#nladdr\">nladdr</a>-><a class=\"id\" href=\"#nl_pid\">nl_pid</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netlink_insert\">netlink_insert</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#nladdr\">nladdr</a>-><a class=\"id\" href=\"#nl_pid\">nl_pid</a>) :", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netlink_autobind\">netlink_autobind</a>(<a class=\"id\" href=\"#sock\">sock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"", 
];
xr_frag_insert('l/64/89c4cea0e5b8fa3dcc879012f36dbd6ff4a5f7.xr', __xr_tmp);
