var __xr_tmp = [
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> <a class=\"id\" href=\"#buf\">buf</a>[2];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#levdatum\">levdatum</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#levdatum\">levdatum</a>), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#levdatum\">levdatum</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[0]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#levdatum\">levdatum</a>-><a class=\"id\" href=\"#isalias\">isalias</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[1]);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#len\">len</a> + 1, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#key\">key</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#fp\">fp</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a>[<a class=\"id\" href=\"#len\">len</a>] = '\\0';", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#levdatum\">levdatum</a>-><a class=\"id\" href=\"#level\">level</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(struct <a class=\"id\" href=\"#mls_level\">mls_level</a>), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#levdatum\">levdatum</a>-><a class=\"id\" href=\"#level\">level</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mls_read_level\">mls_read_level</a>(<a class=\"id\" href=\"#levdatum\">levdatum</a>-><a class=\"id\" href=\"#level\">level</a>, <a class=\"id\" href=\"#fp\">fp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#hashtab_insert\">hashtab_insert</a>(<a class=\"id\" href=\"#h\">h</a>, <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#levdatum\">levdatum</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<a class=\"id\" href=\"#bad\">bad</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sens_destroy\">sens_destroy</a>(<a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#levdatum\">levdatum</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cat_read\">cat_read</a>(struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>, struct <a class=\"id\" href=\"#hashtab\">hashtab</a> *<a class=\"id\" href=\"#h\">h</a>, void *<a class=\"id\" href=\"#fp\">fp</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cat_datum\">cat_datum</a> *<a class=\"id\" href=\"#catdatum\">catdatum</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> <a class=\"id\" href=\"#buf\">buf</a>[3];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#catdatum\">catdatum</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#catdatum\">catdatum</a>), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#catdatum\">catdatum</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[0]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#catdatum\">catdatum</a>-><a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[1]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#catdatum\">catdatum</a>-><a class=\"id\" href=\"#isalias\">isalias</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[2]);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#len\">len</a> + 1, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#key\">key</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#fp\">fp</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a>[<a class=\"id\" href=\"#len\">len</a>] = '\\0';", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#hashtab_insert\">hashtab_insert</a>(<a class=\"id\" href=\"#h\">h</a>, <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#catdatum\">catdatum</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<a class=\"id\" href=\"#bad\">bad</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cat_destroy\">cat_destroy</a>(<a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#catdatum\">catdatum</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"static int (*<a class=\"id\" href=\"#read_f\">read_f</a>[<a class=\"id\" href=\"#SYM_NUM\">SYM_NUM</a>]) (struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>, struct <a class=\"id\" href=\"#hashtab\">hashtab</a> *<a class=\"id\" href=\"#h\">h</a>, void *<a class=\"id\" href=\"#fp\">fp</a>) =", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#common_read\">common_read</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#class_read\">class_read</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#role_read\">role_read</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#type_read\">type_read</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#user_read\">user_read</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cond_read_bool\">cond_read_bool</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sens_read\">sens_read</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cat_read\">cat_read</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#user_bounds_sanity_check\">user_bounds_sanity_check</a>(void *<a class=\"id\" href=\"#key\">key</a>, void *<a class=\"id\" href=\"#datum\">datum</a>, void *<a class=\"id\" href=\"#datap\">datap</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#user_datum\">user_datum</a> *<a class=\"id\" href=\"#upper\">upper</a>, *<a class=\"id\" href=\"#user\">user</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#datap\">datap</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#depth\">depth</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#upper\">upper</a> = <a class=\"id\" href=\"#user\">user</a> = <a class=\"id\" href=\"#datum\">datum</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#upper\">upper</a>-><a class=\"id\" href=\"#bounds\">bounds</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ebitmap_node\">ebitmap_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#bit\">bit</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (++<a class=\"id\" href=\"#depth\">depth</a> == <a class=\"id\" href=\"#POLICYDB_BOUNDS_MAXDEPTH\">POLICYDB_BOUNDS_MAXDEPTH</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: user %s: \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"too deep or looped boundary\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (char *) <a class=\"id\" href=\"#key\">key</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#upper\">upper</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#user_val_to_struct\">user_val_to_struct</a>[<a class=\"id\" href=\"#upper\">upper</a>-><a class=\"id\" href=\"#bounds\">bounds</a> - 1];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ebitmap_for_each_positive_bit\">ebitmap_for_each_positive_bit</a>(&amp;<a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#roles\">roles</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#bit\">bit</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ebitmap_get_bit\">ebitmap_get_bit</a>(&amp;<a class=\"id\" href=\"#upper\">upper</a>-><a class=\"id\" href=\"#roles\">roles</a>, <a class=\"id\" href=\"#bit\">bit</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"SELinux: boundary violated policy: \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"user=%s role=%s bounds=%s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_user_val_to_name\">p_user_val_to_name</a>[<a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#value\">value</a> - 1],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_role_val_to_name\">p_role_val_to_name</a>[<a class=\"id\" href=\"#bit\">bit</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_user_val_to_name\">p_user_val_to_name</a>[<a class=\"id\" href=\"#upper\">upper</a>-><a class=\"id\" href=\"#value\">value</a> - 1]);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#role_bounds_sanity_check\">role_bounds_sanity_check</a>(void *<a class=\"id\" href=\"#key\">key</a>, void *<a class=\"id\" href=\"#datum\">datum</a>, void *<a class=\"id\" href=\"#datap\">datap</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#role_datum\">role_datum</a> *<a class=\"id\" href=\"#upper\">upper</a>, *<a class=\"id\" href=\"#role\">role</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#datap\">datap</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#depth\">depth</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#upper\">upper</a> = <a class=\"id\" href=\"#role\">role</a> = <a class=\"id\" href=\"#datum\">datum</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#upper\">upper</a>-><a class=\"id\" href=\"#bounds\">bounds</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ebitmap_node\">ebitmap_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#bit\">bit</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (++<a class=\"id\" href=\"#depth\">depth</a> == <a class=\"id\" href=\"#POLICYDB_BOUNDS_MAXDEPTH\">POLICYDB_BOUNDS_MAXDEPTH</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: role %s: \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"too deep or looped bounds\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (char *) <a class=\"id\" href=\"#key\">key</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#upper\">upper</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#role_val_to_struct\">role_val_to_struct</a>[<a class=\"id\" href=\"#upper\">upper</a>-><a class=\"id\" href=\"#bounds\">bounds</a> - 1];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ebitmap_for_each_positive_bit\">ebitmap_for_each_positive_bit</a>(&amp;<a class=\"id\" href=\"#role\">role</a>-><a class=\"id\" href=\"#types\">types</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#bit\">bit</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ebitmap_get_bit\">ebitmap_get_bit</a>(&amp;<a class=\"id\" href=\"#upper\">upper</a>-><a class=\"id\" href=\"#types\">types</a>, <a class=\"id\" href=\"#bit\">bit</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"SELinux: boundary violated policy: \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"role=%s type=%s bounds=%s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_role_val_to_name\">p_role_val_to_name</a>[<a class=\"id\" href=\"#role\">role</a>-><a class=\"id\" href=\"#value\">value</a> - 1],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_type_val_to_name\">p_type_val_to_name</a>[<a class=\"id\" href=\"#bit\">bit</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_role_val_to_name\">p_role_val_to_name</a>[<a class=\"id\" href=\"#upper\">upper</a>-><a class=\"id\" href=\"#value\">value</a> - 1]);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#type_bounds_sanity_check\">type_bounds_sanity_check</a>(void *<a class=\"id\" href=\"#key\">key</a>, void *<a class=\"id\" href=\"#datum\">datum</a>, void *<a class=\"id\" href=\"#datap\">datap</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#type_datum\">type_datum</a> *<a class=\"id\" href=\"#upper\">upper</a>, *<a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#datap\">datap</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#depth\">depth</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#upper\">upper</a> = <a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#datum\">datum</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#upper\">upper</a>-><a class=\"id\" href=\"#bounds\">bounds</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (++<a class=\"id\" href=\"#depth\">depth</a> == <a class=\"id\" href=\"#POLICYDB_BOUNDS_MAXDEPTH\">POLICYDB_BOUNDS_MAXDEPTH</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: type %s: \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"too deep or looped boundary\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (char *) <a class=\"id\" href=\"#key\">key</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#upper\">upper</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#type_val_to_struct\">type_val_to_struct</a>[<a class=\"id\" href=\"#upper\">upper</a>-><a class=\"id\" href=\"#bounds\">bounds</a> - 1];", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#upper\">upper</a>-><a class=\"id\" href=\"#attribute\">attribute</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: type %s: \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"bounded by attribute %s\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (char *) <a class=\"id\" href=\"#key\">key</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_type_val_to_name\">p_type_val_to_name</a>[<a class=\"id\" href=\"#upper\">upper</a>-><a class=\"id\" href=\"#value\">value</a> - 1]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#policydb_bounds_sanity_check\">policydb_bounds_sanity_check</a>(struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#policyvers\">policyvers</a> &lt; <a class=\"id\" href=\"#POLICYDB_VERSION_BOUNDARY\">POLICYDB_VERSION_BOUNDARY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#hashtab_map\">hashtab_map</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_users\">p_users</a>.<a class=\"id\" href=\"#table\">table</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#user_bounds_sanity_check\">user_bounds_sanity_check</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#hashtab_map\">hashtab_map</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_roles\">p_roles</a>.<a class=\"id\" href=\"#table\">table</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#role_bounds_sanity_check\">role_bounds_sanity_check</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#hashtab_map\">hashtab_map</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_types\">p_types</a>.<a class=\"id\" href=\"#table\">table</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#type_bounds_sanity_check\">type_bounds_sanity_check</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"extern int <a class=\"id\" href=\"#ss_initialized\">ss_initialized</a>;", 
"", 
"<a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#string_to_security_class\">string_to_security_class</a>(struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>, const char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#class_datum\">class_datum</a> *<a class=\"id\" href=\"#cladatum\">cladatum</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cladatum\">cladatum</a> = <a class=\"id\" href=\"#hashtab_search\">hashtab_search</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_classes\">p_classes</a>.<a class=\"id\" href=\"#table\">table</a>, <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cladatum\">cladatum</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cladatum\">cladatum</a>-><a class=\"id\" href=\"#value\">value</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#string_to_av_perm\">string_to_av_perm</a>(struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#tclass\">tclass</a>, const char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#class_datum\">class_datum</a> *<a class=\"id\" href=\"#cladatum\">cladatum</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#perm_datum\">perm_datum</a> *<a class=\"id\" href=\"#perdatum\">perdatum</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#common_datum\">common_datum</a> *<a class=\"id\" href=\"#comdatum\">comdatum</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tclass\">tclass</a> || <a class=\"id\" href=\"#tclass\">tclass</a> &gt; <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_classes\">p_classes</a>.<a class=\"id\" href=\"#nprim\">nprim</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cladatum\">cladatum</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#class_val_to_struct\">class_val_to_struct</a>[<a class=\"id\" href=\"#tclass\">tclass</a>-1];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#comdatum\">comdatum</a> = <a class=\"id\" href=\"#cladatum\">cladatum</a>-><a class=\"id\" href=\"#comdatum\">comdatum</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#comdatum\">comdatum</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#perdatum\">perdatum</a> = <a class=\"id\" href=\"#hashtab_search\">hashtab_search</a>(<a class=\"id\" href=\"#comdatum\">comdatum</a>-><a class=\"id\" href=\"#permissions\">permissions</a>.<a class=\"id\" href=\"#table\">table</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#perdatum\">perdatum</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#perdatum\">perdatum</a> = <a class=\"id\" href=\"#hashtab_search\">hashtab_search</a>(<a class=\"id\" href=\"#cladatum\">cladatum</a>-><a class=\"id\" href=\"#permissions\">permissions</a>.<a class=\"id\" href=\"#table\">table</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#perdatum\">perdatum</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>return 1U << (<a class=\"id\" href=\"#perdatum\">perdatum</a>-><a class=\"id\" href=\"#value\">value</a>-1);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#range_read\">range_read</a>(struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>, void *<a class=\"id\" href=\"#fp\">fp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#range_trans\">range_trans</a> *<a class=\"id\" href=\"#rt\">rt</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mls_range\">mls_range</a> *<a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> <a class=\"id\" href=\"#buf\">buf</a>[2];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#nel\">nel</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#policyvers\">policyvers</a> &lt; <a class=\"id\" href=\"#POLICYDB_VERSION_MLS\">POLICYDB_VERSION_MLS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof(<a class=\"id\" href=\"#u32\">u32</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nel\">nel</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[0]);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nel\">nel</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt\">rt</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#rt\">rt</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#rt\">rt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#fp\">fp</a>, (sizeof(<a class=\"id\" href=\"#u32\">u32</a>) * 2));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#source_type\">source_type</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[0]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#target_type\">target_type</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[1]);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#policyvers\">policyvers</a> >= <a class=\"id\" href=\"#POLICYDB_VERSION_RANGETRANS\">POLICYDB_VERSION_RANGETRANS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof(<a class=\"id\" href=\"#u32\">u32</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#target_class\">target_class</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[0]);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#target_class\">target_class</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#process_class\">process_class</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#policydb_type_isvalid\">policydb_type_isvalid</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#source_type\">source_type</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#policydb_type_isvalid\">policydb_type_isvalid</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#target_type\">target_type</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#policydb_class_isvalid\">policydb_class_isvalid</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#target_class\">target_class</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#r\">r</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#r\">r</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#mls_read_range_helper\">mls_read_range_helper</a>(<a class=\"id\" href=\"#r\">r</a>, <a class=\"id\" href=\"#fp\">fp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#mls_range_isvalid\">mls_range_isvalid</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#r\">r</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"SELinux:  rangetrans:  invalid range\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#hashtab_insert\">hashtab_insert</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#range_tr\">range_tr</a>, <a class=\"id\" href=\"#rt\">rt</a>, <a class=\"id\" href=\"#r\">r</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt\">rt</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rangetr_hash_eval\">rangetr_hash_eval</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#range_tr\">range_tr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#rt\">rt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#r\">r</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#genfs_read\">genfs_read</a>(struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>, void *<a class=\"id\" href=\"#fp\">fp</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#nel\">nel</a>, <a class=\"id\" href=\"#nel2\">nel2</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#len2\">len2</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> <a class=\"id\" href=\"#buf\">buf</a>[1];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ocontext\">ocontext</a> *<a class=\"id\" href=\"#l\">l</a>, *<a class=\"id\" href=\"#c\">c</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ocontext\">ocontext</a> *<a class=\"id\" href=\"#newc\">newc</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#genfs\">genfs</a> *<a class=\"id\" href=\"#genfs_p\">genfs_p</a>, *<a class=\"id\" href=\"#genfs\">genfs</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#genfs\">genfs</a> *<a class=\"id\" href=\"#newgenfs\">newgenfs</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof(<a class=\"id\" href=\"#u32\">u32</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nel\">nel</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[0]);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nel\">nel</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof(<a class=\"id\" href=\"#u32\">u32</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[0]);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newgenfs\">newgenfs</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#newgenfs\">newgenfs</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#newgenfs\">newgenfs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newgenfs\">newgenfs</a>-><a class=\"id\" href=\"#fstype\">fstype</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#len\">len</a> + 1, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#newgenfs\">newgenfs</a>-><a class=\"id\" href=\"#fstype\">fstype</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#newgenfs\">newgenfs</a>-><a class=\"id\" href=\"#fstype\">fstype</a>, <a class=\"id\" href=\"#fp\">fp</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newgenfs\">newgenfs</a>-><a class=\"id\" href=\"#fstype\">fstype</a>[<a class=\"id\" href=\"#len\">len</a>] = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#genfs_p\">genfs_p</a> = <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#genfs\">genfs</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#genfs\">genfs</a>; <a class=\"id\" href=\"#genfs\">genfs</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#genfs_p\">genfs_p</a> = <a class=\"id\" href=\"#genfs\">genfs</a>, <a class=\"id\" href=\"#genfs\">genfs</a> = <a class=\"id\" href=\"#genfs\">genfs</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#newgenfs\">newgenfs</a>-><a class=\"id\" href=\"#fstype\">fstype</a>, <a class=\"id\" href=\"#genfs\">genfs</a>-><a class=\"id\" href=\"#fstype\">fstype</a>) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux:  dup genfs fstype %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#newgenfs\">newgenfs</a>-><a class=\"id\" href=\"#fstype\">fstype</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#newgenfs\">newgenfs</a>-><a class=\"id\" href=\"#fstype\">fstype</a>, <a class=\"id\" href=\"#genfs\">genfs</a>-><a class=\"id\" href=\"#fstype\">fstype</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newgenfs\">newgenfs</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#genfs\">genfs</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#genfs_p\">genfs_p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#genfs_p\">genfs_p</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#newgenfs\">newgenfs</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#genfs\">genfs</a> = <a class=\"id\" href=\"#newgenfs\">newgenfs</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#genfs\">genfs</a> = <a class=\"id\" href=\"#newgenfs\">newgenfs</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newgenfs\">newgenfs</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof(<a class=\"id\" href=\"#u32\">u32</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nel2\">nel2</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[0]);", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#nel2\">nel2</a>; <a class=\"id\" href=\"#j\">j</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof(<a class=\"id\" href=\"#u32\">u32</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[0]);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newc\">newc</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#newc\">newc</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#newc\">newc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newc\">newc</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#len\">len</a> + 1, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#newc\">newc</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#name\">name</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#newc\">newc</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#fp\">fp</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newc\">newc</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#name\">name</a>[<a class=\"id\" href=\"#len\">len</a>] = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof(<a class=\"id\" href=\"#u32\">u32</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newc\">newc</a>-><a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#sclass\">sclass</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[0]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#context_read_and_validate\">context_read_and_validate</a>(&amp;<a class=\"id\" href=\"#newc\">newc</a>-><a class=\"id\" href=\"#context\">context</a>[0], <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#fp\">fp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#genfs\">genfs</a>-><a class=\"id\" href=\"#head\">head</a>; <a class=\"id\" href=\"#c\">c</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#newc\">newc</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#name\">name</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (!<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#sclass\">sclass</a> || !<a class=\"id\" href=\"#newc\">newc</a>-><a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#sclass\">sclass</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#newc\">newc</a>-><a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#sclass\">sclass</a> == <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#sclass\">sclass</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux:  dup genfs entry (%s,%s)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#genfs\">genfs</a>-><a class=\"id\" href=\"#fstype\">fstype</a>, <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#newc\">newc</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len2\">len2</a> = <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#len2\">len2</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newc\">newc</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#c\">c</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#l\">l</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#newc\">newc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#genfs\">genfs</a>-><a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#newc\">newc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newc\">newc</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#newgenfs\">newgenfs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#newgenfs\">newgenfs</a>-><a class=\"id\" href=\"#fstype\">fstype</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#newgenfs\">newgenfs</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ocontext_destroy\">ocontext_destroy</a>(<a class=\"id\" href=\"#newc\">newc</a>, <a class=\"id\" href=\"#OCON_FSUSE\">OCON_FSUSE</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ocontext_read\">ocontext_read</a>(struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>, struct <a class=\"id\" href=\"#policydb_compat_info\">policydb_compat_info</a> *<a class=\"id\" href=\"#info\">info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> void *<a class=\"id\" href=\"#fp\">fp</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#nel\">nel</a>, <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> <a class=\"id\" href=\"#buf\">buf</a>[3];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ocontext\">ocontext</a> *<a class=\"id\" href=\"#l\">l</a>, *<a class=\"id\" href=\"#c\">c</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#nodebuf\">nodebuf</a>[8];", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#ocon_num\">ocon_num</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof(<a class=\"id\" href=\"#u32\">u32</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nel\">nel</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[0]);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#nel\">nel</a>; <a class=\"id\" href=\"#j\">j</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#c\">c</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#c\">c</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#l\">l</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#c\">c</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#ocontexts\">ocontexts</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#c\">c</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#c\">c</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#OCON_ISID\">OCON_ISID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof(<a class=\"id\" href=\"#u32\">u32</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#sid\">sid</a>[0] = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[0]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#context_read_and_validate\">context_read_and_validate</a>(&amp;<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#context\">context</a>[0], <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#fp\">fp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#OCON_FS\">OCON_FS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#OCON_NETIF\">OCON_NETIF</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof(<a class=\"id\" href=\"#u32\">u32</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[0]);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#len\">len</a> + 1, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#name\">name</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#fp\">fp</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#name\">name</a>[<a class=\"id\" href=\"#len\">len</a>] = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#context_read_and_validate\">context_read_and_validate</a>(&amp;<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#context\">context</a>[0], <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#fp\">fp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#context_read_and_validate\">context_read_and_validate</a>(&amp;<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#context\">context</a>[1], <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#fp\">fp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#OCON_PORT\">OCON_PORT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof(<a class=\"id\" href=\"#u32\">u32</a>)*3);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#protocol\">protocol</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[0]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#low_port\">low_port</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[1]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#high_port\">high_port</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[2]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#context_read_and_validate\">context_read_and_validate</a>(&amp;<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#context\">context</a>[0], <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#fp\">fp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#OCON_NODE\">OCON_NODE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#nodebuf\">nodebuf</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof(<a class=\"id\" href=\"#u32\">u32</a>) * 2);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#node\">node</a>.<a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#nodebuf\">nodebuf</a>[0]; <span class=\"comment\">/* network order */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#node\">node</a>.<a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#nodebuf\">nodebuf</a>[1]; <span class=\"comment\">/* network order */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#context_read_and_validate\">context_read_and_validate</a>(&amp;<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#context\">context</a>[0], <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#fp\">fp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#OCON_FSUSE\">OCON_FSUSE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof(<a class=\"id\" href=\"#u32\">u32</a>)*2);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#behavior\">behavior</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[0]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#behavior\">behavior</a> &gt; <a class=\"id\" href=\"#SECURITY_FS_USE_NONE\">SECURITY_FS_USE_NONE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[1]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#len\">len</a> + 1, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#name\">name</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#fp\">fp</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#name\">name</a>[<a class=\"id\" href=\"#len\">len</a>] = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#context_read_and_validate\">context_read_and_validate</a>(&amp;<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#context\">context</a>[0], <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#fp\">fp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#OCON_NODE6\">OCON_NODE6</a>: {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#k\">k</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#nodebuf\">nodebuf</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof(<a class=\"id\" href=\"#u32\">u32</a>) * 8);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#k\">k</a> = 0; <a class=\"id\" href=\"#k\">k</a> &lt; 4; <a class=\"id\" href=\"#k\">k</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#node6\">node6</a>.<a class=\"id\" href=\"#addr\">addr</a>[<a class=\"id\" href=\"#k\">k</a>] = <a class=\"id\" href=\"#nodebuf\">nodebuf</a>[<a class=\"id\" href=\"#k\">k</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#k\">k</a> = 0; <a class=\"id\" href=\"#k\">k</a> &lt; 4; <a class=\"id\" href=\"#k\">k</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#node6\">node6</a>.<a class=\"id\" href=\"#mask\">mask</a>[<a class=\"id\" href=\"#k\">k</a>] = <a class=\"id\" href=\"#nodebuf\">nodebuf</a>[<a class=\"id\" href=\"#k\">k</a>+4];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#context_read_and_validate\">context_read_and_validate</a>(&amp;<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#context\">context</a>[0], <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#fp\">fp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Read the configuration data from a policy database binary</span>", 
"<span class=\"comment\"> * representation file into a policy database structure.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#policydb_read\">policydb_read</a>(struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#p\">p</a>, void *<a class=\"id\" href=\"#fp\">fp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#role_allow\">role_allow</a> *<a class=\"id\" href=\"#ra\">ra</a>, *<a class=\"id\" href=\"#lra\">lra</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#role_trans\">role_trans</a> *<a class=\"id\" href=\"#tr\">tr</a>, *<a class=\"id\" href=\"#ltr\">ltr</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> <a class=\"id\" href=\"#buf\">buf</a>[4];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#nprim\">nprim</a>, <a class=\"id\" href=\"#nel\">nel</a>;", 
"", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#policydb_str\">policydb_str</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#policydb_compat_info\">policydb_compat_info</a> *<a class=\"id\" href=\"#info\">info</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#policydb_init\">policydb_init</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Read the magic number and string length. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof(<a class=\"id\" href=\"#u32\">u32</a>) * 2);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[0]) != <a class=\"id\" href=\"#POLICYDB_MAGIC\">POLICYDB_MAGIC</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux:  policydb magic number 0x%x does \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"not match expected magic number 0x%x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[0]), <a class=\"id\" href=\"#POLICYDB_MAGIC\">POLICYDB_MAGIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[1]);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> != <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#POLICYDB_STRING\">POLICYDB_STRING</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux:  policydb string length %d does not \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"match expected length %Zu\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#POLICYDB_STRING\">POLICYDB_STRING</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#policydb_str\">policydb_str</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#len\">len</a> + 1, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#policydb_str\">policydb_str</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux:  unable to allocate memory for policydb \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"string of length %d\\n\", <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#policydb_str\">policydb_str</a>, <a class=\"id\" href=\"#fp\">fp</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux:  truncated policydb string identifier\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#policydb_str\">policydb_str</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#policydb_str\">policydb_str</a>[<a class=\"id\" href=\"#len\">len</a>] = '\\0';", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#policydb_str\">policydb_str</a>, <a class=\"id\" href=\"#POLICYDB_STRING\">POLICYDB_STRING</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux:  policydb string %s does not match \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"my string %s\\n\", <a class=\"id\" href=\"#policydb_str\">policydb_str</a>, <a class=\"id\" href=\"#POLICYDB_STRING\">POLICYDB_STRING</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#policydb_str\">policydb_str</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* Done with policydb_str. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#policydb_str\">policydb_str</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#policydb_str\">policydb_str</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Read the version and table sizes. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof(<a class=\"id\" href=\"#u32\">u32</a>)*4);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#policyvers\">policyvers</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[0]);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#policyvers\">policyvers</a> &lt; <a class=\"id\" href=\"#POLICYDB_VERSION_MIN\">POLICYDB_VERSION_MIN</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#policyvers\">policyvers</a> &gt; <a class=\"id\" href=\"#POLICYDB_VERSION_MAX\">POLICYDB_VERSION_MAX</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux:  policydb version %d does not match \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"my version range %d-%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[0]), <a class=\"id\" href=\"#POLICYDB_VERSION_MIN\">POLICYDB_VERSION_MIN</a>, <a class=\"id\" href=\"#POLICYDB_VERSION_MAX\">POLICYDB_VERSION_MAX</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[1]) &amp; <a class=\"id\" href=\"#POLICYDB_CONFIG_MLS\">POLICYDB_CONFIG_MLS</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#mls_enabled\">mls_enabled</a> = 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#policyvers\">policyvers</a> &lt; <a class=\"id\" href=\"#POLICYDB_VERSION_MLS\">POLICYDB_VERSION_MLS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: security policydb version %d \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"(MLS) not backwards compatible\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#policyvers\">policyvers</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#reject_unknown\">reject_unknown</a> = !!(<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[1]) &amp; <a class=\"id\" href=\"#REJECT_UNKNOWN\">REJECT_UNKNOWN</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#allow_unknown\">allow_unknown</a> = !!(<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[1]) &amp; <a class=\"id\" href=\"#ALLOW_UNKNOWN\">ALLOW_UNKNOWN</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#policyvers\">policyvers</a> >= <a class=\"id\" href=\"#POLICYDB_VERSION_POLCAP\">POLICYDB_VERSION_POLCAP</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#ebitmap_read\">ebitmap_read</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#policycaps\">policycaps</a>, <a class=\"id\" href=\"#fp\">fp</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#policyvers\">policyvers</a> >= <a class=\"id\" href=\"#POLICYDB_VERSION_PERMISSIVE\">POLICYDB_VERSION_PERMISSIVE</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#ebitmap_read\">ebitmap_read</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#permissive_map\">permissive_map</a>, <a class=\"id\" href=\"#fp\">fp</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#policydb_lookup_compat\">policydb_lookup_compat</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#policyvers\">policyvers</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#info\">info</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux:  unable to find policy compat info \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"for version %d\\n\", <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#policyvers\">policyvers</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[2]) != <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#sym_num\">sym_num</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[3]) != <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#ocon_num\">ocon_num</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux:  policydb table sizes (%d,%d) do \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"not match mine (%d,%d)\\n\", <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[2]),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[3]),", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#sym_num\">sym_num</a>, <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#ocon_num\">ocon_num</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#sym_num\">sym_num</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof(<a class=\"id\" href=\"#u32\">u32</a>)*2);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nprim\">nprim</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[0]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nel\">nel</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[1]);", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#nel\">nel</a>; <a class=\"id\" href=\"#j\">j</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#read_f\">read_f</a>[<a class=\"id\" href=\"#i\">i</a>](<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#symtab\">symtab</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#table\">table</a>, <a class=\"id\" href=\"#fp\">fp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#symtab\">symtab</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#nprim\">nprim</a> = <a class=\"id\" href=\"#nprim\">nprim</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#avtab_read\">avtab_read</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#te_avtab\">te_avtab</a>, <a class=\"id\" href=\"#fp\">fp</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#policyvers\">policyvers</a> >= <a class=\"id\" href=\"#POLICYDB_VERSION_BOOL\">POLICYDB_VERSION_BOOL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#cond_read_list\">cond_read_list</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#fp\">fp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof(<a class=\"id\" href=\"#u32\">u32</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nel\">nel</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[0]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ltr\">ltr</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nel\">nel</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tr\">tr</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#tr\">tr</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tr\">tr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ltr\">ltr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ltr\">ltr</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#tr\">tr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#role_tr\">role_tr</a> = <a class=\"id\" href=\"#tr\">tr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof(<a class=\"id\" href=\"#u32\">u32</a>)*3);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tr\">tr</a>-><a class=\"id\" href=\"#role\">role</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[0]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tr\">tr</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[1]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tr\">tr</a>-><a class=\"id\" href=\"#new_role\">new_role</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[2]);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#policydb_role_isvalid\">policydb_role_isvalid</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#tr\">tr</a>-><a class=\"id\" href=\"#role\">role</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#policydb_type_isvalid\">policydb_type_isvalid</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#tr\">tr</a>-><a class=\"id\" href=\"#type\">type</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#policydb_role_isvalid\">policydb_role_isvalid</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#tr\">tr</a>-><a class=\"id\" href=\"#new_role\">new_role</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ltr\">ltr</a> = <a class=\"id\" href=\"#tr\">tr</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof(<a class=\"id\" href=\"#u32\">u32</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nel\">nel</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[0]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lra\">lra</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nel\">nel</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ra\">ra</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#ra\">ra</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ra\">ra</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#lra\">lra</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lra\">lra</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#ra\">ra</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#role_allow\">role_allow</a> = <a class=\"id\" href=\"#ra\">ra</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof(<a class=\"id\" href=\"#u32\">u32</a>)*2);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ra\">ra</a>-><a class=\"id\" href=\"#role\">role</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[0]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ra\">ra</a>-><a class=\"id\" href=\"#new_role\">new_role</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[1]);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#policydb_role_isvalid\">policydb_role_isvalid</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#ra\">ra</a>-><a class=\"id\" href=\"#role\">role</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#policydb_role_isvalid\">policydb_role_isvalid</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#ra\">ra</a>-><a class=\"id\" href=\"#new_role\">new_role</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lra\">lra</a> = <a class=\"id\" href=\"#ra\">ra</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#policydb_index_classes\">policydb_index_classes</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#policydb_index_others\">policydb_index_others</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#process_class\">process_class</a> = <a class=\"id\" href=\"#string_to_security_class\">string_to_security_class</a>(<a class=\"id\" href=\"#p\">p</a>, \"process\");", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#process_class\">process_class</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#process_trans_perms\">process_trans_perms</a> = <a class=\"id\" href=\"#string_to_av_perm\">string_to_av_perm</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#process_class\">process_class</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"transition\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#process_trans_perms\">process_trans_perms</a> |= <a class=\"id\" href=\"#string_to_av_perm\">string_to_av_perm</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#process_class\">process_class</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"dyntransition\");", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#process_trans_perms\">process_trans_perms</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ocontext_read\">ocontext_read</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#fp\">fp</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#genfs_read\">genfs_read</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#fp\">fp</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#range_read\">range_read</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#fp\">fp</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#type_attr_map_array\">type_attr_map_array</a> = <a class=\"id\" href=\"#flex_array_alloc\">flex_array_alloc</a>(sizeof(struct <a class=\"id\" href=\"#ebitmap\">ebitmap</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_types\">p_types</a>.<a class=\"id\" href=\"#nprim\">nprim</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a> | <a class=\"id\" href=\"#__GFP_ZERO\">__GFP_ZERO</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#type_attr_map_array\">type_attr_map_array</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* preallocate so we don't have to worry about the put ever failing */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#flex_array_prealloc\">flex_array_prealloc</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#type_attr_map_array\">type_attr_map_array</a>, 0, <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_types\">p_types</a>.<a class=\"id\" href=\"#nprim\">nprim</a> - 1,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a> | <a class=\"id\" href=\"#__GFP_ZERO\">__GFP_ZERO</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#p_types\">p_types</a>.<a class=\"id\" href=\"#nprim\">nprim</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ebitmap\">ebitmap</a> *<a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#flex_array_get\">flex_array_get</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#type_attr_map_array\">type_attr_map_array</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#e\">e</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ebitmap_init\">ebitmap_init</a>(<a class=\"id\" href=\"#e\">e</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#policyvers\">policyvers</a> >= <a class=\"id\" href=\"#POLICYDB_VERSION_AVTAB\">POLICYDB_VERSION_AVTAB</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ebitmap_read\">ebitmap_read</a>(<a class=\"id\" href=\"#e\">e</a>, <a class=\"id\" href=\"#fp\">fp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* add the type itself as the degenerate case */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ebitmap_set_bit\">ebitmap_set_bit</a>(<a class=\"id\" href=\"#e\">e</a>, <a class=\"id\" href=\"#i\">i</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#policydb_bounds_sanity_check\">policydb_bounds_sanity_check</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<a class=\"id\" href=\"#bad\">bad</a>:", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#policydb_destroy\">policydb_destroy</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
];
xr_frag_insert('l/64/c02dbdc0be2ee47c8165d2dfaaad916e20ecfc.xr', __xr_tmp);
