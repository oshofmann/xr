var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#panic\">panic</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#totalram_pages\">totalram_pages</a> >= (128 * 1024))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#limit\">limit</a> = <a class=\"id\" href=\"#totalram_pages\">totalram_pages</a> >> (21 - <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#limit\">limit</a> = <a class=\"id\" href=\"#totalram_pages\">totalram_pages</a> >> (23 - <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#order\">order</a> = <a class=\"id\" href=\"#get_bitmask_order\">get_bitmask_order</a>(<a class=\"id\" href=\"#limit\">limit</a>) - 1 + <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#limit\">limit</a> = (1UL << <a class=\"id\" href=\"#order\">order</a>) / sizeof(struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#order\">order</a> = <a class=\"id\" href=\"#get_bitmask_order\">get_bitmask_order</a>(<a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#limit\">limit</a>, (unsigned long)<a class=\"id\" href=\"#UINT_MAX\">UINT_MAX</a>)) - 1;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#MAX_LINKS\">MAX_LINKS</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#nl_pid_hash\">nl_pid_hash</a> *<a class=\"id\" href=\"#hash\">hash</a> = &amp;<a class=\"id\" href=\"#nl_table\">nl_table</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#hash\">hash</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a>-><a class=\"id\" href=\"#table\">table</a> = <a class=\"id\" href=\"#nl_pid_hash_zalloc\">nl_pid_hash_zalloc</a>(1 * sizeof(*<a class=\"id\" href=\"#hash\">hash</a>-><a class=\"id\" href=\"#table\">table</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#hash\">hash</a>-><a class=\"id\" href=\"#table\">table</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#i\">i</a>-- &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nl_pid_hash_free\">nl_pid_hash_free</a>(<a class=\"id\" href=\"#nl_table\">nl_table</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#hash\">hash</a>.<a class=\"id\" href=\"#table\">table</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> 1 * sizeof(*<a class=\"id\" href=\"#hash\">hash</a>-><a class=\"id\" href=\"#table\">table</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#nl_table\">nl_table</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#panic\">panic</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a>-><a class=\"id\" href=\"#max_shift\">max_shift</a> = <a class=\"id\" href=\"#order\">order</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a>-><a class=\"id\" href=\"#shift\">shift</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a>-><a class=\"id\" href=\"#mask\">mask</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a>-><a class=\"id\" href=\"#rehash_time\">rehash_time</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netlink_add_usersock_entry\">netlink_add_usersock_entry</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_register\">sock_register</a>(&amp;<a class=\"id\" href=\"#netlink_family_ops\">netlink_family_ops</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#register_pernet_subsys\">register_pernet_subsys</a>(&amp;<a class=\"id\" href=\"#netlink_net_ops\">netlink_net_ops</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* The netlink device handler may be needed early. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnetlink_init\">rtnetlink_init</a>();", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<a class=\"id\" href=\"#panic\">panic</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"netlink_init: Cannot allocate nl_table\\n\");", 
"}", 
"", 
"<a class=\"id\" href=\"#core_initcall\">core_initcall</a>(<a class=\"id\" href=\"#netlink_proto_init\">netlink_proto_init</a>);", 
];
xr_frag_insert('l/64/c4ec40abc9d95b5307e06f244e146fad94a8f9.xr', __xr_tmp);
