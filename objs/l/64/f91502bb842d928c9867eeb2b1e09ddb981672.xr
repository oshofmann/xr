var __xr_tmp = [
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#gfp\">gfp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#initrd\">initrd</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ioport\">ioport</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#swap\">swap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#cacheflush\">cacheflush</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#page\">page</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#page_types\">page_types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#sections\">sections</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#setup\">setup</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#system\">system</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#tlbflush\">tlbflush</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#tlb\">tlb</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#proto\">proto</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(struct <a class=\"id\" href=\"#mmu_gather\">mmu_gather</a>, <a class=\"id\" href=\"#mmu_gathers\">mmu_gathers</a>);", 
"", 
"unsigned long <a class=\"id\" href=\"#__initdata\">__initdata</a> <a class=\"id\" href=\"#e820_table_start\">e820_table_start</a>;", 
"unsigned long <a class=\"id\" href=\"#__meminitdata\">__meminitdata</a> <a class=\"id\" href=\"#e820_table_end\">e820_table_end</a>;", 
"unsigned long <a class=\"id\" href=\"#__meminitdata\">__meminitdata</a> <a class=\"id\" href=\"#e820_table_top\">e820_table_top</a>;", 
"", 
"int <a class=\"id\" href=\"#after_bootmem\">after_bootmem</a>;", 
"", 
"int <a class=\"id\" href=\"#direct_gbpages\">direct_gbpages</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_DIRECT_GBPAGES\">CONFIG_DIRECT_GBPAGES</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= 1", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
";", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#find_early_table_space\">find_early_table_space</a>(unsigned long <a class=\"id\" href=\"#end\">end</a>, int <a class=\"id\" href=\"#use_pse\">use_pse</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  int <a class=\"id\" href=\"#use_gbpages\">use_gbpages</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#puds\">puds</a>, <a class=\"id\" href=\"#pmds\">pmds</a>, <a class=\"id\" href=\"#ptes\">ptes</a>, <a class=\"id\" href=\"#tables\">tables</a>, <a class=\"id\" href=\"#start\">start</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#puds\">puds</a> = (<a class=\"id\" href=\"#end\">end</a> + <a class=\"id\" href=\"#PUD_SIZE\">PUD_SIZE</a> - 1) >> <a class=\"id\" href=\"#PUD_SHIFT\">PUD_SHIFT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tables\">tables</a> = <a class=\"id\" href=\"#roundup\">roundup</a>(<a class=\"id\" href=\"#puds\">puds</a> * sizeof(<a class=\"id\" href=\"#pud_t\">pud_t</a>), <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#use_gbpages\">use_gbpages</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#extra\">extra</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#extra\">extra</a> = <a class=\"id\" href=\"#end\">end</a> - ((<a class=\"id\" href=\"#end\">end</a>>><a class=\"id\" href=\"#PUD_SHIFT\">PUD_SHIFT</a>) << <a class=\"id\" href=\"#PUD_SHIFT\">PUD_SHIFT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmds\">pmds</a> = (<a class=\"id\" href=\"#extra\">extra</a> + <a class=\"id\" href=\"#PMD_SIZE\">PMD_SIZE</a> - 1) >> <a class=\"id\" href=\"#PMD_SHIFT\">PMD_SHIFT</a>;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmds\">pmds</a> = (<a class=\"id\" href=\"#end\">end</a> + <a class=\"id\" href=\"#PMD_SIZE\">PMD_SIZE</a> - 1) >> <a class=\"id\" href=\"#PMD_SHIFT\">PMD_SHIFT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tables\">tables</a> += <a class=\"id\" href=\"#roundup\">roundup</a>(<a class=\"id\" href=\"#pmds\">pmds</a> * sizeof(<a class=\"id\" href=\"#pmd_t\">pmd_t</a>), <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#use_pse\">use_pse</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#extra\">extra</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#extra\">extra</a> = <a class=\"id\" href=\"#end\">end</a> - ((<a class=\"id\" href=\"#end\">end</a>>><a class=\"id\" href=\"#PMD_SHIFT\">PMD_SHIFT</a>) << <a class=\"id\" href=\"#PMD_SHIFT\">PMD_SHIFT</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#extra\">extra</a> += <a class=\"id\" href=\"#PMD_SIZE\">PMD_SIZE</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ptes\">ptes</a> = (<a class=\"id\" href=\"#extra\">extra</a> + <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - 1) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ptes\">ptes</a> = (<a class=\"id\" href=\"#end\">end</a> + <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - 1) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tables\">tables</a> += <a class=\"id\" href=\"#roundup\">roundup</a>(<a class=\"id\" href=\"#ptes\">ptes</a> * sizeof(<a class=\"id\" href=\"#pte_t\">pte_t</a>), <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* for fixmap */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tables\">tables</a> += <a class=\"id\" href=\"#roundup\">roundup</a>(<a class=\"id\" href=\"#__end_of_fixed_addresses\">__end_of_fixed_addresses</a> * sizeof(<a class=\"id\" href=\"#pte_t\">pte_t</a>), <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * RED-PEN putting page tables only on node 0 could</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * cause a hotspot and fill up ZONE_DMA. The page tables</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * need roughly 0.5KB per GB.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = 0x7000;", 
"#else", 
"<span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = 0x8000;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e820_table_start\">e820_table_start</a> = <a class=\"id\" href=\"#find_e820_area\">find_e820_area</a>(<a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#max_pfn_mapped\">max_pfn_mapped</a><<<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tables\">tables</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#e820_table_start\">e820_table_start</a> == -1UL)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"Cannot find space for the kernel page tables\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e820_table_start\">e820_table_start</a> >>= <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e820_table_end\">e820_table_end</a> = <a class=\"id\" href=\"#e820_table_start\">e820_table_start</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e820_table_top\">e820_table_top</a> = <a class=\"id\" href=\"#e820_table_start\">e820_table_start</a> + (<a class=\"id\" href=\"#tables\">tables</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"kernel direct mapping tables up to %lx @ %lx-%lx\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#e820_table_start\">e820_table_start</a> << <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>, <a class=\"id\" href=\"#e820_table_top\">e820_table_top</a> << <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"}", 
"", 
"struct <a class=\"id\" href=\"#map_range\">map_range</a> {", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start\">start</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#page_size_mask\">page_size_mask</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NR_RANGE_MR\">NR_RANGE_MR</a> 3", 
"#else <span class=\"comment\">/* CONFIG_X86_64 */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NR_RANGE_MR\">NR_RANGE_MR</a> 5", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static int <a class=\"id\" href=\"#__meminit\">__meminit</a> <a class=\"id\" href=\"#save_mr\">save_mr</a>(struct <a class=\"id\" href=\"#map_range\">map_range</a> *<a class=\"id\" href=\"#mr\">mr</a>, int <a class=\"id\" href=\"#nr_range\">nr_range</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned long <a class=\"id\" href=\"#start_pfn\">start_pfn</a>, unsigned long <a class=\"id\" href=\"#end_pfn\">end_pfn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned long <a class=\"id\" href=\"#page_size_mask\">page_size_mask</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#start_pfn\">start_pfn</a> &lt; <a class=\"id\" href=\"#end_pfn\">end_pfn</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nr_range\">nr_range</a> >= <a class=\"id\" href=\"#NR_RANGE_MR\">NR_RANGE_MR</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"run out of range for init_memory_mapping\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mr\">mr</a>[<a class=\"id\" href=\"#nr_range\">nr_range</a>].<a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#start_pfn\">start_pfn</a><<<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mr\">mr</a>[<a class=\"id\" href=\"#nr_range\">nr_range</a>].<a class=\"id\" href=\"#end\">end</a>   = <a class=\"id\" href=\"#end_pfn\">end_pfn</a><<<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mr\">mr</a>[<a class=\"id\" href=\"#nr_range\">nr_range</a>].<a class=\"id\" href=\"#page_size_mask\">page_size_mask</a> = <a class=\"id\" href=\"#page_size_mask\">page_size_mask</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_range\">nr_range</a>++;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nr_range\">nr_range</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Setup the direct mapping of the physical memory at PAGE_OFFSET.</span>", 
"<span class=\"comment\"> * This runs before bootmem is initialized and gets pages directly from</span>", 
"<span class=\"comment\"> * the physical memory. To access them they are temporarily mapped.</span>", 
"<span class=\"comment\"> */</span>", 
"unsigned long <a class=\"id\" href=\"#__init_refok\">__init_refok</a> <a class=\"id\" href=\"#init_memory_mapping\">init_memory_mapping</a>(unsigned long <a class=\"id\" href=\"#start\">start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned long <a class=\"id\" href=\"#end\">end</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#page_size_mask\">page_size_mask</a> = 0;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start_pfn\">start_pfn</a>, <a class=\"id\" href=\"#end_pfn\">end_pfn</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#pos\">pos</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#map_range\">map_range</a> <a class=\"id\" href=\"#mr\">mr</a>[<a class=\"id\" href=\"#NR_RANGE_MR\">NR_RANGE_MR</a>];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nr_range\">nr_range</a>, <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#use_pse\">use_pse</a>, <a class=\"id\" href=\"#use_gbpages\">use_gbpages</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"init_memory_mapping: %016lx-%016lx\\n\", <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>);", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_DEBUG_PAGEALLOC\">CONFIG_DEBUG_PAGEALLOC</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_KMEMCHECK\">CONFIG_KMEMCHECK</a>)", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * For CONFIG_DEBUG_PAGEALLOC, identity mapping will use small pages.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This will simplify cpa(), which otherwise needs to support splitting</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * large pages into small in interrupt context, etc.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#use_pse\">use_pse</a> = <a class=\"id\" href=\"#use_gbpages\">use_gbpages</a> = 0;", 
"#else", 
"<span class=\"ts\"/><a class=\"id\" href=\"#use_pse\">use_pse</a> = <a class=\"id\" href=\"#cpu_has_pse\">cpu_has_pse</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#use_gbpages\">use_gbpages</a> = <a class=\"id\" href=\"#direct_gbpages\">direct_gbpages</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Enable PSE if available */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_has_pse\">cpu_has_pse</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_in_cr4\">set_in_cr4</a>(<a class=\"id\" href=\"#X86_CR4_PSE\">X86_CR4_PSE</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Enable PGE if available */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_has_pge\">cpu_has_pge</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_in_cr4\">set_in_cr4</a>(<a class=\"id\" href=\"#X86_CR4_PGE\">X86_CR4_PGE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__supported_pte_mask\">__supported_pte_mask</a> |= <a class=\"id\" href=\"#_PAGE_GLOBAL\">_PAGE_GLOBAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#use_gbpages\">use_gbpages</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_size_mask\">page_size_mask</a> |= 1 << <a class=\"id\" href=\"#PG_LEVEL_1G\">PG_LEVEL_1G</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#use_pse\">use_pse</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_size_mask\">page_size_mask</a> |= 1 << <a class=\"id\" href=\"#PG_LEVEL_2M\">PG_LEVEL_2M</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#mr\">mr</a>, 0, sizeof(<a class=\"id\" href=\"#mr\">mr</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nr_range\">nr_range</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* head if not big page alignment ? */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#start_pfn\">start_pfn</a> = <a class=\"id\" href=\"#start\">start</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#start_pfn\">start_pfn</a> << <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Don't use a large page for the first 2/4MB of memory</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * because there are often fixed size MTRRs in there</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and overlapping MTRRs into large pages can cause</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * slowdowns.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pos\">pos</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end_pfn\">end_pfn</a> = 1<<(<a class=\"id\" href=\"#PMD_SHIFT\">PMD_SHIFT</a> - <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end_pfn\">end_pfn</a> = ((<a class=\"id\" href=\"#pos\">pos</a> + (<a class=\"id\" href=\"#PMD_SIZE\">PMD_SIZE</a> - 1))>><a class=\"id\" href=\"#PMD_SHIFT\">PMD_SHIFT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> << (<a class=\"id\" href=\"#PMD_SHIFT\">PMD_SHIFT</a> - <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"#else <span class=\"comment\">/* CONFIG_X86_64 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end_pfn\">end_pfn</a> = ((<a class=\"id\" href=\"#pos\">pos</a> + (<a class=\"id\" href=\"#PMD_SIZE\">PMD_SIZE</a> - 1)) >> <a class=\"id\" href=\"#PMD_SHIFT\">PMD_SHIFT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><< (<a class=\"id\" href=\"#PMD_SHIFT\">PMD_SHIFT</a> - <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#end_pfn\">end_pfn</a> &gt; (<a class=\"id\" href=\"#end\">end</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end_pfn\">end_pfn</a> = <a class=\"id\" href=\"#end\">end</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#start_pfn\">start_pfn</a> &lt; <a class=\"id\" href=\"#end_pfn\">end_pfn</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_range\">nr_range</a> = <a class=\"id\" href=\"#save_mr\">save_mr</a>(<a class=\"id\" href=\"#mr\">mr</a>, <a class=\"id\" href=\"#nr_range\">nr_range</a>, <a class=\"id\" href=\"#start_pfn\">start_pfn</a>, <a class=\"id\" href=\"#end_pfn\">end_pfn</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#end_pfn\">end_pfn</a> << <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* big page (2M) range */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#start_pfn\">start_pfn</a> = ((<a class=\"id\" href=\"#pos\">pos</a> + (<a class=\"id\" href=\"#PMD_SIZE\">PMD_SIZE</a> - 1))>><a class=\"id\" href=\"#PMD_SHIFT\">PMD_SHIFT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> << (<a class=\"id\" href=\"#PMD_SHIFT\">PMD_SHIFT</a> - <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end_pfn\">end_pfn</a> = (<a class=\"id\" href=\"#end\">end</a>>><a class=\"id\" href=\"#PMD_SHIFT\">PMD_SHIFT</a>) << (<a class=\"id\" href=\"#PMD_SHIFT\">PMD_SHIFT</a> - <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"#else <span class=\"comment\">/* CONFIG_X86_64 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end_pfn\">end_pfn</a> = ((<a class=\"id\" href=\"#pos\">pos</a> + (<a class=\"id\" href=\"#PUD_SIZE\">PUD_SIZE</a> - 1))>><a class=\"id\" href=\"#PUD_SHIFT\">PUD_SHIFT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> << (<a class=\"id\" href=\"#PUD_SHIFT\">PUD_SHIFT</a> - <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#end_pfn\">end_pfn</a> &gt; ((<a class=\"id\" href=\"#end\">end</a>>><a class=\"id\" href=\"#PMD_SHIFT\">PMD_SHIFT</a>)<<(<a class=\"id\" href=\"#PMD_SHIFT\">PMD_SHIFT</a> - <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end_pfn\">end_pfn</a> = ((<a class=\"id\" href=\"#end\">end</a>>><a class=\"id\" href=\"#PMD_SHIFT\">PMD_SHIFT</a>)<<(<a class=\"id\" href=\"#PMD_SHIFT\">PMD_SHIFT</a> - <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>));", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#start_pfn\">start_pfn</a> &lt; <a class=\"id\" href=\"#end_pfn\">end_pfn</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_range\">nr_range</a> = <a class=\"id\" href=\"#save_mr\">save_mr</a>(<a class=\"id\" href=\"#mr\">mr</a>, <a class=\"id\" href=\"#nr_range\">nr_range</a>, <a class=\"id\" href=\"#start_pfn\">start_pfn</a>, <a class=\"id\" href=\"#end_pfn\">end_pfn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_size_mask\">page_size_mask</a> &amp; (1<<<a class=\"id\" href=\"#PG_LEVEL_2M\">PG_LEVEL_2M</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#end_pfn\">end_pfn</a> << <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* big page (1G) range */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#start_pfn\">start_pfn</a> = ((<a class=\"id\" href=\"#pos\">pos</a> + (<a class=\"id\" href=\"#PUD_SIZE\">PUD_SIZE</a> - 1))>><a class=\"id\" href=\"#PUD_SHIFT\">PUD_SHIFT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> << (<a class=\"id\" href=\"#PUD_SHIFT\">PUD_SHIFT</a> - <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end_pfn\">end_pfn</a> = (<a class=\"id\" href=\"#end\">end</a> >> <a class=\"id\" href=\"#PUD_SHIFT\">PUD_SHIFT</a>) << (<a class=\"id\" href=\"#PUD_SHIFT\">PUD_SHIFT</a> - <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#start_pfn\">start_pfn</a> &lt; <a class=\"id\" href=\"#end_pfn\">end_pfn</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_range\">nr_range</a> = <a class=\"id\" href=\"#save_mr\">save_mr</a>(<a class=\"id\" href=\"#mr\">mr</a>, <a class=\"id\" href=\"#nr_range\">nr_range</a>, <a class=\"id\" href=\"#start_pfn\">start_pfn</a>, <a class=\"id\" href=\"#end_pfn\">end_pfn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_size_mask\">page_size_mask</a> &amp;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> ((1<<<a class=\"id\" href=\"#PG_LEVEL_2M\">PG_LEVEL_2M</a>)|(1<<<a class=\"id\" href=\"#PG_LEVEL_1G\">PG_LEVEL_1G</a>)));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#end_pfn\">end_pfn</a> << <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* tail is not big page (1G) alignment */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#start_pfn\">start_pfn</a> = ((<a class=\"id\" href=\"#pos\">pos</a> + (<a class=\"id\" href=\"#PMD_SIZE\">PMD_SIZE</a> - 1))>><a class=\"id\" href=\"#PMD_SHIFT\">PMD_SHIFT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> << (<a class=\"id\" href=\"#PMD_SHIFT\">PMD_SHIFT</a> - <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end_pfn\">end_pfn</a> = (<a class=\"id\" href=\"#end\">end</a> >> <a class=\"id\" href=\"#PMD_SHIFT\">PMD_SHIFT</a>) << (<a class=\"id\" href=\"#PMD_SHIFT\">PMD_SHIFT</a> - <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#start_pfn\">start_pfn</a> &lt; <a class=\"id\" href=\"#end_pfn\">end_pfn</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_range\">nr_range</a> = <a class=\"id\" href=\"#save_mr\">save_mr</a>(<a class=\"id\" href=\"#mr\">mr</a>, <a class=\"id\" href=\"#nr_range\">nr_range</a>, <a class=\"id\" href=\"#start_pfn\">start_pfn</a>, <a class=\"id\" href=\"#end_pfn\">end_pfn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_size_mask\">page_size_mask</a> &amp; (1<<<a class=\"id\" href=\"#PG_LEVEL_2M\">PG_LEVEL_2M</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#end_pfn\">end_pfn</a> << <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* tail is not big page (2M) alignment */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#start_pfn\">start_pfn</a> = <a class=\"id\" href=\"#pos\">pos</a>>><a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end_pfn\">end_pfn</a> = <a class=\"id\" href=\"#end\">end</a>>><a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nr_range\">nr_range</a> = <a class=\"id\" href=\"#save_mr\">save_mr</a>(<a class=\"id\" href=\"#mr\">mr</a>, <a class=\"id\" href=\"#nr_range\">nr_range</a>, <a class=\"id\" href=\"#start_pfn\">start_pfn</a>, <a class=\"id\" href=\"#end_pfn\">end_pfn</a>, 0);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* try to merge same page size and continuous */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#nr_range\">nr_range</a> &gt; 1 && <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nr_range\">nr_range</a> - 1; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#old_start\">old_start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mr\">mr</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#end\">end</a> != <a class=\"id\" href=\"#mr\">mr</a>[<a class=\"id\" href=\"#i\">i</a>+1].<a class=\"id\" href=\"#start\">start</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#mr\">mr</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#page_size_mask\">page_size_mask</a> != <a class=\"id\" href=\"#mr\">mr</a>[<a class=\"id\" href=\"#i\">i</a>+1].<a class=\"id\" href=\"#page_size_mask\">page_size_mask</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* move it */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_start\">old_start</a> = <a class=\"id\" href=\"#mr\">mr</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#start\">start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memmove\">memmove</a>(&amp;<a class=\"id\" href=\"#mr\">mr</a>[<a class=\"id\" href=\"#i\">i</a>], &amp;<a class=\"id\" href=\"#mr\">mr</a>[<a class=\"id\" href=\"#i\">i</a>+1],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#nr_range\">nr_range</a> - 1 - <a class=\"id\" href=\"#i\">i</a>) * sizeof(struct <a class=\"id\" href=\"#map_range\">map_range</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mr\">mr</a>[<a class=\"id\" href=\"#i\">i</a>--].<a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#old_start\">old_start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_range\">nr_range</a>--;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nr_range\">nr_range</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \" %010lx - %010lx page %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mr\">mr</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#mr\">mr</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#end\">end</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#mr\">mr</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#page_size_mask\">page_size_mask</a> &amp; (1<<<a class=\"id\" href=\"#PG_LEVEL_1G\">PG_LEVEL_1G</a>))?\"1G\":(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (<a class=\"id\" href=\"#mr\">mr</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#page_size_mask\">page_size_mask</a> &amp; (1<<<a class=\"id\" href=\"#PG_LEVEL_2M\">PG_LEVEL_2M</a>))?\"2M\":\"4k\"));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Find space for the kernel direct mapping tables.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Later we should allocate these tables in the local node of the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * memory mapped. Unfortunately this is done currently before the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * nodes are discovered.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#after_bootmem\">after_bootmem</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#find_early_table_space\">find_early_table_space</a>(<a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#use_pse\">use_pse</a>, <a class=\"id\" href=\"#use_gbpages\">use_gbpages</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nr_range\">nr_range</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#kernel_physical_mapping_init\">kernel_physical_mapping_init</a>(<a class=\"id\" href=\"#mr\">mr</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#mr\">mr</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#end\">end</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#mr\">mr</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#page_size_mask\">page_size_mask</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#early_ioremap_page_table_range_init\">early_ioremap_page_table_range_init</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#load_cr3\">load_cr3</a>(<a class=\"id\" href=\"#swapper_pg_dir\">swapper_pg_dir</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#after_bootmem\">after_bootmem</a> && !<a class=\"id\" href=\"#start\">start</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pud_t\">pud_t</a> *<a class=\"id\" href=\"#pud\">pud</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#pmd\">pmd</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mmu_cr4_features\">mmu_cr4_features</a> = <a class=\"id\" href=\"#read_cr4\">read_cr4</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * _brk_end cannot change anymore, but it and _end may be</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * located on different 2M pages. cleanup_highmap(), however,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * can only consider _end when it runs, so destroy any</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * mappings beyond _brk_end here.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pud\">pud</a> = <a class=\"id\" href=\"#pud_offset\">pud_offset</a>(<a class=\"id\" href=\"#pgd_offset_k\">pgd_offset_k</a>(<a class=\"id\" href=\"#_brk_end\">_brk_end</a>), <a class=\"id\" href=\"#_brk_end\">_brk_end</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmd\">pmd</a> = <a class=\"id\" href=\"#pmd_offset\">pmd_offset</a>(<a class=\"id\" href=\"#pud\">pud</a>, <a class=\"id\" href=\"#_brk_end\">_brk_end</a> - 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>while (++<a class=\"id\" href=\"#pmd\">pmd</a> <= <a class=\"id\" href=\"#pmd_offset\">pmd_offset</a>(<a class=\"id\" href=\"#pud\">pud</a>, (unsigned long)<a class=\"id\" href=\"#_end\">_end</a> - 1))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmd_clear\">pmd_clear</a>(<a class=\"id\" href=\"#pmd\">pmd</a>);", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__flush_tlb_all\">__flush_tlb_all</a>();", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#after_bootmem\">after_bootmem</a> && <a class=\"id\" href=\"#e820_table_end\">e820_table_end</a> &gt; <a class=\"id\" href=\"#e820_table_start\">e820_table_start</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reserve_early\">reserve_early</a>(<a class=\"id\" href=\"#e820_table_start\">e820_table_start</a> << <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#e820_table_end\">e820_table_end</a> << <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>, \"PGTABLE\");", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#after_bootmem\">after_bootmem</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#early_memtest\">early_memtest</a>(<a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"}", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * devmem_is_allowed() checks to see if /dev/mem access to a certain address</span>", 
"<span class=\"comment\"> * is valid. The argument is a physical page number.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * On x86, access has to be given to the first megabyte of ram because that area</span>", 
"<span class=\"comment\"> * contains bios code and data regions used by X and dosemu and similar apps.</span>", 
"<span class=\"comment\"> * Access has to be given to non-kernel-ram areas as well, these contain the PCI</span>", 
"<span class=\"comment\"> * mmio resources as well as potential bios/acpi data regions.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#devmem_is_allowed\">devmem_is_allowed</a>(unsigned long <a class=\"id\" href=\"#pagenr\">pagenr</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pagenr\">pagenr</a> <= 256)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#iomem_is_exclusive\">iomem_is_exclusive</a>(<a class=\"id\" href=\"#pagenr\">pagenr</a> << <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#page_is_ram\">page_is_ram</a>(<a class=\"id\" href=\"#pagenr\">pagenr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"void <a class=\"id\" href=\"#free_init_pages\">free_init_pages</a>(char *<a class=\"id\" href=\"#what\">what</a>, unsigned long <a class=\"id\" href=\"#begin\">begin</a>, unsigned long <a class=\"id\" href=\"#end\">end</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#begin_aligned\">begin_aligned</a>, <a class=\"id\" href=\"#end_aligned\">end_aligned</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Make sure boundaries are page aligned */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#begin_aligned\">begin_aligned</a> = <a class=\"id\" href=\"#PAGE_ALIGN\">PAGE_ALIGN</a>(<a class=\"id\" href=\"#begin\">begin</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end_aligned\">end_aligned</a>   = <a class=\"id\" href=\"#end\">end</a> &amp; <a class=\"id\" href=\"#PAGE_MASK\">PAGE_MASK</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#begin_aligned\">begin_aligned</a> != <a class=\"id\" href=\"#begin\">begin</a> || <a class=\"id\" href=\"#end_aligned\">end_aligned</a> != <a class=\"id\" href=\"#end\">end</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#begin\">begin</a> = <a class=\"id\" href=\"#begin_aligned\">begin_aligned</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a>   = <a class=\"id\" href=\"#end_aligned\">end_aligned</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#begin\">begin</a> >= <a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#begin\">begin</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If debugging page accesses then do not free this memory but</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * mark them not present - any buggy init-section access will</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * create a kernel page fault:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_DEBUG_PAGEALLOC\">CONFIG_DEBUG_PAGEALLOC</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"debug: unmapping init memory %08lx..%08lx\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#begin\">begin</a>, <a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_memory_np\">set_memory_np</a>(<a class=\"id\" href=\"#begin\">begin</a>, (<a class=\"id\" href=\"#end\">end</a> - <a class=\"id\" href=\"#begin\">begin</a>) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"#else", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We just marked the kernel text read only above, now that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we are going to free part of that, we need to make that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * writeable first.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_memory_rw\">set_memory_rw</a>(<a class=\"id\" href=\"#begin\">begin</a>, (<a class=\"id\" href=\"#end\">end</a> - <a class=\"id\" href=\"#begin\">begin</a>) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"Freeing %s: %luk freed\\n\", <a class=\"id\" href=\"#what\">what</a>, (<a class=\"id\" href=\"#end\">end</a> - <a class=\"id\" href=\"#begin\">begin</a>) >> 10);", 
"", 
"<span class=\"ts\"/>for (; <a class=\"id\" href=\"#addr\">addr</a> &lt; <a class=\"id\" href=\"#end\">end</a>; <a class=\"id\" href=\"#addr\">addr</a> += <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ClearPageReserved\">ClearPageReserved</a>(<a class=\"id\" href=\"#virt_to_page\">virt_to_page</a>(<a class=\"id\" href=\"#addr\">addr</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#init_page_count\">init_page_count</a>(<a class=\"id\" href=\"#virt_to_page\">virt_to_page</a>(<a class=\"id\" href=\"#addr\">addr</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>((void *)<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#POISON_FREE_INITMEM\">POISON_FREE_INITMEM</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_page\">free_page</a>(<a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#totalram_pages\">totalram_pages</a>++;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"void <a class=\"id\" href=\"#free_initmem\">free_initmem</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_init_pages\">free_init_pages</a>(\"unused kernel memory\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long)(&amp;<a class=\"id\" href=\"#__init_begin\">__init_begin</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long)(&amp;<a class=\"id\" href=\"#__init_end\">__init_end</a>));", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_BLK_DEV_INITRD\">CONFIG_BLK_DEV_INITRD</a>", 
"void <a class=\"id\" href=\"#free_initrd_mem\">free_initrd_mem</a>(unsigned long <a class=\"id\" href=\"#start\">start</a>, unsigned long <a class=\"id\" href=\"#end\">end</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * end could be not aligned, and We can not align that,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * decompresser could be confused by aligned initrd_end</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We already reserve the end partial page before in</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *   - i386_start_kernel()</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *   - x86_64_start_kernel()</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *   - relocate_initrd()</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * So here We can do PAGE_ALIGN() safely to get partial page to be freed</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_init_pages\">free_init_pages</a>(\"initrd memory\", <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#PAGE_ALIGN\">PAGE_ALIGN</a>(<a class=\"id\" href=\"#end\">end</a>));", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/64/f91502bb842d928c9867eeb2b1e09ddb981672.xr', __xr_tmp);
