var __xr_tmp = [
"<span class=\"comment\"> * NOTES: - if packet terminated with NEXTHDR_NONE it returns NULL.</span>", 
"<span class=\"comment\"> *        - it may return pointer pointing beyond end of packet,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>    if the last recognized header is truncated in the middle.</span>", 
"<span class=\"comment\"> *        - if packet is truncated, so that all parsed headers are skipped,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>    it returns NULL.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>  - First fragment header is skipped, not-first ones</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>    are considered as unparsable.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>  - ESP is unparsable for now and considered like</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>    normal payload protocol.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>  - Note also special handling of AUTH header. Thanks to IPsec wizards.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * --ANK (980726)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#ipv6_skip_exthdr\">ipv6_skip_exthdr</a>(const struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#nexthdrp\">nexthdrp</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#nexthdr\">nexthdr</a> = *<a class=\"id\" href=\"#nexthdrp\">nexthdrp</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#ipv6_ext_hdr\">ipv6_ext_hdr</a>(<a class=\"id\" href=\"#nexthdr\">nexthdr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_opt_hdr\">ipv6_opt_hdr</a> <a class=\"id\" href=\"#_hdr\">_hdr</a>, *<a class=\"id\" href=\"#hp\">hp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#hdrlen\">hdrlen</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nexthdr\">nexthdr</a> == <a class=\"id\" href=\"#NEXTHDR_NONE\">NEXTHDR_NONE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hp\">hp</a> = <a class=\"id\" href=\"#skb_header_pointer\">skb_header_pointer</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#start\">start</a>, sizeof(<a class=\"id\" href=\"#_hdr\">_hdr</a>), &amp;<a class=\"id\" href=\"#_hdr\">_hdr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#hp\">hp</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nexthdr\">nexthdr</a> == <a class=\"id\" href=\"#NEXTHDR_FRAGMENT\">NEXTHDR_FRAGMENT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#_frag_off\">_frag_off</a>, *<a class=\"id\" href=\"#fp\">fp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fp\">fp</a> = <a class=\"id\" href=\"#skb_header_pointer\">skb_header_pointer</a>(<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a>+<a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#frag_hdr\">frag_hdr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#frag_off\">frag_off</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sizeof(<a class=\"id\" href=\"#_frag_off\">_frag_off</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#_frag_off\">_frag_off</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fp\">fp</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ntohs\">ntohs</a>(*<a class=\"id\" href=\"#fp\">fp</a>) &amp; ~0x7)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hdrlen\">hdrlen</a> = 8;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#nexthdr\">nexthdr</a> == <a class=\"id\" href=\"#NEXTHDR_AUTH\">NEXTHDR_AUTH</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hdrlen\">hdrlen</a> = (<a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#hdrlen\">hdrlen</a>+2)<<2;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hdrlen\">hdrlen</a> = <a class=\"id\" href=\"#ipv6_optlen\">ipv6_optlen</a>(<a class=\"id\" href=\"#hp\">hp</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nexthdr\">nexthdr</a> = <a class=\"id\" href=\"#hp\">hp</a>-><a class=\"id\" href=\"#nexthdr\">nexthdr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> += <a class=\"id\" href=\"#hdrlen\">hdrlen</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#nexthdrp\">nexthdrp</a> = <a class=\"id\" href=\"#nexthdr\">nexthdr</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#start\">start</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#ipv6_ext_hdr\">ipv6_ext_hdr</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#ipv6_skip_exthdr\">ipv6_skip_exthdr</a>);", 
];
xr_frag_insert('l/65/1bada231e165fc3a5f0c694f75f6021390b5f5.xr', __xr_tmp);
