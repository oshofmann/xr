var __xr_tmp = [
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_msg_probe\">ata_msg_probe</a>(<a class=\"id\" href=\"#ap\">ap</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_dump_id\">ata_dump_id</a>(<a class=\"id\" href=\"#id\">id</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* SCSI only uses 4-char revisions, dump full 8 chars from ATA */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_id_c_string\">ata_id_c_string</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#fwrevbuf\">fwrevbuf</a>, <a class=\"id\" href=\"#ATA_ID_FW_REV\">ATA_ID_FW_REV</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sizeof(<a class=\"id\" href=\"#fwrevbuf\">fwrevbuf</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_id_c_string\">ata_id_c_string</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#modelbuf\">modelbuf</a>, <a class=\"id\" href=\"#ATA_ID_PROD\">ATA_ID_PROD</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sizeof(<a class=\"id\" href=\"#modelbuf\">modelbuf</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* ATA-specific feature tests */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a> == <a class=\"id\" href=\"#ATA_DEV_ATA\">ATA_DEV_ATA</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_id_is_cfa\">ata_id_is_cfa</a>(<a class=\"id\" href=\"#id\">id</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* CPRM may make this media unusable */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_CFA_KEY_MGMT\">ATA_ID_CFA_KEY_MGMT</a>] &amp; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_dev_printk\">ata_dev_printk</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"supports DRM functions and may \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"not be fully accessable.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#revbuf\">revbuf</a>, 7, \"CFA\");", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#revbuf\">revbuf</a>, 7, \"ATA-%d\", <a class=\"id\" href=\"#ata_id_major_version\">ata_id_major_version</a>(<a class=\"id\" href=\"#id\">id</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Warn the user if the device has TPM extensions */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_id_has_tpm\">ata_id_has_tpm</a>(<a class=\"id\" href=\"#id\">id</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_dev_printk\">ata_dev_printk</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"supports DRM functions and may \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"not be fully accessable.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#n_sectors\">n_sectors</a> = <a class=\"id\" href=\"#ata_id_n_sectors\">ata_id_n_sectors</a>(<a class=\"id\" href=\"#id\">id</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* get current R/W Multiple count setting */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>[47] >> 8) == 0x80 && (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>[59] &amp; 0x100)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#max\">max</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>[47] &amp; 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cnt\">cnt</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>[59] &amp; 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* only recognize/allow powers of two here */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#is_power_of_2\">is_power_of_2</a>(<a class=\"id\" href=\"#max\">max</a>) && <a class=\"id\" href=\"#is_power_of_2\">is_power_of_2</a>(<a class=\"id\" href=\"#cnt\">cnt</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cnt\">cnt</a> <= <a class=\"id\" href=\"#max\">max</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#multi_count\">multi_count</a> = <a class=\"id\" href=\"#cnt\">cnt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_id_has_lba\">ata_id_has_lba</a>(<a class=\"id\" href=\"#id\">id</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const char *<a class=\"id\" href=\"#lba_desc\">lba_desc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char <a class=\"id\" href=\"#ncq_desc\">ncq_desc</a>[24];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lba_desc\">lba_desc</a> = \"LBA\";", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#ATA_DFLAG_LBA\">ATA_DFLAG_LBA</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_id_has_lba48\">ata_id_has_lba48</a>(<a class=\"id\" href=\"#id\">id</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#ATA_DFLAG_LBA48\">ATA_DFLAG_LBA48</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lba_desc\">lba_desc</a> = \"LBA48\";", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#n_sectors\">n_sectors</a> >= (1UL << 28) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ata_id_has_flush_ext\">ata_id_has_flush_ext</a>(<a class=\"id\" href=\"#id\">id</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#ATA_DFLAG_FLUSH_EXT\">ATA_DFLAG_FLUSH_EXT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* config NCQ */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ata_dev_config_ncq\">ata_dev_config_ncq</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#ncq_desc\">ncq_desc</a>, sizeof(<a class=\"id\" href=\"#ncq_desc\">ncq_desc</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* print device info to dmesg */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_msg_drv\">ata_msg_drv</a>(<a class=\"id\" href=\"#ap\">ap</a>) && <a class=\"id\" href=\"#print_info\">print_info</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_dev_printk\">ata_dev_printk</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"%s: %s, %s, max %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#revbuf\">revbuf</a>, <a class=\"id\" href=\"#modelbuf\">modelbuf</a>, <a class=\"id\" href=\"#fwrevbuf\">fwrevbuf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_mode_string\">ata_mode_string</a>(<a class=\"id\" href=\"#xfer_mask\">xfer_mask</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_dev_printk\">ata_dev_printk</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"%Lu sectors, multi %u: %s %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long long)<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#n_sectors\">n_sectors</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#multi_count\">multi_count</a>, <a class=\"id\" href=\"#lba_desc\">lba_desc</a>, <a class=\"id\" href=\"#ncq_desc\">ncq_desc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* CHS */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Default translation */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#cylinders\">cylinders</a><span class=\"ts\"/>= <a class=\"id\" href=\"#id\">id</a>[1];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#heads\">heads</a><span class=\"ts\"/>= <a class=\"id\" href=\"#id\">id</a>[3];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#sectors\">sectors</a><span class=\"ts\"/>= <a class=\"id\" href=\"#id\">id</a>[6];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_id_current_chs_valid\">ata_id_current_chs_valid</a>(<a class=\"id\" href=\"#id\">id</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Current CHS translation is valid. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#cylinders\">cylinders</a> = <a class=\"id\" href=\"#id\">id</a>[54];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#heads\">heads</a>     = <a class=\"id\" href=\"#id\">id</a>[55];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#sectors\">sectors</a>   = <a class=\"id\" href=\"#id\">id</a>[56];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* print device info to dmesg */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_msg_drv\">ata_msg_drv</a>(<a class=\"id\" href=\"#ap\">ap</a>) && <a class=\"id\" href=\"#print_info\">print_info</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_dev_printk\">ata_dev_printk</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"%s: %s, %s, max %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#revbuf\">revbuf</a>,<span class=\"ts\"/><a class=\"id\" href=\"#modelbuf\">modelbuf</a>, <a class=\"id\" href=\"#fwrevbuf\">fwrevbuf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_mode_string\">ata_mode_string</a>(<a class=\"id\" href=\"#xfer_mask\">xfer_mask</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_dev_printk\">ata_dev_printk</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"%Lu sectors, multi %u, CHS %u/%u/%u\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long long)<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#n_sectors\">n_sectors</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#multi_count\">multi_count</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#cylinders\">cylinders</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#heads\">heads</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#sectors\">sectors</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#cdb_len\">cdb_len</a> = 16;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* ATAPI-specific feature tests */</span>", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a> == <a class=\"id\" href=\"#ATA_DEV_ATAPI\">ATA_DEV_ATAPI</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>const char *<a class=\"id\" href=\"#cdb_intr_string\">cdb_intr_string</a> = \"\";", 
"<span class=\"ts\"/><span class=\"ts\"/>const char *<a class=\"id\" href=\"#atapi_an_string\">atapi_an_string</a> = \"\";", 
"<span class=\"ts\"/><span class=\"ts\"/>const char *<a class=\"id\" href=\"#dma_dir_string\">dma_dir_string</a> = \"\";", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#sntf\">sntf</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#atapi_cdb_len\">atapi_cdb_len</a>(<a class=\"id\" href=\"#id\">id</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#rc\">rc</a> &lt; 12) || (<a class=\"id\" href=\"#rc\">rc</a> &gt; <a class=\"id\" href=\"#ATAPI_CDB_LEN\">ATAPI_CDB_LEN</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_msg_warn\">ata_msg_warn</a>(<a class=\"id\" href=\"#ap\">ap</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_dev_printk\">ata_dev_printk</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"unsupported CDB len\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_out_nosup\">err_out_nosup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#cdb_len\">cdb_len</a> = (unsigned int) <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Enable ATAPI AN if both the host and device have</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the support.  If PMP is attached, SNTF is required</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * to enable ATAPI AN to discern between PHY status</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * changed notifications and ATAPI ANs.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#atapi_an\">atapi_an</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_FLAG_AN\">ATA_FLAG_AN</a>) && <a class=\"id\" href=\"#ata_id_has_atapi_AN\">ata_id_has_atapi_AN</a>(<a class=\"id\" href=\"#id\">id</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (!<a class=\"id\" href=\"#sata_pmp_attached\">sata_pmp_attached</a>(<a class=\"id\" href=\"#ap\">ap</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#sata_scr_read\">sata_scr_read</a>(&amp;<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#SCR_NOTIFICATION\">SCR_NOTIFICATION</a>, &amp;<a class=\"id\" href=\"#sntf\">sntf</a>) == 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#err_mask\">err_mask</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* issue SET feature command to turn this on */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err_mask\">err_mask</a> = <a class=\"id\" href=\"#ata_dev_set_feature\">ata_dev_set_feature</a>(<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SETFEATURES_SATA_ENABLE\">SETFEATURES_SATA_ENABLE</a>, <a class=\"id\" href=\"#SATA_AN\">SATA_AN</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err_mask\">err_mask</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_dev_printk\">ata_dev_printk</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"failed to enable ATAPI AN \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"(err_mask=0x%x)\\n\", <a class=\"id\" href=\"#err_mask\">err_mask</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#ATA_DFLAG_AN\">ATA_DFLAG_AN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atapi_an_string\">atapi_an_string</a> = \", ATAPI AN\";", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_id_cdb_intr\">ata_id_cdb_intr</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#ATA_DFLAG_CDB_INTR\">ATA_DFLAG_CDB_INTR</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdb_intr_string\">cdb_intr_string</a> = \", CDB intr\";", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#atapi_dmadir\">atapi_dmadir</a> || <a class=\"id\" href=\"#atapi_id_dmadir\">atapi_id_dmadir</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#ATA_DFLAG_DMADIR\">ATA_DFLAG_DMADIR</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dma_dir_string\">dma_dir_string</a> = \", DMADIR\";", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* print device info to dmesg */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_msg_drv\">ata_msg_drv</a>(<a class=\"id\" href=\"#ap\">ap</a>) && <a class=\"id\" href=\"#print_info\">print_info</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_dev_printk\">ata_dev_printk</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"ATAPI: %s, %s, max %s%s%s%s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#modelbuf\">modelbuf</a>, <a class=\"id\" href=\"#fwrevbuf\">fwrevbuf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#ata_mode_string\">ata_mode_string</a>(<a class=\"id\" href=\"#xfer_mask\">xfer_mask</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#cdb_intr_string\">cdb_intr_string</a>, <a class=\"id\" href=\"#atapi_an_string\">atapi_an_string</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#dma_dir_string\">dma_dir_string</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* determine max_sectors */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#max_sectors\">max_sectors</a> = <a class=\"id\" href=\"#ATA_MAX_SECTORS\">ATA_MAX_SECTORS</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_DFLAG_LBA48\">ATA_DFLAG_LBA48</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#max_sectors\">max_sectors</a> = <a class=\"id\" href=\"#ATA_MAX_SECTORS_LBA48\">ATA_MAX_SECTORS_LBA48</a>;", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#horkage\">horkage</a> &amp; <a class=\"id\" href=\"#ATA_HORKAGE_IPM\">ATA_HORKAGE_IPM</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_id_has_hipm\">ata_id_has_hipm</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#ATA_DFLAG_HIPM\">ATA_DFLAG_HIPM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_id_has_dipm\">ata_id_has_dipm</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#ATA_DFLAG_DIPM\">ATA_DFLAG_DIPM</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Limit PATA drive on SATA cable bridge transfers to udma5,</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   200 sectors */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_dev_knobble\">ata_dev_knobble</a>(<a class=\"id\" href=\"#dev\">dev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_msg_drv\">ata_msg_drv</a>(<a class=\"id\" href=\"#ap\">ap</a>) && <a class=\"id\" href=\"#print_info\">print_info</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_dev_printk\">ata_dev_printk</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"applying bridge limits\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#udma_mask\">udma_mask</a> &= <a class=\"id\" href=\"#ATA_UDMA5\">ATA_UDMA5</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#max_sectors\">max_sectors</a> = <a class=\"id\" href=\"#ATA_MAX_SECTORS\">ATA_MAX_SECTORS</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a> == <a class=\"id\" href=\"#ATA_DEV_ATAPI\">ATA_DEV_ATAPI</a>) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#atapi_command_packet_set\">atapi_command_packet_set</a>(<a class=\"id\" href=\"#id\">id</a>) == <a class=\"id\" href=\"#TYPE_TAPE\">TYPE_TAPE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#max_sectors\">max_sectors</a> = <a class=\"id\" href=\"#ATA_MAX_SECTORS_TAPE\">ATA_MAX_SECTORS_TAPE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#horkage\">horkage</a> |= <a class=\"id\" href=\"#ATA_HORKAGE_STUCK_ERR\">ATA_HORKAGE_STUCK_ERR</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#horkage\">horkage</a> &amp; <a class=\"id\" href=\"#ATA_HORKAGE_MAX_SEC_128\">ATA_HORKAGE_MAX_SEC_128</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#max_sectors\">max_sectors</a> = <a class=\"id\" href=\"#min_t\">min_t</a>(unsigned int, <a class=\"id\" href=\"#ATA_MAX_SECTORS_128\">ATA_MAX_SECTORS_128</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#max_sectors\">max_sectors</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_dev_blacklisted\">ata_dev_blacklisted</a>(<a class=\"id\" href=\"#dev\">dev</a>) &amp; <a class=\"id\" href=\"#ATA_HORKAGE_IPM\">ATA_HORKAGE_IPM</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#horkage\">horkage</a> |= <a class=\"id\" href=\"#ATA_HORKAGE_IPM\">ATA_HORKAGE_IPM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* reset link pm_policy for this port to no pm */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#pm_policy\">pm_policy</a> = <a class=\"id\" href=\"#MAX_PERFORMANCE\">MAX_PERFORMANCE</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#dev_config\">dev_config</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#dev_config\">dev_config</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#horkage\">horkage</a> &amp; <a class=\"id\" href=\"#ATA_HORKAGE_DIAGNOSTIC\">ATA_HORKAGE_DIAGNOSTIC</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Let the user know. We don't want to disallow opens for</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   rescue purposes, or in case the vendor is just a blithering</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   idiot. Do this after the dev_config call as some controllers</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   with buggy firmware may want to avoid reporting false device</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   bugs */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#print_info\">print_info</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_dev_printk\">ata_dev_printk</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>,", 
"\"Drive reports diagnostics failure. This may indicate a drive\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_dev_printk\">ata_dev_printk</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>,", 
"\"fault or invalid emulation. Contact drive vendor for information.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#horkage\">horkage</a> &amp; <a class=\"id\" href=\"#ATA_HORKAGE_FIRMWARE_WARN\">ATA_HORKAGE_FIRMWARE_WARN</a>) && <a class=\"id\" href=\"#print_info\">print_info</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_dev_printk\">ata_dev_printk</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>, \"WARNING: device requires \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"firmware update to be fully functional.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_dev_printk\">ata_dev_printk</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>, \"         contact the vendor \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"or visit http://ata.wiki.kernel.org.\\n\");", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#err_out_nosup\">err_out_nosup</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_msg_probe\">ata_msg_probe</a>(<a class=\"id\" href=\"#ap\">ap</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_dev_printk\">ata_dev_printk</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"%s: EXIT, err\\n\", <a class=\"id\" href=\"#__func__\">__func__</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_cable_40wire<span class=\"ts\"/>-<span class=\"ts\"/>return 40 wire cable type</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: port</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Helper method for drivers which want to hardwire 40 wire cable</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>detection.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#ata_cable_40wire\">ata_cable_40wire</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ATA_CBL_PATA40\">ATA_CBL_PATA40</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_cable_80wire<span class=\"ts\"/>-<span class=\"ts\"/>return 80 wire cable type</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: port</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Helper method for drivers which want to hardwire 80 wire cable</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>detection.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#ata_cable_80wire\">ata_cable_80wire</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ATA_CBL_PATA80\">ATA_CBL_PATA80</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_cable_unknown<span class=\"ts\"/>-<span class=\"ts\"/>return unknown PATA cable.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: port</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Helper method for drivers which have no PATA cable detection.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#ata_cable_unknown\">ata_cable_unknown</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ATA_CBL_PATA_UNK\">ATA_CBL_PATA_UNK</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_cable_ignore<span class=\"ts\"/>-<span class=\"ts\"/>return ignored PATA cable.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: port</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Helper method for drivers which don't use cable type to limit</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>transfer mode.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ata_cable_ignore\">ata_cable_ignore</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ATA_CBL_PATA_IGN\">ATA_CBL_PATA_IGN</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_cable_sata<span class=\"ts\"/>-<span class=\"ts\"/>return SATA cable type</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: port</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Helper method for drivers which have SATA cables</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#ata_cable_sata\">ata_cable_sata</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ATA_CBL_SATA\">ATA_CBL_SATA</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_bus_probe - Reset and probe ATA bus</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: Bus to probe</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Master ATA bus probing function.  Initiates a hardware-dependent</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>bus reset, then attempts to identify any devices found on</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the bus.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>PCI/etc. bus probe sem.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Zero on success, negative errno otherwise.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#ata_bus_probe\">ata_bus_probe</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#classes\">classes</a>[<a class=\"id\" href=\"#ATA_MAX_DEVICES\">ATA_MAX_DEVICES</a>];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#tries\">tries</a>[<a class=\"id\" href=\"#ATA_MAX_DEVICES\">ATA_MAX_DEVICES</a>];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_for_each_dev\">ata_for_each_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#ALL\">ALL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tries\">tries</a>[<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devno\">devno</a>] = <a class=\"id\" href=\"#ATA_PROBE_MAX_TRIES\">ATA_PROBE_MAX_TRIES</a>;", 
"", 
" <a class=\"id\" href=\"#retry\">retry</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_for_each_dev\">ata_for_each_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#ALL\">ALL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If we issue an SRST then an ATA drive (not ATAPI)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * may change configuration and be in PIO0 timing. If</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * we do a hard reset (or are coming from power on)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * this is true for ATA or ATAPI. Until we've set a</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * suitable controller mode we should not touch the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * bus as we may be talking too fast.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#pio_mode\">pio_mode</a> = <a class=\"id\" href=\"#XFER_PIO_0\">XFER_PIO_0</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If the controller has a pio mode setup function</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * then use it to set the chipset to rights. Don't</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * touch the DMA setup as that will be dealt with when</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * configuring devices.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#set_piomode\">set_piomode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#set_piomode\">set_piomode</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* reset and determine device classes */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#phy_reset\">phy_reset</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_for_each_dev\">ata_for_each_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#ALL\">ALL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a> != <a class=\"id\" href=\"#ATA_DEV_UNKNOWN\">ATA_DEV_UNKNOWN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#classes\">classes</a>[<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devno\">devno</a>] = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#classes\">classes</a>[<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devno\">devno</a>] = <a class=\"id\" href=\"#ATA_DEV_NONE\">ATA_DEV_NONE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a> = <a class=\"id\" href=\"#ATA_DEV_UNKNOWN\">ATA_DEV_UNKNOWN</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* read IDENTIFY page and configure devices. We have to do the identify</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   specific sequence bass-ackwards so that PDIAG- is released by</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   the slave device */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_for_each_dev\">ata_for_each_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#ALL_REVERSE\">ALL_REVERSE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tries\">tries</a>[<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devno\">devno</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a> = <a class=\"id\" href=\"#classes\">classes</a>[<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devno\">devno</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ata_dev_enabled\">ata_dev_enabled</a>(<a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ata_dev_read_id\">ata_dev_read_id</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>, <a class=\"id\" href=\"#ATA_READID_POSTRESET\">ATA_READID_POSTRESET</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Now ask for the cable type as PDIAG- should have been released */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#cable_detect\">cable_detect</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#cbl\">cbl</a> = <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#cable_detect\">cable_detect</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We may have SATA bridge glue hiding here irrespective of</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the reported cable types and sensed types.  When SATA</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * drives indicate we have a bridge, we don't know which end</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * of the link the bridge is which is a problem.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_for_each_dev\">ata_for_each_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#ENABLED\">ENABLED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_id_is_sata\">ata_id_is_sata</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#cbl\">cbl</a> = <a class=\"id\" href=\"#ATA_CBL_SATA\">ATA_CBL_SATA</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* After the identify sequence we can now set up the devices. We do</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   this in the normal order so that the user doesn't get confused */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_for_each_dev\">ata_for_each_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#ENABLED\">ENABLED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#link\">link</a>.<a class=\"id\" href=\"#eh_context\">eh_context</a>.<a class=\"id\" href=\"#i\">i</a>.<a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#ATA_EHI_PRINTINFO\">ATA_EHI_PRINTINFO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ata_dev_configure\">ata_dev_configure</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#link\">link</a>.<a class=\"id\" href=\"#eh_context\">eh_context</a>.<a class=\"id\" href=\"#i\">i</a>.<a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#ATA_EHI_PRINTINFO\">ATA_EHI_PRINTINFO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* configure transfer mode */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ata_set_mode\">ata_set_mode</a>(&amp;<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#link\">link</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_for_each_dev\">ata_for_each_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#ENABLED\">ENABLED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
" <a class=\"id\" href=\"#fail\">fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tries\">tries</a>[<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devno\">devno</a>]--;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#rc\">rc</a>) {", 
"<span class=\"ts\"/>case -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* eeek, something went very wrong, give up */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tries\">tries</a>[<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devno\">devno</a>] = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* give it just one more chance */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tries\">tries</a>[<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devno\">devno</a>] = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#tries\">tries</a>[<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devno\">devno</a>], 1);", 
"<span class=\"ts\"/>case -<a class=\"id\" href=\"#EIO\">EIO</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tries\">tries</a>[<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devno\">devno</a>] == 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* This is the last chance, better to slow</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * down than lose it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sata_down_spd_limit\">sata_down_spd_limit</a>(&amp;<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#link\">link</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_down_xfermask_limit\">ata_down_xfermask_limit</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#ATA_DNXFER_PIO\">ATA_DNXFER_PIO</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tries\">tries</a>[<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devno\">devno</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_dev_disable\">ata_dev_disable</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#retry\">retry</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>sata_print_link_status - Print SATA link status</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@link: SATA link to printk link status about</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This function prints link speed and status of a SATA link.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>None.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#sata_print_link_status\">sata_print_link_status</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#sstatus\">sstatus</a>, <a class=\"id\" href=\"#scontrol\">scontrol</a>, <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sata_scr_read\">sata_scr_read</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#SCR_STATUS\">SCR_STATUS</a>, &amp;<a class=\"id\" href=\"#sstatus\">sstatus</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sata_scr_read\">sata_scr_read</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#SCR_CONTROL\">SCR_CONTROL</a>, &amp;<a class=\"id\" href=\"#scontrol\">scontrol</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_phys_link_online\">ata_phys_link_online</a>(<a class=\"id\" href=\"#link\">link</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = (<a class=\"id\" href=\"#sstatus\">sstatus</a> >> 4) &amp; 0xf;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_link_printk\">ata_link_printk</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"SATA link up %s (SStatus %X SControl %X)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sata_spd_string\">sata_spd_string</a>(<a class=\"id\" href=\"#tmp\">tmp</a>), <a class=\"id\" href=\"#sstatus\">sstatus</a>, <a class=\"id\" href=\"#scontrol\">scontrol</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_link_printk\">ata_link_printk</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"SATA link down (SStatus %X SControl %X)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sstatus\">sstatus</a>, <a class=\"id\" href=\"#scontrol\">scontrol</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_dev_pair<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>return other device on cable</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@adev: device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Obtain the other device on the same cable, or if none is</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>present NULL is returned</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#ata_dev_pair\">ata_dev_pair</a>(struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#adev\">adev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a> = <a class=\"id\" href=\"#adev\">adev</a>-><a class=\"id\" href=\"#link\">link</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#pair\">pair</a> = &amp;<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#device\">device</a>[1 - <a class=\"id\" href=\"#adev\">adev</a>-><a class=\"id\" href=\"#devno\">devno</a>];", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ata_dev_enabled\">ata_dev_enabled</a>(<a class=\"id\" href=\"#pair\">pair</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pair\">pair</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>sata_down_spd_limit - adjust SATA spd limit downward</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@link: Link to adjust SATA spd limit for</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@spd_limit: Additional limit</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Adjust SATA spd limit of @link downward.  Note that this</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>function only adjusts the limit.  The change must be applied</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>using sata_set_spd().</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>If @spd_limit is non-zero, the speed is limited to equal to or</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>lower than @spd_limit if such speed is supported.  If</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@spd_limit is slower than any supported speed, only the lowest</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>supported speed is allowed.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Inherited from caller.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>0 on success, negative errno on failure</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#sata_down_spd_limit\">sata_down_spd_limit</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#spd_limit\">spd_limit</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#sstatus\">sstatus</a>, <a class=\"id\" href=\"#spd\">spd</a>, <a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>, <a class=\"id\" href=\"#bit\">bit</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sata_scr_valid\">sata_scr_valid</a>(<a class=\"id\" href=\"#link\">link</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EOPNOTSUPP\">EOPNOTSUPP</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If SCR can be read, use it to determine the current SPD.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If not, use cached value in link-&gt;sata_spd.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sata_scr_read\">sata_scr_read</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#SCR_STATUS\">SCR_STATUS</a>, &amp;<a class=\"id\" href=\"#sstatus\">sstatus</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> == 0 && <a class=\"id\" href=\"#ata_sstatus_online\">ata_sstatus_online</a>(<a class=\"id\" href=\"#sstatus\">sstatus</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spd\">spd</a> = (<a class=\"id\" href=\"#sstatus\">sstatus</a> >> 4) &amp; 0xf;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spd\">spd</a> = <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#sata_spd\">sata_spd</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#sata_spd_limit\">sata_spd_limit</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mask\">mask</a> <= 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* unconditionally mask off the highest bit */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bit\">bit</a> = <a class=\"id\" href=\"#fls\">fls</a>(<a class=\"id\" href=\"#mask\">mask</a>) - 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> &= ~(1 << <a class=\"id\" href=\"#bit\">bit</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Mask off all speeds higher than or equal to the current</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * one.  Force 1.5Gbps if current SPD is not available.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#spd\">spd</a> &gt; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> &= (1 << (<a class=\"id\" href=\"#spd\">spd</a> - 1)) - 1;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> &= 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* were we already at the bottom? */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mask\">mask</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#spd_limit\">spd_limit</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mask\">mask</a> &amp; ((1 << <a class=\"id\" href=\"#spd_limit\">spd_limit</a>) - 1))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> &= (1 << <a class=\"id\" href=\"#spd_limit\">spd_limit</a>) - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bit\">bit</a> = <a class=\"id\" href=\"#ffs\">ffs</a>(<a class=\"id\" href=\"#mask\">mask</a>) - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> = 1 << <a class=\"id\" href=\"#bit\">bit</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#sata_spd_limit\">sata_spd_limit</a> = <a class=\"id\" href=\"#mask\">mask</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_link_printk\">ata_link_printk</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>, \"limiting SATA link speed to %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sata_spd_string\">sata_spd_string</a>(<a class=\"id\" href=\"#fls\">fls</a>(<a class=\"id\" href=\"#mask\">mask</a>)));", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__sata_set_spd_needed\">__sata_set_spd_needed</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#scontrol\">scontrol</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#host_link\">host_link</a> = &amp;<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#link\">link</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#limit\">limit</a>, <a class=\"id\" href=\"#target\">target</a>, <a class=\"id\" href=\"#spd\">spd</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#limit\">limit</a> = <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#sata_spd_limit\">sata_spd_limit</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Don't configure downstream link faster than upstream link.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * It doesn't speed up anything and some PMPs choke on such</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * configuration.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ata_is_host_link\">ata_is_host_link</a>(<a class=\"id\" href=\"#link\">link</a>) && <a class=\"id\" href=\"#host_link\">host_link</a>-><a class=\"id\" href=\"#sata_spd\">sata_spd</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#limit\">limit</a> &= (1 << <a class=\"id\" href=\"#host_link\">host_link</a>-><a class=\"id\" href=\"#sata_spd\">sata_spd</a>) - 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#limit\">limit</a> == <a class=\"id\" href=\"#UINT_MAX\">UINT_MAX</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#target\">target</a> = 0;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#target\">target</a> = <a class=\"id\" href=\"#fls\">fls</a>(<a class=\"id\" href=\"#limit\">limit</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spd\">spd</a> = (*<a class=\"id\" href=\"#scontrol\">scontrol</a> >> 4) &amp; 0xf;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#scontrol\">scontrol</a> = (*<a class=\"id\" href=\"#scontrol\">scontrol</a> &amp; ~0xf0) | ((<a class=\"id\" href=\"#target\">target</a> &amp; 0xf) << 4);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#spd\">spd</a> != <a class=\"id\" href=\"#target\">target</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>sata_set_spd_needed - is SATA spd configuration needed</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@link: Link in question</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Test whether the spd limit in SControl matches</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@link-&gt;sata_spd_limit.  This function is used to determine</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>whether hardreset is necessary to apply SATA spd</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>configuration.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Inherited from caller.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>1 if SATA spd configuration is needed, 0 otherwise.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#sata_set_spd_needed\">sata_set_spd_needed</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#scontrol\">scontrol</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sata_scr_read\">sata_scr_read</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#SCR_CONTROL\">SCR_CONTROL</a>, &amp;<a class=\"id\" href=\"#scontrol\">scontrol</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__sata_set_spd_needed\">__sata_set_spd_needed</a>(<a class=\"id\" href=\"#link\">link</a>, &amp;<a class=\"id\" href=\"#scontrol\">scontrol</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>sata_set_spd - set SATA spd according to spd limit</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@link: Link to set SATA spd for</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Set SATA spd of @link according to sata_spd_limit.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Inherited from caller.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>0 if spd doesn't need to be changed, 1 if spd has been</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>changed.  Negative errno if SCR registers are inaccessible.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#sata_set_spd\">sata_set_spd</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#scontrol\">scontrol</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sata_scr_read\">sata_scr_read</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#SCR_CONTROL\">SCR_CONTROL</a>, &amp;<a class=\"id\" href=\"#scontrol\">scontrol</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#__sata_set_spd_needed\">__sata_set_spd_needed</a>(<a class=\"id\" href=\"#link\">link</a>, &amp;<a class=\"id\" href=\"#scontrol\">scontrol</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sata_scr_write\">sata_scr_write</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#SCR_CONTROL\">SCR_CONTROL</a>, <a class=\"id\" href=\"#scontrol\">scontrol</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This mode timing computation functionality is ported over from</span>", 
"<span class=\"comment\"> * drivers/ide/ide-timing.h and was originally written by Vojtech Pavlik</span>", 
"<span class=\"comment\"> */</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * PIO 0-4, MWDMA 0-2 and UDMA 0-6 timings (in nanoseconds).</span>", 
"<span class=\"comment\"> * These were taken from ATA/ATAPI-6 standard, rev 0a, except</span>", 
"<span class=\"comment\"> * for UDMA6, which is currently supported only by Maxtor drives.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * For PIO 5/6 MWDMA 3/4 see the CFA specification 3.0.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static const struct <a class=\"id\" href=\"#ata_timing\">ata_timing</a> <a class=\"id\" href=\"#ata_timing\">ata_timing</a>[] = {", 
"<span class=\"comment\">/*<span class=\"ts\"/>{ XFER_PIO_SLOW, 120, 290, 240, 960, 290, 240, 0,  960,   0 }, */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#XFER_PIO_0\">XFER_PIO_0</a>,     70, 290, 240, 600, 165, 150, 0,  600,   0 },", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#XFER_PIO_1\">XFER_PIO_1</a>,     50, 290,  93, 383, 125, 100, 0,  383,   0 },", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#XFER_PIO_2\">XFER_PIO_2</a>,     30, 290,  40, 330, 100,  90, 0,  240,   0 },", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#XFER_PIO_3\">XFER_PIO_3</a>,     30,  80,  70, 180,  80,  70, 0,  180,   0 },", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#XFER_PIO_4\">XFER_PIO_4</a>,     25,  70,  25, 120,  70,  25, 0,  120,   0 },", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#XFER_PIO_5\">XFER_PIO_5</a>,     15,  65,  25, 100,  65,  25, 0,  100,   0 },", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#XFER_PIO_6\">XFER_PIO_6</a>,     10,  55,  20,  80,  55,  20, 0,   80,   0 },", 
"", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#XFER_SW_DMA_0\">XFER_SW_DMA_0</a>, 120,   0,   0,   0, 480, 480, 50, 960,   0 },", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#XFER_SW_DMA_1\">XFER_SW_DMA_1</a>,  90,   0,   0,   0, 240, 240, 30, 480,   0 },", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#XFER_SW_DMA_2\">XFER_SW_DMA_2</a>,  60,   0,   0,   0, 120, 120, 20, 240,   0 },", 
"", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#XFER_MW_DMA_0\">XFER_MW_DMA_0</a>,  60,   0,   0,   0, 215, 215, 20, 480,   0 },", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#XFER_MW_DMA_1\">XFER_MW_DMA_1</a>,  45,   0,   0,   0,  80,  50, 5,  150,   0 },", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#XFER_MW_DMA_2\">XFER_MW_DMA_2</a>,  25,   0,   0,   0,  70,  25, 5,  120,   0 },", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#XFER_MW_DMA_3\">XFER_MW_DMA_3</a>,  25,   0,   0,   0,  65,  25, 5,  100,   0 },", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#XFER_MW_DMA_4\">XFER_MW_DMA_4</a>,  25,   0,   0,   0,  55,  20, 5,   80,   0 },", 
"", 
"<span class=\"comment\">/*<span class=\"ts\"/>{ XFER_UDMA_SLOW,  0,   0,   0,   0,   0,   0, 0,    0, 150 }, */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#XFER_UDMA_0\">XFER_UDMA_0</a>,     0,   0,   0,   0,   0,   0, 0,    0, 120 },", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#XFER_UDMA_1\">XFER_UDMA_1</a>,     0,   0,   0,   0,   0,   0, 0,    0,  80 },", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#XFER_UDMA_2\">XFER_UDMA_2</a>,     0,   0,   0,   0,   0,   0, 0,    0,  60 },", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#XFER_UDMA_3\">XFER_UDMA_3</a>,     0,   0,   0,   0,   0,   0, 0,    0,  45 },", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#XFER_UDMA_4\">XFER_UDMA_4</a>,     0,   0,   0,   0,   0,   0, 0,    0,  30 },", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#XFER_UDMA_5\">XFER_UDMA_5</a>,     0,   0,   0,   0,   0,   0, 0,    0,  20 },", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#XFER_UDMA_6\">XFER_UDMA_6</a>,     0,   0,   0,   0,   0,   0, 0,    0,  15 },", 
"", 
"<span class=\"ts\"/>{ 0xFF }", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ENOUGH\">ENOUGH</a>(<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#unit\">unit</a>)<span class=\"ts\"/><span class=\"ts\"/>(((<a class=\"id\" href=\"#v\">v</a>)-1)/(<a class=\"id\" href=\"#unit\">unit</a>)+1)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EZ\">EZ</a>(<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#unit\">unit</a>)<span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#v\">v</a>)?<a class=\"id\" href=\"#ENOUGH\">ENOUGH</a>(<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#unit\">unit</a>):0)", 
"", 
"static void <a class=\"id\" href=\"#ata_timing_quantize\">ata_timing_quantize</a>(const struct <a class=\"id\" href=\"#ata_timing\">ata_timing</a> *<a class=\"id\" href=\"#t\">t</a>, struct <a class=\"id\" href=\"#ata_timing\">ata_timing</a> *<a class=\"id\" href=\"#q\">q</a>, int <a class=\"id\" href=\"#T\">T</a>, int <a class=\"id\" href=\"#UT\">UT</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#setup\">setup</a><span class=\"ts\"/>= <a class=\"id\" href=\"#EZ\">EZ</a>(<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#setup\">setup</a>      * 1000,  <a class=\"id\" href=\"#T\">T</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#act8b\">act8b</a><span class=\"ts\"/>= <a class=\"id\" href=\"#EZ\">EZ</a>(<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#act8b\">act8b</a>      * 1000,  <a class=\"id\" href=\"#T\">T</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#rec8b\">rec8b</a><span class=\"ts\"/>= <a class=\"id\" href=\"#EZ\">EZ</a>(<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#rec8b\">rec8b</a>      * 1000,  <a class=\"id\" href=\"#T\">T</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#cyc8b\">cyc8b</a><span class=\"ts\"/>= <a class=\"id\" href=\"#EZ\">EZ</a>(<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#cyc8b\">cyc8b</a>      * 1000,  <a class=\"id\" href=\"#T\">T</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#active\">active</a><span class=\"ts\"/>= <a class=\"id\" href=\"#EZ\">EZ</a>(<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#active\">active</a>     * 1000,  <a class=\"id\" href=\"#T\">T</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#recover\">recover</a><span class=\"ts\"/>= <a class=\"id\" href=\"#EZ\">EZ</a>(<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#recover\">recover</a>    * 1000,  <a class=\"id\" href=\"#T\">T</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#dmack_hold\">dmack_hold</a><span class=\"ts\"/>= <a class=\"id\" href=\"#EZ\">EZ</a>(<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#dmack_hold\">dmack_hold</a> * 1000,  <a class=\"id\" href=\"#T\">T</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#cycle\">cycle</a><span class=\"ts\"/>= <a class=\"id\" href=\"#EZ\">EZ</a>(<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#cycle\">cycle</a>      * 1000,  <a class=\"id\" href=\"#T\">T</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#udma\">udma</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#EZ\">EZ</a>(<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#udma\">udma</a>       * 1000, <a class=\"id\" href=\"#UT\">UT</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#ata_timing_merge\">ata_timing_merge</a>(const struct <a class=\"id\" href=\"#ata_timing\">ata_timing</a> *<a class=\"id\" href=\"#a\">a</a>, const struct <a class=\"id\" href=\"#ata_timing\">ata_timing</a> *<a class=\"id\" href=\"#b\">b</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#ata_timing\">ata_timing</a> *<a class=\"id\" href=\"#m\">m</a>, unsigned int <a class=\"id\" href=\"#what\">what</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#what\">what</a> &amp; <a class=\"id\" href=\"#ATA_TIMING_SETUP\">ATA_TIMING_SETUP</a>  ) <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#setup\">setup</a>   = <a class=\"id\" href=\"#max\">max</a>(<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#setup\">setup</a>,   <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#setup\">setup</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#what\">what</a> &amp; <a class=\"id\" href=\"#ATA_TIMING_ACT8B\">ATA_TIMING_ACT8B</a>  ) <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#act8b\">act8b</a>   = <a class=\"id\" href=\"#max\">max</a>(<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#act8b\">act8b</a>,   <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#act8b\">act8b</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#what\">what</a> &amp; <a class=\"id\" href=\"#ATA_TIMING_REC8B\">ATA_TIMING_REC8B</a>  ) <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#rec8b\">rec8b</a>   = <a class=\"id\" href=\"#max\">max</a>(<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#rec8b\">rec8b</a>,   <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#rec8b\">rec8b</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#what\">what</a> &amp; <a class=\"id\" href=\"#ATA_TIMING_CYC8B\">ATA_TIMING_CYC8B</a>  ) <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#cyc8b\">cyc8b</a>   = <a class=\"id\" href=\"#max\">max</a>(<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#cyc8b\">cyc8b</a>,   <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#cyc8b\">cyc8b</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#what\">what</a> &amp; <a class=\"id\" href=\"#ATA_TIMING_ACTIVE\">ATA_TIMING_ACTIVE</a> ) <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#active\">active</a>  = <a class=\"id\" href=\"#max\">max</a>(<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#active\">active</a>,  <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#active\">active</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#what\">what</a> &amp; <a class=\"id\" href=\"#ATA_TIMING_RECOVER\">ATA_TIMING_RECOVER</a>) <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#recover\">recover</a> = <a class=\"id\" href=\"#max\">max</a>(<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#recover\">recover</a>, <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#recover\">recover</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#what\">what</a> &amp; <a class=\"id\" href=\"#ATA_TIMING_DMACK_HOLD\">ATA_TIMING_DMACK_HOLD</a>) <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#dmack_hold\">dmack_hold</a> = <a class=\"id\" href=\"#max\">max</a>(<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#dmack_hold\">dmack_hold</a>, <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#dmack_hold\">dmack_hold</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#what\">what</a> &amp; <a class=\"id\" href=\"#ATA_TIMING_CYCLE\">ATA_TIMING_CYCLE</a>  ) <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#cycle\">cycle</a>   = <a class=\"id\" href=\"#max\">max</a>(<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#cycle\">cycle</a>,   <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#cycle\">cycle</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#what\">what</a> &amp; <a class=\"id\" href=\"#ATA_TIMING_UDMA\">ATA_TIMING_UDMA</a>   ) <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#udma\">udma</a>    = <a class=\"id\" href=\"#max\">max</a>(<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#udma\">udma</a>,    <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#udma\">udma</a>);", 
"}", 
"", 
"const struct <a class=\"id\" href=\"#ata_timing\">ata_timing</a> *<a class=\"id\" href=\"#ata_timing_find_mode\">ata_timing_find_mode</a>(<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#xfer_mode\">xfer_mode</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#ata_timing\">ata_timing</a> *<a class=\"id\" href=\"#t\">t</a> = <a class=\"id\" href=\"#ata_timing\">ata_timing</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#xfer_mode\">xfer_mode</a> &gt; <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#mode\">mode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>++;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#xfer_mode\">xfer_mode</a> == <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#mode\">mode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#t\">t</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#ata_timing_compute\">ata_timing_compute</a>(struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#adev\">adev</a>, unsigned short <a class=\"id\" href=\"#speed\">speed</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#ata_timing\">ata_timing</a> *<a class=\"id\" href=\"#t\">t</a>, int <a class=\"id\" href=\"#T\">T</a>, int <a class=\"id\" href=\"#UT\">UT</a>)", 
"{", 
"<span class=\"ts\"/>const <a class=\"id\" href=\"#u16\">u16</a> *<a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#adev\">adev</a>-><a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#ata_timing\">ata_timing</a> *<a class=\"id\" href=\"#s\">s</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_timing\">ata_timing</a> <a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Find the mode.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#s\">s</a> = <a class=\"id\" href=\"#ata_timing_find_mode\">ata_timing_find_mode</a>(<a class=\"id\" href=\"#speed\">speed</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#s\">s</a>, sizeof(*<a class=\"id\" href=\"#s\">s</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the drive is an EIDE drive, it can tell us it needs extended</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * PIO/MW_DMA cycle timing.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_FIELD_VALID\">ATA_ID_FIELD_VALID</a>] &amp; 2) {<span class=\"ts\"/><span class=\"comment\">/* EIDE drive */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#p\">p</a>, 0, sizeof(<a class=\"id\" href=\"#p\">p</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#speed\">speed</a> >= <a class=\"id\" href=\"#XFER_PIO_0\">XFER_PIO_0</a> && <a class=\"id\" href=\"#speed\">speed</a> <= <a class=\"id\" href=\"#XFER_SW_DMA_0\">XFER_SW_DMA_0</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#speed\">speed</a> <= <a class=\"id\" href=\"#XFER_PIO_2\">XFER_PIO_2</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>.<a class=\"id\" href=\"#cycle\">cycle</a> = <a class=\"id\" href=\"#p\">p</a>.<a class=\"id\" href=\"#cyc8b\">cyc8b</a> = <a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_EIDE_PIO\">ATA_ID_EIDE_PIO</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else if ((<a class=\"id\" href=\"#speed\">speed</a> <= <a class=\"id\" href=\"#XFER_PIO_4\">XFER_PIO_4</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (<a class=\"id\" href=\"#speed\">speed</a> == <a class=\"id\" href=\"#XFER_PIO_5\">XFER_PIO_5</a> && !<a class=\"id\" href=\"#ata_id_is_cfa\">ata_id_is_cfa</a>(<a class=\"id\" href=\"#id\">id</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>.<a class=\"id\" href=\"#cycle\">cycle</a> = <a class=\"id\" href=\"#p\">p</a>.<a class=\"id\" href=\"#cyc8b\">cyc8b</a> = <a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_EIDE_PIO_IORDY\">ATA_ID_EIDE_PIO_IORDY</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#speed\">speed</a> >= <a class=\"id\" href=\"#XFER_MW_DMA_0\">XFER_MW_DMA_0</a> && <a class=\"id\" href=\"#speed\">speed</a> <= <a class=\"id\" href=\"#XFER_MW_DMA_2\">XFER_MW_DMA_2</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>.<a class=\"id\" href=\"#cycle\">cycle</a> = <a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_EIDE_DMA_MIN\">ATA_ID_EIDE_DMA_MIN</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_timing_merge\">ata_timing_merge</a>(&amp;<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#ATA_TIMING_CYCLE\">ATA_TIMING_CYCLE</a> | <a class=\"id\" href=\"#ATA_TIMING_CYC8B\">ATA_TIMING_CYC8B</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Convert the timing to bus clock counts.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_timing_quantize\">ata_timing_quantize</a>(<a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#T\">T</a>, <a class=\"id\" href=\"#UT\">UT</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Even in DMA/UDMA modes we still use PIO access for IDENTIFY,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * S.M.A.R.T * and some other commands. We have to ensure that the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * DMA cycle timing is slower/equal than the fastest PIO timing.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#speed\">speed</a> &gt; <a class=\"id\" href=\"#XFER_PIO_6\">XFER_PIO_6</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_timing_compute\">ata_timing_compute</a>(<a class=\"id\" href=\"#adev\">adev</a>, <a class=\"id\" href=\"#adev\">adev</a>-><a class=\"id\" href=\"#pio_mode\">pio_mode</a>, &amp;<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#T\">T</a>, <a class=\"id\" href=\"#UT\">UT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_timing_merge\">ata_timing_merge</a>(&amp;<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#ATA_TIMING_ALL\">ATA_TIMING_ALL</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Lengthen active &amp; recovery time so that cycle time is correct.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#act8b\">act8b</a> + <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#rec8b\">rec8b</a> &lt; <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#cyc8b\">cyc8b</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#act8b\">act8b</a> += (<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#cyc8b\">cyc8b</a> - (<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#act8b\">act8b</a> + <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#rec8b\">rec8b</a>)) / 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#rec8b\">rec8b</a> = <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#cyc8b\">cyc8b</a> - <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#act8b\">act8b</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#active\">active</a> + <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#recover\">recover</a> &lt; <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#cycle\">cycle</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#active\">active</a> += (<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#cycle\">cycle</a> - (<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#active\">active</a> + <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#recover\">recover</a>)) / 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#recover\">recover</a> = <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#cycle\">cycle</a> - <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#active\">active</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* In a few cases quantisation may produce enough errors to</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   leave t-&gt;cycle too low for the sum of active and recovery</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   if so we must correct this */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#active\">active</a> + <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#recover\">recover</a> &gt; <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#cycle\">cycle</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#cycle\">cycle</a> = <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#active\">active</a> + <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#recover\">recover</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_timing_cycle2mode - find xfer mode for the specified cycle duration</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@xfer_shift: ATA_SHIFT_* value for transfer type to examine.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@cycle: cycle duration in ns</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Return matching xfer mode for @cycle.  The returned mode is of</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the transfer type specified by @xfer_shift.  If @cycle is too</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>slow for @xfer_shift, 0xff is returned.  If @cycle is faster</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>than the fastest known mode, the fasted mode is returned.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>None.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Matching xfer_mode, 0xff if no match found.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#ata_timing_cycle2mode\">ata_timing_cycle2mode</a>(unsigned int <a class=\"id\" href=\"#xfer_shift\">xfer_shift</a>, int <a class=\"id\" href=\"#cycle\">cycle</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#base_mode\">base_mode</a> = 0xff, <a class=\"id\" href=\"#last_mode\">last_mode</a> = 0xff;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#ata_xfer_ent\">ata_xfer_ent</a> *<a class=\"id\" href=\"#ent\">ent</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#ata_timing\">ata_timing</a> *<a class=\"id\" href=\"#t\">t</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#ent\">ent</a> = <a class=\"id\" href=\"#ata_xfer_tbl\">ata_xfer_tbl</a>; <a class=\"id\" href=\"#ent\">ent</a>-><a class=\"id\" href=\"#shift\">shift</a> >= 0; <a class=\"id\" href=\"#ent\">ent</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ent\">ent</a>-><a class=\"id\" href=\"#shift\">shift</a> == <a class=\"id\" href=\"#xfer_shift\">xfer_shift</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#base_mode\">base_mode</a> = <a class=\"id\" href=\"#ent\">ent</a>-><a class=\"id\" href=\"#base\">base</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#t\">t</a> = <a class=\"id\" href=\"#ata_timing_find_mode\">ata_timing_find_mode</a>(<a class=\"id\" href=\"#base_mode\">base_mode</a>);", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#t\">t</a> && <a class=\"id\" href=\"#ata_xfer_mode2shift\">ata_xfer_mode2shift</a>(<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#mode\">mode</a>) == <a class=\"id\" href=\"#xfer_shift\">xfer_shift</a>; <a class=\"id\" href=\"#t\">t</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#this_cycle\">this_cycle</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#xfer_shift\">xfer_shift</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ATA_SHIFT_PIO\">ATA_SHIFT_PIO</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ATA_SHIFT_MWDMA\">ATA_SHIFT_MWDMA</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_cycle\">this_cycle</a> = <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#cycle\">cycle</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ATA_SHIFT_UDMA\">ATA_SHIFT_UDMA</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_cycle\">this_cycle</a> = <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#udma\">udma</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cycle\">cycle</a> &gt; <a class=\"id\" href=\"#this_cycle\">this_cycle</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_mode\">last_mode</a> = <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#mode\">mode</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#last_mode\">last_mode</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_down_xfermask_limit - adjust dev xfer masks downward</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@dev: Device to adjust xfer masks</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@sel: ATA_DNXFER_* selector</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Adjust xfer masks of @dev downward.  Note that this function</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>does not apply the change.  Invoking ata_set_mode() afterwards</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>will apply the limit.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Inherited from caller.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>0 on success, negative errno on failure</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ata_down_xfermask_limit\">ata_down_xfermask_limit</a>(struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, unsigned int <a class=\"id\" href=\"#sel\">sel</a>)", 
"{", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buf\">buf</a>[32];", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#orig_mask\">orig_mask</a>, <a class=\"id\" href=\"#xfer_mask\">xfer_mask</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#pio_mask\">pio_mask</a>, <a class=\"id\" href=\"#mwdma_mask\">mwdma_mask</a>, <a class=\"id\" href=\"#udma_mask\">udma_mask</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#quiet\">quiet</a>, <a class=\"id\" href=\"#highbit\">highbit</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#quiet\">quiet</a> = !!(<a class=\"id\" href=\"#sel\">sel</a> &amp; <a class=\"id\" href=\"#ATA_DNXFER_QUIET\">ATA_DNXFER_QUIET</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sel\">sel</a> &= ~<a class=\"id\" href=\"#ATA_DNXFER_QUIET\">ATA_DNXFER_QUIET</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xfer_mask\">xfer_mask</a> = <a class=\"id\" href=\"#orig_mask\">orig_mask</a> = <a class=\"id\" href=\"#ata_pack_xfermask\">ata_pack_xfermask</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#pio_mask\">pio_mask</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mwdma_mask\">mwdma_mask</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#udma_mask\">udma_mask</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_unpack_xfermask\">ata_unpack_xfermask</a>(<a class=\"id\" href=\"#xfer_mask\">xfer_mask</a>, &amp;<a class=\"id\" href=\"#pio_mask\">pio_mask</a>, &amp;<a class=\"id\" href=\"#mwdma_mask\">mwdma_mask</a>, &amp;<a class=\"id\" href=\"#udma_mask\">udma_mask</a>);", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#sel\">sel</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ATA_DNXFER_PIO\">ATA_DNXFER_PIO</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#highbit\">highbit</a> = <a class=\"id\" href=\"#fls\">fls</a>(<a class=\"id\" href=\"#pio_mask\">pio_mask</a>) - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pio_mask\">pio_mask</a> &= ~(1 << <a class=\"id\" href=\"#highbit\">highbit</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ATA_DNXFER_DMA\">ATA_DNXFER_DMA</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#udma_mask\">udma_mask</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#highbit\">highbit</a> = <a class=\"id\" href=\"#fls\">fls</a>(<a class=\"id\" href=\"#udma_mask\">udma_mask</a>) - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#udma_mask\">udma_mask</a> &= ~(1 << <a class=\"id\" href=\"#highbit\">highbit</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#udma_mask\">udma_mask</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#mwdma_mask\">mwdma_mask</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#highbit\">highbit</a> = <a class=\"id\" href=\"#fls\">fls</a>(<a class=\"id\" href=\"#mwdma_mask\">mwdma_mask</a>) - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mwdma_mask\">mwdma_mask</a> &= ~(1 << <a class=\"id\" href=\"#highbit\">highbit</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#mwdma_mask\">mwdma_mask</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ATA_DNXFER_40C\">ATA_DNXFER_40C</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#udma_mask\">udma_mask</a> &= <a class=\"id\" href=\"#ATA_UDMA_MASK_40C\">ATA_UDMA_MASK_40C</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ATA_DNXFER_FORCE_PIO0\">ATA_DNXFER_FORCE_PIO0</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pio_mask\">pio_mask</a> &= 1;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ATA_DNXFER_FORCE_PIO\">ATA_DNXFER_FORCE_PIO</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mwdma_mask\">mwdma_mask</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#udma_mask\">udma_mask</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xfer_mask\">xfer_mask</a> &= <a class=\"id\" href=\"#ata_pack_xfermask\">ata_pack_xfermask</a>(<a class=\"id\" href=\"#pio_mask\">pio_mask</a>, <a class=\"id\" href=\"#mwdma_mask\">mwdma_mask</a>, <a class=\"id\" href=\"#udma_mask\">udma_mask</a>);", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#xfer_mask\">xfer_mask</a> &amp; <a class=\"id\" href=\"#ATA_MASK_PIO\">ATA_MASK_PIO</a>) || <a class=\"id\" href=\"#xfer_mask\">xfer_mask</a> == <a class=\"id\" href=\"#orig_mask\">orig_mask</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#quiet\">quiet</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#xfer_mask\">xfer_mask</a> &amp; (<a class=\"id\" href=\"#ATA_MASK_MWDMA\">ATA_MASK_MWDMA</a> | <a class=\"id\" href=\"#ATA_MASK_UDMA\">ATA_MASK_UDMA</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, sizeof(<a class=\"id\" href=\"#buf\">buf</a>), \"%s:%s\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#ata_mode_string\">ata_mode_string</a>(<a class=\"id\" href=\"#xfer_mask\">xfer_mask</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#ata_mode_string\">ata_mode_string</a>(<a class=\"id\" href=\"#xfer_mask\">xfer_mask</a> &amp; <a class=\"id\" href=\"#ATA_MASK_PIO\">ATA_MASK_PIO</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, sizeof(<a class=\"id\" href=\"#buf\">buf</a>), \"%s\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#ata_mode_string\">ata_mode_string</a>(<a class=\"id\" href=\"#xfer_mask\">xfer_mask</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_dev_printk\">ata_dev_printk</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"limiting speed to %s\\n\", <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_unpack_xfermask\">ata_unpack_xfermask</a>(<a class=\"id\" href=\"#xfer_mask\">xfer_mask</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#pio_mask\">pio_mask</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mwdma_mask\">mwdma_mask</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#udma_mask\">udma_mask</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ata_dev_set_mode\">ata_dev_set_mode</a>(struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#ap\">ap</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_eh_context\">ata_eh_context</a> *<a class=\"id\" href=\"#ehc\">ehc</a> = &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#eh_context\">eh_context</a>;", 
"<span class=\"ts\"/>const <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#nosetxfer\">nosetxfer</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#horkage\">horkage</a> &amp; <a class=\"id\" href=\"#ATA_HORKAGE_NOSETXFER\">ATA_HORKAGE_NOSETXFER</a>;", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#dev_err_whine\">dev_err_whine</a> = \"\";", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ign_dev_err\">ign_dev_err</a> = 0;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#err_mask\">err_mask</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#ATA_DFLAG_PIO\">ATA_DFLAG_PIO</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#xfer_shift\">xfer_shift</a> == <a class=\"id\" href=\"#ATA_SHIFT_PIO\">ATA_SHIFT_PIO</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#ATA_DFLAG_PIO\">ATA_DFLAG_PIO</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nosetxfer\">nosetxfer</a> && <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_FLAG_SATA\">ATA_FLAG_SATA</a> && <a class=\"id\" href=\"#ata_id_is_sata\">ata_id_is_sata</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_err_whine\">dev_err_whine</a> = \" (SET_XFERMODE skipped)\";", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nosetxfer\">nosetxfer</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_dev_printk\">ata_dev_printk</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"NOSETXFER but PATA detected - can't \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"skip SETXFER, might malfunction\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err_mask\">err_mask</a> = <a class=\"id\" href=\"#ata_dev_set_xfermode\">ata_dev_set_xfermode</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err_mask\">err_mask</a> &amp; ~<a class=\"id\" href=\"#AC_ERR_DEV\">AC_ERR_DEV</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* revalidate */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ehc\">ehc</a>-><a class=\"id\" href=\"#i\">i</a>.<a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#ATA_EHI_POST_SETMODE\">ATA_EHI_POST_SETMODE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ata_dev_revalidate\">ata_dev_revalidate</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#ATA_DEV_UNKNOWN\">ATA_DEV_UNKNOWN</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ehc\">ehc</a>-><a class=\"id\" href=\"#i\">i</a>.<a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#ATA_EHI_POST_SETMODE\">ATA_EHI_POST_SETMODE</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#xfer_shift\">xfer_shift</a> == <a class=\"id\" href=\"#ATA_SHIFT_PIO\">ATA_SHIFT_PIO</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Old CFA may refuse this command, which is just fine */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_id_is_cfa\">ata_id_is_cfa</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ign_dev_err\">ign_dev_err</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Catch several broken garbage emulations plus some pre</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   ATA devices */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_id_major_version\">ata_id_major_version</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>) == 0 &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#pio_mode\">pio_mode</a> <= <a class=\"id\" href=\"#XFER_PIO_2\">XFER_PIO_2</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ign_dev_err\">ign_dev_err</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Some very old devices and some bad newer ones fail</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   any kind of SET_XFERMODE request but support PIO0-2</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   timings and no IORDY */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ata_id_has_iordy\">ata_id_has_iordy</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>) && <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#pio_mode\">pio_mode</a> <= <a class=\"id\" href=\"#XFER_PIO_2\">XFER_PIO_2</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ign_dev_err\">ign_dev_err</a> = 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* Early MWDMA devices do DMA but don't allow DMA mode setting.</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   Don't fail an MWDMA0 set IFF the device indicates it is in MWDMA0 */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#xfer_shift\">xfer_shift</a> == <a class=\"id\" href=\"#ATA_SHIFT_MWDMA\">ATA_SHIFT_MWDMA</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dma_mode\">dma_mode</a> == <a class=\"id\" href=\"#XFER_MW_DMA_0\">XFER_MW_DMA_0</a> &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>[63] >> 8) &amp; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ign_dev_err\">ign_dev_err</a> = 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* if the device is actually configured correctly, ignore dev err */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#xfer_mode\">xfer_mode</a> == <a class=\"id\" href=\"#ata_xfer_mask2mode\">ata_xfer_mask2mode</a>(<a class=\"id\" href=\"#ata_id_xfermask\">ata_id_xfermask</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ign_dev_err\">ign_dev_err</a> = 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err_mask\">err_mask</a> &amp; <a class=\"id\" href=\"#AC_ERR_DEV\">AC_ERR_DEV</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ign_dev_err\">ign_dev_err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_err_whine\">dev_err_whine</a> = \" (device error ignored)\";", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DPRINTK\">DPRINTK</a>(\"xfer_shift=%u, xfer_mode=0x%x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#xfer_shift\">xfer_shift</a>, (int)<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#xfer_mode\">xfer_mode</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_dev_printk\">ata_dev_printk</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, \"configured for %s%s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#ata_mode_string\">ata_mode_string</a>(<a class=\"id\" href=\"#ata_xfer_mode2mask\">ata_xfer_mode2mask</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#xfer_mode\">xfer_mode</a>)),", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#dev_err_whine\">dev_err_whine</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
" <a class=\"id\" href=\"#fail\">fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_dev_printk\">ata_dev_printk</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"failed to set xfermode \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"(err_mask=0x%x)\\n\", <a class=\"id\" href=\"#err_mask\">err_mask</a>);", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_do_set_mode - Program timings and issue SET FEATURES - XFER</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@link: link on which timings will be programmed</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@r_failed_dev: out parameter for failed device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Standard implementation of the function used to tune and set</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ATA device disk transfer mode (PIO3, UDMA6, etc.).  If</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_dev_set_mode() fails, pointer to the failing device is</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>returned in @r_failed_dev.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>PCI/etc. bus probe sem.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>0 on success, negative errno otherwise</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#ata_do_set_mode\">ata_do_set_mode</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>, struct <a class=\"id\" href=\"#ata_device\">ata_device</a> **<a class=\"id\" href=\"#r_failed_dev\">r_failed_dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a> = <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#ap\">ap</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = 0, <a class=\"id\" href=\"#used_dma\">used_dma</a> = 0, <a class=\"id\" href=\"#found\">found</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* step 1: calculate xfer_mask */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_for_each_dev\">ata_for_each_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#ENABLED\">ENABLED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#pio_mask\">pio_mask</a>, <a class=\"id\" href=\"#dma_mask\">dma_mask</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#mode_mask\">mode_mask</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mode_mask\">mode_mask</a> = <a class=\"id\" href=\"#ATA_DMA_MASK_ATA\">ATA_DMA_MASK_ATA</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a> == <a class=\"id\" href=\"#ATA_DEV_ATAPI\">ATA_DEV_ATAPI</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mode_mask\">mode_mask</a> = <a class=\"id\" href=\"#ATA_DMA_MASK_ATAPI\">ATA_DMA_MASK_ATAPI</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#ata_id_is_cfa\">ata_id_is_cfa</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mode_mask\">mode_mask</a> = <a class=\"id\" href=\"#ATA_DMA_MASK_CFA\">ATA_DMA_MASK_CFA</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_dev_xfermask\">ata_dev_xfermask</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_force_xfermask\">ata_force_xfermask</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pio_mask\">pio_mask</a> = <a class=\"id\" href=\"#ata_pack_xfermask\">ata_pack_xfermask</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#pio_mask\">pio_mask</a>, 0, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dma_mask\">dma_mask</a> = <a class=\"id\" href=\"#ata_pack_xfermask\">ata_pack_xfermask</a>(0, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mwdma_mask\">mwdma_mask</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#udma_mask\">udma_mask</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#libata_dma_mask\">libata_dma_mask</a> &amp; <a class=\"id\" href=\"#mode_mask\">mode_mask</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dma_mask\">dma_mask</a> = <a class=\"id\" href=\"#ata_pack_xfermask\">ata_pack_xfermask</a>(0, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mwdma_mask\">mwdma_mask</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#udma_mask\">udma_mask</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dma_mask\">dma_mask</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#pio_mode\">pio_mode</a> = <a class=\"id\" href=\"#ata_xfer_mask2mode\">ata_xfer_mask2mode</a>(<a class=\"id\" href=\"#pio_mask\">pio_mask</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dma_mode\">dma_mode</a> = <a class=\"id\" href=\"#ata_xfer_mask2mode\">ata_xfer_mask2mode</a>(<a class=\"id\" href=\"#dma_mask\">dma_mask</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_dma_enabled\">ata_dma_enabled</a>(<a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#used_dma\">used_dma</a> = 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#found\">found</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* step 2: always set host PIO timings */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_for_each_dev\">ata_for_each_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#ENABLED\">ENABLED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#pio_mode\">pio_mode</a> == 0xff) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_dev_printk\">ata_dev_printk</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>, \"no PIO support\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#xfer_mode\">xfer_mode</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#pio_mode\">pio_mode</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#xfer_shift\">xfer_shift</a> = <a class=\"id\" href=\"#ATA_SHIFT_PIO\">ATA_SHIFT_PIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#set_piomode\">set_piomode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#set_piomode\">set_piomode</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* step 3: set host DMA timings */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_for_each_dev\">ata_for_each_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#ENABLED\">ENABLED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ata_dma_enabled\">ata_dma_enabled</a>(<a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#xfer_mode\">xfer_mode</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dma_mode\">dma_mode</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#xfer_shift\">xfer_shift</a> = <a class=\"id\" href=\"#ata_xfer_mode2shift\">ata_xfer_mode2shift</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dma_mode\">dma_mode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#set_dmamode\">set_dmamode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#set_dmamode\">set_dmamode</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* step 4: update devices' xfer mode */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_for_each_dev\">ata_for_each_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#ENABLED\">ENABLED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ata_dev_set_mode\">ata_dev_set_mode</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Record simplex status. If we selected DMA then the other</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * host channels are not permitted to do so.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#used_dma\">used_dma</a> && (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_HOST_SIMPLEX\">ATA_HOST_SIMPLEX</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#simplex_claimed\">simplex_claimed</a> = <a class=\"id\" href=\"#ap\">ap</a>;", 
"", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#r_failed_dev\">r_failed_dev</a> = <a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_wait_ready - wait for link to become ready</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@link: link to be waited on</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@deadline: deadline jiffies for the operation</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@check_ready: callback to check link readiness</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Wait for @link to become ready.  @check_ready should return</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>positive number if @link is ready, 0 if it isn't, -ENODEV if</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>link doesn't seem to be occupied, other errno for other error</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>conditions.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Transient -ENODEV conditions are allowed for</span>", 
];
xr_frag_insert('l/65/47e568ae89e85c86a78f5475b962e35f1076b0.xr', __xr_tmp);
