var __xr_tmp = [
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ip_vs_drop_rate\">ip_vs_drop_rate</a>) return 0;", 
"<span class=\"ts\"/>if (--<a class=\"id\" href=\"#ip_vs_drop_counter\">ip_vs_drop_counter</a> &gt; 0) return 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip_vs_drop_counter\">ip_vs_drop_counter</a> = <a class=\"id\" href=\"#ip_vs_drop_rate\">ip_vs_drop_rate</a>;", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *      ip_vs_fwd_tag returns the forwarding tag of the connection</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IP_VS_FWD_METHOD\">IP_VS_FWD_METHOD</a>(<a class=\"id\" href=\"#cp\">cp</a>)  (<a class=\"id\" href=\"#cp\">cp</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IP_VS_CONN_F_FWD_MASK\">IP_VS_CONN_F_FWD_MASK</a>)", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> char <a class=\"id\" href=\"#ip_vs_fwd_tag\">ip_vs_fwd_tag</a>(struct <a class=\"id\" href=\"#ip_vs_conn\">ip_vs_conn</a> *<a class=\"id\" href=\"#cp\">cp</a>)", 
"{", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#fwd\">fwd</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#IP_VS_FWD_METHOD\">IP_VS_FWD_METHOD</a>(<a class=\"id\" href=\"#cp\">cp</a>)) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IP_VS_CONN_F_MASQ\">IP_VS_CONN_F_MASQ</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fwd\">fwd</a> = 'M'; break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IP_VS_CONN_F_LOCALNODE\">IP_VS_CONN_F_LOCALNODE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fwd\">fwd</a> = 'L'; break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IP_VS_CONN_F_TUNNEL\">IP_VS_CONN_F_TUNNEL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fwd\">fwd</a> = 'T'; break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IP_VS_CONN_F_DROUTE\">IP_VS_CONN_F_DROUTE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fwd\">fwd</a> = 'R'; break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IP_VS_CONN_F_BYPASS\">IP_VS_CONN_F_BYPASS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fwd\">fwd</a> = 'B'; break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fwd\">fwd</a> = '?'; break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#fwd\">fwd</a>;", 
"}", 
"", 
"extern void <a class=\"id\" href=\"#ip_vs_nat_icmp\">ip_vs_nat_icmp</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#ip_vs_protocol\">ip_vs_protocol</a> *<a class=\"id\" href=\"#pp\">pp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#ip_vs_conn\">ip_vs_conn</a> *<a class=\"id\" href=\"#cp\">cp</a>, int <a class=\"id\" href=\"#dir\">dir</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_VS_IPV6\">CONFIG_IP_VS_IPV6</a>", 
"extern void <a class=\"id\" href=\"#ip_vs_nat_icmp_v6\">ip_vs_nat_icmp_v6</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#ip_vs_protocol\">ip_vs_protocol</a> *<a class=\"id\" href=\"#pp\">pp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#ip_vs_conn\">ip_vs_conn</a> *<a class=\"id\" href=\"#cp\">cp</a>, int <a class=\"id\" href=\"#dir\">dir</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"extern <a class=\"id\" href=\"#__sum16\">__sum16</a> <a class=\"id\" href=\"#ip_vs_checksum_complete\">ip_vs_checksum_complete</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#offset\">offset</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#__wsum\">__wsum</a> <a class=\"id\" href=\"#ip_vs_check_diff4\">ip_vs_check_diff4</a>(<a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#old\">old</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#new\">new</a>, <a class=\"id\" href=\"#__wsum\">__wsum</a> <a class=\"id\" href=\"#oldsum\">oldsum</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#diff\">diff</a>[2] = { ~<a class=\"id\" href=\"#old\">old</a>, <a class=\"id\" href=\"#new\">new</a> };", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#csum_partial\">csum_partial</a>(<a class=\"id\" href=\"#diff\">diff</a>, sizeof(<a class=\"id\" href=\"#diff\">diff</a>), <a class=\"id\" href=\"#oldsum\">oldsum</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_VS_IPV6\">CONFIG_IP_VS_IPV6</a>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#__wsum\">__wsum</a> <a class=\"id\" href=\"#ip_vs_check_diff16\">ip_vs_check_diff16</a>(const <a class=\"id\" href=\"#__be32\">__be32</a> *<a class=\"id\" href=\"#old\">old</a>, const <a class=\"id\" href=\"#__be32\">__be32</a> *<a class=\"id\" href=\"#new\">new</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__wsum\">__wsum</a> <a class=\"id\" href=\"#oldsum\">oldsum</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#diff\">diff</a>[8] = { ~<a class=\"id\" href=\"#old\">old</a>[3], ~<a class=\"id\" href=\"#old\">old</a>[2], ~<a class=\"id\" href=\"#old\">old</a>[1], ~<a class=\"id\" href=\"#old\">old</a>[0],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#new\">new</a>[3],  <a class=\"id\" href=\"#new\">new</a>[2],  <a class=\"id\" href=\"#new\">new</a>[1],  <a class=\"id\" href=\"#new\">new</a>[0] };", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#csum_partial\">csum_partial</a>(<a class=\"id\" href=\"#diff\">diff</a>, sizeof(<a class=\"id\" href=\"#diff\">diff</a>), <a class=\"id\" href=\"#oldsum\">oldsum</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#__wsum\">__wsum</a> <a class=\"id\" href=\"#ip_vs_check_diff2\">ip_vs_check_diff2</a>(<a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#old\">old</a>, <a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#new\">new</a>, <a class=\"id\" href=\"#__wsum\">__wsum</a> <a class=\"id\" href=\"#oldsum\">oldsum</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#diff\">diff</a>[2] = { ~<a class=\"id\" href=\"#old\">old</a>, <a class=\"id\" href=\"#new\">new</a> };", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#csum_partial\">csum_partial</a>(<a class=\"id\" href=\"#diff\">diff</a>, sizeof(<a class=\"id\" href=\"#diff\">diff</a>), <a class=\"id\" href=\"#oldsum\">oldsum</a>);", 
"}", 
"", 
"extern void <a class=\"id\" href=\"#ip_vs_update_conntrack\">ip_vs_update_conntrack</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#ip_vs_conn\">ip_vs_conn</a> *<a class=\"id\" href=\"#cp\">cp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   int <a class=\"id\" href=\"#outin\">outin</a>);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __KERNEL__ */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* _NET_IP_VS_H */</span>", 
];
xr_frag_insert('l/66/d9aeca497caadca9576851d9c94901e24fd2e5.xr', __xr_tmp);
