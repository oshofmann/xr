var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>IPv6 fragment reassembly</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Linux INET6 implementation</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Authors:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Pedro Roque<span class=\"ts\"/><span class=\"ts\"/>&lt;roque@di.fc.ul.pt&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Based on: net/ipv4/ip_fragment.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *      modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *      as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *      2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Fixes:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Andi Kleen<span class=\"ts\"/>Make it work with multiple hosts.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>More RFC compliance.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *      Horst von Brand Add missing #include &lt;linux/string.h&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Alexey Kuznetsov<span class=\"ts\"/>SMP races, threading, cleanup.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Patrick McHardy<span class=\"ts\"/><span class=\"ts\"/>LRU queue of frag heads for evictor.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Mitsuru KANDA @USAGI<span class=\"ts\"/>Register inet6_protocol{}.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>David Stevens and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>YOSHIFUJI,H. @USAGI<span class=\"ts\"/>Always remove fragment header to</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>calculate ICV correctly.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sockios\">sockios</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jiffies\">jiffies</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netdevice\">netdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#in6\">in6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#icmpv6\">icmpv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#random\">random</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jhash\">jhash</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#skbuff\">skbuff</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#sock\">sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#snmp\">snmp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip6_route\">ip6_route</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#protocol\">protocol</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#transp_v6\">transp_v6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#rawv6\">rawv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ndisc\">ndisc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#addrconf\">addrconf</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#inet_frag\">inet_frag</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#ip6frag_skb_cb\">ip6frag_skb_cb</a>", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_skb_parm\">inet6_skb_parm</a><span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FRAG6_CB\">FRAG6_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)<span class=\"ts\"/>((struct <a class=\"id\" href=\"#ip6frag_skb_cb\">ip6frag_skb_cb</a>*)((<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#cb\">cb</a>))", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Equivalent of ipv4 struct ipq</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#frag_queue\">frag_queue</a>", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_frag_queue\">inet_frag_queue</a><span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fragment id<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#user\">user</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#saddr\">saddr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#daddr\">daddr</a>;", 
"", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iif\">iif</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#csum\">csum</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nhoffset\">nhoffset</a>;", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#inet_frags\">inet_frags</a> <a class=\"id\" href=\"#ip6_frags\">ip6_frags</a>;", 
"", 
"int <a class=\"id\" href=\"#ip6_frag_nqueues\">ip6_frag_nqueues</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#frags\">frags</a>.<a class=\"id\" href=\"#nqueues\">nqueues</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#ip6_frag_mem\">ip6_frag_mem</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#frags\">frags</a>.<a class=\"id\" href=\"#mem\">mem</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ip6_frag_reasm\">ip6_frag_reasm</a>(struct <a class=\"id\" href=\"#frag_queue\">frag_queue</a> *<a class=\"id\" href=\"#fq\">fq</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#prev\">prev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * callers should be careful not to use the hash value outside the ipfrag_lock</span>", 
"<span class=\"comment\"> * as doing so could race with ipfrag_hash_rnd being recalculated.</span>", 
"<span class=\"comment\"> */</span>", 
"unsigned int <a class=\"id\" href=\"#inet6_hash_frag\">inet6_hash_frag</a>(<a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#id\">id</a>, const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#saddr\">saddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#rnd\">rnd</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#a\">a</a>, <a class=\"id\" href=\"#b\">b</a>, <a class=\"id\" href=\"#c\">c</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a> = (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#saddr\">saddr</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[0];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#b\">b</a> = (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#saddr\">saddr</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[1];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#saddr\">saddr</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[2];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a> += <a class=\"id\" href=\"#JHASH_GOLDEN_RATIO\">JHASH_GOLDEN_RATIO</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#b\">b</a> += <a class=\"id\" href=\"#JHASH_GOLDEN_RATIO\">JHASH_GOLDEN_RATIO</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> += <a class=\"id\" href=\"#rnd\">rnd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__jhash_mix\">__jhash_mix</a>(<a class=\"id\" href=\"#a\">a</a>, <a class=\"id\" href=\"#b\">b</a>, <a class=\"id\" href=\"#c\">c</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a> += (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#saddr\">saddr</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[3];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#b\">b</a> += (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#daddr\">daddr</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[0];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> += (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#daddr\">daddr</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[1];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__jhash_mix\">__jhash_mix</a>(<a class=\"id\" href=\"#a\">a</a>, <a class=\"id\" href=\"#b\">b</a>, <a class=\"id\" href=\"#c\">c</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a> += (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#daddr\">daddr</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[2];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#b\">b</a> += (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#daddr\">daddr</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[3];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> += (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__jhash_mix\">__jhash_mix</a>(<a class=\"id\" href=\"#a\">a</a>, <a class=\"id\" href=\"#b\">b</a>, <a class=\"id\" href=\"#c\">c</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#c\">c</a> &amp; (<a class=\"id\" href=\"#INETFRAGS_HASHSZ\">INETFRAGS_HASHSZ</a> - 1);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#inet6_hash_frag\">inet6_hash_frag</a>);", 
"", 
"static unsigned int <a class=\"id\" href=\"#ip6_hashfn\">ip6_hashfn</a>(struct <a class=\"id\" href=\"#inet_frag_queue\">inet_frag_queue</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#frag_queue\">frag_queue</a> *<a class=\"id\" href=\"#fq\">fq</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fq\">fq</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#frag_queue\">frag_queue</a>, <a class=\"id\" href=\"#q\">q</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#inet6_hash_frag\">inet6_hash_frag</a>(<a class=\"id\" href=\"#fq\">fq</a>-><a class=\"id\" href=\"#id\">id</a>, &amp;<a class=\"id\" href=\"#fq\">fq</a>-><a class=\"id\" href=\"#saddr\">saddr</a>, &amp;<a class=\"id\" href=\"#fq\">fq</a>-><a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#ip6_frags\">ip6_frags</a>.<a class=\"id\" href=\"#rnd\">rnd</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#ip6_frag_match\">ip6_frag_match</a>(struct <a class=\"id\" href=\"#inet_frag_queue\">inet_frag_queue</a> *<a class=\"id\" href=\"#q\">q</a>, void *<a class=\"id\" href=\"#a\">a</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#frag_queue\">frag_queue</a> *<a class=\"id\" href=\"#fq\">fq</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip6_create_arg\">ip6_create_arg</a> *<a class=\"id\" href=\"#arg\">arg</a> = <a class=\"id\" href=\"#a\">a</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fq\">fq</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#frag_queue\">frag_queue</a>, <a class=\"id\" href=\"#q\">q</a>);", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#fq\">fq</a>-><a class=\"id\" href=\"#id\">id</a> == <a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#id\">id</a> && <a class=\"id\" href=\"#fq\">fq</a>-><a class=\"id\" href=\"#user\">user</a> == <a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#user\">user</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(&amp;<a class=\"id\" href=\"#fq\">fq</a>-><a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#src\">src</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(&amp;<a class=\"id\" href=\"#fq\">fq</a>-><a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#dst\">dst</a>));", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#ip6_frag_match\">ip6_frag_match</a>);", 
"", 
"void <a class=\"id\" href=\"#ip6_frag_init\">ip6_frag_init</a>(struct <a class=\"id\" href=\"#inet_frag_queue\">inet_frag_queue</a> *<a class=\"id\" href=\"#q\">q</a>, void *<a class=\"id\" href=\"#a\">a</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#frag_queue\">frag_queue</a> *<a class=\"id\" href=\"#fq\">fq</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#frag_queue\">frag_queue</a>, <a class=\"id\" href=\"#q\">q</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip6_create_arg\">ip6_create_arg</a> *<a class=\"id\" href=\"#arg\">arg</a> = <a class=\"id\" href=\"#a\">a</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fq\">fq</a>-><a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fq\">fq</a>-><a class=\"id\" href=\"#user\">user</a> = <a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#user\">user</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#fq\">fq</a>-><a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#src\">src</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#fq\">fq</a>-><a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#dst\">dst</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#ip6_frag_init\">ip6_frag_init</a>);", 
"", 
"<span class=\"comment\">/* Destruction primitives. */</span>", 
"", 
"static <a class=\"id\" href=\"#__inline__\">__inline__</a> void <a class=\"id\" href=\"#fq_put\">fq_put</a>(struct <a class=\"id\" href=\"#frag_queue\">frag_queue</a> *<a class=\"id\" href=\"#fq\">fq</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet_frag_put\">inet_frag_put</a>(&amp;<a class=\"id\" href=\"#fq\">fq</a>-><a class=\"id\" href=\"#q\">q</a>, &amp;<a class=\"id\" href=\"#ip6_frags\">ip6_frags</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Kill fq entry. It is not destroyed immediately,</span>", 
"<span class=\"comment\"> * because caller (and someone more) holds reference count.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#__inline__\">__inline__</a> void <a class=\"id\" href=\"#fq_kill\">fq_kill</a>(struct <a class=\"id\" href=\"#frag_queue\">frag_queue</a> *<a class=\"id\" href=\"#fq\">fq</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet_frag_kill\">inet_frag_kill</a>(&amp;<a class=\"id\" href=\"#fq\">fq</a>-><a class=\"id\" href=\"#q\">q</a>, &amp;<a class=\"id\" href=\"#ip6_frags\">ip6_frags</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ip6_evictor\">ip6_evictor</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#evicted\">evicted</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evicted\">evicted</a> = <a class=\"id\" href=\"#inet_frag_evictor\">inet_frag_evictor</a>(&amp;<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#frags\">frags</a>, &amp;<a class=\"id\" href=\"#ip6_frags\">ip6_frags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#evicted\">evicted</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_ADD_STATS_BH\">IP6_ADD_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#IPSTATS_MIB_REASMFAILS\">IPSTATS_MIB_REASMFAILS</a>, <a class=\"id\" href=\"#evicted\">evicted</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ip6_frag_expire\">ip6_frag_expire</a>(unsigned long <a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#frag_queue\">frag_queue</a> *<a class=\"id\" href=\"#fq\">fq</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fq\">fq</a> = <a class=\"id\" href=\"#container_of\">container_of</a>((struct <a class=\"id\" href=\"#inet_frag_queue\">inet_frag_queue</a> *)<a class=\"id\" href=\"#data\">data</a>, struct <a class=\"id\" href=\"#frag_queue\">frag_queue</a>, <a class=\"id\" href=\"#q\">q</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#fq\">fq</a>-><a class=\"id\" href=\"#q\">q</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fq\">fq</a>-><a class=\"id\" href=\"#q\">q</a>.<a class=\"id\" href=\"#last_in\">last_in</a> &amp; <a class=\"id\" href=\"#INET_FRAG_COMPLETE\">INET_FRAG_COMPLETE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fq_kill\">fq_kill</a>(<a class=\"id\" href=\"#fq\">fq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#fq\">fq</a>-><a class=\"id\" href=\"#q\">q</a>.<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#frags\">frags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev_get_by_index_rcu\">dev_get_by_index_rcu</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#fq\">fq</a>-><a class=\"id\" href=\"#iif\">iif</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_rcu_unlock\">out_rcu_unlock</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS_BH\">IP6_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#__in6_dev_get\">__in6_dev_get</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#IPSTATS_MIB_REASMTIMEOUT\">IPSTATS_MIB_REASMTIMEOUT</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS_BH\">IP6_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#__in6_dev_get\">__in6_dev_get</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#IPSTATS_MIB_REASMFAILS\">IPSTATS_MIB_REASMFAILS</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Don't send error if the first segment did not arrive. */</span>", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#fq\">fq</a>-><a class=\"id\" href=\"#q\">q</a>.<a class=\"id\" href=\"#last_in\">last_in</a> &amp; <a class=\"id\" href=\"#INET_FRAG_FIRST_IN\">INET_FRAG_FIRST_IN</a>) || !<a class=\"id\" href=\"#fq\">fq</a>-><a class=\"id\" href=\"#q\">q</a>.<a class=\"id\" href=\"#fragments\">fragments</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_rcu_unlock\">out_rcu_unlock</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   But use as source device on which LAST ARRIVED</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   segment was received. And do not use fq-&gt;dev</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   pointer directly, device might already disappeared.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fq\">fq</a>-><a class=\"id\" href=\"#q\">q</a>.<a class=\"id\" href=\"#fragments\">fragments</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icmpv6_send\">icmpv6_send</a>(<a class=\"id\" href=\"#fq\">fq</a>-><a class=\"id\" href=\"#q\">q</a>.<a class=\"id\" href=\"#fragments\">fragments</a>, <a class=\"id\" href=\"#ICMPV6_TIME_EXCEED\">ICMPV6_TIME_EXCEED</a>, <a class=\"id\" href=\"#ICMPV6_EXC_FRAGTIME\">ICMPV6_EXC_FRAGTIME</a>, 0);", 
"<a class=\"id\" href=\"#out_rcu_unlock\">out_rcu_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#fq\">fq</a>-><a class=\"id\" href=\"#q\">q</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fq_put\">fq_put</a>(<a class=\"id\" href=\"#fq\">fq</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#__inline__\">__inline__</a> struct <a class=\"id\" href=\"#frag_queue\">frag_queue</a> *", 
"<a class=\"id\" href=\"#fq_find\">fq_find</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#id\">id</a>, struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#src\">src</a>, struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#dst\">dst</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_frag_queue\">inet_frag_queue</a> *<a class=\"id\" href=\"#q\">q</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip6_create_arg\">ip6_create_arg</a> <a class=\"id\" href=\"#arg\">arg</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#hash\">hash</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a>.<a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a>.<a class=\"id\" href=\"#user\">user</a> = <a class=\"id\" href=\"#IP6_DEFRAG_LOCAL_DELIVER\">IP6_DEFRAG_LOCAL_DELIVER</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a>.<a class=\"id\" href=\"#src\">src</a> = <a class=\"id\" href=\"#src\">src</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a>.<a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#dst\">dst</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#ip6_frags\">ip6_frags</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#inet6_hash_frag\">inet6_hash_frag</a>(<a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#src\">src</a>, <a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#ip6_frags\">ip6_frags</a>.<a class=\"id\" href=\"#rnd\">rnd</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a> = <a class=\"id\" href=\"#inet_frag_find\">inet_frag_find</a>(&amp;<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#frags\">frags</a>, &amp;<a class=\"id\" href=\"#ip6_frags\">ip6_frags</a>, &amp;<a class=\"id\" href=\"#arg\">arg</a>, <a class=\"id\" href=\"#hash\">hash</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#q\">q</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#frag_queue\">frag_queue</a>, <a class=\"id\" href=\"#q\">q</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ip6_frag_queue\">ip6_frag_queue</a>(struct <a class=\"id\" href=\"#frag_queue\">frag_queue</a> *<a class=\"id\" href=\"#fq\">fq</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#frag_hdr\">frag_hdr</a> *<a class=\"id\" href=\"#fhdr\">fhdr</a>, int <a class=\"id\" href=\"#nhoff\">nhoff</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#prev\">prev</a>, *<a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fq\">fq</a>-><a class=\"id\" href=\"#q\">q</a>.<a class=\"id\" href=\"#last_in\">last_in</a> &amp; <a class=\"id\" href=\"#INET_FRAG_COMPLETE\">INET_FRAG_COMPLETE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#fhdr\">fhdr</a>-><a class=\"id\" href=\"#frag_off\">frag_off</a>) &amp; ~0x7;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#offset\">offset</a> + (<a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#payload_len\">payload_len</a>) -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#u8\">u8</a> *)(<a class=\"id\" href=\"#fhdr\">fhdr</a> + 1) - (<a class=\"id\" href=\"#u8\">u8</a> *)(<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>) + 1)));", 
"", 
"<span class=\"ts\"/>if ((unsigned int)<a class=\"id\" href=\"#end\">end</a> &gt; <a class=\"id\" href=\"#IPV6_MAXPLEN\">IPV6_MAXPLEN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS_BH\">IP6_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#IPSTATS_MIB_INHDRERRORS\">IPSTATS_MIB_INHDRERRORS</a>);", 
];
xr_frag_insert('l/67/4047645173214841dc24a30024d5f0faf8e162.xr', __xr_tmp);
