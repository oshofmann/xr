var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#crypto_instance\">crypto_instance</a> *<a class=\"id\" href=\"#inst\">inst</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spawn\">spawn</a>-><a class=\"id\" href=\"#inst\">inst</a> = <a class=\"id\" href=\"#inst\">inst</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spawn\">spawn</a>-><a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#mask\">mask</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#crypto_alg_sem\">crypto_alg_sem</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#crypto_is_moribund\">crypto_is_moribund</a>(<a class=\"id\" href=\"#alg\">alg</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#spawn\">spawn</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#alg\">alg</a>-><a class=\"id\" href=\"#cra_users\">cra_users</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spawn\">spawn</a>-><a class=\"id\" href=\"#alg\">alg</a> = <a class=\"id\" href=\"#alg\">alg</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#crypto_alg_sem\">crypto_alg_sem</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#crypto_init_spawn\">crypto_init_spawn</a>);", 
"", 
"int <a class=\"id\" href=\"#crypto_init_spawn2\">crypto_init_spawn2</a>(struct <a class=\"id\" href=\"#crypto_spawn\">crypto_spawn</a> *<a class=\"id\" href=\"#spawn\">spawn</a>, struct <a class=\"id\" href=\"#crypto_alg\">crypto_alg</a> *<a class=\"id\" href=\"#alg\">alg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#crypto_instance\">crypto_instance</a> *<a class=\"id\" href=\"#inst\">inst</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       const struct <a class=\"id\" href=\"#crypto_type\">crypto_type</a> *<a class=\"id\" href=\"#frontend\">frontend</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#alg\">alg</a>-><a class=\"id\" href=\"#cra_flags\">cra_flags</a> ^ <a class=\"id\" href=\"#frontend\">frontend</a>-><a class=\"id\" href=\"#type\">type</a>) &amp; <a class=\"id\" href=\"#frontend\">frontend</a>-><a class=\"id\" href=\"#maskset\">maskset</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spawn\">spawn</a>-><a class=\"id\" href=\"#frontend\">frontend</a> = <a class=\"id\" href=\"#frontend\">frontend</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#crypto_init_spawn\">crypto_init_spawn</a>(<a class=\"id\" href=\"#spawn\">spawn</a>, <a class=\"id\" href=\"#alg\">alg</a>, <a class=\"id\" href=\"#inst\">inst</a>, <a class=\"id\" href=\"#frontend\">frontend</a>-><a class=\"id\" href=\"#maskset\">maskset</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#crypto_init_spawn2\">crypto_init_spawn2</a>);", 
"", 
"void <a class=\"id\" href=\"#crypto_drop_spawn\">crypto_drop_spawn</a>(struct <a class=\"id\" href=\"#crypto_spawn\">crypto_spawn</a> *<a class=\"id\" href=\"#spawn\">spawn</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#spawn\">spawn</a>-><a class=\"id\" href=\"#alg\">alg</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#crypto_alg_sem\">crypto_alg_sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#spawn\">spawn</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#crypto_alg_sem\">crypto_alg_sem</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#crypto_drop_spawn\">crypto_drop_spawn</a>);", 
"", 
"static struct <a class=\"id\" href=\"#crypto_alg\">crypto_alg</a> *<a class=\"id\" href=\"#crypto_spawn_alg\">crypto_spawn_alg</a>(struct <a class=\"id\" href=\"#crypto_spawn\">crypto_spawn</a> *<a class=\"id\" href=\"#spawn\">spawn</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_alg\">crypto_alg</a> *<a class=\"id\" href=\"#alg\">alg</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_alg\">crypto_alg</a> *<a class=\"id\" href=\"#alg2\">alg2</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#crypto_alg_sem\">crypto_alg_sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#alg\">alg</a> = <a class=\"id\" href=\"#spawn\">spawn</a>-><a class=\"id\" href=\"#alg\">alg</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#alg2\">alg2</a> = <a class=\"id\" href=\"#alg\">alg</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#alg2\">alg2</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alg2\">alg2</a> = <a class=\"id\" href=\"#crypto_mod_get\">crypto_mod_get</a>(<a class=\"id\" href=\"#alg2\">alg2</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#crypto_alg_sem\">crypto_alg_sem</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#alg2\">alg2</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#alg\">alg</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_shoot_alg\">crypto_shoot_alg</a>(<a class=\"id\" href=\"#alg\">alg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#alg\">alg</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#crypto_spawn_tfm\">crypto_spawn_tfm</a>(struct <a class=\"id\" href=\"#crypto_spawn\">crypto_spawn</a> *<a class=\"id\" href=\"#spawn\">spawn</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_alg\">crypto_alg</a> *<a class=\"id\" href=\"#alg\">alg</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#alg\">alg</a> = <a class=\"id\" href=\"#crypto_spawn_alg\">crypto_spawn_alg</a>(<a class=\"id\" href=\"#spawn\">spawn</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#alg\">alg</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_CAST\">ERR_CAST</a>(<a class=\"id\" href=\"#alg\">alg</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tfm\">tfm</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EINVAL\">EINVAL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>((<a class=\"id\" href=\"#alg\">alg</a>-><a class=\"id\" href=\"#cra_flags\">cra_flags</a> ^ <a class=\"id\" href=\"#type\">type</a>) &amp; <a class=\"id\" href=\"#mask\">mask</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_put_alg\">out_put_alg</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tfm\">tfm</a> = <a class=\"id\" href=\"#__crypto_alloc_tfm\">__crypto_alloc_tfm</a>(<a class=\"id\" href=\"#alg\">alg</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#tfm\">tfm</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_put_alg\">out_put_alg</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tfm\">tfm</a>;", 
"", 
"<a class=\"id\" href=\"#out_put_alg\">out_put_alg</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crypto_mod_put\">crypto_mod_put</a>(<a class=\"id\" href=\"#alg\">alg</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tfm\">tfm</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#crypto_spawn_tfm\">crypto_spawn_tfm</a>);", 
"", 
"void *<a class=\"id\" href=\"#crypto_spawn_tfm2\">crypto_spawn_tfm2</a>(struct <a class=\"id\" href=\"#crypto_spawn\">crypto_spawn</a> *<a class=\"id\" href=\"#spawn\">spawn</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_alg\">crypto_alg</a> *<a class=\"id\" href=\"#alg\">alg</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#alg\">alg</a> = <a class=\"id\" href=\"#crypto_spawn_alg\">crypto_spawn_alg</a>(<a class=\"id\" href=\"#spawn\">spawn</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#alg\">alg</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_CAST\">ERR_CAST</a>(<a class=\"id\" href=\"#alg\">alg</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tfm\">tfm</a> = <a class=\"id\" href=\"#crypto_create_tfm\">crypto_create_tfm</a>(<a class=\"id\" href=\"#alg\">alg</a>, <a class=\"id\" href=\"#spawn\">spawn</a>-><a class=\"id\" href=\"#frontend\">frontend</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#tfm\">tfm</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_put_alg\">out_put_alg</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tfm\">tfm</a>;", 
"", 
"<a class=\"id\" href=\"#out_put_alg\">out_put_alg</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crypto_mod_put\">crypto_mod_put</a>(<a class=\"id\" href=\"#alg\">alg</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tfm\">tfm</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#crypto_spawn_tfm2\">crypto_spawn_tfm2</a>);", 
"", 
"int <a class=\"id\" href=\"#crypto_register_notifier\">crypto_register_notifier</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nb\">nb</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#blocking_notifier_chain_register\">blocking_notifier_chain_register</a>(&amp;<a class=\"id\" href=\"#crypto_chain\">crypto_chain</a>, <a class=\"id\" href=\"#nb\">nb</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#crypto_register_notifier\">crypto_register_notifier</a>);", 
"", 
"int <a class=\"id\" href=\"#crypto_unregister_notifier\">crypto_unregister_notifier</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nb\">nb</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#blocking_notifier_chain_unregister\">blocking_notifier_chain_unregister</a>(&amp;<a class=\"id\" href=\"#crypto_chain\">crypto_chain</a>, <a class=\"id\" href=\"#nb\">nb</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#crypto_unregister_notifier\">crypto_unregister_notifier</a>);", 
"", 
"struct <a class=\"id\" href=\"#crypto_attr_type\">crypto_attr_type</a> *<a class=\"id\" href=\"#crypto_get_attr_type\">crypto_get_attr_type</a>(struct <a class=\"id\" href=\"#rtattr\">rtattr</a> **<a class=\"id\" href=\"#tb\">tb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtattr\">rtattr</a> *<a class=\"id\" href=\"#rta\">rta</a> = <a class=\"id\" href=\"#tb\">tb</a>[0];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_attr_type\">crypto_attr_type</a> *<a class=\"id\" href=\"#algt\">algt</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rta\">rta</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOENT\">ENOENT</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#RTA_PAYLOAD\">RTA_PAYLOAD</a>(<a class=\"id\" href=\"#rta\">rta</a>) &lt; sizeof(*<a class=\"id\" href=\"#algt\">algt</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EINVAL\">EINVAL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rta\">rta</a>-><a class=\"id\" href=\"#rta_type\">rta_type</a> != <a class=\"id\" href=\"#CRYPTOA_TYPE\">CRYPTOA_TYPE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EINVAL\">EINVAL</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#algt\">algt</a> = <a class=\"id\" href=\"#RTA_DATA\">RTA_DATA</a>(<a class=\"id\" href=\"#rta\">rta</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#algt\">algt</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#crypto_get_attr_type\">crypto_get_attr_type</a>);", 
"", 
"int <a class=\"id\" href=\"#crypto_check_attr_type\">crypto_check_attr_type</a>(struct <a class=\"id\" href=\"#rtattr\">rtattr</a> **<a class=\"id\" href=\"#tb\">tb</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_attr_type\">crypto_attr_type</a> *<a class=\"id\" href=\"#algt\">algt</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#algt\">algt</a> = <a class=\"id\" href=\"#crypto_get_attr_type\">crypto_get_attr_type</a>(<a class=\"id\" href=\"#tb\">tb</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#algt\">algt</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#algt\">algt</a>);", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#algt\">algt</a>-><a class=\"id\" href=\"#type\">type</a> ^ <a class=\"id\" href=\"#type\">type</a>) &amp; <a class=\"id\" href=\"#algt\">algt</a>-><a class=\"id\" href=\"#mask\">mask</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#crypto_check_attr_type\">crypto_check_attr_type</a>);", 
"", 
"const char *<a class=\"id\" href=\"#crypto_attr_alg_name\">crypto_attr_alg_name</a>(struct <a class=\"id\" href=\"#rtattr\">rtattr</a> *<a class=\"id\" href=\"#rta\">rta</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_attr_alg\">crypto_attr_alg</a> *<a class=\"id\" href=\"#alga\">alga</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rta\">rta</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOENT\">ENOENT</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#RTA_PAYLOAD\">RTA_PAYLOAD</a>(<a class=\"id\" href=\"#rta\">rta</a>) &lt; sizeof(*<a class=\"id\" href=\"#alga\">alga</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EINVAL\">EINVAL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rta\">rta</a>-><a class=\"id\" href=\"#rta_type\">rta_type</a> != <a class=\"id\" href=\"#CRYPTOA_ALG\">CRYPTOA_ALG</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EINVAL\">EINVAL</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#alga\">alga</a> = <a class=\"id\" href=\"#RTA_DATA\">RTA_DATA</a>(<a class=\"id\" href=\"#rta\">rta</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#alga\">alga</a>-><a class=\"id\" href=\"#name\">name</a>[<a class=\"id\" href=\"#CRYPTO_MAX_ALG_NAME\">CRYPTO_MAX_ALG_NAME</a> - 1] = 0;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#alga\">alga</a>-><a class=\"id\" href=\"#name\">name</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#crypto_attr_alg_name\">crypto_attr_alg_name</a>);", 
"", 
"struct <a class=\"id\" href=\"#crypto_alg\">crypto_alg</a> *<a class=\"id\" href=\"#crypto_attr_alg2\">crypto_attr_alg2</a>(struct <a class=\"id\" href=\"#rtattr\">rtattr</a> *<a class=\"id\" href=\"#rta\">rta</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const struct <a class=\"id\" href=\"#crypto_type\">crypto_type</a> *<a class=\"id\" href=\"#frontend\">frontend</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#crypto_attr_alg_name\">crypto_attr_alg_name</a>(<a class=\"id\" href=\"#rta\">rta</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#name\">name</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_find_alg\">crypto_find_alg</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#frontend\">frontend</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#mask\">mask</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#crypto_attr_alg2\">crypto_attr_alg2</a>);", 
"", 
"int <a class=\"id\" href=\"#crypto_attr_u32\">crypto_attr_u32</a>(struct <a class=\"id\" href=\"#rtattr\">rtattr</a> *<a class=\"id\" href=\"#rta\">rta</a>, <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#num\">num</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_attr_u32\">crypto_attr_u32</a> *<a class=\"id\" href=\"#nu32\">nu32</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rta\">rta</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#RTA_PAYLOAD\">RTA_PAYLOAD</a>(<a class=\"id\" href=\"#rta\">rta</a>) &lt; sizeof(*<a class=\"id\" href=\"#nu32\">nu32</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rta\">rta</a>-><a class=\"id\" href=\"#rta_type\">rta_type</a> != <a class=\"id\" href=\"#CRYPTOA_U32\">CRYPTOA_U32</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nu32\">nu32</a> = <a class=\"id\" href=\"#RTA_DATA\">RTA_DATA</a>(<a class=\"id\" href=\"#rta\">rta</a>);", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#num\">num</a> = <a class=\"id\" href=\"#nu32\">nu32</a>-><a class=\"id\" href=\"#num\">num</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#crypto_attr_u32\">crypto_attr_u32</a>);", 
"", 
"void *<a class=\"id\" href=\"#crypto_alloc_instance2\">crypto_alloc_instance2</a>(const char *<a class=\"id\" href=\"#name\">name</a>, struct <a class=\"id\" href=\"#crypto_alg\">crypto_alg</a> *<a class=\"id\" href=\"#alg\">alg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned int <a class=\"id\" href=\"#head\">head</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_instance\">crypto_instance</a> *<a class=\"id\" href=\"#inst\">inst</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(<a class=\"id\" href=\"#head\">head</a> + sizeof(*<a class=\"id\" href=\"#inst\">inst</a>) + sizeof(struct <a class=\"id\" href=\"#crypto_spawn\">crypto_spawn</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inst\">inst</a> = (void *)(<a class=\"id\" href=\"#p\">p</a> + <a class=\"id\" href=\"#head\">head</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENAMETOOLONG\">ENAMETOOLONG</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#inst\">inst</a>-><a class=\"id\" href=\"#alg\">alg</a>.<a class=\"id\" href=\"#cra_name\">cra_name</a>, <a class=\"id\" href=\"#CRYPTO_MAX_ALG_NAME\">CRYPTO_MAX_ALG_NAME</a>, \"%s(%s)\", <a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#alg\">alg</a>-><a class=\"id\" href=\"#cra_name\">cra_name</a>) >= <a class=\"id\" href=\"#CRYPTO_MAX_ALG_NAME\">CRYPTO_MAX_ALG_NAME</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_free_inst\">err_free_inst</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#inst\">inst</a>-><a class=\"id\" href=\"#alg\">alg</a>.<a class=\"id\" href=\"#cra_driver_name\">cra_driver_name</a>, <a class=\"id\" href=\"#CRYPTO_MAX_ALG_NAME\">CRYPTO_MAX_ALG_NAME</a>, \"%s(%s)\",", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#alg\">alg</a>-><a class=\"id\" href=\"#cra_driver_name\">cra_driver_name</a>) >= <a class=\"id\" href=\"#CRYPTO_MAX_ALG_NAME\">CRYPTO_MAX_ALG_NAME</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_free_inst\">err_free_inst</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<a class=\"id\" href=\"#err_free_inst\">err_free_inst</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#crypto_alloc_instance2\">crypto_alloc_instance2</a>);", 
"", 
"struct <a class=\"id\" href=\"#crypto_instance\">crypto_instance</a> *<a class=\"id\" href=\"#crypto_alloc_instance\">crypto_alloc_instance</a>(const char *<a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#crypto_alg\">crypto_alg</a> *<a class=\"id\" href=\"#alg\">alg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_instance\">crypto_instance</a> *<a class=\"id\" href=\"#inst\">inst</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_spawn\">crypto_spawn</a> *<a class=\"id\" href=\"#spawn\">spawn</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inst\">inst</a> = <a class=\"id\" href=\"#crypto_alloc_instance2\">crypto_alloc_instance2</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#alg\">alg</a>, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#inst\">inst</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spawn\">spawn</a> = <a class=\"id\" href=\"#crypto_instance_ctx\">crypto_instance_ctx</a>(<a class=\"id\" href=\"#inst\">inst</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#crypto_init_spawn\">crypto_init_spawn</a>(<a class=\"id\" href=\"#spawn\">spawn</a>, <a class=\"id\" href=\"#alg\">alg</a>, <a class=\"id\" href=\"#inst\">inst</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#CRYPTO_ALG_TYPE_MASK\">CRYPTO_ALG_TYPE_MASK</a> | <a class=\"id\" href=\"#CRYPTO_ALG_ASYNC\">CRYPTO_ALG_ASYNC</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_free_inst\">err_free_inst</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#inst\">inst</a>;", 
"", 
"<a class=\"id\" href=\"#err_free_inst\">err_free_inst</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#inst\">inst</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inst\">inst</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#inst\">inst</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#crypto_alloc_instance\">crypto_alloc_instance</a>);", 
"", 
"void <a class=\"id\" href=\"#crypto_init_queue\">crypto_init_queue</a>(struct <a class=\"id\" href=\"#crypto_queue\">crypto_queue</a> *<a class=\"id\" href=\"#queue\">queue</a>, unsigned int <a class=\"id\" href=\"#max_qlen\">max_qlen</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#backlog\">backlog</a> = &amp;<a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#qlen\">qlen</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#max_qlen\">max_qlen</a> = <a class=\"id\" href=\"#max_qlen\">max_qlen</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#crypto_init_queue\">crypto_init_queue</a>);", 
"", 
"int <a class=\"id\" href=\"#crypto_enqueue_request\">crypto_enqueue_request</a>(struct <a class=\"id\" href=\"#crypto_queue\">crypto_queue</a> *<a class=\"id\" href=\"#queue\">queue</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#crypto_async_request\">crypto_async_request</a> *<a class=\"id\" href=\"#request\">request</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINPROGRESS\">EINPROGRESS</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#qlen\">qlen</a> >= <a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#max_qlen\">max_qlen</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#request\">request</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#CRYPTO_TFM_REQ_MAY_BACKLOG\">CRYPTO_TFM_REQ_MAY_BACKLOG</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#backlog\">backlog</a> == &amp;<a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#list\">list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#backlog\">backlog</a> = &amp;<a class=\"id\" href=\"#request\">request</a>-><a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#qlen\">qlen</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#request\">request</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#crypto_enqueue_request\">crypto_enqueue_request</a>);", 
"", 
"void *<a class=\"id\" href=\"#__crypto_dequeue_request\">__crypto_dequeue_request</a>(struct <a class=\"id\" href=\"#crypto_queue\">crypto_queue</a> *<a class=\"id\" href=\"#queue\">queue</a>, unsigned int <a class=\"id\" href=\"#offset\">offset</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#request\">request</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#qlen\">qlen</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#qlen\">qlen</a>--;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#backlog\">backlog</a> != &amp;<a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#list\">list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#backlog\">backlog</a> = <a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#backlog\">backlog</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#request\">request</a> = <a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(<a class=\"id\" href=\"#request\">request</a>);", 
"", 
"<span class=\"ts\"/>return (char *)<a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#request\">request</a>, struct <a class=\"id\" href=\"#crypto_async_request\">crypto_async_request</a>, <a class=\"id\" href=\"#list\">list</a>) -", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#offset\">offset</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#__crypto_dequeue_request\">__crypto_dequeue_request</a>);", 
"", 
"struct <a class=\"id\" href=\"#crypto_async_request\">crypto_async_request</a> *<a class=\"id\" href=\"#crypto_dequeue_request\">crypto_dequeue_request</a>(struct <a class=\"id\" href=\"#crypto_queue\">crypto_queue</a> *<a class=\"id\" href=\"#queue\">queue</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__crypto_dequeue_request\">__crypto_dequeue_request</a>(<a class=\"id\" href=\"#queue\">queue</a>, 0);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#crypto_dequeue_request\">crypto_dequeue_request</a>);", 
"", 
"int <a class=\"id\" href=\"#crypto_tfm_in_queue\">crypto_tfm_in_queue</a>(struct <a class=\"id\" href=\"#crypto_queue\">crypto_queue</a> *<a class=\"id\" href=\"#queue\">queue</a>, struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_async_request\">crypto_async_request</a> *<a class=\"id\" href=\"#req\">req</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#req\">req</a>, &amp;<a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#tfm\">tfm</a> == <a class=\"id\" href=\"#tfm\">tfm</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#crypto_tfm_in_queue\">crypto_tfm_in_queue</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#crypto_inc_byte\">crypto_inc_byte</a>(<a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#a\">a</a>, unsigned int <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#b\">b</a> = (<a class=\"id\" href=\"#a\">a</a> + <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#c\">c</a>;", 
"", 
"<span class=\"ts\"/>for (; <a class=\"id\" href=\"#size\">size</a>; <a class=\"id\" href=\"#size\">size</a>--) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = *--<a class=\"id\" href=\"#b\">b</a> + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#b\">b</a> = <a class=\"id\" href=\"#c\">c</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"void <a class=\"id\" href=\"#crypto_inc\">crypto_inc</a>(<a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#a\">a</a>, unsigned int <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> *<a class=\"id\" href=\"#b\">b</a> = (<a class=\"id\" href=\"#__be32\">__be32</a> *)(<a class=\"id\" href=\"#a\">a</a> + <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#c\">c</a>;", 
"", 
"<span class=\"ts\"/>for (; <a class=\"id\" href=\"#size\">size</a> >= 4; <a class=\"id\" href=\"#size\">size</a> -= 4) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(*--<a class=\"id\" href=\"#b\">b</a>) + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#b\">b</a> = <a class=\"id\" href=\"#cpu_to_be32\">cpu_to_be32</a>(<a class=\"id\" href=\"#c\">c</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crypto_inc_byte\">crypto_inc_byte</a>(<a class=\"id\" href=\"#a\">a</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#crypto_inc\">crypto_inc</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#crypto_xor_byte\">crypto_xor_byte</a>(<a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#a\">a</a>, const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#b\">b</a>, unsigned int <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/>for (; <a class=\"id\" href=\"#size\">size</a>; <a class=\"id\" href=\"#size\">size</a>--)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#a\">a</a>++ ^= *<a class=\"id\" href=\"#b\">b</a>++;", 
"}", 
"", 
"void <a class=\"id\" href=\"#crypto_xor\">crypto_xor</a>(<a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#dst\">dst</a>, const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#src\">src</a>, unsigned int <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#a\">a</a> = (<a class=\"id\" href=\"#u32\">u32</a> *)<a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#b\">b</a> = (<a class=\"id\" href=\"#u32\">u32</a> *)<a class=\"id\" href=\"#src\">src</a>;", 
"", 
"<span class=\"ts\"/>for (; <a class=\"id\" href=\"#size\">size</a> >= 4; <a class=\"id\" href=\"#size\">size</a> -= 4)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#a\">a</a>++ ^= *<a class=\"id\" href=\"#b\">b</a>++;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crypto_xor_byte\">crypto_xor_byte</a>((<a class=\"id\" href=\"#u8\">u8</a> *)<a class=\"id\" href=\"#a\">a</a>, (<a class=\"id\" href=\"#u8\">u8</a> *)<a class=\"id\" href=\"#b\">b</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#crypto_xor\">crypto_xor</a>);", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#crypto_algapi_init\">crypto_algapi_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crypto_init_proc\">crypto_init_proc</a>();", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__exit\">__exit</a> <a class=\"id\" href=\"#crypto_algapi_exit\">crypto_algapi_exit</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crypto_exit_proc\">crypto_exit_proc</a>();", 
"}", 
"", 
"<a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#crypto_algapi_init\">crypto_algapi_init</a>);", 
"<a class=\"id\" href=\"#module_exit\">module_exit</a>(<a class=\"id\" href=\"#crypto_algapi_exit\">crypto_algapi_exit</a>);", 
"", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
"<a class=\"id\" href=\"#MODULE_DESCRIPTION\">MODULE_DESCRIPTION</a>(\"Cryptographic algorithms API\");", 
];
xr_frag_insert('l/67/80e9d0933ad4176f3faedece648210d96ca765.xr', __xr_tmp);
