var __xr_tmp = [
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_dev_put\">pci_dev_put</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#found\">found</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pcie_pme_handle_request - Find device that generated PME and handle it.</span>", 
"<span class=\"comment\"> * @port: Root port or event collector that generated the PME interrupt.</span>", 
"<span class=\"comment\"> * @req_id: PCIe Requester ID of the device that generated the PME.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#pcie_pme_handle_request\">pcie_pme_handle_request</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#req_id\">req_id</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#busnr\">busnr</a> = <a class=\"id\" href=\"#req_id\">req_id</a> >> 8, <a class=\"id\" href=\"#devfn\">devfn</a> = <a class=\"id\" href=\"#req_id\">req_id</a> &amp; 0xff;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#found\">found</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* First, check if the PME is from the root port itself. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#devfn\">devfn</a> == <a class=\"id\" href=\"#devfn\">devfn</a> && <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#number\">number</a> == <a class=\"id\" href=\"#busnr\">busnr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_check_pme_status\">pci_check_pme_status</a>(<a class=\"id\" href=\"#port\">port</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pm_request_resume\">pm_request_resume</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Apparently, the root port generated the PME on behalf</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * of a non-PCIe device downstream.  If this is done by</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * a root port, the Requester ID field in its status</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * register may contain either the root port's, or the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * source device's information (PCI Express Base</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Specification, Rev. 2.0, Section 6.1.9).</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#pci_bus_sem\">pci_bus_sem</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> = <a class=\"id\" href=\"#pcie_pme_walk_bus\">pcie_pme_walk_bus</a>(<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#pci_bus_sem\">pci_bus_sem</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Second, find the bus the source device is on. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a> = <a class=\"id\" href=\"#pci_find_bus\">pci_find_bus</a>(<a class=\"id\" href=\"#pci_domain_nr\">pci_domain_nr</a>(<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#bus\">bus</a>), <a class=\"id\" href=\"#busnr\">busnr</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bus\">bus</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Next, check if the PME is from a PCIe-PCI bridge. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> = <a class=\"id\" href=\"#pcie_pme_from_pci_bridge\">pcie_pme_from_pci_bridge</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#devfn\">devfn</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#found\">found</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Finally, try to find the PME source on the bus. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#pci_bus_sem\">pci_bus_sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#devices\">devices</a>, <a class=\"id\" href=\"#bus_list\">bus_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_dev_get\">pci_dev_get</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devfn\">devfn</a> == <a class=\"id\" href=\"#devfn\">devfn</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_dev_put\">pci_dev_put</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#pci_bus_sem\">pci_bus_sem</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#found\">found</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* The device is there, but we have to check its PME status. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> = <a class=\"id\" href=\"#pci_check_pme_status\">pci_check_pme_status</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#found\">found</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pm_request_resume\">pm_request_resume</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_wakeup_event\">pci_wakeup_event</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_dev_put\">pci_dev_put</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#devfn\">devfn</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The device is not there, but we can still try to recover by</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * assuming that the PME was reported by a PCIe-PCI bridge that</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * used devfn different from zero.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_dbg\">dev_dbg</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"PME interrupt generated for \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"non-existent device %02x:%02x.%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#busnr\">busnr</a>, <a class=\"id\" href=\"#PCI_SLOT\">PCI_SLOT</a>(<a class=\"id\" href=\"#devfn\">devfn</a>), <a class=\"id\" href=\"#PCI_FUNC\">PCI_FUNC</a>(<a class=\"id\" href=\"#devfn\">devfn</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> = <a class=\"id\" href=\"#pcie_pme_from_pci_bridge\">pcie_pme_from_pci_bridge</a>(<a class=\"id\" href=\"#bus\">bus</a>, 0);", 
"<span class=\"ts\"/>}", 
"", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#found\">found</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_dbg\">dev_dbg</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"Spurious native PME interrupt!\\n\");", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pcie_pme_work_fn - Work handler for PCIe PME interrupt.</span>", 
"<span class=\"comment\"> * @work: Work structure giving access to service data.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#pcie_pme_work_fn\">pcie_pme_work_fn</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pcie_pme_service_data\">pcie_pme_service_data</a> *<a class=\"id\" href=\"#data\">data</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#work\">work</a>, struct <a class=\"id\" href=\"#pcie_pme_service_data\">pcie_pme_service_data</a>, <a class=\"id\" href=\"#work\">work</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#port\">port</a> = <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#srv\">srv</a>-><a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rtsta_pos\">rtsta_pos</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#rtsta\">rtsta</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtsta_pos\">rtsta_pos</a> = <a class=\"id\" href=\"#pci_pcie_cap\">pci_pcie_cap</a>(<a class=\"id\" href=\"#port\">port</a>) + <a class=\"id\" href=\"#PCI_EXP_RTSTA\">PCI_EXP_RTSTA</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#noirq\">noirq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#rtsta_pos\">rtsta_pos</a>, &amp;<a class=\"id\" href=\"#rtsta\">rtsta</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rtsta\">rtsta</a> &amp; <a class=\"id\" href=\"#PCI_EXP_RTSTA_PME\">PCI_EXP_RTSTA_PME</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Clear PME status of the port.  If there are other</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * pending PMEs, the status will be set again.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcie_pme_clear_status\">pcie_pme_clear_status</a>(<a class=\"id\" href=\"#port\">port</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcie_pme_handle_request\">pcie_pme_handle_request</a>(<a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#rtsta\">rtsta</a> &amp; 0xffff);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* No need to loop if there are no more PMEs pending. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#rtsta\">rtsta</a> &amp; <a class=\"id\" href=\"#PCI_EXP_RTSTA_PENDING\">PCI_EXP_RTSTA_PENDING</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu_relax\">cpu_relax</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#noirq\">noirq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcie_pme_interrupt_enable\">pcie_pme_interrupt_enable</a>(<a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#true\">true</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pcie_pme_irq - Interrupt handler for PCIe root port PME interrupt.</span>", 
"<span class=\"comment\"> * @irq: Interrupt vector.</span>", 
"<span class=\"comment\"> * @context: Interrupt context pointer.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#irqreturn_t\">irqreturn_t</a> <a class=\"id\" href=\"#pcie_pme_irq\">pcie_pme_irq</a>(int <a class=\"id\" href=\"#irq\">irq</a>, void *<a class=\"id\" href=\"#context\">context</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pcie_pme_service_data\">pcie_pme_service_data</a> *<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rtsta_pos\">rtsta_pos</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#rtsta\">rtsta</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a> = ((struct <a class=\"id\" href=\"#pcie_device\">pcie_device</a> *)<a class=\"id\" href=\"#context\">context</a>)-><a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#get_service_data\">get_service_data</a>((struct <a class=\"id\" href=\"#pcie_device\">pcie_device</a> *)<a class=\"id\" href=\"#context\">context</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtsta_pos\">rtsta_pos</a> = <a class=\"id\" href=\"#pci_pcie_cap\">pci_pcie_cap</a>(<a class=\"id\" href=\"#port\">port</a>) + <a class=\"id\" href=\"#PCI_EXP_RTSTA\">PCI_EXP_RTSTA</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#rtsta_pos\">rtsta_pos</a>, &amp;<a class=\"id\" href=\"#rtsta\">rtsta</a>);", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#rtsta\">rtsta</a> &amp; <a class=\"id\" href=\"#PCI_EXP_RTSTA_PME\">PCI_EXP_RTSTA_PME</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#IRQ_NONE\">IRQ_NONE</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pcie_pme_interrupt_enable\">pcie_pme_interrupt_enable</a>(<a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#false\">false</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We don't use pm_wq, because it's freezable. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#schedule_work\">schedule_work</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#work\">work</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#IRQ_HANDLED\">IRQ_HANDLED</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pcie_pme_set_native - Set the PME interrupt flag for given device.</span>", 
"<span class=\"comment\"> * @dev: PCI device to handle.</span>", 
"<span class=\"comment\"> * @ign: Ignored.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#pcie_pme_set_native\">pcie_pme_set_native</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, void *<a class=\"id\" href=\"#ign\">ign</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_info\">dev_info</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"Signaling PME through PCIe PME interrupt\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_set_run_wake\">device_set_run_wake</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#true\">true</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#pme_interrupt\">pme_interrupt</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pcie_pme_mark_devices - Set the PME interrupt flag for devices below a port.</span>", 
"<span class=\"comment\"> * @port: PCIe root port or event collector to handle.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * For each device below given root port, including the port itself (or for each</span>", 
"<span class=\"comment\"> * root complex integrated endpoint if @port is a root complex event collector)</span>", 
"<span class=\"comment\"> * set the flag indicating that it can signal run-time wake-up events via PCIe</span>", 
"<span class=\"comment\"> * PME interrupts.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#pcie_pme_mark_devices\">pcie_pme_mark_devices</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#port\">port</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pcie_pme_set_native\">pcie_pme_set_native</a>(<a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_walk_bus\">pci_walk_bus</a>(<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a>, <a class=\"id\" href=\"#pcie_pme_set_native\">pcie_pme_set_native</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a> = <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#bus\">bus</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Check if this is a root port event collector. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#pcie_type\">pcie_type</a> != <a class=\"id\" href=\"#PCI_EXP_TYPE_RC_EC\">PCI_EXP_TYPE_RC_EC</a> || !<a class=\"id\" href=\"#bus\">bus</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#pci_bus_sem\">pci_bus_sem</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#devices\">devices</a>, <a class=\"id\" href=\"#bus_list\">bus_list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_is_pcie\">pci_is_pcie</a>(<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    && <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#pcie_type\">pcie_type</a> == <a class=\"id\" href=\"#PCI_EXP_TYPE_RC_END\">PCI_EXP_TYPE_RC_END</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcie_pme_set_native\">pcie_pme_set_native</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#pci_bus_sem\">pci_bus_sem</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pcie_pme_probe - Initialize PCIe PME service for given root port.</span>", 
"<span class=\"comment\"> * @srv: PCIe service to initialize.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#pcie_pme_probe\">pcie_pme_probe</a>(struct <a class=\"id\" href=\"#pcie_device\">pcie_device</a> *<a class=\"id\" href=\"#srv\">srv</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pcie_pme_service_data\">pcie_pme_service_data</a> *<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#data\">data</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#data\">data</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_WORK\">INIT_WORK</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#work\">work</a>, <a class=\"id\" href=\"#pcie_pme_work_fn\">pcie_pme_work_fn</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#srv\">srv</a> = <a class=\"id\" href=\"#srv\">srv</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_service_data\">set_service_data</a>(<a class=\"id\" href=\"#srv\">srv</a>, <a class=\"id\" href=\"#data\">data</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a> = <a class=\"id\" href=\"#srv\">srv</a>-><a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pcie_pme_interrupt_enable\">pcie_pme_interrupt_enable</a>(<a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#false\">false</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pcie_pme_clear_status\">pcie_pme_clear_status</a>(<a class=\"id\" href=\"#port\">port</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#request_irq\">request_irq</a>(<a class=\"id\" href=\"#srv\">srv</a>-><a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#pcie_pme_irq\">pcie_pme_irq</a>, <a class=\"id\" href=\"#IRQF_SHARED\">IRQF_SHARED</a>, \"PCIe PME\", <a class=\"id\" href=\"#srv\">srv</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcie_pme_mark_devices\">pcie_pme_mark_devices</a>(<a class=\"id\" href=\"#port\">port</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcie_pme_interrupt_enable\">pcie_pme_interrupt_enable</a>(<a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#true\">true</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pcie_pme_suspend - Suspend PCIe PME service device.</span>", 
"<span class=\"comment\"> * @srv: PCIe service device to suspend.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#pcie_pme_suspend\">pcie_pme_suspend</a>(struct <a class=\"id\" href=\"#pcie_device\">pcie_device</a> *<a class=\"id\" href=\"#srv\">srv</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pcie_pme_service_data\">pcie_pme_service_data</a> *<a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#get_service_data\">get_service_data</a>(<a class=\"id\" href=\"#srv\">srv</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#port\">port</a> = <a class=\"id\" href=\"#srv\">srv</a>-><a class=\"id\" href=\"#port\">port</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pcie_pme_interrupt_enable\">pcie_pme_interrupt_enable</a>(<a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#false\">false</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pcie_pme_clear_status\">pcie_pme_clear_status</a>(<a class=\"id\" href=\"#port\">port</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#noirq\">noirq</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#synchronize_irq\">synchronize_irq</a>(<a class=\"id\" href=\"#srv\">srv</a>-><a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pcie_pme_resume - Resume PCIe PME service device.</span>", 
"<span class=\"comment\"> * @srv - PCIe service device to resume.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#pcie_pme_resume\">pcie_pme_resume</a>(struct <a class=\"id\" href=\"#pcie_device\">pcie_device</a> *<a class=\"id\" href=\"#srv\">srv</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pcie_pme_service_data\">pcie_pme_service_data</a> *<a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#get_service_data\">get_service_data</a>(<a class=\"id\" href=\"#srv\">srv</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#port\">port</a> = <a class=\"id\" href=\"#srv\">srv</a>-><a class=\"id\" href=\"#port\">port</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#noirq\">noirq</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pcie_pme_clear_status\">pcie_pme_clear_status</a>(<a class=\"id\" href=\"#port\">port</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pcie_pme_interrupt_enable\">pcie_pme_interrupt_enable</a>(<a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#true\">true</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pcie_pme_remove - Prepare PCIe PME service device for removal.</span>", 
"<span class=\"comment\"> * @srv - PCIe service device to resume.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#pcie_pme_remove\">pcie_pme_remove</a>(struct <a class=\"id\" href=\"#pcie_device\">pcie_device</a> *<a class=\"id\" href=\"#srv\">srv</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pcie_pme_suspend\">pcie_pme_suspend</a>(<a class=\"id\" href=\"#srv\">srv</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_irq\">free_irq</a>(<a class=\"id\" href=\"#srv\">srv</a>-><a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#srv\">srv</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#get_service_data\">get_service_data</a>(<a class=\"id\" href=\"#srv\">srv</a>));", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#pcie_port_service_driver\">pcie_port_service_driver</a> <a class=\"id\" href=\"#pcie_pme_driver\">pcie_pme_driver</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= \"pcie_pme\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#port_type\">port_type</a> <span class=\"ts\"/>= <a class=\"id\" href=\"#PCI_EXP_TYPE_ROOT_PORT\">PCI_EXP_TYPE_ROOT_PORT</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#service\">service</a> <span class=\"ts\"/>= <a class=\"id\" href=\"#PCIE_PORT_SERVICE_PME\">PCIE_PORT_SERVICE_PME</a>,", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#probe\">probe</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#pcie_pme_probe\">pcie_pme_probe</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#suspend\">suspend</a><span class=\"ts\"/>= <a class=\"id\" href=\"#pcie_pme_suspend\">pcie_pme_suspend</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#resume\">resume</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#pcie_pme_resume\">pcie_pme_resume</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#remove\">remove</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#pcie_pme_remove\">pcie_pme_remove</a>,", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pcie_pme_service_init - Register the PCIe PME service driver.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#pcie_pme_service_init\">pcie_pme_service_init</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pcie_port_service_register\">pcie_port_service_register</a>(&amp;<a class=\"id\" href=\"#pcie_pme_driver\">pcie_pme_driver</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#pcie_pme_service_init\">pcie_pme_service_init</a>);", 
];
xr_frag_insert('l/67/f0207a3c6d9628eee3d4f9a1347a89d20c1a90.xr', __xr_tmp);
