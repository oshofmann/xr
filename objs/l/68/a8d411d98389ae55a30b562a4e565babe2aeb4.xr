var __xr_tmp = [
"<span class=\"comment\">/******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Name: aclinux.h - OS specific defines, etc. for Linux</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *****************************************************************************/</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright (C) 2000 - 2010, Intel Corp.</span>", 
"<span class=\"comment\"> * All rights reserved.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Redistribution and use in source and binary forms, with or without</span>", 
"<span class=\"comment\"> * modification, are permitted provided that the following conditions</span>", 
"<span class=\"comment\"> * are met:</span>", 
"<span class=\"comment\"> * 1. Redistributions of source code must retain the above copyright</span>", 
"<span class=\"comment\"> *    notice, this list of conditions, and the following disclaimer,</span>", 
"<span class=\"comment\"> *    without modification.</span>", 
"<span class=\"comment\"> * 2. Redistributions in binary form must reproduce at minimum a disclaimer</span>", 
"<span class=\"comment\"> *    substantially similar to the \"NO WARRANTY\" disclaimer below</span>", 
"<span class=\"comment\"> *    (\"Disclaimer\") and any redistribution must be conditioned upon</span>", 
"<span class=\"comment\"> *    including a substantially similar Disclaimer requirement for further</span>", 
"<span class=\"comment\"> *    binary redistribution.</span>", 
"<span class=\"comment\"> * 3. Neither the names of the above-listed copyright holders nor the names</span>", 
"<span class=\"comment\"> *    of any contributors may be used to endorse or promote products derived</span>", 
"<span class=\"comment\"> *    from this software without specific prior written permission.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Alternatively, this software may be distributed under the terms of the</span>", 
"<span class=\"comment\"> * GNU General Public License (\"GPL\") version 2 as published by the Free</span>", 
"<span class=\"comment\"> * Software Foundation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NO WARRANTY</span>", 
"<span class=\"comment\"> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS</span>", 
"<span class=\"comment\"> * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT</span>", 
"<span class=\"comment\"> * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR</span>", 
"<span class=\"comment\"> * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT</span>", 
"<span class=\"comment\"> * HOLDERS OR CONTRIBUTORS BE LIABLE FOR SPECIAL, EXEMPLARY, OR CONSEQUENTIAL</span>", 
"<span class=\"comment\"> * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS</span>", 
"<span class=\"comment\"> * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)</span>", 
"<span class=\"comment\"> * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,</span>", 
"<span class=\"comment\"> * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING</span>", 
"<span class=\"comment\"> * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE</span>", 
"<span class=\"comment\"> * POSSIBILITY OF SUCH DAMAGES.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__ACLINUX_H__\">__ACLINUX_H__</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__ACLINUX_H__\">__ACLINUX_H__</a>", 
"", 
"<span class=\"comment\">/* Common (in-kernel/user-space) ACPICA configuration */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_USE_SYSTEM_CLIBRARY\">ACPI_USE_SYSTEM_CLIBRARY</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_USE_DO_WHILE_0\">ACPI_USE_DO_WHILE_0</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_MUTEX_TYPE\">ACPI_MUTEX_TYPE</a>             <a class=\"id\" href=\"#ACPI_BINARY_SEMAPHORE\">ACPI_BINARY_SEMAPHORE</a>", 
"", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ctype\">ctype</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#system\">system</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#atomic\">atomic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#div64\">div64</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#acpi\">acpi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock_types\">spinlock_types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#current\">current</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* Host-dependent types and defines for in-kernel ACPICA */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_MACHINE_WIDTH\">ACPI_MACHINE_WIDTH</a>          <a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_EXPORT_SYMBOL\">ACPI_EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#symbol\">symbol</a>)  <a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#symbol\">symbol</a>);", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#strtoul\">strtoul</a>                     <a class=\"id\" href=\"#simple_strtoul\">simple_strtoul</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#acpi_cache_t\">acpi_cache_t</a>                        struct <a class=\"id\" href=\"#kmem_cache\">kmem_cache</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#acpi_spinlock\">acpi_spinlock</a>                       <a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> *", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#acpi_cpu_flags\">acpi_cpu_flags</a>                      unsigned long", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#acpi_thread_id\">acpi_thread_id</a>                      struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *", 
"", 
"#else <span class=\"comment\">/* !__KERNEL__ */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#stdarg\">stdarg</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#stdlib\">stdlib</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#ctype\">ctype</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#unistd\">unistd</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* Host-dependent types and defines for user-space ACPICA */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_FLUSH_CPU_CACHE\">ACPI_FLUSH_CPU_CACHE</a>()", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#acpi_thread_id\">acpi_thread_id</a>                      <a class=\"id\" href=\"#pthread_t\">pthread_t</a>", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#__ia64__\">__ia64__</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#__x86_64__\">__x86_64__</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_MACHINE_WIDTH\">ACPI_MACHINE_WIDTH</a>          64", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#COMPILER_DEPENDENT_INT64\">COMPILER_DEPENDENT_INT64</a>    long", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#COMPILER_DEPENDENT_UINT64\">COMPILER_DEPENDENT_UINT64</a>   unsigned long", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_MACHINE_WIDTH\">ACPI_MACHINE_WIDTH</a>          32", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#COMPILER_DEPENDENT_INT64\">COMPILER_DEPENDENT_INT64</a>    long long", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#COMPILER_DEPENDENT_UINT64\">COMPILER_DEPENDENT_UINT64</a>   unsigned long long", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_USE_NATIVE_DIVIDE\">ACPI_USE_NATIVE_DIVIDE</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__cdecl\">__cdecl</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__cdecl\">__cdecl</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __KERNEL__ */</span>", 
"", 
"<span class=\"comment\">/* Linux uses GCC */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"acgcc.h\"", 
"", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Overrides for in-kernel ACPICA</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#acpi_thread_id\">acpi_thread_id</a> <a class=\"id\" href=\"#acpi_os_get_thread_id\">acpi_os_get_thread_id</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#current\">current</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The irqs_disabled() check is for resume from RAM.</span>", 
"<span class=\"comment\"> * Interrupts are off during resume, just like they are for boot.</span>", 
"<span class=\"comment\"> * However, boot has  (system_state != SYSTEM_RUNNING)</span>", 
"<span class=\"comment\"> * to quiet __might_sleep() in kmalloc() and resume does not.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#acpi\">acpi</a>/<a class=\"id\" href=\"#actypes\">actypes</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"static <a class=\"id\" href=\"#inline\">inline</a> void *<a class=\"id\" href=\"#acpi_os_allocate\">acpi_os_allocate</a>(<a class=\"id\" href=\"#acpi_size\">acpi_size</a> <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#irqs_disabled\">irqs_disabled</a>() ? <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a> : <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void *<a class=\"id\" href=\"#acpi_os_allocate_zeroed\">acpi_os_allocate_zeroed</a>(<a class=\"id\" href=\"#acpi_size\">acpi_size</a> <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(<a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#irqs_disabled\">irqs_disabled</a>() ? <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a> : <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void *<a class=\"id\" href=\"#acpi_os_acquire_object\">acpi_os_acquire_object</a>(<a class=\"id\" href=\"#acpi_cache_t\">acpi_cache_t</a> * <a class=\"id\" href=\"#cache\">cache</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#kmem_cache_zalloc\">kmem_cache_zalloc</a>(<a class=\"id\" href=\"#cache\">cache</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irqs_disabled\">irqs_disabled</a>() ? <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a> : <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_ALLOCATE\">ACPI_ALLOCATE</a>(<a class=\"id\" href=\"#a\">a</a>)        <a class=\"id\" href=\"#acpi_os_allocate\">acpi_os_allocate</a>(<a class=\"id\" href=\"#a\">a</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_ALLOCATE_ZEROED\">ACPI_ALLOCATE_ZEROED</a>(<a class=\"id\" href=\"#a\">a</a>) <a class=\"id\" href=\"#acpi_os_allocate_zeroed\">acpi_os_allocate_zeroed</a>(<a class=\"id\" href=\"#a\">a</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_FREE\">ACPI_FREE</a>(<a class=\"id\" href=\"#a\">a</a>)            <a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#a\">a</a>)", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_PREEMPT\">CONFIG_PREEMPT</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Used within ACPICA to show where it is safe to preempt execution</span>", 
"<span class=\"comment\"> * when CONFIG_PREEMPT=n</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_PREEMPTION_POINT\">ACPI_PREEMPTION_POINT</a>() \\", 
"<span class=\"ts\"/>do { \\", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#irqs_disabled\">irqs_disabled</a>()) \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cond_resched\">cond_resched</a>(); \\", 
"<span class=\"ts\"/>} while (0)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __KERNEL__ */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __ACLINUX_H__ */</span>", 
];
xr_frag_insert('l/68/a8d411d98389ae55a30b562a4e565babe2aeb4.xr', __xr_tmp);
