var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * include/linux/buffer_head.h</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Everything to do with buffer_heads.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_BUFFER_HEAD_H\">_LINUX_BUFFER_HEAD_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_BUFFER_HEAD_H\">_LINUX_BUFFER_HEAD_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#linkage\">linkage</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pagemap\">pagemap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#wait\">wait</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#atomic\">atomic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_BLOCK\">CONFIG_BLOCK</a>", 
"", 
"enum <a class=\"id\" href=\"#bh_state_bits\">bh_state_bits</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BH_Uptodate\">BH_Uptodate</a>,<span class=\"ts\"/><span class=\"comment\">/* Contains valid data */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BH_Dirty\">BH_Dirty</a>,<span class=\"ts\"/><span class=\"comment\">/* Is dirty */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BH_Lock\">BH_Lock</a>,<span class=\"ts\"/><span class=\"comment\">/* Is locked */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BH_Req\">BH_Req</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Has been submitted for I/O */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BH_Uptodate_Lock\">BH_Uptodate_Lock</a>,<span class=\"comment\">/* Used by the first bh in a page, to serialise</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  * IO completion of other buffers in the page</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BH_Mapped\">BH_Mapped</a>,<span class=\"ts\"/><span class=\"comment\">/* Has a disk mapping */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BH_New\">BH_New</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Disk mapping was newly created by get_block */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BH_Async_Read\">BH_Async_Read</a>,<span class=\"ts\"/><span class=\"comment\">/* Is under end_buffer_async_read I/O */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BH_Async_Write\">BH_Async_Write</a>,<span class=\"ts\"/><span class=\"comment\">/* Is under end_buffer_async_write I/O */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BH_Delay\">BH_Delay</a>,<span class=\"ts\"/><span class=\"comment\">/* Buffer is not yet allocated on disk */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BH_Boundary\">BH_Boundary</a>,<span class=\"ts\"/><span class=\"comment\">/* Block is followed by a discontiguity */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BH_Write_EIO\">BH_Write_EIO</a>,<span class=\"ts\"/><span class=\"comment\">/* I/O error on write */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BH_Eopnotsupp\">BH_Eopnotsupp</a>,<span class=\"ts\"/><span class=\"comment\">/* operation not supported (barrier) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BH_Unwritten\">BH_Unwritten</a>,<span class=\"ts\"/><span class=\"comment\">/* Buffer is allocated on disk but not written */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BH_Quiet\">BH_Quiet</a>,<span class=\"ts\"/><span class=\"comment\">/* Buffer Error Prinks to be quiet */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BH_PrivateStart\">BH_PrivateStart</a>,<span class=\"comment\">/* not a state bit, but the first bit available</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * for private allocation by other entities</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_BUF_PER_PAGE\">MAX_BUF_PER_PAGE</a> (<a class=\"id\" href=\"#PAGE_CACHE_SIZE\">PAGE_CACHE_SIZE</a> / 512)", 
"", 
"struct <a class=\"id\" href=\"#page\">page</a>;", 
"struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a>;", 
"struct <a class=\"id\" href=\"#address_space\">address_space</a>;", 
"typedef void (<a class=\"id\" href=\"#bh_end_io_t\">bh_end_io_t</a>)(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>, int <a class=\"id\" href=\"#uptodate\">uptodate</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Historically, a buffer_head was used to map a single block</span>", 
"<span class=\"comment\"> * within a page, and of course as the unit of I/O through the</span>", 
"<span class=\"comment\"> * filesystem and block layers.  Nowadays the basic I/O unit</span>", 
"<span class=\"comment\"> * is the bio, and buffer_heads are used for extracting block</span>", 
"<span class=\"comment\"> * mappings (via a get_block_t call), for tracking state within</span>", 
"<span class=\"comment\"> * a page (via a page_mapping) and for wrapping bio submission</span>", 
"<span class=\"comment\"> * for backward compatibility reasons (e.g. submit_bh).</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> {", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#b_state\">b_state</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* buffer state bitmap (see above) */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#b_this_page\">b_this_page</a>;<span class=\"comment\">/* circular list of page's buffers */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#b_page\">b_page</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* the page this bh is mapped to */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#b_blocknr\">b_blocknr</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* start block number */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#b_size\">b_size</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* size of mapping */</span>", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#b_data\">b_data</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* pointer to data within the page */</span>", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#b_bdev\">b_bdev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh_end_io_t\">bh_end_io_t</a> *<a class=\"id\" href=\"#b_end_io\">b_end_io</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* I/O completion */</span>", 
" <span class=\"ts\"/>void *<a class=\"id\" href=\"#b_private\">b_private</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* reserved for b_end_io */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#b_assoc_buffers\">b_assoc_buffers</a>; <span class=\"comment\">/* associated with another mapping */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#address_space\">address_space</a> *<a class=\"id\" href=\"#b_assoc_map\">b_assoc_map</a>;<span class=\"ts\"/><span class=\"comment\">/* mapping this buffer is</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   associated with */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#b_count\">b_count</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* users using this buffer_head */</span>", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * macro tricks to expand the set_buffer_foo(), clear_buffer_foo()</span>", 
"<span class=\"comment\"> * and buffer_foo() functions.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BUFFER_FNS\">BUFFER_FNS</a>(<a class=\"id\" href=\"#bit\">bit</a>, <a class=\"id\" href=\"#name\">name</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#set_buffer_\">set_buffer_</a>##<a class=\"id\" href=\"#name\">name</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>)<span class=\"ts\"/><span class=\"ts\"/>\\", 
"{<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#BH_\">BH_</a>##<a class=\"id\" href=\"#bit\">bit</a>, &amp;(<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#b_state\">b_state</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"}<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#clear_buffer_\">clear_buffer_</a>##<a class=\"id\" href=\"#name\">name</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>)<span class=\"ts\"/><span class=\"ts\"/>\\", 
"{<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#BH_\">BH_</a>##<a class=\"id\" href=\"#bit\">bit</a>, &amp;(<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#b_state\">b_state</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"}<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#buffer_\">buffer_</a>##<a class=\"id\" href=\"#name\">name</a>(const struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>)<span class=\"ts\"/><span class=\"ts\"/>\\", 
"{<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#BH_\">BH_</a>##<a class=\"id\" href=\"#bit\">bit</a>, &amp;(<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#b_state\">b_state</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * test_set_buffer_foo() and test_clear_buffer_foo()</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TAS_BUFFER_FNS\">TAS_BUFFER_FNS</a>(<a class=\"id\" href=\"#bit\">bit</a>, <a class=\"id\" href=\"#name\">name</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#test_set_buffer_\">test_set_buffer_</a>##<a class=\"id\" href=\"#name\">name</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>)<span class=\"ts\"/>\\", 
"{<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#test_and_set_bit\">test_and_set_bit</a>(<a class=\"id\" href=\"#BH_\">BH_</a>##<a class=\"id\" href=\"#bit\">bit</a>, &amp;(<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#b_state\">b_state</a>);<span class=\"ts\"/><span class=\"ts\"/>\\", 
"}<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#test_clear_buffer_\">test_clear_buffer_</a>##<a class=\"id\" href=\"#name\">name</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>)<span class=\"ts\"/>\\", 
"{<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#test_and_clear_bit\">test_and_clear_bit</a>(<a class=\"id\" href=\"#BH_\">BH_</a>##<a class=\"id\" href=\"#bit\">bit</a>, &amp;(<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#b_state\">b_state</a>);<span class=\"ts\"/><span class=\"ts\"/>\\", 
"}<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Emit the buffer bitops functions.   Note that there are also functions</span>", 
"<span class=\"comment\"> * of the form \"mark_buffer_foo()\".  These are higher-level functions which</span>", 
"<span class=\"comment\"> * do something in addition to setting a b_state bit.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#BUFFER_FNS\">BUFFER_FNS</a>(<a class=\"id\" href=\"#Uptodate\">Uptodate</a>, <a class=\"id\" href=\"#uptodate\">uptodate</a>)", 
"<a class=\"id\" href=\"#BUFFER_FNS\">BUFFER_FNS</a>(<a class=\"id\" href=\"#Dirty\">Dirty</a>, <a class=\"id\" href=\"#dirty\">dirty</a>)", 
"<a class=\"id\" href=\"#TAS_BUFFER_FNS\">TAS_BUFFER_FNS</a>(<a class=\"id\" href=\"#Dirty\">Dirty</a>, <a class=\"id\" href=\"#dirty\">dirty</a>)", 
"<a class=\"id\" href=\"#BUFFER_FNS\">BUFFER_FNS</a>(<a class=\"id\" href=\"#Lock\">Lock</a>, <a class=\"id\" href=\"#locked\">locked</a>)", 
"<a class=\"id\" href=\"#BUFFER_FNS\">BUFFER_FNS</a>(<a class=\"id\" href=\"#Req\">Req</a>, <a class=\"id\" href=\"#req\">req</a>)", 
"<a class=\"id\" href=\"#TAS_BUFFER_FNS\">TAS_BUFFER_FNS</a>(<a class=\"id\" href=\"#Req\">Req</a>, <a class=\"id\" href=\"#req\">req</a>)", 
"<a class=\"id\" href=\"#BUFFER_FNS\">BUFFER_FNS</a>(<a class=\"id\" href=\"#Mapped\">Mapped</a>, <a class=\"id\" href=\"#mapped\">mapped</a>)", 
"<a class=\"id\" href=\"#BUFFER_FNS\">BUFFER_FNS</a>(<a class=\"id\" href=\"#New\">New</a>, <a class=\"id\" href=\"#new\">new</a>)", 
"<a class=\"id\" href=\"#BUFFER_FNS\">BUFFER_FNS</a>(<a class=\"id\" href=\"#Async_Read\">Async_Read</a>, <a class=\"id\" href=\"#async_read\">async_read</a>)", 
"<a class=\"id\" href=\"#BUFFER_FNS\">BUFFER_FNS</a>(<a class=\"id\" href=\"#Async_Write\">Async_Write</a>, <a class=\"id\" href=\"#async_write\">async_write</a>)", 
"<a class=\"id\" href=\"#BUFFER_FNS\">BUFFER_FNS</a>(<a class=\"id\" href=\"#Delay\">Delay</a>, <a class=\"id\" href=\"#delay\">delay</a>)", 
"<a class=\"id\" href=\"#BUFFER_FNS\">BUFFER_FNS</a>(<a class=\"id\" href=\"#Boundary\">Boundary</a>, <a class=\"id\" href=\"#boundary\">boundary</a>)", 
"<a class=\"id\" href=\"#BUFFER_FNS\">BUFFER_FNS</a>(<a class=\"id\" href=\"#Write_EIO\">Write_EIO</a>, <a class=\"id\" href=\"#write_io_error\">write_io_error</a>)", 
"<a class=\"id\" href=\"#BUFFER_FNS\">BUFFER_FNS</a>(<a class=\"id\" href=\"#Eopnotsupp\">Eopnotsupp</a>, <a class=\"id\" href=\"#eopnotsupp\">eopnotsupp</a>)", 
"<a class=\"id\" href=\"#BUFFER_FNS\">BUFFER_FNS</a>(<a class=\"id\" href=\"#Unwritten\">Unwritten</a>, <a class=\"id\" href=\"#unwritten\">unwritten</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#bh_offset\">bh_offset</a>(<a class=\"id\" href=\"#bh\">bh</a>)<span class=\"ts\"/><span class=\"ts\"/>((unsigned long)(<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#b_data\">b_data</a> &amp; ~<a class=\"id\" href=\"#PAGE_MASK\">PAGE_MASK</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#touch_buffer\">touch_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>)<span class=\"ts\"/><a class=\"id\" href=\"#mark_page_accessed\">mark_page_accessed</a>(<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_page\">b_page</a>)", 
"", 
"<span class=\"comment\">/* If we *know* page-&gt;private refers to buffer_heads */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#page_buffers\">page_buffers</a>(<a class=\"id\" href=\"#page\">page</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>({<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#PagePrivate\">PagePrivate</a>(<a class=\"id\" href=\"#page\">page</a>));<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>((struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *)<a class=\"id\" href=\"#page_private\">page_private</a>(<a class=\"id\" href=\"#page\">page</a>));<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>})", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#page_has_buffers\">page_has_buffers</a>(<a class=\"id\" href=\"#page\">page</a>)<span class=\"ts\"/><a class=\"id\" href=\"#PagePrivate\">PagePrivate</a>(<a class=\"id\" href=\"#page\">page</a>)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Declarations</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#mark_buffer_dirty\">mark_buffer_dirty</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>);", 
"void <a class=\"id\" href=\"#init_buffer\">init_buffer</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *, <a class=\"id\" href=\"#bh_end_io_t\">bh_end_io_t</a> *, void *);", 
"void <a class=\"id\" href=\"#set_bh_page\">set_bh_page</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, unsigned long <a class=\"id\" href=\"#offset\">offset</a>);", 
"int <a class=\"id\" href=\"#try_to_free_buffers\">try_to_free_buffers</a>(struct <a class=\"id\" href=\"#page\">page</a> *);", 
"struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#alloc_page_buffers\">alloc_page_buffers</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, unsigned long <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#retry\">retry</a>);", 
"void <a class=\"id\" href=\"#create_empty_buffers\">create_empty_buffers</a>(struct <a class=\"id\" href=\"#page\">page</a> *, unsigned long,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#b_state\">b_state</a>);", 
"void <a class=\"id\" href=\"#end_buffer_read_sync\">end_buffer_read_sync</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>, int <a class=\"id\" href=\"#uptodate\">uptodate</a>);", 
"void <a class=\"id\" href=\"#end_buffer_write_sync\">end_buffer_write_sync</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>, int <a class=\"id\" href=\"#uptodate\">uptodate</a>);", 
"void <a class=\"id\" href=\"#end_buffer_async_write\">end_buffer_async_write</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>, int <a class=\"id\" href=\"#uptodate\">uptodate</a>);", 
"", 
"<span class=\"comment\">/* Things to do with buffers at mapping-&gt;private_list */</span>", 
"void <a class=\"id\" href=\"#mark_buffer_dirty_inode\">mark_buffer_dirty_inode</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>);", 
"int <a class=\"id\" href=\"#inode_has_buffers\">inode_has_buffers</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *);", 
"void <a class=\"id\" href=\"#invalidate_inode_buffers\">invalidate_inode_buffers</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *);", 
"int <a class=\"id\" href=\"#remove_inode_buffers\">remove_inode_buffers</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>);", 
"int <a class=\"id\" href=\"#sync_mapping_buffers\">sync_mapping_buffers</a>(struct <a class=\"id\" href=\"#address_space\">address_space</a> *<a class=\"id\" href=\"#mapping\">mapping</a>);", 
"void <a class=\"id\" href=\"#unmap_underlying_metadata\">unmap_underlying_metadata</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#block\">block</a>);", 
"", 
"void <a class=\"id\" href=\"#mark_buffer_async_write\">mark_buffer_async_write</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>);", 
"void <a class=\"id\" href=\"#__wait_on_buffer\">__wait_on_buffer</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *);", 
"<a class=\"id\" href=\"#wait_queue_head_t\">wait_queue_head_t</a> *<a class=\"id\" href=\"#bh_waitq_head\">bh_waitq_head</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>);", 
"struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#__find_get_block\">__find_get_block</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#block\">block</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned <a class=\"id\" href=\"#size\">size</a>);", 
"struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#__getblk\">__getblk</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#block\">block</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned <a class=\"id\" href=\"#size\">size</a>);", 
"void <a class=\"id\" href=\"#__brelse\">__brelse</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *);", 
"void <a class=\"id\" href=\"#__bforget\">__bforget</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *);", 
"void <a class=\"id\" href=\"#__breadahead\">__breadahead</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *, <a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#block\">block</a>, unsigned int <a class=\"id\" href=\"#size\">size</a>);", 
"struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#__bread\">__bread</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *, <a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#block\">block</a>, unsigned <a class=\"id\" href=\"#size\">size</a>);", 
"void <a class=\"id\" href=\"#invalidate_bh_lrus\">invalidate_bh_lrus</a>(void);", 
"struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#alloc_buffer_head\">alloc_buffer_head</a>(<a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_flags\">gfp_flags</a>);", 
"void <a class=\"id\" href=\"#free_buffer_head\">free_buffer_head</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> * <a class=\"id\" href=\"#bh\">bh</a>);", 
"void <a class=\"id\" href=\"#unlock_buffer\">unlock_buffer</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>);", 
"void <a class=\"id\" href=\"#__lock_buffer\">__lock_buffer</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>);", 
"void <a class=\"id\" href=\"#ll_rw_block\">ll_rw_block</a>(int, int, struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> * <a class=\"id\" href=\"#bh\">bh</a>[]);", 
"int <a class=\"id\" href=\"#sync_dirty_buffer\">sync_dirty_buffer</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>);", 
"int <a class=\"id\" href=\"#__sync_dirty_buffer\">__sync_dirty_buffer</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>, int <a class=\"id\" href=\"#rw\">rw</a>);", 
"void <a class=\"id\" href=\"#write_dirty_buffer\">write_dirty_buffer</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>, int <a class=\"id\" href=\"#rw\">rw</a>);", 
"int <a class=\"id\" href=\"#submit_bh\">submit_bh</a>(int, struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *);", 
"void <a class=\"id\" href=\"#write_boundary_block\">write_boundary_block</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#bblock\">bblock</a>, unsigned <a class=\"id\" href=\"#blocksize\">blocksize</a>);", 
"int <a class=\"id\" href=\"#bh_uptodate_or_lock\">bh_uptodate_or_lock</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>);", 
"int <a class=\"id\" href=\"#bh_submit_read\">bh_submit_read</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>);", 
"", 
"extern int <a class=\"id\" href=\"#buffer_heads_over_limit\">buffer_heads_over_limit</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Generic address_space_operations implementations for buffer_head-backed</span>", 
"<span class=\"comment\"> * address_spaces.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#block_invalidatepage\">block_invalidatepage</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, unsigned long <a class=\"id\" href=\"#offset\">offset</a>);", 
"int <a class=\"id\" href=\"#block_write_full_page\">block_write_full_page</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#get_block_t\">get_block_t</a> *<a class=\"id\" href=\"#get_block\">get_block</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#writeback_control\">writeback_control</a> *<a class=\"id\" href=\"#wbc\">wbc</a>);", 
"int <a class=\"id\" href=\"#block_write_full_page_endio\">block_write_full_page_endio</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#get_block_t\">get_block_t</a> *<a class=\"id\" href=\"#get_block\">get_block</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#writeback_control\">writeback_control</a> *<a class=\"id\" href=\"#wbc\">wbc</a>, <a class=\"id\" href=\"#bh_end_io_t\">bh_end_io_t</a> *<a class=\"id\" href=\"#handler\">handler</a>);", 
"int <a class=\"id\" href=\"#block_read_full_page\">block_read_full_page</a>(struct <a class=\"id\" href=\"#page\">page</a>*, <a class=\"id\" href=\"#get_block_t\">get_block_t</a>*);", 
"int <a class=\"id\" href=\"#block_is_partially_uptodate\">block_is_partially_uptodate</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#read_descriptor_t\">read_descriptor_t</a> *<a class=\"id\" href=\"#desc\">desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#from\">from</a>);", 
"int <a class=\"id\" href=\"#block_write_begin\">block_write_begin</a>(struct <a class=\"id\" href=\"#address_space\">address_space</a> *<a class=\"id\" href=\"#mapping\">mapping</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>, unsigned <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned <a class=\"id\" href=\"#flags\">flags</a>, struct <a class=\"id\" href=\"#page\">page</a> **<a class=\"id\" href=\"#pagep\">pagep</a>, <a class=\"id\" href=\"#get_block_t\">get_block_t</a> *<a class=\"id\" href=\"#get_block\">get_block</a>);", 
"int <a class=\"id\" href=\"#__block_write_begin\">__block_write_begin</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>, unsigned <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_block_t\">get_block_t</a> *<a class=\"id\" href=\"#get_block\">get_block</a>);", 
"int <a class=\"id\" href=\"#block_write_end\">block_write_end</a>(struct <a class=\"id\" href=\"#file\">file</a> *, struct <a class=\"id\" href=\"#address_space\">address_space</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a>, unsigned, unsigned,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *, void *);", 
"int <a class=\"id\" href=\"#generic_write_end\">generic_write_end</a>(struct <a class=\"id\" href=\"#file\">file</a> *, struct <a class=\"id\" href=\"#address_space\">address_space</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a>, unsigned, unsigned,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *, void *);", 
"void <a class=\"id\" href=\"#page_zero_new_buffers\">page_zero_new_buffers</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, unsigned <a class=\"id\" href=\"#from\">from</a>, unsigned <a class=\"id\" href=\"#to\">to</a>);", 
"int <a class=\"id\" href=\"#block_prepare_write\">block_prepare_write</a>(struct <a class=\"id\" href=\"#page\">page</a>*, unsigned, unsigned, <a class=\"id\" href=\"#get_block_t\">get_block_t</a>*);", 
"int <a class=\"id\" href=\"#cont_write_begin\">cont_write_begin</a>(struct <a class=\"id\" href=\"#file\">file</a> *, struct <a class=\"id\" href=\"#address_space\">address_space</a> *, <a class=\"id\" href=\"#loff_t\">loff_t</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned, unsigned, struct <a class=\"id\" href=\"#page\">page</a> **, void **,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_block_t\">get_block_t</a> *, <a class=\"id\" href=\"#loff_t\">loff_t</a> *);", 
"int <a class=\"id\" href=\"#generic_cont_expand_simple\">generic_cont_expand_simple</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#size\">size</a>);", 
"int <a class=\"id\" href=\"#block_commit_write\">block_commit_write</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, unsigned <a class=\"id\" href=\"#from\">from</a>, unsigned <a class=\"id\" href=\"#to\">to</a>);", 
"int <a class=\"id\" href=\"#block_page_mkwrite\">block_page_mkwrite</a>(struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>, struct <a class=\"id\" href=\"#vm_fault\">vm_fault</a> *<a class=\"id\" href=\"#vmf\">vmf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_block_t\">get_block_t</a> <a class=\"id\" href=\"#get_block\">get_block</a>);", 
"void <a class=\"id\" href=\"#block_sync_page\">block_sync_page</a>(struct <a class=\"id\" href=\"#page\">page</a> *);", 
"<a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#generic_block_bmap\">generic_block_bmap</a>(struct <a class=\"id\" href=\"#address_space\">address_space</a> *, <a class=\"id\" href=\"#sector_t\">sector_t</a>, <a class=\"id\" href=\"#get_block_t\">get_block_t</a> *);", 
"int <a class=\"id\" href=\"#block_truncate_page\">block_truncate_page</a>(struct <a class=\"id\" href=\"#address_space\">address_space</a> *, <a class=\"id\" href=\"#loff_t\">loff_t</a>, <a class=\"id\" href=\"#get_block_t\">get_block_t</a> *);", 
"int <a class=\"id\" href=\"#nobh_write_begin\">nobh_write_begin</a>(struct <a class=\"id\" href=\"#address_space\">address_space</a> *, <a class=\"id\" href=\"#loff_t\">loff_t</a>, unsigned, unsigned,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> **, void **, <a class=\"id\" href=\"#get_block_t\">get_block_t</a>*);", 
"int <a class=\"id\" href=\"#nobh_write_end\">nobh_write_end</a>(struct <a class=\"id\" href=\"#file\">file</a> *, struct <a class=\"id\" href=\"#address_space\">address_space</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a>, unsigned, unsigned,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *, void *);", 
"int <a class=\"id\" href=\"#nobh_truncate_page\">nobh_truncate_page</a>(struct <a class=\"id\" href=\"#address_space\">address_space</a> *, <a class=\"id\" href=\"#loff_t\">loff_t</a>, <a class=\"id\" href=\"#get_block_t\">get_block_t</a> *);", 
"int <a class=\"id\" href=\"#nobh_writepage\">nobh_writepage</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#get_block_t\">get_block_t</a> *<a class=\"id\" href=\"#get_block\">get_block</a>,", 
"                        struct <a class=\"id\" href=\"#writeback_control\">writeback_control</a> *<a class=\"id\" href=\"#wbc\">wbc</a>);", 
"", 
"void <a class=\"id\" href=\"#buffer_init\">buffer_init</a>(void);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * inline definitions</span>", 
];
xr_frag_insert('l/68/ae1872fae5e8b72ecacd49f0a4fed076eb82a7.xr', __xr_tmp);
