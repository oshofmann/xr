var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * linux/fs/ext2/xattr.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2001-2003 Andreas Gruenbacher &lt;agruen@suse.de&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Fix by Harrison Xing &lt;harrison@mountainviewdata.com&gt;.</span>", 
"<span class=\"comment\"> * Extended attributes for symlinks and special files added per</span>", 
"<span class=\"comment\"> *  suggestion of Luka Renko &lt;luka.renko@hermes.si&gt;.</span>", 
"<span class=\"comment\"> * xattr consolidation Copyright (c) 2004 James Morris &lt;jmorris@redhat.com&gt;,</span>", 
"<span class=\"comment\"> *  Red Hat Inc.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Extended attributes are stored on disk blocks allocated outside of</span>", 
"<span class=\"comment\"> * any inode. The i_file_acl field is then made to point to this allocated</span>", 
"<span class=\"comment\"> * block. If all extended attributes of an inode are identical, these</span>", 
"<span class=\"comment\"> * inodes may share the same extended attribute block. Such situations</span>", 
"<span class=\"comment\"> * are automatically detected by keeping a cache of recent attribute block</span>", 
"<span class=\"comment\"> * numbers and hashes over the block's contents in memory.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Extended attribute block layout:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *   +------------------+</span>", 
"<span class=\"comment\"> *   | header           |</span>", 
"<span class=\"comment\"> *   | entry 1          | |</span>", 
"<span class=\"comment\"> *   | entry 2          | | growing downwards</span>", 
"<span class=\"comment\"> *   | entry 3          | v</span>", 
"<span class=\"comment\"> *   | four null bytes  |</span>", 
"<span class=\"comment\"> *   | . . .            |</span>", 
"<span class=\"comment\"> *   | value 1          | ^</span>", 
"<span class=\"comment\"> *   | value 3          | | growing upwards</span>", 
"<span class=\"comment\"> *   | value 2          | |</span>", 
"<span class=\"comment\"> *   +------------------+</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The block header is followed by multiple entry descriptors. These entry</span>", 
"<span class=\"comment\"> * descriptors are variable in size, and alligned to EXT2_XATTR_PAD</span>", 
"<span class=\"comment\"> * byte boundaries. The entry descriptors are sorted by attribute name,</span>", 
"<span class=\"comment\"> * so that two extended attribute blocks can be compared efficiently.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Attribute values are aligned to the end of the block, stored in</span>", 
"<span class=\"comment\"> * no specific order. They are also padded to EXT2_XATTR_PAD byte</span>", 
"<span class=\"comment\"> * boundaries. No additional gaps are left between them.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Locking strategy</span>", 
"<span class=\"comment\"> * ----------------</span>", 
"<span class=\"comment\"> * EXT2_I(inode)-&gt;i_file_acl is protected by EXT2_I(inode)-&gt;xattr_sem.</span>", 
"<span class=\"comment\"> * EA blocks are only changed if they are exclusive to an inode, so</span>", 
"<span class=\"comment\"> * holding xattr_sem also means that nothing but the EA block's reference</span>", 
"<span class=\"comment\"> * count will change. Multiple writers to an EA block are synchronized</span>", 
"<span class=\"comment\"> * by the bh lock. No more than a single bh lock is held at any time</span>", 
"<span class=\"comment\"> * to avoid deadlocks.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#buffer_head\">buffer_head</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mbcache\">mbcache</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#quotaops\">quotaops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rwsem\">rwsem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#security\">security</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"ext2.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"xattr.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"acl.h\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HDR\">HDR</a>(<a class=\"id\" href=\"#bh\">bh</a>) ((struct <a class=\"id\" href=\"#ext2_xattr_header\">ext2_xattr_header</a> *)((<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#b_data\">b_data</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ENTRY\">ENTRY</a>(<a class=\"id\" href=\"#ptr\">ptr</a>) ((struct <a class=\"id\" href=\"#ext2_xattr_entry\">ext2_xattr_entry</a> *)(<a class=\"id\" href=\"#ptr\">ptr</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FIRST_ENTRY\">FIRST_ENTRY</a>(<a class=\"id\" href=\"#bh\">bh</a>) <a class=\"id\" href=\"#ENTRY\">ENTRY</a>(<a class=\"id\" href=\"#HDR\">HDR</a>(<a class=\"id\" href=\"#bh\">bh</a>)+1)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IS_LAST_ENTRY\">IS_LAST_ENTRY</a>(<a class=\"id\" href=\"#entry\">entry</a>) (*(<a class=\"id\" href=\"#__u32\">__u32</a> *)(<a class=\"id\" href=\"#entry\">entry</a>) == 0)", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#EXT2_XATTR_DEBUG\">EXT2_XATTR_DEBUG</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ea_idebug\">ea_idebug</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#f\">f</a>...) do { \\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"inode %s:%ld: \", \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_id\">s_id</a>, <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>); \\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#f\">f</a>); \\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"\\n\"); \\", 
"<span class=\"ts\"/>} while (0)", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ea_bdebug\">ea_bdebug</a>(<a class=\"id\" href=\"#bh\">bh</a>, <a class=\"id\" href=\"#f\">f</a>...) do { \\", 
"<span class=\"ts\"/><span class=\"ts\"/>char <a class=\"id\" href=\"#b\">b</a>[<a class=\"id\" href=\"#BDEVNAME_SIZE\">BDEVNAME_SIZE</a>]; \\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"block %s:%lu: \", \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bdevname\">bdevname</a>(<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_bdev\">b_bdev</a>, <a class=\"id\" href=\"#b\">b</a>), \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long) <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_blocknr\">b_blocknr</a>); \\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#f\">f</a>); \\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"\\n\"); \\", 
"<span class=\"ts\"/>} while (0)", 
"#else", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ea_idebug\">ea_idebug</a>(<a class=\"id\" href=\"#f\">f</a>...)", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ea_bdebug\">ea_bdebug</a>(<a class=\"id\" href=\"#f\">f</a>...)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static int <a class=\"id\" href=\"#ext2_xattr_set2\">ext2_xattr_set2</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *, struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#ext2_xattr_header\">ext2_xattr_header</a> *);", 
"", 
"static int <a class=\"id\" href=\"#ext2_xattr_cache_insert\">ext2_xattr_cache_insert</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *);", 
"static struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#ext2_xattr_cache_find\">ext2_xattr_cache_find</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#ext2_xattr_header\">ext2_xattr_header</a> *);", 
"static void <a class=\"id\" href=\"#ext2_xattr_rehash\">ext2_xattr_rehash</a>(struct <a class=\"id\" href=\"#ext2_xattr_header\">ext2_xattr_header</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#ext2_xattr_entry\">ext2_xattr_entry</a> *);", 
"", 
"static struct <a class=\"id\" href=\"#mb_cache\">mb_cache</a> *<a class=\"id\" href=\"#ext2_xattr_cache\">ext2_xattr_cache</a>;", 
"", 
"static const struct <a class=\"id\" href=\"#xattr_handler\">xattr_handler</a> *<a class=\"id\" href=\"#ext2_xattr_handler_map\">ext2_xattr_handler_map</a>[] = {", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#EXT2_XATTR_INDEX_USER\">EXT2_XATTR_INDEX_USER</a>]<span class=\"ts\"/><span class=\"ts\"/>     = &amp;<a class=\"id\" href=\"#ext2_xattr_user_handler\">ext2_xattr_user_handler</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EXT2_FS_POSIX_ACL\">CONFIG_EXT2_FS_POSIX_ACL</a>", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#EXT2_XATTR_INDEX_POSIX_ACL_ACCESS\">EXT2_XATTR_INDEX_POSIX_ACL_ACCESS</a>]  = &amp;<a class=\"id\" href=\"#ext2_xattr_acl_access_handler\">ext2_xattr_acl_access_handler</a>,", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#EXT2_XATTR_INDEX_POSIX_ACL_DEFAULT\">EXT2_XATTR_INDEX_POSIX_ACL_DEFAULT</a>] = &amp;<a class=\"id\" href=\"#ext2_xattr_acl_default_handler\">ext2_xattr_acl_default_handler</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#EXT2_XATTR_INDEX_TRUSTED\">EXT2_XATTR_INDEX_TRUSTED</a>]<span class=\"ts\"/>     = &amp;<a class=\"id\" href=\"#ext2_xattr_trusted_handler\">ext2_xattr_trusted_handler</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EXT2_FS_SECURITY\">CONFIG_EXT2_FS_SECURITY</a>", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#EXT2_XATTR_INDEX_SECURITY\">EXT2_XATTR_INDEX_SECURITY</a>]<span class=\"ts\"/>     = &amp;<a class=\"id\" href=\"#ext2_xattr_security_handler\">ext2_xattr_security_handler</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"const struct <a class=\"id\" href=\"#xattr_handler\">xattr_handler</a> *<a class=\"id\" href=\"#ext2_xattr_handlers\">ext2_xattr_handlers</a>[] = {", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#ext2_xattr_user_handler\">ext2_xattr_user_handler</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#ext2_xattr_trusted_handler\">ext2_xattr_trusted_handler</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EXT2_FS_POSIX_ACL\">CONFIG_EXT2_FS_POSIX_ACL</a>", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#ext2_xattr_acl_access_handler\">ext2_xattr_acl_access_handler</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#ext2_xattr_acl_default_handler\">ext2_xattr_acl_default_handler</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EXT2_FS_SECURITY\">CONFIG_EXT2_FS_SECURITY</a>", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#ext2_xattr_security_handler\">ext2_xattr_security_handler</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> const struct <a class=\"id\" href=\"#xattr_handler\">xattr_handler</a> *", 
"<a class=\"id\" href=\"#ext2_xattr_handler\">ext2_xattr_handler</a>(int <a class=\"id\" href=\"#name_index\">name_index</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#xattr_handler\">xattr_handler</a> *<a class=\"id\" href=\"#handler\">handler</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#name_index\">name_index</a> &gt; 0 && <a class=\"id\" href=\"#name_index\">name_index</a> &lt; <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#ext2_xattr_handler_map\">ext2_xattr_handler_map</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#handler\">handler</a> = <a class=\"id\" href=\"#ext2_xattr_handler_map\">ext2_xattr_handler_map</a>[<a class=\"id\" href=\"#name_index\">name_index</a>];", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#handler\">handler</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext2_xattr_get()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copy an extended attribute into the buffer</span>", 
"<span class=\"comment\"> * provided, or compute the buffer size required.</span>", 
"<span class=\"comment\"> * Buffer is NULL to compute the size of the buffer required.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns a negative error number on failure, or the number of bytes</span>", 
"<span class=\"comment\"> * used / required on success.</span>", 
"<span class=\"comment\"> */</span>", 
"int", 
"<a class=\"id\" href=\"#ext2_xattr_get\">ext2_xattr_get</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, int <a class=\"id\" href=\"#name_index\">name_index</a>, const char *<a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/>       void *<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#buffer_size\">buffer_size</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext2_xattr_entry\">ext2_xattr_entry</a> *<a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#name_len\">name_len</a>, <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ea_idebug\">ea_idebug</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"name=%d.%s, buffer=%p, buffer_size=%ld\",", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#name_index\">name_index</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, (long)<a class=\"id\" href=\"#buffer_size\">buffer_size</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#name\">name</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#EXT2_I\">EXT2_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#xattr_sem\">xattr_sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENODATA\">ENODATA</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#EXT2_I\">EXT2_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ea_idebug\">ea_idebug</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"reading block %d\", <a class=\"id\" href=\"#EXT2_I\">EXT2_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#EXT2_I\">EXT2_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ea_bdebug\">ea_bdebug</a>(<a class=\"id\" href=\"#bh\">bh</a>, \"b_count=%d, refcount=%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;(<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_count\">b_count</a>)), <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#HDR\">HDR</a>(<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#h_refcount\">h_refcount</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a> + <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_size\">b_size</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#HDR\">HDR</a>(<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#h_magic\">h_magic</a> != <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#EXT2_XATTR_MAGIC\">EXT2_XATTR_MAGIC</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#HDR\">HDR</a>(<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#h_blocks\">h_blocks</a> != <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(1)) {", 
"<a class=\"id\" href=\"#bad_block\">bad_block</a>:<span class=\"ts\"/><a class=\"id\" href=\"#ext2_error\">ext2_error</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, \"ext2_xattr_get\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"inode %ld: bad block %d\", <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT2_I\">EXT2_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* find named attribute */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#name_len\">name_len</a> = <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#name\">name</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ERANGE\">ERANGE</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#name_len\">name_len</a> &gt; 255)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#FIRST_ENTRY\">FIRST_ENTRY</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>while (!<a class=\"id\" href=\"#IS_LAST_ENTRY\">IS_LAST_ENTRY</a>(<a class=\"id\" href=\"#entry\">entry</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext2_xattr_entry\">ext2_xattr_entry</a> *<a class=\"id\" href=\"#next\">next</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT2_XATTR_NEXT\">EXT2_XATTR_NEXT</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((char *)<a class=\"id\" href=\"#next\">next</a> >= <a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad_block\">bad_block</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#name_index\">name_index</a> == <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_name_index\">e_name_index</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#name_len\">name_len</a> == <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_name_len\">e_name_len</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_name\">e_name</a>, <a class=\"id\" href=\"#name_len\">name_len</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#found\">found</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* Check the remaining name entries */</span>", 
"<span class=\"ts\"/>while (!<a class=\"id\" href=\"#IS_LAST_ENTRY\">IS_LAST_ENTRY</a>(<a class=\"id\" href=\"#entry\">entry</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext2_xattr_entry\">ext2_xattr_entry</a> *<a class=\"id\" href=\"#next\">next</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT2_XATTR_NEXT\">EXT2_XATTR_NEXT</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((char *)<a class=\"id\" href=\"#next\">next</a> >= <a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad_block\">bad_block</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext2_xattr_cache_insert\">ext2_xattr_cache_insert</a>(<a class=\"id\" href=\"#bh\">bh</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ea_idebug\">ea_idebug</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"cache insert failed\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENODATA\">ENODATA</a>;", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<a class=\"id\" href=\"#found\">found</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/* check the buffer size */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_value_block\">e_value_block</a> != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad_block\">bad_block</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_value_size\">e_value_size</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> &gt; <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_value_offs\">e_value_offs</a>) + <a class=\"id\" href=\"#size\">size</a> &gt; <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad_block\">bad_block</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext2_xattr_cache_insert\">ext2_xattr_cache_insert</a>(<a class=\"id\" href=\"#bh\">bh</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ea_idebug\">ea_idebug</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"cache insert failed\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#buffer\">buffer</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ERANGE\">ERANGE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> &gt; <a class=\"id\" href=\"#buffer_size\">buffer_size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* return value of attribute */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a> + <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_value_offs\">e_value_offs</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#size\">size</a>;", 
"", 
"<a class=\"id\" href=\"#cleanup\">cleanup</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#EXT2_I\">EXT2_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#xattr_sem\">xattr_sem</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext2_xattr_list()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copy a list of attribute names into the buffer</span>", 
"<span class=\"comment\"> * provided, or compute the buffer size required.</span>", 
"<span class=\"comment\"> * Buffer is NULL to compute the size of the buffer required.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns a negative error number on failure, or the number of bytes</span>", 
"<span class=\"comment\"> * used / required on success.</span>", 
"<span class=\"comment\"> */</span>", 
"static int", 
"<a class=\"id\" href=\"#ext2_xattr_list\">ext2_xattr_list</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, char *<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#buffer_size\">buffer_size</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext2_xattr_entry\">ext2_xattr_entry</a> *<a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#rest\">rest</a> = <a class=\"id\" href=\"#buffer_size\">buffer_size</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ea_idebug\">ea_idebug</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"buffer=%p, buffer_size=%ld\",", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#buffer\">buffer</a>, (long)<a class=\"id\" href=\"#buffer_size\">buffer_size</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#EXT2_I\">EXT2_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#xattr_sem\">xattr_sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#EXT2_I\">EXT2_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ea_idebug\">ea_idebug</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"reading block %d\", <a class=\"id\" href=\"#EXT2_I\">EXT2_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#EXT2_I\">EXT2_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ea_bdebug\">ea_bdebug</a>(<a class=\"id\" href=\"#bh\">bh</a>, \"b_count=%d, refcount=%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;(<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_count\">b_count</a>)), <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#HDR\">HDR</a>(<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#h_refcount\">h_refcount</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a> + <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_size\">b_size</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#HDR\">HDR</a>(<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#h_magic\">h_magic</a> != <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#EXT2_XATTR_MAGIC\">EXT2_XATTR_MAGIC</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#HDR\">HDR</a>(<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#h_blocks\">h_blocks</a> != <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(1)) {", 
"<a class=\"id\" href=\"#bad_block\">bad_block</a>:<span class=\"ts\"/><a class=\"id\" href=\"#ext2_error\">ext2_error</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, \"ext2_xattr_list\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"inode %ld: bad block %d\", <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT2_I\">EXT2_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* check the on-disk data structure */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#FIRST_ENTRY\">FIRST_ENTRY</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>while (!<a class=\"id\" href=\"#IS_LAST_ENTRY\">IS_LAST_ENTRY</a>(<a class=\"id\" href=\"#entry\">entry</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext2_xattr_entry\">ext2_xattr_entry</a> *<a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#EXT2_XATTR_NEXT\">EXT2_XATTR_NEXT</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((char *)<a class=\"id\" href=\"#next\">next</a> >= <a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad_block\">bad_block</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext2_xattr_cache_insert\">ext2_xattr_cache_insert</a>(<a class=\"id\" href=\"#bh\">bh</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ea_idebug\">ea_idebug</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"cache insert failed\");", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* list the attribute names */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#FIRST_ENTRY\">FIRST_ENTRY</a>(<a class=\"id\" href=\"#bh\">bh</a>); !<a class=\"id\" href=\"#IS_LAST_ENTRY\">IS_LAST_ENTRY</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#EXT2_XATTR_NEXT\">EXT2_XATTR_NEXT</a>(<a class=\"id\" href=\"#entry\">entry</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#xattr_handler\">xattr_handler</a> *<a class=\"id\" href=\"#handler\">handler</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_xattr_handler\">ext2_xattr_handler</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_name_index\">e_name_index</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#handler\">handler</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#handler\">handler</a>-><a class=\"id\" href=\"#list\">list</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#rest\">rest</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_name\">e_name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_name_len\">e_name_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#handler\">handler</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#buffer\">buffer</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> &gt; <a class=\"id\" href=\"#rest\">rest</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ERANGE\">ERANGE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a> += <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rest\">rest</a> -= <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#buffer_size\">buffer_size</a> - <a class=\"id\" href=\"#rest\">rest</a>;  <span class=\"comment\">/* total size */</span>", 
"", 
"<a class=\"id\" href=\"#cleanup\">cleanup</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#EXT2_I\">EXT2_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#xattr_sem\">xattr_sem</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Inode operation listxattr()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * dentry-&gt;d_inode-&gt;i_mutex: don't care</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#ext2_listxattr\">ext2_listxattr</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, char *<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ext2_xattr_list\">ext2_xattr_list</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * If the EXT2_FEATURE_COMPAT_EXT_ATTR feature of this file system is</span>", 
"<span class=\"comment\"> * not set, set it.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#ext2_xattr_update_super_block\">ext2_xattr_update_super_block</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT2_HAS_COMPAT_FEATURE\">EXT2_HAS_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT2_FEATURE_COMPAT_EXT_ATTR\">EXT2_FEATURE_COMPAT_EXT_ATTR</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#EXT2_SB\">EXT2_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_lock\">s_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT2_SET_COMPAT_FEATURE\">EXT2_SET_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT2_FEATURE_COMPAT_EXT_ATTR\">EXT2_FEATURE_COMPAT_EXT_ATTR</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#EXT2_SB\">EXT2_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_lock\">s_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_dirt\">s_dirt</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mark_buffer_dirty\">mark_buffer_dirty</a>(<a class=\"id\" href=\"#EXT2_SB\">EXT2_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_sbh\">s_sbh</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext2_xattr_set()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Create, replace or remove an extended attribute for this inode. Buffer</span>", 
"<span class=\"comment\"> * is NULL to remove an existing extended attribute, and non-NULL to</span>", 
"<span class=\"comment\"> * either replace an existing extended attribute, or create a new extended</span>", 
"<span class=\"comment\"> * attribute. The flags XATTR_REPLACE and XATTR_CREATE</span>", 
"<span class=\"comment\"> * specify that an extended attribute must exist and must not exist</span>", 
"<span class=\"comment\"> * previous to the call, respectively.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0, or a negative error number on failure.</span>", 
"<span class=\"comment\"> */</span>", 
"int", 
"<a class=\"id\" href=\"#ext2_xattr_set\">ext2_xattr_set</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, int <a class=\"id\" href=\"#name_index\">name_index</a>, const char *<a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/>       const void *<a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#value_len\">value_len</a>, int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext2_xattr_header\">ext2_xattr_header</a> *<a class=\"id\" href=\"#header\">header</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext2_xattr_entry\">ext2_xattr_entry</a> *<a class=\"id\" href=\"#here\">here</a>, *<a class=\"id\" href=\"#last\">last</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#name_len\">name_len</a>, <a class=\"id\" href=\"#free\">free</a>, <a class=\"id\" href=\"#min_offs\">min_offs</a> = <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#not_found\">not_found</a> = 1, <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * header -- Points either into bh, or to a temporarily</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *           allocated buffer.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * here -- The named entry found, or the place for inserting, within</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *         the block pointed to by header.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * last -- Points right after the last named entry within the block</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *         pointed to by header.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * min_offs -- The offset of the first value (values are aligned</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *             towards the end of the block).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * end -- Points right after the block pointed to by header.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ea_idebug\">ea_idebug</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"name=%d.%s, value=%p, value_len=%ld\",", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#name_index\">name_index</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#value\">value</a>, (long)<a class=\"id\" href=\"#value_len\">value_len</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#value\">value</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#value_len\">value_len</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#name\">name</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#name_len\">name_len</a> = <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#name_len\">name_len</a> &gt; 255 || <a class=\"id\" href=\"#value_len\">value_len</a> &gt; <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ERANGE\">ERANGE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#EXT2_I\">EXT2_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#xattr_sem\">xattr_sem</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT2_I\">EXT2_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* The inode already has an extended attribute block. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT2_I\">EXT2_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ea_bdebug\">ea_bdebug</a>(<a class=\"id\" href=\"#bh\">bh</a>, \"b_count=%d, refcount=%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;(<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_count\">b_count</a>)),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#HDR\">HDR</a>(<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#h_refcount\">h_refcount</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#header\">header</a> = <a class=\"id\" href=\"#HDR\">HDR</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a> + <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_size\">b_size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#header\">header</a>-><a class=\"id\" href=\"#h_magic\">h_magic</a> != <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#EXT2_XATTR_MAGIC\">EXT2_XATTR_MAGIC</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#header\">header</a>-><a class=\"id\" href=\"#h_blocks\">h_blocks</a> != <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(1)) {", 
"<a class=\"id\" href=\"#bad_block\">bad_block</a>:<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_error\">ext2_error</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"ext2_xattr_set\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"inode %ld: bad block %d\", <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>, ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#EXT2_I\">EXT2_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Find the named attribute. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#here\">here</a> = <a class=\"id\" href=\"#FIRST_ENTRY\">FIRST_ENTRY</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>while (!<a class=\"id\" href=\"#IS_LAST_ENTRY\">IS_LAST_ENTRY</a>(<a class=\"id\" href=\"#here\">here</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext2_xattr_entry\">ext2_xattr_entry</a> *<a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#EXT2_XATTR_NEXT\">EXT2_XATTR_NEXT</a>(<a class=\"id\" href=\"#here\">here</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((char *)<a class=\"id\" href=\"#next\">next</a> >= <a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad_block\">bad_block</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#here\">here</a>-><a class=\"id\" href=\"#e_value_block\">e_value_block</a> && <a class=\"id\" href=\"#here\">here</a>-><a class=\"id\" href=\"#e_value_size\">e_value_size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#offs\">offs</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#here\">here</a>-><a class=\"id\" href=\"#e_value_offs\">e_value_offs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#offs\">offs</a> &lt; <a class=\"id\" href=\"#min_offs\">min_offs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#min_offs\">min_offs</a> = <a class=\"id\" href=\"#offs\">offs</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#not_found\">not_found</a> = <a class=\"id\" href=\"#name_index\">name_index</a> - <a class=\"id\" href=\"#here\">here</a>-><a class=\"id\" href=\"#e_name_index\">e_name_index</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#not_found\">not_found</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#not_found\">not_found</a> = <a class=\"id\" href=\"#name_len\">name_len</a> - <a class=\"id\" href=\"#here\">here</a>-><a class=\"id\" href=\"#e_name_len\">e_name_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#not_found\">not_found</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#not_found\">not_found</a> = <a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#here\">here</a>-><a class=\"id\" href=\"#e_name\">e_name</a>,<a class=\"id\" href=\"#name_len\">name_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#not_found\">not_found</a> <= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#here\">here</a> = <a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#here\">here</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We still need to compute min_offs and last. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>while (!<a class=\"id\" href=\"#IS_LAST_ENTRY\">IS_LAST_ENTRY</a>(<a class=\"id\" href=\"#last\">last</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext2_xattr_entry\">ext2_xattr_entry</a> *<a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#EXT2_XATTR_NEXT\">EXT2_XATTR_NEXT</a>(<a class=\"id\" href=\"#last\">last</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((char *)<a class=\"id\" href=\"#next\">next</a> >= <a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad_block\">bad_block</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#last\">last</a>-><a class=\"id\" href=\"#e_value_block\">e_value_block</a> && <a class=\"id\" href=\"#last\">last</a>-><a class=\"id\" href=\"#e_value_size\">e_value_size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#offs\">offs</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#last\">last</a>-><a class=\"id\" href=\"#e_value_offs\">e_value_offs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#offs\">offs</a> &lt; <a class=\"id\" href=\"#min_offs\">min_offs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#min_offs\">min_offs</a> = <a class=\"id\" href=\"#offs\">offs</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Check whether we have enough space left. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free\">free</a> = <a class=\"id\" href=\"#min_offs\">min_offs</a> - ((char*)<a class=\"id\" href=\"#last\">last</a> - (char*)<a class=\"id\" href=\"#header\">header</a>) - sizeof(<a class=\"id\" href=\"#__u32\">__u32</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We will use a new extended attribute block. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free\">free</a> = <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sizeof(struct <a class=\"id\" href=\"#ext2_xattr_header\">ext2_xattr_header</a>) - sizeof(<a class=\"id\" href=\"#__u32\">__u32</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#here\">here</a> = <a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;  <span class=\"comment\">/* avoid gcc uninitialized warning. */</span>", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#not_found\">not_found</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Request to remove a nonexistent attribute? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENODATA\">ENODATA</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#XATTR_REPLACE\">XATTR_REPLACE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#value\">value</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Request to create an existing attribute? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EEXIST\">EEXIST</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#XATTR_CREATE\">XATTR_CREATE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#here\">here</a>-><a class=\"id\" href=\"#e_value_block\">e_value_block</a> && <a class=\"id\" href=\"#here\">here</a>-><a class=\"id\" href=\"#e_value_size\">e_value_size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#here\">here</a>-><a class=\"id\" href=\"#e_value_size\">e_value_size</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#here\">here</a>-><a class=\"id\" href=\"#e_value_offs\">e_value_offs</a>) + <a class=\"id\" href=\"#size\">size</a> &gt; ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> || <a class=\"id\" href=\"#size\">size</a> &gt; <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad_block\">bad_block</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free\">free</a> += <a class=\"id\" href=\"#EXT2_XATTR_SIZE\">EXT2_XATTR_SIZE</a>(<a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free\">free</a> += <a class=\"id\" href=\"#EXT2_XATTR_LEN\">EXT2_XATTR_LEN</a>(<a class=\"id\" href=\"#name_len\">name_len</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#free\">free</a> &lt; <a class=\"id\" href=\"#EXT2_XATTR_LEN\">EXT2_XATTR_LEN</a>(<a class=\"id\" href=\"#name_len\">name_len</a>) + <a class=\"id\" href=\"#EXT2_XATTR_SIZE\">EXT2_XATTR_SIZE</a>(<a class=\"id\" href=\"#value_len\">value_len</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Here we know that we can set the new attribute. */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#header\">header</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#mb_cache_entry\">mb_cache_entry</a> *<a class=\"id\" href=\"#ce\">ce</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* assert(header == HDR(bh)); */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ce\">ce</a> = <a class=\"id\" href=\"#mb_cache_entry_get\">mb_cache_entry_get</a>(<a class=\"id\" href=\"#ext2_xattr_cache\">ext2_xattr_cache</a>, <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_bdev\">b_bdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_blocknr\">b_blocknr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lock_buffer\">lock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#header\">header</a>-><a class=\"id\" href=\"#h_refcount\">h_refcount</a> == <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(1)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ea_bdebug\">ea_bdebug</a>(<a class=\"id\" href=\"#bh\">bh</a>, \"modifying in-place\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ce\">ce</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mb_cache_entry_free\">mb_cache_entry_free</a>(<a class=\"id\" href=\"#ce\">ce</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* keep the buffer locked while modifying it. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#offset\">offset</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ce\">ce</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mb_cache_entry_release\">mb_cache_entry_release</a>(<a class=\"id\" href=\"#ce\">ce</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_buffer\">unlock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ea_bdebug\">ea_bdebug</a>(<a class=\"id\" href=\"#bh\">bh</a>, \"cloning\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#header\">header</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_size\">b_size</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#header\">header</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#header\">header</a>, <a class=\"id\" href=\"#HDR\">HDR</a>(<a class=\"id\" href=\"#bh\">bh</a>), <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_size\">b_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#header\">header</a>-><a class=\"id\" href=\"#h_refcount\">h_refcount</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(1);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = (char *)<a class=\"id\" href=\"#here\">here</a> - <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#here\">here</a> = <a class=\"id\" href=\"#ENTRY\">ENTRY</a>((char *)<a class=\"id\" href=\"#header\">header</a> + <a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = (char *)<a class=\"id\" href=\"#last\">last</a> - <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#ENTRY\">ENTRY</a>((char *)<a class=\"id\" href=\"#header\">header</a> + <a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Allocate a buffer where we construct the new block. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#header\">header</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#header\">header</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = (char *)<a class=\"id\" href=\"#header\">header</a> + <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#header\">header</a>-><a class=\"id\" href=\"#h_magic\">h_magic</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#EXT2_XATTR_MAGIC\">EXT2_XATTR_MAGIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#header\">header</a>-><a class=\"id\" href=\"#h_blocks\">h_blocks</a> = <a class=\"id\" href=\"#header\">header</a>-><a class=\"id\" href=\"#h_refcount\">h_refcount</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#here\">here</a> = <a class=\"id\" href=\"#ENTRY\">ENTRY</a>(<a class=\"id\" href=\"#header\">header</a>+1);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Iff we are modifying the block in-place, bh is locked here. */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#not_found\">not_found</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Insert the new name. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#EXT2_XATTR_LEN\">EXT2_XATTR_LEN</a>(<a class=\"id\" href=\"#name_len\">name_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#rest\">rest</a> = (char *)<a class=\"id\" href=\"#last\">last</a> - (char *)<a class=\"id\" href=\"#here\">here</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memmove\">memmove</a>((char *)<a class=\"id\" href=\"#here\">here</a> + <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#here\">here</a>, <a class=\"id\" href=\"#rest\">rest</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#here\">here</a>, 0, <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#here\">here</a>-><a class=\"id\" href=\"#e_name_index\">e_name_index</a> = <a class=\"id\" href=\"#name_index\">name_index</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#here\">here</a>-><a class=\"id\" href=\"#e_name_len\">e_name_len</a> = <a class=\"id\" href=\"#name_len\">name_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#here\">here</a>-><a class=\"id\" href=\"#e_name\">e_name</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#name_len\">name_len</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#here\">here</a>-><a class=\"id\" href=\"#e_value_block\">e_value_block</a> && <a class=\"id\" href=\"#here\">here</a>-><a class=\"id\" href=\"#e_value_size\">e_value_size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#first_val\">first_val</a> = (char *)<a class=\"id\" href=\"#header\">header</a> + <a class=\"id\" href=\"#min_offs\">min_offs</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#offs\">offs</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#here\">here</a>-><a class=\"id\" href=\"#e_value_offs\">e_value_offs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#val\">val</a> = (char *)<a class=\"id\" href=\"#header\">header</a> + <a class=\"id\" href=\"#offs\">offs</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#EXT2_XATTR_SIZE\">EXT2_XATTR_SIZE</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#here\">here</a>-><a class=\"id\" href=\"#e_value_size\">e_value_size</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> == <a class=\"id\" href=\"#EXT2_XATTR_SIZE\">EXT2_XATTR_SIZE</a>(<a class=\"id\" href=\"#value_len\">value_len</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* The old and the new value have the same</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   size. Just replace. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#here\">here</a>-><a class=\"id\" href=\"#e_value_size\">e_value_size</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#value_len\">value_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#val\">val</a> + <a class=\"id\" href=\"#size\">size</a> - <a class=\"id\" href=\"#EXT2_XATTR_PAD\">EXT2_XATTR_PAD</a>, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#EXT2_XATTR_PAD\">EXT2_XATTR_PAD</a>); <span class=\"comment\">/* Clear pad bytes. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#value_len\">value_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#skip_replace\">skip_replace</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Remove the old value. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memmove\">memmove</a>(<a class=\"id\" href=\"#first_val\">first_val</a> + <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#first_val\">first_val</a>, <a class=\"id\" href=\"#val\">val</a> - <a class=\"id\" href=\"#first_val\">first_val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#first_val\">first_val</a>, 0, <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#here\">here</a>-><a class=\"id\" href=\"#e_value_offs\">e_value_offs</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#min_offs\">min_offs</a> += <a class=\"id\" href=\"#size\">size</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Adjust all value offsets. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#ENTRY\">ENTRY</a>(<a class=\"id\" href=\"#header\">header</a>+1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>while (!<a class=\"id\" href=\"#IS_LAST_ENTRY\">IS_LAST_ENTRY</a>(<a class=\"id\" href=\"#last\">last</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#o\">o</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#last\">last</a>-><a class=\"id\" href=\"#e_value_offs\">e_value_offs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#last\">last</a>-><a class=\"id\" href=\"#e_value_block\">e_value_block</a> && <a class=\"id\" href=\"#o\">o</a> &lt; <a class=\"id\" href=\"#offs\">offs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a>-><a class=\"id\" href=\"#e_value_offs\">e_value_offs</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#o\">o</a> + <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#EXT2_XATTR_NEXT\">EXT2_XATTR_NEXT</a>(<a class=\"id\" href=\"#last\">last</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#value\">value</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Remove the old name. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#EXT2_XATTR_LEN\">EXT2_XATTR_LEN</a>(<a class=\"id\" href=\"#name_len\">name_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#ENTRY\">ENTRY</a>((char *)<a class=\"id\" href=\"#last\">last</a> - <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memmove\">memmove</a>(<a class=\"id\" href=\"#here\">here</a>, (char*)<a class=\"id\" href=\"#here\">here</a> + <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(char*)<a class=\"id\" href=\"#last\">last</a> - (char*)<a class=\"id\" href=\"#here\">here</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#last\">last</a>, 0, <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#value\">value</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Insert the new value. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#here\">here</a>-><a class=\"id\" href=\"#e_value_size\">e_value_size</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#value_len\">value_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#value_len\">value_len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#EXT2_XATTR_SIZE\">EXT2_XATTR_SIZE</a>(<a class=\"id\" href=\"#value_len\">value_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#val\">val</a> = (char *)<a class=\"id\" href=\"#header\">header</a> + <a class=\"id\" href=\"#min_offs\">min_offs</a> - <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#here\">here</a>-><a class=\"id\" href=\"#e_value_offs\">e_value_offs</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>((char *)<a class=\"id\" href=\"#val\">val</a> - (char *)<a class=\"id\" href=\"#header\">header</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#val\">val</a> + <a class=\"id\" href=\"#size\">size</a> - <a class=\"id\" href=\"#EXT2_XATTR_PAD\">EXT2_XATTR_PAD</a>, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#EXT2_XATTR_PAD\">EXT2_XATTR_PAD</a>); <span class=\"comment\">/* Clear the pad bytes. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#value_len\">value_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#skip_replace\">skip_replace</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_LAST_ENTRY\">IS_LAST_ENTRY</a>(<a class=\"id\" href=\"#ENTRY\">ENTRY</a>(<a class=\"id\" href=\"#header\">header</a>+1))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* This block is now empty. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#bh\">bh</a> && <a class=\"id\" href=\"#header\">header</a> == <a class=\"id\" href=\"#HDR\">HDR</a>(<a class=\"id\" href=\"#bh\">bh</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_buffer\">unlock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);  <span class=\"comment\">/* we were modifying in-place. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext2_xattr_set2\">ext2_xattr_set2</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#bh\">bh</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_xattr_rehash\">ext2_xattr_rehash</a>(<a class=\"id\" href=\"#header\">header</a>, <a class=\"id\" href=\"#here\">here</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#bh\">bh</a> && <a class=\"id\" href=\"#header\">header</a> == <a class=\"id\" href=\"#HDR\">HDR</a>(<a class=\"id\" href=\"#bh\">bh</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_buffer\">unlock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);  <span class=\"comment\">/* we were modifying in-place. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext2_xattr_set2\">ext2_xattr_set2</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#bh\">bh</a>, <a class=\"id\" href=\"#header\">header</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#cleanup\">cleanup</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#bh\">bh</a> && <a class=\"id\" href=\"#header\">header</a> == <a class=\"id\" href=\"#HDR\">HDR</a>(<a class=\"id\" href=\"#bh\">bh</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#header\">header</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#EXT2_I\">EXT2_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#xattr_sem\">xattr_sem</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Second half of ext2_xattr_set(): Update the file system.</span>", 
"<span class=\"comment\"> */</span>", 
"static int", 
"<a class=\"id\" href=\"#ext2_xattr_set2\">ext2_xattr_set2</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#old_bh\">old_bh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext2_xattr_header\">ext2_xattr_header</a> *<a class=\"id\" href=\"#header\">header</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#new_bh\">new_bh</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#header\">header</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_bh\">new_bh</a> = <a class=\"id\" href=\"#ext2_xattr_cache_find\">ext2_xattr_cache_find</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#header\">header</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#new_bh\">new_bh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We found an identical block in the cache. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#new_bh\">new_bh</a> == <a class=\"id\" href=\"#old_bh\">old_bh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ea_bdebug\">ea_bdebug</a>(<a class=\"id\" href=\"#new_bh\">new_bh</a>, \"keeping this block\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* The old block is released after updating</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   the inode.  */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ea_bdebug\">ea_bdebug</a>(<a class=\"id\" href=\"#new_bh\">new_bh</a>, \"reusing block\");", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#dquot_alloc_block\">dquot_alloc_block</a>(<a class=\"id\" href=\"#inode\">inode</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_buffer\">unlock_buffer</a>(<a class=\"id\" href=\"#new_bh\">new_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_add_cpu\">le32_add_cpu</a>(&amp;<a class=\"id\" href=\"#HDR\">HDR</a>(<a class=\"id\" href=\"#new_bh\">new_bh</a>)-><a class=\"id\" href=\"#h_refcount\">h_refcount</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ea_bdebug\">ea_bdebug</a>(<a class=\"id\" href=\"#new_bh\">new_bh</a>, \"refcount now=%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#HDR\">HDR</a>(<a class=\"id\" href=\"#new_bh\">new_bh</a>)-><a class=\"id\" href=\"#h_refcount\">h_refcount</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_buffer\">unlock_buffer</a>(<a class=\"id\" href=\"#new_bh\">new_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#old_bh\">old_bh</a> && <a class=\"id\" href=\"#header\">header</a> == <a class=\"id\" href=\"#HDR\">HDR</a>(<a class=\"id\" href=\"#old_bh\">old_bh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Keep this block. No need to lock the block as we</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   don't need to change the reference count. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_bh\">new_bh</a> = <a class=\"id\" href=\"#old_bh\">old_bh</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_bh\">get_bh</a>(<a class=\"id\" href=\"#new_bh\">new_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_xattr_cache_insert\">ext2_xattr_cache_insert</a>(<a class=\"id\" href=\"#new_bh\">new_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We need to allocate a new block */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_fsblk_t\">ext2_fsblk_t</a> <a class=\"id\" href=\"#goal\">goal</a> = <a class=\"id\" href=\"#ext2_group_first_block_no\">ext2_group_first_block_no</a>(<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT2_I\">EXT2_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_block_group\">i_block_group</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#block\">block</a> = <a class=\"id\" href=\"#ext2_new_block\">ext2_new_block</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#goal\">goal</a>, &amp;<a class=\"id\" href=\"#error\">error</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ea_idebug\">ea_idebug</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"creating block %d\", <a class=\"id\" href=\"#block\">block</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_bh\">new_bh</a> = <a class=\"id\" href=\"#sb_getblk\">sb_getblk</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#block\">block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#new_bh\">new_bh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_free_blocks\">ext2_free_blocks</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#block\">block</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mark_inode_dirty\">mark_inode_dirty</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lock_buffer\">lock_buffer</a>(<a class=\"id\" href=\"#new_bh\">new_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#new_bh\">new_bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>, <a class=\"id\" href=\"#header\">header</a>, <a class=\"id\" href=\"#new_bh\">new_bh</a>-><a class=\"id\" href=\"#b_size\">b_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_buffer_uptodate\">set_buffer_uptodate</a>(<a class=\"id\" href=\"#new_bh\">new_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_buffer\">unlock_buffer</a>(<a class=\"id\" href=\"#new_bh\">new_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_xattr_cache_insert\">ext2_xattr_cache_insert</a>(<a class=\"id\" href=\"#new_bh\">new_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_xattr_update_super_block\">ext2_xattr_update_super_block</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mark_buffer_dirty\">mark_buffer_dirty</a>(<a class=\"id\" href=\"#new_bh\">new_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_SYNC\">IS_SYNC</a>(<a class=\"id\" href=\"#inode\">inode</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sync_dirty_buffer\">sync_dirty_buffer</a>(<a class=\"id\" href=\"#new_bh\">new_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#buffer_req\">buffer_req</a>(<a class=\"id\" href=\"#new_bh\">new_bh</a>) && !<a class=\"id\" href=\"#buffer_uptodate\">buffer_uptodate</a>(<a class=\"id\" href=\"#new_bh\">new_bh</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Update the inode. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT2_I\">EXT2_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a> = <a class=\"id\" href=\"#new_bh\">new_bh</a> ? <a class=\"id\" href=\"#new_bh\">new_bh</a>-><a class=\"id\" href=\"#b_blocknr\">b_blocknr</a> : 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ctime\">i_ctime</a> = <a class=\"id\" href=\"#CURRENT_TIME_SEC\">CURRENT_TIME_SEC</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_SYNC\">IS_SYNC</a>(<a class=\"id\" href=\"#inode\">inode</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext2_sync_inode\">ext2_sync_inode</a> (<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* In case sync failed due to ENOSPC the inode was actually</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * written (only some dirty data were not) so we just proceed</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * as if nothing happened and cleanup the unused block */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> && <a class=\"id\" href=\"#error\">error</a> != -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#new_bh\">new_bh</a> && <a class=\"id\" href=\"#new_bh\">new_bh</a> != <a class=\"id\" href=\"#old_bh\">old_bh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dquot_free_block_nodirty\">dquot_free_block_nodirty</a>(<a class=\"id\" href=\"#inode\">inode</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mark_inode_dirty\">mark_inode_dirty</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
];
xr_frag_insert('l/69/185d427984aa14681c608b2e9068e252af66c8.xr', __xr_tmp);
