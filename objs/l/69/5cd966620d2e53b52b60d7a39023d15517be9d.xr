var __xr_tmp = [
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#hugetlb\">hugetlb</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mount\">mount</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#highmem\">highmem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ptrace\">ptrace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pagemap\">pagemap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mempolicy\">mempolicy</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#swap\">swap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#swapops\">swapops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#elf\">elf</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#tlbflush\">tlbflush</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"internal.h\"", 
"", 
"void <a class=\"id\" href=\"#task_mem\">task_mem</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#text\">text</a>, <a class=\"id\" href=\"#lib\">lib</a>, <a class=\"id\" href=\"#swap\">swap</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#hiwater_vm\">hiwater_vm</a>, <a class=\"id\" href=\"#total_vm\">total_vm</a>, <a class=\"id\" href=\"#hiwater_rss\">hiwater_rss</a>, <a class=\"id\" href=\"#total_rss\">total_rss</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Note: to minimize their overhead, mm maintains hiwater_vm and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * hiwater_rss only when about to *lower* total_vm or rss.  Any</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * collector of these hiwater stats must therefore get total_vm</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and rss too, which will usually be the higher.  Barriers? not</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * worth the effort, such snapshots can always be inconsistent.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hiwater_vm\">hiwater_vm</a> = <a class=\"id\" href=\"#total_vm\">total_vm</a> = <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#total_vm\">total_vm</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hiwater_vm\">hiwater_vm</a> &lt; <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#hiwater_vm\">hiwater_vm</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hiwater_vm\">hiwater_vm</a> = <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#hiwater_vm\">hiwater_vm</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hiwater_rss\">hiwater_rss</a> = <a class=\"id\" href=\"#total_rss\">total_rss</a> = <a class=\"id\" href=\"#get_mm_rss\">get_mm_rss</a>(<a class=\"id\" href=\"#mm\">mm</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hiwater_rss\">hiwater_rss</a> &lt; <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#hiwater_rss\">hiwater_rss</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hiwater_rss\">hiwater_rss</a> = <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#hiwater_rss\">hiwater_rss</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#total_vm\">total_vm</a> - <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#shared_vm\">shared_vm</a> - <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#stack_vm\">stack_vm</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#text\">text</a> = (<a class=\"id\" href=\"#PAGE_ALIGN\">PAGE_ALIGN</a>(<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#end_code\">end_code</a>) - (<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#start_code\">start_code</a> &amp; <a class=\"id\" href=\"#PAGE_MASK\">PAGE_MASK</a>)) >> 10;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lib\">lib</a> = (<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#exec_vm\">exec_vm</a> << (<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>-10)) - <a class=\"id\" href=\"#text\">text</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#swap\">swap</a> = <a class=\"id\" href=\"#get_mm_counter\">get_mm_counter</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#MM_SWAPENTS\">MM_SWAPENTS</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>\"VmPeak:\\t%8lu kB\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"VmSize:\\t%8lu kB\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"VmLck:\\t%8lu kB\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"VmHWM:\\t%8lu kB\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"VmRSS:\\t%8lu kB\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"VmData:\\t%8lu kB\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"VmStk:\\t%8lu kB\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"VmExe:\\t%8lu kB\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"VmLib:\\t%8lu kB\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"VmPTE:\\t%8lu kB\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"VmSwap:\\t%8lu kB\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hiwater_vm\">hiwater_vm</a> << (<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>-10),", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#total_vm\">total_vm</a> - <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#reserved_vm\">reserved_vm</a>) << (<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>-10),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#locked_vm\">locked_vm</a> << (<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>-10),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hiwater_rss\">hiwater_rss</a> << (<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>-10),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#total_rss\">total_rss</a> << (<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>-10),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> << (<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>-10),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#stack_vm\">stack_vm</a> << (<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>-10), <a class=\"id\" href=\"#text\">text</a>, <a class=\"id\" href=\"#lib\">lib</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#PTRS_PER_PTE\">PTRS_PER_PTE</a>*sizeof(<a class=\"id\" href=\"#pte_t\">pte_t</a>)*<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#nr_ptes\">nr_ptes</a>) >> 10,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#swap\">swap</a> << (<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>-10));", 
"}", 
"", 
"unsigned long <a class=\"id\" href=\"#task_vsize\">task_vsize</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> * <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#total_vm\">total_vm</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#task_statm\">task_statm</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>, int *<a class=\"id\" href=\"#shared\">shared</a>, int *<a class=\"id\" href=\"#text\">text</a>,", 
"<span class=\"ts\"/>       int *<a class=\"id\" href=\"#data\">data</a>, int *<a class=\"id\" href=\"#resident\">resident</a>)", 
"{", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#shared\">shared</a> = <a class=\"id\" href=\"#get_mm_counter\">get_mm_counter</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#MM_FILEPAGES\">MM_FILEPAGES</a>);", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#text\">text</a> = (<a class=\"id\" href=\"#PAGE_ALIGN\">PAGE_ALIGN</a>(<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#end_code\">end_code</a>) - (<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#start_code\">start_code</a> &amp; <a class=\"id\" href=\"#PAGE_MASK\">PAGE_MASK</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>>> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#total_vm\">total_vm</a> - <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#shared_vm\">shared_vm</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#resident\">resident</a> = *<a class=\"id\" href=\"#shared\">shared</a> + <a class=\"id\" href=\"#get_mm_counter\">get_mm_counter</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#MM_ANONPAGES\">MM_ANONPAGES</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#total_vm\">total_vm</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#pad_len_spaces\">pad_len_spaces</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = 25 + sizeof(void*) * 6 - <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &lt; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"%*c\", <a class=\"id\" href=\"#len\">len</a>, ' ');", 
"}", 
"", 
"static void <a class=\"id\" href=\"#vma_stop\">vma_stop</a>(struct <a class=\"id\" href=\"#proc_maps_private\">proc_maps_private</a> *<a class=\"id\" href=\"#priv\">priv</a>, struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vma\">vma</a> && <a class=\"id\" href=\"#vma\">vma</a> != <a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#tail_vma\">tail_vma</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_mm\">vm_mm</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#mmap_sem\">mmap_sem</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mmput\">mmput</a>(<a class=\"id\" href=\"#mm\">mm</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#m_start\">m_start</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proc_maps_private\">proc_maps_private</a> *<a class=\"id\" href=\"#priv\">priv</a> = <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#last_addr\">last_addr</a> = <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#version\">version</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>, *<a class=\"id\" href=\"#tail_vma\">tail_vma</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#l\">l</a> = *<a class=\"id\" href=\"#pos\">pos</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Clear the per syscall fields in priv */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#tail_vma\">tail_vma</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We remember last_addr rather than next_addr to hit with</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * mmap_cache most of the time. We have zero last_addr at</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the beginning and also after lseek. We will have -1 last_addr</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * after the end of the vmas.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#last_addr\">last_addr</a> == -1UL)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#get_pid_task\">get_pid_task</a>(<a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#PIDTYPE_PID\">PIDTYPE_PID</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#task\">task</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a> = <a class=\"id\" href=\"#mm_for_maps\">mm_for_maps</a>(<a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mm\">mm</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#mmap_sem\">mmap_sem</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tail_vma\">tail_vma</a> = <a class=\"id\" href=\"#get_gate_vma\">get_gate_vma</a>(<a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#tail_vma\">tail_vma</a> = <a class=\"id\" href=\"#tail_vma\">tail_vma</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Start with last addr hint */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#find_vma\">find_vma</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#last_addr\">last_addr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#last_addr\">last_addr</a> && <a class=\"id\" href=\"#vma\">vma</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_next\">vm_next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Check the vma index is within the range and do</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * sequential scan until m_index.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>if ((unsigned long)<a class=\"id\" href=\"#l\">l</a> &lt; <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#map_count\">map_count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#mmap\">mmap</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#l\">l</a>-- && <a class=\"id\" href=\"#vma\">vma</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_next\">vm_next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#l\">l</a> != <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#map_count\">map_count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tail_vma\">tail_vma</a> = <a class=\"id\" href=\"#NULL\">NULL</a>; <span class=\"comment\">/* After gate vma */</span>", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vma\">vma</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#vma\">vma</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* End of vmas has been reached */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#version\">version</a> = (<a class=\"id\" href=\"#tail_vma\">tail_vma</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)? 0: -1UL;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#mmap_sem\">mmap_sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mmput\">mmput</a>(<a class=\"id\" href=\"#mm\">mm</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tail_vma\">tail_vma</a>;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#m_next\">m_next</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proc_maps_private\">proc_maps_private</a> *<a class=\"id\" href=\"#priv\">priv</a> = <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#tail_vma\">tail_vma</a> = <a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#tail_vma\">tail_vma</a>;", 
"", 
"<span class=\"ts\"/>(*<a class=\"id\" href=\"#pos\">pos</a>)++;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vma\">vma</a> && (<a class=\"id\" href=\"#vma\">vma</a> != <a class=\"id\" href=\"#tail_vma\">tail_vma</a>) && <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_next\">vm_next</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_next\">vm_next</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vma_stop\">vma_stop</a>(<a class=\"id\" href=\"#priv\">priv</a>, <a class=\"id\" href=\"#vma\">vma</a>);", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#vma\">vma</a> != <a class=\"id\" href=\"#tail_vma\">tail_vma</a>)? <a class=\"id\" href=\"#tail_vma\">tail_vma</a>: <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#m_stop\">m_stop</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proc_maps_private\">proc_maps_private</a> *<a class=\"id\" href=\"#priv\">priv</a> = <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#v\">v</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vma_stop\">vma_stop</a>(<a class=\"id\" href=\"#priv\">priv</a>, <a class=\"id\" href=\"#vma\">vma</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#task\">task</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#task\">task</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#do_maps_open\">do_maps_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> *<a class=\"id\" href=\"#ops\">ops</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proc_maps_private\">proc_maps_private</a> *<a class=\"id\" href=\"#priv\">priv</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#priv\">priv</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#priv\">priv</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#priv\">priv</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#pid\">pid</a> = <a class=\"id\" href=\"#proc_pid\">proc_pid</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#seq_open\">seq_open</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#ops\">ops</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#private\">private</a> = <a class=\"id\" href=\"#priv\">priv</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#priv\">priv</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#show_map_vma\">show_map_vma</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_mm\">vm_mm</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_file\">vm_file</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_flags\">vm_flags</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#ino\">ino</a> = 0;", 
"<span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#pgoff\">pgoff</a> = 0;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start\">start</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#dev\">dev</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#file\">file</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_file\">vm_file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_dev\">s_dev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ino\">ino</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pgoff\">pgoff</a> = ((<a class=\"id\" href=\"#loff_t\">loff_t</a>)<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_pgoff\">vm_pgoff</a>) << <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We don't show the stack guard page in /proc/maps */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_flags\">vm_flags</a> &amp; <a class=\"id\" href=\"#VM_GROWSDOWN\">VM_GROWSDOWN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#vma_stack_continue\">vma_stack_continue</a>(<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_prev\">vm_prev</a>, <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> += <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"%08lx-%08lx %c%c%c%c %08llx %02x:%02x %lu %n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_end\">vm_end</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#VM_READ\">VM_READ</a> ? 'r' : '-',", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#VM_WRITE\">VM_WRITE</a> ? 'w' : '-',", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#VM_EXEC\">VM_EXEC</a> ? 'x' : '-',", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#VM_MAYSHARE\">VM_MAYSHARE</a> ? 's' : 'p',", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pgoff\">pgoff</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#MAJOR\">MAJOR</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#MINOR\">MINOR</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#ino\">ino</a>, &amp;<a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Print the dentry name for named mappings, and a</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * special [heap] marker for the heap:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#file\">file</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pad_len_spaces\">pad_len_spaces</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_path\">seq_path</a>(<a class=\"id\" href=\"#m\">m</a>, &amp;<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>, \"\\n\");", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>const char *<a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#arch_vma_name\">arch_vma_name</a>(<a class=\"id\" href=\"#vma\">vma</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#name\">name</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mm\">mm</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a> <= <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#start_brk\">start_brk</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_end\">vm_end</a> >= <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#brk\">brk</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a> = \"[heap]\";", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a> <= <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#start_stack\">start_stack</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_end\">vm_end</a> >= <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#start_stack\">start_stack</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a> = \"[stack]\";", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a> = \"[vdso]\";", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#name\">name</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pad_len_spaces\">pad_len_spaces</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_putc\">seq_putc</a>(<a class=\"id\" href=\"#m\">m</a>, '\\n');", 
"}", 
"", 
"static int <a class=\"id\" href=\"#show_map\">show_map</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proc_maps_private\">proc_maps_private</a> *<a class=\"id\" href=\"#priv\">priv</a> = <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#task\">task</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#show_map_vma\">show_map_vma</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#vma\">vma</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#count\">count</a> &lt; <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#size\">size</a>)  <span class=\"comment\">/* vma is copied successfully */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#version\">version</a> = (<a class=\"id\" href=\"#vma\">vma</a> != <a class=\"id\" href=\"#get_gate_vma\">get_gate_vma</a>(<a class=\"id\" href=\"#task\">task</a>))? <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a>: 0;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> <a class=\"id\" href=\"#proc_pid_maps_op\">proc_pid_maps_op</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a><span class=\"ts\"/>= <a class=\"id\" href=\"#m_start\">m_start</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#next\">next</a><span class=\"ts\"/>= <a class=\"id\" href=\"#m_next\">m_next</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a><span class=\"ts\"/>= <a class=\"id\" href=\"#m_stop\">m_stop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a><span class=\"ts\"/>= <a class=\"id\" href=\"#show_map\">show_map</a>", 
"};", 
"", 
"static int <a class=\"id\" href=\"#maps_open\">maps_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#do_maps_open\">do_maps_open</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#proc_pid_maps_op\">proc_pid_maps_op</a>);", 
"}", 
"", 
"const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#proc_maps_operations\">proc_maps_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#maps_open\">maps_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_release_private\">seq_release_private</a>,", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Proportional Set Size(PSS): my share of RSS.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PSS of a process is the count of pages it has in memory, where each</span>", 
"<span class=\"comment\"> * page is divided by the number of processes sharing it.  So if a</span>", 
"<span class=\"comment\"> * process has 1000 pages all to itself, and 1000 shared with one other</span>", 
"<span class=\"comment\"> * process, its PSS will be 1500.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * To keep (accumulated) division errors low, we adopt a 64bit</span>", 
"<span class=\"comment\"> * fixed-point pss counter to minimize division errors. So (pss &gt;&gt;</span>", 
"<span class=\"comment\"> * PSS_SHIFT) would be the real byte count.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * A shift of 12 before division means (assuming 4K page size):</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>- 1M 3-user-pages add up to 8KB errors;</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>- supports mapcount up to 2^24, or 16M;</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>- supports PSS up to 2^52 bytes, or 4PB.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PSS_SHIFT\">PSS_SHIFT</a> 12", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROC_PAGE_MONITOR\">CONFIG_PROC_PAGE_MONITOR</a>", 
"struct <a class=\"id\" href=\"#mem_size_stats\">mem_size_stats</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#resident\">resident</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#shared_clean\">shared_clean</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#shared_dirty\">shared_dirty</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#private_clean\">private_clean</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#private_dirty\">private_dirty</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#referenced\">referenced</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#swap\">swap</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#pss\">pss</a>;", 
"};", 
"", 
"static int <a class=\"id\" href=\"#smaps_pte_range\">smaps_pte_range</a>(<a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#pmd\">pmd</a>, unsigned long <a class=\"id\" href=\"#addr\">addr</a>, unsigned long <a class=\"id\" href=\"#end\">end</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#mm_walk\">mm_walk</a> *<a class=\"id\" href=\"#walk\">walk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mem_size_stats\">mem_size_stats</a> *<a class=\"id\" href=\"#mss\">mss</a> = <a class=\"id\" href=\"#walk\">walk</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#mss\">mss</a>-><a class=\"id\" href=\"#vma\">vma</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#pte\">pte</a>, <a class=\"id\" href=\"#ptent\">ptent</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> *<a class=\"id\" href=\"#ptl\">ptl</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#mapcount\">mapcount</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte\">pte</a> = <a class=\"id\" href=\"#pte_offset_map_lock\">pte_offset_map_lock</a>(<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_mm\">vm_mm</a>, <a class=\"id\" href=\"#pmd\">pmd</a>, <a class=\"id\" href=\"#addr\">addr</a>, &amp;<a class=\"id\" href=\"#ptl\">ptl</a>);", 
"<span class=\"ts\"/>for (; <a class=\"id\" href=\"#addr\">addr</a> != <a class=\"id\" href=\"#end\">end</a>; <a class=\"id\" href=\"#pte\">pte</a>++, <a class=\"id\" href=\"#addr\">addr</a> += <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ptent\">ptent</a> = *<a class=\"id\" href=\"#pte\">pte</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#is_swap_pte\">is_swap_pte</a>(<a class=\"id\" href=\"#ptent\">ptent</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mss\">mss</a>-><a class=\"id\" href=\"#swap\">swap</a> += <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pte_present\">pte_present</a>(<a class=\"id\" href=\"#ptent\">ptent</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#vm_normal_page\">vm_normal_page</a>(<a class=\"id\" href=\"#vma\">vma</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#ptent\">ptent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#page\">page</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mss\">mss</a>-><a class=\"id\" href=\"#resident\">resident</a> += <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Accumulate the size in pages that have been accessed. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pte_young\">pte_young</a>(<a class=\"id\" href=\"#ptent\">ptent</a>) || <a class=\"id\" href=\"#PageReferenced\">PageReferenced</a>(<a class=\"id\" href=\"#page\">page</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mss\">mss</a>-><a class=\"id\" href=\"#referenced\">referenced</a> += <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mapcount\">mapcount</a> = <a class=\"id\" href=\"#page_mapcount\">page_mapcount</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mapcount\">mapcount</a> >= 2) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pte_dirty\">pte_dirty</a>(<a class=\"id\" href=\"#ptent\">ptent</a>) || <a class=\"id\" href=\"#PageDirty\">PageDirty</a>(<a class=\"id\" href=\"#page\">page</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mss\">mss</a>-><a class=\"id\" href=\"#shared_dirty\">shared_dirty</a> += <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mss\">mss</a>-><a class=\"id\" href=\"#shared_clean\">shared_clean</a> += <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mss\">mss</a>-><a class=\"id\" href=\"#pss\">pss</a> += (<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> << <a class=\"id\" href=\"#PSS_SHIFT\">PSS_SHIFT</a>) / <a class=\"id\" href=\"#mapcount\">mapcount</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pte_dirty\">pte_dirty</a>(<a class=\"id\" href=\"#ptent\">ptent</a>) || <a class=\"id\" href=\"#PageDirty\">PageDirty</a>(<a class=\"id\" href=\"#page\">page</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mss\">mss</a>-><a class=\"id\" href=\"#private_dirty\">private_dirty</a> += <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mss\">mss</a>-><a class=\"id\" href=\"#private_clean\">private_clean</a> += <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mss\">mss</a>-><a class=\"id\" href=\"#pss\">pss</a> += (<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> << <a class=\"id\" href=\"#PSS_SHIFT\">PSS_SHIFT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte_unmap_unlock\">pte_unmap_unlock</a>(<a class=\"id\" href=\"#pte\">pte</a> - 1, <a class=\"id\" href=\"#ptl\">ptl</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cond_resched\">cond_resched</a>();", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#show_smap\">show_smap</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proc_maps_private\">proc_maps_private</a> *<a class=\"id\" href=\"#priv\">priv</a> = <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#task\">task</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mem_size_stats\">mem_size_stats</a> <a class=\"id\" href=\"#mss\">mss</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_walk\">mm_walk</a> <a class=\"id\" href=\"#smaps_walk\">smaps_walk</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#pmd_entry\">pmd_entry</a> = <a class=\"id\" href=\"#smaps_pte_range\">smaps_pte_range</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#mm\">mm</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_mm\">vm_mm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#private\">private</a> = &amp;<a class=\"id\" href=\"#mss\">mss</a>,", 
"<span class=\"ts\"/>};", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#mss\">mss</a>, 0, sizeof <a class=\"id\" href=\"#mss\">mss</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mss\">mss</a>.<a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#vma\">vma</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* mmap_sem is held in m_start */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_mm\">vm_mm</a> && !<a class=\"id\" href=\"#is_vm_hugetlb_page\">is_vm_hugetlb_page</a>(<a class=\"id\" href=\"#vma\">vma</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#walk_page_range\">walk_page_range</a>(<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a>, <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_end\">vm_end</a>, &amp;<a class=\"id\" href=\"#smaps_walk\">smaps_walk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#show_map_vma\">show_map_vma</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#vma\">vma</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"Size:           %8lu kB\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"Rss:            %8lu kB\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"Pss:            %8lu kB\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"Shared_Clean:   %8lu kB\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"Shared_Dirty:   %8lu kB\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"Private_Clean:  %8lu kB\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"Private_Dirty:  %8lu kB\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"Referenced:     %8lu kB\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"Swap:           %8lu kB\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"KernelPageSize: %8lu kB\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"MMUPageSize:    %8lu kB\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>   (<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_end\">vm_end</a> - <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a>) >> 10,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#mss\">mss</a>.<a class=\"id\" href=\"#resident\">resident</a> >> 10,", 
"<span class=\"ts\"/><span class=\"ts\"/>   (unsigned long)(<a class=\"id\" href=\"#mss\">mss</a>.<a class=\"id\" href=\"#pss\">pss</a> >> (10 + <a class=\"id\" href=\"#PSS_SHIFT\">PSS_SHIFT</a>)),", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#mss\">mss</a>.<a class=\"id\" href=\"#shared_clean\">shared_clean</a>  >> 10,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#mss\">mss</a>.<a class=\"id\" href=\"#shared_dirty\">shared_dirty</a>  >> 10,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#mss\">mss</a>.<a class=\"id\" href=\"#private_clean\">private_clean</a> >> 10,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#mss\">mss</a>.<a class=\"id\" href=\"#private_dirty\">private_dirty</a> >> 10,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#mss\">mss</a>.<a class=\"id\" href=\"#referenced\">referenced</a> >> 10,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#mss\">mss</a>.<a class=\"id\" href=\"#swap\">swap</a> >> 10,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#vma_kernel_pagesize\">vma_kernel_pagesize</a>(<a class=\"id\" href=\"#vma\">vma</a>) >> 10,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#vma_mmu_pagesize\">vma_mmu_pagesize</a>(<a class=\"id\" href=\"#vma\">vma</a>) >> 10);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#count\">count</a> &lt; <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#size\">size</a>)  <span class=\"comment\">/* vma is copied successfully */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#version\">version</a> = (<a class=\"id\" href=\"#vma\">vma</a> != <a class=\"id\" href=\"#get_gate_vma\">get_gate_vma</a>(<a class=\"id\" href=\"#task\">task</a>)) ? <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a> : 0;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> <a class=\"id\" href=\"#proc_pid_smaps_op\">proc_pid_smaps_op</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a><span class=\"ts\"/>= <a class=\"id\" href=\"#m_start\">m_start</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#next\">next</a><span class=\"ts\"/>= <a class=\"id\" href=\"#m_next\">m_next</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a><span class=\"ts\"/>= <a class=\"id\" href=\"#m_stop\">m_stop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a><span class=\"ts\"/>= <a class=\"id\" href=\"#show_smap\">show_smap</a>", 
"};", 
"", 
"static int <a class=\"id\" href=\"#smaps_open\">smaps_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#do_maps_open\">do_maps_open</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#proc_pid_smaps_op\">proc_pid_smaps_op</a>);", 
"}", 
"", 
"const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#proc_smaps_operations\">proc_smaps_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#smaps_open\">smaps_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_release_private\">seq_release_private</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#clear_refs_pte_range\">clear_refs_pte_range</a>(<a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#pmd\">pmd</a>, unsigned long <a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#end\">end</a>, struct <a class=\"id\" href=\"#mm_walk\">mm_walk</a> *<a class=\"id\" href=\"#walk\">walk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#walk\">walk</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#pte\">pte</a>, <a class=\"id\" href=\"#ptent\">ptent</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> *<a class=\"id\" href=\"#ptl\">ptl</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte\">pte</a> = <a class=\"id\" href=\"#pte_offset_map_lock\">pte_offset_map_lock</a>(<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_mm\">vm_mm</a>, <a class=\"id\" href=\"#pmd\">pmd</a>, <a class=\"id\" href=\"#addr\">addr</a>, &amp;<a class=\"id\" href=\"#ptl\">ptl</a>);", 
"<span class=\"ts\"/>for (; <a class=\"id\" href=\"#addr\">addr</a> != <a class=\"id\" href=\"#end\">end</a>; <a class=\"id\" href=\"#pte\">pte</a>++, <a class=\"id\" href=\"#addr\">addr</a> += <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ptent\">ptent</a> = *<a class=\"id\" href=\"#pte\">pte</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pte_present\">pte_present</a>(<a class=\"id\" href=\"#ptent\">ptent</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#vm_normal_page\">vm_normal_page</a>(<a class=\"id\" href=\"#vma\">vma</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#ptent\">ptent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#page\">page</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Clear accessed and referenced bits. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ptep_test_and_clear_young\">ptep_test_and_clear_young</a>(<a class=\"id\" href=\"#vma\">vma</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#pte\">pte</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ClearPageReferenced\">ClearPageReferenced</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte_unmap_unlock\">pte_unmap_unlock</a>(<a class=\"id\" href=\"#pte\">pte</a> - 1, <a class=\"id\" href=\"#ptl\">ptl</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cond_resched\">cond_resched</a>();", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CLEAR_REFS_ALL\">CLEAR_REFS_ALL</a> 1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CLEAR_REFS_ANON\">CLEAR_REFS_ANON</a> 2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CLEAR_REFS_MAPPED\">CLEAR_REFS_MAPPED</a> 3", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#clear_refs_write\">clear_refs_write</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#PROC_NUMBUF\">PROC_NUMBUF</a>];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#type\">type</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, 0, sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> &gt; sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>) - 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>) - 1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#strict_strtol\">strict_strtol</a>(<a class=\"id\" href=\"#strstrip\">strstrip</a>(<a class=\"id\" href=\"#buffer\">buffer</a>), 10, &amp;<a class=\"id\" href=\"#type\">type</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> &lt; <a class=\"id\" href=\"#CLEAR_REFS_ALL\">CLEAR_REFS_ALL</a> || <a class=\"id\" href=\"#type\">type</a> &gt; <a class=\"id\" href=\"#CLEAR_REFS_MAPPED\">CLEAR_REFS_MAPPED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#get_proc_task\">get_proc_task</a>(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#task\">task</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a> = <a class=\"id\" href=\"#get_task_mm\">get_task_mm</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mm\">mm</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_walk\">mm_walk</a> <a class=\"id\" href=\"#clear_refs_walk\">clear_refs_walk</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#pmd_entry\">pmd_entry</a> = <a class=\"id\" href=\"#clear_refs_pte_range\">clear_refs_pte_range</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#mm\">mm</a> = <a class=\"id\" href=\"#mm\">mm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>};", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#mmap_sem\">mmap_sem</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#mmap\">mmap</a>; <a class=\"id\" href=\"#vma\">vma</a>; <a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_next\">vm_next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_refs_walk\">clear_refs_walk</a>.<a class=\"id\" href=\"#private\">private</a> = <a class=\"id\" href=\"#vma\">vma</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#is_vm_hugetlb_page\">is_vm_hugetlb_page</a>(<a class=\"id\" href=\"#vma\">vma</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Writing 1 to /proc/pid/clear_refs affects all pages.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Writing 2 to /proc/pid/clear_refs only affects</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Anonymous pages.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Writing 3 to /proc/pid/clear_refs only affects file</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * mapped pages.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#CLEAR_REFS_ANON\">CLEAR_REFS_ANON</a> && <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_file\">vm_file</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#CLEAR_REFS_MAPPED\">CLEAR_REFS_MAPPED</a> && !<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_file\">vm_file</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#walk_page_range\">walk_page_range</a>(<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a>, <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_end\">vm_end</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#clear_refs_walk\">clear_refs_walk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flush_tlb_mm\">flush_tlb_mm</a>(<a class=\"id\" href=\"#mm\">mm</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#mmap_sem\">mmap_sem</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mmput\">mmput</a>(<a class=\"id\" href=\"#mm\">mm</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#proc_clear_refs_operations\">proc_clear_refs_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write\">write</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#clear_refs_write\">clear_refs_write</a>,", 
"};", 
"", 
"struct <a class=\"id\" href=\"#pagemapread\">pagemapread</a> {", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> *<a class=\"id\" href=\"#buffer\">buffer</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PM_ENTRY_BYTES\">PM_ENTRY_BYTES</a>      sizeof(<a class=\"id\" href=\"#u64\">u64</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PM_STATUS_BITS\">PM_STATUS_BITS</a>      3", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PM_STATUS_OFFSET\">PM_STATUS_OFFSET</a>    (64 - <a class=\"id\" href=\"#PM_STATUS_BITS\">PM_STATUS_BITS</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PM_STATUS_MASK\">PM_STATUS_MASK</a>      (((1LL << <a class=\"id\" href=\"#PM_STATUS_BITS\">PM_STATUS_BITS</a>) - 1) << <a class=\"id\" href=\"#PM_STATUS_OFFSET\">PM_STATUS_OFFSET</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PM_STATUS\">PM_STATUS</a>(<a class=\"id\" href=\"#nr\">nr</a>)       (((<a class=\"id\" href=\"#nr\">nr</a>) << <a class=\"id\" href=\"#PM_STATUS_OFFSET\">PM_STATUS_OFFSET</a>) &amp; <a class=\"id\" href=\"#PM_STATUS_MASK\">PM_STATUS_MASK</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PM_PSHIFT_BITS\">PM_PSHIFT_BITS</a>      6", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PM_PSHIFT_OFFSET\">PM_PSHIFT_OFFSET</a>    (<a class=\"id\" href=\"#PM_STATUS_OFFSET\">PM_STATUS_OFFSET</a> - <a class=\"id\" href=\"#PM_PSHIFT_BITS\">PM_PSHIFT_BITS</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PM_PSHIFT_MASK\">PM_PSHIFT_MASK</a>      (((1LL << <a class=\"id\" href=\"#PM_PSHIFT_BITS\">PM_PSHIFT_BITS</a>) - 1) << <a class=\"id\" href=\"#PM_PSHIFT_OFFSET\">PM_PSHIFT_OFFSET</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PM_PSHIFT\">PM_PSHIFT</a>(<a class=\"id\" href=\"#x\">x</a>)        (((<a class=\"id\" href=\"#u64\">u64</a>) (<a class=\"id\" href=\"#x\">x</a>) << <a class=\"id\" href=\"#PM_PSHIFT_OFFSET\">PM_PSHIFT_OFFSET</a>) &amp; <a class=\"id\" href=\"#PM_PSHIFT_MASK\">PM_PSHIFT_MASK</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PM_PFRAME_MASK\">PM_PFRAME_MASK</a>      ((1LL << <a class=\"id\" href=\"#PM_PSHIFT_OFFSET\">PM_PSHIFT_OFFSET</a>) - 1)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PM_PFRAME\">PM_PFRAME</a>(<a class=\"id\" href=\"#x\">x</a>)        ((<a class=\"id\" href=\"#x\">x</a>) &amp; <a class=\"id\" href=\"#PM_PFRAME_MASK\">PM_PFRAME_MASK</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PM_PRESENT\">PM_PRESENT</a>          <a class=\"id\" href=\"#PM_STATUS\">PM_STATUS</a>(4LL)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PM_SWAP\">PM_SWAP</a>             <a class=\"id\" href=\"#PM_STATUS\">PM_STATUS</a>(2LL)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PM_NOT_PRESENT\">PM_NOT_PRESENT</a>      <a class=\"id\" href=\"#PM_PSHIFT\">PM_PSHIFT</a>(<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PM_END_OF_BUFFER\">PM_END_OF_BUFFER</a>    1", 
"", 
"static int <a class=\"id\" href=\"#add_to_pagemap\">add_to_pagemap</a>(unsigned long <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#pfn\">pfn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#pagemapread\">pagemapread</a> *<a class=\"id\" href=\"#pm\">pm</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#pos\">pos</a>++] = <a class=\"id\" href=\"#pfn\">pfn</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#pos\">pos</a> >= <a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PM_END_OF_BUFFER\">PM_END_OF_BUFFER</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pagemap_pte_hole\">pagemap_pte_hole</a>(unsigned long <a class=\"id\" href=\"#start\">start</a>, unsigned long <a class=\"id\" href=\"#end\">end</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_walk\">mm_walk</a> *<a class=\"id\" href=\"#walk\">walk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pagemapread\">pagemapread</a> *<a class=\"id\" href=\"#pm\">pm</a> = <a class=\"id\" href=\"#walk\">walk</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#start\">start</a>; <a class=\"id\" href=\"#addr\">addr</a> &lt; <a class=\"id\" href=\"#end\">end</a>; <a class=\"id\" href=\"#addr\">addr</a> += <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#add_to_pagemap\">add_to_pagemap</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#PM_NOT_PRESENT\">PM_NOT_PRESENT</a>, <a class=\"id\" href=\"#pm\">pm</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#swap_pte_to_pagemap_entry\">swap_pte_to_pagemap_entry</a>(<a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a> <a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#pte_to_swp_entry\">pte_to_swp_entry</a>(<a class=\"id\" href=\"#pte\">pte</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#swp_type\">swp_type</a>(<a class=\"id\" href=\"#e\">e</a>) | (<a class=\"id\" href=\"#swp_offset\">swp_offset</a>(<a class=\"id\" href=\"#e\">e</a>) << <a class=\"id\" href=\"#MAX_SWAPFILES_SHIFT\">MAX_SWAPFILES_SHIFT</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#pte_to_pagemap_entry\">pte_to_pagemap_entry</a>(<a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#pme\">pme</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_swap_pte\">is_swap_pte</a>(<a class=\"id\" href=\"#pte\">pte</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pme\">pme</a> = <a class=\"id\" href=\"#PM_PFRAME\">PM_PFRAME</a>(<a class=\"id\" href=\"#swap_pte_to_pagemap_entry\">swap_pte_to_pagemap_entry</a>(<a class=\"id\" href=\"#pte\">pte</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>| <a class=\"id\" href=\"#PM_PSHIFT\">PM_PSHIFT</a>(<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>) | <a class=\"id\" href=\"#PM_SWAP\">PM_SWAP</a>;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#pte_present\">pte_present</a>(<a class=\"id\" href=\"#pte\">pte</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pme\">pme</a> = <a class=\"id\" href=\"#PM_PFRAME\">PM_PFRAME</a>(<a class=\"id\" href=\"#pte_pfn\">pte_pfn</a>(<a class=\"id\" href=\"#pte\">pte</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>| <a class=\"id\" href=\"#PM_PSHIFT\">PM_PSHIFT</a>(<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>) | <a class=\"id\" href=\"#PM_PRESENT\">PM_PRESENT</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pme\">pme</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pagemap_pte_range\">pagemap_pte_range</a>(<a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#pmd\">pmd</a>, unsigned long <a class=\"id\" href=\"#addr\">addr</a>, unsigned long <a class=\"id\" href=\"#end\">end</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#mm_walk\">mm_walk</a> *<a class=\"id\" href=\"#walk\">walk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pagemapread\">pagemapread</a> *<a class=\"id\" href=\"#pm\">pm</a> = <a class=\"id\" href=\"#walk\">walk</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#pte\">pte</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* find the first VMA at or above 'addr' */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#find_vma\">find_vma</a>(<a class=\"id\" href=\"#walk\">walk</a>-><a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>for (; <a class=\"id\" href=\"#addr\">addr</a> != <a class=\"id\" href=\"#end\">end</a>; <a class=\"id\" href=\"#addr\">addr</a> += <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#pfn\">pfn</a> = <a class=\"id\" href=\"#PM_NOT_PRESENT\">PM_NOT_PRESENT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* check to see if we've left 'vma' behind</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * and need a new, higher one */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#vma\">vma</a> && (<a class=\"id\" href=\"#addr\">addr</a> >= <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_end\">vm_end</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#find_vma\">find_vma</a>(<a class=\"id\" href=\"#walk\">walk</a>-><a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* check that 'vma' actually covers this address,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * and that it isn't a huge page vma */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#vma\">vma</a> && (<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a> <= <a class=\"id\" href=\"#addr\">addr</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#is_vm_hugetlb_page\">is_vm_hugetlb_page</a>(<a class=\"id\" href=\"#vma\">vma</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pte\">pte</a> = <a class=\"id\" href=\"#pte_offset_map\">pte_offset_map</a>(<a class=\"id\" href=\"#pmd\">pmd</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pfn\">pfn</a> = <a class=\"id\" href=\"#pte_to_pagemap_entry\">pte_to_pagemap_entry</a>(*<a class=\"id\" href=\"#pte\">pte</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* unmap before userspace copy */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pte_unmap\">pte_unmap</a>(<a class=\"id\" href=\"#pte\">pte</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#add_to_pagemap\">add_to_pagemap</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#pfn\">pfn</a>, <a class=\"id\" href=\"#pm\">pm</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cond_resched\">cond_resched</a>();", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HUGETLB_PAGE\">CONFIG_HUGETLB_PAGE</a>", 
"static <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#huge_pte_to_pagemap_entry\">huge_pte_to_pagemap_entry</a>(<a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a>, int <a class=\"id\" href=\"#offset\">offset</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#pme\">pme</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pte_present\">pte_present</a>(<a class=\"id\" href=\"#pte\">pte</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pme\">pme</a> = <a class=\"id\" href=\"#PM_PFRAME\">PM_PFRAME</a>(<a class=\"id\" href=\"#pte_pfn\">pte_pfn</a>(<a class=\"id\" href=\"#pte\">pte</a>) + <a class=\"id\" href=\"#offset\">offset</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>| <a class=\"id\" href=\"#PM_PSHIFT\">PM_PSHIFT</a>(<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>) | <a class=\"id\" href=\"#PM_PRESENT\">PM_PRESENT</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pme\">pme</a>;", 
"}", 
"", 
"<span class=\"comment\">/* This function walks within one hugetlb entry in the single call */</span>", 
"static int <a class=\"id\" href=\"#pagemap_hugetlb_range\">pagemap_hugetlb_range</a>(<a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#pte\">pte</a>, unsigned long <a class=\"id\" href=\"#hmask\">hmask</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned long <a class=\"id\" href=\"#addr\">addr</a>, unsigned long <a class=\"id\" href=\"#end\">end</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#mm_walk\">mm_walk</a> *<a class=\"id\" href=\"#walk\">walk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pagemapread\">pagemapread</a> *<a class=\"id\" href=\"#pm\">pm</a> = <a class=\"id\" href=\"#walk\">walk</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#pfn\">pfn</a>;", 
"", 
"<span class=\"ts\"/>for (; <a class=\"id\" href=\"#addr\">addr</a> != <a class=\"id\" href=\"#end\">end</a>; <a class=\"id\" href=\"#addr\">addr</a> += <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#offset\">offset</a> = (<a class=\"id\" href=\"#addr\">addr</a> &amp; ~<a class=\"id\" href=\"#hmask\">hmask</a>) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pfn\">pfn</a> = <a class=\"id\" href=\"#huge_pte_to_pagemap_entry\">huge_pte_to_pagemap_entry</a>(*<a class=\"id\" href=\"#pte\">pte</a>, <a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#add_to_pagemap\">add_to_pagemap</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#pfn\">pfn</a>, <a class=\"id\" href=\"#pm\">pm</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cond_resched\">cond_resched</a>();", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* HUGETLB_PAGE */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * /proc/pid/pagemap - an array mapping virtual pages to pfns</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * For each page in the address space, this file contains one 64-bit entry</span>", 
"<span class=\"comment\"> * consisting of the following:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Bits 0-55  page frame number (PFN) if present</span>", 
"<span class=\"comment\"> * Bits 0-4   swap type if swapped</span>", 
"<span class=\"comment\"> * Bits 5-55  swap offset if swapped</span>", 
"<span class=\"comment\"> * Bits 55-60 page shift (page size = 1&lt;&lt;page shift)</span>", 
"<span class=\"comment\"> * Bit  61    reserved for future use</span>", 
"<span class=\"comment\"> * Bit  62    page swapped</span>", 
"<span class=\"comment\"> * Bit  63    page present</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If the page is not present but in swap, then the PFN contains an</span>", 
"<span class=\"comment\"> * encoding of the swap file number and the page's offset into the</span>", 
"<span class=\"comment\"> * swap. Unmapped pages return a null PFN. This allows determining</span>", 
"<span class=\"comment\"> * precisely which pages are mapped (or in swap) and comparing mapped</span>", 
"<span class=\"comment\"> * pages between processes.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Efficient users of this interface will use /proc/pid/maps to</span>", 
"<span class=\"comment\"> * determine which areas of memory are actually mapped and llseek to</span>", 
"<span class=\"comment\"> * skip over unmapped regions.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PAGEMAP_WALK_SIZE\">PAGEMAP_WALK_SIZE</a><span class=\"ts\"/>(<a class=\"id\" href=\"#PMD_SIZE\">PMD_SIZE</a>)", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#pagemap_read\">pagemap_read</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#get_proc_task\">get_proc_task</a>(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pagemapread\">pagemapread</a> <a class=\"id\" href=\"#pm\">pm</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_walk\">mm_walk</a> <a class=\"id\" href=\"#pagemap_walk\">pagemap_walk</a> = {};", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#src\">src</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#svpfn\">svpfn</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start_vaddr\">start_vaddr</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#end_vaddr\">end_vaddr</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#copied\">copied</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#task\">task</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ptrace_may_access\">ptrace_may_access</a>(<a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#PTRACE_MODE_READ\">PTRACE_MODE_READ</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_task\">out_task</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* file position must be aligned */</span>", 
"<span class=\"ts\"/>if ((*<a class=\"id\" href=\"#ppos\">ppos</a> % <a class=\"id\" href=\"#PM_ENTRY_BYTES\">PM_ENTRY_BYTES</a>) || (<a class=\"id\" href=\"#count\">count</a> % <a class=\"id\" href=\"#PM_ENTRY_BYTES\">PM_ENTRY_BYTES</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_task\">out_task</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#count\">count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_task\">out_task</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a> = <a class=\"id\" href=\"#get_task_mm\">get_task_mm</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mm\">mm</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_task\">out_task</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pm\">pm</a>.<a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#PM_ENTRY_BYTES\">PM_ENTRY_BYTES</a> * (<a class=\"id\" href=\"#PAGEMAP_WALK_SIZE\">PAGEMAP_WALK_SIZE</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pm\">pm</a>.<a class=\"id\" href=\"#buffer\">buffer</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#pm\">pm</a>.<a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#GFP_TEMPORARY\">GFP_TEMPORARY</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pm\">pm</a>.<a class=\"id\" href=\"#buffer\">buffer</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_mm\">out_mm</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pagemap_walk\">pagemap_walk</a>.<a class=\"id\" href=\"#pmd_entry\">pmd_entry</a> = <a class=\"id\" href=\"#pagemap_pte_range\">pagemap_pte_range</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pagemap_walk\">pagemap_walk</a>.<a class=\"id\" href=\"#pte_hole\">pte_hole</a> = <a class=\"id\" href=\"#pagemap_pte_hole\">pagemap_pte_hole</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HUGETLB_PAGE\">CONFIG_HUGETLB_PAGE</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pagemap_walk\">pagemap_walk</a>.<a class=\"id\" href=\"#hugetlb_entry\">hugetlb_entry</a> = <a class=\"id\" href=\"#pagemap_hugetlb_range\">pagemap_hugetlb_range</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pagemap_walk\">pagemap_walk</a>.<a class=\"id\" href=\"#mm\">mm</a> = <a class=\"id\" href=\"#mm\">mm</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pagemap_walk\">pagemap_walk</a>.<a class=\"id\" href=\"#private\">private</a> = &amp;<a class=\"id\" href=\"#pm\">pm</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#src\">src</a> = *<a class=\"id\" href=\"#ppos\">ppos</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#svpfn\">svpfn</a> = <a class=\"id\" href=\"#src\">src</a> / <a class=\"id\" href=\"#PM_ENTRY_BYTES\">PM_ENTRY_BYTES</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#start_vaddr\">start_vaddr</a> = <a class=\"id\" href=\"#svpfn\">svpfn</a> << <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end_vaddr\">end_vaddr</a> = <a class=\"id\" href=\"#TASK_SIZE_OF\">TASK_SIZE_OF</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* watch out for wraparound */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#svpfn\">svpfn</a> &gt; <a class=\"id\" href=\"#TASK_SIZE_OF\">TASK_SIZE_OF</a>(<a class=\"id\" href=\"#task\">task</a>) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_vaddr\">start_vaddr</a> = <a class=\"id\" href=\"#end_vaddr\">end_vaddr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The odds are that this will stop walking way</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * before end_vaddr, because the length of the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * user buffer is tracked in \"pm\", and the walk</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * will stop when we hit the end of the buffer.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#count\">count</a> && (<a class=\"id\" href=\"#start_vaddr\">start_vaddr</a> &lt; <a class=\"id\" href=\"#end_vaddr\">end_vaddr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#end\">end</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pm\">pm</a>.<a class=\"id\" href=\"#pos\">pos</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#start_vaddr\">start_vaddr</a> + <a class=\"id\" href=\"#PAGEMAP_WALK_SIZE\">PAGEMAP_WALK_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* overflow ? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#end\">end</a> &lt; <a class=\"id\" href=\"#start_vaddr\">start_vaddr</a> || <a class=\"id\" href=\"#end\">end</a> &gt; <a class=\"id\" href=\"#end_vaddr\">end_vaddr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#end_vaddr\">end_vaddr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#mmap_sem\">mmap_sem</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#walk_page_range\">walk_page_range</a>(<a class=\"id\" href=\"#start_vaddr\">start_vaddr</a>, <a class=\"id\" href=\"#end\">end</a>, &amp;<a class=\"id\" href=\"#pagemap_walk\">pagemap_walk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#mmap_sem\">mmap_sem</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_vaddr\">start_vaddr</a> = <a class=\"id\" href=\"#end\">end</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#PM_ENTRY_BYTES\">PM_ENTRY_BYTES</a> * <a class=\"id\" href=\"#pm\">pm</a>.<a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#pm\">pm</a>.<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#len\">len</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free\">out_free</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copied\">copied</a> += <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> += <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> -= <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#ppos\">ppos</a> += <a class=\"id\" href=\"#copied\">copied</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a> || <a class=\"id\" href=\"#ret\">ret</a> == <a class=\"id\" href=\"#PM_END_OF_BUFFER\">PM_END_OF_BUFFER</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#copied\">copied</a>;", 
"", 
"<a class=\"id\" href=\"#out_free\">out_free</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#pm\">pm</a>.<a class=\"id\" href=\"#buffer\">buffer</a>);", 
"<a class=\"id\" href=\"#out_mm\">out_mm</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mmput\">mmput</a>(<a class=\"id\" href=\"#mm\">mm</a>);", 
"<a class=\"id\" href=\"#out_task\">out_task</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#proc_pagemap_operations\">proc_pagemap_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#mem_lseek\">mem_lseek</a>, <span class=\"comment\">/* borrow this */</span>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#pagemap_read\">pagemap_read</a>,", 
"};", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_PROC_PAGE_MONITOR */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NUMA\">CONFIG_NUMA</a>", 
"extern int <a class=\"id\" href=\"#show_numa_map\">show_numa_map</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#v\">v</a>);", 
"", 
"static const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> <a class=\"id\" href=\"#proc_pid_numa_maps_op\">proc_pid_numa_maps_op</a> = {", 
"        .<a class=\"id\" href=\"#start\">start</a>  = <a class=\"id\" href=\"#m_start\">m_start</a>,", 
"        .<a class=\"id\" href=\"#next\">next</a>   = <a class=\"id\" href=\"#m_next\">m_next</a>,", 
"        .<a class=\"id\" href=\"#stop\">stop</a>   = <a class=\"id\" href=\"#m_stop\">m_stop</a>,", 
"        .<a class=\"id\" href=\"#show\">show</a>   = <a class=\"id\" href=\"#show_numa_map\">show_numa_map</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#numa_maps_open\">numa_maps_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#do_maps_open\">do_maps_open</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#proc_pid_numa_maps_op\">proc_pid_numa_maps_op</a>);", 
"}", 
"", 
"const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#proc_numa_maps_operations\">proc_numa_maps_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#numa_maps_open\">numa_maps_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_release_private\">seq_release_private</a>,", 
"};", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/69/5cd966620d2e53b52b60d7a39023d15517be9d.xr', __xr_tmp);
