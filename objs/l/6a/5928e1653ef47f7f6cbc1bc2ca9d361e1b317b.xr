var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#signal_wake_up\">signal_wake_up</a>(<a class=\"id\" href=\"#t\">t</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If there are no other threads in the group, or if there is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * a group stop in progress and we are the last to stop, report</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to the parent.  When ptraced, every thread reports itself.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#notify\">notify</a> = <a class=\"id\" href=\"#sig\">sig</a>-><a class=\"id\" href=\"#group_stop_count\">group_stop_count</a> == 1 ? <a class=\"id\" href=\"#CLD_STOPPED\">CLD_STOPPED</a> : 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#notify\">notify</a> = <a class=\"id\" href=\"#tracehook_notify_jctl\">tracehook_notify_jctl</a>(<a class=\"id\" href=\"#notify\">notify</a>, <a class=\"id\" href=\"#CLD_STOPPED\">CLD_STOPPED</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * tracehook_notify_jctl() can drop and reacquire siglock, so</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we keep -&gt;group_stop_count != 0 before the call. If SIGCONT</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * or SIGKILL comes in between -&gt;group_stop_count == 0.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sig\">sig</a>-><a class=\"id\" href=\"#group_stop_count\">group_stop_count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!--<a class=\"id\" href=\"#sig\">sig</a>-><a class=\"id\" href=\"#group_stop_count\">group_stop_count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sig\">sig</a>-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#SIGNAL_STOP_STOPPED\">SIGNAL_STOP_STOPPED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#exit_code\">exit_code</a> = <a class=\"id\" href=\"#sig\">sig</a>-><a class=\"id\" href=\"#group_exit_code\">group_exit_code</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__set_current_state\">__set_current_state</a>(<a class=\"id\" href=\"#TASK_STOPPED\">TASK_STOPPED</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#notify\">notify</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_notify_parent_cldstop\">do_notify_parent_cldstop</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#notify\">notify</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Now we don't run again until woken by SIGCONT or SIGKILL */</span>", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule\">schedule</a>();", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#try_to_freeze\">try_to_freeze</a>());", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tracehook_finish_jctl\">tracehook_finish_jctl</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#exit_code\">exit_code</a> = 0;", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ptrace_signal\">ptrace_signal</a>(int <a class=\"id\" href=\"#signr\">signr</a>, <a class=\"id\" href=\"#siginfo_t\">siginfo_t</a> *<a class=\"id\" href=\"#info\">info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>, void *<a class=\"id\" href=\"#cookie\">cookie</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#task_ptrace\">task_ptrace</a>(<a class=\"id\" href=\"#current\">current</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#signr\">signr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ptrace_signal_deliver\">ptrace_signal_deliver</a>(<a class=\"id\" href=\"#regs\">regs</a>, <a class=\"id\" href=\"#cookie\">cookie</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Let the debugger run.  */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ptrace_stop\">ptrace_stop</a>(<a class=\"id\" href=\"#signr\">signr</a>, 0, <a class=\"id\" href=\"#info\">info</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We're back.  Did the debugger cancel the sig?  */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#signr\">signr</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#exit_code\">exit_code</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#signr\">signr</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#signr\">signr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#exit_code\">exit_code</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Update the siginfo structure if the signal has</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   changed.  If the debugger wanted something</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   specific in the siginfo structure then it should</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   have updated *info via PTRACE_SETSIGINFO.  */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#signr\">signr</a> != <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#si_signo\">si_signo</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#si_signo\">si_signo</a> = <a class=\"id\" href=\"#signr\">signr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#si_errno\">si_errno</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#si_code\">si_code</a> = <a class=\"id\" href=\"#SI_USER\">SI_USER</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#si_pid\">si_pid</a> = <a class=\"id\" href=\"#task_pid_vnr\">task_pid_vnr</a>(<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#si_uid\">si_uid</a> = <a class=\"id\" href=\"#task_uid\">task_uid</a>(<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If the (new) signal is now blocked, requeue it.  */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sigismember\">sigismember</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#blocked\">blocked</a>, <a class=\"id\" href=\"#signr\">signr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#specific_send_sig_info\">specific_send_sig_info</a>(<a class=\"id\" href=\"#signr\">signr</a>, <a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#current\">current</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#signr\">signr</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#signr\">signr</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#get_signal_to_deliver\">get_signal_to_deliver</a>(<a class=\"id\" href=\"#siginfo_t\">siginfo_t</a> *<a class=\"id\" href=\"#info\">info</a>, struct <a class=\"id\" href=\"#k_sigaction\">k_sigaction</a> *<a class=\"id\" href=\"#return_ka\">return_ka</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>, void *<a class=\"id\" href=\"#cookie\">cookie</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sighand_struct\">sighand_struct</a> *<a class=\"id\" href=\"#sighand\">sighand</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#signal_struct\">signal_struct</a> *<a class=\"id\" href=\"#signal\">signal</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#signal\">signal</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#signr\">signr</a>;", 
"", 
"<a class=\"id\" href=\"#relock\">relock</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We'll jump back here after any time we were stopped in TASK_STOPPED.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * While in TASK_STOPPED, we were considered \"frozen enough\".</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Now that we woke up, it's crucial if we're supposed to be</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * frozen that we freeze now before running anything substantial.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#try_to_freeze\">try_to_freeze</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Every stopped thread goes here after wakeup. Check to see if</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we should notify the parent, prepare_signal(SIGCONT) encodes</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the CLD_ si_code into SIGNAL_CLD_MASK bits.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#SIGNAL_CLD_MASK\">SIGNAL_CLD_MASK</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#why\">why</a> = (<a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#SIGNAL_STOP_CONTINUED\">SIGNAL_STOP_CONTINUED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>? <a class=\"id\" href=\"#CLD_CONTINUED\">CLD_CONTINUED</a> : <a class=\"id\" href=\"#CLD_STOPPED\">CLD_STOPPED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#SIGNAL_CLD_MASK\">SIGNAL_CLD_MASK</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#why\">why</a> = <a class=\"id\" href=\"#tracehook_notify_jctl\">tracehook_notify_jctl</a>(<a class=\"id\" href=\"#why\">why</a>, <a class=\"id\" href=\"#CLD_CONTINUED\">CLD_CONTINUED</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#why\">why</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_notify_parent_cldstop\">do_notify_parent_cldstop</a>(<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#group_leader\">group_leader</a>, <a class=\"id\" href=\"#why\">why</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#relock\">relock</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#k_sigaction\">k_sigaction</a> *<a class=\"id\" href=\"#ka\">ka</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Tracing can induce an artifical signal and choose sigaction.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The return value in @signr determines the default action,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * but @info-&gt;si_signo is the signal number we will report.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#signr\">signr</a> = <a class=\"id\" href=\"#tracehook_get_signal\">tracehook_get_signal</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#regs\">regs</a>, <a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#return_ka\">return_ka</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#signr\">signr</a> &lt; 0))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#relock\">relock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#signr\">signr</a> != 0))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ka\">ka</a> = <a class=\"id\" href=\"#return_ka\">return_ka</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#group_stop_count\">group_stop_count</a> &gt; 0) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#do_signal_stop\">do_signal_stop</a>(0))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#relock\">relock</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#signr\">signr</a> = <a class=\"id\" href=\"#dequeue_signal\">dequeue_signal</a>(<a class=\"id\" href=\"#current\">current</a>, &amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#blocked\">blocked</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#info\">info</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#signr\">signr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break; <span class=\"comment\">/* will return 0 */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#signr\">signr</a> != <a class=\"id\" href=\"#SIGKILL\">SIGKILL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#signr\">signr</a> = <a class=\"id\" href=\"#ptrace_signal\">ptrace_signal</a>(<a class=\"id\" href=\"#signr\">signr</a>, <a class=\"id\" href=\"#info\">info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#regs\">regs</a>, <a class=\"id\" href=\"#cookie\">cookie</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#signr\">signr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ka\">ka</a> = &amp;<a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#action\">action</a>[<a class=\"id\" href=\"#signr\">signr</a>-1];", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Trace actually delivered signals. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_signal_deliver\">trace_signal_deliver</a>(<a class=\"id\" href=\"#signr\">signr</a>, <a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#ka\">ka</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ka\">ka</a>-><a class=\"id\" href=\"#sa\">sa</a>.<a class=\"id\" href=\"#sa_handler\">sa_handler</a> == <a class=\"id\" href=\"#SIG_IGN\">SIG_IGN</a>) <span class=\"comment\">/* Do nothing.  */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ka\">ka</a>-><a class=\"id\" href=\"#sa\">sa</a>.<a class=\"id\" href=\"#sa_handler\">sa_handler</a> != <a class=\"id\" href=\"#SIG_DFL\">SIG_DFL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Run the handler.  */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#return_ka\">return_ka</a> = *<a class=\"id\" href=\"#ka\">ka</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ka\">ka</a>-><a class=\"id\" href=\"#sa\">sa</a>.<a class=\"id\" href=\"#sa_flags\">sa_flags</a> &amp; <a class=\"id\" href=\"#SA_ONESHOT\">SA_ONESHOT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ka\">ka</a>-><a class=\"id\" href=\"#sa\">sa</a>.<a class=\"id\" href=\"#sa_handler\">sa_handler</a> = <a class=\"id\" href=\"#SIG_DFL\">SIG_DFL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break; <span class=\"comment\">/* will return non-zero \"signr\" value */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Now we are doing the default action for this signal.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sig_kernel_ignore\">sig_kernel_ignore</a>(<a class=\"id\" href=\"#signr\">signr</a>)) <span class=\"comment\">/* Default is nothing. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Global init gets no signals it doesn't want.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Container-init gets no signals it doesn't want from same</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * container.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Note that if global/container-init sees a sig_kernel_only()</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * signal here, the signal must have been generated internally</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * or must have come from an ancestor namespace. In either</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * case, the signal cannot be dropped.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#SIGNAL_UNKILLABLE\">SIGNAL_UNKILLABLE</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>!<a class=\"id\" href=\"#sig_kernel_only\">sig_kernel_only</a>(<a class=\"id\" href=\"#signr\">signr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sig_kernel_stop\">sig_kernel_stop</a>(<a class=\"id\" href=\"#signr\">signr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * The default action is to stop all threads in</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * the thread group.  The job control signals</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * do nothing in an orphaned pgrp, but SIGSTOP</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * always works.  Note that siglock needs to be</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * dropped during the call to is_orphaned_pgrp()</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * because of lock ordering with tasklist_lock.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * This allows an intervening SIGCONT to be posted.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * We need to check for that and bail out if necessary.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#signr\">signr</a> != <a class=\"id\" href=\"#SIGSTOP\">SIGSTOP</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* signals can be posted during this window */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#is_current_pgrp_orphaned\">is_current_pgrp_orphaned</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#relock\">relock</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#do_signal_stop\">do_signal_stop</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#si_signo\">si_signo</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* It released the siglock.  */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#relock\">relock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * We didn't actually stop, due to a race</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * with SIGCONT or something like that.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Anything else is fatal, maybe with a core dump.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#PF_SIGNALED\">PF_SIGNALED</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sig_kernel_coredump\">sig_kernel_coredump</a>(<a class=\"id\" href=\"#signr\">signr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#print_fatal_signals\">print_fatal_signals</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#print_fatal_signal\">print_fatal_signal</a>(<a class=\"id\" href=\"#regs\">regs</a>, <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#si_signo\">si_signo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * If it was able to dump core, this kills all</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * other threads in the group and synchronizes with</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * their demise.  If we lost the race with another</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * thread getting here, it set group_exit_code</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * first and our do_group_exit call below will use</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * that value and ignore the one we pass it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_coredump\">do_coredump</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#si_signo\">si_signo</a>, <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#si_signo\">si_signo</a>, <a class=\"id\" href=\"#regs\">regs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Death signals, no core dump.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_group_exit\">do_group_exit</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#si_signo\">si_signo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* NOTREACHED */</span>", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#signr\">signr</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#exit_signals\">exit_signals</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#group_stop\">group_stop</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#t\">t</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#thread_group_empty\">thread_group_empty</a>(<a class=\"id\" href=\"#tsk\">tsk</a>) || <a class=\"id\" href=\"#signal_group_exit\">signal_group_exit</a>(<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#signal\">signal</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#PF_EXITING\">PF_EXITING</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * From now this task is not visible for group-wide signals,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * see wants_signal(), do_signal_stop().</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#PF_EXITING\">PF_EXITING</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#signal_pending\">signal_pending</a>(<a class=\"id\" href=\"#tsk\">tsk</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* It could be that __group_complete_signal() choose us to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * notify about group-wide signal. Another thread should be</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * woken now to take the signal since we will not.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#t\">t</a> = <a class=\"id\" href=\"#tsk\">tsk</a>; (<a class=\"id\" href=\"#t\">t</a> = <a class=\"id\" href=\"#next_thread\">next_thread</a>(<a class=\"id\" href=\"#t\">t</a>)) != <a class=\"id\" href=\"#tsk\">tsk</a>; )", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#signal_pending\">signal_pending</a>(<a class=\"id\" href=\"#t\">t</a>) && !(<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#PF_EXITING\">PF_EXITING</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#recalc_sigpending_and_wake\">recalc_sigpending_and_wake</a>(<a class=\"id\" href=\"#t\">t</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#group_stop_count\">group_stop_count</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>!--<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#group_stop_count\">group_stop_count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#SIGNAL_STOP_STOPPED\">SIGNAL_STOP_STOPPED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#group_stop\">group_stop</a> = <a class=\"id\" href=\"#tracehook_notify_jctl\">tracehook_notify_jctl</a>(<a class=\"id\" href=\"#CLD_STOPPED\">CLD_STOPPED</a>, <a class=\"id\" href=\"#CLD_STOPPED\">CLD_STOPPED</a>);", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#group_stop\">group_stop</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_notify_parent_cldstop\">do_notify_parent_cldstop</a>(<a class=\"id\" href=\"#tsk\">tsk</a>, <a class=\"id\" href=\"#group_stop\">group_stop</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#recalc_sigpending\">recalc_sigpending</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#dequeue_signal\">dequeue_signal</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#flush_signals\">flush_signals</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#force_sig\">force_sig</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#send_sig\">send_sig</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#send_sig_info\">send_sig_info</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#sigprocmask\">sigprocmask</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#block_all_signals\">block_all_signals</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#unblock_all_signals\">unblock_all_signals</a>);", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * System call entry points.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE0\">SYSCALL_DEFINE0</a>(<a class=\"id\" href=\"#restart_syscall\">restart_syscall</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#restart_block\">restart_block</a> *<a class=\"id\" href=\"#restart\">restart</a> = &amp;<a class=\"id\" href=\"#current_thread_info\">current_thread_info</a>()-><a class=\"id\" href=\"#restart_block\">restart_block</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#restart\">restart</a>-><a class=\"id\" href=\"#fn\">fn</a>(<a class=\"id\" href=\"#restart\">restart</a>);", 
"}", 
"", 
"long <a class=\"id\" href=\"#do_no_restart_syscall\">do_no_restart_syscall</a>(struct <a class=\"id\" href=\"#restart_block\">restart_block</a> *<a class=\"id\" href=\"#param\">param</a>)", 
"{", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EINTR\">EINTR</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * We don't need to get the kernel lock - this is all local to this</span>", 
"<span class=\"comment\"> * particular thread.. (and that's good, because this is _heavily_</span>", 
"<span class=\"comment\"> * used by various programs)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This is also useful for kernel threads that want to temporarily</span>", 
"<span class=\"comment\"> * (or permanently) block certain signals.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NOTE! Unlike the user-mode sys_sigprocmask(), the kernel</span>", 
"<span class=\"comment\"> * interface happily blocks \"unblockable\" signals like SIGKILL</span>", 
"<span class=\"comment\"> * and friends.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#sigprocmask\">sigprocmask</a>(int <a class=\"id\" href=\"#how\">how</a>, <a class=\"id\" href=\"#sigset_t\">sigset_t</a> *<a class=\"id\" href=\"#set\">set</a>, <a class=\"id\" href=\"#sigset_t\">sigset_t</a> *<a class=\"id\" href=\"#oldset\">oldset</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#oldset\">oldset</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#oldset\">oldset</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#blocked\">blocked</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#how\">how</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIG_BLOCK\">SIG_BLOCK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sigorsets\">sigorsets</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#blocked\">blocked</a>, &amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#blocked\">blocked</a>, <a class=\"id\" href=\"#set\">set</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIG_UNBLOCK\">SIG_UNBLOCK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#signandsets\">signandsets</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#blocked\">blocked</a>, &amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#blocked\">blocked</a>, <a class=\"id\" href=\"#set\">set</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIG_SETMASK\">SIG_SETMASK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#blocked\">blocked</a> = *<a class=\"id\" href=\"#set\">set</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#recalc_sigpending\">recalc_sigpending</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE4\">SYSCALL_DEFINE4</a>(<a class=\"id\" href=\"#rt_sigprocmask\">rt_sigprocmask</a>, int, <a class=\"id\" href=\"#how\">how</a>, <a class=\"id\" href=\"#sigset_t\">sigset_t</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#set\">set</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sigset_t\">sigset_t</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#oset\">oset</a>, <a class=\"id\" href=\"#size_t\">size_t</a>, <a class=\"id\" href=\"#sigsetsize\">sigsetsize</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sigset_t\">sigset_t</a> <a class=\"id\" href=\"#old_set\">old_set</a>, <a class=\"id\" href=\"#new_set\">new_set</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* XXX: Don't preclude handling different sized sigset_t's.  */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sigsetsize\">sigsetsize</a> != sizeof(<a class=\"id\" href=\"#sigset_t\">sigset_t</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#set\">set</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#new_set\">new_set</a>, <a class=\"id\" href=\"#set\">set</a>, sizeof(*<a class=\"id\" href=\"#set\">set</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sigdelsetmask\">sigdelsetmask</a>(&amp;<a class=\"id\" href=\"#new_set\">new_set</a>, <a class=\"id\" href=\"#sigmask\">sigmask</a>(<a class=\"id\" href=\"#SIGKILL\">SIGKILL</a>)|<a class=\"id\" href=\"#sigmask\">sigmask</a>(<a class=\"id\" href=\"#SIGSTOP\">SIGSTOP</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#sigprocmask\">sigprocmask</a>(<a class=\"id\" href=\"#how\">how</a>, &amp;<a class=\"id\" href=\"#new_set\">new_set</a>, &amp;<a class=\"id\" href=\"#old_set\">old_set</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#oset\">oset</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#set_old\">set_old</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#oset\">oset</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_set\">old_set</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#blocked\">blocked</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_old\">set_old</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#oset\">oset</a>, &amp;<a class=\"id\" href=\"#old_set\">old_set</a>, sizeof(*<a class=\"id\" href=\"#oset\">oset</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 0;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"long <a class=\"id\" href=\"#do_sigpending\">do_sigpending</a>(void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#set\">set</a>, unsigned long <a class=\"id\" href=\"#sigsetsize\">sigsetsize</a>)", 
"{", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sigset_t\">sigset_t</a> <a class=\"id\" href=\"#pending\">pending</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sigsetsize\">sigsetsize</a> &gt; sizeof(<a class=\"id\" href=\"#sigset_t\">sigset_t</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sigorsets\">sigorsets</a>(&amp;<a class=\"id\" href=\"#pending\">pending</a>, &amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#pending\">pending</a>.<a class=\"id\" href=\"#signal\">signal</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#shared_pending\">shared_pending</a>.<a class=\"id\" href=\"#signal\">signal</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Outside the lock because only this thread touches it.  */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sigandsets\">sigandsets</a>(&amp;<a class=\"id\" href=\"#pending\">pending</a>, &amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#blocked\">blocked</a>, &amp;<a class=\"id\" href=\"#pending\">pending</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#set\">set</a>, &amp;<a class=\"id\" href=\"#pending\">pending</a>, <a class=\"id\" href=\"#sigsetsize\">sigsetsize</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 0;", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}<span class=\"ts\"/>", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE2\">SYSCALL_DEFINE2</a>(<a class=\"id\" href=\"#rt_sigpending\">rt_sigpending</a>, <a class=\"id\" href=\"#sigset_t\">sigset_t</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#set\">set</a>, <a class=\"id\" href=\"#size_t\">size_t</a>, <a class=\"id\" href=\"#sigsetsize\">sigsetsize</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#do_sigpending\">do_sigpending</a>(<a class=\"id\" href=\"#set\">set</a>, <a class=\"id\" href=\"#sigsetsize\">sigsetsize</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#HAVE_ARCH_COPY_SIGINFO_TO_USER\">HAVE_ARCH_COPY_SIGINFO_TO_USER</a>", 
"", 
"int <a class=\"id\" href=\"#copy_siginfo_to_user\">copy_siginfo_to_user</a>(<a class=\"id\" href=\"#siginfo_t\">siginfo_t</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#to\">to</a>, <a class=\"id\" href=\"#siginfo_t\">siginfo_t</a> *<a class=\"id\" href=\"#from\">from</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#access_ok\">access_ok</a> (<a class=\"id\" href=\"#VERIFY_WRITE\">VERIFY_WRITE</a>, <a class=\"id\" href=\"#to\">to</a>, sizeof(<a class=\"id\" href=\"#siginfo_t\">siginfo_t</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#si_code\">si_code</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#__copy_to_user\">__copy_to_user</a>(<a class=\"id\" href=\"#to\">to</a>, <a class=\"id\" href=\"#from\">from</a>, sizeof(<a class=\"id\" href=\"#siginfo_t\">siginfo_t</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>? -<a class=\"id\" href=\"#EFAULT\">EFAULT</a> : 0;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If you change siginfo_t structure, please be sure</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * this code is fixed accordingly.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Please remember to update the signalfd_copyinfo() function</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * inside fs/signalfd.c too, in case siginfo_t changes.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * It should never copy any pad contained in the structure</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to avoid security leaks, but must copy the generic</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 3 ints plus the relevant union member.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#si_signo\">si_signo</a>, &amp;<a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#si_signo\">si_signo</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#si_errno\">si_errno</a>, &amp;<a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#si_errno\">si_errno</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>((short)<a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#si_code\">si_code</a>, &amp;<a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#si_code\">si_code</a>);", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#si_code\">si_code</a> &amp; <a class=\"id\" href=\"#__SI_MASK\">__SI_MASK</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#__SI_KILL\">__SI_KILL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#si_pid\">si_pid</a>, &amp;<a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#si_pid\">si_pid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#si_uid\">si_uid</a>, &amp;<a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#si_uid\">si_uid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#__SI_TIMER\">__SI_TIMER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#si_tid\">si_tid</a>, &amp;<a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#si_tid\">si_tid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#si_overrun\">si_overrun</a>, &amp;<a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#si_overrun\">si_overrun</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#si_ptr\">si_ptr</a>, &amp;<a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#si_ptr\">si_ptr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#__SI_POLL\">__SI_POLL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#si_band\">si_band</a>, &amp;<a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#si_band\">si_band</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#si_fd\">si_fd</a>, &amp;<a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#si_fd\">si_fd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#__SI_FAULT\">__SI_FAULT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#si_addr\">si_addr</a>, &amp;<a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#si_addr\">si_addr</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__ARCH_SI_TRAPNO\">__ARCH_SI_TRAPNO</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#si_trapno\">si_trapno</a>, &amp;<a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#si_trapno\">si_trapno</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#BUS_MCEERR_AO\">BUS_MCEERR_AO</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* </span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Other callers might not initialize the si_lsb field,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> <span class=\"ts\"/> * so check explicitely for the right codes here.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#si_code\">si_code</a> == <a class=\"id\" href=\"#BUS_MCEERR_AR\">BUS_MCEERR_AR</a> || <a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#si_code\">si_code</a> == <a class=\"id\" href=\"#BUS_MCEERR_AO\">BUS_MCEERR_AO</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#si_addr_lsb\">si_addr_lsb</a>, &amp;<a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#si_addr_lsb\">si_addr_lsb</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#__SI_CHLD\">__SI_CHLD</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#si_pid\">si_pid</a>, &amp;<a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#si_pid\">si_pid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#si_uid\">si_uid</a>, &amp;<a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#si_uid\">si_uid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#si_status\">si_status</a>, &amp;<a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#si_status\">si_status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#si_utime\">si_utime</a>, &amp;<a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#si_utime\">si_utime</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#si_stime\">si_stime</a>, &amp;<a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#si_stime\">si_stime</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#__SI_RT\">__SI_RT</a>: <span class=\"comment\">/* This is not generated by the kernel as of now. */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#__SI_MESGQ\">__SI_MESGQ</a>: <span class=\"comment\">/* But this is */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#si_pid\">si_pid</a>, &amp;<a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#si_pid\">si_pid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#si_uid\">si_uid</a>, &amp;<a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#si_uid\">si_uid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#si_ptr\">si_ptr</a>, &amp;<a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#si_ptr\">si_ptr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default: <span class=\"comment\">/* this is just in case for now ... */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#si_pid\">si_pid</a>, &amp;<a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#si_pid\">si_pid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#from\">from</a>-><a class=\"id\" href=\"#si_uid\">si_uid</a>, &amp;<a class=\"id\" href=\"#to\">to</a>-><a class=\"id\" href=\"#si_uid\">si_uid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE4\">SYSCALL_DEFINE4</a>(<a class=\"id\" href=\"#rt_sigtimedwait\">rt_sigtimedwait</a>, const <a class=\"id\" href=\"#sigset_t\">sigset_t</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#uthese\">uthese</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#siginfo_t\">siginfo_t</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#uinfo\">uinfo</a>, const struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#uts\">uts</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a>, <a class=\"id\" href=\"#sigsetsize\">sigsetsize</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#sig\">sig</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sigset_t\">sigset_t</a> <a class=\"id\" href=\"#these\">these</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#ts\">ts</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#siginfo_t\">siginfo_t</a> <a class=\"id\" href=\"#info\">info</a>;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#timeout\">timeout</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* XXX: Don't preclude handling different sized sigset_t's.  */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sigsetsize\">sigsetsize</a> != sizeof(<a class=\"id\" href=\"#sigset_t\">sigset_t</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#these\">these</a>, <a class=\"id\" href=\"#uthese\">uthese</a>, sizeof(<a class=\"id\" href=\"#these\">these</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Invert the set of allowed signals to get those we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * want to block.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sigdelsetmask\">sigdelsetmask</a>(&amp;<a class=\"id\" href=\"#these\">these</a>, <a class=\"id\" href=\"#sigmask\">sigmask</a>(<a class=\"id\" href=\"#SIGKILL\">SIGKILL</a>)|<a class=\"id\" href=\"#sigmask\">sigmask</a>(<a class=\"id\" href=\"#SIGSTOP\">SIGSTOP</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#signotset\">signotset</a>(&amp;<a class=\"id\" href=\"#these\">these</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#uts\">uts</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#ts\">ts</a>, <a class=\"id\" href=\"#uts\">uts</a>, sizeof(<a class=\"id\" href=\"#ts\">ts</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ts\">ts</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> >= 1000000000L || <a class=\"id\" href=\"#ts\">ts</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> &lt; 0", 
"<span class=\"ts\"/><span class=\"ts\"/>    || <a class=\"id\" href=\"#ts\">ts</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sig\">sig</a> = <a class=\"id\" href=\"#dequeue_signal\">dequeue_signal</a>(<a class=\"id\" href=\"#current\">current</a>, &amp;<a class=\"id\" href=\"#these\">these</a>, &amp;<a class=\"id\" href=\"#info\">info</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sig\">sig</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timeout\">timeout</a> = <a class=\"id\" href=\"#MAX_SCHEDULE_TIMEOUT\">MAX_SCHEDULE_TIMEOUT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#uts\">uts</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timeout\">timeout</a> = (<a class=\"id\" href=\"#timespec_to_jiffies\">timespec_to_jiffies</a>(&amp;<a class=\"id\" href=\"#ts\">ts</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   + (<a class=\"id\" href=\"#ts\">ts</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> || <a class=\"id\" href=\"#ts\">ts</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#timeout\">timeout</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* None ready -- temporarily unblock those we're</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * interested while we are sleeping in so that we'll</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * be awakened when they arrive.  */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#real_blocked\">real_blocked</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#blocked\">blocked</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sigandsets\">sigandsets</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#blocked\">blocked</a>, &amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#blocked\">blocked</a>, &amp;<a class=\"id\" href=\"#these\">these</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#recalc_sigpending\">recalc_sigpending</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timeout\">timeout</a> = <a class=\"id\" href=\"#schedule_timeout_interruptible\">schedule_timeout_interruptible</a>(<a class=\"id\" href=\"#timeout\">timeout</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sig\">sig</a> = <a class=\"id\" href=\"#dequeue_signal\">dequeue_signal</a>(<a class=\"id\" href=\"#current\">current</a>, &amp;<a class=\"id\" href=\"#these\">these</a>, &amp;<a class=\"id\" href=\"#info\">info</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#blocked\">blocked</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#real_blocked\">real_blocked</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#siginitset\">siginitset</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#real_blocked\">real_blocked</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#recalc_sigpending\">recalc_sigpending</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sig\">sig</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#sig\">sig</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#uinfo\">uinfo</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_siginfo_to_user\">copy_siginfo_to_user</a>(<a class=\"id\" href=\"#uinfo\">uinfo</a>, &amp;<a class=\"id\" href=\"#info\">info</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#timeout\">timeout</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINTR\">EINTR</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE2\">SYSCALL_DEFINE2</a>(<a class=\"id\" href=\"#kill\">kill</a>, <a class=\"id\" href=\"#pid_t\">pid_t</a>, <a class=\"id\" href=\"#pid\">pid</a>, int, <a class=\"id\" href=\"#sig\">sig</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#siginfo\">siginfo</a> <a class=\"id\" href=\"#info\">info</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#si_signo\">si_signo</a> = <a class=\"id\" href=\"#sig\">sig</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#si_errno\">si_errno</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#si_code\">si_code</a> = <a class=\"id\" href=\"#SI_USER\">SI_USER</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#si_pid\">si_pid</a> = <a class=\"id\" href=\"#task_tgid_vnr\">task_tgid_vnr</a>(<a class=\"id\" href=\"#current\">current</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#si_uid\">si_uid</a> = <a class=\"id\" href=\"#current_uid\">current_uid</a>();", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#kill_something_info\">kill_something_info</a>(<a class=\"id\" href=\"#sig\">sig</a>, &amp;<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#pid\">pid</a>);", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#do_send_specific\">do_send_specific</a>(<a class=\"id\" href=\"#pid_t\">pid_t</a> <a class=\"id\" href=\"#tgid\">tgid</a>, <a class=\"id\" href=\"#pid_t\">pid_t</a> <a class=\"id\" href=\"#pid\">pid</a>, int <a class=\"id\" href=\"#sig\">sig</a>, struct <a class=\"id\" href=\"#siginfo\">siginfo</a> *<a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#find_task_by_vpid\">find_task_by_vpid</a>(<a class=\"id\" href=\"#pid\">pid</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a> && (<a class=\"id\" href=\"#tgid\">tgid</a> <= 0 || <a class=\"id\" href=\"#task_tgid_vnr\">task_tgid_vnr</a>(<a class=\"id\" href=\"#p\">p</a>) == <a class=\"id\" href=\"#tgid\">tgid</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#check_kill_permission\">check_kill_permission</a>(<a class=\"id\" href=\"#sig\">sig</a>, <a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The null signal is a permissions and process existence</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * probe.  No signal is actually delivered.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a> && <a class=\"id\" href=\"#sig\">sig</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#do_send_sig_info\">do_send_sig_info</a>(<a class=\"id\" href=\"#sig\">sig</a>, <a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#false\">false</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * If lock_task_sighand() failed we pretend the task</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * dies after receiving the signal. The window is tiny,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * and the signal is private anyway.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#error\">error</a> == -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#do_tkill\">do_tkill</a>(<a class=\"id\" href=\"#pid_t\">pid_t</a> <a class=\"id\" href=\"#tgid\">tgid</a>, <a class=\"id\" href=\"#pid_t\">pid_t</a> <a class=\"id\" href=\"#pid\">pid</a>, int <a class=\"id\" href=\"#sig\">sig</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#siginfo\">siginfo</a> <a class=\"id\" href=\"#info\">info</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#si_signo\">si_signo</a> = <a class=\"id\" href=\"#sig\">sig</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#si_errno\">si_errno</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#si_code\">si_code</a> = <a class=\"id\" href=\"#SI_TKILL\">SI_TKILL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#si_pid\">si_pid</a> = <a class=\"id\" href=\"#task_tgid_vnr\">task_tgid_vnr</a>(<a class=\"id\" href=\"#current\">current</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#si_uid\">si_uid</a> = <a class=\"id\" href=\"#current_uid\">current_uid</a>();", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#do_send_specific\">do_send_specific</a>(<a class=\"id\" href=\"#tgid\">tgid</a>, <a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#sig\">sig</a>, &amp;<a class=\"id\" href=\"#info\">info</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *  sys_tgkill - send signal to one specific thread</span>", 
"<span class=\"comment\"> *  @tgid: the thread group ID of the thread</span>", 
"<span class=\"comment\"> *  @pid: the PID of the thread</span>", 
"<span class=\"comment\"> *  @sig: signal to be sent</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This syscall also checks the @tgid and returns -ESRCH even if the PID</span>", 
"<span class=\"comment\"> *  exists but it's not belonging to the target process anymore. This</span>", 
"<span class=\"comment\"> *  method solves the problem of threads exiting and PIDs getting reused.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE3\">SYSCALL_DEFINE3</a>(<a class=\"id\" href=\"#tgkill\">tgkill</a>, <a class=\"id\" href=\"#pid_t\">pid_t</a>, <a class=\"id\" href=\"#tgid\">tgid</a>, <a class=\"id\" href=\"#pid_t\">pid_t</a>, <a class=\"id\" href=\"#pid\">pid</a>, int, <a class=\"id\" href=\"#sig\">sig</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* This is only valid for single tasks */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pid\">pid</a> <= 0 || <a class=\"id\" href=\"#tgid\">tgid</a> <= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#do_tkill\">do_tkill</a>(<a class=\"id\" href=\"#tgid\">tgid</a>, <a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#sig\">sig</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  Send a signal to only one task, even if it's a CLONE_THREAD task.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE2\">SYSCALL_DEFINE2</a>(<a class=\"id\" href=\"#tkill\">tkill</a>, <a class=\"id\" href=\"#pid_t\">pid_t</a>, <a class=\"id\" href=\"#pid\">pid</a>, int, <a class=\"id\" href=\"#sig\">sig</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* This is only valid for single tasks */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pid\">pid</a> <= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#do_tkill\">do_tkill</a>(0, <a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#sig\">sig</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE3\">SYSCALL_DEFINE3</a>(<a class=\"id\" href=\"#rt_sigqueueinfo\">rt_sigqueueinfo</a>, <a class=\"id\" href=\"#pid_t\">pid_t</a>, <a class=\"id\" href=\"#pid\">pid</a>, int, <a class=\"id\" href=\"#sig\">sig</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#siginfo_t\">siginfo_t</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#uinfo\">uinfo</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#siginfo_t\">siginfo_t</a> <a class=\"id\" href=\"#info\">info</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#uinfo\">uinfo</a>, sizeof(<a class=\"id\" href=\"#siginfo_t\">siginfo_t</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Not even root can pretend to send signals from the kernel.</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   Nor can they impersonate a kill(), which adds source info.  */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#si_code\">si_code</a> >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#si_signo\">si_signo</a> = <a class=\"id\" href=\"#sig\">sig</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* POSIX.1b doesn't mention process groups.  */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#kill_proc_info\">kill_proc_info</a>(<a class=\"id\" href=\"#sig\">sig</a>, &amp;<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#pid\">pid</a>);", 
"}", 
"", 
"long <a class=\"id\" href=\"#do_rt_tgsigqueueinfo\">do_rt_tgsigqueueinfo</a>(<a class=\"id\" href=\"#pid_t\">pid_t</a> <a class=\"id\" href=\"#tgid\">tgid</a>, <a class=\"id\" href=\"#pid_t\">pid_t</a> <a class=\"id\" href=\"#pid\">pid</a>, int <a class=\"id\" href=\"#sig\">sig</a>, <a class=\"id\" href=\"#siginfo_t\">siginfo_t</a> *<a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* This is only valid for single tasks */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pid\">pid</a> <= 0 || <a class=\"id\" href=\"#tgid\">tgid</a> <= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Not even root can pretend to send signals from the kernel.</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   Nor can they impersonate a kill(), which adds source info.  */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#si_code\">si_code</a> >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#si_signo\">si_signo</a> = <a class=\"id\" href=\"#sig\">sig</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#do_send_specific\">do_send_specific</a>(<a class=\"id\" href=\"#tgid\">tgid</a>, <a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#sig\">sig</a>, <a class=\"id\" href=\"#info\">info</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE4\">SYSCALL_DEFINE4</a>(<a class=\"id\" href=\"#rt_tgsigqueueinfo\">rt_tgsigqueueinfo</a>, <a class=\"id\" href=\"#pid_t\">pid_t</a>, <a class=\"id\" href=\"#tgid\">tgid</a>, <a class=\"id\" href=\"#pid_t\">pid_t</a>, <a class=\"id\" href=\"#pid\">pid</a>, int, <a class=\"id\" href=\"#sig\">sig</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#siginfo_t\">siginfo_t</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#uinfo\">uinfo</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#siginfo_t\">siginfo_t</a> <a class=\"id\" href=\"#info\">info</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#uinfo\">uinfo</a>, sizeof(<a class=\"id\" href=\"#siginfo_t\">siginfo_t</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#do_rt_tgsigqueueinfo\">do_rt_tgsigqueueinfo</a>(<a class=\"id\" href=\"#tgid\">tgid</a>, <a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#sig\">sig</a>, &amp;<a class=\"id\" href=\"#info\">info</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#do_sigaction\">do_sigaction</a>(int <a class=\"id\" href=\"#sig\">sig</a>, struct <a class=\"id\" href=\"#k_sigaction\">k_sigaction</a> *<a class=\"id\" href=\"#act\">act</a>, struct <a class=\"id\" href=\"#k_sigaction\">k_sigaction</a> *<a class=\"id\" href=\"#oact\">oact</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#t\">t</a> = <a class=\"id\" href=\"#current\">current</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#k_sigaction\">k_sigaction</a> *<a class=\"id\" href=\"#k\">k</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sigset_t\">sigset_t</a> <a class=\"id\" href=\"#mask\">mask</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#valid_signal\">valid_signal</a>(<a class=\"id\" href=\"#sig\">sig</a>) || <a class=\"id\" href=\"#sig\">sig</a> &lt; 1 || (<a class=\"id\" href=\"#act\">act</a> && <a class=\"id\" href=\"#sig_kernel_only\">sig_kernel_only</a>(<a class=\"id\" href=\"#sig\">sig</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#k\">k</a> = &amp;<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#action\">action</a>[<a class=\"id\" href=\"#sig\">sig</a>-1];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#oact\">oact</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#oact\">oact</a> = *<a class=\"id\" href=\"#k\">k</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#act\">act</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sigdelsetmask\">sigdelsetmask</a>(&amp;<a class=\"id\" href=\"#act\">act</a>-><a class=\"id\" href=\"#sa\">sa</a>.<a class=\"id\" href=\"#sa_mask\">sa_mask</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#sigmask\">sigmask</a>(<a class=\"id\" href=\"#SIGKILL\">SIGKILL</a>) | <a class=\"id\" href=\"#sigmask\">sigmask</a>(<a class=\"id\" href=\"#SIGSTOP\">SIGSTOP</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#k\">k</a> = *<a class=\"id\" href=\"#act\">act</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * POSIX 3.3.1.3:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *  \"Setting a signal action to SIG_IGN for a signal that is</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *   pending shall cause the pending signal to be discarded,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *   whether or not it is blocked.\"</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *  \"Setting a signal action to SIG_DFL for a signal that is</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *   pending and whose default action is to ignore the signal</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *   (for example, SIGCHLD), shall cause the pending signal to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *   be discarded, whether or not it is blocked\"</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sig_handler_ignored\">sig_handler_ignored</a>(<a class=\"id\" href=\"#sig_handler\">sig_handler</a>(<a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#sig\">sig</a>), <a class=\"id\" href=\"#sig\">sig</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sigemptyset\">sigemptyset</a>(&amp;<a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sigaddset\">sigaddset</a>(&amp;<a class=\"id\" href=\"#mask\">mask</a>, <a class=\"id\" href=\"#sig\">sig</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rm_from_queue_full\">rm_from_queue_full</a>(&amp;<a class=\"id\" href=\"#mask\">mask</a>, &amp;<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#shared_pending\">shared_pending</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rm_from_queue_full\">rm_from_queue_full</a>(&amp;<a class=\"id\" href=\"#mask\">mask</a>, &amp;<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#pending\">pending</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a> = <a class=\"id\" href=\"#next_thread\">next_thread</a>(<a class=\"id\" href=\"#t\">t</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} while (<a class=\"id\" href=\"#t\">t</a> != <a class=\"id\" href=\"#current\">current</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int ", 
"<a class=\"id\" href=\"#do_sigaltstack\">do_sigaltstack</a> (const <a class=\"id\" href=\"#stack_t\">stack_t</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#uss\">uss</a>, <a class=\"id\" href=\"#stack_t\">stack_t</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#uoss\">uoss</a>, unsigned long <a class=\"id\" href=\"#sp\">sp</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stack_t\">stack_t</a> <a class=\"id\" href=\"#oss\">oss</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#oss\">oss</a>.<a class=\"id\" href=\"#ss_sp\">ss_sp</a> = (void <a class=\"id\" href=\"#__user\">__user</a> *) <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sas_ss_sp\">sas_ss_sp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#oss\">oss</a>.<a class=\"id\" href=\"#ss_size\">ss_size</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sas_ss_size\">sas_ss_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#oss\">oss</a>.<a class=\"id\" href=\"#ss_flags\">ss_flags</a> = <a class=\"id\" href=\"#sas_ss_flags\">sas_ss_flags</a>(<a class=\"id\" href=\"#sp\">sp</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#uss\">uss</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ss_sp\">ss_sp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#ss_size\">ss_size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#ss_flags\">ss_flags</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#access_ok\">access_ok</a>(<a class=\"id\" href=\"#VERIFY_READ\">VERIFY_READ</a>, <a class=\"id\" href=\"#uss\">uss</a>, sizeof(*<a class=\"id\" href=\"#uss\">uss</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#__get_user\">__get_user</a>(<a class=\"id\" href=\"#ss_sp\">ss_sp</a>, &amp;<a class=\"id\" href=\"#uss\">uss</a>-><a class=\"id\" href=\"#ss_sp\">ss_sp</a>) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__get_user\">__get_user</a>(<a class=\"id\" href=\"#ss_flags\">ss_flags</a>, &amp;<a class=\"id\" href=\"#uss\">uss</a>-><a class=\"id\" href=\"#ss_flags\">ss_flags</a>) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__get_user\">__get_user</a>(<a class=\"id\" href=\"#ss_size\">ss_size</a>, &amp;<a class=\"id\" href=\"#uss\">uss</a>-><a class=\"id\" href=\"#ss_size\">ss_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#on_sig_stack\">on_sig_stack</a>(<a class=\"id\" href=\"#sp\">sp</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Note - this code used to test ss_flags incorrectly</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *  <span class=\"ts\"/>  old code may have been written using ss_flags==0</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>  to mean ss_flags==SS_ONSTACK (as this was the only</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>  way that worked) - this fix preserves that older</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>  mechanism</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ss_flags\">ss_flags</a> != <a class=\"id\" href=\"#SS_DISABLE\">SS_DISABLE</a> && <a class=\"id\" href=\"#ss_flags\">ss_flags</a> != <a class=\"id\" href=\"#SS_ONSTACK\">SS_ONSTACK</a> && <a class=\"id\" href=\"#ss_flags\">ss_flags</a> != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ss_flags\">ss_flags</a> == <a class=\"id\" href=\"#SS_DISABLE\">SS_DISABLE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ss_size\">ss_size</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ss_sp\">ss_sp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ss_size\">ss_size</a> &lt; <a class=\"id\" href=\"#MINSIGSTKSZ\">MINSIGSTKSZ</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sas_ss_sp\">sas_ss_sp</a> = (unsigned long) <a class=\"id\" href=\"#ss_sp\">ss_sp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sas_ss_size\">sas_ss_size</a> = <a class=\"id\" href=\"#ss_size\">ss_size</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#uoss\">uoss</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#access_ok\">access_ok</a>(<a class=\"id\" href=\"#VERIFY_WRITE\">VERIFY_WRITE</a>, <a class=\"id\" href=\"#uoss\">uoss</a>, sizeof(*<a class=\"id\" href=\"#uoss\">uoss</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#oss\">oss</a>.<a class=\"id\" href=\"#ss_sp\">ss_sp</a>, &amp;<a class=\"id\" href=\"#uoss\">uoss</a>-><a class=\"id\" href=\"#ss_sp\">ss_sp</a>) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#oss\">oss</a>.<a class=\"id\" href=\"#ss_size\">ss_size</a>, &amp;<a class=\"id\" href=\"#uoss\">uoss</a>-><a class=\"id\" href=\"#ss_size\">ss_size</a>) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#oss\">oss</a>.<a class=\"id\" href=\"#ss_flags\">ss_flags</a>, &amp;<a class=\"id\" href=\"#uoss\">uoss</a>-><a class=\"id\" href=\"#ss_flags\">ss_flags</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__ARCH_WANT_SYS_SIGPENDING\">__ARCH_WANT_SYS_SIGPENDING</a>", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE1\">SYSCALL_DEFINE1</a>(<a class=\"id\" href=\"#sigpending\">sigpending</a>, <a class=\"id\" href=\"#old_sigset_t\">old_sigset_t</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#set\">set</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#do_sigpending\">do_sigpending</a>(<a class=\"id\" href=\"#set\">set</a>, sizeof(*<a class=\"id\" href=\"#set\">set</a>));", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__ARCH_WANT_SYS_SIGPROCMASK\">__ARCH_WANT_SYS_SIGPROCMASK</a>", 
"<span class=\"comment\">/* Some platforms have their own version with special arguments others</span>", 
"<span class=\"comment\">   support only sys_rt_sigprocmask.  */</span>", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE3\">SYSCALL_DEFINE3</a>(<a class=\"id\" href=\"#sigprocmask\">sigprocmask</a>, int, <a class=\"id\" href=\"#how\">how</a>, <a class=\"id\" href=\"#old_sigset_t\">old_sigset_t</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#set\">set</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_sigset_t\">old_sigset_t</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#oset\">oset</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_sigset_t\">old_sigset_t</a> <a class=\"id\" href=\"#old_set\">old_set</a>, <a class=\"id\" href=\"#new_set\">new_set</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#set\">set</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#new_set\">new_set</a>, <a class=\"id\" href=\"#set\">set</a>, sizeof(*<a class=\"id\" href=\"#set\">set</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_set\">new_set</a> &= ~(<a class=\"id\" href=\"#sigmask\">sigmask</a>(<a class=\"id\" href=\"#SIGKILL\">SIGKILL</a>) | <a class=\"id\" href=\"#sigmask\">sigmask</a>(<a class=\"id\" href=\"#SIGSTOP\">SIGSTOP</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_set\">old_set</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#blocked\">blocked</a>.<a class=\"id\" href=\"#sig\">sig</a>[0];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#how\">how</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#SIG_BLOCK\">SIG_BLOCK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sigaddsetmask\">sigaddsetmask</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#blocked\">blocked</a>, <a class=\"id\" href=\"#new_set\">new_set</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#SIG_UNBLOCK\">SIG_UNBLOCK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sigdelsetmask\">sigdelsetmask</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#blocked\">blocked</a>, <a class=\"id\" href=\"#new_set\">new_set</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#SIG_SETMASK\">SIG_SETMASK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#blocked\">blocked</a>.<a class=\"id\" href=\"#sig\">sig</a>[0] = <a class=\"id\" href=\"#new_set\">new_set</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#recalc_sigpending\">recalc_sigpending</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#oset\">oset</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#set_old\">set_old</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#oset\">oset</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_set\">old_set</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#blocked\">blocked</a>.<a class=\"id\" href=\"#sig\">sig</a>[0];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_old\">set_old</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#oset\">oset</a>, &amp;<a class=\"id\" href=\"#old_set\">old_set</a>, sizeof(*<a class=\"id\" href=\"#oset\">oset</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 0;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __ARCH_WANT_SYS_SIGPROCMASK */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__ARCH_WANT_SYS_RT_SIGACTION\">__ARCH_WANT_SYS_RT_SIGACTION</a>", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE4\">SYSCALL_DEFINE4</a>(<a class=\"id\" href=\"#rt_sigaction\">rt_sigaction</a>, int, <a class=\"id\" href=\"#sig\">sig</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#sigaction\">sigaction</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#act\">act</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sigaction\">sigaction</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#oact\">oact</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a>, <a class=\"id\" href=\"#sigsetsize\">sigsetsize</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#k_sigaction\">k_sigaction</a> <a class=\"id\" href=\"#new_sa\">new_sa</a>, <a class=\"id\" href=\"#old_sa\">old_sa</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* XXX: Don't preclude handling different sized sigset_t's.  */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sigsetsize\">sigsetsize</a> != sizeof(<a class=\"id\" href=\"#sigset_t\">sigset_t</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#act\">act</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#new_sa\">new_sa</a>.<a class=\"id\" href=\"#sa\">sa</a>, <a class=\"id\" href=\"#act\">act</a>, sizeof(<a class=\"id\" href=\"#new_sa\">new_sa</a>.<a class=\"id\" href=\"#sa\">sa</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#do_sigaction\">do_sigaction</a>(<a class=\"id\" href=\"#sig\">sig</a>, <a class=\"id\" href=\"#act\">act</a> ? &amp;<a class=\"id\" href=\"#new_sa\">new_sa</a> : <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#oact\">oact</a> ? &amp;<a class=\"id\" href=\"#old_sa\">old_sa</a> : <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a> && <a class=\"id\" href=\"#oact\">oact</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#oact\">oact</a>, &amp;<a class=\"id\" href=\"#old_sa\">old_sa</a>.<a class=\"id\" href=\"#sa\">sa</a>, sizeof(<a class=\"id\" href=\"#old_sa\">old_sa</a>.<a class=\"id\" href=\"#sa\">sa</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __ARCH_WANT_SYS_RT_SIGACTION */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__ARCH_WANT_SYS_SGETMASK\">__ARCH_WANT_SYS_SGETMASK</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * For backwards compatibility.  Functionality superseded by sigprocmask.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE0\">SYSCALL_DEFINE0</a>(<a class=\"id\" href=\"#sgetmask\">sgetmask</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* SMP safe */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#blocked\">blocked</a>.<a class=\"id\" href=\"#sig\">sig</a>[0];", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE1\">SYSCALL_DEFINE1</a>(<a class=\"id\" href=\"#ssetmask\">ssetmask</a>, int, <a class=\"id\" href=\"#newmask\">newmask</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#old\">old</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old\">old</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#blocked\">blocked</a>.<a class=\"id\" href=\"#sig\">sig</a>[0];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#siginitset\">siginitset</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#blocked\">blocked</a>, <a class=\"id\" href=\"#newmask\">newmask</a> &amp; ~(<a class=\"id\" href=\"#sigmask\">sigmask</a>(<a class=\"id\" href=\"#SIGKILL\">SIGKILL</a>)|", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#sigmask\">sigmask</a>(<a class=\"id\" href=\"#SIGSTOP\">SIGSTOP</a>)));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#recalc_sigpending\">recalc_sigpending</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#old\">old</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __ARCH_WANT_SGETMASK */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__ARCH_WANT_SYS_SIGNAL\">__ARCH_WANT_SYS_SIGNAL</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * For backwards compatibility.  Functionality superseded by sigaction.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE2\">SYSCALL_DEFINE2</a>(<a class=\"id\" href=\"#signal\">signal</a>, int, <a class=\"id\" href=\"#sig\">sig</a>, <a class=\"id\" href=\"#__sighandler_t\">__sighandler_t</a>, <a class=\"id\" href=\"#handler\">handler</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#k_sigaction\">k_sigaction</a> <a class=\"id\" href=\"#new_sa\">new_sa</a>, <a class=\"id\" href=\"#old_sa\">old_sa</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_sa\">new_sa</a>.<a class=\"id\" href=\"#sa\">sa</a>.<a class=\"id\" href=\"#sa_handler\">sa_handler</a> = <a class=\"id\" href=\"#handler\">handler</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_sa\">new_sa</a>.<a class=\"id\" href=\"#sa\">sa</a>.<a class=\"id\" href=\"#sa_flags\">sa_flags</a> = <a class=\"id\" href=\"#SA_ONESHOT\">SA_ONESHOT</a> | <a class=\"id\" href=\"#SA_NOMASK\">SA_NOMASK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sigemptyset\">sigemptyset</a>(&amp;<a class=\"id\" href=\"#new_sa\">new_sa</a>.<a class=\"id\" href=\"#sa\">sa</a>.<a class=\"id\" href=\"#sa_mask\">sa_mask</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#do_sigaction\">do_sigaction</a>(<a class=\"id\" href=\"#sig\">sig</a>, &amp;<a class=\"id\" href=\"#new_sa\">new_sa</a>, &amp;<a class=\"id\" href=\"#old_sa\">old_sa</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a> ? <a class=\"id\" href=\"#ret\">ret</a> : (unsigned long)<a class=\"id\" href=\"#old_sa\">old_sa</a>.<a class=\"id\" href=\"#sa\">sa</a>.<a class=\"id\" href=\"#sa_handler\">sa_handler</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __ARCH_WANT_SYS_SIGNAL */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__ARCH_WANT_SYS_PAUSE\">__ARCH_WANT_SYS_PAUSE</a>", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE0\">SYSCALL_DEFINE0</a>(<a class=\"id\" href=\"#pause\">pause</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#TASK_INTERRUPTIBLE\">TASK_INTERRUPTIBLE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#schedule\">schedule</a>();", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ERESTARTNOHAND\">ERESTARTNOHAND</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__ARCH_WANT_SYS_RT_SIGSUSPEND\">__ARCH_WANT_SYS_RT_SIGSUSPEND</a>", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE2\">SYSCALL_DEFINE2</a>(<a class=\"id\" href=\"#rt_sigsuspend\">rt_sigsuspend</a>, <a class=\"id\" href=\"#sigset_t\">sigset_t</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#unewset\">unewset</a>, <a class=\"id\" href=\"#size_t\">size_t</a>, <a class=\"id\" href=\"#sigsetsize\">sigsetsize</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sigset_t\">sigset_t</a> <a class=\"id\" href=\"#newset\">newset</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* XXX: Don't preclude handling different sized sigset_t's.  */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sigsetsize\">sigsetsize</a> != sizeof(<a class=\"id\" href=\"#sigset_t\">sigset_t</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#newset\">newset</a>, <a class=\"id\" href=\"#unewset\">unewset</a>, sizeof(<a class=\"id\" href=\"#newset\">newset</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sigdelsetmask\">sigdelsetmask</a>(&amp;<a class=\"id\" href=\"#newset\">newset</a>, <a class=\"id\" href=\"#sigmask\">sigmask</a>(<a class=\"id\" href=\"#SIGKILL\">SIGKILL</a>)|<a class=\"id\" href=\"#sigmask\">sigmask</a>(<a class=\"id\" href=\"#SIGSTOP\">SIGSTOP</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#saved_sigmask\">saved_sigmask</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#blocked\">blocked</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#blocked\">blocked</a> = <a class=\"id\" href=\"#newset\">newset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#recalc_sigpending\">recalc_sigpending</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#TASK_INTERRUPTIBLE\">TASK_INTERRUPTIBLE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#schedule\">schedule</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_restore_sigmask\">set_restore_sigmask</a>();", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ERESTARTNOHAND\">ERESTARTNOHAND</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __ARCH_WANT_SYS_RT_SIGSUSPEND */</span>", 
"", 
"<a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#weak\">weak</a>)) const char *<a class=\"id\" href=\"#arch_vma_name\">arch_vma_name</a>(struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#signals_init\">signals_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sigqueue_cachep\">sigqueue_cachep</a> = <a class=\"id\" href=\"#KMEM_CACHE\">KMEM_CACHE</a>(<a class=\"id\" href=\"#sigqueue\">sigqueue</a>, <a class=\"id\" href=\"#SLAB_PANIC\">SLAB_PANIC</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_KGDB_KDB\">CONFIG_KGDB_KDB</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kdb\">kdb</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * kdb_send_sig_info - Allows kdb to send signals without exposing</span>", 
"<span class=\"comment\"> * signal internals.  This function checks if the required locks are</span>", 
"<span class=\"comment\"> * available before calling the main signal code, to avoid kdb</span>", 
"<span class=\"comment\"> * deadlocks.</span>", 
"<span class=\"comment\"> */</span>", 
"void", 
"<a class=\"id\" href=\"#kdb_send_sig_info\">kdb_send_sig_info</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#t\">t</a>, struct <a class=\"id\" href=\"#siginfo\">siginfo</a> *<a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/>static struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#kdb_prev_t\">kdb_prev_t</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#sig\">sig</a>, <a class=\"id\" href=\"#new_t\">new_t</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#spin_trylock\">spin_trylock</a>(&amp;<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kdb_printf\">kdb_printf</a>(\"Can't do kill command now.\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"The sigmask lock is held somewhere else in \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"kernel, try again later\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_t\">new_t</a> = <a class=\"id\" href=\"#kdb_prev_t\">kdb_prev_t</a> != <a class=\"id\" href=\"#t\">t</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kdb_prev_t\">kdb_prev_t</a> = <a class=\"id\" href=\"#t\">t</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#state\">state</a> != <a class=\"id\" href=\"#TASK_RUNNING\">TASK_RUNNING</a> && <a class=\"id\" href=\"#new_t\">new_t</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kdb_printf\">kdb_printf</a>(\"Process is not RUNNING, sending a signal from \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"kdb risks deadlock\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"on the run queue locks. \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"The signal has _not_ been sent.\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"Reissue the kill command if you want to risk \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"the deadlock.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sig\">sig</a> = <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#si_signo\">si_signo</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#send_sig_info\">send_sig_info</a>(<a class=\"id\" href=\"#sig\">sig</a>, <a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#t\">t</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kdb_printf\">kdb_printf</a>(\"Fail to deliver Signal %d to process %d.\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#sig\">sig</a>, <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#pid\">pid</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kdb_printf\">kdb_printf</a>(\"Signal %d is sent to process %d.\\n\", <a class=\"id\" href=\"#sig\">sig</a>, <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#pid\">pid</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* CONFIG_KGDB_KDB */</span>", 
];
xr_frag_insert('l/6a/5928e1653ef47f7f6cbc1bc2ca9d361e1b317b.xr', __xr_tmp);
