var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * INET<span class=\"ts\"/><span class=\"ts\"/>An implementation of the TCP/IP protocol suite for the LINUX</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>operating system.  INET is implemented using the  BSD Socket</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>interface as the means of communication with the user level.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Definitions for the UDP module.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Version:<span class=\"ts\"/>@(#)udp.h<span class=\"ts\"/>1.0.2<span class=\"ts\"/>05/07/93</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Authors:<span class=\"ts\"/>Ross Biro</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Fred N. van Kempen, &lt;waltje@uWalt.NL.Mugnet.ORG&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Fixes:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>: Turned on udp checksums. I don't want to</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  chase 'memory corruption' bugs that aren't!</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_UDP_H\">_UDP_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_UDP_H\">_UDP_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#inet_sock\">inet_sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#sock\">sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#snmp\">snmp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip\">ip</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#poll\">poll</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>struct udp_skb_cb  -  UDP(-Lite) private variables</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@header:      private variables used by IPv4/IPv6</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@cscov:       checksum coverage length (UDP-Lite only)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@partial_cov: if set indicates partial csum coverage</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#udp_skb_cb\">udp_skb_cb</a> {", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_skb_parm\">inet_skb_parm</a><span class=\"ts\"/><a class=\"id\" href=\"#h4\">h4</a>;", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6\">CONFIG_IPV6</a>) || <a class=\"id\" href=\"#defined\">defined</a> (<a class=\"id\" href=\"#CONFIG_IPV6_MODULE\">CONFIG_IPV6_MODULE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_skb_parm\">inet6_skb_parm</a><span class=\"ts\"/><a class=\"id\" href=\"#h6\">h6</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#header\">header</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cscov\">cscov</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#partial_cov\">partial_cov</a>;", 
"};", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#UDP_SKB_CB\">UDP_SKB_CB</a>(<a class=\"id\" href=\"#__skb\">__skb</a>)<span class=\"ts\"/>((struct <a class=\"id\" href=\"#udp_skb_cb\">udp_skb_cb</a> *)((<a class=\"id\" href=\"#__skb\">__skb</a>)-><a class=\"id\" href=\"#cb\">cb</a>))", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>struct udp_hslot - UDP hash slot</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@head:<span class=\"ts\"/>head of list of sockets</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@count:<span class=\"ts\"/>number of sockets in 'head' list</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@lock:<span class=\"ts\"/>spinlock protecting changes to head/count</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#udp_hslot\">udp_hslot</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_nulls_head\">hlist_nulls_head</a><span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lock\">lock</a>;", 
"} <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#aligned\">aligned</a>(2 * sizeof(long))));", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>struct udp_table - UDP table</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@hash:<span class=\"ts\"/>hash table, sockets are hashed on (local port)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@hash2:<span class=\"ts\"/>hash table, sockets are hashed on (local port, local address)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@mask:<span class=\"ts\"/>number of slots in hash tables, minus 1</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@log:<span class=\"ts\"/>log2(number of slots in hash table)</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#udp_table\">udp_table</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#udp_hslot\">udp_hslot</a><span class=\"ts\"/>*<a class=\"id\" href=\"#hash\">hash</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#udp_hslot\">udp_hslot</a><span class=\"ts\"/>*<a class=\"id\" href=\"#hash2\">hash2</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#log\">log</a>;", 
"};", 
"extern struct <a class=\"id\" href=\"#udp_table\">udp_table</a> <a class=\"id\" href=\"#udp_table\">udp_table</a>;", 
"extern void <a class=\"id\" href=\"#udp_table_init\">udp_table_init</a>(struct <a class=\"id\" href=\"#udp_table\">udp_table</a> *, const char *);", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#udp_hslot\">udp_hslot</a> *<a class=\"id\" href=\"#udp_hashslot\">udp_hashslot</a>(struct <a class=\"id\" href=\"#udp_table\">udp_table</a> *<a class=\"id\" href=\"#table\">table</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, unsigned <a class=\"id\" href=\"#num\">num</a>)", 
"{", 
"<span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#hash\">hash</a>[<a class=\"id\" href=\"#udp_hashfn\">udp_hashfn</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#num\">num</a>, <a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#mask\">mask</a>)];", 
"}", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * For secondary hash, net_hash_mix() is performed before calling</span>", 
"<span class=\"comment\"> * udp_hashslot2(), this explains difference with udp_hashslot()</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#udp_hslot\">udp_hslot</a> *<a class=\"id\" href=\"#udp_hashslot2\">udp_hashslot2</a>(struct <a class=\"id\" href=\"#udp_table\">udp_table</a> *<a class=\"id\" href=\"#table\">table</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      unsigned int <a class=\"id\" href=\"#hash\">hash</a>)", 
"{", 
"<span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#hash2\">hash2</a>[<a class=\"id\" href=\"#hash\">hash</a> &amp; <a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#mask\">mask</a>];", 
"}", 
"", 
"<span class=\"comment\">/* Note: this must match 'valbool' in sock_setsockopt */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#UDP_CSUM_NOXMIT\">UDP_CSUM_NOXMIT</a><span class=\"ts\"/><span class=\"ts\"/>1", 
"", 
"<span class=\"comment\">/* Used by SunRPC/xprt layer. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#UDP_CSUM_NORCV\">UDP_CSUM_NORCV</a><span class=\"ts\"/><span class=\"ts\"/>2", 
"", 
"<span class=\"comment\">/* Default, as per the RFC, is to always do csums. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#UDP_CSUM_DEFAULT\">UDP_CSUM_DEFAULT</a><span class=\"ts\"/>0", 
"", 
"extern struct <a class=\"id\" href=\"#proto\">proto</a> <a class=\"id\" href=\"#udp_prot\">udp_prot</a>;", 
"", 
"extern <a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#udp_memory_allocated\">udp_memory_allocated</a>;", 
"", 
"<span class=\"comment\">/* sysctl variables for udp */</span>", 
"extern int <a class=\"id\" href=\"#sysctl_udp_mem\">sysctl_udp_mem</a>[3];", 
"extern int <a class=\"id\" href=\"#sysctl_udp_rmem_min\">sysctl_udp_rmem_min</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_udp_wmem_min\">sysctl_udp_wmem_min</a>;", 
"", 
"struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Generic checksumming routines for UDP(-Lite) v4 and v6</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#__sum16\">__sum16</a> <a class=\"id\" href=\"#__udp_lib_checksum_complete\">__udp_lib_checksum_complete</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__skb_checksum_complete_head\">__skb_checksum_complete_head</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#UDP_SKB_CB\">UDP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#cscov\">cscov</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#udp_lib_checksum_complete\">udp_lib_checksum_complete</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>return !<a class=\"id\" href=\"#skb_csum_unnecessary\">skb_csum_unnecessary</a>(<a class=\"id\" href=\"#skb\">skb</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__udp_lib_checksum_complete\">__udp_lib_checksum_complete</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>udp_csum_outgoing  -  compute UDPv4/v6 checksum over fragments</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>@sk: <span class=\"ts\"/>socket we are writing to</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>@skb: <span class=\"ts\"/>sk_buff containing the filled-in UDP header</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>        (checksum field must be zeroed out)</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#__wsum\">__wsum</a> <a class=\"id\" href=\"#udp_csum_outgoing\">udp_csum_outgoing</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__wsum\">__wsum</a> <a class=\"id\" href=\"#csum\">csum</a> = <a class=\"id\" href=\"#csum_partial\">csum_partial</a>(<a class=\"id\" href=\"#skb_transport_header\">skb_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   sizeof(struct <a class=\"id\" href=\"#udphdr\">udphdr</a>), 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_queue_walk\">skb_queue_walk</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_write_queue\">sk_write_queue</a>, <a class=\"id\" href=\"#skb\">skb</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#csum\">csum</a> = <a class=\"id\" href=\"#csum_add\">csum_add</a>(<a class=\"id\" href=\"#csum\">csum</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#csum\">csum</a>;", 
"}", 
"", 
"<span class=\"comment\">/* hash routines shared between UDPv4/6 and UDP-Litev4/6 */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#udp_lib_hash\">udp_lib_hash</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"}", 
"", 
"extern void <a class=\"id\" href=\"#udp_lib_unhash\">udp_lib_unhash</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"extern void <a class=\"id\" href=\"#udp_lib_rehash\">udp_lib_rehash</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#new_hash\">new_hash</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#udp_lib_close\">udp_lib_close</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, long <a class=\"id\" href=\"#timeout\">timeout</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_common_release\">sk_common_release</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"}", 
"", 
"extern int <a class=\"id\" href=\"#udp_lib_get_port\">udp_lib_get_port</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, unsigned short <a class=\"id\" href=\"#snum\">snum</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    int (*)(const struct <a class=\"id\" href=\"#sock\">sock</a> *,const struct <a class=\"id\" href=\"#sock\">sock</a> *),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    unsigned int <a class=\"id\" href=\"#hash2_nulladdr\">hash2_nulladdr</a>);", 
"", 
"<span class=\"comment\">/* net/ipv4/udp.c */</span>", 
"extern int <a class=\"id\" href=\"#udp_get_port\">udp_get_port</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, unsigned short <a class=\"id\" href=\"#snum\">snum</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int (*<a class=\"id\" href=\"#saddr_cmp\">saddr_cmp</a>)(const struct <a class=\"id\" href=\"#sock\">sock</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const struct <a class=\"id\" href=\"#sock\">sock</a> *));", 
"extern void <a class=\"id\" href=\"#udp_err\">udp_err</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *, <a class=\"id\" href=\"#u32\">u32</a>);", 
"extern int <a class=\"id\" href=\"#udp_sendmsg\">udp_sendmsg</a>(struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *<a class=\"id\" href=\"#iocb\">iocb</a>, struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#msghdr\">msghdr</a> *<a class=\"id\" href=\"#msg\">msg</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>);", 
"extern void <a class=\"id\" href=\"#udp_flush_pending_frames\">udp_flush_pending_frames</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"extern int <a class=\"id\" href=\"#udp_rcv\">udp_rcv</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"extern int <a class=\"id\" href=\"#udp_ioctl\">udp_ioctl</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#cmd\">cmd</a>, unsigned long <a class=\"id\" href=\"#arg\">arg</a>);", 
"extern int <a class=\"id\" href=\"#udp_disconnect\">udp_disconnect</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#flags\">flags</a>);", 
"extern unsigned int <a class=\"id\" href=\"#udp_poll\">udp_poll</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#poll_table\">poll_table</a> *<a class=\"id\" href=\"#wait\">wait</a>);", 
"extern int <a class=\"id\" href=\"#udp_lib_getsockopt\">udp_lib_getsockopt</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#level\">level</a>, int <a class=\"id\" href=\"#optname\">optname</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optval\">optval</a>, int <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optlen\">optlen</a>);", 
"extern int <a class=\"id\" href=\"#udp_lib_setsockopt\">udp_lib_setsockopt</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#level\">level</a>, int <a class=\"id\" href=\"#optname\">optname</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optval\">optval</a>, unsigned int <a class=\"id\" href=\"#optlen\">optlen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      int (*<a class=\"id\" href=\"#push_pending_frames\">push_pending_frames</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *));", 
"extern struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#udp4_lib_lookup\">udp4_lib_lookup</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#sport\">sport</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#dport\">dport</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    int <a class=\"id\" href=\"#dif\">dif</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>SNMP statistics for UDP and UDP-Lite</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#UDP_INC_STATS_USER\">UDP_INC_STATS_USER</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#field\">field</a>, <a class=\"id\" href=\"#is_udplite\">is_udplite</a>)<span class=\"ts\"/>      do { \\", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_udplite\">is_udplite</a>) <a class=\"id\" href=\"#SNMP_INC_STATS_USER\">SNMP_INC_STATS_USER</a>((<a class=\"id\" href=\"#net\">net</a>)-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#udplite_statistics\">udplite_statistics</a>, <a class=\"id\" href=\"#field\">field</a>);       \\", 
"<span class=\"ts\"/>else<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SNMP_INC_STATS_USER\">SNMP_INC_STATS_USER</a>((<a class=\"id\" href=\"#net\">net</a>)-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#udp_statistics\">udp_statistics</a>, <a class=\"id\" href=\"#field\">field</a>);  }  while(0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#UDP_INC_STATS_BH\">UDP_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#field\">field</a>, <a class=\"id\" href=\"#is_udplite\">is_udplite</a>) <span class=\"ts\"/>      do { \\", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_udplite\">is_udplite</a>) <a class=\"id\" href=\"#SNMP_INC_STATS_BH\">SNMP_INC_STATS_BH</a>((<a class=\"id\" href=\"#net\">net</a>)-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#udplite_statistics\">udplite_statistics</a>, <a class=\"id\" href=\"#field\">field</a>);         \\", 
"<span class=\"ts\"/>else<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SNMP_INC_STATS_BH\">SNMP_INC_STATS_BH</a>((<a class=\"id\" href=\"#net\">net</a>)-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#udp_statistics\">udp_statistics</a>, <a class=\"id\" href=\"#field\">field</a>);    }  while(0)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#UDP6_INC_STATS_BH\">UDP6_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#field\">field</a>, <a class=\"id\" href=\"#is_udplite\">is_udplite</a>) <span class=\"ts\"/>    do { \\", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_udplite\">is_udplite</a>) <a class=\"id\" href=\"#SNMP_INC_STATS_BH\">SNMP_INC_STATS_BH</a>((<a class=\"id\" href=\"#net\">net</a>)-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#udplite_stats_in6\">udplite_stats_in6</a>, <a class=\"id\" href=\"#field\">field</a>);\\", 
"<span class=\"ts\"/>else<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SNMP_INC_STATS_BH\">SNMP_INC_STATS_BH</a>((<a class=\"id\" href=\"#net\">net</a>)-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#udp_stats_in6\">udp_stats_in6</a>, <a class=\"id\" href=\"#field\">field</a>);  \\", 
"} while(0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#UDP6_INC_STATS_USER\">UDP6_INC_STATS_USER</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#field\">field</a>, <a class=\"id\" href=\"#__lite\">__lite</a>)<span class=\"ts\"/><span class=\"ts\"/>    do { \\", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#__lite\">__lite</a>) <a class=\"id\" href=\"#SNMP_INC_STATS_USER\">SNMP_INC_STATS_USER</a>((<a class=\"id\" href=\"#net\">net</a>)-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#udplite_stats_in6\">udplite_stats_in6</a>, <a class=\"id\" href=\"#field\">field</a>);  \\", 
"<span class=\"ts\"/>else<span class=\"ts\"/>    <a class=\"id\" href=\"#SNMP_INC_STATS_USER\">SNMP_INC_STATS_USER</a>((<a class=\"id\" href=\"#net\">net</a>)-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#udp_stats_in6\">udp_stats_in6</a>, <a class=\"id\" href=\"#field\">field</a>);      \\", 
"} while(0)", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6\">CONFIG_IPV6</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MODULE\">CONFIG_IPV6_MODULE</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#UDPX_INC_STATS_BH\">UDPX_INC_STATS_BH</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#field\">field</a>) \\", 
"<span class=\"ts\"/>do { \\", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#sk_family\">sk_family</a> == <a class=\"id\" href=\"#AF_INET\">AF_INET</a>) \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#UDP_INC_STATS_BH\">UDP_INC_STATS_BH</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#field\">field</a>, 0); \\", 
"<span class=\"ts\"/><span class=\"ts\"/>else \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#UDP6_INC_STATS_BH\">UDP6_INC_STATS_BH</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#field\">field</a>, 0); \\", 
"<span class=\"ts\"/>} while (0);", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#UDPX_INC_STATS_BH\">UDPX_INC_STATS_BH</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#field\">field</a>) <a class=\"id\" href=\"#UDP_INC_STATS_BH\">UDP_INC_STATS_BH</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#field\">field</a>, 0)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/* /proc */</span>", 
"struct <a class=\"id\" href=\"#udp_seq_afinfo\">udp_seq_afinfo</a> {", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sa_family_t\">sa_family_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#family\">family</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#udp_table\">udp_table</a><span class=\"ts\"/>*<a class=\"id\" href=\"#udp_table\">udp_table</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file_operations\">file_operations</a><span class=\"ts\"/><a class=\"id\" href=\"#seq_fops\">seq_fops</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a><span class=\"ts\"/><a class=\"id\" href=\"#seq_ops\">seq_ops</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#udp_iter_state\">udp_iter_state</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#seq_net_private\">seq_net_private</a>  <a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sa_family_t\">sa_family_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#family\">family</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bucket\">bucket</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#udp_table\">udp_table</a><span class=\"ts\"/>*<a class=\"id\" href=\"#udp_table\">udp_table</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROC_FS\">CONFIG_PROC_FS</a>", 
"extern int <a class=\"id\" href=\"#udp_proc_register\">udp_proc_register</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#udp_seq_afinfo\">udp_seq_afinfo</a> *<a class=\"id\" href=\"#afinfo\">afinfo</a>);", 
"extern void <a class=\"id\" href=\"#udp_proc_unregister\">udp_proc_unregister</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#udp_seq_afinfo\">udp_seq_afinfo</a> *<a class=\"id\" href=\"#afinfo\">afinfo</a>);", 
"", 
"extern int <a class=\"id\" href=\"#udp4_proc_init\">udp4_proc_init</a>(void);", 
"extern void <a class=\"id\" href=\"#udp4_proc_exit\">udp4_proc_exit</a>(void);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"extern void <a class=\"id\" href=\"#udp_init\">udp_init</a>(void);", 
"", 
"extern int <a class=\"id\" href=\"#udp4_ufo_send_check\">udp4_ufo_send_check</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"extern struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#udp4_ufo_fragment\">udp4_ufo_fragment</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#features\">features</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* _UDP_H */</span>", 
];
xr_frag_insert('l/6a/ca7259d0ed9c9dccef9a762d66edd88cb588d5.xr', __xr_tmp);
