var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * linux/fs/nls/nls_base.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Native language support--charsets and unicode translations.</span>", 
"<span class=\"comment\"> * By Gordon Chaffee 1996, 1997</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Unicode based case conversion 1999 by Wolfram Pienkoss</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#nls\">nls</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kmod\">kmod</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#byteorder\">byteorder</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static struct <a class=\"id\" href=\"#nls_table\">nls_table</a> <a class=\"id\" href=\"#default_table\">default_table</a>;", 
"static struct <a class=\"id\" href=\"#nls_table\">nls_table</a> *<a class=\"id\" href=\"#tables\">tables</a> = &amp;<a class=\"id\" href=\"#default_table\">default_table</a>;", 
"static <a class=\"id\" href=\"#DEFINE_SPINLOCK\">DEFINE_SPINLOCK</a>(<a class=\"id\" href=\"#nls_lock\">nls_lock</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Sample implementation from Unicode home page.</span>", 
"<span class=\"comment\"> * http://www.stonehand.com/unicode/standard/fss-utf.html</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#utf8_table\">utf8_table</a> {", 
"<span class=\"ts\"/>int     <a class=\"id\" href=\"#cmask\">cmask</a>;", 
"<span class=\"ts\"/>int     <a class=\"id\" href=\"#cval\">cval</a>;", 
"<span class=\"ts\"/>int     <a class=\"id\" href=\"#shift\">shift</a>;", 
"<span class=\"ts\"/>long    <a class=\"id\" href=\"#lmask\">lmask</a>;", 
"<span class=\"ts\"/>long    <a class=\"id\" href=\"#lval\">lval</a>;", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#utf8_table\">utf8_table</a> <a class=\"id\" href=\"#utf8_table\">utf8_table</a>[] =", 
"{", 
"    {0x80,  0x00,   0*6,    0x7F,           0,         <span class=\"comment\">/* 1 byte sequence */</span>},", 
"    {0xE0,  0xC0,   1*6,    0x7FF,          0x80,      <span class=\"comment\">/* 2 byte sequence */</span>},", 
"    {0xF0,  0xE0,   2*6,    0xFFFF,         0x800,     <span class=\"comment\">/* 3 byte sequence */</span>},", 
"    {0xF8,  0xF0,   3*6,    0x1FFFFF,       0x10000,   <span class=\"comment\">/* 4 byte sequence */</span>},", 
"    {0xFC,  0xF8,   4*6,    0x3FFFFFF,      0x200000,  <span class=\"comment\">/* 5 byte sequence */</span>},", 
"    {0xFE,  0xFC,   5*6,    0x7FFFFFFF,     0x4000000, <span class=\"comment\">/* 6 byte sequence */</span>},", 
"    {0,<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <span class=\"comment\">/* end of table    */</span>}", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#UNICODE_MAX\">UNICODE_MAX</a><span class=\"ts\"/>0x0010ffff", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PLANE_SIZE\">PLANE_SIZE</a><span class=\"ts\"/>0x00010000", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SURROGATE_MASK\">SURROGATE_MASK</a><span class=\"ts\"/>0xfffff800", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SURROGATE_PAIR\">SURROGATE_PAIR</a><span class=\"ts\"/>0x0000d800", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SURROGATE_LOW\">SURROGATE_LOW</a><span class=\"ts\"/>0x00000400", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SURROGATE_BITS\">SURROGATE_BITS</a><span class=\"ts\"/>0x000003ff", 
"", 
"int <a class=\"id\" href=\"#utf8_to_utf32\">utf8_to_utf32</a>(const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#s\">s</a>, int <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#unicode_t\">unicode_t</a> *<a class=\"id\" href=\"#pu\">pu</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#l\">l</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#c0\">c0</a>, <a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#nc\">nc</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#utf8_table\">utf8_table</a> *<a class=\"id\" href=\"#t\">t</a>;", 
"  ", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nc\">nc</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#c0\">c0</a> = *<a class=\"id\" href=\"#s\">s</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#c0\">c0</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#t\">t</a> = <a class=\"id\" href=\"#utf8_table\">utf8_table</a>; <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#cmask\">cmask</a>; <a class=\"id\" href=\"#t\">t</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nc\">nc</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#c0\">c0</a> &amp; <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#cmask\">cmask</a>) == <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#cval\">cval</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> &= <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#lmask\">lmask</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#l\">l</a> &lt; <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#lval\">lval</a> || <a class=\"id\" href=\"#l\">l</a> &gt; <a class=\"id\" href=\"#UNICODE_MAX\">UNICODE_MAX</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#l\">l</a> &amp; <a class=\"id\" href=\"#SURROGATE_MASK\">SURROGATE_MASK</a>) == <a class=\"id\" href=\"#SURROGATE_PAIR\">SURROGATE_PAIR</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#pu\">pu</a> = (<a class=\"id\" href=\"#unicode_t\">unicode_t</a>) <a class=\"id\" href=\"#l\">l</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#nc\">nc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> <= <a class=\"id\" href=\"#nc\">nc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = (*<a class=\"id\" href=\"#s\">s</a> ^ 0x80) &amp; 0xFF;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> &amp; 0xC0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> = (<a class=\"id\" href=\"#l\">l</a> << 6) | <a class=\"id\" href=\"#c\">c</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return -1;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#utf8_to_utf32\">utf8_to_utf32</a>);", 
"", 
"int <a class=\"id\" href=\"#utf32_to_utf8\">utf32_to_utf8</a>(<a class=\"id\" href=\"#unicode_t\">unicode_t</a> <a class=\"id\" href=\"#u\">u</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#s\">s</a>, int <a class=\"id\" href=\"#maxlen\">maxlen</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#l\">l</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#nc\">nc</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#utf8_table\">utf8_table</a> *<a class=\"id\" href=\"#t\">t</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#s\">s</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#u\">u</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#l\">l</a> &gt; <a class=\"id\" href=\"#UNICODE_MAX\">UNICODE_MAX</a> || (<a class=\"id\" href=\"#l\">l</a> &amp; <a class=\"id\" href=\"#SURROGATE_MASK\">SURROGATE_MASK</a>) == <a class=\"id\" href=\"#SURROGATE_PAIR\">SURROGATE_PAIR</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nc\">nc</a> = 0;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#t\">t</a> = <a class=\"id\" href=\"#utf8_table\">utf8_table</a>; <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#cmask\">cmask</a> && <a class=\"id\" href=\"#maxlen\">maxlen</a>; <a class=\"id\" href=\"#t\">t</a>++, <a class=\"id\" href=\"#maxlen\">maxlen</a>--) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nc\">nc</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#l\">l</a> <= <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#lmask\">lmask</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#shift\">shift</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#s\">s</a> = (<a class=\"id\" href=\"#u8\">u8</a>) (<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#cval\">cval</a> | (<a class=\"id\" href=\"#l\">l</a> >> <a class=\"id\" href=\"#c\">c</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#c\">c</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> -= 6;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#s\">s</a> = (<a class=\"id\" href=\"#u8\">u8</a>) (0x80 | ((<a class=\"id\" href=\"#l\">l</a> >> <a class=\"id\" href=\"#c\">c</a>) &amp; 0x3F));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#nc\">nc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return -1;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#utf32_to_utf8\">utf32_to_utf8</a>);", 
"", 
"int <a class=\"id\" href=\"#utf8s_to_utf16s\">utf8s_to_utf16s</a>(const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#s\">s</a>, int <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#wchar_t\">wchar_t</a> *<a class=\"id\" href=\"#pwcs\">pwcs</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> *<a class=\"id\" href=\"#op\">op</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unicode_t\">unicode_t</a> <a class=\"id\" href=\"#u\">u</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#op\">op</a> = <a class=\"id\" href=\"#pwcs\">pwcs</a>;", 
"<span class=\"ts\"/>while (*<a class=\"id\" href=\"#s\">s</a> && <a class=\"id\" href=\"#len\">len</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (*<a class=\"id\" href=\"#s\">s</a> &amp; 0x80) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#utf8_to_utf32\">utf8_to_utf32</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#len\">len</a>, &amp;<a class=\"id\" href=\"#u\">u</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#u\">u</a> >= <a class=\"id\" href=\"#PLANE_SIZE\">PLANE_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a> -= <a class=\"id\" href=\"#PLANE_SIZE\">PLANE_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#op\">op</a>++ = (<a class=\"id\" href=\"#wchar_t\">wchar_t</a>) (<a class=\"id\" href=\"#SURROGATE_PAIR\">SURROGATE_PAIR</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#u\">u</a> >> 10) &amp; <a class=\"id\" href=\"#SURROGATE_BITS\">SURROGATE_BITS</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#op\">op</a>++ = (<a class=\"id\" href=\"#wchar_t\">wchar_t</a>) (<a class=\"id\" href=\"#SURROGATE_PAIR\">SURROGATE_PAIR</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SURROGATE_LOW\">SURROGATE_LOW</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#u\">u</a> &amp; <a class=\"id\" href=\"#SURROGATE_BITS\">SURROGATE_BITS</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#op\">op</a>++ = (<a class=\"id\" href=\"#wchar_t\">wchar_t</a>) <a class=\"id\" href=\"#u\">u</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a> += <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> -= <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#op\">op</a>++ = *<a class=\"id\" href=\"#s\">s</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#op\">op</a> - <a class=\"id\" href=\"#pwcs\">pwcs</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#utf8s_to_utf16s\">utf8s_to_utf16s</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long <a class=\"id\" href=\"#get_utf16\">get_utf16</a>(unsigned <a class=\"id\" href=\"#c\">c</a>, enum <a class=\"id\" href=\"#utf16_endian\">utf16_endian</a> <a class=\"id\" href=\"#endian\">endian</a>)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#endian\">endian</a>) {", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#c\">c</a>;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#UTF16_LITTLE_ENDIAN\">UTF16_LITTLE_ENDIAN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#__le16_to_cpu\">__le16_to_cpu</a>(<a class=\"id\" href=\"#c\">c</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#UTF16_BIG_ENDIAN\">UTF16_BIG_ENDIAN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#__be16_to_cpu\">__be16_to_cpu</a>(<a class=\"id\" href=\"#c\">c</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"int <a class=\"id\" href=\"#utf16s_to_utf8s\">utf16s_to_utf8s</a>(const <a class=\"id\" href=\"#wchar_t\">wchar_t</a> *<a class=\"id\" href=\"#pwcs\">pwcs</a>, int <a class=\"id\" href=\"#len\">len</a>, enum <a class=\"id\" href=\"#utf16_endian\">utf16_endian</a> <a class=\"id\" href=\"#endian\">endian</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#s\">s</a>, int <a class=\"id\" href=\"#maxlen\">maxlen</a>)", 
];
xr_frag_insert('l/6a/d27756722ba537226d27687f65d370a693c7d0.xr', __xr_tmp);
