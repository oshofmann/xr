var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Common interrupt code for 32 and 64 bit</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cpu\">cpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel_stat\">kernel_stat</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#smp\">smp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ftrace\">ftrace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#apic\">apic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#io_apic\">io_apic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#irq\">irq</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#idle\">idle</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#mce\">mce</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#hw_irq\">hw_irq</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#irq_err_count\">irq_err_count</a>;", 
"", 
"<span class=\"comment\">/* Function pointer for generic interrupt vector handling */</span>", 
"void (*<a class=\"id\" href=\"#x86_platform_ipi_callback\">x86_platform_ipi_callback</a>)(void) = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * 'what should we do if we get a hw irq event on an illegal vector'.</span>", 
"<span class=\"comment\"> * each architecture has to answer this themselves.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#ack_bad_irq\">ack_bad_irq</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#printk_ratelimit\">printk_ratelimit</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(\"unexpected IRQ trap at vector %02x\\n\", <a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Currently unexpected vectors happen only on SMP and APIC.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We _must_ ack these because every local APIC has only N</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * irq slots per priority level, and a 'hanging, unacked' IRQ</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * holds up an irq slot - in excessive cases (when multiple</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * unexpected vectors occur) that might lock up the APIC</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * completely.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * But only ack when the APIC is enabled -AK</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ack_APIC_irq\">ack_APIC_irq</a>();", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#irq_stats\">irq_stats</a>(<a class=\"id\" href=\"#x\">x</a>)<span class=\"ts\"/><span class=\"ts\"/>(&amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#irq_stat\">irq_stat</a>, <a class=\"id\" href=\"#x\">x</a>))", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * /proc/interrupts printing:</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#show_other_interrupts\">show_other_interrupts</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#p\">p</a>, int <a class=\"id\" href=\"#prec\">prec</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#j\">j</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"%*s: \", <a class=\"id\" href=\"#prec\">prec</a>, \"NMI\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_online_cpu\">for_each_online_cpu</a>(<a class=\"id\" href=\"#j\">j</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"%10u \", <a class=\"id\" href=\"#irq_stats\">irq_stats</a>(<a class=\"id\" href=\"#j\">j</a>)-><a class=\"id\" href=\"#__nmi_count\">__nmi_count</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"  Non-maskable interrupts\\n\");", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_LOCAL_APIC\">CONFIG_X86_LOCAL_APIC</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"%*s: \", <a class=\"id\" href=\"#prec\">prec</a>, \"LOC\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_online_cpu\">for_each_online_cpu</a>(<a class=\"id\" href=\"#j\">j</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"%10u \", <a class=\"id\" href=\"#irq_stats\">irq_stats</a>(<a class=\"id\" href=\"#j\">j</a>)-><a class=\"id\" href=\"#apic_timer_irqs\">apic_timer_irqs</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"  Local timer interrupts\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"%*s: \", <a class=\"id\" href=\"#prec\">prec</a>, \"SPU\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_online_cpu\">for_each_online_cpu</a>(<a class=\"id\" href=\"#j\">j</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"%10u \", <a class=\"id\" href=\"#irq_stats\">irq_stats</a>(<a class=\"id\" href=\"#j\">j</a>)-><a class=\"id\" href=\"#irq_spurious_count\">irq_spurious_count</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"  Spurious interrupts\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"%*s: \", <a class=\"id\" href=\"#prec\">prec</a>, \"PMI\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_online_cpu\">for_each_online_cpu</a>(<a class=\"id\" href=\"#j\">j</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"%10u \", <a class=\"id\" href=\"#irq_stats\">irq_stats</a>(<a class=\"id\" href=\"#j\">j</a>)-><a class=\"id\" href=\"#apic_perf_irqs\">apic_perf_irqs</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"  Performance monitoring interrupts\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"%*s: \", <a class=\"id\" href=\"#prec\">prec</a>, \"PND\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_online_cpu\">for_each_online_cpu</a>(<a class=\"id\" href=\"#j\">j</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"%10u \", <a class=\"id\" href=\"#irq_stats\">irq_stats</a>(<a class=\"id\" href=\"#j\">j</a>)-><a class=\"id\" href=\"#apic_pending_irqs\">apic_pending_irqs</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"  Performance pending work\\n\");", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#x86_platform_ipi_callback\">x86_platform_ipi_callback</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"%*s: \", <a class=\"id\" href=\"#prec\">prec</a>, \"PLT\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#for_each_online_cpu\">for_each_online_cpu</a>(<a class=\"id\" href=\"#j\">j</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"%10u \", <a class=\"id\" href=\"#irq_stats\">irq_stats</a>(<a class=\"id\" href=\"#j\">j</a>)-><a class=\"id\" href=\"#x86_platform_ipis\">x86_platform_ipis</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"  Platform interrupts\\n\");", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"%*s: \", <a class=\"id\" href=\"#prec\">prec</a>, \"RES\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_online_cpu\">for_each_online_cpu</a>(<a class=\"id\" href=\"#j\">j</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"%10u \", <a class=\"id\" href=\"#irq_stats\">irq_stats</a>(<a class=\"id\" href=\"#j\">j</a>)-><a class=\"id\" href=\"#irq_resched_count\">irq_resched_count</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"  Rescheduling interrupts\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"%*s: \", <a class=\"id\" href=\"#prec\">prec</a>, \"CAL\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_online_cpu\">for_each_online_cpu</a>(<a class=\"id\" href=\"#j\">j</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"%10u \", <a class=\"id\" href=\"#irq_stats\">irq_stats</a>(<a class=\"id\" href=\"#j\">j</a>)-><a class=\"id\" href=\"#irq_call_count\">irq_call_count</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"  Function call interrupts\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"%*s: \", <a class=\"id\" href=\"#prec\">prec</a>, \"TLB\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_online_cpu\">for_each_online_cpu</a>(<a class=\"id\" href=\"#j\">j</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"%10u \", <a class=\"id\" href=\"#irq_stats\">irq_stats</a>(<a class=\"id\" href=\"#j\">j</a>)-><a class=\"id\" href=\"#irq_tlb_count\">irq_tlb_count</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"  TLB shootdowns\\n\");", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_THERMAL_VECTOR\">CONFIG_X86_THERMAL_VECTOR</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"%*s: \", <a class=\"id\" href=\"#prec\">prec</a>, \"TRM\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_online_cpu\">for_each_online_cpu</a>(<a class=\"id\" href=\"#j\">j</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"%10u \", <a class=\"id\" href=\"#irq_stats\">irq_stats</a>(<a class=\"id\" href=\"#j\">j</a>)-><a class=\"id\" href=\"#irq_thermal_count\">irq_thermal_count</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"  Thermal event interrupts\\n\");", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_MCE_THRESHOLD\">CONFIG_X86_MCE_THRESHOLD</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"%*s: \", <a class=\"id\" href=\"#prec\">prec</a>, \"THR\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_online_cpu\">for_each_online_cpu</a>(<a class=\"id\" href=\"#j\">j</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"%10u \", <a class=\"id\" href=\"#irq_stats\">irq_stats</a>(<a class=\"id\" href=\"#j\">j</a>)-><a class=\"id\" href=\"#irq_threshold_count\">irq_threshold_count</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"  Threshold APIC interrupts\\n\");", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_MCE\">CONFIG_X86_MCE</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"%*s: \", <a class=\"id\" href=\"#prec\">prec</a>, \"MCE\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_online_cpu\">for_each_online_cpu</a>(<a class=\"id\" href=\"#j\">j</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"%10u \", <a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#mce_exception_count\">mce_exception_count</a>, <a class=\"id\" href=\"#j\">j</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"  Machine check exceptions\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"%*s: \", <a class=\"id\" href=\"#prec\">prec</a>, \"MCP\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_online_cpu\">for_each_online_cpu</a>(<a class=\"id\" href=\"#j\">j</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"%10u \", <a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#mce_poll_count\">mce_poll_count</a>, <a class=\"id\" href=\"#j\">j</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"  Machine check polls\\n\");", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"%*s: %10u\\n\", <a class=\"id\" href=\"#prec\">prec</a>, \"ERR\", <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#irq_err_count\">irq_err_count</a>));", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_X86_IO_APIC\">CONFIG_X86_IO_APIC</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"%*s: %10u\\n\", <a class=\"id\" href=\"#prec\">prec</a>, \"MIS\", <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#irq_mis_count\">irq_mis_count</a>));", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#show_interrupts\">show_interrupts</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#p\">p</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#any_count\">any_count</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a> = *(<a class=\"id\" href=\"#loff_t\">loff_t</a> *) <a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#prec\">prec</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irqaction\">irqaction</a> *<a class=\"id\" href=\"#action\">action</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> &gt; <a class=\"id\" href=\"#nr_irqs\">nr_irqs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#prec\">prec</a> = 3, <a class=\"id\" href=\"#j\">j</a> = 1000; <a class=\"id\" href=\"#prec\">prec</a> &lt; 10 && <a class=\"id\" href=\"#j\">j</a> <= <a class=\"id\" href=\"#nr_irqs\">nr_irqs</a>; ++<a class=\"id\" href=\"#prec\">prec</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j\">j</a> *= 10;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> == <a class=\"id\" href=\"#nr_irqs\">nr_irqs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#show_other_interrupts\">show_other_interrupts</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#prec\">prec</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* print header */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"%*s\", <a class=\"id\" href=\"#prec\">prec</a> + 8, \"\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#for_each_online_cpu\">for_each_online_cpu</a>(<a class=\"id\" href=\"#j\">j</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"CPU%-8d\", <a class=\"id\" href=\"#j\">j</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_putc\">seq_putc</a>(<a class=\"id\" href=\"#p\">p</a>, '\\n');", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#irq_to_desc\">irq_to_desc</a>(<a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#desc\">desc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock_irqsave\">raw_spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_online_cpu\">for_each_online_cpu</a>(<a class=\"id\" href=\"#j\">j</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#any_count\">any_count</a> |= <a class=\"id\" href=\"#kstat_irqs_cpu\">kstat_irqs_cpu</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#j\">j</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#action\">action</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#action\">action</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#action\">action</a> && !<a class=\"id\" href=\"#any_count\">any_count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"%*d: \", <a class=\"id\" href=\"#prec\">prec</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_online_cpu\">for_each_online_cpu</a>(<a class=\"id\" href=\"#j\">j</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"%10u \", <a class=\"id\" href=\"#kstat_irqs_cpu\">kstat_irqs_cpu</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#j\">j</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \" %8s\", <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"-%-8s\", <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#action\">action</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \"  %s\", <a class=\"id\" href=\"#action\">action</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>while ((<a class=\"id\" href=\"#action\">action</a> = <a class=\"id\" href=\"#action\">action</a>-><a class=\"id\" href=\"#next\">next</a>) != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#p\">p</a>, \", %s\", <a class=\"id\" href=\"#action\">action</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_putc\">seq_putc</a>(<a class=\"id\" href=\"#p\">p</a>, '\\n');", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock_irqrestore\">raw_spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * /proc/stat helpers</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#arch_irq_stat_cpu\">arch_irq_stat_cpu</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#sum\">sum</a> = <a class=\"id\" href=\"#irq_stats\">irq_stats</a>(<a class=\"id\" href=\"#cpu\">cpu</a>)-><a class=\"id\" href=\"#__nmi_count\">__nmi_count</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_LOCAL_APIC\">CONFIG_X86_LOCAL_APIC</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sum\">sum</a> += <a class=\"id\" href=\"#irq_stats\">irq_stats</a>(<a class=\"id\" href=\"#cpu\">cpu</a>)-><a class=\"id\" href=\"#apic_timer_irqs\">apic_timer_irqs</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sum\">sum</a> += <a class=\"id\" href=\"#irq_stats\">irq_stats</a>(<a class=\"id\" href=\"#cpu\">cpu</a>)-><a class=\"id\" href=\"#irq_spurious_count\">irq_spurious_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sum\">sum</a> += <a class=\"id\" href=\"#irq_stats\">irq_stats</a>(<a class=\"id\" href=\"#cpu\">cpu</a>)-><a class=\"id\" href=\"#apic_perf_irqs\">apic_perf_irqs</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sum\">sum</a> += <a class=\"id\" href=\"#irq_stats\">irq_stats</a>(<a class=\"id\" href=\"#cpu\">cpu</a>)-><a class=\"id\" href=\"#apic_pending_irqs\">apic_pending_irqs</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#x86_platform_ipi_callback\">x86_platform_ipi_callback</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sum\">sum</a> += <a class=\"id\" href=\"#irq_stats\">irq_stats</a>(<a class=\"id\" href=\"#cpu\">cpu</a>)-><a class=\"id\" href=\"#x86_platform_ipis\">x86_platform_ipis</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sum\">sum</a> += <a class=\"id\" href=\"#irq_stats\">irq_stats</a>(<a class=\"id\" href=\"#cpu\">cpu</a>)-><a class=\"id\" href=\"#irq_resched_count\">irq_resched_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sum\">sum</a> += <a class=\"id\" href=\"#irq_stats\">irq_stats</a>(<a class=\"id\" href=\"#cpu\">cpu</a>)-><a class=\"id\" href=\"#irq_call_count\">irq_call_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sum\">sum</a> += <a class=\"id\" href=\"#irq_stats\">irq_stats</a>(<a class=\"id\" href=\"#cpu\">cpu</a>)-><a class=\"id\" href=\"#irq_tlb_count\">irq_tlb_count</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_THERMAL_VECTOR\">CONFIG_X86_THERMAL_VECTOR</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sum\">sum</a> += <a class=\"id\" href=\"#irq_stats\">irq_stats</a>(<a class=\"id\" href=\"#cpu\">cpu</a>)-><a class=\"id\" href=\"#irq_thermal_count\">irq_thermal_count</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_MCE_THRESHOLD\">CONFIG_X86_MCE_THRESHOLD</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sum\">sum</a> += <a class=\"id\" href=\"#irq_stats\">irq_stats</a>(<a class=\"id\" href=\"#cpu\">cpu</a>)-><a class=\"id\" href=\"#irq_threshold_count\">irq_threshold_count</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_MCE\">CONFIG_X86_MCE</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sum\">sum</a> += <a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#mce_exception_count\">mce_exception_count</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sum\">sum</a> += <a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#mce_poll_count\">mce_poll_count</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sum\">sum</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#arch_irq_stat\">arch_irq_stat</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#sum\">sum</a> = <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#irq_err_count\">irq_err_count</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_IO_APIC\">CONFIG_X86_IO_APIC</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sum\">sum</a> += <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#irq_mis_count\">irq_mis_count</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sum\">sum</a>;", 
"}", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * do_IRQ handles all normal device IRQ's (the special</span>", 
"<span class=\"comment\"> * SMP cross-CPU interrupts have their own specific</span>", 
"<span class=\"comment\"> * handlers).</span>", 
"<span class=\"comment\"> */</span>", 
"unsigned int <a class=\"id\" href=\"#__irq_entry\">__irq_entry</a> <a class=\"id\" href=\"#do_IRQ\">do_IRQ</a>(struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#old_regs\">old_regs</a> = <a class=\"id\" href=\"#set_irq_regs\">set_irq_regs</a>(<a class=\"id\" href=\"#regs\">regs</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* high bit used in ret_from_ code  */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#vector\">vector</a> = ~<a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#orig_ax\">orig_ax</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#irq\">irq</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#exit_idle\">exit_idle</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq_enter\">irq_enter</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#vector_irq\">vector_irq</a>)[<a class=\"id\" href=\"#vector\">vector</a>];", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#handle_irq\">handle_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#regs\">regs</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ack_APIC_irq\">ack_APIC_irq</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#printk_ratelimit\">printk_ratelimit</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_emerg\">pr_emerg</a>(\"%s: %d.%d No irq handler for vector (irq %d)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>(), <a class=\"id\" href=\"#vector\">vector</a>, <a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq_exit\">irq_exit</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_irq_regs\">set_irq_regs</a>(<a class=\"id\" href=\"#old_regs\">old_regs</a>);", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Handler for X86_PLATFORM_IPI_VECTOR.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#smp_x86_platform_ipi\">smp_x86_platform_ipi</a>(struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#old_regs\">old_regs</a> = <a class=\"id\" href=\"#set_irq_regs\">set_irq_regs</a>(<a class=\"id\" href=\"#regs\">regs</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ack_APIC_irq\">ack_APIC_irq</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#exit_idle\">exit_idle</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq_enter\">irq_enter</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inc_irq_stat\">inc_irq_stat</a>(<a class=\"id\" href=\"#x86_platform_ipis\">x86_platform_ipis</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#x86_platform_ipi_callback\">x86_platform_ipi_callback</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x86_platform_ipi_callback\">x86_platform_ipi_callback</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq_exit\">irq_exit</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_irq_regs\">set_irq_regs</a>(<a class=\"id\" href=\"#old_regs\">old_regs</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#vector_used_by_percpu_irq\">vector_used_by_percpu_irq</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HOTPLUG_CPU\">CONFIG_HOTPLUG_CPU</a>", 
"<span class=\"comment\">/* A cpu has been removed from cpu_online_mask.  Reset irq affinities. */</span>", 
"void <a class=\"id\" href=\"#fixup_irqs\">fixup_irqs</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#vector\">vector</a>;", 
"<span class=\"ts\"/>static int <a class=\"id\" href=\"#warned\">warned</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_irq_desc\">for_each_irq_desc</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#desc\">desc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#break_affinity\">break_affinity</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#set_affinity\">set_affinity</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#cpumask\">cpumask</a> *<a class=\"id\" href=\"#affinity\">affinity</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#desc\">desc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#irq\">irq</a> == 2)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* interrupt's are disabled at this point */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock\">raw_spin_lock</a>(&amp;<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#affinity\">affinity</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#affinity\">affinity</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#irq_has_action\">irq_has_action</a>(<a class=\"id\" href=\"#irq\">irq</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#cpumask_equal\">cpumask_equal</a>(<a class=\"id\" href=\"#affinity\">affinity</a>, <a class=\"id\" href=\"#cpu_online_mask\">cpu_online_mask</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock\">raw_spin_unlock</a>(&amp;<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Complete the irq move. This cpu is going down and for</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * non intr-remapping case, we can't wait till this interrupt</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * arrives at this cpu before completing the irq move.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq_force_complete_move\">irq_force_complete_move</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cpumask_any_and\">cpumask_any_and</a>(<a class=\"id\" href=\"#affinity\">affinity</a>, <a class=\"id\" href=\"#cpu_online_mask\">cpu_online_mask</a>) >= <a class=\"id\" href=\"#nr_cpu_ids\">nr_cpu_ids</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#break_affinity\">break_affinity</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#affinity\">affinity</a> = <a class=\"id\" href=\"#cpu_all_mask\">cpu_all_mask</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#IRQ_MOVE_PCNTXT\">IRQ_MOVE_PCNTXT</a>) && <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#mask\">mask</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#mask\">mask</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#set_affinity\">set_affinity</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#set_affinity\">set_affinity</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#affinity\">affinity</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (!(<a class=\"id\" href=\"#warned\">warned</a>++))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_affinity\">set_affinity</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#IRQ_MOVE_PCNTXT\">IRQ_MOVE_PCNTXT</a>) && <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#unmask\">unmask</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#unmask\">unmask</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock\">raw_spin_unlock</a>(&amp;<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#break_affinity\">break_affinity</a> && <a class=\"id\" href=\"#set_affinity\">set_affinity</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"Broke affinity for irq %i\\n\", <a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (!<a class=\"id\" href=\"#set_affinity\">set_affinity</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"Cannot set affinity for irq %i\\n\", <a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We can remove mdelay() and then send spuriuous interrupts to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * new cpu targets for all the irqs that were handled previously by</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * this cpu. While it works, I have seen spurious interrupt messages</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * (nothing wrong but still...).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * So for now, retain mdelay(1) and check the IRR and then send those</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * interrupts to new targets as this cpu is already offlined...</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mdelay\">mdelay</a>(1);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#vector\">vector</a> = <a class=\"id\" href=\"#FIRST_EXTERNAL_VECTOR\">FIRST_EXTERNAL_VECTOR</a>; <a class=\"id\" href=\"#vector\">vector</a> &lt; <a class=\"id\" href=\"#NR_VECTORS\">NR_VECTORS</a>; <a class=\"id\" href=\"#vector\">vector</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#irr\">irr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#vector_irq\">vector_irq</a>)[<a class=\"id\" href=\"#vector\">vector</a>] &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irr\">irr</a> = <a class=\"id\" href=\"#apic_read\">apic_read</a>(<a class=\"id\" href=\"#APIC_IRR\">APIC_IRR</a> + (<a class=\"id\" href=\"#vector\">vector</a> / 32 * 0x10));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#irr\">irr</a>  &amp; (1 << (<a class=\"id\" href=\"#vector\">vector</a> % 32))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#vector_irq\">vector_irq</a>)[<a class=\"id\" href=\"#vector\">vector</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#irq_to_desc\">irq_to_desc</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock\">raw_spin_lock</a>(&amp;<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#retrigger\">retrigger</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#retrigger\">retrigger</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock\">raw_spin_unlock</a>(&amp;<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/6a/eeca89d0a449959bd9176f0e5d00ae6c0c22fe.xr', __xr_tmp);
