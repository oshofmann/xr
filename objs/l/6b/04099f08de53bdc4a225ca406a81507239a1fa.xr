var __xr_tmp = [
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tsk_used_math\">tsk_used_math</a>(<a class=\"id\" href=\"#tsk\">tsk</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#HAVE_HWFP\">HAVE_HWFP</a> && <a class=\"id\" href=\"#tsk\">tsk</a> == <a class=\"id\" href=\"#current\">current</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlazy_fpu\">unlazy_fpu</a>(<a class=\"id\" href=\"#tsk\">tsk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Memory allocation at the first usage of the FPU and other state.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#fpu_alloc\">fpu_alloc</a>(&amp;<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#thread\">thread</a>.<a class=\"id\" href=\"#fpu\">fpu</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fpu_finit\">fpu_finit</a>(&amp;<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#thread\">thread</a>.<a class=\"id\" href=\"#fpu\">fpu</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_stopped_child_used_math\">set_stopped_child_used_math</a>(<a class=\"id\" href=\"#tsk\">tsk</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The xstateregs_active() routine is the same as the fpregs_active() routine,</span>", 
"<span class=\"comment\"> * as the \"regset-&gt;n\" for the xstate regset will be updated based on the feature</span>", 
"<span class=\"comment\"> * capabilites supported by the xsave.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#fpregs_active\">fpregs_active</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#target\">target</a>, const struct <a class=\"id\" href=\"#user_regset\">user_regset</a> *<a class=\"id\" href=\"#regset\">regset</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tsk_used_math\">tsk_used_math</a>(<a class=\"id\" href=\"#target\">target</a>) ? <a class=\"id\" href=\"#regset\">regset</a>-><a class=\"id\" href=\"#n\">n</a> : 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#xfpregs_active\">xfpregs_active</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#target\">target</a>, const struct <a class=\"id\" href=\"#user_regset\">user_regset</a> *<a class=\"id\" href=\"#regset\">regset</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#cpu_has_fxsr\">cpu_has_fxsr</a> && <a class=\"id\" href=\"#tsk_used_math\">tsk_used_math</a>(<a class=\"id\" href=\"#target\">target</a>)) ? <a class=\"id\" href=\"#regset\">regset</a>-><a class=\"id\" href=\"#n\">n</a> : 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#xfpregs_get\">xfpregs_get</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#target\">target</a>, const struct <a class=\"id\" href=\"#user_regset\">user_regset</a> *<a class=\"id\" href=\"#regset\">regset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#pos\">pos</a>, unsigned int <a class=\"id\" href=\"#count\">count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#kbuf\">kbuf</a>, void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ubuf\">ubuf</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cpu_has_fxsr\">cpu_has_fxsr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#init_fpu\">init_fpu</a>(<a class=\"id\" href=\"#target\">target</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sanitize_i387_state\">sanitize_i387_state</a>(<a class=\"id\" href=\"#target\">target</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#user_regset_copyout\">user_regset_copyout</a>(&amp;<a class=\"id\" href=\"#pos\">pos</a>, &amp;<a class=\"id\" href=\"#count\">count</a>, &amp;<a class=\"id\" href=\"#kbuf\">kbuf</a>, &amp;<a class=\"id\" href=\"#ubuf\">ubuf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#target\">target</a>-><a class=\"id\" href=\"#thread\">thread</a>.<a class=\"id\" href=\"#fpu\">fpu</a>.<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#fxsave\">fxsave</a>, 0, -1);", 
"}", 
"", 
"int <a class=\"id\" href=\"#xfpregs_set\">xfpregs_set</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#target\">target</a>, const struct <a class=\"id\" href=\"#user_regset\">user_regset</a> *<a class=\"id\" href=\"#regset\">regset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#pos\">pos</a>, unsigned int <a class=\"id\" href=\"#count\">count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>const void *<a class=\"id\" href=\"#kbuf\">kbuf</a>, const void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ubuf\">ubuf</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cpu_has_fxsr\">cpu_has_fxsr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#init_fpu\">init_fpu</a>(<a class=\"id\" href=\"#target\">target</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sanitize_i387_state\">sanitize_i387_state</a>(<a class=\"id\" href=\"#target\">target</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#user_regset_copyin\">user_regset_copyin</a>(&amp;<a class=\"id\" href=\"#pos\">pos</a>, &amp;<a class=\"id\" href=\"#count\">count</a>, &amp;<a class=\"id\" href=\"#kbuf\">kbuf</a>, &amp;<a class=\"id\" href=\"#ubuf\">ubuf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> &amp;<a class=\"id\" href=\"#target\">target</a>-><a class=\"id\" href=\"#thread\">thread</a>.<a class=\"id\" href=\"#fpu\">fpu</a>.<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#fxsave\">fxsave</a>, 0, -1);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * mxcsr reserved bits must be masked to zero for security reasons.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#target\">target</a>-><a class=\"id\" href=\"#thread\">thread</a>.<a class=\"id\" href=\"#fpu\">fpu</a>.<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#fxsave\">fxsave</a>.<a class=\"id\" href=\"#mxcsr\">mxcsr</a> &= <a class=\"id\" href=\"#mxcsr_feature_mask\">mxcsr_feature_mask</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * update the header bits in the xsave header, indicating the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * presence of FP and SSE state.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_has_xsave\">cpu_has_xsave</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#target\">target</a>-><a class=\"id\" href=\"#thread\">thread</a>.<a class=\"id\" href=\"#fpu\">fpu</a>.<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#xsave\">xsave</a>.<a class=\"id\" href=\"#xsave_hdr\">xsave_hdr</a>.<a class=\"id\" href=\"#xstate_bv\">xstate_bv</a> |= <a class=\"id\" href=\"#XSTATE_FPSSE\">XSTATE_FPSSE</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#xstateregs_get\">xstateregs_get</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#target\">target</a>, const struct <a class=\"id\" href=\"#user_regset\">user_regset</a> *<a class=\"id\" href=\"#regset\">regset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#pos\">pos</a>, unsigned int <a class=\"id\" href=\"#count\">count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#kbuf\">kbuf</a>, void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ubuf\">ubuf</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cpu_has_xsave\">cpu_has_xsave</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#init_fpu\">init_fpu</a>(<a class=\"id\" href=\"#target\">target</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Copy the 48bytes defined by the software first into the xstate</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * memory layout in the thread struct, so that we can copy the entire</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * xstateregs to the user using one user_regset_copyout().</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#target\">target</a>-><a class=\"id\" href=\"#thread\">thread</a>.<a class=\"id\" href=\"#fpu\">fpu</a>.<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#fxsave\">fxsave</a>.<a class=\"id\" href=\"#sw_reserved\">sw_reserved</a>,", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#xstate_fx_sw_bytes\">xstate_fx_sw_bytes</a>, sizeof(<a class=\"id\" href=\"#xstate_fx_sw_bytes\">xstate_fx_sw_bytes</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Copy the xstate memory layout.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#user_regset_copyout\">user_regset_copyout</a>(&amp;<a class=\"id\" href=\"#pos\">pos</a>, &amp;<a class=\"id\" href=\"#count\">count</a>, &amp;<a class=\"id\" href=\"#kbuf\">kbuf</a>, &amp;<a class=\"id\" href=\"#ubuf\">ubuf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#target\">target</a>-><a class=\"id\" href=\"#thread\">thread</a>.<a class=\"id\" href=\"#fpu\">fpu</a>.<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#xsave\">xsave</a>, 0, -1);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#xstateregs_set\">xstateregs_set</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#target\">target</a>, const struct <a class=\"id\" href=\"#user_regset\">user_regset</a> *<a class=\"id\" href=\"#regset\">regset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  unsigned int <a class=\"id\" href=\"#pos\">pos</a>, unsigned int <a class=\"id\" href=\"#count\">count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  const void *<a class=\"id\" href=\"#kbuf\">kbuf</a>, const void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ubuf\">ubuf</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xsave_hdr_struct\">xsave_hdr_struct</a> *<a class=\"id\" href=\"#xsave_hdr\">xsave_hdr</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cpu_has_xsave\">cpu_has_xsave</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#init_fpu\">init_fpu</a>(<a class=\"id\" href=\"#target\">target</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#user_regset_copyin\">user_regset_copyin</a>(&amp;<a class=\"id\" href=\"#pos\">pos</a>, &amp;<a class=\"id\" href=\"#count\">count</a>, &amp;<a class=\"id\" href=\"#kbuf\">kbuf</a>, &amp;<a class=\"id\" href=\"#ubuf\">ubuf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> &amp;<a class=\"id\" href=\"#target\">target</a>-><a class=\"id\" href=\"#thread\">thread</a>.<a class=\"id\" href=\"#fpu\">fpu</a>.<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#xsave\">xsave</a>, 0, -1);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * mxcsr reserved bits must be masked to zero for security reasons.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#target\">target</a>-><a class=\"id\" href=\"#thread\">thread</a>.<a class=\"id\" href=\"#fpu\">fpu</a>.<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#fxsave\">fxsave</a>.<a class=\"id\" href=\"#mxcsr\">mxcsr</a> &= <a class=\"id\" href=\"#mxcsr_feature_mask\">mxcsr_feature_mask</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xsave_hdr\">xsave_hdr</a> = &amp;<a class=\"id\" href=\"#target\">target</a>-><a class=\"id\" href=\"#thread\">thread</a>.<a class=\"id\" href=\"#fpu\">fpu</a>.<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#xsave\">xsave</a>.<a class=\"id\" href=\"#xsave_hdr\">xsave_hdr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xsave_hdr\">xsave_hdr</a>-><a class=\"id\" href=\"#xstate_bv\">xstate_bv</a> &= <a class=\"id\" href=\"#pcntxt_mask\">pcntxt_mask</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * These bits must be zero.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xsave_hdr\">xsave_hdr</a>-><a class=\"id\" href=\"#reserved1\">reserved1</a>[0] = <a class=\"id\" href=\"#xsave_hdr\">xsave_hdr</a>-><a class=\"id\" href=\"#reserved1\">reserved1</a>[1] = 0;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a> || <a class=\"id\" href=\"#defined\">defined</a> <a class=\"id\" href=\"#CONFIG_IA32_EMULATION\">CONFIG_IA32_EMULATION</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * FPU tag word conversions.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned short <a class=\"id\" href=\"#twd_i387_to_fxsr\">twd_i387_to_fxsr</a>(unsigned short <a class=\"id\" href=\"#twd\">twd</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#tmp\">tmp</a>; <span class=\"comment\">/* to avoid 16 bit prefixes in the code */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Transform each pair of bits into 01 (valid) or 00 (empty) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = ~<a class=\"id\" href=\"#twd\">twd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = (<a class=\"id\" href=\"#tmp\">tmp</a> | (<a class=\"id\" href=\"#tmp\">tmp</a>>>1)) &amp; 0x5555; <span class=\"comment\">/* 0V0V0V0V0V0V0V0V */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* and move the valid bits to the lower byte. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = (<a class=\"id\" href=\"#tmp\">tmp</a> | (<a class=\"id\" href=\"#tmp\">tmp</a> >> 1)) &amp; 0x3333; <span class=\"comment\">/* 00VV00VV00VV00VV */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = (<a class=\"id\" href=\"#tmp\">tmp</a> | (<a class=\"id\" href=\"#tmp\">tmp</a> >> 2)) &amp; 0x0f0f; <span class=\"comment\">/* 0000VVVV0000VVVV */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = (<a class=\"id\" href=\"#tmp\">tmp</a> | (<a class=\"id\" href=\"#tmp\">tmp</a> >> 4)) &amp; 0x00ff; <span class=\"comment\">/* 00000000VVVVVVVV */</span>", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FPREG_ADDR\">FPREG_ADDR</a>(<a class=\"id\" href=\"#f\">f</a>, <a class=\"id\" href=\"#n\">n</a>)<span class=\"ts\"/>((void *)&amp;(<a class=\"id\" href=\"#f\">f</a>)-><a class=\"id\" href=\"#st_space\">st_space</a> + (<a class=\"id\" href=\"#n\">n</a>) * 16);", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FP_EXP_TAG_VALID\">FP_EXP_TAG_VALID</a><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FP_EXP_TAG_ZERO\">FP_EXP_TAG_ZERO</a><span class=\"ts\"/><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FP_EXP_TAG_SPECIAL\">FP_EXP_TAG_SPECIAL</a><span class=\"ts\"/>2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FP_EXP_TAG_EMPTY\">FP_EXP_TAG_EMPTY</a><span class=\"ts\"/>3", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#twd_fxsr_to_i387\">twd_fxsr_to_i387</a>(struct <a class=\"id\" href=\"#i387_fxsave_struct\">i387_fxsave_struct</a> *<a class=\"id\" href=\"#fxsave\">fxsave</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#_fpxreg\">_fpxreg</a> *<a class=\"id\" href=\"#st\">st</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#tos\">tos</a> = (<a class=\"id\" href=\"#fxsave\">fxsave</a>-><a class=\"id\" href=\"#swd\">swd</a> >> 11) &amp; 7;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#twd\">twd</a> = (unsigned long) <a class=\"id\" href=\"#fxsave\">fxsave</a>-><a class=\"id\" href=\"#twd\">twd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#tag\">tag</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ret\">ret</a> = 0xffff0000u;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 8; <a class=\"id\" href=\"#i\">i</a>++, <a class=\"id\" href=\"#twd\">twd</a> >>= 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#twd\">twd</a> &amp; 0x1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a> = <a class=\"id\" href=\"#FPREG_ADDR\">FPREG_ADDR</a>(<a class=\"id\" href=\"#fxsave\">fxsave</a>, (<a class=\"id\" href=\"#i\">i</a> - <a class=\"id\" href=\"#tos\">tos</a>) &amp; 7);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#exponent\">exponent</a> &amp; 0x7fff) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case 0x7fff:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tag\">tag</a> = <a class=\"id\" href=\"#FP_EXP_TAG_SPECIAL\">FP_EXP_TAG_SPECIAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case 0x0000:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#significand\">significand</a>[0] &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#significand\">significand</a>[1] &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#significand\">significand</a>[2] &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#significand\">significand</a>[3])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tag\">tag</a> = <a class=\"id\" href=\"#FP_EXP_TAG_ZERO\">FP_EXP_TAG_ZERO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tag\">tag</a> = <a class=\"id\" href=\"#FP_EXP_TAG_SPECIAL\">FP_EXP_TAG_SPECIAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#st\">st</a>-><a class=\"id\" href=\"#significand\">significand</a>[3] &amp; 0x8000)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tag\">tag</a> = <a class=\"id\" href=\"#FP_EXP_TAG_VALID\">FP_EXP_TAG_VALID</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tag\">tag</a> = <a class=\"id\" href=\"#FP_EXP_TAG_SPECIAL\">FP_EXP_TAG_SPECIAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tag\">tag</a> = <a class=\"id\" href=\"#FP_EXP_TAG_EMPTY\">FP_EXP_TAG_EMPTY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> |= <a class=\"id\" href=\"#tag\">tag</a> << (2 * <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * FXSR floating point environment conversions.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void", 
"<a class=\"id\" href=\"#convert_from_fxsr\">convert_from_fxsr</a>(struct <a class=\"id\" href=\"#user_i387_ia32_struct\">user_i387_ia32_struct</a> *<a class=\"id\" href=\"#env\">env</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#i387_fxsave_struct\">i387_fxsave_struct</a> *<a class=\"id\" href=\"#fxsave\">fxsave</a> = &amp;<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#thread\">thread</a>.<a class=\"id\" href=\"#fpu\">fpu</a>.<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#fxsave\">fxsave</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#_fpreg\">_fpreg</a> *<a class=\"id\" href=\"#to\">to</a> = (struct <a class=\"id\" href=\"#_fpreg\">_fpreg</a> *) &amp;<a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#st_space\">st_space</a>[0];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#_fpxreg\">_fpxreg</a> *<a class=\"id\" href=\"#from\">from</a> = (struct <a class=\"id\" href=\"#_fpxreg\">_fpxreg</a> *) &amp;<a class=\"id\" href=\"#fxsave\">fxsave</a>-><a class=\"id\" href=\"#st_space\">st_space</a>[0];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#cwd\">cwd</a> = <a class=\"id\" href=\"#fxsave\">fxsave</a>-><a class=\"id\" href=\"#cwd\">cwd</a> | 0xffff0000u;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#swd\">swd</a> = <a class=\"id\" href=\"#fxsave\">fxsave</a>-><a class=\"id\" href=\"#swd\">swd</a> | 0xffff0000u;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#twd\">twd</a> = <a class=\"id\" href=\"#twd_fxsr_to_i387\">twd_fxsr_to_i387</a>(<a class=\"id\" href=\"#fxsave\">fxsave</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#fip\">fip</a> = <a class=\"id\" href=\"#fxsave\">fxsave</a>-><a class=\"id\" href=\"#rip\">rip</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#foo\">foo</a> = <a class=\"id\" href=\"#fxsave\">fxsave</a>-><a class=\"id\" href=\"#rdp\">rdp</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tsk\">tsk</a> == <a class=\"id\" href=\"#current\">current</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * should be actually ds/cs at fpu exception time, but</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * that information is not available in 64bit mode.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"mov %%ds, %[fos]\" : [<a class=\"id\" href=\"#fos\">fos</a>] \"=r\" (<a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#fos\">fos</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"mov %%cs, %[fcs]\" : [<a class=\"id\" href=\"#fcs\">fcs</a>] \"=r\" (<a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#fcs\">fcs</a>));", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a> = <a class=\"id\" href=\"#task_pt_regs\">task_pt_regs</a>(<a class=\"id\" href=\"#tsk\">tsk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#fos\">fos</a> = 0xffff0000 | <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#thread\">thread</a>.<a class=\"id\" href=\"#ds\">ds</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#fcs\">fcs</a> = <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#cs\">cs</a>;", 
"<span class=\"ts\"/>}", 
"#else", 
"<span class=\"ts\"/><a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#fip\">fip</a> = <a class=\"id\" href=\"#fxsave\">fxsave</a>-><a class=\"id\" href=\"#fip\">fip</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#fcs\">fcs</a> = (<a class=\"id\" href=\"#u16\">u16</a>) <a class=\"id\" href=\"#fxsave\">fxsave</a>-><a class=\"id\" href=\"#fcs\">fcs</a> | ((<a class=\"id\" href=\"#u32\">u32</a>) <a class=\"id\" href=\"#fxsave\">fxsave</a>-><a class=\"id\" href=\"#fop\">fop</a> << 16);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#foo\">foo</a> = <a class=\"id\" href=\"#fxsave\">fxsave</a>-><a class=\"id\" href=\"#foo\">foo</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#fos\">fos</a> = <a class=\"id\" href=\"#fxsave\">fxsave</a>-><a class=\"id\" href=\"#fos\">fos</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 8; ++<a class=\"id\" href=\"#i\">i</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#to\">to</a>[<a class=\"id\" href=\"#i\">i</a>], &amp;<a class=\"id\" href=\"#from\">from</a>[<a class=\"id\" href=\"#i\">i</a>], sizeof(<a class=\"id\" href=\"#to\">to</a>[0]));", 
"}", 
"", 
"static void <a class=\"id\" href=\"#convert_to_fxsr\">convert_to_fxsr</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const struct <a class=\"id\" href=\"#user_i387_ia32_struct\">user_i387_ia32_struct</a> *<a class=\"id\" href=\"#env\">env</a>)", 
"", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#i387_fxsave_struct\">i387_fxsave_struct</a> *<a class=\"id\" href=\"#fxsave\">fxsave</a> = &amp;<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#thread\">thread</a>.<a class=\"id\" href=\"#fpu\">fpu</a>.<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#fxsave\">fxsave</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#_fpreg\">_fpreg</a> *<a class=\"id\" href=\"#from\">from</a> = (struct <a class=\"id\" href=\"#_fpreg\">_fpreg</a> *) &amp;<a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#st_space\">st_space</a>[0];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#_fpxreg\">_fpxreg</a> *<a class=\"id\" href=\"#to\">to</a> = (struct <a class=\"id\" href=\"#_fpxreg\">_fpxreg</a> *) &amp;<a class=\"id\" href=\"#fxsave\">fxsave</a>-><a class=\"id\" href=\"#st_space\">st_space</a>[0];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fxsave\">fxsave</a>-><a class=\"id\" href=\"#cwd\">cwd</a> = <a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#cwd\">cwd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fxsave\">fxsave</a>-><a class=\"id\" href=\"#swd\">swd</a> = <a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#swd\">swd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fxsave\">fxsave</a>-><a class=\"id\" href=\"#twd\">twd</a> = <a class=\"id\" href=\"#twd_i387_to_fxsr\">twd_i387_to_fxsr</a>(<a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#twd\">twd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fxsave\">fxsave</a>-><a class=\"id\" href=\"#fop\">fop</a> = (<a class=\"id\" href=\"#u16\">u16</a>) ((<a class=\"id\" href=\"#u32\">u32</a>) <a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#fcs\">fcs</a> >> 16);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fxsave\">fxsave</a>-><a class=\"id\" href=\"#rip\">rip</a> = <a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#fip\">fip</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fxsave\">fxsave</a>-><a class=\"id\" href=\"#rdp\">rdp</a> = <a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#foo\">foo</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* cs and ds ignored */</span>", 
"#else", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fxsave\">fxsave</a>-><a class=\"id\" href=\"#fip\">fip</a> = <a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#fip\">fip</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fxsave\">fxsave</a>-><a class=\"id\" href=\"#fcs\">fcs</a> = (<a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#fcs\">fcs</a> &amp; 0xffff);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fxsave\">fxsave</a>-><a class=\"id\" href=\"#foo\">foo</a> = <a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#foo\">foo</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fxsave\">fxsave</a>-><a class=\"id\" href=\"#fos\">fos</a> = <a class=\"id\" href=\"#env\">env</a>-><a class=\"id\" href=\"#fos\">fos</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 8; ++<a class=\"id\" href=\"#i\">i</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#to\">to</a>[<a class=\"id\" href=\"#i\">i</a>], &amp;<a class=\"id\" href=\"#from\">from</a>[<a class=\"id\" href=\"#i\">i</a>], sizeof(<a class=\"id\" href=\"#from\">from</a>[0]));", 
"}", 
"", 
"int <a class=\"id\" href=\"#fpregs_get\">fpregs_get</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#target\">target</a>, const struct <a class=\"id\" href=\"#user_regset\">user_regset</a> *<a class=\"id\" href=\"#regset\">regset</a>,", 
"<span class=\"ts\"/>       unsigned int <a class=\"id\" href=\"#pos\">pos</a>, unsigned int <a class=\"id\" href=\"#count\">count</a>,", 
"<span class=\"ts\"/>       void *<a class=\"id\" href=\"#kbuf\">kbuf</a>, void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ubuf\">ubuf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#user_i387_ia32_struct\">user_i387_ia32_struct</a> <a class=\"id\" href=\"#env\">env</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#init_fpu\">init_fpu</a>(<a class=\"id\" href=\"#target\">target</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#HAVE_HWFP\">HAVE_HWFP</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#fpregs_soft_get\">fpregs_soft_get</a>(<a class=\"id\" href=\"#target\">target</a>, <a class=\"id\" href=\"#regset\">regset</a>, <a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#kbuf\">kbuf</a>, <a class=\"id\" href=\"#ubuf\">ubuf</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cpu_has_fxsr\">cpu_has_fxsr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#user_regset_copyout\">user_regset_copyout</a>(&amp;<a class=\"id\" href=\"#pos\">pos</a>, &amp;<a class=\"id\" href=\"#count\">count</a>, &amp;<a class=\"id\" href=\"#kbuf\">kbuf</a>, &amp;<a class=\"id\" href=\"#ubuf\">ubuf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#target\">target</a>-><a class=\"id\" href=\"#thread\">thread</a>.<a class=\"id\" href=\"#fpu\">fpu</a>.<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#fsave\">fsave</a>, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   -1);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sanitize_i387_state\">sanitize_i387_state</a>(<a class=\"id\" href=\"#target\">target</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#kbuf\">kbuf</a> && <a class=\"id\" href=\"#pos\">pos</a> == 0 && <a class=\"id\" href=\"#count\">count</a> == sizeof(<a class=\"id\" href=\"#env\">env</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#convert_from_fxsr\">convert_from_fxsr</a>(<a class=\"id\" href=\"#kbuf\">kbuf</a>, <a class=\"id\" href=\"#target\">target</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#convert_from_fxsr\">convert_from_fxsr</a>(&amp;<a class=\"id\" href=\"#env\">env</a>, <a class=\"id\" href=\"#target\">target</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#user_regset_copyout\">user_regset_copyout</a>(&amp;<a class=\"id\" href=\"#pos\">pos</a>, &amp;<a class=\"id\" href=\"#count\">count</a>, &amp;<a class=\"id\" href=\"#kbuf\">kbuf</a>, &amp;<a class=\"id\" href=\"#ubuf\">ubuf</a>, &amp;<a class=\"id\" href=\"#env\">env</a>, 0, -1);", 
"}", 
"", 
"int <a class=\"id\" href=\"#fpregs_set\">fpregs_set</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#target\">target</a>, const struct <a class=\"id\" href=\"#user_regset\">user_regset</a> *<a class=\"id\" href=\"#regset\">regset</a>,", 
"<span class=\"ts\"/>       unsigned int <a class=\"id\" href=\"#pos\">pos</a>, unsigned int <a class=\"id\" href=\"#count\">count</a>,", 
"<span class=\"ts\"/>       const void *<a class=\"id\" href=\"#kbuf\">kbuf</a>, const void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ubuf\">ubuf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#user_i387_ia32_struct\">user_i387_ia32_struct</a> <a class=\"id\" href=\"#env\">env</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#init_fpu\">init_fpu</a>(<a class=\"id\" href=\"#target\">target</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sanitize_i387_state\">sanitize_i387_state</a>(<a class=\"id\" href=\"#target\">target</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#HAVE_HWFP\">HAVE_HWFP</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#fpregs_soft_set\">fpregs_soft_set</a>(<a class=\"id\" href=\"#target\">target</a>, <a class=\"id\" href=\"#regset\">regset</a>, <a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#kbuf\">kbuf</a>, <a class=\"id\" href=\"#ubuf\">ubuf</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cpu_has_fxsr\">cpu_has_fxsr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#user_regset_copyin\">user_regset_copyin</a>(&amp;<a class=\"id\" href=\"#pos\">pos</a>, &amp;<a class=\"id\" href=\"#count\">count</a>, &amp;<a class=\"id\" href=\"#kbuf\">kbuf</a>, &amp;<a class=\"id\" href=\"#ubuf\">ubuf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#target\">target</a>-><a class=\"id\" href=\"#thread\">thread</a>.<a class=\"id\" href=\"#fpu\">fpu</a>.<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#fsave\">fsave</a>, 0, -1);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pos\">pos</a> &gt; 0 || <a class=\"id\" href=\"#count\">count</a> &lt; sizeof(<a class=\"id\" href=\"#env\">env</a>))", 
];
xr_frag_insert('l/6b/04099f08de53bdc4a225ca406a81507239a1fa.xr', __xr_tmp);
