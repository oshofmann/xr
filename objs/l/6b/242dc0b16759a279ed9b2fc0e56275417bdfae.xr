var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  linux/drivers/char/tty_io.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 1991, 1992  Linus Torvalds</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * 'tty_io.c' gives an orthogonal feeling to tty's, be they consoles</span>", 
"<span class=\"comment\"> * or rs-channels. It also implements echoing, cooked mode etc.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Kill-line thanks to John T Kohl, who also corrected VMIN = VTIME = 0.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Modified by Theodore Ts'o, 9/14/92, to dynamically allocate the</span>", 
"<span class=\"comment\"> * tty_struct and tty_queue structures.  Previously there was an array</span>", 
"<span class=\"comment\"> * of 256 tty_struct's which was statically allocated, and the</span>", 
"<span class=\"comment\"> * tty_queue structures were allocated at boot time.  Both are now</span>", 
"<span class=\"comment\"> * dynamically allocated only when the tty is open.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Also restructured routines so that there is more of a separation</span>", 
"<span class=\"comment\"> * between the high-level tty routines (tty_io.c and tty_ioctl.c) and</span>", 
"<span class=\"comment\"> * the low-level tty routines (serial.c, pty.c, console.c).  This</span>", 
"<span class=\"comment\"> * makes for cleaner and more compact code.  -TYT, 9/17/92</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Modified by Fred N. van Kempen, 01/29/93, to add line disciplines</span>", 
"<span class=\"comment\"> * which can be dynamically activated and de-activated by the line</span>", 
"<span class=\"comment\"> * discipline handling modules (like SLIP).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NOTE: pay no attention to the line discipline code (yet); its</span>", 
"<span class=\"comment\"> * interface is still subject to change in this version...</span>", 
"<span class=\"comment\"> * -- TYT, 1/31/92</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Added functionality to the OPOST tty handling.  No delays, but all</span>", 
"<span class=\"comment\"> * other bits should be there.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>-- Nick Holloway &lt;alfie@dcs.warwick.ac.uk&gt;, 27th May 1993.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Rewrote canonical mode and added more termios flags.</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>-- julian@uhunix.uhcc.hawaii.edu (J. Cowley), 13Jan94</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Reorganized FASYNC support so mouse code can share it.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>-- ctm@ardi.com, 9Sep95</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * New TIOCLINUX variants added.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>-- mj@k332.feld.cvut.cz, 19-Nov-95</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Restrict vt switching via ioctl()</span>", 
"<span class=\"comment\"> *      -- grif@cs.ucr.edu, 5-Dec-95</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Move console and virtual terminal code to more appropriate files,</span>", 
"<span class=\"comment\"> * implement CONFIG_VT and generalize console device interface.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>-- Marko Kohtala &lt;Marko.Kohtala@hut.fi&gt;, March 97</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Rewrote tty_init_dev and tty_release_dev to eliminate races.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>-- Bill Hawes &lt;whawes@star.net&gt;, June 97</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Added devfs support.</span>", 
"<span class=\"comment\"> *      -- C. Scott Ananian &lt;cananian@alumni.princeton.edu&gt;, 13-Jan-1998</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Added support for a Unix98-style ptmx device.</span>", 
"<span class=\"comment\"> *      -- C. Scott Ananian &lt;cananian@alumni.princeton.edu&gt;, 14-Jan-1998</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Reduced memory usage for older ARM systems</span>", 
"<span class=\"comment\"> *      -- Russell King &lt;rmk@arm.linux.org.uk&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Move do_SAK() into process context.  Less stack use in devfs functions.</span>", 
"<span class=\"comment\"> * alloc_tty_struct() always uses kmalloc()</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> -- Andrew Morton &lt;andrewm@uow.edu.eu&gt; 17Mar01</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#major\">major</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#signal\">signal</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fcntl\">fcntl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#tty\">tty</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#tty_driver\">tty_driver</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#tty_flip\">tty_flip</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#devpts_fs\">devpts_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#file\">file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fdtable\">fdtable</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#console\">console</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ctype\">ctype</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kd\">kd</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#poll\">poll</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#smp_lock\">smp_lock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#device\">device</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#wait\">wait</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bitops\">bitops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#system\">system</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kbd_kern\">kbd_kern</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#vt_kern\">vt_kern</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#selection\">selection</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kmod\">kmod</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#nsproxy\">nsproxy</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#TTY_DEBUG_HANGUP\">TTY_DEBUG_HANGUP</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TTY_PARANOIA_CHECK\">TTY_PARANOIA_CHECK</a> 1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CHECK_TTY_COUNT\">CHECK_TTY_COUNT</a> 1", 
"", 
"struct <a class=\"id\" href=\"#ktermios\">ktermios</a> <a class=\"id\" href=\"#tty_std_termios\">tty_std_termios</a> = {<span class=\"ts\"/><span class=\"comment\">/* for the benefit of tty drivers  */</span>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#c_iflag\">c_iflag</a> = <a class=\"id\" href=\"#ICRNL\">ICRNL</a> | <a class=\"id\" href=\"#IXON\">IXON</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#c_oflag\">c_oflag</a> = <a class=\"id\" href=\"#OPOST\">OPOST</a> | <a class=\"id\" href=\"#ONLCR\">ONLCR</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#c_cflag\">c_cflag</a> = <a class=\"id\" href=\"#B38400\">B38400</a> | <a class=\"id\" href=\"#CS8\">CS8</a> | <a class=\"id\" href=\"#CREAD\">CREAD</a> | <a class=\"id\" href=\"#HUPCL\">HUPCL</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#c_lflag\">c_lflag</a> = <a class=\"id\" href=\"#ISIG\">ISIG</a> | <a class=\"id\" href=\"#ICANON\">ICANON</a> | <a class=\"id\" href=\"#ECHO\">ECHO</a> | <a class=\"id\" href=\"#ECHOE\">ECHOE</a> | <a class=\"id\" href=\"#ECHOK\">ECHOK</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#ECHOCTL\">ECHOCTL</a> | <a class=\"id\" href=\"#ECHOKE\">ECHOKE</a> | <a class=\"id\" href=\"#IEXTEN\">IEXTEN</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#c_cc\">c_cc</a> = <a class=\"id\" href=\"#INIT_C_CC\">INIT_C_CC</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#c_ispeed\">c_ispeed</a> = 38400,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#c_ospeed\">c_ospeed</a> = 38400", 
"};", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tty_std_termios\">tty_std_termios</a>);", 
"", 
"<span class=\"comment\">/* This list gets poked at by procfs and various bits of boot up code. This</span>", 
"<span class=\"comment\">   could do with some rationalisation such as pulling the tty proc function</span>", 
"<span class=\"comment\">   into this file */</span>", 
"", 
"<a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#tty_drivers\">tty_drivers</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* linked list of tty drivers */</span>", 
"", 
"<span class=\"comment\">/* Mutex to protect creating and releasing a tty. This is shared with</span>", 
"<span class=\"comment\">   vt.c for deeply disgusting hack reasons */</span>", 
"<a class=\"id\" href=\"#DEFINE_MUTEX\">DEFINE_MUTEX</a>(<a class=\"id\" href=\"#tty_mutex\">tty_mutex</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tty_mutex\">tty_mutex</a>);", 
"", 
"<span class=\"comment\">/* Spinlock to protect the tty-&gt;tty_files list */</span>", 
"<a class=\"id\" href=\"#DEFINE_SPINLOCK\">DEFINE_SPINLOCK</a>(<a class=\"id\" href=\"#tty_files_lock\">tty_files_lock</a>);", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#tty_read\">tty_read</a>(struct <a class=\"id\" href=\"#file\">file</a> *, char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#size_t\">size_t</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *);", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#tty_write\">tty_write</a>(struct <a class=\"id\" href=\"#file\">file</a> *, const char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#size_t\">size_t</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *);", 
"<a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#redirected_tty_write\">redirected_tty_write</a>(struct <a class=\"id\" href=\"#file\">file</a> *, const char <a class=\"id\" href=\"#__user\">__user</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *);", 
"static unsigned int <a class=\"id\" href=\"#tty_poll\">tty_poll</a>(struct <a class=\"id\" href=\"#file\">file</a> *, <a class=\"id\" href=\"#poll_table\">poll_table</a> *);", 
"static int <a class=\"id\" href=\"#tty_open\">tty_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *, struct <a class=\"id\" href=\"#file\">file</a> *);", 
"long <a class=\"id\" href=\"#tty_ioctl\">tty_ioctl</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>, unsigned long <a class=\"id\" href=\"#arg\">arg</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>", 
"static long <a class=\"id\" href=\"#tty_compat_ioctl\">tty_compat_ioctl</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#arg\">arg</a>);", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#tty_compat_ioctl\">tty_compat_ioctl</a> <a class=\"id\" href=\"#NULL\">NULL</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"static int <a class=\"id\" href=\"#__tty_fasync\">__tty_fasync</a>(int <a class=\"id\" href=\"#fd\">fd</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, int <a class=\"id\" href=\"#on\">on</a>);", 
"static int <a class=\"id\" href=\"#tty_fasync\">tty_fasync</a>(int <a class=\"id\" href=\"#fd\">fd</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, int <a class=\"id\" href=\"#on\">on</a>);", 
"static void <a class=\"id\" href=\"#release_tty\">release_tty</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, int <a class=\"id\" href=\"#idx\">idx</a>);", 
"static void <a class=\"id\" href=\"#__proc_set_tty\">__proc_set_tty</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>, struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>);", 
"static void <a class=\"id\" href=\"#proc_set_tty\">proc_set_tty</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>, struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>alloc_tty_struct<span class=\"ts\"/>-<span class=\"ts\"/>allocate a tty object</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Return a new empty tty structure. The data fields have not</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>been initialized in any way but has been zeroed</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: none</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#alloc_tty_struct\">alloc_tty_struct</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>free_tty_struct<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>free a disused tty</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty struct to free</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Free the write buffers, tty queue and tty memory itself.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: none. Must be called after tty is definitely unused</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#free_tty_struct\">free_tty_struct</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#write_buf\">write_buf</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_buffer_free_all\">tty_buffer_free_all</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#file_tty\">file_tty</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return ((struct <a class=\"id\" href=\"#tty_file_private\">tty_file_private</a> *)<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>)-><a class=\"id\" href=\"#tty\">tty</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Associate a new file with the tty structure */</span>", 
"void <a class=\"id\" href=\"#tty_add_file\">tty_add_file</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_file_private\">tty_file_private</a> *<a class=\"id\" href=\"#priv\">priv</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* XXX: must implement proper error handling in callers */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#priv\">priv</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#priv\">priv</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>|<a class=\"id\" href=\"#__GFP_NOFAIL\">__GFP_NOFAIL</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#tty\">tty</a> = <a class=\"id\" href=\"#tty\">tty</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a> = <a class=\"id\" href=\"#priv\">priv</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#tty_files_lock\">tty_files_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#tty_files\">tty_files</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#tty_files_lock\">tty_files_lock</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Delete file from its tty */</span>", 
"void <a class=\"id\" href=\"#tty_del_file\">tty_del_file</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_file_private\">tty_file_private</a> *<a class=\"id\" href=\"#priv\">priv</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#tty_files_lock\">tty_files_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#tty_files_lock\">tty_files_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#priv\">priv</a>);", 
"}", 
"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TTY_NUMBER\">TTY_NUMBER</a>(<a class=\"id\" href=\"#tty\">tty</a>) ((<a class=\"id\" href=\"#tty\">tty</a>)-><a class=\"id\" href=\"#index\">index</a> + (<a class=\"id\" href=\"#tty\">tty</a>)-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#name_base\">name_base</a>)", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_name<span class=\"ts\"/>-<span class=\"ts\"/>return tty naming</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty structure</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@buf: buffer for output</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Convert a tty structure into a name. The name reflects the kernel</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>naming policy and if udev is in use may not reflect user space</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: none</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"char *<a class=\"id\" href=\"#tty_name\">tty_name</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tty\">tty</a>) <span class=\"comment\">/* Hmm.  NULL pointer.  That's fun. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strcpy\">strcpy</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"NULL tty\");", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strcpy\">strcpy</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#buf\">buf</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tty_name\">tty_name</a>);", 
"", 
"int <a class=\"id\" href=\"#tty_paranoia_check\">tty_paranoia_check</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      const char *<a class=\"id\" href=\"#routine\">routine</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#TTY_PARANOIA_CHECK\">TTY_PARANOIA_CHECK</a>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tty\">tty</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"null TTY for (%d:%d) in %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#imajor\">imajor</a>(<a class=\"id\" href=\"#inode\">inode</a>), <a class=\"id\" href=\"#iminor\">iminor</a>(<a class=\"id\" href=\"#inode\">inode</a>), <a class=\"id\" href=\"#routine\">routine</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#magic\">magic</a> != <a class=\"id\" href=\"#TTY_MAGIC\">TTY_MAGIC</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"bad magic number for tty struct (%d:%d) in %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#imajor\">imajor</a>(<a class=\"id\" href=\"#inode\">inode</a>), <a class=\"id\" href=\"#iminor\">iminor</a>(<a class=\"id\" href=\"#inode\">inode</a>), <a class=\"id\" href=\"#routine\">routine</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#check_tty_count\">check_tty_count</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, const char *<a class=\"id\" href=\"#routine\">routine</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CHECK_TTY_COUNT\">CHECK_TTY_COUNT</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#count\">count</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#tty_files_lock\">tty_files_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each\">list_for_each</a>(<a class=\"id\" href=\"#p\">p</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#tty_files\">tty_files</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a>++;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#tty_files_lock\">tty_files_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#TTY_DRIVER_TYPE_PTY\">TTY_DRIVER_TYPE_PTY</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#subtype\">subtype</a> == <a class=\"id\" href=\"#PTY_TYPE_SLAVE\">PTY_TYPE_SLAVE</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#link\">link</a> && <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#count\">count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a>++;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#count\">count</a> != <a class=\"id\" href=\"#count\">count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"Warning: dev (%s) tty->count(%d) \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"!= #fd's(%d) in %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#routine\">routine</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>get_tty_driver<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>find device of a tty</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@dev_t: device identifier</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@index: returns the index of the tty</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This routine returns a tty driver structure, given a device number</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>and also passes back the index number.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: caller must hold tty_mutex</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#get_tty_driver\">get_tty_driver</a>(<a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#device\">device</a>, int *<a class=\"id\" href=\"#index\">index</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#p\">p</a>, &amp;<a class=\"id\" href=\"#tty_drivers\">tty_drivers</a>, <a class=\"id\" href=\"#tty_drivers\">tty_drivers</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#base\">base</a> = <a class=\"id\" href=\"#MKDEV\">MKDEV</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#major\">major</a>, <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#minor_start\">minor_start</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#device\">device</a> &lt; <a class=\"id\" href=\"#base\">base</a> || <a class=\"id\" href=\"#device\">device</a> >= <a class=\"id\" href=\"#base\">base</a> + <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#num\">num</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#device\">device</a> - <a class=\"id\" href=\"#base\">base</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#tty_driver_kref_get\">tty_driver_kref_get</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_CONSOLE_POLL\">CONFIG_CONSOLE_POLL</a>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_find_polling_driver<span class=\"ts\"/>-<span class=\"ts\"/>find device of a polled tty</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@name: name string to match</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@line: pointer to resulting tty line nr</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This routine returns a tty driver structure, given a name</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>and the condition that the tty driver is capable of polled</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>operation.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#tty_find_polling_driver\">tty_find_polling_driver</a>(char *<a class=\"id\" href=\"#name\">name</a>, int *<a class=\"id\" href=\"#line\">line</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#p\">p</a>, *<a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#tty_line\">tty_line</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#str\">str</a>, *<a class=\"id\" href=\"#stp\">stp</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#str\">str</a> = <a class=\"id\" href=\"#name\">name</a>; *<a class=\"id\" href=\"#str\">str</a>; <a class=\"id\" href=\"#str\">str</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((*<a class=\"id\" href=\"#str\">str</a> >= '0' && *<a class=\"id\" href=\"#str\">str</a> <= '9') || *<a class=\"id\" href=\"#str\">str</a> == ',')", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>if (!*<a class=\"id\" href=\"#str\">str</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#str\">str</a> - <a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_line\">tty_line</a> = <a class=\"id\" href=\"#simple_strtoul\">simple_strtoul</a>(<a class=\"id\" href=\"#str\">str</a>, &amp;<a class=\"id\" href=\"#str\">str</a>, 10);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#tty_mutex\">tty_mutex</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Search through the tty devices to look for a match */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#p\">p</a>, &amp;<a class=\"id\" href=\"#tty_drivers\">tty_drivers</a>, <a class=\"id\" href=\"#tty_drivers\">tty_drivers</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#strncmp\">strncmp</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#len\">len</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stp\">stp</a> = <a class=\"id\" href=\"#str\">str</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (*<a class=\"id\" href=\"#stp\">stp</a> == ',')", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stp\">stp</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (*<a class=\"id\" href=\"#stp\">stp</a> == '\\0')", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stp\">stp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tty_line\">tty_line</a> >= 0 && <a class=\"id\" href=\"#tty_line\">tty_line</a> &lt; <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#num\">num</a> && <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#ops\">ops</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#poll_init\">poll_init</a> && !<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#poll_init\">poll_init</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#tty_line\">tty_line</a>, <a class=\"id\" href=\"#stp\">stp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#tty_driver_kref_get\">tty_driver_kref_get</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#line\">line</a> = <a class=\"id\" href=\"#tty_line\">tty_line</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tty_mutex\">tty_mutex</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#tty_find_polling_driver\">tty_find_polling_driver</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_check_change<span class=\"ts\"/>-<span class=\"ts\"/>check for POSIX terminal changes</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty to check</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>If we try to write to, or set the state of, a terminal and we're</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>not in the foreground, send a SIGTTOU.  If the signal is blocked or</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ignored, go ahead and perform the operation.  (POSIX 7.2)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: ctrl_lock</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#tty_check_change\">tty_check_change</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#tty\">tty</a> != <a class=\"id\" href=\"#tty\">tty</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ctrl_lock\">ctrl_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#pgrp\">pgrp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"tty_check_change: tty->pgrp == NULL!\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#task_pgrp\">task_pgrp</a>(<a class=\"id\" href=\"#current\">current</a>) == <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#pgrp\">pgrp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ctrl_lock\">ctrl_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_ignored\">is_ignored</a>(<a class=\"id\" href=\"#SIGTTOU\">SIGTTOU</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_current_pgrp_orphaned\">is_current_pgrp_orphaned</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kill_pgrp\">kill_pgrp</a>(<a class=\"id\" href=\"#task_pgrp\">task_pgrp</a>(<a class=\"id\" href=\"#current\">current</a>), <a class=\"id\" href=\"#SIGTTOU\">SIGTTOU</a>, 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_thread_flag\">set_thread_flag</a>(<a class=\"id\" href=\"#TIF_SIGPENDING\">TIF_SIGPENDING</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ERESTARTSYS\">ERESTARTSYS</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<a class=\"id\" href=\"#out_unlock\">out_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ctrl_lock\">ctrl_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tty_check_change\">tty_check_change</a>);", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#hung_up_tty_read\">hung_up_tty_read</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#hung_up_tty_write\">hung_up_tty_write</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"}", 
"", 
"<span class=\"comment\">/* No kernel lock held - none needed ;) */</span>", 
"static unsigned int <a class=\"id\" href=\"#hung_up_tty_poll\">hung_up_tty_poll</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#poll_table\">poll_table</a> *<a class=\"id\" href=\"#wait\">wait</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#POLLIN\">POLLIN</a> | <a class=\"id\" href=\"#POLLOUT\">POLLOUT</a> | <a class=\"id\" href=\"#POLLERR\">POLLERR</a> | <a class=\"id\" href=\"#POLLHUP\">POLLHUP</a> | <a class=\"id\" href=\"#POLLRDNORM\">POLLRDNORM</a> | <a class=\"id\" href=\"#POLLWRNORM\">POLLWRNORM</a>;", 
"}", 
"", 
"static long <a class=\"id\" href=\"#hung_up_tty_ioctl\">hung_up_tty_ioctl</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#TIOCSPGRP\">TIOCSPGRP</a> ? -<a class=\"id\" href=\"#ENOTTY\">ENOTTY</a> : -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"}", 
"", 
"static long <a class=\"id\" href=\"#hung_up_tty_compat_ioctl\">hung_up_tty_compat_ioctl</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>, unsigned long <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#TIOCSPGRP\">TIOCSPGRP</a> ? -<a class=\"id\" href=\"#ENOTTY\">ENOTTY</a> : -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#tty_fops\">tty_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#no_llseek\">no_llseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tty_read\">tty_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write\">write</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tty_write\">tty_write</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#poll\">poll</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tty_poll\">tty_poll</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#unlocked_ioctl\">unlocked_ioctl</a><span class=\"ts\"/>= <a class=\"id\" href=\"#tty_ioctl\">tty_ioctl</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#compat_ioctl\">compat_ioctl</a><span class=\"ts\"/>= <a class=\"id\" href=\"#tty_compat_ioctl\">tty_compat_ioctl</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tty_open\">tty_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#tty_release\">tty_release</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#fasync\">fasync</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tty_fasync\">tty_fasync</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#console_fops\">console_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#no_llseek\">no_llseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tty_read\">tty_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write\">write</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#redirected_tty_write\">redirected_tty_write</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#poll\">poll</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tty_poll\">tty_poll</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#unlocked_ioctl\">unlocked_ioctl</a><span class=\"ts\"/>= <a class=\"id\" href=\"#tty_ioctl\">tty_ioctl</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#compat_ioctl\">compat_ioctl</a><span class=\"ts\"/>= <a class=\"id\" href=\"#tty_compat_ioctl\">tty_compat_ioctl</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tty_open\">tty_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#tty_release\">tty_release</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#fasync\">fasync</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tty_fasync\">tty_fasync</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#hung_up_tty_fops\">hung_up_tty_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#no_llseek\">no_llseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#hung_up_tty_read\">hung_up_tty_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write\">write</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#hung_up_tty_write\">hung_up_tty_write</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#poll\">poll</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#hung_up_tty_poll\">hung_up_tty_poll</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#unlocked_ioctl\">unlocked_ioctl</a><span class=\"ts\"/>= <a class=\"id\" href=\"#hung_up_tty_ioctl\">hung_up_tty_ioctl</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#compat_ioctl\">compat_ioctl</a><span class=\"ts\"/>= <a class=\"id\" href=\"#hung_up_tty_compat_ioctl\">hung_up_tty_compat_ioctl</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#tty_release\">tty_release</a>,", 
"};", 
"", 
"static <a class=\"id\" href=\"#DEFINE_SPINLOCK\">DEFINE_SPINLOCK</a>(<a class=\"id\" href=\"#redirect_lock\">redirect_lock</a>);", 
"static struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#redirect\">redirect</a>;", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_wakeup<span class=\"ts\"/>-<span class=\"ts\"/>request more data</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: terminal</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Internal and external helper for wakeups of tty. This function</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>informs the line discipline if present that the driver is ready</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>to receive more output data.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#tty_wakeup\">tty_wakeup</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_ldisc\">tty_ldisc</a> *<a class=\"id\" href=\"#ld\">ld</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#TTY_DO_WRITE_WAKEUP\">TTY_DO_WRITE_WAKEUP</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ld\">ld</a> = <a class=\"id\" href=\"#tty_ldisc_ref\">tty_ldisc_ref</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ld\">ld</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ld\">ld</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#write_wakeup\">write_wakeup</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ld\">ld</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#write_wakeup\">write_wakeup</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_deref\">tty_ldisc_deref</a>(<a class=\"id\" href=\"#ld\">ld</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible_poll\">wake_up_interruptible_poll</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#write_wait\">write_wait</a>, <a class=\"id\" href=\"#POLLOUT\">POLLOUT</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#tty_wakeup\">tty_wakeup</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>__tty_hangup<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>actual handler for hangup events</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@work: tty device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This can be called by the \"eventd\" kernel thread.  That is process</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>synchronous but doesn't hold any locks, so we need to make sure we</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>have the appropriate locks for what we're doing.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>The hangup event clears any pending redirections onto the hung up</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>device. It ensures future writes will error and it does the needed</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>line discipline hangup and signal delivery. The tty object itself</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>remains intact.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>BTM</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>  redirect lock for undoing redirection</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>  file list lock for manipulating list of ttys</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>  tty_ldisc_lock from called functions</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>  termios_mutex resetting termios data</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>  tasklist_lock to walk task list for hangup event</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>    -&gt;siglock to protect -&gt;signal/-&gt;sighand</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__tty_hangup\">__tty_hangup</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#cons_filp\">cons_filp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, *<a class=\"id\" href=\"#f\">f</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_file_private\">tty_file_private</a> *<a class=\"id\" href=\"#priv\">priv</a>;", 
"<span class=\"ts\"/>int    <a class=\"id\" href=\"#closecount\">closecount</a> = 0, <a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#refs\">refs</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tty\">tty</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#redirect_lock\">redirect_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#redirect\">redirect</a> && <a class=\"id\" href=\"#file_tty\">file_tty</a>(<a class=\"id\" href=\"#redirect\">redirect</a>) == <a class=\"id\" href=\"#tty\">tty</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#f\">f</a> = <a class=\"id\" href=\"#redirect\">redirect</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#redirect\">redirect</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#redirect_lock\">redirect_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_lock\">tty_lock</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* inuse_filps is protected by the single tty lock,</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   this really needs to change if we want to flush the</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   workqueue with the lock held */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#check_tty_count\">check_tty_count</a>(<a class=\"id\" href=\"#tty\">tty</a>, \"tty_hangup\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#tty_files_lock\">tty_files_lock</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* This breaks for file handles being sent over AF_UNIX sockets ? */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#priv\">priv</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#tty_files\">tty_files</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a> = <a class=\"id\" href=\"#priv\">priv</a>-><a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#write\">write</a> == <a class=\"id\" href=\"#redirected_tty_write\">redirected_tty_write</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cons_filp\">cons_filp</a> = <a class=\"id\" href=\"#filp\">filp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#write\">write</a> != <a class=\"id\" href=\"#tty_write\">tty_write</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#closecount\">closecount</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__tty_fasync\">__tty_fasync</a>(-1, <a class=\"id\" href=\"#filp\">filp</a>, 0);<span class=\"ts\"/><span class=\"comment\">/* can't block */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_op\">f_op</a> = &amp;<a class=\"id\" href=\"#hung_up_tty_fops\">hung_up_tty_fops</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#tty_files_lock\">tty_files_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_hangup\">tty_ldisc_hangup</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#session\">session</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_each_pid_task\">do_each_pid_task</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#session\">session</a>, <a class=\"id\" href=\"#PIDTYPE_SID\">PIDTYPE_SID</a>, <a class=\"id\" href=\"#p\">p</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#tty\">tty</a> == <a class=\"id\" href=\"#tty\">tty</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#tty\">tty</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We defer the dereferences outside fo</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   the tasklist lock */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#refs\">refs</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#leader\">leader</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__group_send_sig_info\">__group_send_sig_info</a>(<a class=\"id\" href=\"#SIGHUP\">SIGHUP</a>, <a class=\"id\" href=\"#SEND_SIG_PRIV\">SEND_SIG_PRIV</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__group_send_sig_info\">__group_send_sig_info</a>(<a class=\"id\" href=\"#SIGCONT\">SIGCONT</a>, <a class=\"id\" href=\"#SEND_SIG_PRIV\">SEND_SIG_PRIV</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_pid\">put_pid</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#tty_old_pgrp\">tty_old_pgrp</a>);  <span class=\"comment\">/* A noop */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ctrl_lock\">ctrl_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#pgrp\">pgrp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#tty_old_pgrp\">tty_old_pgrp</a> = <a class=\"id\" href=\"#get_pid\">get_pid</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#pgrp\">pgrp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ctrl_lock\">ctrl_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#while_each_pid_task\">while_each_pid_task</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#session\">session</a>, <a class=\"id\" href=\"#PIDTYPE_SID\">PIDTYPE_SID</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ctrl_lock\">ctrl_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#TTY_THROTTLED\">TTY_THROTTLED</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#TTY_PUSH\">TTY_PUSH</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#TTY_DO_WRITE_WAKEUP\">TTY_DO_WRITE_WAKEUP</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_pid\">put_pid</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#session\">session</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_pid\">put_pid</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#pgrp\">pgrp</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#session\">session</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#pgrp\">pgrp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ctrl_status\">ctrl_status</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#TTY_HUPPED\">TTY_HUPPED</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ctrl_lock\">ctrl_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Account for the p-&gt;signal references we killed */</span>", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#refs\">refs</a>--)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_kref_put\">tty_kref_put</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If one of the devices matches a console pointer, we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * cannot just call hangup() because that will cause</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * tty-&gt;count and state-&gt;count to go out of sync.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * So we just call close() the right number of times.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cons_filp\">cons_filp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#close\">close</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#n\">n</a> = 0; <a class=\"id\" href=\"#n\">n</a> &lt; <a class=\"id\" href=\"#closecount\">closecount</a>; <a class=\"id\" href=\"#n\">n</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#close\">close</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#cons_filp\">cons_filp</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#hangup\">hangup</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#hangup\">hangup</a>)(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We don't want to have driver/ldisc interactions beyond</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the ones we did here. The driver layer expects no</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * calls after -&gt;hangup() from the ldisc side. However we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * can't yet guarantee all that.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#TTY_HUPPED\">TTY_HUPPED</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_enable\">tty_ldisc_enable</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_unlock\">tty_unlock</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#f\">f</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fput\">fput</a>(<a class=\"id\" href=\"#f\">f</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#do_tty_hangup\">do_tty_hangup</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#work\">work</a>, struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a>, <a class=\"id\" href=\"#hangup_work\">hangup_work</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__tty_hangup\">__tty_hangup</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_hangup<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>trigger a hangup event</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty to hangup</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>A carrier loss (virtual or otherwise) has occurred on this like</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>schedule a hangup sequence to run after this event.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#tty_hangup\">tty_hangup</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#TTY_DEBUG_HANGUP\">TTY_DEBUG_HANGUP</a>", 
"<span class=\"ts\"/>char<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>[64];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"%s hangup...\\n\", <a class=\"id\" href=\"#tty_name\">tty_name</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#buf\">buf</a>));", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#schedule_work\">schedule_work</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#hangup_work\">hangup_work</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tty_hangup\">tty_hangup</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_vhangup<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>process vhangup</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty to hangup</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>The user has asked via system call for the terminal to be hung up.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>We do this synchronously so that when the syscall returns the process</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>is complete. That guarantee is necessary for security reasons.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#tty_vhangup\">tty_vhangup</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#TTY_DEBUG_HANGUP\">TTY_DEBUG_HANGUP</a>", 
"<span class=\"ts\"/>char<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>[64];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"%s vhangup...\\n\", <a class=\"id\" href=\"#tty_name\">tty_name</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#buf\">buf</a>));", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__tty_hangup\">__tty_hangup</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tty_vhangup\">tty_vhangup</a>);", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_vhangup_self<span class=\"ts\"/>-<span class=\"ts\"/>process vhangup for own ctty</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Perform a vhangup on the current controlling tty</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#tty_vhangup_self\">tty_vhangup_self</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a> = <a class=\"id\" href=\"#get_current_tty\">get_current_tty</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_vhangup\">tty_vhangup</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_kref_put\">tty_kref_put</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_hung_up_p<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>was tty hung up</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@filp: file pointer of tty</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Return true if the tty has been subject to a vhangup or a carrier</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>loss</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#tty_hung_up_p\">tty_hung_up_p</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_op\">f_op</a> == &amp;<a class=\"id\" href=\"#hung_up_tty_fops\">hung_up_tty_fops</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tty_hung_up_p\">tty_hung_up_p</a>);", 
"", 
"static void <a class=\"id\" href=\"#session_clear_tty\">session_clear_tty</a>(struct <a class=\"id\" href=\"#pid\">pid</a> *<a class=\"id\" href=\"#session\">session</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#do_each_pid_task\">do_each_pid_task</a>(<a class=\"id\" href=\"#session\">session</a>, <a class=\"id\" href=\"#PIDTYPE_SID\">PIDTYPE_SID</a>, <a class=\"id\" href=\"#p\">p</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#proc_clear_tty\">proc_clear_tty</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#while_each_pid_task\">while_each_pid_task</a>(<a class=\"id\" href=\"#session\">session</a>, <a class=\"id\" href=\"#PIDTYPE_SID\">PIDTYPE_SID</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>disassociate_ctty<span class=\"ts\"/>-<span class=\"ts\"/>disconnect controlling tty</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@on_exit: true if exiting so need to \"hang up\" the session</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This function is typically called only by the session leader, when</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>it wants to disassociate itself from its controlling tty.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>It performs the following functions:</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>(1)  Sends a SIGHUP and SIGCONT to the foreground process group</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>(2)  Clears the tty from being controlling the session</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>(3)  Clears the controlling tty for all processes in the</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/><span class=\"ts\"/>session group.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>The argument on_exit is set to 1 if called when a process is</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>exiting; it is 0 if called by the ioctl TIOCNOTTY.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>BTM is taken for hysterical raisins, and held when</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>  called from no_tty().</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>  tty_mutex is taken to protect tty</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>  -&gt;siglock is taken to protect -&gt;signal/-&gt;sighand</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>  tasklist_lock is taken to walk process list for sessions</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>    -&gt;siglock is taken to protect -&gt;signal/-&gt;sighand</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#disassociate_ctty\">disassociate_ctty</a>(int <a class=\"id\" href=\"#on_exit\">on_exit</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pid\">pid</a> *<a class=\"id\" href=\"#tty_pgrp\">tty_pgrp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#leader\">leader</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a> = <a class=\"id\" href=\"#get_current_tty\">get_current_tty</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_pgrp\">tty_pgrp</a> = <a class=\"id\" href=\"#get_pid\">get_pid</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#pgrp\">pgrp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#on_exit\">on_exit</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#TTY_DRIVER_TYPE_PTY\">TTY_DRIVER_TYPE_PTY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_vhangup\">tty_vhangup</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_kref_put\">tty_kref_put</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#on_exit\">on_exit</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#pid\">pid</a> *<a class=\"id\" href=\"#old_pgrp\">old_pgrp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_pgrp\">old_pgrp</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#tty_old_pgrp\">tty_old_pgrp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#tty_old_pgrp\">tty_old_pgrp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#old_pgrp\">old_pgrp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kill_pgrp\">kill_pgrp</a>(<a class=\"id\" href=\"#old_pgrp\">old_pgrp</a>, <a class=\"id\" href=\"#SIGHUP\">SIGHUP</a>, <a class=\"id\" href=\"#on_exit\">on_exit</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kill_pgrp\">kill_pgrp</a>(<a class=\"id\" href=\"#old_pgrp\">old_pgrp</a>, <a class=\"id\" href=\"#SIGCONT\">SIGCONT</a>, <a class=\"id\" href=\"#on_exit\">on_exit</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_pid\">put_pid</a>(<a class=\"id\" href=\"#old_pgrp\">old_pgrp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty_pgrp\">tty_pgrp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kill_pgrp\">kill_pgrp</a>(<a class=\"id\" href=\"#tty_pgrp\">tty_pgrp</a>, <a class=\"id\" href=\"#SIGHUP\">SIGHUP</a>, <a class=\"id\" href=\"#on_exit\">on_exit</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#on_exit\">on_exit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kill_pgrp\">kill_pgrp</a>(<a class=\"id\" href=\"#tty_pgrp\">tty_pgrp</a>, <a class=\"id\" href=\"#SIGCONT\">SIGCONT</a>, <a class=\"id\" href=\"#on_exit\">on_exit</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_pid\">put_pid</a>(<a class=\"id\" href=\"#tty_pgrp\">tty_pgrp</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_pid\">put_pid</a>(<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#tty_old_pgrp\">tty_old_pgrp</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#tty_old_pgrp\">tty_old_pgrp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a> = <a class=\"id\" href=\"#get_current_tty\">get_current_tty</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ctrl_lock\">ctrl_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_pid\">put_pid</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#session\">session</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_pid\">put_pid</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#pgrp\">pgrp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#session\">session</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#pgrp\">pgrp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ctrl_lock\">ctrl_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_kref_put\">tty_kref_put</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>} else {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#TTY_DEBUG_HANGUP\">TTY_DEBUG_HANGUP</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"error attempted to write to tty [0x%p]\"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \" = NULL\", <a class=\"id\" href=\"#tty\">tty</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Now clear signal-&gt;tty under the lock */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#session_clear_tty\">session_clear_tty</a>(<a class=\"id\" href=\"#task_session\">task_session</a>(<a class=\"id\" href=\"#current\">current</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>no_tty<span class=\"ts\"/>- Ensure the current process does not have a controlling tty</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#no_tty\">no_tty</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a> = <a class=\"id\" href=\"#current\">current</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_lock\">tty_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disassociate_ctty\">disassociate_ctty</a>(0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_unlock\">tty_unlock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proc_clear_tty\">proc_clear_tty</a>(<a class=\"id\" href=\"#tsk\">tsk</a>);", 
"}", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>stop_tty<span class=\"ts\"/>-<span class=\"ts\"/>propagate flow control</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty to stop</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Perform flow control to the driver. For PTY/TTY pairs we</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>must also propagate the TIOCKPKT status. May be called</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>on an already stopped device and will not re-call the driver</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>method.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This functionality is used by both the line disciplines for</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>halting incoming flow and by the driver. It may therefore be</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>called from any context, may be under the tty atomic_write_lock</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>but not always.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Uses the tty control lock internally</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#stop_tty\">stop_tty</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ctrl_lock\">ctrl_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#stopped\">stopped</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ctrl_lock\">ctrl_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#stopped\">stopped</a> = 1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#link\">link</a> && <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#packet\">packet</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ctrl_status\">ctrl_status</a> &= ~<a class=\"id\" href=\"#TIOCPKT_START\">TIOCPKT_START</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ctrl_status\">ctrl_status</a> |= <a class=\"id\" href=\"#TIOCPKT_STOP\">TIOCPKT_STOP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible_poll\">wake_up_interruptible_poll</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#read_wait\">read_wait</a>, <a class=\"id\" href=\"#POLLIN\">POLLIN</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ctrl_lock\">ctrl_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#stop\">stop</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#stop\">stop</a>)(<a class=\"id\" href=\"#tty\">tty</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#stop_tty\">stop_tty</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>start_tty<span class=\"ts\"/>-<span class=\"ts\"/>propagate flow control</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty to start</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Start a tty that has been stopped if at all possible. Perform</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>any necessary wakeups and propagate the TIOCPKT status. If this</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>is the tty was previous stopped and is being started then the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>driver start method is invoked and the line discipline woken.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>ctrl_lock</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#start_tty\">start_tty</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ctrl_lock\">ctrl_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#stopped\">stopped</a> || <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flow_stopped\">flow_stopped</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ctrl_lock\">ctrl_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#stopped\">stopped</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#link\">link</a> && <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#packet\">packet</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ctrl_status\">ctrl_status</a> &= ~<a class=\"id\" href=\"#TIOCPKT_STOP\">TIOCPKT_STOP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ctrl_status\">ctrl_status</a> |= <a class=\"id\" href=\"#TIOCPKT_START\">TIOCPKT_START</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible_poll\">wake_up_interruptible_poll</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#read_wait\">read_wait</a>, <a class=\"id\" href=\"#POLLIN\">POLLIN</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ctrl_lock\">ctrl_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#start\">start</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#start\">start</a>)(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* If we have a running line discipline it may need kicking */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_wakeup\">tty_wakeup</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#start_tty\">start_tty</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_read<span class=\"ts\"/>-<span class=\"ts\"/>read method for tty device files</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@file: pointer to tty file</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@buf: user buffer</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@count: size of user buffer</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ppos: unused</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Perform the read system call function on this terminal device. Checks</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>for hung up devices before calling the line discipline method.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Locks the line discipline internally while needed. Multiple</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>read calls may be outstanding in parallel.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#tty_read\">tty_read</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a> = <a class=\"id\" href=\"#file_tty\">file_tty</a>(<a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_ldisc\">tty_ldisc</a> *<a class=\"id\" href=\"#ld\">ld</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty_paranoia_check\">tty_paranoia_check</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#inode\">inode</a>, \"tty_read\"))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tty\">tty</a> || (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#TTY_IO_ERROR\">TTY_IO_ERROR</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We want to wait for the line discipline to sort out in this</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   situation */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ld\">ld</a> = <a class=\"id\" href=\"#tty_ldisc_ref_wait\">tty_ldisc_ref_wait</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ld\">ld</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#read\">read</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = (<a class=\"id\" href=\"#ld\">ld</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#read\">read</a>)(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_deref\">tty_ldisc_deref</a>(<a class=\"id\" href=\"#ld\">ld</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_atime\">i_atime</a> = <a class=\"id\" href=\"#current_fs_time\">current_fs_time</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#i\">i</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#tty_write_unlock\">tty_write_unlock</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#atomic_write_lock\">atomic_write_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible_poll\">wake_up_interruptible_poll</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#write_wait\">write_wait</a>, <a class=\"id\" href=\"#POLLOUT\">POLLOUT</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#tty_write_lock\">tty_write_lock</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, int <a class=\"id\" href=\"#ndelay\">ndelay</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mutex_trylock\">mutex_trylock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#atomic_write_lock\">atomic_write_lock</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ndelay\">ndelay</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mutex_lock_interruptible\">mutex_lock_interruptible</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#atomic_write_lock\">atomic_write_lock</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ERESTARTSYS\">ERESTARTSYS</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Split writes up in sane blocksizes to avoid</span>", 
"<span class=\"comment\"> * denial-of-service type attacks</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#do_tty_write\">do_tty_write</a>(", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> (*<a class=\"id\" href=\"#write\">write</a>)(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *, struct <a class=\"id\" href=\"#file\">file</a> *, const unsigned char *, <a class=\"id\" href=\"#size_t\">size_t</a>),", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>,", 
"<span class=\"ts\"/>const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#written\">written</a> = 0;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#chunk\">chunk</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#tty_write_lock\">tty_write_lock</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_flags\">f_flags</a> &amp; <a class=\"id\" href=\"#O_NDELAY\">O_NDELAY</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We chunk up writes into a temporary buffer. This</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * simplifies low-level drivers immensely, since they</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * don't have locking issues and user mode accesses.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * But if TTY_NO_WRITE_SPLIT is set, we should use a</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * big chunk-size..</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The default chunk-size is 2kB, because the NTTY</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * layer has problems with bigger chunks. It will</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * claim to be able to handle more characters than</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * it actually does.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * FIXME: This can probably go away now except that 64K chunks</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * are too likely to fail unless switched to vmalloc...</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#chunk\">chunk</a> = 2048;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#TTY_NO_WRITE_SPLIT\">TTY_NO_WRITE_SPLIT</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#chunk\">chunk</a> = 65536;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> &lt; <a class=\"id\" href=\"#chunk\">chunk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#chunk\">chunk</a> = <a class=\"id\" href=\"#count\">count</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* write_buf/write_cnt is protected by the atomic_write_lock mutex */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#write_cnt\">write_cnt</a> &lt; <a class=\"id\" href=\"#chunk\">chunk</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned char *<a class=\"id\" href=\"#buf_chunk\">buf_chunk</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#chunk\">chunk</a> &lt; 1024)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#chunk\">chunk</a> = 1024;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf_chunk\">buf_chunk</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#chunk\">chunk</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#buf_chunk\">buf_chunk</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#write_buf\">write_buf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#write_cnt\">write_cnt</a> = <a class=\"id\" href=\"#chunk\">chunk</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#write_buf\">write_buf</a> = <a class=\"id\" href=\"#buf_chunk\">buf_chunk</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Do the write .. */</span>", 
"<span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> &gt; <a class=\"id\" href=\"#chunk\">chunk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#chunk\">chunk</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#write_buf\">write_buf</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size\">size</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#write\">write</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#write_buf\">write_buf</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> <= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#written\">written</a> += <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> += <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> -= <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#count\">count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ERESTARTSYS\">ERESTARTSYS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#signal_pending\">signal_pending</a>(<a class=\"id\" href=\"#current\">current</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cond_resched\">cond_resched</a>();", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#written\">written</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mtime\">i_mtime</a> = <a class=\"id\" href=\"#current_fs_time\">current_fs_time</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#written\">written</a>;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_write_unlock\">tty_write_unlock</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tty_write_message - write a message to a certain tty, not just the console.</span>", 
"<span class=\"comment\"> * @tty: the destination tty_struct</span>", 
"<span class=\"comment\"> * @msg: the message to write</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is used for messages that need to be redirected to a specific tty.</span>", 
"<span class=\"comment\"> * We don't put it into the syslog queue right now maybe in the future if</span>", 
"<span class=\"comment\"> * really needed.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We must still hold the BTM and test the CLOSING flag for the moment.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#tty_write_message\">tty_write_message</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, char *<a class=\"id\" href=\"#msg\">msg</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#atomic_write_lock\">atomic_write_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_lock\">tty_lock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#write\">write</a> && !<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#TTY_CLOSING\">TTY_CLOSING</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_unlock\">tty_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#write\">write</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#msg\">msg</a>, <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#msg\">msg</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_unlock\">tty_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_write_unlock\">tty_write_unlock</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return;", 
"}", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_write<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>write method for tty device file</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@file: tty file pointer</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@buf: user data to write</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@count: bytes to write</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ppos: unused</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Write data to a tty device via the line discipline.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Locks the line discipline as required</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Writes to the tty driver are serialized by the atomic_write_lock</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>and are then processed in chunks to the device. The line discipline</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>write method will not be invoked in parallel for each device.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#tty_write\">tty_write</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a> = <a class=\"id\" href=\"#file_tty\">file_tty</a>(<a class=\"id\" href=\"#file\">file</a>);", 
" <span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_ldisc\">tty_ldisc</a> *<a class=\"id\" href=\"#ld\">ld</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty_paranoia_check\">tty_paranoia_check</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#inode\">inode</a>, \"tty_write\"))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tty\">tty</a> || !<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#write\">write</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#TTY_IO_ERROR\">TTY_IO_ERROR</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Short term debug to catch buggy drivers */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#write_room\">write_room</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"tty driver %s lacks a write_room method.\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ld\">ld</a> = <a class=\"id\" href=\"#tty_ldisc_ref_wait\">tty_ldisc_ref_wait</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ld\">ld</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#write\">write</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#do_tty_write\">do_tty_write</a>(<a class=\"id\" href=\"#ld\">ld</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#write\">write</a>, <a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_deref\">tty_ldisc_deref</a>(<a class=\"id\" href=\"#ld\">ld</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#redirected_tty_write\">redirected_tty_write</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#redirect_lock\">redirect_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#redirect\">redirect</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_file\">get_file</a>(<a class=\"id\" href=\"#redirect\">redirect</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#redirect\">redirect</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#redirect_lock\">redirect_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#vfs_write\">vfs_write</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>, &amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fput\">fput</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tty_write\">tty_write</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#ppos\">ppos</a>);", 
"}", 
"", 
"static char <a class=\"id\" href=\"#ptychar\">ptychar</a>[] = \"pqrstuvwxyzabcde\";", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>pty_line_name<span class=\"ts\"/>-<span class=\"ts\"/>generate name for a pty</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@driver: the tty driver in use</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@index: the minor number</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@p: output buffer of at least 6 bytes</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Generate a name from a driver reference and write it to the output</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>buffer.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: None</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#pty_line_name\">pty_line_name</a>(struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#driver\">driver</a>, int <a class=\"id\" href=\"#index\">index</a>, char *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#index\">index</a> + <a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#name_base\">name_base</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* -&gt;name is initialized to \"ttyp\", but \"tty\" is expected */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#p\">p</a>, \"%s%c%x\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#subtype\">subtype</a> == <a class=\"id\" href=\"#PTY_TYPE_SLAVE\">PTY_TYPE_SLAVE</a> ? \"tty\" : <a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ptychar\">ptychar</a>[<a class=\"id\" href=\"#i\">i</a> >> 4 &amp; 0xf], <a class=\"id\" href=\"#i\">i</a> &amp; 0xf);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_line_name<span class=\"ts\"/>-<span class=\"ts\"/>generate name for a tty</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@driver: the tty driver in use</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@index: the minor number</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@p: output buffer of at least 7 bytes</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Generate a name from a driver reference and write it to the output</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>buffer.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: None</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#tty_line_name\">tty_line_name</a>(struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#driver\">driver</a>, int <a class=\"id\" href=\"#index\">index</a>, char *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#p\">p</a>, \"%s%d\", <a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#index\">index</a> + <a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#name_base\">name_base</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_driver_lookup_tty() - find an existing tty, if any</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@driver: the driver for the tty</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@idx:<span class=\"ts\"/> the minor number</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Return the tty, if found or ERR_PTR() otherwise.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: tty_mutex must be held. If tty is found, the mutex must</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>be held until the 'fast-open' is also done. Will change once we</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>have refcounting in the driver and per driver locking</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty_driver_lookup_tty\">tty_driver_lookup_tty</a>(struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#driver\">driver</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, int <a class=\"id\" href=\"#idx\">idx</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#lookup\">lookup</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#lookup\">lookup</a>(<a class=\"id\" href=\"#driver\">driver</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#idx\">idx</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a> = <a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#ttys\">ttys</a>[<a class=\"id\" href=\"#idx\">idx</a>];", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tty\">tty</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_init_termios<span class=\"ts\"/>-  helper for termios setup</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: the tty to set up</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Initialise the termios structures for this tty. Thus runs under</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the tty_mutex currently so we can be relaxed about ordering.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#tty_init_termios\">tty_init_termios</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ktermios\">ktermios</a> *<a class=\"id\" href=\"#tp\">tp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#idx\">idx</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#index\">index</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#termios\">termios</a>[<a class=\"id\" href=\"#idx\">idx</a>];", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#ktermios\">ktermios</a>[2]), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#tp\">tp</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#init_termios\">init_termios</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sizeof(struct <a class=\"id\" href=\"#ktermios\">ktermios</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#termios\">termios</a>[<a class=\"id\" href=\"#idx\">idx</a>] = <a class=\"id\" href=\"#tp\">tp</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios\">termios</a> = <a class=\"id\" href=\"#tp\">tp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios_locked\">termios_locked</a> = <a class=\"id\" href=\"#tp\">tp</a> + 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Compatibility until drivers always set this */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios\">termios</a>-><a class=\"id\" href=\"#c_ispeed\">c_ispeed</a> = <a class=\"id\" href=\"#tty_termios_input_baud_rate\">tty_termios_input_baud_rate</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios\">termios</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios\">termios</a>-><a class=\"id\" href=\"#c_ospeed\">c_ospeed</a> = <a class=\"id\" href=\"#tty_termios_baud_rate\">tty_termios_baud_rate</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios\">termios</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#tty_init_termios\">tty_init_termios</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_driver_install_tty() - install a tty entry in the driver</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@driver: the driver for the tty</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: the tty</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Install a tty object into the driver tables. The tty-&gt;index field</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>will be set by the time this is called. This method is responsible</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>for ensuring any need additional structures are allocated and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>configured.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: tty_mutex for now</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#tty_driver_install_tty\">tty_driver_install_tty</a>(struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#driver\">driver</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#idx\">idx</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#index\">index</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#install\">install</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#install\">install</a>(<a class=\"id\" href=\"#driver\">driver</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty_init_termios\">tty_init_termios</a>(<a class=\"id\" href=\"#tty\">tty</a>) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_driver_kref_get\">tty_driver_kref_get</a>(<a class=\"id\" href=\"#driver\">driver</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#count\">count</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#ttys\">ttys</a>[<a class=\"id\" href=\"#idx\">idx</a>] = <a class=\"id\" href=\"#tty\">tty</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_driver_remove_tty() - remove a tty from the driver tables</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@driver: the driver for the tty</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@idx:<span class=\"ts\"/> the minor number</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Remvoe a tty object from the driver tables. The tty-&gt;index field</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>will be set by the time this is called.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: tty_mutex for now</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#tty_driver_remove_tty\">tty_driver_remove_tty</a>(struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#driver\">driver</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#remove\">remove</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#remove\">remove</a>(<a class=\"id\" href=\"#driver\">driver</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#ttys\">ttys</a>[<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#index\">index</a>] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>tty_reopen()<span class=\"ts\"/>- fast re-open of an open tty</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>@tty<span class=\"ts\"/>- the tty to open</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Return 0 on success, -errno on error.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: tty_mutex must be held from the time the tty was found</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/> till this open completes.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#tty_reopen\">tty_reopen</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#driver\">driver</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver\">driver</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#TTY_CLOSING\">TTY_CLOSING</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#TTY_DRIVER_TYPE_PTY\">TTY_DRIVER_TYPE_PTY</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#subtype\">subtype</a> == <a class=\"id\" href=\"#PTY_TYPE_MASTER\">PTY_TYPE_MASTER</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * special case for PTY masters: only one open permitted,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * and the slave side open count is incremented as well.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#count\">count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#count\">count</a>++;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#count\">count</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver\">driver</a> = <a class=\"id\" href=\"#driver\">driver</a>; <span class=\"comment\">/* N.B. why do this every time?? */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ldisc_mutex\">ldisc_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#TTY_LDISC\">TTY_LDISC</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ldisc_mutex\">ldisc_mutex</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_init_dev<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>initialise a tty device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@driver: tty driver we are opening a device on</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@idx: device index</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ret_tty: returned tty structure</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@first_ok: ok to open a new device (used by ptmx)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Prepare a tty device. This may not be a \"new\" clean device but</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>could also be an active device. The pty drivers require special</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>handling because of this.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>The function is called under the tty_mutex, which</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>protects us from the tty struct or driver itself going away.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>On exit the tty device has the line discipline attached and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>a reference count of 1. If a pair was created for pty/tty use</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>and the other was a pty master then it too has a reference count of 1.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * WSH 06/09/97: Rewritten to remove races and properly clean up after a</span>", 
"<span class=\"comment\"> * failed open.  The new code protects the open with a mutex, so it's</span>", 
"<span class=\"comment\"> * really quite straightforward.  The mutex locking can probably be</span>", 
"<span class=\"comment\"> * relaxed for the (most common) case of reopening a tty.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty_init_dev\">tty_init_dev</a>(struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#driver\">driver</a>, int <a class=\"id\" href=\"#idx\">idx</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#first_ok\">first_ok</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check if pty master is being opened multiple times */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#subtype\">subtype</a> == <a class=\"id\" href=\"#PTY_TYPE_MASTER\">PTY_TYPE_MASTER</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TTY_DRIVER_DEVPTS_MEM\">TTY_DRIVER_DEVPTS_MEM</a>) && !<a class=\"id\" href=\"#first_ok\">first_ok</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EIO\">EIO</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * First time open is complex, especially for PTY devices.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This code guarantees that either everything succeeds and the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * TTY is ready for operation, or else the table slots are vacated</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and the allocated memory released.  (Except that the termios</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and locked termios may be retained.)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#try_module_get\">try_module_get</a>(<a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#owner\">owner</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENODEV\">ENODEV</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a> = <a class=\"id\" href=\"#alloc_tty_struct\">alloc_tty_struct</a>();", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tty\">tty</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail_no_mem\">fail_no_mem</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#initialize_tty_struct\">initialize_tty_struct</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#driver\">driver</a>, <a class=\"id\" href=\"#idx\">idx</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#tty_driver_install_tty\">tty_driver_install_tty</a>(<a class=\"id\" href=\"#driver\">driver</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_tty_struct\">free_tty_struct</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#owner\">owner</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#retval\">retval</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Structures all installed ... call the ldisc open routines.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If we fail here just call release_tty to clean up.  No need</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to decrement the use counts, as release_tty doesn't care.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#tty_ldisc_setup\">tty_ldisc_setup</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#link\">link</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#release_mem_out\">release_mem_out</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tty\">tty</a>;", 
"", 
"<a class=\"id\" href=\"#fail_no_mem\">fail_no_mem</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#owner\">owner</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* call the tty release_tty routine to clean out this slot */</span>", 
"<a class=\"id\" href=\"#release_mem_out\">release_mem_out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#printk_ratelimit\">printk_ratelimit</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"tty_init_dev: ldisc open failed, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"clearing slot %d\\n\", <a class=\"id\" href=\"#idx\">idx</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_tty\">release_tty</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#idx\">idx</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#retval\">retval</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#tty_free_termios\">tty_free_termios</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ktermios\">ktermios</a> *<a class=\"id\" href=\"#tp\">tp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#idx\">idx</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#index\">index</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Kill this flag and push into drivers for locking etc */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TTY_DRIVER_RESET_TERMIOS\">TTY_DRIVER_RESET_TERMIOS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* FIXME: Locking on -&gt;termios array */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios\">termios</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#termios\">termios</a>[<a class=\"id\" href=\"#idx\">idx</a>] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#tp\">tp</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tty_free_termios\">tty_free_termios</a>);", 
"", 
"void <a class=\"id\" href=\"#tty_shutdown\">tty_shutdown</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_driver_remove_tty\">tty_driver_remove_tty</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver\">driver</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_free_termios\">tty_free_termios</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tty_shutdown\">tty_shutdown</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>release_one_tty<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>release tty structure memory</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@kref: kref of tty we are obliterating</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Releases memory associated with a tty structure, and clears out the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>driver table slots. This function is called when a device is no longer</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>in use. It also gets called when setup of a device fails.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>tty_mutex - sometimes only</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>takes the file list lock internally when working on the list</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>of ttys that the driver keeps.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This method gets called from a work queue so that the driver private</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>cleanup ops can sleep (needed for USB at least)</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#release_one_tty\">release_one_tty</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#work\">work</a>, struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a>, <a class=\"id\" href=\"#hangup_work\">hangup_work</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#driver\">driver</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver\">driver</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#cleanup\">cleanup</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#cleanup\">cleanup</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#magic\">magic</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_driver_kref_put\">tty_driver_kref_put</a>(<a class=\"id\" href=\"#driver\">driver</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#owner\">owner</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#tty_files_lock\">tty_files_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del_init\">list_del_init</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#tty_files\">tty_files</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#tty_files_lock\">tty_files_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_pid\">put_pid</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#pgrp\">pgrp</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_pid\">put_pid</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#session\">session</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_tty_struct\">free_tty_struct</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#queue_release_one_tty\">queue_release_one_tty</a>(struct <a class=\"id\" href=\"#kref\">kref</a> *<a class=\"id\" href=\"#kref\">kref</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#kref\">kref</a>, struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a>, <a class=\"id\" href=\"#kref\">kref</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#shutdown\">shutdown</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#shutdown\">shutdown</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_shutdown\">tty_shutdown</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* The hangup queue is now free so we can reuse it rather than</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   waste a chunk of memory for each port */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_WORK\">INIT_WORK</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#hangup_work\">hangup_work</a>, <a class=\"id\" href=\"#release_one_tty\">release_one_tty</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#schedule_work\">schedule_work</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#hangup_work\">hangup_work</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_kref_put<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>release a tty kref</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Release a reference to a tty device and if need be let the kref</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>layer destruct the object for us</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#tty_kref_put\">tty_kref_put</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kref_put\">kref_put</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#kref\">kref</a>, <a class=\"id\" href=\"#queue_release_one_tty\">queue_release_one_tty</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tty_kref_put\">tty_kref_put</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>release_tty<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>release tty structure memory</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Release both @tty and a possible linked partner (think pty pair),</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>and decrement the refcount of the backing module.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>tty_mutex - sometimes only</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>takes the file list lock internally when working on the list</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>of ttys that the driver keeps.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>FIXME: should we require tty_mutex is held here ??</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#release_tty\">release_tty</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, int <a class=\"id\" href=\"#idx\">idx</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* This should always be true but check for the moment */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#index\">index</a> != <a class=\"id\" href=\"#idx\">idx</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#link\">link</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_kref_put\">tty_kref_put</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#link\">link</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_kref_put\">tty_kref_put</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_release<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>vfs callback for close</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@inode: inode of tty</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@filp: file pointer for handle to tty</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Called the last time each file handle is closed that references</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>this tty. There may however be several such references.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Takes bkl. See tty_release_dev</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Even releasing the tty structures is a tricky business.. We have</span>", 
"<span class=\"comment\"> * to be very careful that the structures are all released at the</span>", 
"<span class=\"comment\"> * same time, as interrupts might otherwise get the wrong pointers.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * WSH 09/09/97: rewritten to avoid some nasty race conditions that could</span>", 
"<span class=\"comment\"> * lead to double frees or releasing memory still in use.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#tty_release\">tty_release</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a> = <a class=\"id\" href=\"#file_tty\">file_tty</a>(<a class=\"id\" href=\"#filp\">filp</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#o_tty\">o_tty</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#pty_master\">pty_master</a>, <a class=\"id\" href=\"#tty_closing\">tty_closing</a>, <a class=\"id\" href=\"#o_tty_closing\">o_tty_closing</a>, <a class=\"id\" href=\"#do_sleep\">do_sleep</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#devpts\">devpts</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#idx\">idx</a>;", 
"<span class=\"ts\"/>char<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>[64];", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty_paranoia_check\">tty_paranoia_check</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#inode\">inode</a>, \"tty_release_dev\"))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_lock\">tty_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#check_tty_count\">check_tty_count</a>(<a class=\"id\" href=\"#tty\">tty</a>, \"tty_release_dev\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__tty_fasync\">__tty_fasync</a>(-1, <a class=\"id\" href=\"#filp\">filp</a>, 0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idx\">idx</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#index\">index</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pty_master\">pty_master</a> = (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#TTY_DRIVER_TYPE_PTY\">TTY_DRIVER_TYPE_PTY</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#subtype\">subtype</a> == <a class=\"id\" href=\"#PTY_TYPE_MASTER\">PTY_TYPE_MASTER</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#devpts\">devpts</a> = (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TTY_DRIVER_DEVPTS_MEM\">TTY_DRIVER_DEVPTS_MEM</a>) != 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#o_tty\">o_tty</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#link\">link</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#TTY_PARANOIA_CHECK\">TTY_PARANOIA_CHECK</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idx\">idx</a> &lt; 0 || <a class=\"id\" href=\"#idx\">idx</a> >= <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#num\">num</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"tty_release_dev: bad idx when trying to \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"free (%s)\\n\", <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_unlock\">tty_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#devpts\">devpts</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a> != <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#ttys\">ttys</a>[<a class=\"id\" href=\"#idx\">idx</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_unlock\">tty_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"tty_release_dev: driver.table[%d] not tty \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"for (%s)\\n\", <a class=\"id\" href=\"#idx\">idx</a>, <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios\">termios</a> != <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#termios\">termios</a>[<a class=\"id\" href=\"#idx\">idx</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_unlock\">tty_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"tty_release_dev: driver.termios[%d] not termios \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"for (%s)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#idx\">idx</a>, <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#TTY_DEBUG_HANGUP\">TTY_DEBUG_HANGUP</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"tty_release_dev of %s (tty count=%d)...\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#tty_name\">tty_name</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#buf\">buf</a>), <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#count\">count</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#TTY_PARANOIA_CHECK\">TTY_PARANOIA_CHECK</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#other\">other</a> &&", 
"<span class=\"ts\"/>     !(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TTY_DRIVER_DEVPTS_MEM\">TTY_DRIVER_DEVPTS_MEM</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#o_tty\">o_tty</a> != <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#other\">other</a>-><a class=\"id\" href=\"#ttys\">ttys</a>[<a class=\"id\" href=\"#idx\">idx</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_unlock\">tty_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"tty_release_dev: other->table[%d] \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"not o_tty for (%s)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#idx\">idx</a>, <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0 ;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#o_tty\">o_tty</a>-><a class=\"id\" href=\"#termios\">termios</a> != <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#other\">other</a>-><a class=\"id\" href=\"#termios\">termios</a>[<a class=\"id\" href=\"#idx\">idx</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_unlock\">tty_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"tty_release_dev: other->termios[%d] \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"not o_termios for (%s)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#idx\">idx</a>, <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#o_tty\">o_tty</a>-><a class=\"id\" href=\"#link\">link</a> != <a class=\"id\" href=\"#tty\">tty</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_unlock\">tty_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"tty_release_dev: bad pty pointers\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#close\">close</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#close\">close</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#filp\">filp</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_unlock\">tty_unlock</a>();", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Sanity check: if tty-&gt;count is going to zero, there shouldn't be</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * any waiters on tty-&gt;read_wait or tty-&gt;write_wait.  We test the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * wait queues and kick everyone out _before_ actually starting to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * close.  This ensures that we won't block while releasing the tty</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * structure.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The test for the o_tty closing is necessary, since the master and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * slave sides may close in any order.  If the slave side closes out</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * first, its count will be one, since the master side holds an open.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Thus this test wouldn't be triggered at the time the slave closes,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so we do it now.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Note that it's possible for the tty to be opened again while we're</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * flushing out waiters.  By recalculating the closing flags before</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * each iteration we avoid any problems.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>while (1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Guard against races with tty-&gt;count changes elsewhere and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   opens on /dev/tty */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#tty_mutex\">tty_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_lock\">tty_lock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_closing\">tty_closing</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#count\">count</a> <= 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#o_tty_closing\">o_tty_closing</a> = <a class=\"id\" href=\"#o_tty\">o_tty</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#o_tty\">o_tty</a>-><a class=\"id\" href=\"#count\">count</a> <= (<a class=\"id\" href=\"#pty_master\">pty_master</a> ? 1 : 0));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_sleep\">do_sleep</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tty_closing\">tty_closing</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#waitqueue_active\">waitqueue_active</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_wait\">read_wait</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_poll\">wake_up_poll</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_wait\">read_wait</a>, <a class=\"id\" href=\"#POLLIN\">POLLIN</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_sleep\">do_sleep</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#waitqueue_active\">waitqueue_active</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#write_wait\">write_wait</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_poll\">wake_up_poll</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#write_wait\">write_wait</a>, <a class=\"id\" href=\"#POLLOUT\">POLLOUT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_sleep\">do_sleep</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#o_tty_closing\">o_tty_closing</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#waitqueue_active\">waitqueue_active</a>(&amp;<a class=\"id\" href=\"#o_tty\">o_tty</a>-><a class=\"id\" href=\"#read_wait\">read_wait</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_poll\">wake_up_poll</a>(&amp;<a class=\"id\" href=\"#o_tty\">o_tty</a>-><a class=\"id\" href=\"#read_wait\">read_wait</a>, <a class=\"id\" href=\"#POLLIN\">POLLIN</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_sleep\">do_sleep</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#waitqueue_active\">waitqueue_active</a>(&amp;<a class=\"id\" href=\"#o_tty\">o_tty</a>-><a class=\"id\" href=\"#write_wait\">write_wait</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_poll\">wake_up_poll</a>(&amp;<a class=\"id\" href=\"#o_tty\">o_tty</a>-><a class=\"id\" href=\"#write_wait\">write_wait</a>, <a class=\"id\" href=\"#POLLOUT\">POLLOUT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_sleep\">do_sleep</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#do_sleep\">do_sleep</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"tty_release_dev: %s: read/write wait queue \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"active!\\n\", <a class=\"id\" href=\"#tty_name\">tty_name</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#buf\">buf</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_unlock\">tty_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tty_mutex\">tty_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule\">schedule</a>();", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The closing flags are now consistent with the open counts on</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * both sides, and we've completed the last operation that could</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * block, so it's safe to proceed with closing.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pty_master\">pty_master</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (--<a class=\"id\" href=\"#o_tty\">o_tty</a>-><a class=\"id\" href=\"#count\">count</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"tty_release_dev: bad pty slave count \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"(%d) for %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#o_tty\">o_tty</a>-><a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#tty_name\">tty_name</a>(<a class=\"id\" href=\"#o_tty\">o_tty</a>, <a class=\"id\" href=\"#buf\">buf</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#o_tty\">o_tty</a>-><a class=\"id\" href=\"#count\">count</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (--<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#count\">count</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"tty_release_dev: bad tty->count (%d) for %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#tty_name\">tty_name</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#buf\">buf</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#count\">count</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We've decremented tty-&gt;count, so we need to remove this file</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * descriptor off the tty-&gt;tty_files list; this serves two</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * purposes:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  - check_tty_count sees the correct number of file descriptors</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *    associated with this tty.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  - do_tty_hangup no longer sees this file descriptor as</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *    something that needs to be handled for hangups.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_del_file\">tty_del_file</a>(<a class=\"id\" href=\"#filp\">filp</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Perform some housekeeping before deciding whether to return.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Set the TTY_CLOSING flag if this was the last open.  In the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * case of a pty we may have to wait around for the other side</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to close, and TTY_CLOSING makes sure we can't be reopened.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty_closing\">tty_closing</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#TTY_CLOSING\">TTY_CLOSING</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#o_tty_closing\">o_tty_closing</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#TTY_CLOSING\">TTY_CLOSING</a>, &amp;<a class=\"id\" href=\"#o_tty\">o_tty</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If _either_ side is closing, make sure there aren't any</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * processes that still think tty or o_tty is their controlling</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * tty.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty_closing\">tty_closing</a> || <a class=\"id\" href=\"#o_tty_closing\">o_tty_closing</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#session_clear_tty\">session_clear_tty</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#session\">session</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#o_tty\">o_tty</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#session_clear_tty\">session_clear_tty</a>(<a class=\"id\" href=\"#o_tty\">o_tty</a>-><a class=\"id\" href=\"#session\">session</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tty_mutex\">tty_mutex</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* check whether both sides are closing ... */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tty_closing\">tty_closing</a> || (<a class=\"id\" href=\"#o_tty\">o_tty</a> && !<a class=\"id\" href=\"#o_tty_closing\">o_tty_closing</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_unlock\">tty_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#TTY_DEBUG_HANGUP\">TTY_DEBUG_HANGUP</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"freeing tty structure...\");", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Ask the line discipline code to release its structures</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_release\">tty_ldisc_release</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#o_tty\">o_tty</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The release_tty function takes care of the details of clearing</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the slots and preserving the termios structure.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_tty\">release_tty</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#idx\">idx</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Make this pty number available for reallocation */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#devpts\">devpts</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#devpts_kill_index\">devpts_kill_index</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#idx\">idx</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_unlock\">tty_unlock</a>();", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_open<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>open a tty device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@inode: inode of device file</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@filp: file pointer to tty</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_open and tty_release keep up the tty count that contains the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>number of opens done on a tty. We cannot use the inode-count, as</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>different inodes might point to the same tty.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Open-counting is needed for pty masters, as well as for keeping</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>track of serial lines: DTR is dropped when the last close happens.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>(This is not done solely through tty-&gt;count, now.  - Ted 1/27/92)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>The termios state of a pty is reset on first open so that</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>settings don't persist across reuse.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: tty_mutex protects tty, get_tty_driver and tty_init_dev work.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/> tty-&gt;count should protect the rest.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/> -&gt;siglock protects -&gt;signal/-&gt;sighand</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#tty_open\">tty_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#noctty\">noctty</a>, <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#driver\">driver</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#index\">index</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#device\">device</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_rdev\">i_rdev</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#saved_flags\">saved_flags</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_flags\">f_flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nonseekable_open\">nonseekable_open</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#filp\">filp</a>);", 
"", 
"<a class=\"id\" href=\"#retry_open\">retry_open</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#noctty\">noctty</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_flags\">f_flags</a> &amp; <a class=\"id\" href=\"#O_NOCTTY\">O_NOCTTY</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a>  = -1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#tty_mutex\">tty_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_lock\">tty_lock</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#device\">device</a> == <a class=\"id\" href=\"#MKDEV\">MKDEV</a>(<a class=\"id\" href=\"#TTYAUX_MAJOR\">TTYAUX_MAJOR</a>, 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a> = <a class=\"id\" href=\"#get_current_tty\">get_current_tty</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tty\">tty</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_unlock\">tty_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tty_mutex\">tty_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#driver\">driver</a> = <a class=\"id\" href=\"#tty_driver_kref_get\">tty_driver_kref_get</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver\">driver</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#index\">index</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_flags\">f_flags</a> |= <a class=\"id\" href=\"#O_NONBLOCK\">O_NONBLOCK</a>; <span class=\"comment\">/* Don't let /dev/tty block */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* noctty = 1; */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* FIXME: Should we take a driver reference ? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_kref_put\">tty_kref_put</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#got_driver\">got_driver</a>;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_VT\">CONFIG_VT</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#device\">device</a> == <a class=\"id\" href=\"#MKDEV\">MKDEV</a>(<a class=\"id\" href=\"#TTY_MAJOR\">TTY_MAJOR</a>, 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>extern struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#console_driver\">console_driver</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#driver\">driver</a> = <a class=\"id\" href=\"#tty_driver_kref_get\">tty_driver_kref_get</a>(<a class=\"id\" href=\"#console_driver\">console_driver</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#fg_console\">fg_console</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#noctty\">noctty</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#got_driver\">got_driver</a>;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#device\">device</a> == <a class=\"id\" href=\"#MKDEV\">MKDEV</a>(<a class=\"id\" href=\"#TTYAUX_MAJOR\">TTYAUX_MAJOR</a>, 1)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#console_driver\">console_driver</a> = <a class=\"id\" href=\"#console_device\">console_device</a>(&amp;<a class=\"id\" href=\"#index\">index</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#console_driver\">console_driver</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#driver\">driver</a> = <a class=\"id\" href=\"#tty_driver_kref_get\">tty_driver_kref_get</a>(<a class=\"id\" href=\"#console_driver\">console_driver</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#driver\">driver</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Don't let /dev/console block */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_flags\">f_flags</a> |= <a class=\"id\" href=\"#O_NONBLOCK\">O_NONBLOCK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#noctty\">noctty</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#got_driver\">got_driver</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_unlock\">tty_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tty_mutex\">tty_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#driver\">driver</a> = <a class=\"id\" href=\"#get_tty_driver\">get_tty_driver</a>(<a class=\"id\" href=\"#device\">device</a>, &amp;<a class=\"id\" href=\"#index\">index</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#driver\">driver</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_unlock\">tty_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tty_mutex\">tty_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#got_driver\">got_driver</a>:", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tty\">tty</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* check whether we're reopening an existing tty */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a> = <a class=\"id\" href=\"#tty_driver_lookup_tty\">tty_driver_lookup_tty</a>(<a class=\"id\" href=\"#driver\">driver</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#index\">index</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_unlock\">tty_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tty_mutex\">tty_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#tty_reopen\">tty_reopen</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#retval\">retval</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a> = <a class=\"id\" href=\"#tty_init_dev\">tty_init_dev</a>(<a class=\"id\" href=\"#driver\">driver</a>, <a class=\"id\" href=\"#index\">index</a>, 0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tty_mutex\">tty_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_driver_kref_put\">tty_driver_kref_put</a>(<a class=\"id\" href=\"#driver\">driver</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#tty\">tty</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_unlock\">tty_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_add_file\">tty_add_file</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#filp\">filp</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#check_tty_count\">check_tty_count</a>(<a class=\"id\" href=\"#tty\">tty</a>, \"tty_open\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#TTY_DRIVER_TYPE_PTY\">TTY_DRIVER_TYPE_PTY</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#subtype\">subtype</a> == <a class=\"id\" href=\"#PTY_TYPE_MASTER\">PTY_TYPE_MASTER</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#noctty\">noctty</a> = 1;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#TTY_DEBUG_HANGUP\">TTY_DEBUG_HANGUP</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"opening %s...\", <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#retval\">retval</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#open\">open</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#open\">open</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#filp\">filp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_flags\">f_flags</a> = <a class=\"id\" href=\"#saved_flags\">saved_flags</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#retval\">retval</a> && <a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#TTY_EXCLUSIVE\">TTY_EXCLUSIVE</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_ADMIN\">CAP_SYS_ADMIN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>) {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#TTY_DEBUG_HANGUP\">TTY_DEBUG_HANGUP</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"error %d in opening %s...\", <a class=\"id\" href=\"#retval\">retval</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_unlock\">tty_unlock</a>(); <span class=\"comment\">/* need to call tty_release without BTM */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_release\">tty_release</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#filp\">filp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> != -<a class=\"id\" href=\"#ERESTARTSYS\">ERESTARTSYS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#signal_pending\">signal_pending</a>(<a class=\"id\" href=\"#current\">current</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule\">schedule</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Need to reset f_op in case a hangup happened.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_lock\">tty_lock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_op\">f_op</a> == &amp;<a class=\"id\" href=\"#hung_up_tty_fops\">hung_up_tty_fops</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_op\">f_op</a> = &amp;<a class=\"id\" href=\"#tty_fops\">tty_fops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_unlock\">tty_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#retry_open\">retry_open</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_unlock\">tty_unlock</a>();", 
"", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#tty_mutex\">tty_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_lock\">tty_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#noctty\">noctty</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#leader\">leader</a> &&", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#tty\">tty</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#session\">session</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__proc_set_tty\">__proc_set_tty</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_unlock\">tty_unlock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tty_mutex\">tty_mutex</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_poll<span class=\"ts\"/>-<span class=\"ts\"/>check tty status</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@filp: file being polled</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@wait: poll wait structures to update</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Call the line discipline polling method to obtain the poll</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>status of the device.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: locks called line discipline but ldisc poll method</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>may be re-entered freely by other callers.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static unsigned int <a class=\"id\" href=\"#tty_poll\">tty_poll</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#poll_table\">poll_table</a> *<a class=\"id\" href=\"#wait\">wait</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a> = <a class=\"id\" href=\"#file_tty\">file_tty</a>(<a class=\"id\" href=\"#filp\">filp</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_ldisc\">tty_ldisc</a> *<a class=\"id\" href=\"#ld\">ld</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty_paranoia_check\">tty_paranoia_check</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>, \"tty_poll\"))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ld\">ld</a> = <a class=\"id\" href=\"#tty_ldisc_ref_wait\">tty_ldisc_ref_wait</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ld\">ld</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#poll\">poll</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = (<a class=\"id\" href=\"#ld\">ld</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#poll\">poll</a>)(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_deref\">tty_ldisc_deref</a>(<a class=\"id\" href=\"#ld\">ld</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__tty_fasync\">__tty_fasync</a>(int <a class=\"id\" href=\"#fd\">fd</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, int <a class=\"id\" href=\"#on\">on</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a> = <a class=\"id\" href=\"#file_tty\">file_tty</a>(<a class=\"id\" href=\"#filp\">filp</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty_paranoia_check\">tty_paranoia_check</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>, \"tty_fasync\"))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#fasync_helper\">fasync_helper</a>(<a class=\"id\" href=\"#fd\">fd</a>, <a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#on\">on</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#fasync\">fasync</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> <= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#on\">on</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>enum <a class=\"id\" href=\"#pid_type\">pid_type</a> <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#pid\">pid</a> *<a class=\"id\" href=\"#pid\">pid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#waitqueue_active\">waitqueue_active</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_wait\">read_wait</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#minimum_to_wake\">minimum_to_wake</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ctrl_lock\">ctrl_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#pgrp\">pgrp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pid\">pid</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#pgrp\">pgrp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#PIDTYPE_PGID\">PIDTYPE_PGID</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pid\">pid</a> = <a class=\"id\" href=\"#task_pid\">task_pid</a>(<a class=\"id\" href=\"#current\">current</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#PIDTYPE_PID\">PIDTYPE_PID</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_pid\">get_pid</a>(<a class=\"id\" href=\"#pid\">pid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ctrl_lock\">ctrl_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#__f_setown\">__f_setown</a>(<a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#type\">type</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_pid\">put_pid</a>(<a class=\"id\" href=\"#pid\">pid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#fasync\">fasync</a> && !<a class=\"id\" href=\"#waitqueue_active\">waitqueue_active</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_wait\">read_wait</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#minimum_to_wake\">minimum_to_wake</a> = <a class=\"id\" href=\"#N_TTY_BUF_SIZE\">N_TTY_BUF_SIZE</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#tty_fasync\">tty_fasync</a>(int <a class=\"id\" href=\"#fd\">fd</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, int <a class=\"id\" href=\"#on\">on</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_lock\">tty_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#__tty_fasync\">__tty_fasync</a>(<a class=\"id\" href=\"#fd\">fd</a>, <a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#on\">on</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_unlock\">tty_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tiocsti<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>fake input character</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty to fake input into</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@p: pointer to character</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Fake input to a tty device. Does the necessary locking and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>input management.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>FIXME: does not honour flow control ??</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Called functions take tty_ldisc_lock</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>current-&gt;signal-&gt;tty check is safe without locks</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>FIXME: may race normal receive processing</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#tiocsti\">tiocsti</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#ch\">ch</a>, <a class=\"id\" href=\"#mbz\">mbz</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_ldisc\">tty_ldisc</a> *<a class=\"id\" href=\"#ld\">ld</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#tty\">tty</a> != <a class=\"id\" href=\"#tty\">tty</a>) && !<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_ADMIN\">CAP_SYS_ADMIN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#ch\">ch</a>, <a class=\"id\" href=\"#p\">p</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_audit_tiocsti\">tty_audit_tiocsti</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#ch\">ch</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ld\">ld</a> = <a class=\"id\" href=\"#tty_ldisc_ref_wait\">tty_ldisc_ref_wait</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ld\">ld</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#receive_buf\">receive_buf</a>(<a class=\"id\" href=\"#tty\">tty</a>, &amp;<a class=\"id\" href=\"#ch\">ch</a>, &amp;<a class=\"id\" href=\"#mbz\">mbz</a>, 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_deref\">tty_ldisc_deref</a>(<a class=\"id\" href=\"#ld\">ld</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tiocgwinsz<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>implement window query ioctl</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty; tty</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@arg: user buffer for result</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Copies the kernel idea of the window size into the user buffer.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: tty-&gt;termios_mutex is taken to ensure the winsize data</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>is consistent.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#tiocgwinsz\">tiocgwinsz</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, struct <a class=\"id\" href=\"#winsize\">winsize</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios_mutex\">termios_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#arg\">arg</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#winsize\">winsize</a>, sizeof(*<a class=\"id\" href=\"#arg\">arg</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios_mutex\">termios_mutex</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a> ? -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>: 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_do_resize<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>resize event</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty being resized</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@rows: rows (character)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@cols: cols (character)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Update the termios variables and send the necessary signals to</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>peform a terminal resize correctly</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#tty_do_resize\">tty_do_resize</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, struct <a class=\"id\" href=\"#winsize\">winsize</a> *<a class=\"id\" href=\"#ws\">ws</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pid\">pid</a> *<a class=\"id\" href=\"#pgrp\">pgrp</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Lock the tty */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios_mutex\">termios_mutex</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#ws\">ws</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#winsize\">winsize</a>, sizeof(*<a class=\"id\" href=\"#ws\">ws</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Get the PID values and reference them so we can</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   avoid holding the tty ctrl lock while sending signals */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ctrl_lock\">ctrl_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgrp\">pgrp</a> = <a class=\"id\" href=\"#get_pid\">get_pid</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#pgrp\">pgrp</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ctrl_lock\">ctrl_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pgrp\">pgrp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kill_pgrp\">kill_pgrp</a>(<a class=\"id\" href=\"#pgrp\">pgrp</a>, <a class=\"id\" href=\"#SIGWINCH\">SIGWINCH</a>, 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_pid\">put_pid</a>(<a class=\"id\" href=\"#pgrp\">pgrp</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#winsize\">winsize</a> = *<a class=\"id\" href=\"#ws\">ws</a>;", 
"<a class=\"id\" href=\"#done\">done</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios_mutex\">termios_mutex</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tiocswinsz<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>implement window size set ioctl</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty; tty side of tty</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@arg: user buffer for result</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Copies the user idea of the window size to the kernel. Traditionally</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>this is just advisory information but for the Linux console it</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>actually has driver level meaning and triggers a VC resize.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Driver dependant. The default do_resize method takes the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty termios mutex and ctrl_lock. The console takes its own lock</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>then calls into the default method.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#tiocswinsz\">tiocswinsz</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, struct <a class=\"id\" href=\"#winsize\">winsize</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#winsize\">winsize</a> <a class=\"id\" href=\"#tmp_ws\">tmp_ws</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#tmp_ws\">tmp_ws</a>, <a class=\"id\" href=\"#arg\">arg</a>, sizeof(*<a class=\"id\" href=\"#arg\">arg</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#resize\">resize</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#resize\">resize</a>(<a class=\"id\" href=\"#tty\">tty</a>, &amp;<a class=\"id\" href=\"#tmp_ws\">tmp_ws</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#tty_do_resize\">tty_do_resize</a>(<a class=\"id\" href=\"#tty\">tty</a>, &amp;<a class=\"id\" href=\"#tmp_ws\">tmp_ws</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tioccons<span class=\"ts\"/>-<span class=\"ts\"/>allow admin to move logical console</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@file: the file to become console</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Allow the adminstrator to move the redirected console device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: uses redirect_lock to guard the redirect information</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#tioccons\">tioccons</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_ADMIN\">CAP_SYS_ADMIN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#write\">write</a> == <a class=\"id\" href=\"#redirected_tty_write\">redirected_tty_write</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#f\">f</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#redirect_lock\">redirect_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#f\">f</a> = <a class=\"id\" href=\"#redirect\">redirect</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#redirect\">redirect</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#redirect_lock\">redirect_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#f\">f</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fput\">fput</a>(<a class=\"id\" href=\"#f\">f</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#redirect_lock\">redirect_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#redirect\">redirect</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#redirect_lock\">redirect_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_file\">get_file</a>(<a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#redirect\">redirect</a> = <a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#redirect_lock\">redirect_lock</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>fionbio<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>non blocking ioctl</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@file: file to set blocking value</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@p: user parameter</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Historical tty interfaces had a blocking control ioctl before</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the generic functionality existed. This piece of history is preserved</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>in the expected tty API of posix OS's.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: none, the open file handle ensures it won't go away.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#fionbio\">fionbio</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, int <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nonblock\">nonblock</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#nonblock\">nonblock</a>, <a class=\"id\" href=\"#p\">p</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_lock\">f_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nonblock\">nonblock</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_flags\">f_flags</a> |= <a class=\"id\" href=\"#O_NONBLOCK\">O_NONBLOCK</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_flags\">f_flags</a> &= ~<a class=\"id\" href=\"#O_NONBLOCK\">O_NONBLOCK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_lock\">f_lock</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tiocsctty<span class=\"ts\"/>-<span class=\"ts\"/>set controlling tty</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty structure</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@arg: user argument</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This ioctl is used to manage job control. It permits a session</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>leader to set this tty as the controlling tty for the session.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Takes tty_mutex() to protect tty instance</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Takes tasklist_lock internally to walk sessions</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Takes -&gt;siglock() when updating signal-&gt;tty</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#tiocsctty\">tiocsctty</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, int <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#leader\">leader</a> && (<a class=\"id\" href=\"#task_session\">task_session</a>(<a class=\"id\" href=\"#current\">current</a>) == <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#session\">session</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#tty_mutex\">tty_mutex</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The process must be a session leader and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * not have a controlling tty already.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#leader\">leader</a> || <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#tty\">tty</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#unlock\">unlock</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#session\">session</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * This tty is already the controlling</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * tty for another session group!</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#arg\">arg</a> == 1 && <a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_ADMIN\">CAP_SYS_ADMIN</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Steal it away</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#session_clear_tty\">session_clear_tty</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#session\">session</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#unlock\">unlock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proc_set_tty\">proc_set_tty</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"<a class=\"id\" href=\"#unlock\">unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tty_mutex\">tty_mutex</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_get_pgrp<span class=\"ts\"/>-<span class=\"ts\"/>return a ref counted pgrp pid</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty to read</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Returns a refcounted instance of the pid struct for the process</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>group controlling the tty.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#pid\">pid</a> *<a class=\"id\" href=\"#tty_get_pgrp\">tty_get_pgrp</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pid\">pid</a> *<a class=\"id\" href=\"#pgrp\">pgrp</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ctrl_lock\">ctrl_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgrp\">pgrp</a> = <a class=\"id\" href=\"#get_pid\">get_pid</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#pgrp\">pgrp</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ctrl_lock\">ctrl_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pgrp\">pgrp</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#tty_get_pgrp\">tty_get_pgrp</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tiocgpgrp<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>get process group</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty passed by user</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@real_tty: tty side of the tty pased by the user if a pty else the tty</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@p: returned pid</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Obtain the process group of the tty. If there is no process group</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>return an error.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: none. Reference to current-&gt;signal-&gt;tty is safe.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#tiocgpgrp\">tiocgpgrp</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#real_tty\">real_tty</a>, <a class=\"id\" href=\"#pid_t\">pid_t</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pid\">pid</a> *<a class=\"id\" href=\"#pid\">pid</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * (tty == real_tty) is a cheap way of</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * testing if the tty is NOT a master pty.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a> == <a class=\"id\" href=\"#real_tty\">real_tty</a> && <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#tty\">tty</a> != <a class=\"id\" href=\"#real_tty\">real_tty</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOTTY\">ENOTTY</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pid\">pid</a> = <a class=\"id\" href=\"#tty_get_pgrp\">tty_get_pgrp</a>(<a class=\"id\" href=\"#real_tty\">real_tty</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> =  <a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#pid_vnr\">pid_vnr</a>(<a class=\"id\" href=\"#pid\">pid</a>), <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_pid\">put_pid</a>(<a class=\"id\" href=\"#pid\">pid</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tiocspgrp<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>attempt to set process group</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty passed by user</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@real_tty: tty side device matching tty passed by user</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@p: pid pointer</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Set the process group of the tty to the session passed. Only</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>permitted where the tty session is our session.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: RCU, ctrl lock</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#tiocspgrp\">tiocspgrp</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#real_tty\">real_tty</a>, <a class=\"id\" href=\"#pid_t\">pid_t</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pid\">pid</a> *<a class=\"id\" href=\"#pgrp\">pgrp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pid_t\">pid_t</a> <a class=\"id\" href=\"#pgrp_nr\">pgrp_nr</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#tty_check_change\">tty_check_change</a>(<a class=\"id\" href=\"#real_tty\">real_tty</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> == -<a class=\"id\" href=\"#EIO\">EIO</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOTTY\">ENOTTY</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#tty\">tty</a> ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#tty\">tty</a> != <a class=\"id\" href=\"#real_tty\">real_tty</a>) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#real_tty\">real_tty</a>-><a class=\"id\" href=\"#session\">session</a> != <a class=\"id\" href=\"#task_session\">task_session</a>(<a class=\"id\" href=\"#current\">current</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOTTY\">ENOTTY</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#pgrp_nr\">pgrp_nr</a>, <a class=\"id\" href=\"#p\">p</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pgrp_nr\">pgrp_nr</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgrp\">pgrp</a> = <a class=\"id\" href=\"#find_vpid\">find_vpid</a>(<a class=\"id\" href=\"#pgrp_nr\">pgrp_nr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pgrp\">pgrp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#session_of_pgrp\">session_of_pgrp</a>(<a class=\"id\" href=\"#pgrp\">pgrp</a>) != <a class=\"id\" href=\"#task_session\">task_session</a>(<a class=\"id\" href=\"#current\">current</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ctrl_lock\">ctrl_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_pid\">put_pid</a>(<a class=\"id\" href=\"#real_tty\">real_tty</a>-><a class=\"id\" href=\"#pgrp\">pgrp</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#real_tty\">real_tty</a>-><a class=\"id\" href=\"#pgrp\">pgrp</a> = <a class=\"id\" href=\"#get_pid\">get_pid</a>(<a class=\"id\" href=\"#pgrp\">pgrp</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ctrl_lock\">ctrl_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<a class=\"id\" href=\"#out_unlock\">out_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tiocgsid<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>get session id</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty passed by user</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@real_tty: tty side of the tty pased by the user if a pty else the tty</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@p: pointer to returned session id</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Obtain the session id of the tty. If there is no session</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>return an error.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: none. Reference to current-&gt;signal-&gt;tty is safe.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#tiocgsid\">tiocgsid</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#real_tty\">real_tty</a>, <a class=\"id\" href=\"#pid_t\">pid_t</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * (tty == real_tty) is a cheap way of</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * testing if the tty is NOT a master pty.</span>", 
"<span class=\"comment\"><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a> == <a class=\"id\" href=\"#real_tty\">real_tty</a> && <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#tty\">tty</a> != <a class=\"id\" href=\"#real_tty\">real_tty</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOTTY\">ENOTTY</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#real_tty\">real_tty</a>-><a class=\"id\" href=\"#session\">session</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOTTY\">ENOTTY</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#pid_vnr\">pid_vnr</a>(<a class=\"id\" href=\"#real_tty\">real_tty</a>-><a class=\"id\" href=\"#session\">session</a>), <a class=\"id\" href=\"#p\">p</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tiocsetd<span class=\"ts\"/>-<span class=\"ts\"/>set line discipline</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@p: pointer to user data</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Set the line discipline according to user request.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: see tty_set_ldisc, this function is just a helper</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#tiocsetd\">tiocsetd</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, int <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ldisc\">ldisc</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#ldisc\">ldisc</a>, <a class=\"id\" href=\"#p\">p</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#tty_set_ldisc\">tty_set_ldisc</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#ldisc\">ldisc</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>send_break<span class=\"ts\"/>-<span class=\"ts\"/>performed time break</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: device to break on</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@duration: timeout in mS</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Perform a timed break on hardware that lacks its own driver level</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>timed break functionality.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>atomic_write_lock serializes</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#send_break\">send_break</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, unsigned int <a class=\"id\" href=\"#duration\">duration</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#break_ctl\">break_ctl</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TTY_DRIVER_HARDWARE_BREAK\">TTY_DRIVER_HARDWARE_BREAK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#break_ctl\">break_ctl</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#duration\">duration</a>);", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Do the work ourselves */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tty_write_lock\">tty_write_lock</a>(<a class=\"id\" href=\"#tty\">tty</a>, 0) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINTR\">EINTR</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#break_ctl\">break_ctl</a>(<a class=\"id\" href=\"#tty\">tty</a>, -1);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#signal_pending\">signal_pending</a>(<a class=\"id\" href=\"#current\">current</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msleep_interruptible\">msleep_interruptible</a>(<a class=\"id\" href=\"#duration\">duration</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#break_ctl\">break_ctl</a>(<a class=\"id\" href=\"#tty\">tty</a>, 0);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_write_unlock\">tty_write_unlock</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#signal_pending\">signal_pending</a>(<a class=\"id\" href=\"#current\">current</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EINTR\">EINTR</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_tiocmget<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>get modem status</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@file: user file pointer</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@p: pointer to result</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Obtain the modem status bits from the tty driver if the feature</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>is supported. Return -EINVAL if it is not available.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: none (up to the driver)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#tty_tiocmget\">tty_tiocmget</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, int <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#tiocmget\">tiocmget</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#tiocmget\">tiocmget</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#file\">file</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#retval\">retval</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_tiocmset<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>set modem status</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@file: user file pointer</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@cmd: command - clear bits, set bits or set all</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@p: pointer to desired bits</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Set the modem status bits from the tty driver if the feature</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>is supported. Return -EINVAL if it is not available.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: none (up to the driver)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#tty_tiocmset\">tty_tiocmset</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>,", 
"<span class=\"ts\"/>     unsigned <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#set\">set</a>, <a class=\"id\" href=\"#clear\">clear</a>, <a class=\"id\" href=\"#val\">val</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#tiocmset\">tiocmset</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set\">set</a> = <a class=\"id\" href=\"#clear\">clear</a> = 0;", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#cmd\">cmd</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TIOCMBIS\">TIOCMBIS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set\">set</a> = <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TIOCMBIC\">TIOCMBIC</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear\">clear</a> = <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TIOCMSET\">TIOCMSET</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set\">set</a> = <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear\">clear</a> = ~<a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set\">set</a> &= <a class=\"id\" href=\"#TIOCM_DTR\">TIOCM_DTR</a>|<a class=\"id\" href=\"#TIOCM_RTS\">TIOCM_RTS</a>|<a class=\"id\" href=\"#TIOCM_OUT1\">TIOCM_OUT1</a>|<a class=\"id\" href=\"#TIOCM_OUT2\">TIOCM_OUT2</a>|<a class=\"id\" href=\"#TIOCM_LOOP\">TIOCM_LOOP</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear\">clear</a> &= <a class=\"id\" href=\"#TIOCM_DTR\">TIOCM_DTR</a>|<a class=\"id\" href=\"#TIOCM_RTS\">TIOCM_RTS</a>|<a class=\"id\" href=\"#TIOCM_OUT1\">TIOCM_OUT1</a>|<a class=\"id\" href=\"#TIOCM_OUT2\">TIOCM_OUT2</a>|<a class=\"id\" href=\"#TIOCM_LOOP\">TIOCM_LOOP</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#tiocmset\">tiocmset</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#set\">set</a>, <a class=\"id\" href=\"#clear\">clear</a>);", 
"}", 
"", 
"struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty_pair_get_tty\">tty_pair_get_tty</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#TTY_DRIVER_TYPE_PTY\">TTY_DRIVER_TYPE_PTY</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#subtype\">subtype</a> == <a class=\"id\" href=\"#PTY_TYPE_MASTER\">PTY_TYPE_MASTER</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#link\">link</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tty\">tty</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tty_pair_get_tty\">tty_pair_get_tty</a>);", 
"", 
"struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty_pair_get_pty\">tty_pair_get_pty</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#TTY_DRIVER_TYPE_PTY\">TTY_DRIVER_TYPE_PTY</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#subtype\">subtype</a> == <a class=\"id\" href=\"#PTY_TYPE_MASTER\">PTY_TYPE_MASTER</a>)", 
"<span class=\"ts\"/>    return <a class=\"id\" href=\"#tty\">tty</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#link\">link</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tty_pair_get_pty\">tty_pair_get_pty</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Split this up, as gcc can choke on it otherwise..</span>", 
"<span class=\"comment\"> */</span>", 
"long <a class=\"id\" href=\"#tty_ioctl\">tty_ioctl</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>, unsigned long <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a> = <a class=\"id\" href=\"#file_tty\">file_tty</a>(<a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#real_tty\">real_tty</a>;", 
"<span class=\"ts\"/>void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#p\">p</a> = (void <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#arg\">arg</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_ldisc\">tty_ldisc</a> *<a class=\"id\" href=\"#ld\">ld</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_dentry\">f_dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty_paranoia_check\">tty_paranoia_check</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#inode\">inode</a>, \"tty_ioctl\"))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#real_tty\">real_tty</a> = <a class=\"id\" href=\"#tty_pair_get_tty\">tty_pair_get_tty</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Factor out some common prep work</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#cmd\">cmd</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TIOCSETD\">TIOCSETD</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TIOCSBRK\">TIOCSBRK</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TIOCCBRK\">TIOCCBRK</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TCSBRK\">TCSBRK</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TCSBRKP\">TCSBRKP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#tty_check_change\">tty_check_change</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cmd\">cmd</a> != <a class=\"id\" href=\"#TIOCCBRK\">TIOCCBRK</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_wait_until_sent\">tty_wait_until_sent</a>(<a class=\"id\" href=\"#tty\">tty</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#signal_pending\">signal_pending</a>(<a class=\"id\" href=\"#current\">current</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINTR\">EINTR</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Now do the stuff.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#cmd\">cmd</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TIOCSTI\">TIOCSTI</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#tiocsti\">tiocsti</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TIOCGWINSZ\">TIOCGWINSZ</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#tiocgwinsz\">tiocgwinsz</a>(<a class=\"id\" href=\"#real_tty\">real_tty</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TIOCSWINSZ\">TIOCSWINSZ</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#tiocswinsz\">tiocswinsz</a>(<a class=\"id\" href=\"#real_tty\">real_tty</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TIOCCONS\">TIOCCONS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#real_tty\">real_tty</a> != <a class=\"id\" href=\"#tty\">tty</a> ? -<a class=\"id\" href=\"#EINVAL\">EINVAL</a> : <a class=\"id\" href=\"#tioccons\">tioccons</a>(<a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#FIONBIO\">FIONBIO</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#fionbio\">fionbio</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TIOCEXCL\">TIOCEXCL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#TTY_EXCLUSIVE\">TTY_EXCLUSIVE</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TIOCNXCL\">TIOCNXCL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#TTY_EXCLUSIVE\">TTY_EXCLUSIVE</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TIOCNOTTY\">TIOCNOTTY</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#tty\">tty</a> != <a class=\"id\" href=\"#tty\">tty</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOTTY\">ENOTTY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#no_tty\">no_tty</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TIOCSCTTY\">TIOCSCTTY</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#tiocsctty\">tiocsctty</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TIOCGPGRP\">TIOCGPGRP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#tiocgpgrp\">tiocgpgrp</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#real_tty\">real_tty</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TIOCSPGRP\">TIOCSPGRP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#tiocspgrp\">tiocspgrp</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#real_tty\">real_tty</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TIOCGSID\">TIOCGSID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#tiocgsid\">tiocgsid</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#real_tty\">real_tty</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TIOCGETD\">TIOCGETD</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ldisc\">ldisc</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#num\">num</a>, (int <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TIOCSETD\">TIOCSETD</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#tiocsetd\">tiocsetd</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Break handling</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TIOCSBRK\">TIOCSBRK</a>:<span class=\"ts\"/><span class=\"comment\">/* Turn break on, unconditionally */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#break_ctl\">break_ctl</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#break_ctl\">break_ctl</a>(<a class=\"id\" href=\"#tty\">tty</a>, -1);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TIOCCBRK\">TIOCCBRK</a>:<span class=\"ts\"/><span class=\"comment\">/* Turn break off, unconditionally */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#break_ctl\">break_ctl</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#break_ctl\">break_ctl</a>(<a class=\"id\" href=\"#tty\">tty</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TCSBRK\">TCSBRK</a>:   <span class=\"comment\">/* SVID version: non-zero arg --&gt; no break */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* non-zero arg means wait for all output data</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * to be sent (performed above) but don't send break.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * This is used by the tcdrain() termios function.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#arg\">arg</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#send_break\">send_break</a>(<a class=\"id\" href=\"#tty\">tty</a>, 250);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TCSBRKP\">TCSBRKP</a>:<span class=\"ts\"/><span class=\"comment\">/* support for POSIX tcsendbreak() */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#send_break\">send_break</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#arg\">arg</a> ? <a class=\"id\" href=\"#arg\">arg</a>*100 : 250);", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TIOCMGET\">TIOCMGET</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#tty_tiocmget\">tty_tiocmget</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TIOCMSET\">TIOCMSET</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TIOCMBIC\">TIOCMBIC</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TIOCMBIS\">TIOCMBIS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#tty_tiocmset\">tty_tiocmset</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TCFLSH\">TCFLSH</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#arg\">arg</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#TCIFLUSH\">TCIFLUSH</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#TCIOFLUSH\">TCIOFLUSH</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* flush tty buffer and allow ldisc to process ioctl */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_buffer_flush\">tty_buffer_flush</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#ioctl\">ioctl</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#ioctl\">ioctl</a>)(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> != -<a class=\"id\" href=\"#ENOIOCTLCMD\">ENOIOCTLCMD</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ld\">ld</a> = <a class=\"id\" href=\"#tty_ldisc_ref_wait\">tty_ldisc_ref_wait</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ld\">ld</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#ioctl\">ioctl</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#ld\">ld</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#ioctl\">ioctl</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> == -<a class=\"id\" href=\"#ENOIOCTLCMD\">ENOIOCTLCMD</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_deref\">tty_ldisc_deref</a>(<a class=\"id\" href=\"#ld\">ld</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>", 
"static long <a class=\"id\" href=\"#tty_compat_ioctl\">tty_compat_ioctl</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_dentry\">f_dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a> = <a class=\"id\" href=\"#file_tty\">file_tty</a>(<a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_ldisc\">tty_ldisc</a> *<a class=\"id\" href=\"#ld\">ld</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ENOIOCTLCMD\">ENOIOCTLCMD</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty_paranoia_check\">tty_paranoia_check</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#inode\">inode</a>, \"tty_ioctl\"))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#compat_ioctl\">compat_ioctl</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#compat_ioctl\">compat_ioctl</a>)(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> != -<a class=\"id\" href=\"#ENOIOCTLCMD\">ENOIOCTLCMD</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ld\">ld</a> = <a class=\"id\" href=\"#tty_ldisc_ref_wait\">tty_ldisc_ref_wait</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ld\">ld</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#compat_ioctl\">compat_ioctl</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#ld\">ld</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#compat_ioctl\">compat_ioctl</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_deref\">tty_ldisc_deref</a>(<a class=\"id\" href=\"#ld\">ld</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This implements the \"Secure Attention Key\" ---  the idea is to</span>", 
"<span class=\"comment\"> * prevent trojan horses by killing all processes associated with this</span>", 
"<span class=\"comment\"> * tty when the user hits the \"Secure Attention Key\".  Required for</span>", 
"<span class=\"comment\"> * super-paranoid applications --- see the Orange Book for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This code could be nicer; ideally it should send a HUP, wait a few</span>", 
"<span class=\"comment\"> * seconds, then send a INT, and then a KILL signal.  But you then</span>", 
"<span class=\"comment\"> * have to coordinate with the init process, since all processes associated</span>", 
"<span class=\"comment\"> * with the current tty must be dead before the new getty is allowed</span>", 
"<span class=\"comment\"> * to spawn.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Now, if it would be correct ;-/ The current code has a nasty hole -</span>", 
"<span class=\"comment\"> * it doesn't catch files in flight. We may send the descriptor to ourselves</span>", 
"<span class=\"comment\"> * via AF_UNIX socket, close it and later fetch from socket. FIXME.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Nasty bug: do_SAK is being called in interrupt context.  This can</span>", 
"<span class=\"comment\"> * deadlock.  We punt it up to process context.  AKPM - 16Mar2001</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__do_SAK\">__do_SAK</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#TTY_SOFT_SAK\">TTY_SOFT_SAK</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_hangup\">tty_hangup</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"#else", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#g\">g</a>, *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pid\">pid</a> *<a class=\"id\" href=\"#session\">session</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a><span class=\"ts\"/>*<a class=\"id\" href=\"#filp\">filp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fdtable\">fdtable</a> *<a class=\"id\" href=\"#fdt\">fdt</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tty\">tty</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#session\">session</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#session\">session</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_flush\">tty_ldisc_flush</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_driver_flush_buffer\">tty_driver_flush_buffer</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Kill the entire session */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#do_each_pid_task\">do_each_pid_task</a>(<a class=\"id\" href=\"#session\">session</a>, <a class=\"id\" href=\"#PIDTYPE_SID\">PIDTYPE_SID</a>, <a class=\"id\" href=\"#p\">p</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a> \"SAK: killed process %d\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\" (%s): task_session(p)==tty->session\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#task_pid_nr\">task_pid_nr</a>(<a class=\"id\" href=\"#p\">p</a>), <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#comm\">comm</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#send_sig\">send_sig</a>(<a class=\"id\" href=\"#SIGKILL\">SIGKILL</a>, <a class=\"id\" href=\"#p\">p</a>, 1);", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#while_each_pid_task\">while_each_pid_task</a>(<a class=\"id\" href=\"#session\">session</a>, <a class=\"id\" href=\"#PIDTYPE_SID\">PIDTYPE_SID</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Now kill any processes that happen to have the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * tty open.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#do_each_thread\">do_each_thread</a>(<a class=\"id\" href=\"#g\">g</a>, <a class=\"id\" href=\"#p\">p</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#tty\">tty</a> == <a class=\"id\" href=\"#tty\">tty</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a> \"SAK: killed process %d\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \" (%s): task_session(p)==tty->session\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#task_pid_nr\">task_pid_nr</a>(<a class=\"id\" href=\"#p\">p</a>), <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#comm\">comm</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#send_sig\">send_sig</a>(<a class=\"id\" href=\"#SIGKILL\">SIGKILL</a>, <a class=\"id\" href=\"#p\">p</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#task_lock\">task_lock</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#files\">files</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * We don't take a ref to the file, so we must</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * hold -&gt;file_lock instead.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#files\">files</a>-><a class=\"id\" href=\"#file_lock\">file_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fdt\">fdt</a> = <a class=\"id\" href=\"#files_fdtable\">files_fdtable</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#files\">files</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#fdt\">fdt</a>-><a class=\"id\" href=\"#max_fds\">max_fds</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a> = <a class=\"id\" href=\"#fcheck_files\">fcheck_files</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#files\">files</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#filp\">filp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#read\">read</a> == <a class=\"id\" href=\"#tty_read\">tty_read</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#file_tty\">file_tty</a>(<a class=\"id\" href=\"#filp\">filp</a>) == <a class=\"id\" href=\"#tty\">tty</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a> \"SAK: killed process %d\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \" (%s): fd#%d opened to the tty\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#task_pid_nr\">task_pid_nr</a>(<a class=\"id\" href=\"#p\">p</a>), <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#comm\">comm</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#force_sig\">force_sig</a>(<a class=\"id\" href=\"#SIGKILL\">SIGKILL</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#files\">files</a>-><a class=\"id\" href=\"#file_lock\">file_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#task_unlock\">task_unlock</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#while_each_thread\">while_each_thread</a>(<a class=\"id\" href=\"#g\">g</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"static void <a class=\"id\" href=\"#do_SAK_work\">do_SAK_work</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#work\">work</a>, struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a>, <a class=\"id\" href=\"#SAK_work\">SAK_work</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__do_SAK\">__do_SAK</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The tq handling here is a little racy - tty-&gt;SAK_work may already be queued.</span>", 
"<span class=\"comment\"> * Fortunately we don't need to worry, because if -&gt;SAK_work is already queued,</span>", 
"<span class=\"comment\"> * the values which we write to it will be identical to the values which it</span>", 
"<span class=\"comment\"> * already has. --akpm</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#do_SAK\">do_SAK</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tty\">tty</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#schedule_work\">schedule_work</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#SAK_work\">SAK_work</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#do_SAK\">do_SAK</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>initialize_tty_struct</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty to initialize</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This subroutine initializes a tty structure that has been newly</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>allocated.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: none - tty in question must not be exposed at this point</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#initialize_tty_struct\">initialize_tty_struct</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#driver\">driver</a>, int <a class=\"id\" href=\"#idx\">idx</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#tty\">tty</a>, 0, sizeof(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kref_init\">kref_init</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#kref\">kref</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#magic\">magic</a> = <a class=\"id\" href=\"#TTY_MAGIC\">TTY_MAGIC</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_init\">tty_ldisc_init</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#session\">session</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#pgrp\">pgrp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#overrun_time\">overrun_time</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#buf\">buf</a>.<a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#buf\">buf</a>.<a class=\"id\" href=\"#tail\">tail</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_buffer_init\">tty_buffer_init</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_init\">mutex_init</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios_mutex\">termios_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_init\">mutex_init</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ldisc_mutex\">ldisc_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_waitqueue_head\">init_waitqueue_head</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#write_wait\">write_wait</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_waitqueue_head\">init_waitqueue_head</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_wait\">read_wait</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_WORK\">INIT_WORK</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#hangup_work\">hangup_work</a>, <a class=\"id\" href=\"#do_tty_hangup\">do_tty_hangup</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_init\">mutex_init</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#atomic_read_lock\">atomic_read_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_init\">mutex_init</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#atomic_write_lock\">atomic_write_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_init\">mutex_init</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#output_lock\">output_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_init\">mutex_init</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#echo_lock\">echo_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_lock\">read_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ctrl_lock\">ctrl_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#tty_files\">tty_files</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_WORK\">INIT_WORK</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#SAK_work\">SAK_work</a>, <a class=\"id\" href=\"#do_SAK_work\">do_SAK_work</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver\">driver</a> = <a class=\"id\" href=\"#driver\">driver</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#ops\">ops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#idx\">idx</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_line_name\">tty_line_name</a>(<a class=\"id\" href=\"#driver\">driver</a>, <a class=\"id\" href=\"#idx\">idx</a>, <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_put_char<span class=\"ts\"/>-<span class=\"ts\"/>write one character to a tty</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ch: character</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Write one byte to the tty using the provided put_char method</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>if present. Returns the number of characters successfully output.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Note: the specific put_char operation in the driver layer may go</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>away soon. Don't call it directly, use this method</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#tty_put_char\">tty_put_char</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, unsigned char <a class=\"id\" href=\"#ch\">ch</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#put_char\">put_char</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#put_char\">put_char</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#ch\">ch</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#write\">write</a>(<a class=\"id\" href=\"#tty\">tty</a>, &amp;<a class=\"id\" href=\"#ch\">ch</a>, 1);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#tty_put_char\">tty_put_char</a>);", 
"", 
"struct <a class=\"id\" href=\"#class\">class</a> *<a class=\"id\" href=\"#tty_class\">tty_class</a>;", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_register_device - register a tty device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@driver: the tty driver that describes the tty device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@index: the index in the tty driver for this tty device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@device: a struct device that is associated with this tty device.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>This field is optional, if there is no known struct device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>for this tty device it can be set to NULL safely.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Returns a pointer to the struct device for this tty device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>(or ERR_PTR(-EFOO) on error).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This call is required to be made to register an individual tty device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>if the tty driver's flags have the TTY_DRIVER_DYNAMIC_DEV bit set.  If</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>that bit is not set, this function should not be called by a tty</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>driver.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: ??</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#tty_register_device\">tty_register_device</a>(struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#driver\">driver</a>, unsigned <a class=\"id\" href=\"#index\">index</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#device\">device</a>)", 
"{", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#name\">name</a>[64];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#MKDEV\">MKDEV</a>(<a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#major\">major</a>, <a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#minor_start\">minor_start</a>) + <a class=\"id\" href=\"#index\">index</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#index\">index</a> >= <a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#num\">num</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"Attempt to register invalid tty line number \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \" (%d).\\n\", <a class=\"id\" href=\"#index\">index</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EINVAL\">EINVAL</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#TTY_DRIVER_TYPE_PTY\">TTY_DRIVER_TYPE_PTY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pty_line_name\">pty_line_name</a>(<a class=\"id\" href=\"#driver\">driver</a>, <a class=\"id\" href=\"#index\">index</a>, <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_line_name\">tty_line_name</a>(<a class=\"id\" href=\"#driver\">driver</a>, <a class=\"id\" href=\"#index\">index</a>, <a class=\"id\" href=\"#name\">name</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#device_create\">device_create</a>(<a class=\"id\" href=\"#tty_class\">tty_class</a>, <a class=\"id\" href=\"#device\">device</a>, <a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#name\">name</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tty_register_device\">tty_register_device</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>tty_unregister_device - unregister a tty device</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>@driver: the tty driver that describes the tty device</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>@index: the index in the tty driver for this tty device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>If a tty device is registered with a call to tty_register_device() then</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>this function must be called when the tty device is gone.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: ??</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#tty_unregister_device\">tty_unregister_device</a>(struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#driver\">driver</a>, unsigned <a class=\"id\" href=\"#index\">index</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_destroy\">device_destroy</a>(<a class=\"id\" href=\"#tty_class\">tty_class</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#MKDEV\">MKDEV</a>(<a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#major\">major</a>, <a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#minor_start\">minor_start</a>) + <a class=\"id\" href=\"#index\">index</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tty_unregister_device\">tty_unregister_device</a>);", 
"", 
"struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#alloc_tty_driver\">alloc_tty_driver</a>(int <a class=\"id\" href=\"#lines\">lines</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#driver\">driver</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#driver\">driver</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#driver\">driver</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kref_init\">kref_init</a>(&amp;<a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#kref\">kref</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#magic\">magic</a> = <a class=\"id\" href=\"#TTY_DRIVER_MAGIC\">TTY_DRIVER_MAGIC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#num\">num</a> = <a class=\"id\" href=\"#lines\">lines</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* later we'll move allocation of tables here */</span>", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#driver\">driver</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#alloc_tty_driver\">alloc_tty_driver</a>);", 
"", 
"static void <a class=\"id\" href=\"#destruct_tty_driver\">destruct_tty_driver</a>(struct <a class=\"id\" href=\"#kref\">kref</a> *<a class=\"id\" href=\"#kref\">kref</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#driver\">driver</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#kref\">kref</a>, struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a>, <a class=\"id\" href=\"#kref\">kref</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ktermios\">ktermios</a> *<a class=\"id\" href=\"#tp\">tp</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TTY_DRIVER_INSTALLED\">TTY_DRIVER_INSTALLED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Free the termios and termios_locked structures because</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * we don't want to get memory leaks when modular tty</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * drivers are removed from the kernel.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#num\">num</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#termios\">termios</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#termios\">termios</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#tp\">tp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TTY_DRIVER_DYNAMIC_DEV\">TTY_DRIVER_DYNAMIC_DEV</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_unregister_device\">tty_unregister_device</a>(<a class=\"id\" href=\"#driver\">driver</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#ttys\">ttys</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#proc_tty_unregister_driver\">proc_tty_unregister_driver</a>(<a class=\"id\" href=\"#driver\">driver</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#ttys\">ttys</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#termios\">termios</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cdev_del\">cdev_del</a>(&amp;<a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#cdev\">cdev</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#driver\">driver</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#tty_driver_kref_put\">tty_driver_kref_put</a>(struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#driver\">driver</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kref_put\">kref_put</a>(&amp;<a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#kref\">kref</a>, <a class=\"id\" href=\"#destruct_tty_driver\">destruct_tty_driver</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tty_driver_kref_put\">tty_driver_kref_put</a>);", 
"", 
"void <a class=\"id\" href=\"#tty_set_operations\">tty_set_operations</a>(struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#driver\">driver</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#tty_operations\">tty_operations</a> *<a class=\"id\" href=\"#op\">op</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#op\">op</a>;", 
"};", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tty_set_operations\">tty_set_operations</a>);", 
"", 
"void <a class=\"id\" href=\"#put_tty_driver\">put_tty_driver</a>(struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#d\">d</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_driver_kref_put\">tty_driver_kref_put</a>(<a class=\"id\" href=\"#d\">d</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#put_tty_driver\">put_tty_driver</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Called by a tty driver to register itself.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#tty_register_driver\">tty_register_driver</a>(struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#driver\">driver</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>void **<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TTY_DRIVER_DEVPTS_MEM\">TTY_DRIVER_DEVPTS_MEM</a>) && <a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#num\">num</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(<a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#num\">num</a> * 2 * sizeof(void *), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#major\">major</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#alloc_chrdev_region\">alloc_chrdev_region</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#minor_start\">minor_start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#num\">num</a>, <a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#major\">major</a> = <a class=\"id\" href=\"#MAJOR\">MAJOR</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#minor_start\">minor_start</a> = <a class=\"id\" href=\"#MINOR\">MINOR</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#MKDEV\">MKDEV</a>(<a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#major\">major</a>, <a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#minor_start\">minor_start</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#register_chrdev_region\">register_chrdev_region</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#num\">num</a>, <a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#ttys\">ttys</a> = (struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> **)<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#termios\">termios</a> = (struct <a class=\"id\" href=\"#ktermios\">ktermios</a> **)(<a class=\"id\" href=\"#p\">p</a> + <a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#num\">num</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#ttys\">ttys</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#termios\">termios</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdev_init\">cdev_init</a>(&amp;<a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#cdev\">cdev</a>, &amp;<a class=\"id\" href=\"#tty_fops\">tty_fops</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#cdev\">cdev</a>.<a class=\"id\" href=\"#owner\">owner</a> = <a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#owner\">owner</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#cdev_add\">cdev_add</a>(&amp;<a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#cdev\">cdev</a>, <a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#num\">num</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unregister_chrdev_region\">unregister_chrdev_region</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#num\">num</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#ttys\">ttys</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#termios\">termios</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#tty_mutex\">tty_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#tty_drivers\">tty_drivers</a>, &amp;<a class=\"id\" href=\"#tty_drivers\">tty_drivers</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tty_mutex\">tty_mutex</a>);", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TTY_DRIVER_DYNAMIC_DEV\">TTY_DRIVER_DYNAMIC_DEV</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#num\">num</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#tty_register_device\">tty_register_device</a>(<a class=\"id\" href=\"#driver\">driver</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proc_tty_register_driver\">proc_tty_register_driver</a>(<a class=\"id\" href=\"#driver\">driver</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#TTY_DRIVER_INSTALLED\">TTY_DRIVER_INSTALLED</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tty_register_driver\">tty_register_driver</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Called by a tty driver to unregister itself.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#tty_unregister_driver\">tty_unregister_driver</a>(struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#driver\">driver</a>)", 
"{", 
"#if 0", 
"<span class=\"ts\"/><span class=\"comment\">/* FIXME */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#refcount\">refcount</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_chrdev_region\">unregister_chrdev_region</a>(<a class=\"id\" href=\"#MKDEV\">MKDEV</a>(<a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#major\">major</a>, <a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#minor_start\">minor_start</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#num\">num</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#tty_mutex\">tty_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#tty_drivers\">tty_drivers</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tty_mutex\">tty_mutex</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tty_unregister_driver\">tty_unregister_driver</a>);", 
"", 
"<a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#tty_devnum\">tty_devnum</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#MKDEV\">MKDEV</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#major\">major</a>, <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#minor_start\">minor_start</a>) + <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#index\">index</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tty_devnum\">tty_devnum</a>);", 
"", 
"void <a class=\"id\" href=\"#proc_clear_tty\">proc_clear_tty</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#tty\">tty</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#tty\">tty</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_kref_put\">tty_kref_put</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Called under the sighand lock */</span>", 
"", 
"static void <a class=\"id\" href=\"#__proc_set_tty\">__proc_set_tty</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>, struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We should not have a session or pgrp to put here but.... */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ctrl_lock\">ctrl_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_pid\">put_pid</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#session\">session</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_pid\">put_pid</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#pgrp\">pgrp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#pgrp\">pgrp</a> = <a class=\"id\" href=\"#get_pid\">get_pid</a>(<a class=\"id\" href=\"#task_pgrp\">task_pgrp</a>(<a class=\"id\" href=\"#tsk\">tsk</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ctrl_lock\">ctrl_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#session\">session</a> = <a class=\"id\" href=\"#get_pid\">get_pid</a>(<a class=\"id\" href=\"#task_session\">task_session</a>(<a class=\"id\" href=\"#tsk\">tsk</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#tty\">tty</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"tty not NULL!!\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_kref_put\">tty_kref_put</a>(<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_pid\">put_pid</a>(<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#tty_old_pgrp\">tty_old_pgrp</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#tty\">tty</a> = <a class=\"id\" href=\"#tty_kref_get\">tty_kref_get</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#tty_old_pgrp\">tty_old_pgrp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#proc_set_tty\">proc_set_tty</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>, struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__proc_set_tty\">__proc_set_tty</a>(<a class=\"id\" href=\"#tsk\">tsk</a>, <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"}", 
"", 
"struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#get_current_tty\">get_current_tty</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a> = <a class=\"id\" href=\"#tty_kref_get\">tty_kref_get</a>(<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tty\">tty</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#get_current_tty\">get_current_tty</a>);", 
"", 
"void <a class=\"id\" href=\"#tty_default_fops\">tty_default_fops</a>(struct <a class=\"id\" href=\"#file_operations\">file_operations</a> *<a class=\"id\" href=\"#fops\">fops</a>)", 
"{", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#fops\">fops</a> = <a class=\"id\" href=\"#tty_fops\">tty_fops</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Initialize the console device. This is called *early*, so</span>", 
"<span class=\"comment\"> * we can't necessarily depend on lots of kernel help here.</span>", 
"<span class=\"comment\"> * Just do some early initializations, and do the complex setup</span>", 
"<span class=\"comment\"> * later.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#console_init\">console_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#initcall_t\">initcall_t</a> *<a class=\"id\" href=\"#call\">call</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Setup the default TTY line discipline. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_begin\">tty_ldisc_begin</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * set up the console device so that later boot sequences can</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * inform about problems etc..</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#call\">call</a> = <a class=\"id\" href=\"#__con_initcall_start\">__con_initcall_start</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#call\">call</a> &lt; <a class=\"id\" href=\"#__con_initcall_end\">__con_initcall_end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#call\">call</a>)();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#call\">call</a>++;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static char *<a class=\"id\" href=\"#tty_devnode\">tty_devnode</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#mode_t\">mode_t</a> *<a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mode\">mode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devt\">devt</a> == <a class=\"id\" href=\"#MKDEV\">MKDEV</a>(<a class=\"id\" href=\"#TTYAUX_MAJOR\">TTYAUX_MAJOR</a>, 0) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devt\">devt</a> == <a class=\"id\" href=\"#MKDEV\">MKDEV</a>(<a class=\"id\" href=\"#TTYAUX_MAJOR\">TTYAUX_MAJOR</a>, 2))", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#mode\">mode</a> = 0666;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#tty_class_init\">tty_class_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_class\">tty_class</a> = <a class=\"id\" href=\"#class_create\">class_create</a>(<a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>, \"tty\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#tty_class\">tty_class</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#tty_class\">tty_class</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_class\">tty_class</a>-><a class=\"id\" href=\"#devnode\">devnode</a> = <a class=\"id\" href=\"#tty_devnode\">tty_devnode</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<a class=\"id\" href=\"#postcore_initcall\">postcore_initcall</a>(<a class=\"id\" href=\"#tty_class_init\">tty_class_init</a>);", 
"", 
"<span class=\"comment\">/* 3/2004 jmc: why do these devices exist? */</span>", 
"", 
"static struct <a class=\"id\" href=\"#cdev\">cdev</a> <a class=\"id\" href=\"#tty_cdev\">tty_cdev</a>, <a class=\"id\" href=\"#console_cdev\">console_cdev</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Ok, now we can initialize the rest of the tty devices and can count</span>", 
"<span class=\"comment\"> * on memory allocations, interrupts etc..</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#tty_init\">tty_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdev_init\">cdev_init</a>(&amp;<a class=\"id\" href=\"#tty_cdev\">tty_cdev</a>, &amp;<a class=\"id\" href=\"#tty_fops\">tty_fops</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cdev_add\">cdev_add</a>(&amp;<a class=\"id\" href=\"#tty_cdev\">tty_cdev</a>, <a class=\"id\" href=\"#MKDEV\">MKDEV</a>(<a class=\"id\" href=\"#TTYAUX_MAJOR\">TTYAUX_MAJOR</a>, 0), 1) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#register_chrdev_region\">register_chrdev_region</a>(<a class=\"id\" href=\"#MKDEV\">MKDEV</a>(<a class=\"id\" href=\"#TTYAUX_MAJOR\">TTYAUX_MAJOR</a>, 0), 1, \"/dev/tty\") &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"Couldn't register /dev/tty driver\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_create\">device_create</a>(<a class=\"id\" href=\"#tty_class\">tty_class</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#MKDEV\">MKDEV</a>(<a class=\"id\" href=\"#TTYAUX_MAJOR\">TTYAUX_MAJOR</a>, 0), <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      \"tty\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cdev_init\">cdev_init</a>(&amp;<a class=\"id\" href=\"#console_cdev\">console_cdev</a>, &amp;<a class=\"id\" href=\"#console_fops\">console_fops</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cdev_add\">cdev_add</a>(&amp;<a class=\"id\" href=\"#console_cdev\">console_cdev</a>, <a class=\"id\" href=\"#MKDEV\">MKDEV</a>(<a class=\"id\" href=\"#TTYAUX_MAJOR\">TTYAUX_MAJOR</a>, 1), 1) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#register_chrdev_region\">register_chrdev_region</a>(<a class=\"id\" href=\"#MKDEV\">MKDEV</a>(<a class=\"id\" href=\"#TTYAUX_MAJOR\">TTYAUX_MAJOR</a>, 1), 1, \"/dev/console\") &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"Couldn't register /dev/console driver\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_create\">device_create</a>(<a class=\"id\" href=\"#tty_class\">tty_class</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#MKDEV\">MKDEV</a>(<a class=\"id\" href=\"#TTYAUX_MAJOR\">TTYAUX_MAJOR</a>, 1), <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      \"console\");", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_VT\">CONFIG_VT</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vty_init\">vty_init</a>(&amp;<a class=\"id\" href=\"#console_fops\">console_fops</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
];
xr_frag_insert('l/6b/242dc0b16759a279ed9b2fc0e56275417bdfae.xr', __xr_tmp);
