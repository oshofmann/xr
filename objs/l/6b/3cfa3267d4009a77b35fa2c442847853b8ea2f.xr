var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_SEM_H\">_LINUX_SEM_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_SEM_H\">_LINUX_SEM_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ipc\">ipc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* semop flags */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SEM_UNDO\">SEM_UNDO</a>        0x1000  <span class=\"comment\">/* undo the operation on exit */</span>", 
"", 
"<span class=\"comment\">/* semctl Command Definitions. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#GETPID\">GETPID</a>  11       <span class=\"comment\">/* get sempid */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#GETVAL\">GETVAL</a>  12       <span class=\"comment\">/* get semval */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#GETALL\">GETALL</a>  13       <span class=\"comment\">/* get all semval's */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#GETNCNT\">GETNCNT</a> 14       <span class=\"comment\">/* get semncnt */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#GETZCNT\">GETZCNT</a> 15       <span class=\"comment\">/* get semzcnt */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SETVAL\">SETVAL</a>  16       <span class=\"comment\">/* set semval */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SETALL\">SETALL</a>  17       <span class=\"comment\">/* set all semval's */</span>", 
"", 
"<span class=\"comment\">/* ipcs ctl cmds */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SEM_STAT\">SEM_STAT</a> 18", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SEM_INFO\">SEM_INFO</a> 19", 
"", 
"<span class=\"comment\">/* Obsolete, used only for backwards compatibility and libc5 compiles */</span>", 
"struct <a class=\"id\" href=\"#semid_ds\">semid_ds</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipc_perm\">ipc_perm</a><span class=\"ts\"/><a class=\"id\" href=\"#sem_perm\">sem_perm</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* permissions .. see ipc.h */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__kernel_time_t\">__kernel_time_t</a><span class=\"ts\"/><a class=\"id\" href=\"#sem_otime\">sem_otime</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* last semop time */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__kernel_time_t\">__kernel_time_t</a><span class=\"ts\"/><a class=\"id\" href=\"#sem_ctime\">sem_ctime</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* last change time */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sem\">sem</a><span class=\"ts\"/>*<a class=\"id\" href=\"#sem_base\">sem_base</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ptr to first semaphore in array */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sem_queue\">sem_queue</a> *<a class=\"id\" href=\"#sem_pending\">sem_pending</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* pending operations to be processed */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sem_queue\">sem_queue</a> **<a class=\"id\" href=\"#sem_pending_last\">sem_pending_last</a>;<span class=\"ts\"/><span class=\"comment\">/* last pending operation */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sem_undo\">sem_undo</a><span class=\"ts\"/>*<a class=\"id\" href=\"#undo\">undo</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* undo requests on this array */</span>", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><a class=\"id\" href=\"#sem_nsems\">sem_nsems</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* no. of semaphores in array */</span>", 
"};", 
"", 
"<span class=\"comment\">/* Include the definition of semid64_ds */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#sembuf\">sembuf</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* semop system calls takes an array of these. */</span>", 
"struct <a class=\"id\" href=\"#sembuf\">sembuf</a> {", 
"<span class=\"ts\"/>unsigned short  <a class=\"id\" href=\"#sem_num\">sem_num</a>;<span class=\"ts\"/><span class=\"comment\">/* semaphore index in array */</span>", 
"<span class=\"ts\"/>short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sem_op\">sem_op</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* semaphore operation */</span>", 
"<span class=\"ts\"/>short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sem_flg\">sem_flg</a>;<span class=\"ts\"/><span class=\"comment\">/* operation flags */</span>", 
"};", 
"", 
"<span class=\"comment\">/* arg for semctl system calls. */</span>", 
"union <a class=\"id\" href=\"#semun\">semun</a> {", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#val\">val</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* value for SETVAL */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#semid_ds\">semid_ds</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>;<span class=\"ts\"/><span class=\"comment\">/* buffer for IPC_STAT &amp; IPC_SET */</span>", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#array\">array</a>;<span class=\"ts\"/><span class=\"comment\">/* array for GETALL &amp; SETALL */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#seminfo\">seminfo</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#__buf\">__buf</a>;<span class=\"ts\"/><span class=\"comment\">/* buffer for IPC_INFO */</span>", 
"<span class=\"ts\"/>void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#__pad\">__pad</a>;", 
"};", 
"", 
"struct  <a class=\"id\" href=\"#seminfo\">seminfo</a> {", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#semmap\">semmap</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#semmni\">semmni</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#semmns\">semmns</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#semmnu\">semmnu</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#semmsl\">semmsl</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#semopm\">semopm</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#semume\">semume</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#semusz\">semusz</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#semvmx\">semvmx</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#semaem\">semaem</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SEMMNI\">SEMMNI</a>  128             <span class=\"comment\">/* &lt;= IPCMNI  max # of semaphore identifiers */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SEMMSL\">SEMMSL</a>  250             <span class=\"comment\">/* &lt;= 8 000 max num of semaphores per id */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SEMMNS\">SEMMNS</a>  (<a class=\"id\" href=\"#SEMMNI\">SEMMNI</a>*<a class=\"id\" href=\"#SEMMSL\">SEMMSL</a>) <span class=\"comment\">/* &lt;= INT_MAX max # of semaphores in system */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SEMOPM\">SEMOPM</a>  32<span class=\"ts\"/>        <span class=\"comment\">/* &lt;= 1 000 max num of ops per semop call */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SEMVMX\">SEMVMX</a>  32767           <span class=\"comment\">/* &lt;= 32767 semaphore maximum value */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SEMAEM\">SEMAEM</a>  <a class=\"id\" href=\"#SEMVMX\">SEMVMX</a>          <span class=\"comment\">/* adjust on exit max value */</span>", 
"", 
"<span class=\"comment\">/* unused */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SEMUME\">SEMUME</a>  <a class=\"id\" href=\"#SEMOPM\">SEMOPM</a>          <span class=\"comment\">/* max num of undo entries per process */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SEMMNU\">SEMMNU</a>  <a class=\"id\" href=\"#SEMMNS\">SEMMNS</a>          <span class=\"comment\">/* num of undo structures system wide */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SEMMAP\">SEMMAP</a>  <a class=\"id\" href=\"#SEMMNS\">SEMMNS</a>          <span class=\"comment\">/* # of entries in semaphore map */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SEMUSZ\">SEMUSZ</a>  20<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* sizeof struct sem_undo */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#atomic\">atomic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rcupdate\">rcupdate</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cache\">cache</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#task_struct\">task_struct</a>;", 
"", 
"<span class=\"comment\">/* One semaphore structure for each semaphore in the system. */</span>", 
"struct <a class=\"id\" href=\"#sem\">sem</a> {", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#semval\">semval</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* current value */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#sempid\">sempid</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* pid of last operation */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#sem_pending\">sem_pending</a>; <span class=\"comment\">/* pending single-sop operations */</span>", 
"};", 
"", 
"<span class=\"comment\">/* One sem_array data structure for each set of semaphores in the system. */</span>", 
"struct <a class=\"id\" href=\"#sem_array\">sem_array</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kern_ipc_perm\">kern_ipc_perm</a><span class=\"ts\"/><a class=\"id\" href=\"#____cacheline_aligned_in_smp\">____cacheline_aligned_in_smp</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sem_perm\">sem_perm</a>;<span class=\"ts\"/><span class=\"comment\">/* permissions .. see ipc.h */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#time_t\">time_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sem_otime\">sem_otime</a>;<span class=\"ts\"/><span class=\"comment\">/* last semop time */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#time_t\">time_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sem_ctime\">sem_ctime</a>;<span class=\"ts\"/><span class=\"comment\">/* last change time */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sem\">sem</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#sem_base\">sem_base</a>;<span class=\"ts\"/><span class=\"comment\">/* ptr to first semaphore in array */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#sem_pending\">sem_pending</a>;<span class=\"ts\"/><span class=\"comment\">/* pending operations to be processed */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#list_id\">list_id</a>;<span class=\"ts\"/><span class=\"comment\">/* undo requests on this array */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sem_nsems\">sem_nsems</a>;<span class=\"ts\"/><span class=\"comment\">/* no. of semaphores in array */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#complex_count\">complex_count</a>;<span class=\"ts\"/><span class=\"comment\">/* pending complex operations */</span>", 
"};", 
"", 
"<span class=\"comment\">/* One queue for each sleeping process in the system. */</span>", 
"struct <a class=\"id\" href=\"#sem_queue\">sem_queue</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#simple_list\">simple_list</a>; <span class=\"comment\">/* queue of pending operations */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#list\">list</a>;<span class=\"ts\"/> <span class=\"comment\">/* queue of pending operations */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a><span class=\"ts\"/>*<a class=\"id\" href=\"#sleeper\">sleeper</a>; <span class=\"comment\">/* this process */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sem_undo\">sem_undo</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#undo\">undo</a>;<span class=\"ts\"/> <span class=\"comment\">/* undo structure */</span>", 
"<span class=\"ts\"/>int    <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pid\">pid</a>;<span class=\"ts\"/> <span class=\"comment\">/* process id of requesting process */</span>", 
"<span class=\"ts\"/>int    <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a>;<span class=\"ts\"/> <span class=\"comment\">/* completion status of operation */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sembuf\">sembuf</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#sops\">sops</a>;<span class=\"ts\"/> <span class=\"comment\">/* array of pending operations */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nsops\">nsops</a>;<span class=\"ts\"/> <span class=\"comment\">/* number of operations */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alter\">alter</a>;   <span class=\"comment\">/* does the operation alter the array? */</span>", 
"};", 
"", 
"<span class=\"comment\">/* Each task has a list of undo requests. They are executed automatically</span>", 
"<span class=\"comment\"> * when the process exits.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#sem_undo\">sem_undo</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#list_proc\">list_proc</a>;<span class=\"ts\"/><span class=\"comment\">/* per-process list: all undos from one process. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* rcu protected */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rcu_head\">rcu_head</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu\">rcu</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* rcu struct for sem_undo() */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sem_undo_list\">sem_undo_list</a><span class=\"ts\"/>*<a class=\"id\" href=\"#ulp\">ulp</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* sem_undo_list for the process */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#list_id\">list_id</a>;<span class=\"ts\"/><span class=\"comment\">/* per semaphore array list: all undos for one array */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#semid\">semid</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* semaphore set identifier */</span>", 
"<span class=\"ts\"/>short *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#semadj\">semadj</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* array of adjustments, one per semaphore */</span>", 
"};", 
"", 
"<span class=\"comment\">/* sem_undo_list controls shared access to the list of sem_undo structures</span>", 
"<span class=\"comment\"> * that may be shared among all a CLONE_SYSVSEM task group.</span>", 
"<span class=\"comment\"> */</span> ", 
"struct <a class=\"id\" href=\"#sem_undo_list\">sem_undo_list</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#refcnt\">refcnt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lock\">lock</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#list_proc\">list_proc</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#sysv_sem\">sysv_sem</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sem_undo_list\">sem_undo_list</a> *<a class=\"id\" href=\"#undo_list\">undo_list</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYSVIPC\">CONFIG_SYSVIPC</a>", 
"", 
"extern int <a class=\"id\" href=\"#copy_semundo\">copy_semundo</a>(unsigned long <a class=\"id\" href=\"#clone_flags\">clone_flags</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>);", 
"extern void <a class=\"id\" href=\"#exit_sem\">exit_sem</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>);", 
"", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#copy_semundo\">copy_semundo</a>(unsigned long <a class=\"id\" href=\"#clone_flags\">clone_flags</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#exit_sem\">exit_sem</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>)", 
"{", 
"<span class=\"ts\"/>return;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __KERNEL__ */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _LINUX_SEM_H */</span>", 
];
xr_frag_insert('l/6b/3cfa3267d4009a77b35fa2c442847853b8ea2f.xr', __xr_tmp);
