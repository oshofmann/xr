var __xr_tmp = [
"<span class=\"ts\"/><a class=\"id\" href=\"#pr\">pr</a> = <a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#processors\">processors</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pr\">pr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_INFO\">ACPI_DB_INFO</a>, \"Invalid pr pointer\\n\"));", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#flags\">flags</a>.<a class=\"id\" href=\"#throttling\">throttling</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_INFO\">ACPI_DB_INFO</a>, \"Throttling control is \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"unsupported on CPU %d\\n\", <a class=\"id\" href=\"#cpu\">cpu</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#target_state\">target_state</a> = <a class=\"id\" href=\"#p_tstate\">p_tstate</a>-><a class=\"id\" href=\"#target_state\">target_state</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p_throttling\">p_throttling</a> = &amp;(<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>);", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#event\">event</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#THROTTLING_PRECHANGE\">THROTTLING_PRECHANGE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Prechange event is used to choose one proper t-state,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * which meets the limits of thermal, user and _TPC.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p_limit\">p_limit</a> = &amp;<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#limit\">limit</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#p_limit\">p_limit</a>-><a class=\"id\" href=\"#thermal\">thermal</a>.<a class=\"id\" href=\"#tx\">tx</a> &gt; <a class=\"id\" href=\"#target_state\">target_state</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#target_state\">target_state</a> = <a class=\"id\" href=\"#p_limit\">p_limit</a>-><a class=\"id\" href=\"#thermal\">thermal</a>.<a class=\"id\" href=\"#tx\">tx</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#p_limit\">p_limit</a>-><a class=\"id\" href=\"#user\">user</a>.<a class=\"id\" href=\"#tx\">tx</a> &gt; <a class=\"id\" href=\"#target_state\">target_state</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#target_state\">target_state</a> = <a class=\"id\" href=\"#p_limit\">p_limit</a>-><a class=\"id\" href=\"#user\">user</a>.<a class=\"id\" href=\"#tx\">tx</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling_platform_limit\">throttling_platform_limit</a> &gt; <a class=\"id\" href=\"#target_state\">target_state</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#target_state\">target_state</a> = <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling_platform_limit\">throttling_platform_limit</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#target_state\">target_state</a> >= <a class=\"id\" href=\"#p_throttling\">p_throttling</a>-><a class=\"id\" href=\"#state_count\">state_count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"Exceed the limit of T-state \\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#target_state\">target_state</a> = <a class=\"id\" href=\"#p_throttling\">p_throttling</a>-><a class=\"id\" href=\"#state_count\">state_count</a> - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p_tstate\">p_tstate</a>-><a class=\"id\" href=\"#target_state\">target_state</a> = <a class=\"id\" href=\"#target_state\">target_state</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_INFO\">ACPI_DB_INFO</a>, \"PreChange Event:\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"target T-state of CPU %d is T%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#target_state\">target_state</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#THROTTLING_POSTCHANGE\">THROTTLING_POSTCHANGE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Postchange event is only used to update the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * T-state flag of acpi_processor_throttling.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p_throttling\">p_throttling</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#target_state\">target_state</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_INFO\">ACPI_DB_INFO</a>, \"PostChange Event:\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"CPU %d is switched to T%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#target_state\">target_state</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"Unsupported Throttling notifier event\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * _TPC - Throttling Present Capabilities</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#acpi_processor_get_platform_limit\">acpi_processor_get_platform_limit</a>(struct <a class=\"id\" href=\"#acpi_processor\">acpi_processor</a> *<a class=\"id\" href=\"#pr\">pr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a> = 0;", 
"<span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#tpc\">tpc</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pr\">pr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ignore_tpc\">ignore_tpc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end\">end</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_evaluate_integer\">acpi_evaluate_integer</a>(<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#handle\">handle</a>, \"_TPC\", <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#tpc\">tpc</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> != <a class=\"id\" href=\"#AE_NOT_FOUND\">AE_NOT_FOUND</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_EXCEPTION\">ACPI_EXCEPTION</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, <a class=\"id\" href=\"#status\">status</a>, \"Evaluating _TPC\"));", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#end\">end</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling_platform_limit\">throttling_platform_limit</a> = (int)<a class=\"id\" href=\"#tpc\">tpc</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#acpi_processor_tstate_has_changed\">acpi_processor_tstate_has_changed</a>(struct <a class=\"id\" href=\"#acpi_processor\">acpi_processor</a> *<a class=\"id\" href=\"#pr\">pr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#throttling_limit\">throttling_limit</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#current_state\">current_state</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_processor_limit\">acpi_processor_limit</a> *<a class=\"id\" href=\"#limit\">limit</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#target_state\">target_state</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ignore_tpc\">ignore_tpc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#acpi_processor_get_platform_limit\">acpi_processor_get_platform_limit</a>(<a class=\"id\" href=\"#pr\">pr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#result\">result</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Throttling Limit is unsupported */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#throttling_limit\">throttling_limit</a> = <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling_platform_limit\">throttling_platform_limit</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#throttling_limit\">throttling_limit</a> >= <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#state_count\">state_count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Uncorrect Throttling Limit */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current_state\">current_state</a> = <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#state\">state</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#current_state\">current_state</a> &gt; <a class=\"id\" href=\"#throttling_limit\">throttling_limit</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The current state can meet the requirement of</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * _TPC limit. But it is reasonable that OSPM changes</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * t-states from high to low for better performance.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Of course the limit condition of thermal</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * and user should be considered.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#limit\">limit</a> = &amp;<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#limit\">limit</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#target_state\">target_state</a> = <a class=\"id\" href=\"#throttling_limit\">throttling_limit</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#limit\">limit</a>-><a class=\"id\" href=\"#thermal\">thermal</a>.<a class=\"id\" href=\"#tx\">tx</a> &gt; <a class=\"id\" href=\"#target_state\">target_state</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#target_state\">target_state</a> = <a class=\"id\" href=\"#limit\">limit</a>-><a class=\"id\" href=\"#thermal\">thermal</a>.<a class=\"id\" href=\"#tx\">tx</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#limit\">limit</a>-><a class=\"id\" href=\"#user\">user</a>.<a class=\"id\" href=\"#tx\">tx</a> &gt; <a class=\"id\" href=\"#target_state\">target_state</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#target_state\">target_state</a> = <a class=\"id\" href=\"#limit\">limit</a>-><a class=\"id\" href=\"#user\">user</a>.<a class=\"id\" href=\"#tx\">tx</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#current_state\">current_state</a> == <a class=\"id\" href=\"#throttling_limit\">throttling_limit</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Unnecessary to change the throttling state</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If the current state is lower than the limit of _TPC, it</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * will be forced to switch to the throttling state defined</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * by throttling_platfor_limit.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Because the previous state meets with the limit condition</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * of thermal and user, it is unnecessary to check it again.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#target_state\">target_state</a> = <a class=\"id\" href=\"#throttling_limit\">throttling_limit</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#acpi_processor_set_throttling\">acpi_processor_set_throttling</a>(<a class=\"id\" href=\"#pr\">pr</a>, <a class=\"id\" href=\"#target_state\">target_state</a>, <a class=\"id\" href=\"#false\">false</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * _PTC - Processor Throttling Control (and status) register location</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#acpi_processor_get_throttling_control\">acpi_processor_get_throttling_control</a>(struct <a class=\"id\" href=\"#acpi_processor\">acpi_processor</a> *<a class=\"id\" href=\"#pr\">pr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_buffer\">acpi_buffer</a> <a class=\"id\" href=\"#buffer\">buffer</a> = { <a class=\"id\" href=\"#ACPI_ALLOCATE_BUFFER\">ACPI_ALLOCATE_BUFFER</a>, <a class=\"id\" href=\"#NULL\">NULL</a> };", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_object\">acpi_object</a> *<a class=\"id\" href=\"#ptc\">ptc</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_object\">acpi_object</a> <a class=\"id\" href=\"#obj\">obj</a> = { 0 };", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_processor_throttling\">acpi_processor_throttling</a> *<a class=\"id\" href=\"#throttling\">throttling</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_evaluate_object\">acpi_evaluate_object</a>(<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#handle\">handle</a>, \"_PTC\", <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#buffer\">buffer</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> != <a class=\"id\" href=\"#AE_NOT_FOUND\">AE_NOT_FOUND</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_EXCEPTION\">ACPI_EXCEPTION</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, <a class=\"id\" href=\"#status\">status</a>, \"Evaluating _PTC\"));", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ptc\">ptc</a> = (union <a class=\"id\" href=\"#acpi_object\">acpi_object</a> *)<a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ptc\">ptc</a> || (<a class=\"id\" href=\"#ptc\">ptc</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#ACPI_TYPE_PACKAGE\">ACPI_TYPE_PACKAGE</a>)", 
"<span class=\"ts\"/>    || (<a class=\"id\" href=\"#ptc\">ptc</a>-><a class=\"id\" href=\"#package\">package</a>.<a class=\"id\" href=\"#count\">count</a> != 2)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Invalid _PTC data\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * control_register</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#obj\">obj</a> = <a class=\"id\" href=\"#ptc\">ptc</a>-><a class=\"id\" href=\"#package\">package</a>.<a class=\"id\" href=\"#elements\">elements</a>[0];", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#obj\">obj</a>.<a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#ACPI_TYPE_BUFFER\">ACPI_TYPE_BUFFER</a>)", 
"<span class=\"ts\"/>    || (<a class=\"id\" href=\"#obj\">obj</a>.<a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#length\">length</a> &lt; sizeof(struct <a class=\"id\" href=\"#acpi_ptc_register\">acpi_ptc_register</a>))", 
"<span class=\"ts\"/>    || (<a class=\"id\" href=\"#obj\">obj</a>.<a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"Invalid _PTC data (control_register)\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#control_register\">control_register</a>, <a class=\"id\" href=\"#obj\">obj</a>.<a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>,", 
"<span class=\"ts\"/>       sizeof(struct <a class=\"id\" href=\"#acpi_ptc_register\">acpi_ptc_register</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * status_register</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#obj\">obj</a> = <a class=\"id\" href=\"#ptc\">ptc</a>-><a class=\"id\" href=\"#package\">package</a>.<a class=\"id\" href=\"#elements\">elements</a>[1];", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#obj\">obj</a>.<a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#ACPI_TYPE_BUFFER\">ACPI_TYPE_BUFFER</a>)", 
"<span class=\"ts\"/>    || (<a class=\"id\" href=\"#obj\">obj</a>.<a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#length\">length</a> &lt; sizeof(struct <a class=\"id\" href=\"#acpi_ptc_register\">acpi_ptc_register</a>))", 
"<span class=\"ts\"/>    || (<a class=\"id\" href=\"#obj\">obj</a>.<a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Invalid _PTC data (status_register)\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#status_register\">status_register</a>, <a class=\"id\" href=\"#obj\">obj</a>.<a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>,", 
"<span class=\"ts\"/>       sizeof(struct <a class=\"id\" href=\"#acpi_ptc_register\">acpi_ptc_register</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#throttling\">throttling</a> = &amp;<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#throttling\">throttling</a>-><a class=\"id\" href=\"#control_register\">control_register</a>.<a class=\"id\" href=\"#bit_width\">bit_width</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#throttling\">throttling</a>-><a class=\"id\" href=\"#control_register\">control_register</a>.<a class=\"id\" href=\"#bit_offset\">bit_offset</a>) &gt; 32) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Invalid _PTC control register\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#throttling\">throttling</a>-><a class=\"id\" href=\"#status_register\">status_register</a>.<a class=\"id\" href=\"#bit_width\">bit_width</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#throttling\">throttling</a>-><a class=\"id\" href=\"#status_register\">status_register</a>.<a class=\"id\" href=\"#bit_offset\">bit_offset</a>) &gt; 32) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Invalid _PTC status register\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>}", 
"", 
"      <a class=\"id\" href=\"#end\">end</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * _TSS - Throttling Supported States</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#acpi_processor_get_throttling_states\">acpi_processor_get_throttling_states</a>(struct <a class=\"id\" href=\"#acpi_processor\">acpi_processor</a> *<a class=\"id\" href=\"#pr\">pr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_buffer\">acpi_buffer</a> <a class=\"id\" href=\"#buffer\">buffer</a> = { <a class=\"id\" href=\"#ACPI_ALLOCATE_BUFFER\">ACPI_ALLOCATE_BUFFER</a>, <a class=\"id\" href=\"#NULL\">NULL</a> };", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_buffer\">acpi_buffer</a> <a class=\"id\" href=\"#format\">format</a> = { sizeof(\"NNNNN\"), \"NNNNN\" };", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_buffer\">acpi_buffer</a> <a class=\"id\" href=\"#state\">state</a> = { 0, <a class=\"id\" href=\"#NULL\">NULL</a> };", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_object\">acpi_object</a> *<a class=\"id\" href=\"#tss\">tss</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_evaluate_object\">acpi_evaluate_object</a>(<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#handle\">handle</a>, \"_TSS\", <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#buffer\">buffer</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> != <a class=\"id\" href=\"#AE_NOT_FOUND\">AE_NOT_FOUND</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_EXCEPTION\">ACPI_EXCEPTION</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, <a class=\"id\" href=\"#status\">status</a>, \"Evaluating _TSS\"));", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tss\">tss</a> = <a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tss\">tss</a> || (<a class=\"id\" href=\"#tss\">tss</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#ACPI_TYPE_PACKAGE\">ACPI_TYPE_PACKAGE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Invalid _TSS data\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_INFO\">ACPI_DB_INFO</a>, \"Found %d throttling states\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#tss\">tss</a>-><a class=\"id\" href=\"#package\">package</a>.<a class=\"id\" href=\"#count\">count</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#state_count\">state_count</a> = <a class=\"id\" href=\"#tss\">tss</a>-><a class=\"id\" href=\"#package\">package</a>.<a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#states_tss\">states_tss</a> =", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(struct <a class=\"id\" href=\"#acpi_processor_tx_tss\">acpi_processor_tx_tss</a>) * <a class=\"id\" href=\"#tss\">tss</a>-><a class=\"id\" href=\"#package\">package</a>.<a class=\"id\" href=\"#count\">count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#states_tss\">states_tss</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#state_count\">state_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_processor_tx_tss\">acpi_processor_tx_tss</a> *<a class=\"id\" href=\"#tx\">tx</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    (struct <a class=\"id\" href=\"#acpi_processor_tx_tss\">acpi_processor_tx_tss</a> *)&amp;(<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#states_tss\">states_tss</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>.<a class=\"id\" href=\"#length\">length</a> = sizeof(struct <a class=\"id\" href=\"#acpi_processor_tx_tss\">acpi_processor_tx_tss</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>.<a class=\"id\" href=\"#pointer\">pointer</a> = <a class=\"id\" href=\"#tx\">tx</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_INFO\">ACPI_DB_INFO</a>, \"Extracting state %d\\n\", <a class=\"id\" href=\"#i\">i</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_extract_package\">acpi_extract_package</a>(&amp;(<a class=\"id\" href=\"#tss\">tss</a>-><a class=\"id\" href=\"#package\">package</a>.<a class=\"id\" href=\"#elements\">elements</a>[<a class=\"id\" href=\"#i\">i</a>]),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      &amp;<a class=\"id\" href=\"#format\">format</a>, &amp;<a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_EXCEPTION\">ACPI_EXCEPTION</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, <a class=\"id\" href=\"#status\">status</a>, \"Invalid _TSS data\"));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#states_tss\">states_tss</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tx\">tx</a>-><a class=\"id\" href=\"#freqpercentage\">freqpercentage</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"Invalid _TSS data: freq is zero\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#states_tss\">states_tss</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"      <a class=\"id\" href=\"#end\">end</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * _TSD - T-State Dependencies</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#acpi_processor_get_tsd\">acpi_processor_get_tsd</a>(struct <a class=\"id\" href=\"#acpi_processor\">acpi_processor</a> *<a class=\"id\" href=\"#pr\">pr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_buffer\">acpi_buffer</a> <a class=\"id\" href=\"#buffer\">buffer</a> = { <a class=\"id\" href=\"#ACPI_ALLOCATE_BUFFER\">ACPI_ALLOCATE_BUFFER</a>, <a class=\"id\" href=\"#NULL\">NULL</a> };", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_buffer\">acpi_buffer</a> <a class=\"id\" href=\"#format\">format</a> = { sizeof(\"NNNNN\"), \"NNNNN\" };", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_buffer\">acpi_buffer</a> <a class=\"id\" href=\"#state\">state</a> = { 0, <a class=\"id\" href=\"#NULL\">NULL</a> };", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_object\">acpi_object</a> *<a class=\"id\" href=\"#tsd\">tsd</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_tsd_package\">acpi_tsd_package</a> *<a class=\"id\" href=\"#pdomain\">pdomain</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_processor_throttling\">acpi_processor_throttling</a> *<a class=\"id\" href=\"#pthrottling\">pthrottling</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pthrottling\">pthrottling</a> = &amp;<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pthrottling\">pthrottling</a>-><a class=\"id\" href=\"#tsd_valid_flag\">tsd_valid_flag</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_evaluate_object\">acpi_evaluate_object</a>(<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#handle\">handle</a>, \"_TSD\", <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#buffer\">buffer</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> != <a class=\"id\" href=\"#AE_NOT_FOUND\">AE_NOT_FOUND</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_EXCEPTION\">ACPI_EXCEPTION</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, <a class=\"id\" href=\"#status\">status</a>, \"Evaluating _TSD\"));", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tsd\">tsd</a> = <a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tsd\">tsd</a> || (<a class=\"id\" href=\"#tsd\">tsd</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#ACPI_TYPE_PACKAGE\">ACPI_TYPE_PACKAGE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Invalid _TSD data\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tsd\">tsd</a>-><a class=\"id\" href=\"#package\">package</a>.<a class=\"id\" href=\"#count\">count</a> != 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Invalid _TSD data\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pdomain\">pdomain</a> = &amp;(<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#domain_info\">domain_info</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>.<a class=\"id\" href=\"#length\">length</a> = sizeof(struct <a class=\"id\" href=\"#acpi_tsd_package\">acpi_tsd_package</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>.<a class=\"id\" href=\"#pointer\">pointer</a> = <a class=\"id\" href=\"#pdomain\">pdomain</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_extract_package\">acpi_extract_package</a>(&amp;(<a class=\"id\" href=\"#tsd\">tsd</a>-><a class=\"id\" href=\"#package\">package</a>.<a class=\"id\" href=\"#elements\">elements</a>[0]),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      &amp;<a class=\"id\" href=\"#format\">format</a>, &amp;<a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Invalid _TSD data\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pdomain\">pdomain</a>-><a class=\"id\" href=\"#num_entries\">num_entries</a> != <a class=\"id\" href=\"#ACPI_TSD_REV0_ENTRIES\">ACPI_TSD_REV0_ENTRIES</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Unknown _TSD:num_entries\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pdomain\">pdomain</a>-><a class=\"id\" href=\"#revision\">revision</a> != <a class=\"id\" href=\"#ACPI_TSD_REV0_REVISION\">ACPI_TSD_REV0_REVISION</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Unknown _TSD:revision\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pthrottling\">pthrottling</a> = &amp;<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pthrottling\">pthrottling</a>-><a class=\"id\" href=\"#tsd_valid_flag\">tsd_valid_flag</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pthrottling\">pthrottling</a>-><a class=\"id\" href=\"#shared_type\">shared_type</a> = <a class=\"id\" href=\"#pdomain\">pdomain</a>-><a class=\"id\" href=\"#coord_type\">coord_type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpumask_set_cpu\">cpumask_set_cpu</a>(<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#pthrottling\">pthrottling</a>-><a class=\"id\" href=\"#shared_cpu_map\">shared_cpu_map</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the coordination type is not defined in ACPI spec,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the tsd_valid_flag will be clear and coordination type</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * will be forecd as DOMAIN_COORD_TYPE_SW_ALL.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pdomain\">pdomain</a>-><a class=\"id\" href=\"#coord_type\">coord_type</a> != <a class=\"id\" href=\"#DOMAIN_COORD_TYPE_SW_ALL\">DOMAIN_COORD_TYPE_SW_ALL</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pdomain\">pdomain</a>-><a class=\"id\" href=\"#coord_type\">coord_type</a> != <a class=\"id\" href=\"#DOMAIN_COORD_TYPE_SW_ANY\">DOMAIN_COORD_TYPE_SW_ANY</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pdomain\">pdomain</a>-><a class=\"id\" href=\"#coord_type\">coord_type</a> != <a class=\"id\" href=\"#DOMAIN_COORD_TYPE_HW_ALL\">DOMAIN_COORD_TYPE_HW_ALL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pthrottling\">pthrottling</a>-><a class=\"id\" href=\"#tsd_valid_flag\">tsd_valid_flag</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pthrottling\">pthrottling</a>-><a class=\"id\" href=\"#shared_type\">shared_type</a> = <a class=\"id\" href=\"#DOMAIN_COORD_TYPE_SW_ALL\">DOMAIN_COORD_TYPE_SW_ALL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"      <a class=\"id\" href=\"#end\">end</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"}", 
"", 
"<span class=\"comment\">/* --------------------------------------------------------------------------</span>", 
"<span class=\"comment\">                              Throttling Control</span>", 
"<span class=\"comment\">   -------------------------------------------------------------------------- */</span>", 
"static int <a class=\"id\" href=\"#acpi_processor_get_throttling_fadt\">acpi_processor_get_throttling_fadt</a>(struct <a class=\"id\" href=\"#acpi_processor\">acpi_processor</a> *<a class=\"id\" href=\"#pr\">pr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#state\">state</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#value\">value</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#duty_mask\">duty_mask</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#duty_value\">duty_value</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pr\">pr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#flags\">flags</a>.<a class=\"id\" href=\"#throttling\">throttling</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#state\">state</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#duty_mask\">duty_mask</a> = <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#state_count\">state_count</a> - 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#duty_mask\">duty_mask</a> <<= <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#duty_offset\">duty_offset</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_disable\">local_irq_disable</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#inl\">inl</a>(<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#address\">address</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Compute the current throttling state when throttling is enabled</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * (bit 4 is on).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#value\">value</a> &amp; 0x10) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#duty_value\">duty_value</a> = <a class=\"id\" href=\"#value\">value</a> &amp; <a class=\"id\" href=\"#duty_mask\">duty_mask</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#duty_value\">duty_value</a> >>= <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#duty_offset\">duty_offset</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#duty_value\">duty_value</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#state_count\">state_count</a> - <a class=\"id\" href=\"#duty_value\">duty_value</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#state\">state</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_enable\">local_irq_enable</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_INFO\">ACPI_DB_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"Throttling state is T%d (%d%% throttling applied)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#state\">state</a>, <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#states\">states</a>[<a class=\"id\" href=\"#state\">state</a>].<a class=\"id\" href=\"#performance\">performance</a>));", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86\">CONFIG_X86</a>", 
"static int <a class=\"id\" href=\"#acpi_throttling_rdmsr\">acpi_throttling_rdmsr</a>(struct <a class=\"id\" href=\"#acpi_processor\">acpi_processor</a> *<a class=\"id\" href=\"#pr\">pr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> *<a class=\"id\" href=\"#value\">value</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> *<a class=\"id\" href=\"#c\">c</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#msr_high\">msr_high</a>, <a class=\"id\" href=\"#msr_low\">msr_low</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#msr\">msr</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = &amp;<a class=\"id\" href=\"#cpu_data\">cpu_data</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_vendor\">x86_vendor</a> != <a class=\"id\" href=\"#X86_VENDOR_INTEL\">X86_VENDOR_INTEL</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>!<a class=\"id\" href=\"#cpu_has\">cpu_has</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#X86_FEATURE_ACPI\">X86_FEATURE_ACPI</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"HARDWARE addr space,NOT supported yet\\n\");", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msr_low\">msr_low</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msr_high\">msr_high</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rdmsr_safe\">rdmsr_safe</a>(<a class=\"id\" href=\"#MSR_IA32_THERM_CONTROL\">MSR_IA32_THERM_CONTROL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#u32\">u32</a> *)&amp;<a class=\"id\" href=\"#msr_low\">msr_low</a> , (<a class=\"id\" href=\"#u32\">u32</a> *) &amp;<a class=\"id\" href=\"#msr_high\">msr_high</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msr\">msr</a> = (<a class=\"id\" href=\"#msr_high\">msr_high</a> << 32) | <a class=\"id\" href=\"#msr_low\">msr_low</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#value\">value</a> = (<a class=\"id\" href=\"#u64\">u64</a>) <a class=\"id\" href=\"#msr\">msr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#acpi_throttling_wrmsr\">acpi_throttling_wrmsr</a>(struct <a class=\"id\" href=\"#acpi_processor\">acpi_processor</a> *<a class=\"id\" href=\"#pr\">pr</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#value\">value</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> *<a class=\"id\" href=\"#c\">c</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#msr\">msr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = &amp;<a class=\"id\" href=\"#cpu_data\">cpu_data</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_vendor\">x86_vendor</a> != <a class=\"id\" href=\"#X86_VENDOR_INTEL\">X86_VENDOR_INTEL</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>!<a class=\"id\" href=\"#cpu_has\">cpu_has</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#X86_FEATURE_ACPI\">X86_FEATURE_ACPI</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"HARDWARE addr space,NOT supported yet\\n\");", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msr\">msr</a> = <a class=\"id\" href=\"#value\">value</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wrmsr_safe\">wrmsr_safe</a>(<a class=\"id\" href=\"#MSR_IA32_THERM_CONTROL\">MSR_IA32_THERM_CONTROL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msr\">msr</a> &amp; 0xffffffff, <a class=\"id\" href=\"#msr\">msr</a> >> 32);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"#else", 
"static int <a class=\"id\" href=\"#acpi_throttling_rdmsr\">acpi_throttling_rdmsr</a>(struct <a class=\"id\" href=\"#acpi_processor\">acpi_processor</a> *<a class=\"id\" href=\"#pr\">pr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> *<a class=\"id\" href=\"#value\">value</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>\"HARDWARE addr space,NOT supported yet\\n\");", 
"<span class=\"ts\"/>return -1;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#acpi_throttling_wrmsr\">acpi_throttling_wrmsr</a>(struct <a class=\"id\" href=\"#acpi_processor\">acpi_processor</a> *<a class=\"id\" href=\"#pr\">pr</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#value\">value</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>\"HARDWARE addr space,NOT supported yet\\n\");", 
"<span class=\"ts\"/>return -1;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static int <a class=\"id\" href=\"#acpi_read_throttling_status\">acpi_read_throttling_status</a>(struct <a class=\"id\" href=\"#acpi_processor\">acpi_processor</a> *<a class=\"id\" href=\"#pr\">pr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> *<a class=\"id\" href=\"#value\">value</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#bit_width\">bit_width</a>, <a class=\"id\" href=\"#bit_offset\">bit_offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#ptc_value\">ptc_value</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#ptc_mask\">ptc_mask</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_processor_throttling\">acpi_processor_throttling</a> *<a class=\"id\" href=\"#throttling\">throttling</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#throttling\">throttling</a> = &amp;<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>;", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#throttling\">throttling</a>-><a class=\"id\" href=\"#status_register\">status_register</a>.<a class=\"id\" href=\"#space_id\">space_id</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_ADR_SPACE_SYSTEM_IO\">ACPI_ADR_SPACE_SYSTEM_IO</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ptc_value\">ptc_value</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bit_width\">bit_width</a> = <a class=\"id\" href=\"#throttling\">throttling</a>-><a class=\"id\" href=\"#status_register\">status_register</a>.<a class=\"id\" href=\"#bit_width\">bit_width</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bit_offset\">bit_offset</a> = <a class=\"id\" href=\"#throttling\">throttling</a>-><a class=\"id\" href=\"#status_register\">status_register</a>.<a class=\"id\" href=\"#bit_offset\">bit_offset</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_os_read_port\">acpi_os_read_port</a>((<a class=\"id\" href=\"#acpi_io_address\">acpi_io_address</a>) <a class=\"id\" href=\"#throttling\">throttling</a>-><a class=\"id\" href=\"#status_register\">status_register</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#address\">address</a>, (<a class=\"id\" href=\"#u32\">u32</a> *) &amp;<a class=\"id\" href=\"#ptc_value\">ptc_value</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (<a class=\"id\" href=\"#u32\">u32</a>) (<a class=\"id\" href=\"#bit_width\">bit_width</a> + <a class=\"id\" href=\"#bit_offset\">bit_offset</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ptc_mask\">ptc_mask</a> = (1 << <a class=\"id\" href=\"#bit_width\">bit_width</a>) - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#value\">value</a> = (<a class=\"id\" href=\"#u64\">u64</a>) ((<a class=\"id\" href=\"#ptc_value\">ptc_value</a> >> <a class=\"id\" href=\"#bit_offset\">bit_offset</a>) &amp; <a class=\"id\" href=\"#ptc_mask\">ptc_mask</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_ADR_SPACE_FIXED_HARDWARE\">ACPI_ADR_SPACE_FIXED_HARDWARE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#acpi_throttling_rdmsr\">acpi_throttling_rdmsr</a>(<a class=\"id\" href=\"#pr\">pr</a>, <a class=\"id\" href=\"#value\">value</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Unknown addr space %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#u32\">u32</a>) (<a class=\"id\" href=\"#throttling\">throttling</a>-><a class=\"id\" href=\"#status_register\">status_register</a>.<a class=\"id\" href=\"#space_id\">space_id</a>));", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#acpi_write_throttling_state\">acpi_write_throttling_state</a>(struct <a class=\"id\" href=\"#acpi_processor\">acpi_processor</a> *<a class=\"id\" href=\"#pr\">pr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#value\">value</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#bit_width\">bit_width</a>, <a class=\"id\" href=\"#bit_offset\">bit_offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#ptc_value\">ptc_value</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#ptc_mask\">ptc_mask</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_processor_throttling\">acpi_processor_throttling</a> *<a class=\"id\" href=\"#throttling\">throttling</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#throttling\">throttling</a> = &amp;<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>;", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#throttling\">throttling</a>-><a class=\"id\" href=\"#control_register\">control_register</a>.<a class=\"id\" href=\"#space_id\">space_id</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_ADR_SPACE_SYSTEM_IO\">ACPI_ADR_SPACE_SYSTEM_IO</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bit_width\">bit_width</a> = <a class=\"id\" href=\"#throttling\">throttling</a>-><a class=\"id\" href=\"#control_register\">control_register</a>.<a class=\"id\" href=\"#bit_width\">bit_width</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bit_offset\">bit_offset</a> = <a class=\"id\" href=\"#throttling\">throttling</a>-><a class=\"id\" href=\"#control_register\">control_register</a>.<a class=\"id\" href=\"#bit_offset\">bit_offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ptc_mask\">ptc_mask</a> = (1 << <a class=\"id\" href=\"#bit_width\">bit_width</a>) - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ptc_value\">ptc_value</a> = <a class=\"id\" href=\"#value\">value</a> &amp; <a class=\"id\" href=\"#ptc_mask\">ptc_mask</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_os_write_port\">acpi_os_write_port</a>((<a class=\"id\" href=\"#acpi_io_address\">acpi_io_address</a>) <a class=\"id\" href=\"#throttling\">throttling</a>->", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#control_register\">control_register</a>.<a class=\"id\" href=\"#address\">address</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#u32\">u32</a>) (<a class=\"id\" href=\"#ptc_value\">ptc_value</a> << <a class=\"id\" href=\"#bit_offset\">bit_offset</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#u32\">u32</a>) (<a class=\"id\" href=\"#bit_width\">bit_width</a> + <a class=\"id\" href=\"#bit_offset\">bit_offset</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_ADR_SPACE_FIXED_HARDWARE\">ACPI_ADR_SPACE_FIXED_HARDWARE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#acpi_throttling_wrmsr\">acpi_throttling_wrmsr</a>(<a class=\"id\" href=\"#pr\">pr</a>, <a class=\"id\" href=\"#value\">value</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Unknown addr space %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#u32\">u32</a>) (<a class=\"id\" href=\"#throttling\">throttling</a>-><a class=\"id\" href=\"#control_register\">control_register</a>.<a class=\"id\" href=\"#space_id\">space_id</a>));", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#acpi_get_throttling_state\">acpi_get_throttling_state</a>(struct <a class=\"id\" href=\"#acpi_processor\">acpi_processor</a> *<a class=\"id\" href=\"#pr\">pr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#value\">value</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#state_count\">state_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_processor_tx_tss\">acpi_processor_tx_tss</a> *<a class=\"id\" href=\"#tx\">tx</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    (struct <a class=\"id\" href=\"#acpi_processor_tx_tss\">acpi_processor_tx_tss</a> *)&amp;(<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#states_tss\">states_tss</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tx\">tx</a>-><a class=\"id\" href=\"#control\">control</a> == <a class=\"id\" href=\"#value\">value</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return -1;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#acpi_get_throttling_value\">acpi_get_throttling_value</a>(struct <a class=\"id\" href=\"#acpi_processor\">acpi_processor</a> *<a class=\"id\" href=\"#pr\">pr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#state\">state</a>, <a class=\"id\" href=\"#u64\">u64</a> *<a class=\"id\" href=\"#value\">value</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a> >= 0 && <a class=\"id\" href=\"#state\">state</a> <= <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#state_count\">state_count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_processor_tx_tss\">acpi_processor_tx_tss</a> *<a class=\"id\" href=\"#tx\">tx</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    (struct <a class=\"id\" href=\"#acpi_processor_tx_tss\">acpi_processor_tx_tss</a> *)&amp;(<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#states_tss\">states_tss</a>[<a class=\"id\" href=\"#state\">state</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#tx\">tx</a>-><a class=\"id\" href=\"#control\">control</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#acpi_processor_get_throttling_ptc\">acpi_processor_get_throttling_ptc</a>(struct <a class=\"id\" href=\"#acpi_processor\">acpi_processor</a> *<a class=\"id\" href=\"#pr\">pr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#state\">state</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#value\">value</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pr\">pr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#flags\">flags</a>.<a class=\"id\" href=\"#throttling\">throttling</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#state\">state</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#value\">value</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#acpi_read_throttling_status\">acpi_read_throttling_status</a>(<a class=\"id\" href=\"#pr\">pr</a>, &amp;<a class=\"id\" href=\"#value\">value</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> >= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#acpi_get_throttling_state\">acpi_get_throttling_state</a>(<a class=\"id\" href=\"#pr\">pr</a>, <a class=\"id\" href=\"#value\">value</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a> == -1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_INFO\">ACPI_DB_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"Invalid throttling state, reset\\n\"));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#acpi_processor_set_throttling\">acpi_processor_set_throttling</a>(<a class=\"id\" href=\"#pr\">pr</a>, <a class=\"id\" href=\"#state\">state</a>, <a class=\"id\" href=\"#true\">true</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#state\">state</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#acpi_processor_get_throttling\">acpi_processor_get_throttling</a>(struct <a class=\"id\" href=\"#acpi_processor\">acpi_processor</a> *<a class=\"id\" href=\"#pr\">pr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpumask_var_t\">cpumask_var_t</a> <a class=\"id\" href=\"#saved_mask\">saved_mask</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pr\">pr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#flags\">flags</a>.<a class=\"id\" href=\"#throttling\">throttling</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#alloc_cpumask_var\">alloc_cpumask_var</a>(&amp;<a class=\"id\" href=\"#saved_mask\">saved_mask</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Migrate task to the cpu pointed by pr.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpumask_copy\">cpumask_copy</a>(<a class=\"id\" href=\"#saved_mask\">saved_mask</a>, &amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#cpus_allowed\">cpus_allowed</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* FIXME: use work_on_cpu() */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_cpus_allowed_ptr\">set_cpus_allowed_ptr</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#cpumask_of\">cpumask_of</a>(<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#id\">id</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#acpi_processor_get_throttling\">acpi_processor_get_throttling</a>(<a class=\"id\" href=\"#pr\">pr</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* restore the previous state */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_cpus_allowed_ptr\">set_cpus_allowed_ptr</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#saved_mask\">saved_mask</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_cpumask_var\">free_cpumask_var</a>(<a class=\"id\" href=\"#saved_mask\">saved_mask</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#acpi_processor_get_fadt_info\">acpi_processor_get_fadt_info</a>(struct <a class=\"id\" href=\"#acpi_processor\">acpi_processor</a> *<a class=\"id\" href=\"#pr\">pr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#step\">step</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#address\">address</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_INFO\">ACPI_DB_INFO</a>, \"No throttling register\\n\"));", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#duty_width\">duty_width</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_INFO\">ACPI_DB_INFO</a>, \"No throttling states\\n\"));", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* TBD: Support duty_cycle values that span bit 4. */</span>", 
"<span class=\"ts\"/>else if ((<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#duty_offset\">duty_offset</a> + <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#duty_width\">duty_width</a>) &gt; 4) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"duty_cycle spans bit 4\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#state_count\">state_count</a> = 1 << <a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#duty_width\">duty_width</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Compute state values. Note that throttling displays a linear power</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * performance relationship (at 50% performance the CPU will consume</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 50% power).  Values are in 1/10th of a percent to preserve accuracy.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#step\">step</a> = (1000 / <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#state_count\">state_count</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#state_count\">state_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#states\">states</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#performance\">performance</a> = 1000 - <a class=\"id\" href=\"#step\">step</a> * <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#states\">states</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#power\">power</a> = 1000 - <a class=\"id\" href=\"#step\">step</a> * <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#acpi_processor_set_throttling_fadt\">acpi_processor_set_throttling_fadt</a>(struct <a class=\"id\" href=\"#acpi_processor\">acpi_processor</a> *<a class=\"id\" href=\"#pr\">pr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      int <a class=\"id\" href=\"#state\">state</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#force\">force</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#value\">value</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#duty_mask\">duty_mask</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#duty_value\">duty_value</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pr\">pr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#state\">state</a> &lt; 0) || (<a class=\"id\" href=\"#state\">state</a> &gt; (<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#state_count\">state_count</a> - 1)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#flags\">flags</a>.<a class=\"id\" href=\"#throttling\">throttling</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#force\">force</a> && (<a class=\"id\" href=\"#state\">state</a> == <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#state\">state</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a> &lt; <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling_platform_limit\">throttling_platform_limit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Calculate the duty_value and duty_mask.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#duty_value\">duty_value</a> = <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#state_count\">state_count</a> - <a class=\"id\" href=\"#state\">state</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#duty_value\">duty_value</a> <<= <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#duty_offset\">duty_offset</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Used to clear all duty_value bits */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#duty_mask\">duty_mask</a> = <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#state_count\">state_count</a> - 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#duty_mask\">duty_mask</a> <<= <a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#duty_offset\">duty_offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#duty_mask\">duty_mask</a> = ~<a class=\"id\" href=\"#duty_mask\">duty_mask</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_disable\">local_irq_disable</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Disable throttling by writing a 0 to bit 4.  Note that we must</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * turn it off before you can change the duty_value.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#inl\">inl</a>(<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#address\">address</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#value\">value</a> &amp; 0x10) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#value\">value</a> &= 0xFFFFFFEF;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outl\">outl</a>(<a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#address\">address</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Write the new duty_value and then enable throttling.  Note</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * that a state value of 0 leaves throttling disabled.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#value\">value</a> &= <a class=\"id\" href=\"#duty_mask\">duty_mask</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#value\">value</a> |= <a class=\"id\" href=\"#duty_value\">duty_value</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outl\">outl</a>(<a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#address\">address</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#value\">value</a> |= 0x00000010;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outl\">outl</a>(<a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#address\">address</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#state\">state</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_enable\">local_irq_enable</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_INFO\">ACPI_DB_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"Throttling state set to T%d (%d%%)\\n\", <a class=\"id\" href=\"#state\">state</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#states\">states</a>[<a class=\"id\" href=\"#state\">state</a>].<a class=\"id\" href=\"#performance\">performance</a> ? <a class=\"id\" href=\"#pr\">pr</a>->", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#states\">states</a>[<a class=\"id\" href=\"#state\">state</a>].<a class=\"id\" href=\"#performance\">performance</a> / 10 : 0)));", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#acpi_processor_set_throttling_ptc\">acpi_processor_set_throttling_ptc</a>(struct <a class=\"id\" href=\"#acpi_processor\">acpi_processor</a> *<a class=\"id\" href=\"#pr\">pr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     int <a class=\"id\" href=\"#state\">state</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#force\">force</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#value\">value</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pr\">pr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#state\">state</a> &lt; 0) || (<a class=\"id\" href=\"#state\">state</a> &gt; (<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#state_count\">state_count</a> - 1)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#flags\">flags</a>.<a class=\"id\" href=\"#throttling\">throttling</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#force\">force</a> && (<a class=\"id\" href=\"#state\">state</a> == <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#state\">state</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a> &lt; <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling_platform_limit\">throttling_platform_limit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#value\">value</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#acpi_get_throttling_value\">acpi_get_throttling_value</a>(<a class=\"id\" href=\"#pr\">pr</a>, <a class=\"id\" href=\"#state\">state</a>, &amp;<a class=\"id\" href=\"#value\">value</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> >= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_write_throttling_state\">acpi_write_throttling_state</a>(<a class=\"id\" href=\"#pr\">pr</a>, <a class=\"id\" href=\"#value\">value</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#state\">state</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#acpi_processor_set_throttling\">acpi_processor_set_throttling</a>(struct <a class=\"id\" href=\"#acpi_processor\">acpi_processor</a> *<a class=\"id\" href=\"#pr\">pr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#state\">state</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#force\">force</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpumask_var_t\">cpumask_var_t</a> <a class=\"id\" href=\"#saved_mask\">saved_mask</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_processor\">acpi_processor</a> *<a class=\"id\" href=\"#match_pr\">match_pr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_processor_throttling\">acpi_processor_throttling</a> *<a class=\"id\" href=\"#p_throttling\">p_throttling</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#throttling_tstate\">throttling_tstate</a> <a class=\"id\" href=\"#t_state\">t_state</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpumask_var_t\">cpumask_var_t</a> <a class=\"id\" href=\"#online_throttling_cpus\">online_throttling_cpus</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pr\">pr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#flags\">flags</a>.<a class=\"id\" href=\"#throttling\">throttling</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#state\">state</a> &lt; 0) || (<a class=\"id\" href=\"#state\">state</a> &gt; (<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#state_count\">state_count</a> - 1)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#alloc_cpumask_var\">alloc_cpumask_var</a>(&amp;<a class=\"id\" href=\"#saved_mask\">saved_mask</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#alloc_cpumask_var\">alloc_cpumask_var</a>(&amp;<a class=\"id\" href=\"#online_throttling_cpus\">online_throttling_cpus</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_cpumask_var\">free_cpumask_var</a>(<a class=\"id\" href=\"#saved_mask\">saved_mask</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpumask_copy\">cpumask_copy</a>(<a class=\"id\" href=\"#saved_mask\">saved_mask</a>, &amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#cpus_allowed\">cpus_allowed</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#t_state\">t_state</a>.<a class=\"id\" href=\"#target_state\">target_state</a> = <a class=\"id\" href=\"#state\">state</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p_throttling\">p_throttling</a> = &amp;(<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpumask_and\">cpumask_and</a>(<a class=\"id\" href=\"#online_throttling_cpus\">online_throttling_cpus</a>, <a class=\"id\" href=\"#cpu_online_mask\">cpu_online_mask</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#p_throttling\">p_throttling</a>-><a class=\"id\" href=\"#shared_cpu_map\">shared_cpu_map</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The throttling notifier will be called for every</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * affected cpu in order to get one proper T-state.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The notifier event is THROTTLING_PRECHANGE.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_cpu\">for_each_cpu</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#online_throttling_cpus\">online_throttling_cpus</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t_state\">t_state</a>.<a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_processor_throttling_notifier\">acpi_processor_throttling_notifier</a>(<a class=\"id\" href=\"#THROTTLING_PRECHANGE\">THROTTLING_PRECHANGE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#t_state\">t_state</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The function of acpi_processor_set_throttling will be called</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to switch T-state. If the coordination type is SW_ALL or HW_ALL,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * it is necessary to call it for every affected cpu. Otherwise</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * it can be called only for the cpu pointed by pr.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p_throttling\">p_throttling</a>-><a class=\"id\" href=\"#shared_type\">shared_type</a> == <a class=\"id\" href=\"#DOMAIN_COORD_TYPE_SW_ANY\">DOMAIN_COORD_TYPE_SW_ANY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* FIXME: use work_on_cpu() */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_cpus_allowed_ptr\">set_cpus_allowed_ptr</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#cpumask_of\">cpumask_of</a>(<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#id\">id</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#p_throttling\">p_throttling</a>-><a class=\"id\" href=\"#acpi_processor_set_throttling\">acpi_processor_set_throttling</a>(<a class=\"id\" href=\"#pr\">pr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t_state\">t_state</a>.<a class=\"id\" href=\"#target_state\">target_state</a>, <a class=\"id\" href=\"#force\">force</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * When the T-state coordination is SW_ALL or HW_ALL,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * it is necessary to set T-state for every affected</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * cpus.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#for_each_cpu\">for_each_cpu</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#online_throttling_cpus\">online_throttling_cpus</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#match_pr\">match_pr</a> = <a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#processors\">processors</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * If the pointer is invalid, we will report the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * error message and continue.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#match_pr\">match_pr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_INFO\">ACPI_DB_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"Invalid Pointer for CPU %d\\n\", <a class=\"id\" href=\"#i\">i</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * If the throttling control is unsupported on CPU i,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * we will report the error message and continue.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#match_pr\">match_pr</a>-><a class=\"id\" href=\"#flags\">flags</a>.<a class=\"id\" href=\"#throttling\">throttling</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_INFO\">ACPI_DB_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"Throttling Controll is unsupported \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"on CPU %d\\n\", <a class=\"id\" href=\"#i\">i</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t_state\">t_state</a>.<a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* FIXME: use work_on_cpu() */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_cpus_allowed_ptr\">set_cpus_allowed_ptr</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#cpumask_of\">cpumask_of</a>(<a class=\"id\" href=\"#i\">i</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#match_pr\">match_pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_processor_set_throttling\">acpi_processor_set_throttling</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#match_pr\">match_pr</a>, <a class=\"id\" href=\"#t_state\">t_state</a>.<a class=\"id\" href=\"#target_state\">target_state</a>, <a class=\"id\" href=\"#force\">force</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * After the set_throttling is called, the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * throttling notifier is called for every</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * affected cpu to update the T-states.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The notifier event is THROTTLING_POSTCHANGE</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_cpu\">for_each_cpu</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#online_throttling_cpus\">online_throttling_cpus</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t_state\">t_state</a>.<a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_processor_throttling_notifier\">acpi_processor_throttling_notifier</a>(<a class=\"id\" href=\"#THROTTLING_POSTCHANGE\">THROTTLING_POSTCHANGE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#t_state\">t_state</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* restore the previous state */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* FIXME: use work_on_cpu() */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_cpus_allowed_ptr\">set_cpus_allowed_ptr</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#saved_mask\">saved_mask</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_cpumask_var\">free_cpumask_var</a>(<a class=\"id\" href=\"#online_throttling_cpus\">online_throttling_cpus</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_cpumask_var\">free_cpumask_var</a>(<a class=\"id\" href=\"#saved_mask\">saved_mask</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#acpi_processor_get_throttling_info\">acpi_processor_get_throttling_info</a>(struct <a class=\"id\" href=\"#acpi_processor\">acpi_processor</a> *<a class=\"id\" href=\"#pr\">pr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_processor_throttling\">acpi_processor_throttling</a> *<a class=\"id\" href=\"#pthrottling\">pthrottling</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_INFO\">ACPI_DB_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"pblk_address[0x%08x] duty_offset[%d] duty_width[%d]\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#address\">address</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#duty_offset\">duty_offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#duty_width\">duty_width</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Evaluate _PTC, _TSS and _TPC</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * They must all be present or none of them can be used.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_processor_get_throttling_control\">acpi_processor_get_throttling_control</a>(<a class=\"id\" href=\"#pr\">pr</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_processor_get_throttling_states\">acpi_processor_get_throttling_states</a>(<a class=\"id\" href=\"#pr\">pr</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_processor_get_platform_limit\">acpi_processor_get_platform_limit</a>(<a class=\"id\" href=\"#pr\">pr</a>))", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#acpi_processor_get_throttling\">acpi_processor_get_throttling</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    &amp;<a class=\"id\" href=\"#acpi_processor_get_throttling_fadt\">acpi_processor_get_throttling_fadt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#acpi_processor_set_throttling\">acpi_processor_set_throttling</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    &amp;<a class=\"id\" href=\"#acpi_processor_set_throttling_fadt\">acpi_processor_set_throttling_fadt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_processor_get_fadt_info\">acpi_processor_get_fadt_info</a>(<a class=\"id\" href=\"#pr\">pr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#acpi_processor_get_throttling\">acpi_processor_get_throttling</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    &amp;<a class=\"id\" href=\"#acpi_processor_get_throttling_ptc\">acpi_processor_get_throttling_ptc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#acpi_processor_set_throttling\">acpi_processor_set_throttling</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    &amp;<a class=\"id\" href=\"#acpi_processor_set_throttling_ptc\">acpi_processor_set_throttling_ptc</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If TSD package for one CPU can't be parsed successfully, it means</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * that this CPU will have no coordination with other CPUs.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_processor_get_tsd\">acpi_processor_get_tsd</a>(<a class=\"id\" href=\"#pr\">pr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pthrottling\">pthrottling</a> = &amp;<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pthrottling\">pthrottling</a>-><a class=\"id\" href=\"#tsd_valid_flag\">tsd_valid_flag</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpumask_set_cpu\">cpumask_set_cpu</a>(<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#pthrottling\">pthrottling</a>-><a class=\"id\" href=\"#shared_cpu_map\">shared_cpu_map</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pthrottling\">pthrottling</a>-><a class=\"id\" href=\"#shared_type\">shared_type</a> = <a class=\"id\" href=\"#DOMAIN_COORD_TYPE_SW_ALL\">DOMAIN_COORD_TYPE_SW_ALL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * PIIX4 Errata: We don't support throttling on the original PIIX4.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This shouldn't be an issue as few (if any) mobile systems ever</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * used this part.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#errata\">errata</a>.<a class=\"id\" href=\"#piix4\">piix4</a>.<a class=\"id\" href=\"#throttle\">throttle</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_INFO\">ACPI_DB_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"Throttling not supported on PIIX4 A- or B-step\\n\"));", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_INFO\">ACPI_DB_INFO</a>, \"Found %d throttling states\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#state_count\">state_count</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#flags\">flags</a>.<a class=\"id\" href=\"#throttling\">throttling</a> = 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Disable throttling (if enabled).  We'll let subsequent policy (e.g.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * thermal) decide to lower performance if it so chooses, but for now</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we'll crank up the speed.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#acpi_processor_get_throttling\">acpi_processor_get_throttling</a>(<a class=\"id\" href=\"#pr\">pr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#result\">result</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end\">end</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#state\">state</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_INFO\">ACPI_DB_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"Disabling throttling (was T%d)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#state\">state</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#acpi_processor_set_throttling\">acpi_processor_set_throttling</a>(<a class=\"id\" href=\"#pr\">pr</a>, 0, <a class=\"id\" href=\"#false\">false</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#result\">result</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>}", 
"", 
"      <a class=\"id\" href=\"#end\">end</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#result\">result</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#flags\">flags</a>.<a class=\"id\" href=\"#throttling\">throttling</a> = 0;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"}", 
"", 
"<span class=\"comment\">/* proc interface */</span>", 
"static int <a class=\"id\" href=\"#acpi_processor_throttling_seq_show\">acpi_processor_throttling_seq_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      void *<a class=\"id\" href=\"#offset\">offset</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_processor\">acpi_processor</a> *<a class=\"id\" href=\"#pr\">pr</a> = <a class=\"id\" href=\"#seq\">seq</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pr\">pr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end\">end</a>;", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#state_count\">state_count</a> &gt; 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"<not supported>\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#acpi_processor_get_throttling\">acpi_processor_get_throttling</a>(<a class=\"id\" href=\"#pr\">pr</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#result\">result</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"Could not determine current throttling state.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"state count:             %d\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"active state:            T%d\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"state available: T%d to T%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#state_count\">state_count</a>, <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#state\">state</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling_platform_limit\">throttling_platform_limit</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#state_count\">state_count</a> - 1);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"states:\\n\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#acpi_processor_get_throttling\">acpi_processor_get_throttling</a> ==", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_processor_get_throttling_fadt\">acpi_processor_get_throttling_fadt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#state_count\">state_count</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"   %cT%d:                  %02d%%\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (<a class=\"id\" href=\"#i\">i</a> == <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#state\">state</a> ? '*' : ' '), <a class=\"id\" href=\"#i\">i</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#states\">states</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#performance\">performance</a> ? <a class=\"id\" href=\"#pr\">pr</a>->", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#states\">states</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#performance\">performance</a> / 10 : 0));", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#state_count\">state_count</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"   %cT%d:                  %02d%%\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (<a class=\"id\" href=\"#i\">i</a> == <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#state\">state</a> ? '*' : ' '), <a class=\"id\" href=\"#i\">i</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (int)<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#states_tss\">states_tss</a>[<a class=\"id\" href=\"#i\">i</a>].", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#freqpercentage\">freqpercentage</a>);", 
"<span class=\"ts\"/>}", 
"", 
"      <a class=\"id\" href=\"#end\">end</a>:", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#acpi_processor_throttling_open_fs\">acpi_processor_throttling_open_fs</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#single_open\">single_open</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#acpi_processor_throttling_seq_show\">acpi_processor_throttling_seq_show</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#PDE\">PDE</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#data\">data</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#acpi_processor_write_throttling\">acpi_processor_write_throttling</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       const char <a class=\"id\" href=\"#__user\">__user</a> * <a class=\"id\" href=\"#buffer\">buffer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> * <a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_processor\">acpi_processor</a> *<a class=\"id\" href=\"#pr\">pr</a> = <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#state_string\">state_string</a>[5] = \"\";", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#charp\">charp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#state_val\">state_val</a> = 0;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#tmpbuf\">tmpbuf</a>[5] = \"\";", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pr\">pr</a> || (<a class=\"id\" href=\"#count\">count</a> &gt; sizeof(<a class=\"id\" href=\"#state_string\">state_string</a>) - 1))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#state_string\">state_string</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#count\">count</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#state_string\">state_string</a>[<a class=\"id\" href=\"#count\">count</a>] = '\\0';", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#count\">count</a> &gt; 0) && (<a class=\"id\" href=\"#state_string\">state_string</a>[<a class=\"id\" href=\"#count\">count</a>-1] == '\\n'))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state_string\">state_string</a>[<a class=\"id\" href=\"#count\">count</a>-1] = '\\0';", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#charp\">charp</a> = <a class=\"id\" href=\"#state_string\">state_string</a>;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#state_string\">state_string</a>[0] == 't') || (<a class=\"id\" href=\"#state_string\">state_string</a>[0] == 'T'))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#charp\">charp</a>++;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#state_val\">state_val</a> = <a class=\"id\" href=\"#simple_strtoul\">simple_strtoul</a>(<a class=\"id\" href=\"#charp\">charp</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#state_val\">state_val</a> >= <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#throttling\">throttling</a>.<a class=\"id\" href=\"#state_count\">state_count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#tmpbuf\">tmpbuf</a>, 5, \"%zu\", <a class=\"id\" href=\"#state_val\">state_val</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#tmpbuf\">tmpbuf</a>, <a class=\"id\" href=\"#charp\">charp</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#acpi_processor_set_throttling\">acpi_processor_set_throttling</a>(<a class=\"id\" href=\"#pr\">pr</a>, <a class=\"id\" href=\"#state_val\">state_val</a>, <a class=\"id\" href=\"#false\">false</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#result\">result</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#acpi_processor_throttling_fops\">acpi_processor_throttling_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a> = <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a> = <a class=\"id\" href=\"#acpi_processor_throttling_open_fs\">acpi_processor_throttling_open_fs</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a> = <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write\">write</a> = <a class=\"id\" href=\"#acpi_processor_write_throttling\">acpi_processor_write_throttling</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a> = <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a> = <a class=\"id\" href=\"#single_release\">single_release</a>,", 
"};", 
];
xr_frag_insert('l/6b/96e5b984283385b6823305a2106381863e9189.xr', __xr_tmp);
