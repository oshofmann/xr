var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_HW_BREAKPOINT_H\">_LINUX_HW_BREAKPOINT_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_HW_BREAKPOINT_H\">_LINUX_HW_BREAKPOINT_H</a>", 
"", 
"enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#HW_BREAKPOINT_LEN_1\">HW_BREAKPOINT_LEN_1</a> = 1,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#HW_BREAKPOINT_LEN_2\">HW_BREAKPOINT_LEN_2</a> = 2,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#HW_BREAKPOINT_LEN_4\">HW_BREAKPOINT_LEN_4</a> = 4,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#HW_BREAKPOINT_LEN_8\">HW_BREAKPOINT_LEN_8</a> = 8,", 
"};", 
"", 
"enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#HW_BREAKPOINT_EMPTY\">HW_BREAKPOINT_EMPTY</a><span class=\"ts\"/>= 0,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#HW_BREAKPOINT_R\">HW_BREAKPOINT_R</a><span class=\"ts\"/><span class=\"ts\"/>= 1,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#HW_BREAKPOINT_W\">HW_BREAKPOINT_W</a><span class=\"ts\"/><span class=\"ts\"/>= 2,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#HW_BREAKPOINT_RW\">HW_BREAKPOINT_RW</a><span class=\"ts\"/>= <a class=\"id\" href=\"#HW_BREAKPOINT_R\">HW_BREAKPOINT_R</a> | <a class=\"id\" href=\"#HW_BREAKPOINT_W\">HW_BREAKPOINT_W</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#HW_BREAKPOINT_X\">HW_BREAKPOINT_X</a><span class=\"ts\"/><span class=\"ts\"/>= 4,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#HW_BREAKPOINT_INVALID\">HW_BREAKPOINT_INVALID</a>   = <a class=\"id\" href=\"#HW_BREAKPOINT_RW\">HW_BREAKPOINT_RW</a> | <a class=\"id\" href=\"#HW_BREAKPOINT_X\">HW_BREAKPOINT_X</a>,", 
"};", 
"", 
"enum <a class=\"id\" href=\"#bp_type_idx\">bp_type_idx</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TYPE_INST\">TYPE_INST</a> <span class=\"ts\"/>= 0,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HAVE_MIXED_BREAKPOINTS_REGS\">CONFIG_HAVE_MIXED_BREAKPOINTS_REGS</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TYPE_DATA\">TYPE_DATA</a><span class=\"ts\"/>= 0,", 
"#else", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TYPE_DATA\">TYPE_DATA</a><span class=\"ts\"/>= 1,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TYPE_MAX\">TYPE_MAX</a>", 
"};", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#perf_event\">perf_event</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HAVE_HW_BREAKPOINT\">CONFIG_HAVE_HW_BREAKPOINT</a>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#hw_breakpoint_init\">hw_breakpoint_init</a>(struct <a class=\"id\" href=\"#perf_event_attr\">perf_event_attr</a> *<a class=\"id\" href=\"#attr\">attr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#attr\">attr</a>, 0, sizeof(*<a class=\"id\" href=\"#attr\">attr</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#PERF_TYPE_BREAKPOINT\">PERF_TYPE_BREAKPOINT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#size\">size</a> = sizeof(*<a class=\"id\" href=\"#attr\">attr</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * As it's for in-kernel or ptrace use, we want it to be pinned</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and to call its callback every hits.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#pinned\">pinned</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#sample_period\">sample_period</a> = 1;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ptrace_breakpoint_init\">ptrace_breakpoint_init</a>(struct <a class=\"id\" href=\"#perf_event_attr\">perf_event_attr</a> *<a class=\"id\" href=\"#attr\">attr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hw_breakpoint_init\">hw_breakpoint_init</a>(<a class=\"id\" href=\"#attr\">attr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#exclude_kernel\">exclude_kernel</a> = 1;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long <a class=\"id\" href=\"#hw_breakpoint_addr\">hw_breakpoint_addr</a>(struct <a class=\"id\" href=\"#perf_event\">perf_event</a> *<a class=\"id\" href=\"#bp\">bp</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bp\">bp</a>-><a class=\"id\" href=\"#attr\">attr</a>.<a class=\"id\" href=\"#bp_addr\">bp_addr</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#hw_breakpoint_type\">hw_breakpoint_type</a>(struct <a class=\"id\" href=\"#perf_event\">perf_event</a> *<a class=\"id\" href=\"#bp\">bp</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bp\">bp</a>-><a class=\"id\" href=\"#attr\">attr</a>.<a class=\"id\" href=\"#bp_type\">bp_type</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long <a class=\"id\" href=\"#hw_breakpoint_len\">hw_breakpoint_len</a>(struct <a class=\"id\" href=\"#perf_event\">perf_event</a> *<a class=\"id\" href=\"#bp\">bp</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bp\">bp</a>-><a class=\"id\" href=\"#attr\">attr</a>.<a class=\"id\" href=\"#bp_len\">bp_len</a>;", 
"}", 
"", 
"extern struct <a class=\"id\" href=\"#perf_event\">perf_event</a> *", 
"<a class=\"id\" href=\"#register_user_hw_breakpoint\">register_user_hw_breakpoint</a>(struct <a class=\"id\" href=\"#perf_event_attr\">perf_event_attr</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#perf_overflow_handler_t\">perf_overflow_handler_t</a> <a class=\"id\" href=\"#triggered\">triggered</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>);", 
"", 
"<span class=\"comment\">/* FIXME: only change from the attr, and don't unregister */</span>", 
"extern int", 
"<a class=\"id\" href=\"#modify_user_hw_breakpoint\">modify_user_hw_breakpoint</a>(struct <a class=\"id\" href=\"#perf_event\">perf_event</a> *<a class=\"id\" href=\"#bp\">bp</a>, struct <a class=\"id\" href=\"#perf_event_attr\">perf_event_attr</a> *<a class=\"id\" href=\"#attr\">attr</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Kernel breakpoints are not associated with any particular thread.</span>", 
"<span class=\"comment\"> */</span>", 
"extern struct <a class=\"id\" href=\"#perf_event\">perf_event</a> *", 
"<a class=\"id\" href=\"#register_wide_hw_breakpoint_cpu\">register_wide_hw_breakpoint_cpu</a>(struct <a class=\"id\" href=\"#perf_event_attr\">perf_event_attr</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#perf_overflow_handler_t\">perf_overflow_handler_t</a><span class=\"ts\"/><a class=\"id\" href=\"#triggered\">triggered</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"extern struct <a class=\"id\" href=\"#perf_event\">perf_event</a> * <a class=\"id\" href=\"#__percpu\">__percpu</a> *", 
"<a class=\"id\" href=\"#register_wide_hw_breakpoint\">register_wide_hw_breakpoint</a>(struct <a class=\"id\" href=\"#perf_event_attr\">perf_event_attr</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#perf_overflow_handler_t\">perf_overflow_handler_t</a> <a class=\"id\" href=\"#triggered\">triggered</a>);", 
"", 
"extern int <a class=\"id\" href=\"#register_perf_hw_breakpoint\">register_perf_hw_breakpoint</a>(struct <a class=\"id\" href=\"#perf_event\">perf_event</a> *<a class=\"id\" href=\"#bp\">bp</a>);", 
"extern int <a class=\"id\" href=\"#__register_perf_hw_breakpoint\">__register_perf_hw_breakpoint</a>(struct <a class=\"id\" href=\"#perf_event\">perf_event</a> *<a class=\"id\" href=\"#bp\">bp</a>);", 
"extern void <a class=\"id\" href=\"#unregister_hw_breakpoint\">unregister_hw_breakpoint</a>(struct <a class=\"id\" href=\"#perf_event\">perf_event</a> *<a class=\"id\" href=\"#bp\">bp</a>);", 
"extern void <a class=\"id\" href=\"#unregister_wide_hw_breakpoint\">unregister_wide_hw_breakpoint</a>(struct <a class=\"id\" href=\"#perf_event\">perf_event</a> * <a class=\"id\" href=\"#__percpu\">__percpu</a> *<a class=\"id\" href=\"#cpu_events\">cpu_events</a>);", 
"", 
"extern int <a class=\"id\" href=\"#dbg_reserve_bp_slot\">dbg_reserve_bp_slot</a>(struct <a class=\"id\" href=\"#perf_event\">perf_event</a> *<a class=\"id\" href=\"#bp\">bp</a>);", 
"extern int <a class=\"id\" href=\"#dbg_release_bp_slot\">dbg_release_bp_slot</a>(struct <a class=\"id\" href=\"#perf_event\">perf_event</a> *<a class=\"id\" href=\"#bp\">bp</a>);", 
"extern int <a class=\"id\" href=\"#reserve_bp_slot\">reserve_bp_slot</a>(struct <a class=\"id\" href=\"#perf_event\">perf_event</a> *<a class=\"id\" href=\"#bp\">bp</a>);", 
"extern void <a class=\"id\" href=\"#release_bp_slot\">release_bp_slot</a>(struct <a class=\"id\" href=\"#perf_event\">perf_event</a> *<a class=\"id\" href=\"#bp\">bp</a>);", 
"", 
"extern void <a class=\"id\" href=\"#flush_ptrace_hw_breakpoint\">flush_ptrace_hw_breakpoint</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#arch_hw_breakpoint\">arch_hw_breakpoint</a> *<a class=\"id\" href=\"#counter_arch_bp\">counter_arch_bp</a>(struct <a class=\"id\" href=\"#perf_event\">perf_event</a> *<a class=\"id\" href=\"#bp\">bp</a>)", 
"{", 
"<span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#bp\">bp</a>-><a class=\"id\" href=\"#hw\">hw</a>.<a class=\"id\" href=\"#info\">info</a>;", 
"}", 
"", 
"#else <span class=\"comment\">/* !CONFIG_HAVE_HW_BREAKPOINT */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#perf_event\">perf_event</a> *", 
"<a class=\"id\" href=\"#register_user_hw_breakpoint\">register_user_hw_breakpoint</a>(struct <a class=\"id\" href=\"#perf_event_attr\">perf_event_attr</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#perf_overflow_handler_t\">perf_overflow_handler_t</a> <a class=\"id\" href=\"#triggered\">triggered</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>)<span class=\"ts\"/>{ return <a class=\"id\" href=\"#NULL\">NULL</a>; }", 
"static <a class=\"id\" href=\"#inline\">inline</a> int", 
"<a class=\"id\" href=\"#modify_user_hw_breakpoint\">modify_user_hw_breakpoint</a>(struct <a class=\"id\" href=\"#perf_event\">perf_event</a> *<a class=\"id\" href=\"#bp\">bp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#perf_event_attr\">perf_event_attr</a> *<a class=\"id\" href=\"#attr\">attr</a>)<span class=\"ts\"/>{ return -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>; }", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#perf_event\">perf_event</a> *", 
"<a class=\"id\" href=\"#register_wide_hw_breakpoint_cpu\">register_wide_hw_breakpoint_cpu</a>(struct <a class=\"id\" href=\"#perf_event_attr\">perf_event_attr</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#perf_overflow_handler_t\">perf_overflow_handler_t</a><span class=\"ts\"/> <a class=\"id\" href=\"#triggered\">triggered</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a>)<span class=\"ts\"/><span class=\"ts\"/>{ return <a class=\"id\" href=\"#NULL\">NULL</a>; }", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#perf_event\">perf_event</a> * <a class=\"id\" href=\"#__percpu\">__percpu</a> *", 
"<a class=\"id\" href=\"#register_wide_hw_breakpoint\">register_wide_hw_breakpoint</a>(struct <a class=\"id\" href=\"#perf_event_attr\">perf_event_attr</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#perf_overflow_handler_t\">perf_overflow_handler_t</a> <a class=\"id\" href=\"#triggered\">triggered</a>)<span class=\"ts\"/>{ return <a class=\"id\" href=\"#NULL\">NULL</a>; }", 
"static <a class=\"id\" href=\"#inline\">inline</a> int", 
"<a class=\"id\" href=\"#register_perf_hw_breakpoint\">register_perf_hw_breakpoint</a>(struct <a class=\"id\" href=\"#perf_event\">perf_event</a> *<a class=\"id\" href=\"#bp\">bp</a>)<span class=\"ts\"/>{ return -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>; }", 
"static <a class=\"id\" href=\"#inline\">inline</a> int", 
"<a class=\"id\" href=\"#__register_perf_hw_breakpoint\">__register_perf_hw_breakpoint</a>(struct <a class=\"id\" href=\"#perf_event\">perf_event</a> *<a class=\"id\" href=\"#bp\">bp</a>) <span class=\"ts\"/>{ return -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>; }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#unregister_hw_breakpoint\">unregister_hw_breakpoint</a>(struct <a class=\"id\" href=\"#perf_event\">perf_event</a> *<a class=\"id\" href=\"#bp\">bp</a>)<span class=\"ts\"/>{ }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void", 
"<a class=\"id\" href=\"#unregister_wide_hw_breakpoint\">unregister_wide_hw_breakpoint</a>(struct <a class=\"id\" href=\"#perf_event\">perf_event</a> * <a class=\"id\" href=\"#__percpu\">__percpu</a> *<a class=\"id\" href=\"#cpu_events\">cpu_events</a>)<span class=\"ts\"/>{ }", 
"static <a class=\"id\" href=\"#inline\">inline</a> int", 
"<a class=\"id\" href=\"#reserve_bp_slot\">reserve_bp_slot</a>(struct <a class=\"id\" href=\"#perf_event\">perf_event</a> *<a class=\"id\" href=\"#bp\">bp</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>{return -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>; }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#release_bp_slot\">release_bp_slot</a>(struct <a class=\"id\" href=\"#perf_event\">perf_event</a> *<a class=\"id\" href=\"#bp\">bp</a>) <span class=\"ts\"/><span class=\"ts\"/>{ }", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#flush_ptrace_hw_breakpoint\">flush_ptrace_hw_breakpoint</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>)<span class=\"ts\"/>{ }", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#arch_hw_breakpoint\">arch_hw_breakpoint</a> *<a class=\"id\" href=\"#counter_arch_bp\">counter_arch_bp</a>(struct <a class=\"id\" href=\"#perf_event\">perf_event</a> *<a class=\"id\" href=\"#bp\">bp</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_HAVE_HW_BREAKPOINT */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __KERNEL__ */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _LINUX_HW_BREAKPOINT_H */</span>", 
];
xr_frag_insert('l/6c/203a08a2abae444b7ac45c6642ad1cd009235f.xr', __xr_tmp);
