var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * kernel/power/suspend_test.c - Suspend to RAM and standby test facility.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (c) 2009 Pavel Machek &lt;pavel@ucw.cz&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file is released under the GPLv2.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rtc\">rtc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"power.h\"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * We test the system suspend code by setting an RTC wakealarm a short</span>", 
"<span class=\"comment\"> * time in the future, then suspending.  Suspending the devices won't</span>", 
"<span class=\"comment\"> * normally take long ... some systems only need a few milliseconds.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The time it takes is system-specific though, so when we test this</span>", 
"<span class=\"comment\"> * during system bootup we allow a LOT of time.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TEST_SUSPEND_SECONDS\">TEST_SUSPEND_SECONDS</a><span class=\"ts\"/>10", 
"", 
"static unsigned long <a class=\"id\" href=\"#suspend_test_start_time\">suspend_test_start_time</a>;", 
"", 
"void <a class=\"id\" href=\"#suspend_test_start\">suspend_test_start</a>(void)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* FIXME Use better timebase than \"jiffies\", ideally a clocksource.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * What we want is a hardware counter that will work correctly even</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * during the irqs-are-off stages of the suspend/resume cycle...</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#suspend_test_start_time\">suspend_test_start_time</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#suspend_test_finish\">suspend_test_finish</a>(const char *<a class=\"id\" href=\"#label\">label</a>)", 
"{", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#nj\">nj</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a> - <a class=\"id\" href=\"#suspend_test_start_time\">suspend_test_start_time</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#msec\">msec</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msec\">msec</a> = <a class=\"id\" href=\"#jiffies_to_msecs\">jiffies_to_msecs</a>(<a class=\"id\" href=\"#abs\">abs</a>(<a class=\"id\" href=\"#nj\">nj</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_info\">pr_info</a>(\"PM: %s took %d.%03d seconds\\n\", <a class=\"id\" href=\"#label\">label</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msec\">msec</a> / 1000, <a class=\"id\" href=\"#msec\">msec</a> % 1000);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Warning on suspend means the RTC alarm period needs to be</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * larger -- the system was sooo slooowwww to suspend that the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * alarm (should have) fired before the system went to sleep!</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Warning on either suspend or resume also means the system</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * has some performance issues.  The stack dump of a WARN_ON</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * is more likely to get the right attention than a printk...</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN\">WARN</a>(<a class=\"id\" href=\"#msec\">msec</a> &gt; (<a class=\"id\" href=\"#TEST_SUSPEND_SECONDS\">TEST_SUSPEND_SECONDS</a> * 1000),", 
"<span class=\"ts\"/>     \"Component: %s, time: %u\\n\", <a class=\"id\" href=\"#label\">label</a>, <a class=\"id\" href=\"#msec\">msec</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * To test system suspend, we need a hands-off mechanism to resume the</span>", 
"<span class=\"comment\"> * system.  RTCs wake alarms are a common self-contained mechanism.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#test_wakealarm\">test_wakealarm</a>(struct <a class=\"id\" href=\"#rtc_device\">rtc_device</a> *<a class=\"id\" href=\"#rtc\">rtc</a>, <a class=\"id\" href=\"#suspend_state_t\">suspend_state_t</a> <a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/>static char <a class=\"id\" href=\"#err_readtime\">err_readtime</a>[] <a class=\"id\" href=\"#__initdata\">__initdata</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"PM: can't read %s time, err %d\\n\";", 
"<span class=\"ts\"/>static char <a class=\"id\" href=\"#err_wakealarm\">err_wakealarm</a> [] <a class=\"id\" href=\"#__initdata\">__initdata</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"PM: can't set %s wakealarm, err %d\\n\";", 
"<span class=\"ts\"/>static char <a class=\"id\" href=\"#err_suspend\">err_suspend</a>[] <a class=\"id\" href=\"#__initdata\">__initdata</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"PM: suspend test failed, error %d\\n\";", 
"<span class=\"ts\"/>static char <a class=\"id\" href=\"#info_test\">info_test</a>[] <a class=\"id\" href=\"#__initdata\">__initdata</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"PM: test RTC wakeup from '%s' suspend\\n\";", 
"", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#now\">now</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtc_wkalrm\">rtc_wkalrm</a><span class=\"ts\"/><a class=\"id\" href=\"#alm\">alm</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* this may fail if the RTC hasn't been initialized */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#rtc_read_time\">rtc_read_time</a>(<a class=\"id\" href=\"#rtc\">rtc</a>, &amp;<a class=\"id\" href=\"#alm\">alm</a>.<a class=\"id\" href=\"#time\">time</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#err_readtime\">err_readtime</a>, <a class=\"id\" href=\"#dev_name\">dev_name</a>(&amp;<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtc_tm_to_time\">rtc_tm_to_time</a>(&amp;<a class=\"id\" href=\"#alm\">alm</a>.<a class=\"id\" href=\"#time\">time</a>, &amp;<a class=\"id\" href=\"#now\">now</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#alm\">alm</a>, 0, sizeof <a class=\"id\" href=\"#alm\">alm</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtc_time_to_tm\">rtc_time_to_tm</a>(<a class=\"id\" href=\"#now\">now</a> + <a class=\"id\" href=\"#TEST_SUSPEND_SECONDS\">TEST_SUSPEND_SECONDS</a>, &amp;<a class=\"id\" href=\"#alm\">alm</a>.<a class=\"id\" href=\"#time\">time</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#alm\">alm</a>.<a class=\"id\" href=\"#enabled\">enabled</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#rtc_set_alarm\">rtc_set_alarm</a>(<a class=\"id\" href=\"#rtc\">rtc</a>, &amp;<a class=\"id\" href=\"#alm\">alm</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#err_wakealarm\">err_wakealarm</a>, <a class=\"id\" href=\"#dev_name\">dev_name</a>(&amp;<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a> == <a class=\"id\" href=\"#PM_SUSPEND_MEM\">PM_SUSPEND_MEM</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#info_test\">info_test</a>, <a class=\"id\" href=\"#pm_states\">pm_states</a>[<a class=\"id\" href=\"#state\">state</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#pm_suspend\">pm_suspend</a>(<a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> == -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#PM_SUSPEND_STANDBY\">PM_SUSPEND_STANDBY</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a> == <a class=\"id\" href=\"#PM_SUSPEND_STANDBY\">PM_SUSPEND_STANDBY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#info_test\">info_test</a>, <a class=\"id\" href=\"#pm_states\">pm_states</a>[<a class=\"id\" href=\"#state\">state</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#pm_suspend\">pm_suspend</a>(<a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#err_suspend\">err_suspend</a>, <a class=\"id\" href=\"#status\">status</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Some platforms can't detect that the alarm triggered the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * wakeup, or (accordingly) disable it after it afterwards.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * It's supposed to give oneshot behavior; cope.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#alm\">alm</a>.<a class=\"id\" href=\"#enabled\">enabled</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtc_set_alarm\">rtc_set_alarm</a>(<a class=\"id\" href=\"#rtc\">rtc</a>, &amp;<a class=\"id\" href=\"#alm\">alm</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#has_wakealarm\">has_wakealarm</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, void *<a class=\"id\" href=\"#name_ptr\">name_ptr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtc_device\">rtc_device</a> *<a class=\"id\" href=\"#candidate\">candidate</a> = <a class=\"id\" href=\"#to_rtc_device\">to_rtc_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#candidate\">candidate</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#set_alarm\">set_alarm</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#device_may_wakeup\">device_may_wakeup</a>(<a class=\"id\" href=\"#candidate\">candidate</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#parent\">parent</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>*(const char **)<a class=\"id\" href=\"#name_ptr\">name_ptr</a> = <a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Kernel options like \"test_suspend=mem\" force suspend/resume sanity tests</span>", 
"<span class=\"comment\"> * at startup time.  They're normally disabled, for faster boot and because</span>", 
"<span class=\"comment\"> * we can't know which states really work on this particular system.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#suspend_state_t\">suspend_state_t</a> <a class=\"id\" href=\"#test_state\">test_state</a> <a class=\"id\" href=\"#__initdata\">__initdata</a> = <a class=\"id\" href=\"#PM_SUSPEND_ON\">PM_SUSPEND_ON</a>;", 
"", 
"static char <a class=\"id\" href=\"#warn_bad_state\">warn_bad_state</a>[] <a class=\"id\" href=\"#__initdata\">__initdata</a> =", 
"<span class=\"ts\"/><a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"PM: can't test '%s' suspend state\\n\";", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#setup_test_suspend\">setup_test_suspend</a>(char *<a class=\"id\" href=\"#value\">value</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* \"=mem\" ==&gt; \"mem\" */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#value\">value</a>++;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#PM_SUSPEND_MAX\">PM_SUSPEND_MAX</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pm_states\">pm_states</a>[<a class=\"id\" href=\"#i\">i</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#pm_states\">pm_states</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#value\">value</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#test_state\">test_state</a> = (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#suspend_state_t\">suspend_state_t</a>) <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#warn_bad_state\">warn_bad_state</a>, <a class=\"id\" href=\"#value\">value</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#__setup\">__setup</a>(\"test_suspend\", <a class=\"id\" href=\"#setup_test_suspend\">setup_test_suspend</a>);", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#test_suspend\">test_suspend</a>(void)", 
"{", 
"<span class=\"ts\"/>static char<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#warn_no_rtc\">warn_no_rtc</a>[] <a class=\"id\" href=\"#__initdata\">__initdata</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"PM: no wakealarm-capable RTC driver is ready\\n\";", 
"", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#pony\">pony</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtc_device\">rtc_device</a><span class=\"ts\"/>*<a class=\"id\" href=\"#rtc\">rtc</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* PM is initialized by now; is that state testable? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_state\">test_state</a> == <a class=\"id\" href=\"#PM_SUSPEND_ON\">PM_SUSPEND_ON</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#valid_state\">valid_state</a>(<a class=\"id\" href=\"#test_state\">test_state</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#warn_bad_state\">warn_bad_state</a>, <a class=\"id\" href=\"#pm_states\">pm_states</a>[<a class=\"id\" href=\"#test_state\">test_state</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* RTCs have initialized by now too ... can we use one? */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#class_find_device\">class_find_device</a>(<a class=\"id\" href=\"#rtc_class\">rtc_class</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#pony\">pony</a>, <a class=\"id\" href=\"#has_wakealarm\">has_wakealarm</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pony\">pony</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtc\">rtc</a> = <a class=\"id\" href=\"#rtc_class_open\">rtc_class_open</a>(<a class=\"id\" href=\"#pony\">pony</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rtc\">rtc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#warn_no_rtc\">warn_no_rtc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* go for it */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#test_wakealarm\">test_wakealarm</a>(<a class=\"id\" href=\"#rtc\">rtc</a>, <a class=\"id\" href=\"#test_state\">test_state</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtc_class_close\">rtc_class_close</a>(<a class=\"id\" href=\"#rtc\">rtc</a>);", 
"<a class=\"id\" href=\"#done\">done</a>:", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#late_initcall\">late_initcall</a>(<a class=\"id\" href=\"#test_suspend\">test_suspend</a>);", 
];
xr_frag_insert('l/6c/33b52627cbff394021eb128d0b9e255ceb064f.xr', __xr_tmp);
