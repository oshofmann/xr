var __xr_tmp = [
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#do_sigaltstack\">do_sigaltstack</a>(<a class=\"id\" href=\"#uss\">uss</a>, <a class=\"id\" href=\"#uoss\">uoss</a>, <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#sp\">sp</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Do a signal return; undo the signal stack.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"unsigned long <a class=\"id\" href=\"#sys_sigreturn\">sys_sigreturn</a>(struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sigframe\">sigframe</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#frame\">frame</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#ax\">ax</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sigset_t\">sigset_t</a> <a class=\"id\" href=\"#set\">set</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#frame\">frame</a> = (struct <a class=\"id\" href=\"#sigframe\">sigframe</a> <a class=\"id\" href=\"#__user\">__user</a> *)(<a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#sp\">sp</a> - 8);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#access_ok\">access_ok</a>(<a class=\"id\" href=\"#VERIFY_READ\">VERIFY_READ</a>, <a class=\"id\" href=\"#frame\">frame</a>, sizeof(*<a class=\"id\" href=\"#frame\">frame</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#badframe\">badframe</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#__get_user\">__get_user</a>(<a class=\"id\" href=\"#set\">set</a>.<a class=\"id\" href=\"#sig\">sig</a>[0], &amp;<a class=\"id\" href=\"#frame\">frame</a>-><a class=\"id\" href=\"#sc\">sc</a>.<a class=\"id\" href=\"#oldmask\">oldmask</a>) || (<a class=\"id\" href=\"#_NSIG_WORDS\">_NSIG_WORDS</a> &gt; 1", 
"<span class=\"ts\"/><span class=\"ts\"/>&& <a class=\"id\" href=\"#__copy_from_user\">__copy_from_user</a>(&amp;<a class=\"id\" href=\"#set\">set</a>.<a class=\"id\" href=\"#sig\">sig</a>[1], &amp;<a class=\"id\" href=\"#frame\">frame</a>-><a class=\"id\" href=\"#extramask\">extramask</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    sizeof(<a class=\"id\" href=\"#frame\">frame</a>-><a class=\"id\" href=\"#extramask\">extramask</a>))))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#badframe\">badframe</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sigdelsetmask\">sigdelsetmask</a>(&amp;<a class=\"id\" href=\"#set\">set</a>, ~<a class=\"id\" href=\"#_BLOCKABLE\">_BLOCKABLE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#blocked\">blocked</a> = <a class=\"id\" href=\"#set\">set</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#recalc_sigpending\">recalc_sigpending</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#restore_sigcontext\">restore_sigcontext</a>(<a class=\"id\" href=\"#regs\">regs</a>, &amp;<a class=\"id\" href=\"#frame\">frame</a>-><a class=\"id\" href=\"#sc\">sc</a>, &amp;<a class=\"id\" href=\"#ax\">ax</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#badframe\">badframe</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ax\">ax</a>;", 
"", 
"<a class=\"id\" href=\"#badframe\">badframe</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#signal_fault\">signal_fault</a>(<a class=\"id\" href=\"#regs\">regs</a>, <a class=\"id\" href=\"#frame\">frame</a>, \"sigreturn\");", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_X86_32 */</span>", 
"", 
"long <a class=\"id\" href=\"#sys_rt_sigreturn\">sys_rt_sigreturn</a>(struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rt_sigframe\">rt_sigframe</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#frame\">frame</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#ax\">ax</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sigset_t\">sigset_t</a> <a class=\"id\" href=\"#set\">set</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#frame\">frame</a> = (struct <a class=\"id\" href=\"#rt_sigframe\">rt_sigframe</a> <a class=\"id\" href=\"#__user\">__user</a> *)(<a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#sp\">sp</a> - sizeof(long));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#access_ok\">access_ok</a>(<a class=\"id\" href=\"#VERIFY_READ\">VERIFY_READ</a>, <a class=\"id\" href=\"#frame\">frame</a>, sizeof(*<a class=\"id\" href=\"#frame\">frame</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#badframe\">badframe</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#__copy_from_user\">__copy_from_user</a>(&amp;<a class=\"id\" href=\"#set\">set</a>, &amp;<a class=\"id\" href=\"#frame\">frame</a>-><a class=\"id\" href=\"#uc\">uc</a>.<a class=\"id\" href=\"#uc_sigmask\">uc_sigmask</a>, sizeof(<a class=\"id\" href=\"#set\">set</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#badframe\">badframe</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sigdelsetmask\">sigdelsetmask</a>(&amp;<a class=\"id\" href=\"#set\">set</a>, ~<a class=\"id\" href=\"#_BLOCKABLE\">_BLOCKABLE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#blocked\">blocked</a> = <a class=\"id\" href=\"#set\">set</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#recalc_sigpending\">recalc_sigpending</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#restore_sigcontext\">restore_sigcontext</a>(<a class=\"id\" href=\"#regs\">regs</a>, &amp;<a class=\"id\" href=\"#frame\">frame</a>-><a class=\"id\" href=\"#uc\">uc</a>.<a class=\"id\" href=\"#uc_mcontext\">uc_mcontext</a>, &amp;<a class=\"id\" href=\"#ax\">ax</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#badframe\">badframe</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#do_sigaltstack\">do_sigaltstack</a>(&amp;<a class=\"id\" href=\"#frame\">frame</a>-><a class=\"id\" href=\"#uc\">uc</a>.<a class=\"id\" href=\"#uc_stack\">uc_stack</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#sp\">sp</a>) == -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#badframe\">badframe</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ax\">ax</a>;", 
"", 
"<a class=\"id\" href=\"#badframe\">badframe</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#signal_fault\">signal_fault</a>(<a class=\"id\" href=\"#regs\">regs</a>, <a class=\"id\" href=\"#frame\">frame</a>, \"rt_sigreturn\");", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * OK, we're invoking a handler:</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#signr_convert\">signr_convert</a>(int <a class=\"id\" href=\"#sig\">sig</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#thread_info\">thread_info</a> *<a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#current_thread_info\">current_thread_info</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#exec_domain\">exec_domain</a> && <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#exec_domain\">exec_domain</a>-><a class=\"id\" href=\"#signal_invmap\">signal_invmap</a> && <a class=\"id\" href=\"#sig\">sig</a> &lt; 32)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#exec_domain\">exec_domain</a>-><a class=\"id\" href=\"#signal_invmap\">signal_invmap</a>[<a class=\"id\" href=\"#sig\">sig</a>];", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_X86_32 */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sig\">sig</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#is_ia32\">is_ia32</a><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ia32_setup_frame\">ia32_setup_frame</a><span class=\"ts\"/><a class=\"id\" href=\"#__setup_frame\">__setup_frame</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ia32_setup_rt_frame\">ia32_setup_rt_frame</a><span class=\"ts\"/><a class=\"id\" href=\"#__setup_rt_frame\">__setup_rt_frame</a>", 
"", 
"#else <span class=\"comment\">/* !CONFIG_X86_32 */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IA32_EMULATION\">CONFIG_IA32_EMULATION</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#is_ia32\">is_ia32</a><span class=\"ts\"/><a class=\"id\" href=\"#test_thread_flag\">test_thread_flag</a>(<a class=\"id\" href=\"#TIF_IA32\">TIF_IA32</a>)", 
"#else <span class=\"comment\">/* !CONFIG_IA32_EMULATION */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#is_ia32\">is_ia32</a><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_IA32_EMULATION */</span>", 
"", 
"int <a class=\"id\" href=\"#ia32_setup_rt_frame\">ia32_setup_rt_frame</a>(int <a class=\"id\" href=\"#sig\">sig</a>, struct <a class=\"id\" href=\"#k_sigaction\">k_sigaction</a> *<a class=\"id\" href=\"#ka\">ka</a>, <a class=\"id\" href=\"#siginfo_t\">siginfo_t</a> *<a class=\"id\" href=\"#info\">info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sigset_t\">sigset_t</a> *<a class=\"id\" href=\"#set\">set</a>, struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>);", 
"int <a class=\"id\" href=\"#ia32_setup_frame\">ia32_setup_frame</a>(int <a class=\"id\" href=\"#sig\">sig</a>, struct <a class=\"id\" href=\"#k_sigaction\">k_sigaction</a> *<a class=\"id\" href=\"#ka\">ka</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sigset_t\">sigset_t</a> *<a class=\"id\" href=\"#set\">set</a>, struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_X86_32 */</span>", 
"", 
"static int", 
"<a class=\"id\" href=\"#setup_rt_frame\">setup_rt_frame</a>(int <a class=\"id\" href=\"#sig\">sig</a>, struct <a class=\"id\" href=\"#k_sigaction\">k_sigaction</a> *<a class=\"id\" href=\"#ka\">ka</a>, <a class=\"id\" href=\"#siginfo_t\">siginfo_t</a> *<a class=\"id\" href=\"#info\">info</a>,", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#sigset_t\">sigset_t</a> *<a class=\"id\" href=\"#set\">set</a>, struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#usig\">usig</a> = <a class=\"id\" href=\"#signr_convert\">signr_convert</a>(<a class=\"id\" href=\"#sig\">sig</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Set up the stack frame */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_ia32\">is_ia32</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ka\">ka</a>-><a class=\"id\" href=\"#sa\">sa</a>.<a class=\"id\" href=\"#sa_flags\">sa_flags</a> &amp; <a class=\"id\" href=\"#SA_SIGINFO\">SA_SIGINFO</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ia32_setup_rt_frame\">ia32_setup_rt_frame</a>(<a class=\"id\" href=\"#usig\">usig</a>, <a class=\"id\" href=\"#ka\">ka</a>, <a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#set\">set</a>, <a class=\"id\" href=\"#regs\">regs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ia32_setup_frame\">ia32_setup_frame</a>(<a class=\"id\" href=\"#usig\">usig</a>, <a class=\"id\" href=\"#ka\">ka</a>, <a class=\"id\" href=\"#set\">set</a>, <a class=\"id\" href=\"#regs\">regs</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#__setup_rt_frame\">__setup_rt_frame</a>(<a class=\"id\" href=\"#sig\">sig</a>, <a class=\"id\" href=\"#ka\">ka</a>, <a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#set\">set</a>, <a class=\"id\" href=\"#regs\">regs</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#force_sigsegv\">force_sigsegv</a>(<a class=\"id\" href=\"#sig\">sig</a>, <a class=\"id\" href=\"#current\">current</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#handle_signal\">handle_signal</a>(unsigned long <a class=\"id\" href=\"#sig\">sig</a>, <a class=\"id\" href=\"#siginfo_t\">siginfo_t</a> *<a class=\"id\" href=\"#info\">info</a>, struct <a class=\"id\" href=\"#k_sigaction\">k_sigaction</a> *<a class=\"id\" href=\"#ka\">ka</a>,", 
"<span class=\"ts\"/>      <a class=\"id\" href=\"#sigset_t\">sigset_t</a> *<a class=\"id\" href=\"#oldset\">oldset</a>, struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Are we from a system call? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#syscall_get_nr\">syscall_get_nr</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#regs\">regs</a>) >= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If so, check system call restarting.. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#syscall_get_error\">syscall_get_error</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#regs\">regs</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case -<a class=\"id\" href=\"#ERESTART_RESTARTBLOCK\">ERESTART_RESTARTBLOCK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case -<a class=\"id\" href=\"#ERESTARTNOHAND\">ERESTARTNOHAND</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#ax\">ax</a> = -<a class=\"id\" href=\"#EINTR\">EINTR</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case -<a class=\"id\" href=\"#ERESTARTSYS\">ERESTARTSYS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#ka\">ka</a>-><a class=\"id\" href=\"#sa\">sa</a>.<a class=\"id\" href=\"#sa_flags\">sa_flags</a> &amp; <a class=\"id\" href=\"#SA_RESTART\">SA_RESTART</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#ax\">ax</a> = -<a class=\"id\" href=\"#EINTR\">EINTR</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fallthrough */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>case -<a class=\"id\" href=\"#ERESTARTNOINTR\">ERESTARTNOINTR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#ax\">ax</a> = <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#orig_ax\">orig_ax</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#ip\">ip</a> -= 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If TF is set due to a debugger (TIF_FORCED_TF), clear the TF</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * flag so that register information in the sigcontext is correct.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#X86_EFLAGS_TF\">X86_EFLAGS_TF</a>) &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#test_and_clear_thread_flag\">test_and_clear_thread_flag</a>(<a class=\"id\" href=\"#TIF_FORCED_TF\">TIF_FORCED_TF</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#X86_EFLAGS_TF\">X86_EFLAGS_TF</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#setup_rt_frame\">setup_rt_frame</a>(<a class=\"id\" href=\"#sig\">sig</a>, <a class=\"id\" href=\"#ka\">ka</a>, <a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#oldset\">oldset</a>, <a class=\"id\" href=\"#regs\">regs</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This has nothing to do with segment registers,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * despite the name.  This magic affects uaccess.h</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * macros' behavior.  Reset it to the normal setting.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_fs\">set_fs</a>(<a class=\"id\" href=\"#USER_DS\">USER_DS</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/6c/3c7318c5c1e3fd496f8b168c2bf299b8f9b640.xr', __xr_tmp);
