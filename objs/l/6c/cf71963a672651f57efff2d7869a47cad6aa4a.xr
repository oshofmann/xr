var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Stack trace management functions</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 2006-2009 Red Hat, Inc., Ingo Molnar &lt;mingo@redhat.com&gt;</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#stacktrace\">stacktrace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#stacktrace\">stacktrace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static void <a class=\"id\" href=\"#save_stack_warning\">save_stack_warning</a>(void *<a class=\"id\" href=\"#data\">data</a>, char *<a class=\"id\" href=\"#msg\">msg</a>)", 
"{", 
"}", 
"", 
"static void", 
"<a class=\"id\" href=\"#save_stack_warning_symbol\">save_stack_warning_symbol</a>(void *<a class=\"id\" href=\"#data\">data</a>, char *<a class=\"id\" href=\"#msg\">msg</a>, unsigned long <a class=\"id\" href=\"#symbol\">symbol</a>)", 
"{", 
"}", 
"", 
"static int <a class=\"id\" href=\"#save_stack_stack\">save_stack_stack</a>(void *<a class=\"id\" href=\"#data\">data</a>, char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void", 
"<a class=\"id\" href=\"#__save_stack_address\">__save_stack_address</a>(void *<a class=\"id\" href=\"#data\">data</a>, unsigned long <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#reliable\">reliable</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#nosched\">nosched</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#stack_trace\">stack_trace</a> *<a class=\"id\" href=\"#trace\">trace</a> = <a class=\"id\" href=\"#data\">data</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_FRAME_POINTER\">CONFIG_FRAME_POINTER</a>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#reliable\">reliable</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nosched\">nosched</a> && <a class=\"id\" href=\"#in_sched_functions\">in_sched_functions</a>(<a class=\"id\" href=\"#addr\">addr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#trace\">trace</a>-><a class=\"id\" href=\"#skip\">skip</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace\">trace</a>-><a class=\"id\" href=\"#skip\">skip</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#trace\">trace</a>-><a class=\"id\" href=\"#nr_entries\">nr_entries</a> &lt; <a class=\"id\" href=\"#trace\">trace</a>-><a class=\"id\" href=\"#max_entries\">max_entries</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace\">trace</a>-><a class=\"id\" href=\"#entries\">entries</a>[<a class=\"id\" href=\"#trace\">trace</a>-><a class=\"id\" href=\"#nr_entries\">nr_entries</a>++] = <a class=\"id\" href=\"#addr\">addr</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#save_stack_address\">save_stack_address</a>(void *<a class=\"id\" href=\"#data\">data</a>, unsigned long <a class=\"id\" href=\"#addr\">addr</a>, int <a class=\"id\" href=\"#reliable\">reliable</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__save_stack_address\">__save_stack_address</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#reliable\">reliable</a>, <a class=\"id\" href=\"#false\">false</a>);", 
"}", 
"", 
"static void", 
"<a class=\"id\" href=\"#save_stack_address_nosched\">save_stack_address_nosched</a>(void *<a class=\"id\" href=\"#data\">data</a>, unsigned long <a class=\"id\" href=\"#addr\">addr</a>, int <a class=\"id\" href=\"#reliable\">reliable</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__save_stack_address\">__save_stack_address</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#reliable\">reliable</a>, <a class=\"id\" href=\"#true\">true</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#stacktrace_ops\">stacktrace_ops</a> <a class=\"id\" href=\"#save_stack_ops\">save_stack_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#warning\">warning</a><span class=\"ts\"/>= <a class=\"id\" href=\"#save_stack_warning\">save_stack_warning</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#warning_symbol\">warning_symbol</a><span class=\"ts\"/>= <a class=\"id\" href=\"#save_stack_warning_symbol\">save_stack_warning_symbol</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stack\">stack</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#save_stack_stack\">save_stack_stack</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#address\">address</a><span class=\"ts\"/>= <a class=\"id\" href=\"#save_stack_address\">save_stack_address</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#walk_stack\">walk_stack</a><span class=\"ts\"/>= <a class=\"id\" href=\"#print_context_stack\">print_context_stack</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#stacktrace_ops\">stacktrace_ops</a> <a class=\"id\" href=\"#save_stack_ops_nosched\">save_stack_ops_nosched</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#warning\">warning</a><span class=\"ts\"/>= <a class=\"id\" href=\"#save_stack_warning\">save_stack_warning</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#warning_symbol\">warning_symbol</a><span class=\"ts\"/>= <a class=\"id\" href=\"#save_stack_warning_symbol\">save_stack_warning_symbol</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stack\">stack</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#save_stack_stack\">save_stack_stack</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#address\">address</a><span class=\"ts\"/>= <a class=\"id\" href=\"#save_stack_address_nosched\">save_stack_address_nosched</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#walk_stack\">walk_stack</a><span class=\"ts\"/>= <a class=\"id\" href=\"#print_context_stack\">print_context_stack</a>,", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Save stack-backtrace addresses into a stack_trace buffer.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#save_stack_trace\">save_stack_trace</a>(struct <a class=\"id\" href=\"#stack_trace\">stack_trace</a> *<a class=\"id\" href=\"#trace\">trace</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dump_trace\">dump_trace</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0, &amp;<a class=\"id\" href=\"#save_stack_ops\">save_stack_ops</a>, <a class=\"id\" href=\"#trace\">trace</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#trace\">trace</a>-><a class=\"id\" href=\"#nr_entries\">nr_entries</a> &lt; <a class=\"id\" href=\"#trace\">trace</a>-><a class=\"id\" href=\"#max_entries\">max_entries</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace\">trace</a>-><a class=\"id\" href=\"#entries\">entries</a>[<a class=\"id\" href=\"#trace\">trace</a>-><a class=\"id\" href=\"#nr_entries\">nr_entries</a>++] = <a class=\"id\" href=\"#ULONG_MAX\">ULONG_MAX</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#save_stack_trace\">save_stack_trace</a>);", 
"", 
"void <a class=\"id\" href=\"#save_stack_trace_bp\">save_stack_trace_bp</a>(struct <a class=\"id\" href=\"#stack_trace\">stack_trace</a> *<a class=\"id\" href=\"#trace\">trace</a>, unsigned long <a class=\"id\" href=\"#bp\">bp</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dump_trace\">dump_trace</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#bp\">bp</a>, &amp;<a class=\"id\" href=\"#save_stack_ops\">save_stack_ops</a>, <a class=\"id\" href=\"#trace\">trace</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#trace\">trace</a>-><a class=\"id\" href=\"#nr_entries\">nr_entries</a> &lt; <a class=\"id\" href=\"#trace\">trace</a>-><a class=\"id\" href=\"#max_entries\">max_entries</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace\">trace</a>-><a class=\"id\" href=\"#entries\">entries</a>[<a class=\"id\" href=\"#trace\">trace</a>-><a class=\"id\" href=\"#nr_entries\">nr_entries</a>++] = <a class=\"id\" href=\"#ULONG_MAX\">ULONG_MAX</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#save_stack_trace_tsk\">save_stack_trace_tsk</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>, struct <a class=\"id\" href=\"#stack_trace\">stack_trace</a> *<a class=\"id\" href=\"#trace\">trace</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dump_trace\">dump_trace</a>(<a class=\"id\" href=\"#tsk\">tsk</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0, &amp;<a class=\"id\" href=\"#save_stack_ops_nosched\">save_stack_ops_nosched</a>, <a class=\"id\" href=\"#trace\">trace</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#trace\">trace</a>-><a class=\"id\" href=\"#nr_entries\">nr_entries</a> &lt; <a class=\"id\" href=\"#trace\">trace</a>-><a class=\"id\" href=\"#max_entries\">max_entries</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace\">trace</a>-><a class=\"id\" href=\"#entries\">entries</a>[<a class=\"id\" href=\"#trace\">trace</a>-><a class=\"id\" href=\"#nr_entries\">nr_entries</a>++] = <a class=\"id\" href=\"#ULONG_MAX\">ULONG_MAX</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#save_stack_trace_tsk\">save_stack_trace_tsk</a>);", 
"", 
"<span class=\"comment\">/* Userspace stacktrace - based on kernel/trace/trace_sysprof.c */</span>", 
"", 
"struct <a class=\"id\" href=\"#stack_frame_user\">stack_frame_user</a> {", 
"<span class=\"ts\"/>const void <a class=\"id\" href=\"#__user\">__user</a><span class=\"ts\"/>*<a class=\"id\" href=\"#next_fp\">next_fp</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_addr\">ret_addr</a>;", 
"};", 
"", 
"static int", 
"<a class=\"id\" href=\"#copy_stack_frame\">copy_stack_frame</a>(const void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#fp\">fp</a>, struct <a class=\"id\" href=\"#stack_frame_user\">stack_frame_user</a> *<a class=\"id\" href=\"#frame\">frame</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#access_ok\">access_ok</a>(<a class=\"id\" href=\"#VERIFY_READ\">VERIFY_READ</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof(*<a class=\"id\" href=\"#frame\">frame</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pagefault_disable\">pagefault_disable</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#__copy_from_user_inatomic\">__copy_from_user_inatomic</a>(<a class=\"id\" href=\"#frame\">frame</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof(*<a class=\"id\" href=\"#frame\">frame</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pagefault_enable\">pagefault_enable</a>();", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__save_stack_trace_user\">__save_stack_trace_user</a>(struct <a class=\"id\" href=\"#stack_trace\">stack_trace</a> *<a class=\"id\" href=\"#trace\">trace</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a> = <a class=\"id\" href=\"#task_pt_regs\">task_pt_regs</a>(<a class=\"id\" href=\"#current\">current</a>);", 
"<span class=\"ts\"/>const void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#fp\">fp</a> = (const void <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#bp\">bp</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#trace\">trace</a>-><a class=\"id\" href=\"#nr_entries\">nr_entries</a> &lt; <a class=\"id\" href=\"#trace\">trace</a>-><a class=\"id\" href=\"#max_entries\">max_entries</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace\">trace</a>-><a class=\"id\" href=\"#entries\">entries</a>[<a class=\"id\" href=\"#trace\">trace</a>-><a class=\"id\" href=\"#nr_entries\">nr_entries</a>++] = <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#ip\">ip</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#trace\">trace</a>-><a class=\"id\" href=\"#nr_entries\">nr_entries</a> &lt; <a class=\"id\" href=\"#trace\">trace</a>-><a class=\"id\" href=\"#max_entries\">max_entries</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#stack_frame_user\">stack_frame_user</a> <a class=\"id\" href=\"#frame\">frame</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#frame\">frame</a>.<a class=\"id\" href=\"#next_fp\">next_fp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#frame\">frame</a>.<a class=\"id\" href=\"#ret_addr\">ret_addr</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#copy_stack_frame\">copy_stack_frame</a>(<a class=\"id\" href=\"#fp\">fp</a>, &amp;<a class=\"id\" href=\"#frame\">frame</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((unsigned long)<a class=\"id\" href=\"#fp\">fp</a> &lt; <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#sp\">sp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#frame\">frame</a>.<a class=\"id\" href=\"#ret_addr\">ret_addr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace\">trace</a>-><a class=\"id\" href=\"#entries\">entries</a>[<a class=\"id\" href=\"#trace\">trace</a>-><a class=\"id\" href=\"#nr_entries\">nr_entries</a>++] =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#frame\">frame</a>.<a class=\"id\" href=\"#ret_addr\">ret_addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fp\">fp</a> == <a class=\"id\" href=\"#frame\">frame</a>.<a class=\"id\" href=\"#next_fp\">next_fp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fp\">fp</a> = <a class=\"id\" href=\"#frame\">frame</a>.<a class=\"id\" href=\"#next_fp\">next_fp</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"void <a class=\"id\" href=\"#save_stack_trace_user\">save_stack_trace_user</a>(struct <a class=\"id\" href=\"#stack_trace\">stack_trace</a> *<a class=\"id\" href=\"#trace\">trace</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Trace user stack if we are not a kernel thread</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__save_stack_trace_user\">__save_stack_trace_user</a>(<a class=\"id\" href=\"#trace\">trace</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#trace\">trace</a>-><a class=\"id\" href=\"#nr_entries\">nr_entries</a> &lt; <a class=\"id\" href=\"#trace\">trace</a>-><a class=\"id\" href=\"#max_entries\">max_entries</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace\">trace</a>-><a class=\"id\" href=\"#entries\">entries</a>[<a class=\"id\" href=\"#trace\">trace</a>-><a class=\"id\" href=\"#nr_entries\">nr_entries</a>++] = <a class=\"id\" href=\"#ULONG_MAX\">ULONG_MAX</a>;", 
"}", 
"", 
];
xr_frag_insert('l/6c/cf71963a672651f57efff2d7869a47cad6aa4a.xr', __xr_tmp);
