var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_ASM_X86_MCE_H\">_ASM_X86_MCE_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_ASM_X86_MCE_H\">_ASM_X86_MCE_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#ioctls\">ioctls</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Machine Check support for x86</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCG_BANKCNT_MASK\">MCG_BANKCNT_MASK</a><span class=\"ts\"/>0xff         <span class=\"comment\">/* Number of Banks */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCG_CTL_P\">MCG_CTL_P</a><span class=\"ts\"/><span class=\"ts\"/>(1ULL<<8)    <span class=\"comment\">/* MCG_CTL register available */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCG_EXT_P\">MCG_EXT_P</a><span class=\"ts\"/><span class=\"ts\"/>(1ULL<<9)    <span class=\"comment\">/* Extended registers available */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCG_CMCI_P\">MCG_CMCI_P</a><span class=\"ts\"/><span class=\"ts\"/>(1ULL<<10)   <span class=\"comment\">/* CMCI supported */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCG_EXT_CNT_MASK\">MCG_EXT_CNT_MASK</a><span class=\"ts\"/>0xff0000     <span class=\"comment\">/* Number of Extended registers */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCG_EXT_CNT_SHIFT\">MCG_EXT_CNT_SHIFT</a><span class=\"ts\"/>16", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCG_EXT_CNT\">MCG_EXT_CNT</a>(<a class=\"id\" href=\"#c\">c</a>)<span class=\"ts\"/><span class=\"ts\"/>(((<a class=\"id\" href=\"#c\">c</a>) &amp; <a class=\"id\" href=\"#MCG_EXT_CNT_MASK\">MCG_EXT_CNT_MASK</a>) >> <a class=\"id\" href=\"#MCG_EXT_CNT_SHIFT\">MCG_EXT_CNT_SHIFT</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCG_SER_P\">MCG_SER_P</a><span class=\"ts\"/> <span class=\"ts\"/>(1ULL<<24)   <span class=\"comment\">/* MCA recovery/new status bits */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCG_STATUS_RIPV\">MCG_STATUS_RIPV</a>  (1ULL<<0)   <span class=\"comment\">/* restart ip valid */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCG_STATUS_EIPV\">MCG_STATUS_EIPV</a>  (1ULL<<1)   <span class=\"comment\">/* ip points to correct instruction */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCG_STATUS_MCIP\">MCG_STATUS_MCIP</a>  (1ULL<<2)   <span class=\"comment\">/* machine check in progress */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCI_STATUS_VAL\">MCI_STATUS_VAL</a>   (1ULL<<63)  <span class=\"comment\">/* valid error */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCI_STATUS_OVER\">MCI_STATUS_OVER</a>  (1ULL<<62)  <span class=\"comment\">/* previous errors lost */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCI_STATUS_UC\">MCI_STATUS_UC</a>    (1ULL<<61)  <span class=\"comment\">/* uncorrected error */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCI_STATUS_EN\">MCI_STATUS_EN</a>    (1ULL<<60)  <span class=\"comment\">/* error enabled */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCI_STATUS_MISCV\">MCI_STATUS_MISCV</a> (1ULL<<59)  <span class=\"comment\">/* misc error reg. valid */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCI_STATUS_ADDRV\">MCI_STATUS_ADDRV</a> (1ULL<<58)  <span class=\"comment\">/* addr reg. valid */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCI_STATUS_PCC\">MCI_STATUS_PCC</a>   (1ULL<<57)  <span class=\"comment\">/* processor context corrupt */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCI_STATUS_S\">MCI_STATUS_S</a><span class=\"ts\"/> (1ULL<<56)  <span class=\"comment\">/* Signaled machine check */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCI_STATUS_AR\">MCI_STATUS_AR</a><span class=\"ts\"/> (1ULL<<55)  <span class=\"comment\">/* Action required */</span>", 
"", 
"<span class=\"comment\">/* MISC register defines */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCM_ADDR_SEGOFF\">MCM_ADDR_SEGOFF</a>  0<span class=\"ts\"/><span class=\"comment\">/* segment offset */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCM_ADDR_LINEAR\">MCM_ADDR_LINEAR</a>  1<span class=\"ts\"/><span class=\"comment\">/* linear address */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCM_ADDR_PHYS\">MCM_ADDR_PHYS</a><span class=\"ts\"/> 2<span class=\"ts\"/><span class=\"comment\">/* physical address */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCM_ADDR_MEM\">MCM_ADDR_MEM</a><span class=\"ts\"/> 3<span class=\"ts\"/><span class=\"comment\">/* memory address */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCM_ADDR_GENERIC\">MCM_ADDR_GENERIC</a> 7<span class=\"ts\"/><span class=\"comment\">/* generic */</span>", 
"", 
"<span class=\"comment\">/* CTL2 register defines */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCI_CTL2_CMCI_EN\">MCI_CTL2_CMCI_EN</a><span class=\"ts\"/><span class=\"ts\"/>(1ULL << 30)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCI_CTL2_CMCI_THRESHOLD_MASK\">MCI_CTL2_CMCI_THRESHOLD_MASK</a><span class=\"ts\"/>0x7fffULL", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCJ_CTX_MASK\">MCJ_CTX_MASK</a><span class=\"ts\"/><span class=\"ts\"/>3", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCJ_CTX\">MCJ_CTX</a>(<a class=\"id\" href=\"#flags\">flags</a>)<span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#flags\">flags</a>) &amp; <a class=\"id\" href=\"#MCJ_CTX_MASK\">MCJ_CTX_MASK</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCJ_CTX_RANDOM\">MCJ_CTX_RANDOM</a><span class=\"ts\"/><span class=\"ts\"/>0    <span class=\"comment\">/* inject context: random */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCJ_CTX_PROCESS\">MCJ_CTX_PROCESS</a><span class=\"ts\"/><span class=\"ts\"/>1    <span class=\"comment\">/* inject context: process */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCJ_CTX_IRQ\">MCJ_CTX_IRQ</a><span class=\"ts\"/><span class=\"ts\"/>2    <span class=\"comment\">/* inject context: IRQ */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCJ_NMI_BROADCAST\">MCJ_NMI_BROADCAST</a><span class=\"ts\"/>4    <span class=\"comment\">/* do NMI broadcasting */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCJ_EXCEPTION\">MCJ_EXCEPTION</a><span class=\"ts\"/><span class=\"ts\"/>8    <span class=\"comment\">/* raise as exception */</span>", 
"", 
"<span class=\"comment\">/* Fields are zero when not available */</span>", 
"struct <a class=\"id\" href=\"#mce\">mce</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#misc\">misc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#mcgstatus\">mcgstatus</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#ip\">ip</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#tsc\">tsc</a>;<span class=\"ts\"/><span class=\"comment\">/* cpu time stamp counter */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#time\">time</a>;<span class=\"ts\"/><span class=\"comment\">/* wall time_t when error was detected */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a>  <a class=\"id\" href=\"#cpuvendor\">cpuvendor</a>;<span class=\"ts\"/><span class=\"comment\">/* cpu vendor as encoded in system.h */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a>  <a class=\"id\" href=\"#inject_flags\">inject_flags</a>;<span class=\"ts\"/><span class=\"comment\">/* software inject flags */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a>  <a class=\"id\" href=\"#pad\">pad</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#cpuid\">cpuid</a>;<span class=\"ts\"/><span class=\"comment\">/* CPUID 1 EAX */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a>  <a class=\"id\" href=\"#cs\">cs</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* code segment */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a>  <a class=\"id\" href=\"#bank\">bank</a>;<span class=\"ts\"/><span class=\"comment\">/* machine check bank */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a>  <a class=\"id\" href=\"#cpu\">cpu</a>;<span class=\"ts\"/><span class=\"comment\">/* cpu number; obsolete; use extcpu now */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a>  <a class=\"id\" href=\"#finished\">finished</a>;   <span class=\"comment\">/* entry is valid */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#extcpu\">extcpu</a>;<span class=\"ts\"/><span class=\"comment\">/* linux cpu number that detected the error */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#socketid\">socketid</a>;<span class=\"ts\"/><span class=\"comment\">/* CPU socket ID */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#apicid\">apicid</a>;<span class=\"ts\"/><span class=\"comment\">/* CPU initial apic ID */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#mcgcap\">mcgcap</a>;<span class=\"ts\"/><span class=\"comment\">/* MCGCAP MSR: machine check capabilities of CPU */</span>", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This structure contains all data related to the MCE log.  Also</span>", 
"<span class=\"comment\"> * carries a signature to make it easier to find from external</span>", 
"<span class=\"comment\"> * debugging tools.  Each entry is only valid when its finished flag</span>", 
"<span class=\"comment\"> * is set.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCE_LOG_LEN\">MCE_LOG_LEN</a> 32", 
"", 
"struct <a class=\"id\" href=\"#mce_log\">mce_log</a> {", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#signature\">signature</a>[12]; <span class=\"comment\">/* \"MACHINECHECK\" */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#len\">len</a>;<span class=\"ts\"/>    <span class=\"comment\">/* = MCE_LOG_LEN */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#recordlen\">recordlen</a>;<span class=\"ts\"/><span class=\"comment\">/* length of struct mce */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mce\">mce</a> <a class=\"id\" href=\"#entry\">entry</a>[<a class=\"id\" href=\"#MCE_LOG_LEN\">MCE_LOG_LEN</a>];", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCE_OVERFLOW\">MCE_OVERFLOW</a> 0<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* bit 0 in flags means overflow */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCE_LOG_SIGNATURE\">MCE_LOG_SIGNATURE</a><span class=\"ts\"/>\"MACHINECHECK\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCE_GET_RECORD_LEN\">MCE_GET_RECORD_LEN</a>   <a class=\"id\" href=\"#_IOR\">_IOR</a>('M', 1, int)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCE_GET_LOG_LEN\">MCE_GET_LOG_LEN</a>      <a class=\"id\" href=\"#_IOR\">_IOR</a>('M', 2, int)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCE_GETCLEAR_FLAGS\">MCE_GETCLEAR_FLAGS</a>   <a class=\"id\" href=\"#_IOR\">_IOR</a>('M', 3, int)", 
"", 
"<span class=\"comment\">/* Software defined banks */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCE_EXTENDED_BANK\">MCE_EXTENDED_BANK</a><span class=\"ts\"/>128", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MCE_THERMAL_BANK\">MCE_THERMAL_BANK</a><span class=\"ts\"/><a class=\"id\" href=\"#MCE_EXTENDED_BANK\">MCE_EXTENDED_BANK</a> + 0", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#K8_MCE_THRESHOLD_BASE\">K8_MCE_THRESHOLD_BASE</a>      (<a class=\"id\" href=\"#MCE_EXTENDED_BANK\">MCE_EXTENDED_BANK</a> + 1)      <span class=\"comment\">/* MCE_AMD */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#K8_MCE_THRESHOLD_BANK_0\">K8_MCE_THRESHOLD_BANK_0</a>    (<a class=\"id\" href=\"#MCE_THRESHOLD_BASE\">MCE_THRESHOLD_BASE</a> + 0 * 9)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#K8_MCE_THRESHOLD_BANK_1\">K8_MCE_THRESHOLD_BANK_1</a>    (<a class=\"id\" href=\"#MCE_THRESHOLD_BASE\">MCE_THRESHOLD_BASE</a> + 1 * 9)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#K8_MCE_THRESHOLD_BANK_2\">K8_MCE_THRESHOLD_BANK_2</a>    (<a class=\"id\" href=\"#MCE_THRESHOLD_BASE\">MCE_THRESHOLD_BASE</a> + 2 * 9)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#K8_MCE_THRESHOLD_BANK_3\">K8_MCE_THRESHOLD_BANK_3</a>    (<a class=\"id\" href=\"#MCE_THRESHOLD_BASE\">MCE_THRESHOLD_BASE</a> + 3 * 9)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#K8_MCE_THRESHOLD_BANK_4\">K8_MCE_THRESHOLD_BANK_4</a>    (<a class=\"id\" href=\"#MCE_THRESHOLD_BASE\">MCE_THRESHOLD_BASE</a> + 4 * 9)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#K8_MCE_THRESHOLD_BANK_5\">K8_MCE_THRESHOLD_BANK_5</a>    (<a class=\"id\" href=\"#MCE_THRESHOLD_BASE\">MCE_THRESHOLD_BASE</a> + 5 * 9)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#K8_MCE_THRESHOLD_DRAM_ECC\">K8_MCE_THRESHOLD_DRAM_ECC</a>  (<a class=\"id\" href=\"#MCE_THRESHOLD_BANK_4\">MCE_THRESHOLD_BANK_4</a> + 0)", 
"", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"", 
"extern struct <a class=\"id\" href=\"#atomic_notifier_head\">atomic_notifier_head</a> <a class=\"id\" href=\"#x86_mce_decoder_chain\">x86_mce_decoder_chain</a>;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#percpu\">percpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#atomic\">atomic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"extern int <a class=\"id\" href=\"#mce_disabled\">mce_disabled</a>;", 
"extern int <a class=\"id\" href=\"#mce_p5_enabled\">mce_p5_enabled</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_MCE\">CONFIG_X86_MCE</a>", 
"int <a class=\"id\" href=\"#mcheck_init\">mcheck_init</a>(void);", 
"void <a class=\"id\" href=\"#mcheck_cpu_init\">mcheck_cpu_init</a>(struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> *<a class=\"id\" href=\"#c\">c</a>);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#mcheck_init\">mcheck_init</a>(void) { return 0; }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#mcheck_cpu_init\">mcheck_cpu_init</a>(struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> *<a class=\"id\" href=\"#c\">c</a>) {}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_ANCIENT_MCE\">CONFIG_X86_ANCIENT_MCE</a>", 
"void <a class=\"id\" href=\"#intel_p5_mcheck_init\">intel_p5_mcheck_init</a>(struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> *<a class=\"id\" href=\"#c\">c</a>);", 
"void <a class=\"id\" href=\"#winchip_mcheck_init\">winchip_mcheck_init</a>(struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> *<a class=\"id\" href=\"#c\">c</a>);", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#enable_p5_mce\">enable_p5_mce</a>(void) { <a class=\"id\" href=\"#mce_p5_enabled\">mce_p5_enabled</a> = 1; }", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#intel_p5_mcheck_init\">intel_p5_mcheck_init</a>(struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> *<a class=\"id\" href=\"#c\">c</a>) {}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#winchip_mcheck_init\">winchip_mcheck_init</a>(struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> *<a class=\"id\" href=\"#c\">c</a>) {}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#enable_p5_mce\">enable_p5_mce</a>(void) {}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"extern void (*<a class=\"id\" href=\"#x86_mce_decode_callback\">x86_mce_decode_callback</a>)(struct <a class=\"id\" href=\"#mce\">mce</a> *<a class=\"id\" href=\"#m\">m</a>);", 
"", 
"void <a class=\"id\" href=\"#mce_setup\">mce_setup</a>(struct <a class=\"id\" href=\"#mce\">mce</a> *<a class=\"id\" href=\"#m\">m</a>);", 
"void <a class=\"id\" href=\"#mce_log\">mce_log</a>(struct <a class=\"id\" href=\"#mce\">mce</a> *<a class=\"id\" href=\"#m\">m</a>);", 
"<a class=\"id\" href=\"#DECLARE_PER_CPU\">DECLARE_PER_CPU</a>(struct <a class=\"id\" href=\"#sys_device\">sys_device</a>, <a class=\"id\" href=\"#mce_dev\">mce_dev</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Maximum banks number.</span>", 
"<span class=\"comment\"> * This is the limit of the current register layout on</span>", 
"<span class=\"comment\"> * Intel CPUs.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_NR_BANKS\">MAX_NR_BANKS</a> 32", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_MCE_INTEL\">CONFIG_X86_MCE_INTEL</a>", 
"extern int <a class=\"id\" href=\"#mce_cmci_disabled\">mce_cmci_disabled</a>;", 
"extern int <a class=\"id\" href=\"#mce_ignore_ce\">mce_ignore_ce</a>;", 
"void <a class=\"id\" href=\"#mce_intel_feature_init\">mce_intel_feature_init</a>(struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> *<a class=\"id\" href=\"#c\">c</a>);", 
"void <a class=\"id\" href=\"#cmci_clear\">cmci_clear</a>(void);", 
"void <a class=\"id\" href=\"#cmci_reenable\">cmci_reenable</a>(void);", 
"void <a class=\"id\" href=\"#cmci_rediscover\">cmci_rediscover</a>(int <a class=\"id\" href=\"#dying\">dying</a>);", 
"void <a class=\"id\" href=\"#cmci_recheck\">cmci_recheck</a>(void);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#mce_intel_feature_init\">mce_intel_feature_init</a>(struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> *<a class=\"id\" href=\"#c\">c</a>) { }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#cmci_clear\">cmci_clear</a>(void) {}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#cmci_reenable\">cmci_reenable</a>(void) {}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#cmci_rediscover\">cmci_rediscover</a>(int <a class=\"id\" href=\"#dying\">dying</a>) {}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#cmci_recheck\">cmci_recheck</a>(void) {}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_MCE_AMD\">CONFIG_X86_MCE_AMD</a>", 
"void <a class=\"id\" href=\"#mce_amd_feature_init\">mce_amd_feature_init</a>(struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> *<a class=\"id\" href=\"#c\">c</a>);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#mce_amd_feature_init\">mce_amd_feature_init</a>(struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> *<a class=\"id\" href=\"#c\">c</a>) { }", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"int <a class=\"id\" href=\"#mce_available\">mce_available</a>(struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> *<a class=\"id\" href=\"#c\">c</a>);", 
"", 
"<a class=\"id\" href=\"#DECLARE_PER_CPU\">DECLARE_PER_CPU</a>(unsigned, <a class=\"id\" href=\"#mce_exception_count\">mce_exception_count</a>);", 
"<a class=\"id\" href=\"#DECLARE_PER_CPU\">DECLARE_PER_CPU</a>(unsigned, <a class=\"id\" href=\"#mce_poll_count\">mce_poll_count</a>);", 
"", 
"extern <a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#mce_entry\">mce_entry</a>;", 
"", 
"typedef <a class=\"id\" href=\"#DECLARE_BITMAP\">DECLARE_BITMAP</a>(<a class=\"id\" href=\"#mce_banks_t\">mce_banks_t</a>, <a class=\"id\" href=\"#MAX_NR_BANKS\">MAX_NR_BANKS</a>);", 
"<a class=\"id\" href=\"#DECLARE_PER_CPU\">DECLARE_PER_CPU</a>(<a class=\"id\" href=\"#mce_banks_t\">mce_banks_t</a>, <a class=\"id\" href=\"#mce_poll_banks\">mce_poll_banks</a>);", 
"", 
"enum <a class=\"id\" href=\"#mcp_flags\">mcp_flags</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MCP_TIMESTAMP\">MCP_TIMESTAMP</a> = (1 << 0),<span class=\"ts\"/><span class=\"comment\">/* log time stamp */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MCP_UC\">MCP_UC</a> = (1 << 1),<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* log uncorrected errors */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MCP_DONTLOG\">MCP_DONTLOG</a> = (1 << 2),<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* only clear, don't log */</span>", 
"};", 
"void <a class=\"id\" href=\"#machine_check_poll\">machine_check_poll</a>(enum <a class=\"id\" href=\"#mcp_flags\">mcp_flags</a> <a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#mce_banks_t\">mce_banks_t</a> *<a class=\"id\" href=\"#b\">b</a>);", 
"", 
"int <a class=\"id\" href=\"#mce_notify_irq\">mce_notify_irq</a>(void);", 
"void <a class=\"id\" href=\"#mce_notify_process\">mce_notify_process</a>(void);", 
"", 
"<a class=\"id\" href=\"#DECLARE_PER_CPU\">DECLARE_PER_CPU</a>(struct <a class=\"id\" href=\"#mce\">mce</a>, <a class=\"id\" href=\"#injectm\">injectm</a>);", 
"extern struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#mce_chrdev_ops\">mce_chrdev_ops</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Exception handler</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/* Call the installed machine check handler for this CPU setup. */</span>", 
"extern void (*<a class=\"id\" href=\"#machine_check_vector\">machine_check_vector</a>)(struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *, long <a class=\"id\" href=\"#error_code\">error_code</a>);", 
"void <a class=\"id\" href=\"#do_machine_check\">do_machine_check</a>(struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *, long);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Threshold handler</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"extern void (*<a class=\"id\" href=\"#mce_threshold_vector\">mce_threshold_vector</a>)(void);", 
"extern void (*<a class=\"id\" href=\"#threshold_cpu_callback\">threshold_cpu_callback</a>)(unsigned long <a class=\"id\" href=\"#action\">action</a>, unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Thermal handler</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#intel_init_thermal\">intel_init_thermal</a>(struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> *<a class=\"id\" href=\"#c\">c</a>);", 
"", 
"void <a class=\"id\" href=\"#mce_log_therm_throt_event\">mce_log_therm_throt_event</a>(<a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#status\">status</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_THERMAL_VECTOR\">CONFIG_X86_THERMAL_VECTOR</a>", 
"extern void <a class=\"id\" href=\"#mcheck_intel_therm_init\">mcheck_intel_therm_init</a>(void);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#mcheck_intel_therm_init\">mcheck_intel_therm_init</a>(void) { }", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Used by APEI to report memory error via /dev/mcelog</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#cper_sec_mem_err\">cper_sec_mem_err</a>;", 
"extern void <a class=\"id\" href=\"#apei_mce_report_mem_error\">apei_mce_report_mem_error</a>(int <a class=\"id\" href=\"#corrected\">corrected</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#cper_sec_mem_err\">cper_sec_mem_err</a> *<a class=\"id\" href=\"#mem_err\">mem_err</a>);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __KERNEL__ */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _ASM_X86_MCE_H */</span>", 
];
xr_frag_insert('l/6c/d9d72c84e955e8b9a2a87daaa28c7689690c6b.xr', __xr_tmp);
