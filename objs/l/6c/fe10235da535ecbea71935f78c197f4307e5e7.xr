var __xr_tmp = [
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__get_user\">__get_user</a>(<a class=\"id\" href=\"#xstate_bv\">xstate_bv</a>, &amp;<a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#xstate_hdr\">xstate_hdr</a>.<a class=\"id\" href=\"#xstate_bv\">xstate_bv</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * For legacy compatible, we always set FP/SSE bits in the bit</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * vector while saving the state to the user context. This will</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * enable us capturing any changes(during sigreturn) to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the FP/SSE bits by the legacy applications which don't touch</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * xstate_bv in the xsave header.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * xsave aware apps can change the xstate_bv in the xsave</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * header as well as change any contents in the memory layout.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * xrestore as part of sigreturn will capture all the changes.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xstate_bv\">xstate_bv</a> |= <a class=\"id\" href=\"#XSTATE_FPSSE\">XSTATE_FPSSE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#xstate_bv\">xstate_bv</a>, &amp;<a class=\"id\" href=\"#x\">x</a>-><a class=\"id\" href=\"#xstate_hdr\">xstate_hdr</a>.<a class=\"id\" href=\"#xstate_bv\">xstate_bv</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Restore the extended state if present. Otherwise, restore the FP/SSE</span>", 
"<span class=\"comment\"> * state.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#restore_user_xstate\">restore_user_xstate</a>(void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#_fpx_sw_bytes\">_fpx_sw_bytes</a> <a class=\"id\" href=\"#fx_sw_user\">fx_sw_user</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (((unsigned long)<a class=\"id\" href=\"#buf\">buf</a> % 64) ||", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#check_for_xstate\">check_for_xstate</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#buf\">buf</a>, &amp;<a class=\"id\" href=\"#fx_sw_user\">fx_sw_user</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fx_only\">fx_only</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#fx_sw_user\">fx_sw_user</a>.<a class=\"id\" href=\"#xstate_bv\">xstate_bv</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * restore the state passed by the user.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#xrestore_user\">xrestore_user</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * init the state skipped by the user.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#pcntxt_mask\">pcntxt_mask</a> &amp; ~<a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#mask\">mask</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xrstor_state\">xrstor_state</a>(<a class=\"id\" href=\"#init_xstate_buf\">init_xstate_buf</a>, <a class=\"id\" href=\"#mask\">mask</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#fx_only\">fx_only</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * couldn't find the extended state information in the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * memory layout. Restore just the FP/SSE and init all</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the other extended state.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xrstor_state\">xrstor_state</a>(<a class=\"id\" href=\"#init_xstate_buf\">init_xstate_buf</a>, <a class=\"id\" href=\"#pcntxt_mask\">pcntxt_mask</a> &amp; ~<a class=\"id\" href=\"#XSTATE_FPSSE\">XSTATE_FPSSE</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#fxrstor_checking\">fxrstor_checking</a>((<a class=\"id\" href=\"#__force\">__force</a> struct <a class=\"id\" href=\"#i387_fxsave_struct\">i387_fxsave_struct</a> *)<a class=\"id\" href=\"#buf\">buf</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This restores directly out of user space. Exceptions are handled.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#restore_i387_xstate\">restore_i387_xstate</a>(void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a> = <a class=\"id\" href=\"#current\">current</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#buf\">buf</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#used_math\">used_math</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#clear\">clear</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#access_ok\">access_ok</a>(<a class=\"id\" href=\"#VERIFY_READ\">VERIFY_READ</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#sig_xstate_size\">sig_xstate_size</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#used_math\">used_math</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#init_fpu\">init_fpu</a>(<a class=\"id\" href=\"#tsk\">tsk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#task_thread_info\">task_thread_info</a>(<a class=\"id\" href=\"#current\">current</a>)-><a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#TS_USEDFPU\">TS_USEDFPU</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clts\">clts</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#task_thread_info\">task_thread_info</a>(<a class=\"id\" href=\"#current\">current</a>)-><a class=\"id\" href=\"#status\">status</a> |= <a class=\"id\" href=\"#TS_USEDFPU\">TS_USEDFPU</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#use_xsave\">use_xsave</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#restore_user_xstate\">restore_user_xstate</a>(<a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#fxrstor_checking\">fxrstor_checking</a>((<a class=\"id\" href=\"#__force\">__force</a> struct <a class=\"id\" href=\"#i387_fxsave_struct\">i387_fxsave_struct</a> *)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#err\">err</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Encountered an error while doing the restore from the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * user buffer, clear the fpu state.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<a class=\"id\" href=\"#clear\">clear</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_fpu\">clear_fpu</a>(<a class=\"id\" href=\"#tsk\">tsk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_used_math\">clear_used_math</a>();", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Prepare the SW reserved portion of the fxsave memory layout, indicating</span>", 
"<span class=\"comment\"> * the presence of the extended state information in the memory layout</span>", 
"<span class=\"comment\"> * pointed by the fpstate pointer in the sigcontext.</span>", 
"<span class=\"comment\"> * This will be saved when ever the FP and extended state context is</span>", 
"<span class=\"comment\"> * saved on the user stack during the signal handler delivery to the user.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#prepare_fx_sw_frame\">prepare_fx_sw_frame</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#size_extended\">size_extended</a> = (<a class=\"id\" href=\"#xstate_size\">xstate_size</a> - sizeof(struct <a class=\"id\" href=\"#i387_fxsave_struct\">i387_fxsave_struct</a>)) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#FP_XSTATE_MAGIC2_SIZE\">FP_XSTATE_MAGIC2_SIZE</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sig_xstate_size\">sig_xstate_size</a> = sizeof(struct <a class=\"id\" href=\"#_fpstate\">_fpstate</a>) + <a class=\"id\" href=\"#size_extended\">size_extended</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IA32_EMULATION\">CONFIG_IA32_EMULATION</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sig_xstate_ia32_size\">sig_xstate_ia32_size</a> = sizeof(struct <a class=\"id\" href=\"#_fpstate_ia32\">_fpstate_ia32</a>) + <a class=\"id\" href=\"#size_extended\">size_extended</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#fx_sw_reserved\">fx_sw_reserved</a>, 0, sizeof(<a class=\"id\" href=\"#fx_sw_reserved\">fx_sw_reserved</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fx_sw_reserved\">fx_sw_reserved</a>.<a class=\"id\" href=\"#magic1\">magic1</a> = <a class=\"id\" href=\"#FP_XSTATE_MAGIC1\">FP_XSTATE_MAGIC1</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fx_sw_reserved\">fx_sw_reserved</a>.<a class=\"id\" href=\"#extended_size\">extended_size</a> = <a class=\"id\" href=\"#sig_xstate_size\">sig_xstate_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fx_sw_reserved\">fx_sw_reserved</a>.<a class=\"id\" href=\"#xstate_bv\">xstate_bv</a> = <a class=\"id\" href=\"#pcntxt_mask\">pcntxt_mask</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fx_sw_reserved\">fx_sw_reserved</a>.<a class=\"id\" href=\"#xstate_size\">xstate_size</a> = <a class=\"id\" href=\"#xstate_size\">xstate_size</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IA32_EMULATION\">CONFIG_IA32_EMULATION</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#fx_sw_reserved_ia32\">fx_sw_reserved_ia32</a>, &amp;<a class=\"id\" href=\"#fx_sw_reserved\">fx_sw_reserved</a>,", 
"<span class=\"ts\"/>       sizeof(struct <a class=\"id\" href=\"#_fpx_sw_bytes\">_fpx_sw_bytes</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fx_sw_reserved_ia32\">fx_sw_reserved_ia32</a>.<a class=\"id\" href=\"#extended_size\">extended_size</a> = <a class=\"id\" href=\"#sig_xstate_ia32_size\">sig_xstate_ia32_size</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"unsigned int <a class=\"id\" href=\"#sig_xstate_size\">sig_xstate_size</a> = sizeof(struct <a class=\"id\" href=\"#_fpstate\">_fpstate</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Enable the extended processor state save/restore feature</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#xstate_enable\">xstate_enable</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_in_cr4\">set_in_cr4</a>(<a class=\"id\" href=\"#X86_CR4_OSXSAVE\">X86_CR4_OSXSAVE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xsetbv\">xsetbv</a>(<a class=\"id\" href=\"#XCR_XFEATURE_ENABLED_MASK\">XCR_XFEATURE_ENABLED_MASK</a>, <a class=\"id\" href=\"#pcntxt_mask\">pcntxt_mask</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Record the offsets and sizes of different state managed by the xsave</span>", 
"<span class=\"comment\"> * memory layout.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#setup_xstate_features\">setup_xstate_features</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#eax\">eax</a>, <a class=\"id\" href=\"#ebx\">ebx</a>, <a class=\"id\" href=\"#ecx\">ecx</a>, <a class=\"id\" href=\"#edx\">edx</a>, <a class=\"id\" href=\"#leaf\">leaf</a> = 0x2;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xstate_features\">xstate_features</a> = <a class=\"id\" href=\"#fls64\">fls64</a>(<a class=\"id\" href=\"#pcntxt_mask\">pcntxt_mask</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xstate_offsets\">xstate_offsets</a> = <a class=\"id\" href=\"#alloc_bootmem\">alloc_bootmem</a>(<a class=\"id\" href=\"#xstate_features\">xstate_features</a> * sizeof(int));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xstate_sizes\">xstate_sizes</a> = <a class=\"id\" href=\"#alloc_bootmem\">alloc_bootmem</a>(<a class=\"id\" href=\"#xstate_features\">xstate_features</a> * sizeof(int));", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpuid_count\">cpuid_count</a>(<a class=\"id\" href=\"#XSTATE_CPUID\">XSTATE_CPUID</a>, <a class=\"id\" href=\"#leaf\">leaf</a>, &amp;<a class=\"id\" href=\"#eax\">eax</a>, &amp;<a class=\"id\" href=\"#ebx\">ebx</a>, &amp;<a class=\"id\" href=\"#ecx\">ecx</a>, &amp;<a class=\"id\" href=\"#edx\">edx</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#eax\">eax</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xstate_offsets\">xstate_offsets</a>[<a class=\"id\" href=\"#leaf\">leaf</a>] = <a class=\"id\" href=\"#ebx\">ebx</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xstate_sizes\">xstate_sizes</a>[<a class=\"id\" href=\"#leaf\">leaf</a>] = <a class=\"id\" href=\"#eax\">eax</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#leaf\">leaf</a>++;", 
"<span class=\"ts\"/>} while (1);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * setup the xstate image representing the init state</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#setup_xstate_init\">setup_xstate_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#setup_xstate_features\">setup_xstate_features</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Setup init_xstate_buf to represent the init state of</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * all the features managed by the xsave</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_xstate_buf\">init_xstate_buf</a> = <a class=\"id\" href=\"#alloc_bootmem\">alloc_bootmem</a>(<a class=\"id\" href=\"#xstate_size\">xstate_size</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_xstate_buf\">init_xstate_buf</a>-><a class=\"id\" href=\"#i387\">i387</a>.<a class=\"id\" href=\"#mxcsr\">mxcsr</a> = <a class=\"id\" href=\"#MXCSR_DEFAULT\">MXCSR_DEFAULT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clts\">clts</a>();", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Init all the features state with header_bv being 0x0</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xrstor_state\">xrstor_state</a>(<a class=\"id\" href=\"#init_xstate_buf\">init_xstate_buf</a>, -1);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Dump the init state again. This is to identify the init state</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * of any feature which is not represented by all zero's.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xsave_state\">xsave_state</a>(<a class=\"id\" href=\"#init_xstate_buf\">init_xstate_buf</a>, -1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stts\">stts</a>();", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Enable and initialize the xsave feature.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#xstate_enable_boot_cpu\">xstate_enable_boot_cpu</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#eax\">eax</a>, <a class=\"id\" href=\"#ebx\">ebx</a>, <a class=\"id\" href=\"#ecx\">ecx</a>, <a class=\"id\" href=\"#edx\">edx</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#cpuid_level\">cpuid_level</a> &lt; <a class=\"id\" href=\"#XSTATE_CPUID\">XSTATE_CPUID</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN\">WARN</a>(1, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"XSTATE_CPUID missing\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpuid_count\">cpuid_count</a>(<a class=\"id\" href=\"#XSTATE_CPUID\">XSTATE_CPUID</a>, 0, &amp;<a class=\"id\" href=\"#eax\">eax</a>, &amp;<a class=\"id\" href=\"#ebx\">ebx</a>, &amp;<a class=\"id\" href=\"#ecx\">ecx</a>, &amp;<a class=\"id\" href=\"#edx\">edx</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pcntxt_mask\">pcntxt_mask</a> = <a class=\"id\" href=\"#eax\">eax</a> + ((<a class=\"id\" href=\"#u64\">u64</a>)<a class=\"id\" href=\"#edx\">edx</a> << 32);", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#pcntxt_mask\">pcntxt_mask</a> &amp; <a class=\"id\" href=\"#XSTATE_FPSSE\">XSTATE_FPSSE</a>) != <a class=\"id\" href=\"#XSTATE_FPSSE\">XSTATE_FPSSE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"FP/SSE not shown under xsave features 0x%llx\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#pcntxt_mask\">pcntxt_mask</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Support only the state known to OS.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pcntxt_mask\">pcntxt_mask</a> = <a class=\"id\" href=\"#pcntxt_mask\">pcntxt_mask</a> &amp; <a class=\"id\" href=\"#XCNTXT_MASK\">XCNTXT_MASK</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xstate_enable\">xstate_enable</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Recompute the context size for enabled features</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpuid_count\">cpuid_count</a>(<a class=\"id\" href=\"#XSTATE_CPUID\">XSTATE_CPUID</a>, 0, &amp;<a class=\"id\" href=\"#eax\">eax</a>, &amp;<a class=\"id\" href=\"#ebx\">ebx</a>, &amp;<a class=\"id\" href=\"#ecx\">ecx</a>, &amp;<a class=\"id\" href=\"#edx\">edx</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xstate_size\">xstate_size</a> = <a class=\"id\" href=\"#ebx\">ebx</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#update_regset_xstate_info\">update_regset_xstate_info</a>(<a class=\"id\" href=\"#xstate_size\">xstate_size</a>, <a class=\"id\" href=\"#pcntxt_mask\">pcntxt_mask</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#prepare_fx_sw_frame\">prepare_fx_sw_frame</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#setup_xstate_init\">setup_xstate_init</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"xsave/xrstor: enabled xstate_bv 0x%llx, \"", 
"<span class=\"ts\"/>       \"cntxt size 0x%x\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#pcntxt_mask\">pcntxt_mask</a>, <a class=\"id\" href=\"#xstate_size\">xstate_size</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * For the very first instance, this calls xstate_enable_boot_cpu();</span>", 
"<span class=\"comment\"> * for all subsequent instances, this calls xstate_enable().</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is somewhat obfuscated due to the lack of powerful enough</span>", 
"<span class=\"comment\"> * overrides for the section checks.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#xsave_init\">xsave_init</a>(void)", 
"{", 
"<span class=\"ts\"/>static <a class=\"id\" href=\"#__refdata\">__refdata</a> void (*<a class=\"id\" href=\"#next_func\">next_func</a>)(void) = <a class=\"id\" href=\"#xstate_enable_boot_cpu\">xstate_enable_boot_cpu</a>;", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#this_func\">this_func</a>)(void);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cpu_has_xsave\">cpu_has_xsave</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#this_func\">this_func</a> = <a class=\"id\" href=\"#next_func\">next_func</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#next_func\">next_func</a> = <a class=\"id\" href=\"#xstate_enable\">xstate_enable</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#this_func\">this_func</a>();", 
"}", 
];
xr_frag_insert('l/6c/fe10235da535ecbea71935f78c197f4307e5e7.xr', __xr_tmp);
