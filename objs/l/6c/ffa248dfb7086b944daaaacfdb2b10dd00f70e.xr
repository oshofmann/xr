var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * INET<span class=\"ts\"/><span class=\"ts\"/>An implementation of the TCP/IP protocol suite for the LINUX</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>operating system.  INET is implemented using the  BSD Socket</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>interface as the means of communication with the user level.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Global definitions for the INET interface module.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Version:<span class=\"ts\"/>@(#)if.h<span class=\"ts\"/>1.0.2<span class=\"ts\"/>04/18/93</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Authors:<span class=\"ts\"/>Original taken from Berkeley UNIX 4.3, (c) UCB 1982-1988</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Ross Biro</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Fred N. van Kempen, &lt;waltje@uWalt.NL.Mugnet.ORG&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_IF_H\">_LINUX_IF_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_IF_H\">_LINUX_IF_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* for \"__kernel_caddr_t\" et al<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#h\">h</a>&gt;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* for \"struct sockaddr\" et al<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#compiler\">compiler</a>.<a class=\"id\" href=\"#h\">h</a>&gt;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* for \"__user\" et al           */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#IFNAMSIZ\">IFNAMSIZ</a><span class=\"ts\"/>16", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#IFALIASZ\">IFALIASZ</a><span class=\"ts\"/>256", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#hdlc\">hdlc</a>/<a class=\"id\" href=\"#ioctl\">ioctl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* Standard interface flags (netdevice-&gt;flags). */</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#IFF_UP\">IFF_UP</a><span class=\"ts\"/><span class=\"ts\"/>0x1<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* interface is up<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#IFF_BROADCAST\">IFF_BROADCAST</a><span class=\"ts\"/>0x2<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* broadcast address valid<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#IFF_DEBUG\">IFF_DEBUG</a><span class=\"ts\"/>0x4<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* turn on debugging<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#IFF_LOOPBACK\">IFF_LOOPBACK</a><span class=\"ts\"/>0x8<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* is a loopback net<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#IFF_POINTOPOINT\">IFF_POINTOPOINT</a><span class=\"ts\"/>0x10<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* interface is has p-p link<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#IFF_NOTRAILERS\">IFF_NOTRAILERS</a><span class=\"ts\"/>0x20<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* avoid use of trailers<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#IFF_RUNNING\">IFF_RUNNING</a><span class=\"ts\"/>0x40<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* interface RFC2863 OPER_UP<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#IFF_NOARP\">IFF_NOARP</a><span class=\"ts\"/>0x80<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* no ARP protocol<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#IFF_PROMISC\">IFF_PROMISC</a><span class=\"ts\"/>0x100<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* receive all packets<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#IFF_ALLMULTI\">IFF_ALLMULTI</a><span class=\"ts\"/>0x200<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* receive all multicast packets*/</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IFF_MASTER\">IFF_MASTER</a><span class=\"ts\"/>0x400<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* master of a load balancer <span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IFF_SLAVE\">IFF_SLAVE</a><span class=\"ts\"/>0x800<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* slave of a load balancer<span class=\"ts\"/>*/</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IFF_MULTICAST\">IFF_MULTICAST</a><span class=\"ts\"/>0x1000<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Supports multicast<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IFF_PORTSEL\">IFF_PORTSEL</a><span class=\"ts\"/>0x2000          <span class=\"comment\">/* can set media type<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IFF_AUTOMEDIA\">IFF_AUTOMEDIA</a><span class=\"ts\"/>0x4000<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* auto media select active<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IFF_DYNAMIC\">IFF_DYNAMIC</a><span class=\"ts\"/>0x8000<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* dialup device with changing addresses*/</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IFF_LOWER_UP\">IFF_LOWER_UP</a><span class=\"ts\"/>0x10000<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* driver signals L1 up<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IFF_DORMANT\">IFF_DORMANT</a><span class=\"ts\"/>0x20000<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* driver signals dormant<span class=\"ts\"/>*/</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IFF_ECHO\">IFF_ECHO</a><span class=\"ts\"/>0x40000<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* echo sent packets<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IFF_VOLATILE\">IFF_VOLATILE</a><span class=\"ts\"/>(<a class=\"id\" href=\"#IFF_LOOPBACK\">IFF_LOOPBACK</a>|<a class=\"id\" href=\"#IFF_POINTOPOINT\">IFF_POINTOPOINT</a>|<a class=\"id\" href=\"#IFF_BROADCAST\">IFF_BROADCAST</a>|<a class=\"id\" href=\"#IFF_ECHO\">IFF_ECHO</a>|\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IFF_MASTER\">IFF_MASTER</a>|<a class=\"id\" href=\"#IFF_SLAVE\">IFF_SLAVE</a>|<a class=\"id\" href=\"#IFF_RUNNING\">IFF_RUNNING</a>|<a class=\"id\" href=\"#IFF_LOWER_UP\">IFF_LOWER_UP</a>|<a class=\"id\" href=\"#IFF_DORMANT\">IFF_DORMANT</a>)", 
"", 
"<span class=\"comment\">/* Private (from user) interface flags (netdevice-&gt;priv_flags). */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IFF_802_1Q_VLAN\">IFF_802_1Q_VLAN</a> 0x1             <span class=\"comment\">/* 802.1Q VLAN device.          */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IFF_EBRIDGE\">IFF_EBRIDGE</a><span class=\"ts\"/>0x2<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Ethernet bridging device.<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IFF_SLAVE_INACTIVE\">IFF_SLAVE_INACTIVE</a><span class=\"ts\"/>0x4<span class=\"ts\"/><span class=\"comment\">/* bonding slave not the curr. active */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IFF_MASTER_8023AD\">IFF_MASTER_8023AD</a><span class=\"ts\"/>0x8<span class=\"ts\"/><span class=\"comment\">/* bonding master, 802.3ad. <span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IFF_MASTER_ALB\">IFF_MASTER_ALB</a><span class=\"ts\"/>0x10<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* bonding master, balance-alb.<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IFF_BONDING\">IFF_BONDING</a><span class=\"ts\"/>0x20<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* bonding master or slave<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IFF_SLAVE_NEEDARP\">IFF_SLAVE_NEEDARP</a> 0x40<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* need ARPs for validation<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IFF_ISATAP\">IFF_ISATAP</a><span class=\"ts\"/>0x80<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ISATAP interface (RFC4214)<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IFF_MASTER_ARPMON\">IFF_MASTER_ARPMON</a> 0x100<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* bonding master, ARP mon in use */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IFF_WAN_HDLC\">IFF_WAN_HDLC</a><span class=\"ts\"/>0x200<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* WAN HDLC device<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IFF_XMIT_DST_RELEASE\">IFF_XMIT_DST_RELEASE</a> 0x400<span class=\"ts\"/><span class=\"comment\">/* dev_hard_start_xmit() is allowed to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * release skb-&gt;dst</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IFF_DONT_BRIDGE\">IFF_DONT_BRIDGE</a> 0x800<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* disallow bridging this ether dev */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IFF_IN_NETPOLL\">IFF_IN_NETPOLL</a><span class=\"ts\"/>0x1000<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* whether we are processing netpoll */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IFF_DISABLE_NETPOLL\">IFF_DISABLE_NETPOLL</a><span class=\"ts\"/>0x2000<span class=\"ts\"/><span class=\"comment\">/* disable netpoll at run-time */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IFF_MACVLAN_PORT\">IFF_MACVLAN_PORT</a><span class=\"ts\"/>0x4000<span class=\"ts\"/><span class=\"comment\">/* device used as macvlan port */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IFF_BRIDGE_PORT\">IFF_BRIDGE_PORT</a><span class=\"ts\"/>0x8000<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* device used as bridge port */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IF_GET_IFACE\">IF_GET_IFACE</a><span class=\"ts\"/>0x0001<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* for querying only */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IF_GET_PROTO\">IF_GET_PROTO</a><span class=\"ts\"/>0x0002", 
"", 
"<span class=\"comment\">/* For definitions see hdlc.h */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IF_IFACE_V35\">IF_IFACE_V35</a><span class=\"ts\"/>0x1000<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* V.35 serial interface<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IF_IFACE_V24\">IF_IFACE_V24</a><span class=\"ts\"/>0x1001<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* V.24 serial interface<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IF_IFACE_X21\">IF_IFACE_X21</a><span class=\"ts\"/>0x1002<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* X.21 serial interface<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IF_IFACE_T1\">IF_IFACE_T1</a><span class=\"ts\"/>0x1003<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* T1 telco serial interface<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IF_IFACE_E1\">IF_IFACE_E1</a><span class=\"ts\"/>0x1004<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* E1 telco serial interface<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IF_IFACE_SYNC_SERIAL\">IF_IFACE_SYNC_SERIAL</a> 0x1005<span class=\"ts\"/><span class=\"comment\">/* can't be set by software<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IF_IFACE_X21D\">IF_IFACE_X21D</a>   0x1006          <span class=\"comment\">/* X.21 Dual Clocking (FarSite) */</span>", 
"", 
"<span class=\"comment\">/* For definitions see hdlc.h */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IF_PROTO_HDLC\">IF_PROTO_HDLC</a><span class=\"ts\"/>0x2000<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* raw HDLC protocol<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IF_PROTO_PPP\">IF_PROTO_PPP</a><span class=\"ts\"/>0x2001<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* PPP protocol<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IF_PROTO_CISCO\">IF_PROTO_CISCO</a><span class=\"ts\"/>0x2002<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Cisco HDLC protocol<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IF_PROTO_FR\">IF_PROTO_FR</a><span class=\"ts\"/>0x2003<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Frame Relay protocol<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IF_PROTO_FR_ADD_PVC\">IF_PROTO_FR_ADD_PVC</a> 0x2004<span class=\"ts\"/><span class=\"comment\">/*    Create FR PVC<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IF_PROTO_FR_DEL_PVC\">IF_PROTO_FR_DEL_PVC</a> 0x2005<span class=\"ts\"/><span class=\"comment\">/*    Delete FR PVC<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IF_PROTO_X25\">IF_PROTO_X25</a><span class=\"ts\"/>0x2006<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* X.25<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IF_PROTO_HDLC_ETH\">IF_PROTO_HDLC_ETH</a> 0x2007<span class=\"ts\"/><span class=\"comment\">/* raw HDLC, Ethernet emulation<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IF_PROTO_FR_ADD_ETH_PVC\">IF_PROTO_FR_ADD_ETH_PVC</a> 0x2008<span class=\"ts\"/><span class=\"comment\">/*  Create FR Ethernet-bridged PVC */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IF_PROTO_FR_DEL_ETH_PVC\">IF_PROTO_FR_DEL_ETH_PVC</a> 0x2009<span class=\"ts\"/><span class=\"comment\">/*  Delete FR Ethernet-bridged PVC */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IF_PROTO_FR_PVC\">IF_PROTO_FR_PVC</a><span class=\"ts\"/>0x200A<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* for reading PVC status<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IF_PROTO_FR_ETH_PVC\">IF_PROTO_FR_ETH_PVC</a> 0x200B", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IF_PROTO_RAW\">IF_PROTO_RAW</a>    0x200C          <span class=\"comment\">/* RAW Socket                   */</span>", 
"", 
"<span class=\"comment\">/* RFC 2863 operational status */</span>", 
"enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IF_OPER_UNKNOWN\">IF_OPER_UNKNOWN</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IF_OPER_NOTPRESENT\">IF_OPER_NOTPRESENT</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IF_OPER_DOWN\">IF_OPER_DOWN</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IF_OPER_LOWERLAYERDOWN\">IF_OPER_LOWERLAYERDOWN</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IF_OPER_TESTING\">IF_OPER_TESTING</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IF_OPER_DORMANT\">IF_OPER_DORMANT</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IF_OPER_UP\">IF_OPER_UP</a>,", 
"};", 
"", 
"<span class=\"comment\">/* link modes */</span>", 
"enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IF_LINK_MODE_DEFAULT\">IF_LINK_MODE_DEFAULT</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IF_LINK_MODE_DORMANT\">IF_LINK_MODE_DORMANT</a>,<span class=\"ts\"/><span class=\"comment\">/* limit upward transition to dormant */</span>", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Device mapping structure. I'd just gone off and designed a </span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>beautiful scheme using only loadable modules with arguments</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>for driver options and along come the PCMCIA people 8)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Ah well. The get() side of this is good for WDSETUP, and it'll</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>be handy for debugging things. The set side is fine for now and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>being very small might be worth keeping for clean configuration.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#ifmap\">ifmap</a> {", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#mem_start\">mem_start</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#mem_end\">mem_end</a>;", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#base_addr\">base_addr</a>; ", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#dma\">dma</a>;", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* 3 bytes spare */</span>", 
"};", 
"", 
"struct <a class=\"id\" href=\"#if_settings\">if_settings</a> {", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#type\">type</a>;<span class=\"ts\"/><span class=\"comment\">/* Type of physical device or protocol */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#size\">size</a>;<span class=\"ts\"/><span class=\"comment\">/* Size of the data allocated by the caller */</span>", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* {atm/eth/dsl}_settings anyone ? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_hdlc_proto\">raw_hdlc_proto</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#raw_hdlc\">raw_hdlc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cisco_proto\">cisco_proto</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#cisco\">cisco</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fr_proto\">fr_proto</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#fr\">fr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fr_proto_pvc\">fr_proto_pvc</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#fr_pvc\">fr_pvc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fr_proto_pvc_info\">fr_proto_pvc_info</a><span class=\"ts\"/><a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#fr_pvc_info\">fr_pvc_info</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* interface settings */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sync_serial_settings\">sync_serial_settings</a><span class=\"ts\"/><a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#sync\">sync</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#te1_settings\">te1_settings</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#te1\">te1</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#ifs_ifsu\">ifs_ifsu</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Interface request structure used for socket</span>", 
"<span class=\"comment\"> * ioctl's.  All interface ioctl's must have parameter</span>", 
"<span class=\"comment\"> * definitions which begin with ifr_name.  The</span>", 
"<span class=\"comment\"> * remainder may be interface specific.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#ifreq\">ifreq</a> {", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IFHWADDRLEN\">IFHWADDRLEN</a><span class=\"ts\"/>6", 
"<span class=\"ts\"/>union", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>char<span class=\"ts\"/><a class=\"id\" href=\"#ifrn_name\">ifrn_name</a>[<a class=\"id\" href=\"#IFNAMSIZ\">IFNAMSIZ</a>];<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* if name, e.g. \"en0\" */</span>", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#ifr_ifrn\">ifr_ifrn</a>;", 
"<span class=\"ts\"/>", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct<span class=\"ts\"/><a class=\"id\" href=\"#sockaddr\">sockaddr</a> <a class=\"id\" href=\"#ifru_addr\">ifru_addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct<span class=\"ts\"/><a class=\"id\" href=\"#sockaddr\">sockaddr</a> <a class=\"id\" href=\"#ifru_dstaddr\">ifru_dstaddr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct<span class=\"ts\"/><a class=\"id\" href=\"#sockaddr\">sockaddr</a> <a class=\"id\" href=\"#ifru_broadaddr\">ifru_broadaddr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct<span class=\"ts\"/><a class=\"id\" href=\"#sockaddr\">sockaddr</a> <a class=\"id\" href=\"#ifru_netmask\">ifru_netmask</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct  <a class=\"id\" href=\"#sockaddr\">sockaddr</a> <a class=\"id\" href=\"#ifru_hwaddr\">ifru_hwaddr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>short<span class=\"ts\"/><a class=\"id\" href=\"#ifru_flags\">ifru_flags</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#ifru_ivalue\">ifru_ivalue</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#ifru_mtu\">ifru_mtu</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct  <a class=\"id\" href=\"#ifmap\">ifmap</a> <a class=\"id\" href=\"#ifru_map\">ifru_map</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>char<span class=\"ts\"/><a class=\"id\" href=\"#ifru_slave\">ifru_slave</a>[<a class=\"id\" href=\"#IFNAMSIZ\">IFNAMSIZ</a>];<span class=\"ts\"/><span class=\"comment\">/* Just fits the size */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>char<span class=\"ts\"/><a class=\"id\" href=\"#ifru_newname\">ifru_newname</a>[<a class=\"id\" href=\"#IFNAMSIZ\">IFNAMSIZ</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>void <a class=\"id\" href=\"#__user\">__user</a> *<span class=\"ts\"/><a class=\"id\" href=\"#ifru_data\">ifru_data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct<span class=\"ts\"/><a class=\"id\" href=\"#if_settings\">if_settings</a> <a class=\"id\" href=\"#ifru_settings\">ifru_settings</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#ifr_ifru\">ifr_ifru</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ifr_name\">ifr_name</a><span class=\"ts\"/><a class=\"id\" href=\"#ifr_ifrn\">ifr_ifrn</a>.<a class=\"id\" href=\"#ifrn_name\">ifrn_name</a><span class=\"ts\"/><span class=\"comment\">/* interface name <span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ifr_hwaddr\">ifr_hwaddr</a><span class=\"ts\"/><a class=\"id\" href=\"#ifr_ifru\">ifr_ifru</a>.<a class=\"id\" href=\"#ifru_hwaddr\">ifru_hwaddr</a><span class=\"ts\"/><span class=\"comment\">/* MAC address <span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#ifr_addr\">ifr_addr</a><span class=\"ts\"/><a class=\"id\" href=\"#ifr_ifru\">ifr_ifru</a>.<a class=\"id\" href=\"#ifru_addr\">ifru_addr</a><span class=\"ts\"/><span class=\"comment\">/* address<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#ifr_dstaddr\">ifr_dstaddr</a><span class=\"ts\"/><a class=\"id\" href=\"#ifr_ifru\">ifr_ifru</a>.<a class=\"id\" href=\"#ifru_dstaddr\">ifru_dstaddr</a><span class=\"ts\"/><span class=\"comment\">/* other end of p-p lnk<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#ifr_broadaddr\">ifr_broadaddr</a><span class=\"ts\"/><a class=\"id\" href=\"#ifr_ifru\">ifr_ifru</a>.<a class=\"id\" href=\"#ifru_broadaddr\">ifru_broadaddr</a><span class=\"ts\"/><span class=\"comment\">/* broadcast address<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#ifr_netmask\">ifr_netmask</a><span class=\"ts\"/><a class=\"id\" href=\"#ifr_ifru\">ifr_ifru</a>.<a class=\"id\" href=\"#ifru_netmask\">ifru_netmask</a><span class=\"ts\"/><span class=\"comment\">/* interface net mask<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#ifr_flags\">ifr_flags</a><span class=\"ts\"/><a class=\"id\" href=\"#ifr_ifru\">ifr_ifru</a>.<a class=\"id\" href=\"#ifru_flags\">ifru_flags</a><span class=\"ts\"/><span class=\"comment\">/* flags<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#ifr_metric\">ifr_metric</a><span class=\"ts\"/><a class=\"id\" href=\"#ifr_ifru\">ifr_ifru</a>.<a class=\"id\" href=\"#ifru_ivalue\">ifru_ivalue</a><span class=\"ts\"/><span class=\"comment\">/* metric<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#ifr_mtu\">ifr_mtu</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifr_ifru\">ifr_ifru</a>.<a class=\"id\" href=\"#ifru_mtu\">ifru_mtu</a><span class=\"ts\"/><span class=\"comment\">/* mtu<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ifr_map\">ifr_map</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifr_ifru\">ifr_ifru</a>.<a class=\"id\" href=\"#ifru_map\">ifru_map</a><span class=\"ts\"/><span class=\"comment\">/* device map<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ifr_slave\">ifr_slave</a><span class=\"ts\"/><a class=\"id\" href=\"#ifr_ifru\">ifr_ifru</a>.<a class=\"id\" href=\"#ifru_slave\">ifru_slave</a><span class=\"ts\"/><span class=\"comment\">/* slave device<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#ifr_data\">ifr_data</a><span class=\"ts\"/><a class=\"id\" href=\"#ifr_ifru\">ifr_ifru</a>.<a class=\"id\" href=\"#ifru_data\">ifru_data</a><span class=\"ts\"/><span class=\"comment\">/* for use by interface<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ifr_ifindex\">ifr_ifindex</a><span class=\"ts\"/><a class=\"id\" href=\"#ifr_ifru\">ifr_ifru</a>.<a class=\"id\" href=\"#ifru_ivalue\">ifru_ivalue</a><span class=\"ts\"/><span class=\"comment\">/* interface index<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ifr_bandwidth\">ifr_bandwidth</a><span class=\"ts\"/><a class=\"id\" href=\"#ifr_ifru\">ifr_ifru</a>.<a class=\"id\" href=\"#ifru_ivalue\">ifru_ivalue</a>    <span class=\"comment\">/* link bandwidth<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ifr_qlen\">ifr_qlen</a><span class=\"ts\"/><a class=\"id\" href=\"#ifr_ifru\">ifr_ifru</a>.<a class=\"id\" href=\"#ifru_ivalue\">ifru_ivalue</a><span class=\"ts\"/><span class=\"comment\">/* Queue length <span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ifr_newname\">ifr_newname</a><span class=\"ts\"/><a class=\"id\" href=\"#ifr_ifru\">ifr_ifru</a>.<a class=\"id\" href=\"#ifru_newname\">ifru_newname</a><span class=\"ts\"/><span class=\"comment\">/* New name<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ifr_settings\">ifr_settings</a><span class=\"ts\"/><a class=\"id\" href=\"#ifr_ifru\">ifr_ifru</a>.<a class=\"id\" href=\"#ifru_settings\">ifru_settings</a><span class=\"ts\"/><span class=\"comment\">/* Device/proto settings*/</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Structure used in SIOCGIFCONF request.</span>", 
"<span class=\"comment\"> * Used to retrieve interface configuration</span>", 
"<span class=\"comment\"> * for machine (useful for programs which</span>", 
"<span class=\"comment\"> * must know all networks accessible).</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#ifconf\">ifconf</a>  {", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#ifc_len\">ifc_len</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* size of buffer<span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ifcu_buf\">ifcu_buf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ifreq\">ifreq</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ifcu_req\">ifcu_req</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#ifc_ifcu\">ifc_ifcu</a>;", 
"};", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#ifc_buf\">ifc_buf</a><span class=\"ts\"/><a class=\"id\" href=\"#ifc_ifcu\">ifc_ifcu</a>.<a class=\"id\" href=\"#ifcu_buf\">ifcu_buf</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* buffer address<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#ifc_req\">ifc_req</a><span class=\"ts\"/><a class=\"id\" href=\"#ifc_ifcu\">ifc_ifcu</a>.<a class=\"id\" href=\"#ifcu_req\">ifcu_req</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* array of structures<span class=\"ts\"/>*/</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _LINUX_IF_H */</span>", 
];
xr_frag_insert('l/6c/ffa248dfb7086b944daaaacfdb2b10dd00f70e.xr', __xr_tmp);
