var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * RTC subsystem, interface functions</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2005 Tower Technologies</span>", 
"<span class=\"comment\"> * Author: Alessandro Zummo &lt;a.zummo@towertech.it&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * based on arch/arm/common/rtctime.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> * it under the terms of the GNU General Public License version 2 as</span>", 
"<span class=\"comment\"> * published by the Free Software Foundation.</span>", 
"<span class=\"comment\">*/</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rtc\">rtc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#log2\">log2</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"int <a class=\"id\" href=\"#rtc_read_time\">rtc_read_time</a>(struct <a class=\"id\" href=\"#rtc_device\">rtc_device</a> *<a class=\"id\" href=\"#rtc\">rtc</a>, struct <a class=\"id\" href=\"#rtc_time\">rtc_time</a> *<a class=\"id\" href=\"#tm\">tm</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#mutex_lock_interruptible\">mutex_lock_interruptible</a>(&amp;<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops_lock\">ops_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops\">ops</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>else if (!<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#read_time\">read_time</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#tm\">tm</a>, 0, sizeof(struct <a class=\"id\" href=\"#rtc_time\">rtc_time</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#read_time\">read_time</a>(<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#tm\">tm</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops_lock\">ops_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#rtc_read_time\">rtc_read_time</a>);", 
"", 
"int <a class=\"id\" href=\"#rtc_set_time\">rtc_set_time</a>(struct <a class=\"id\" href=\"#rtc_device\">rtc_device</a> *<a class=\"id\" href=\"#rtc\">rtc</a>, struct <a class=\"id\" href=\"#rtc_time\">rtc_time</a> *<a class=\"id\" href=\"#tm\">tm</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#rtc_valid_tm\">rtc_valid_tm</a>(<a class=\"id\" href=\"#tm\">tm</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#mutex_lock_interruptible\">mutex_lock_interruptible</a>(&amp;<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops_lock\">ops_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops\">ops</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#set_time\">set_time</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#set_time\">set_time</a>(<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#tm\">tm</a>);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#set_mmss\">set_mmss</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#secs\">secs</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#rtc_tm_to_time\">rtc_tm_to_time</a>(<a class=\"id\" href=\"#tm\">tm</a>, &amp;<a class=\"id\" href=\"#secs\">secs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#set_mmss\">set_mmss</a>(<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#secs\">secs</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops_lock\">ops_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#rtc_set_time\">rtc_set_time</a>);", 
"", 
"int <a class=\"id\" href=\"#rtc_set_mmss\">rtc_set_mmss</a>(struct <a class=\"id\" href=\"#rtc_device\">rtc_device</a> *<a class=\"id\" href=\"#rtc\">rtc</a>, unsigned long <a class=\"id\" href=\"#secs\">secs</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#mutex_lock_interruptible\">mutex_lock_interruptible</a>(&amp;<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops_lock\">ops_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops\">ops</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#set_mmss\">set_mmss</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#set_mmss\">set_mmss</a>(<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#secs\">secs</a>);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#read_time\">read_time</a> && <a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#set_time\">set_time</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#rtc_time\">rtc_time</a> <a class=\"id\" href=\"#new\">new</a>, <a class=\"id\" href=\"#old\">old</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#read_time\">read_time</a>(<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#parent\">parent</a>, &amp;<a class=\"id\" href=\"#old\">old</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtc_time_to_tm\">rtc_time_to_tm</a>(<a class=\"id\" href=\"#secs\">secs</a>, &amp;<a class=\"id\" href=\"#new\">new</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * avoid writing when we're going to change the day of</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * the month. We will retry in the next minute. This</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * basically means that if the RTC must not drift</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * by more than 1 minute in 11 minutes.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!((<a class=\"id\" href=\"#old\">old</a>.<a class=\"id\" href=\"#tm_hour\">tm_hour</a> == 23 && <a class=\"id\" href=\"#old\">old</a>.<a class=\"id\" href=\"#tm_min\">tm_min</a> == 59) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#new\">new</a>.<a class=\"id\" href=\"#tm_hour\">tm_hour</a> == 23 && <a class=\"id\" href=\"#new\">new</a>.<a class=\"id\" href=\"#tm_min\">tm_min</a> == 59)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#set_time\">set_time</a>(<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#parent\">parent</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#new\">new</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops_lock\">ops_lock</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#rtc_set_mmss\">rtc_set_mmss</a>);", 
"", 
"static int <a class=\"id\" href=\"#rtc_read_alarm_internal\">rtc_read_alarm_internal</a>(struct <a class=\"id\" href=\"#rtc_device\">rtc_device</a> *<a class=\"id\" href=\"#rtc\">rtc</a>, struct <a class=\"id\" href=\"#rtc_wkalrm\">rtc_wkalrm</a> *<a class=\"id\" href=\"#alarm\">alarm</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#mutex_lock_interruptible\">mutex_lock_interruptible</a>(&amp;<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops_lock\">ops_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops\">ops</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>else if (!<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#read_alarm\">read_alarm</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#alarm\">alarm</a>, 0, sizeof(struct <a class=\"id\" href=\"#rtc_wkalrm\">rtc_wkalrm</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#read_alarm\">read_alarm</a>(<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#alarm\">alarm</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops_lock\">ops_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#rtc_read_alarm\">rtc_read_alarm</a>(struct <a class=\"id\" href=\"#rtc_device\">rtc_device</a> *<a class=\"id\" href=\"#rtc\">rtc</a>, struct <a class=\"id\" href=\"#rtc_wkalrm\">rtc_wkalrm</a> *<a class=\"id\" href=\"#alarm\">alarm</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtc_time\">rtc_time</a> <a class=\"id\" href=\"#before\">before</a>, <a class=\"id\" href=\"#now\">now</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#first_time\">first_time</a> = 1;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#t_now\">t_now</a>, <a class=\"id\" href=\"#t_alm\">t_alm</a>;", 
"<span class=\"ts\"/>enum { <a class=\"id\" href=\"#none\">none</a>, <a class=\"id\" href=\"#day\">day</a>, <a class=\"id\" href=\"#month\">month</a>, <a class=\"id\" href=\"#year\">year</a> } <a class=\"id\" href=\"#missing\">missing</a> = <a class=\"id\" href=\"#none\">none</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#days\">days</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* The lower level RTC driver may return -1 in some fields,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * creating invalid alarm-&gt;time values, for reasons like:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *   - The hardware may not be capable of filling them in;</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *     many alarms match only on time-of-day fields, not</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *     day/month/year calendar data.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *   - Some hardware uses illegal values as \"wildcard\" match</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *     values, which non-Linux firmware (like a BIOS) may try</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *     to set up as e.g. \"alarm 15 minutes after each hour\".</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *     Linux uses only oneshot alarms.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * When we see that here, we deal with it by using values from</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * a current RTC timestamp for any missing (-1) values.  The</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * RTC driver prevents \"periodic alarm\" modes.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * But this can be racey, because some fields of the RTC timestamp</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * may have wrapped in the interval since we read the RTC alarm,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * which would lead to us inserting inconsistent values in place</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * of the -1 fields.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Reading the alarm and timestamp in the reverse sequence</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * would have the same race condition, and not solve the issue.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * So, we must first read the RTC timestamp,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * then read the RTC alarm value,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and then read a second RTC timestamp.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If any fields of the second timestamp have changed</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * when compared with the first timestamp, then we know</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * our timestamp may be inconsistent with that used by</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the low-level rtc_read_alarm_internal() function.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * So, when the two timestamps disagree, we just loop and do</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the process again to get a fully consistent set of values.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This could all instead be done in the lower level driver,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * but since more than one lower level RTC implementation needs it,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * then it's probably best best to do it here instead of there..</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Get the \"before\" timestamp */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#rtc_read_time\">rtc_read_time</a>(<a class=\"id\" href=\"#rtc\">rtc</a>, &amp;<a class=\"id\" href=\"#before\">before</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#first_time\">first_time</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#before\">before</a>, &amp;<a class=\"id\" href=\"#now\">now</a>, sizeof(struct <a class=\"id\" href=\"#rtc_time\">rtc_time</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#first_time\">first_time</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* get the RTC alarm values, which may be incomplete */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#rtc_read_alarm_internal\">rtc_read_alarm_internal</a>(<a class=\"id\" href=\"#rtc\">rtc</a>, <a class=\"id\" href=\"#alarm\">alarm</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#alarm\">alarm</a>-><a class=\"id\" href=\"#enabled\">enabled</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* full-function RTCs won't have such missing fields */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rtc_valid_tm\">rtc_valid_tm</a>(&amp;<a class=\"id\" href=\"#alarm\">alarm</a>-><a class=\"id\" href=\"#time\">time</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* get the \"after\" timestamp, to detect wrapped fields */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#rtc_read_time\">rtc_read_time</a>(<a class=\"id\" href=\"#rtc\">rtc</a>, &amp;<a class=\"id\" href=\"#now\">now</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* note that tm_sec is a \"don't care\" value here: */</span>", 
"<span class=\"ts\"/>} while (   <a class=\"id\" href=\"#before\">before</a>.<a class=\"id\" href=\"#tm_min\">tm_min</a>   != <a class=\"id\" href=\"#now\">now</a>.<a class=\"id\" href=\"#tm_min\">tm_min</a>", 
"<span class=\"ts\"/><span class=\"ts\"/> || <a class=\"id\" href=\"#before\">before</a>.<a class=\"id\" href=\"#tm_hour\">tm_hour</a>  != <a class=\"id\" href=\"#now\">now</a>.<a class=\"id\" href=\"#tm_hour\">tm_hour</a>", 
"<span class=\"ts\"/><span class=\"ts\"/> || <a class=\"id\" href=\"#before\">before</a>.<a class=\"id\" href=\"#tm_mon\">tm_mon</a>   != <a class=\"id\" href=\"#now\">now</a>.<a class=\"id\" href=\"#tm_mon\">tm_mon</a>", 
"<span class=\"ts\"/><span class=\"ts\"/> || <a class=\"id\" href=\"#before\">before</a>.<a class=\"id\" href=\"#tm_year\">tm_year</a>  != <a class=\"id\" href=\"#now\">now</a>.<a class=\"id\" href=\"#tm_year\">tm_year</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Fill in the missing alarm fields using the timestamp; we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * know there's at least one since alarm-&gt;time is invalid.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#alarm\">alarm</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_sec\">tm_sec</a> == -1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alarm\">alarm</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_sec\">tm_sec</a> = <a class=\"id\" href=\"#now\">now</a>.<a class=\"id\" href=\"#tm_sec\">tm_sec</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#alarm\">alarm</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_min\">tm_min</a> == -1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alarm\">alarm</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_min\">tm_min</a> = <a class=\"id\" href=\"#now\">now</a>.<a class=\"id\" href=\"#tm_min\">tm_min</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#alarm\">alarm</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_hour\">tm_hour</a> == -1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alarm\">alarm</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_hour\">tm_hour</a> = <a class=\"id\" href=\"#now\">now</a>.<a class=\"id\" href=\"#tm_hour\">tm_hour</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* For simplicity, only support date rollover for now */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#alarm\">alarm</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_mday\">tm_mday</a> == -1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alarm\">alarm</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_mday\">tm_mday</a> = <a class=\"id\" href=\"#now\">now</a>.<a class=\"id\" href=\"#tm_mday\">tm_mday</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#missing\">missing</a> = <a class=\"id\" href=\"#day\">day</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#alarm\">alarm</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_mon\">tm_mon</a> == -1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alarm\">alarm</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_mon\">tm_mon</a> = <a class=\"id\" href=\"#now\">now</a>.<a class=\"id\" href=\"#tm_mon\">tm_mon</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#missing\">missing</a> == <a class=\"id\" href=\"#none\">none</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#missing\">missing</a> = <a class=\"id\" href=\"#month\">month</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#alarm\">alarm</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_year\">tm_year</a> == -1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alarm\">alarm</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_year\">tm_year</a> = <a class=\"id\" href=\"#now\">now</a>.<a class=\"id\" href=\"#tm_year\">tm_year</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#missing\">missing</a> == <a class=\"id\" href=\"#none\">none</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#missing\">missing</a> = <a class=\"id\" href=\"#year\">year</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* with luck, no rollover is needed */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtc_tm_to_time\">rtc_tm_to_time</a>(&amp;<a class=\"id\" href=\"#now\">now</a>, &amp;<a class=\"id\" href=\"#t_now\">t_now</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtc_tm_to_time\">rtc_tm_to_time</a>(&amp;<a class=\"id\" href=\"#alarm\">alarm</a>-><a class=\"id\" href=\"#time\">time</a>, &amp;<a class=\"id\" href=\"#t_alm\">t_alm</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#t_now\">t_now</a> &lt; <a class=\"id\" href=\"#t_alm\">t_alm</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#missing\">missing</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* 24 hour rollover ... if it's now 10am Monday, an alarm that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * that will trigger at 5am will do so at 5am Tuesday, which</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * could also be in the next month or year.  This is a common</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * case, especially for PCs.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#day\">day</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_dbg\">dev_dbg</a>(&amp;<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"alarm rollover: %s\\n\", \"day\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t_alm\">t_alm</a> += 24 * 60 * 60;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtc_time_to_tm\">rtc_time_to_tm</a>(<a class=\"id\" href=\"#t_alm\">t_alm</a>, &amp;<a class=\"id\" href=\"#alarm\">alarm</a>-><a class=\"id\" href=\"#time\">time</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Month rollover ... if it's the 31th, an alarm on the 3rd will</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * be next month.  An alarm matching on the 30th, 29th, or 28th</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * may end up in the month after that!  Many newer PCs support</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * this type of alarm.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#month\">month</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_dbg\">dev_dbg</a>(&amp;<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"alarm rollover: %s\\n\", \"month\");", 
"<span class=\"ts\"/><span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#alarm\">alarm</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_mon\">tm_mon</a> &lt; 11)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alarm\">alarm</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_mon\">tm_mon</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alarm\">alarm</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_mon\">tm_mon</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alarm\">alarm</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_year\">tm_year</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#days\">days</a> = <a class=\"id\" href=\"#rtc_month_days\">rtc_month_days</a>(<a class=\"id\" href=\"#alarm\">alarm</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_mon\">tm_mon</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alarm\">alarm</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_year\">tm_year</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} while (<a class=\"id\" href=\"#days\">days</a> &lt; <a class=\"id\" href=\"#alarm\">alarm</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_mday\">tm_mday</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Year rollover ... easy except for leap years! */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#year\">year</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_dbg\">dev_dbg</a>(&amp;<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"alarm rollover: %s\\n\", \"year\");", 
"<span class=\"ts\"/><span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alarm\">alarm</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_year\">tm_year</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>} while (<a class=\"id\" href=\"#rtc_valid_tm\">rtc_valid_tm</a>(&amp;<a class=\"id\" href=\"#alarm\">alarm</a>-><a class=\"id\" href=\"#time\">time</a>) != 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_warn\">dev_warn</a>(&amp;<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"alarm rollover not handled\\n\");", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#done\">done</a>:", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#rtc_read_alarm\">rtc_read_alarm</a>);", 
"", 
"int <a class=\"id\" href=\"#rtc_set_alarm\">rtc_set_alarm</a>(struct <a class=\"id\" href=\"#rtc_device\">rtc_device</a> *<a class=\"id\" href=\"#rtc\">rtc</a>, struct <a class=\"id\" href=\"#rtc_wkalrm\">rtc_wkalrm</a> *<a class=\"id\" href=\"#alarm\">alarm</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#rtc_valid_tm\">rtc_valid_tm</a>(&amp;<a class=\"id\" href=\"#alarm\">alarm</a>-><a class=\"id\" href=\"#time\">time</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#mutex_lock_interruptible\">mutex_lock_interruptible</a>(&amp;<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops_lock\">ops_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops\">ops</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>else if (!<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#set_alarm\">set_alarm</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#set_alarm\">set_alarm</a>(<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#alarm\">alarm</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops_lock\">ops_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#rtc_set_alarm\">rtc_set_alarm</a>);", 
"", 
"int <a class=\"id\" href=\"#rtc_alarm_irq_enable\">rtc_alarm_irq_enable</a>(struct <a class=\"id\" href=\"#rtc_device\">rtc_device</a> *<a class=\"id\" href=\"#rtc\">rtc</a>, unsigned int <a class=\"id\" href=\"#enabled\">enabled</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#mutex_lock_interruptible\">mutex_lock_interruptible</a>(&amp;<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops_lock\">ops_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops\">ops</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>else if (!<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#alarm_irq_enable\">alarm_irq_enable</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#alarm_irq_enable\">alarm_irq_enable</a>(<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#enabled\">enabled</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops_lock\">ops_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#rtc_alarm_irq_enable\">rtc_alarm_irq_enable</a>);", 
"", 
"int <a class=\"id\" href=\"#rtc_update_irq_enable\">rtc_update_irq_enable</a>(struct <a class=\"id\" href=\"#rtc_device\">rtc_device</a> *<a class=\"id\" href=\"#rtc\">rtc</a>, unsigned int <a class=\"id\" href=\"#enabled\">enabled</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#mutex_lock_interruptible\">mutex_lock_interruptible</a>(&amp;<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops_lock\">ops_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_RTC_INTF_DEV_UIE_EMUL\">CONFIG_RTC_INTF_DEV_UIE_EMUL</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#enabled\">enabled</a> == 0 && <a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#uie_irq_active\">uie_irq_active</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops_lock\">ops_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rtc_dev_update_irq_enable_emul\">rtc_dev_update_irq_enable_emul</a>(<a class=\"id\" href=\"#rtc\">rtc</a>, <a class=\"id\" href=\"#enabled\">enabled</a>);", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops\">ops</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>else if (!<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#update_irq_enable\">update_irq_enable</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#update_irq_enable\">update_irq_enable</a>(<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#enabled\">enabled</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops_lock\">ops_lock</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_RTC_INTF_DEV_UIE_EMUL\">CONFIG_RTC_INTF_DEV_UIE_EMUL</a>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Enable emulation if the driver did not provide</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the update_irq_enable function pointer or if returned</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * -EINVAL to signal that it has been configured without</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * interrupts or that are not available at the moment.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#rtc_dev_update_irq_enable_emul\">rtc_dev_update_irq_enable_emul</a>(<a class=\"id\" href=\"#rtc\">rtc</a>, <a class=\"id\" href=\"#enabled\">enabled</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#rtc_update_irq_enable\">rtc_update_irq_enable</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * rtc_update_irq - report RTC periodic, alarm, and/or update irqs</span>", 
"<span class=\"comment\"> * @rtc: the rtc device</span>", 
"<span class=\"comment\"> * @num: how many irqs are being reported (usually one)</span>", 
"<span class=\"comment\"> * @events: mask of RTC_IRQF with one or more of RTC_PF, RTC_AF, RTC_UF</span>", 
"<span class=\"comment\"> * Context: any</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#rtc_update_irq\">rtc_update_irq</a>(struct <a class=\"id\" href=\"#rtc_device\">rtc_device</a> *<a class=\"id\" href=\"#rtc\">rtc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#num\">num</a>, unsigned long <a class=\"id\" href=\"#events\">events</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#irq_lock\">irq_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#irq_data\">irq_data</a> = (<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#irq_data\">irq_data</a> + (<a class=\"id\" href=\"#num\">num</a> << 8)) | <a class=\"id\" href=\"#events\">events</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#irq_lock\">irq_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#irq_task_lock\">irq_task_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#irq_task\">irq_task</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#irq_task\">irq_task</a>-><a class=\"id\" href=\"#func\">func</a>(<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#irq_task\">irq_task</a>-><a class=\"id\" href=\"#private_data\">private_data</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#irq_task_lock\">irq_task_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible\">wake_up_interruptible</a>(&amp;<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#irq_queue\">irq_queue</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kill_fasync\">kill_fasync</a>(&amp;<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#async_queue\">async_queue</a>, <a class=\"id\" href=\"#SIGIO\">SIGIO</a>, <a class=\"id\" href=\"#POLL_IN\">POLL_IN</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#rtc_update_irq\">rtc_update_irq</a>);", 
"", 
"static int <a class=\"id\" href=\"#__rtc_match\">__rtc_match</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#name\">name</a> = (char *)<a class=\"id\" href=\"#data\">data</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#name\">name</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#rtc_device\">rtc_device</a> *<a class=\"id\" href=\"#rtc_class_open\">rtc_class_open</a>(char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtc_device\">rtc_device</a> *<a class=\"id\" href=\"#rtc\">rtc</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#class_find_device\">class_find_device</a>(<a class=\"id\" href=\"#rtc_class\">rtc_class</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#__rtc_match\">__rtc_match</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtc\">rtc</a> = <a class=\"id\" href=\"#to_rtc_device\">to_rtc_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rtc\">rtc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#try_module_get\">try_module_get</a>(<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#owner\">owner</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_device\">put_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtc\">rtc</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rtc\">rtc</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#rtc_class_open\">rtc_class_open</a>);", 
"", 
"void <a class=\"id\" href=\"#rtc_class_close\">rtc_class_close</a>(struct <a class=\"id\" href=\"#rtc_device\">rtc_device</a> *<a class=\"id\" href=\"#rtc\">rtc</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#owner\">owner</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_device\">put_device</a>(&amp;<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#rtc_class_close\">rtc_class_close</a>);", 
"", 
"int <a class=\"id\" href=\"#rtc_irq_register\">rtc_irq_register</a>(struct <a class=\"id\" href=\"#rtc_device\">rtc_device</a> *<a class=\"id\" href=\"#rtc\">rtc</a>, struct <a class=\"id\" href=\"#rtc_task\">rtc_task</a> *<a class=\"id\" href=\"#task\">task</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#task\">task</a> == <a class=\"id\" href=\"#NULL\">NULL</a> || <a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#func\">func</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Cannot register while the char dev is in use */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_and_set_bit_lock\">test_and_set_bit_lock</a>(<a class=\"id\" href=\"#RTC_DEV_BUSY\">RTC_DEV_BUSY</a>, &amp;<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#flags\">flags</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#irq_task_lock\">irq_task_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#irq_task\">irq_task</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#irq_task\">irq_task</a> = <a class=\"id\" href=\"#task\">task</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#irq_task_lock\">irq_task_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_bit_unlock\">clear_bit_unlock</a>(<a class=\"id\" href=\"#RTC_DEV_BUSY\">RTC_DEV_BUSY</a>, &amp;<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#rtc_irq_register\">rtc_irq_register</a>);", 
"", 
"void <a class=\"id\" href=\"#rtc_irq_unregister\">rtc_irq_unregister</a>(struct <a class=\"id\" href=\"#rtc_device\">rtc_device</a> *<a class=\"id\" href=\"#rtc\">rtc</a>, struct <a class=\"id\" href=\"#rtc_task\">rtc_task</a> *<a class=\"id\" href=\"#task\">task</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#irq_task_lock\">irq_task_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#irq_task\">irq_task</a> == <a class=\"id\" href=\"#task\">task</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#irq_task\">irq_task</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#irq_task_lock\">irq_task_lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#rtc_irq_unregister\">rtc_irq_unregister</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * rtc_irq_set_state - enable/disable 2^N Hz periodic IRQs</span>", 
"<span class=\"comment\"> * @rtc: the rtc device</span>", 
"<span class=\"comment\"> * @task: currently registered with rtc_irq_register()</span>", 
"<span class=\"comment\"> * @enabled: true to enable periodic IRQs</span>", 
"<span class=\"comment\"> * Context: any</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Note that rtc_irq_set_freq() should previously have been used to</span>", 
"<span class=\"comment\"> * specify the desired frequency of periodic IRQ task-&gt;func() callbacks.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#rtc_irq_set_state\">rtc_irq_set_state</a>(struct <a class=\"id\" href=\"#rtc_device\">rtc_device</a> *<a class=\"id\" href=\"#rtc\">rtc</a>, struct <a class=\"id\" href=\"#rtc_task\">rtc_task</a> *<a class=\"id\" href=\"#task\">task</a>, int <a class=\"id\" href=\"#enabled\">enabled</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#irq_set_state\">irq_set_state</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#irq_task_lock\">irq_task_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#irq_task\">irq_task</a> != <a class=\"id\" href=\"#NULL\">NULL</a> && <a class=\"id\" href=\"#task\">task</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#irq_task\">irq_task</a> != <a class=\"id\" href=\"#task\">task</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#irq_task_lock\">irq_task_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#irq_set_state\">irq_set_state</a>(<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#enabled\">enabled</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#rtc_irq_set_state\">rtc_irq_set_state</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * rtc_irq_set_freq - set 2^N Hz periodic IRQ frequency for IRQ</span>", 
"<span class=\"comment\"> * @rtc: the rtc device</span>", 
"<span class=\"comment\"> * @task: currently registered with rtc_irq_register()</span>", 
"<span class=\"comment\"> * @freq: positive frequency with which task-&gt;func() will be called</span>", 
"<span class=\"comment\"> * Context: any</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Note that rtc_irq_set_state() is used to enable or disable the</span>", 
"<span class=\"comment\"> * periodic IRQs.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#rtc_irq_set_freq\">rtc_irq_set_freq</a>(struct <a class=\"id\" href=\"#rtc_device\">rtc_device</a> *<a class=\"id\" href=\"#rtc\">rtc</a>, struct <a class=\"id\" href=\"#rtc_task\">rtc_task</a> *<a class=\"id\" href=\"#task\">task</a>, int <a class=\"id\" href=\"#freq\">freq</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#irq_set_freq\">irq_set_freq</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#irq_task_lock\">irq_task_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#irq_task\">irq_task</a> != <a class=\"id\" href=\"#NULL\">NULL</a> && <a class=\"id\" href=\"#task\">task</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#irq_task\">irq_task</a> != <a class=\"id\" href=\"#task\">task</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#irq_task_lock\">irq_task_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#irq_set_freq\">irq_set_freq</a>(<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#freq\">freq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#irq_freq\">irq_freq</a> = <a class=\"id\" href=\"#freq\">freq</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#rtc_irq_set_freq\">rtc_irq_set_freq</a>);", 
];
xr_frag_insert('l/6e/0feae38b6931f72395365af5a56612001d71e2.xr', __xr_tmp);
