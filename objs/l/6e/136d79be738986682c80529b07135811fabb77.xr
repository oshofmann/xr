var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * INET<span class=\"ts\"/><span class=\"ts\"/>An implementation of the TCP/IP protocol suite for the LINUX</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>operating system.  INET is implemented using the  BSD Socket</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>interface as the means of communication with the user level.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Implementation of the Transmission Control Protocol(TCP).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Authors:<span class=\"ts\"/>Ross Biro</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Fred N. van Kempen, &lt;waltje@uWalt.NL.Mugnet.ORG&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Mark Evans, &lt;evansmp@uhura.aston.ac.uk&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Corey Minyard &lt;wf-rch!minyard@relay.EU.net&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Florian La Roche, &lt;flla@stud.uni-sb.de&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Charles Hedrick, &lt;hedrick@klinzhai.rutgers.edu&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Linus Torvalds, &lt;torvalds@cs.helsinki.fi&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox, &lt;gw4pts@gw4pts.ampr.org&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Matthew Dillon, &lt;dillon@apollo.west.oic.com&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Arnt Gulbrandsen, &lt;agulbra@nvg.unit.no&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Jorge Cwik, &lt;jorge@laser.satlink.net&gt;</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sysctl\">sysctl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#workqueue\">workqueue</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#tcp\">tcp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#inet_common\">inet_common</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#xfrm\">xfrm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"int <a class=\"id\" href=\"#sysctl_tcp_syncookies\">sysctl_tcp_syncookies</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = 1;", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#sysctl_tcp_syncookies\">sysctl_tcp_syncookies</a>);", 
"", 
"int <a class=\"id\" href=\"#sysctl_tcp_abort_on_overflow\">sysctl_tcp_abort_on_overflow</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a>;", 
"", 
"struct <a class=\"id\" href=\"#inet_timewait_death_row\">inet_timewait_death_row</a> <a class=\"id\" href=\"#tcp_death_row\">tcp_death_row</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sysctl_max_tw_buckets\">sysctl_max_tw_buckets</a> = <a class=\"id\" href=\"#NR_FILE\">NR_FILE</a> * 2,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#period\">period</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#TCP_TIMEWAIT_LEN\">TCP_TIMEWAIT_LEN</a> / <a class=\"id\" href=\"#INET_TWDR_TWKILL_SLOTS\">INET_TWDR_TWKILL_SLOTS</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#death_lock\">death_lock</a><span class=\"ts\"/>= <a class=\"id\" href=\"#__SPIN_LOCK_UNLOCKED\">__SPIN_LOCK_UNLOCKED</a>(<a class=\"id\" href=\"#tcp_death_row\">tcp_death_row</a>.<a class=\"id\" href=\"#death_lock\">death_lock</a>),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#hashinfo\">hashinfo</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#tcp_hashinfo\">tcp_hashinfo</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#tw_timer\">tw_timer</a><span class=\"ts\"/>= <a class=\"id\" href=\"#TIMER_INITIALIZER\">TIMER_INITIALIZER</a>(<a class=\"id\" href=\"#inet_twdr_hangman\">inet_twdr_hangman</a>, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (unsigned long)&amp;<a class=\"id\" href=\"#tcp_death_row\">tcp_death_row</a>),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#twkill_work\">twkill_work</a><span class=\"ts\"/>= <a class=\"id\" href=\"#__WORK_INITIALIZER\">__WORK_INITIALIZER</a>(<a class=\"id\" href=\"#tcp_death_row\">tcp_death_row</a>.<a class=\"id\" href=\"#twkill_work\">twkill_work</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#inet_twdr_twkill_work\">inet_twdr_twkill_work</a>),", 
"<span class=\"comment\">/* Short-time timewait calendar */</span>", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#twcal_hand\">twcal_hand</a><span class=\"ts\"/>= -1,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#twcal_timer\">twcal_timer</a><span class=\"ts\"/>= <a class=\"id\" href=\"#TIMER_INITIALIZER\">TIMER_INITIALIZER</a>(<a class=\"id\" href=\"#inet_twdr_twcal_tick\">inet_twdr_twcal_tick</a>, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (unsigned long)&amp;<a class=\"id\" href=\"#tcp_death_row\">tcp_death_row</a>),", 
"};", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#tcp_death_row\">tcp_death_row</a>);", 
"", 
"static <a class=\"id\" href=\"#__inline__\">__inline__</a> int <a class=\"id\" href=\"#tcp_in_window\">tcp_in_window</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#end_seq\">end_seq</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#s_win\">s_win</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#e_win\">e_win</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#seq\">seq</a> == <a class=\"id\" href=\"#s_win\">s_win</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#after\">after</a>(<a class=\"id\" href=\"#end_seq\">end_seq</a>, <a class=\"id\" href=\"#s_win\">s_win</a>) && <a class=\"id\" href=\"#before\">before</a>(<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#e_win\">e_win</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#seq\">seq</a> == <a class=\"id\" href=\"#e_win\">e_win</a> && <a class=\"id\" href=\"#seq\">seq</a> == <a class=\"id\" href=\"#end_seq\">end_seq</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * * Main purpose of TIME-WAIT state is to close connection gracefully,</span>", 
"<span class=\"comment\"> *   when one of ends sits in LAST-ACK or CLOSING retransmitting FIN</span>", 
"<span class=\"comment\"> *   (and, probably, tail of data) and one or more our ACKs are lost.</span>", 
"<span class=\"comment\"> * * What is TIME-WAIT timeout? It is associated with maximal packet</span>", 
"<span class=\"comment\"> *   lifetime in the internet, which results in wrong conclusion, that</span>", 
"<span class=\"comment\"> *   it is set to catch \"old duplicate segments\" wandering out of their path.</span>", 
"<span class=\"comment\"> *   It is not quite correct. This timeout is calculated so that it exceeds</span>", 
"<span class=\"comment\"> *   maximal retransmission timeout enough to allow to lose one (or more)</span>", 
"<span class=\"comment\"> *   segments sent by peer and our ACKs. This time may be calculated from RTO.</span>", 
"<span class=\"comment\"> * * When TIME-WAIT socket receives RST, it means that another end</span>", 
"<span class=\"comment\"> *   finally closed and we are allowed to kill TIME-WAIT too.</span>", 
"<span class=\"comment\"> * * Second purpose of TIME-WAIT is catching old duplicate segments.</span>", 
"<span class=\"comment\"> *   Well, certainly it is pure paranoia, but if we load TIME-WAIT</span>", 
"<span class=\"comment\"> *   with this semantics, we MUST NOT kill TIME-WAIT state with RSTs.</span>", 
"<span class=\"comment\"> * * If we invented some more clever way to catch duplicates</span>", 
"<span class=\"comment\"> *   (f.e. based on PAWS), we could truncate TIME-WAIT to several RTOs.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The algorithm below is based on FORMAL INTERPRETATION of RFCs.</span>", 
"<span class=\"comment\"> * When you compare it to RFCs, please, read section SEGMENT ARRIVES</span>", 
"<span class=\"comment\"> * from the very beginning.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NOTE. With recycling (and later with fin-wait-2) TW bucket</span>", 
"<span class=\"comment\"> * is _not_ stateless. It means, that strictly speaking we must</span>", 
"<span class=\"comment\"> * spinlock it. I do not want! Well, probability of misbehaviour</span>", 
"<span class=\"comment\"> * is ridiculously low and, seems, we could use some mb() tricks</span>", 
"<span class=\"comment\"> * to avoid misread sequence numbers, states etc.  --ANK</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#tcp_tw_status\">tcp_tw_status</a>", 
"<a class=\"id\" href=\"#tcp_timewait_state_process\">tcp_timewait_state_process</a>(struct <a class=\"id\" href=\"#inet_timewait_sock\">inet_timewait_sock</a> *<a class=\"id\" href=\"#tw\">tw</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a> *<a class=\"id\" href=\"#th\">th</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_options_received\">tcp_options_received</a> <a class=\"id\" href=\"#tmp_opt\">tmp_opt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#hash_location\">hash_location</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_timewait_sock\">tcp_timewait_sock</a> *<a class=\"id\" href=\"#tcptw\">tcptw</a> = <a class=\"id\" href=\"#tcp_twsk\">tcp_twsk</a>((struct <a class=\"id\" href=\"#sock\">sock</a> *)<a class=\"id\" href=\"#tw\">tw</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#paws_reject\">paws_reject</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp_opt\">tmp_opt</a>.<a class=\"id\" href=\"#saw_tstamp\">saw_tstamp</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#doff\">doff</a> &gt; (sizeof(*<a class=\"id\" href=\"#th\">th</a>) >> 2) && <a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_ts_recent_stamp\">tw_ts_recent_stamp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_parse_options\">tcp_parse_options</a>(<a class=\"id\" href=\"#skb\">skb</a>, &amp;<a class=\"id\" href=\"#tmp_opt\">tmp_opt</a>, &amp;<a class=\"id\" href=\"#hash_location\">hash_location</a>, 0);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tmp_opt\">tmp_opt</a>.<a class=\"id\" href=\"#saw_tstamp\">saw_tstamp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp_opt\">tmp_opt</a>.<a class=\"id\" href=\"#ts_recent\">ts_recent</a><span class=\"ts\"/>= <a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_ts_recent\">tw_ts_recent</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp_opt\">tmp_opt</a>.<a class=\"id\" href=\"#ts_recent_stamp\">ts_recent_stamp</a><span class=\"ts\"/>= <a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_ts_recent_stamp\">tw_ts_recent_stamp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#paws_reject\">paws_reject</a> = <a class=\"id\" href=\"#tcp_paws_reject\">tcp_paws_reject</a>(&amp;<a class=\"id\" href=\"#tmp_opt\">tmp_opt</a>, <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#rst\">rst</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_substate\">tw_substate</a> == <a class=\"id\" href=\"#TCP_FIN_WAIT2\">TCP_FIN_WAIT2</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Just repeat all the checks of tcp_rcv_state_process() */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Out of window, send ACK */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#paws_reject\">paws_reject</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#tcp_in_window\">tcp_in_window</a>(<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_rcv_nxt\">tw_rcv_nxt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_rcv_nxt\">tw_rcv_nxt</a> + <a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_rcv_wnd\">tw_rcv_wnd</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#TCP_TW_ACK\">TCP_TW_ACK</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#rst\">rst</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#kill\">kill</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#syn\">syn</a> && !<a class=\"id\" href=\"#before\">before</a>(<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_rcv_nxt\">tw_rcv_nxt</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#kill_with_rst\">kill_with_rst</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Dup ACK? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#ack\">ack</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#after\">after</a>(<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>, <a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_rcv_nxt\">tw_rcv_nxt</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a> == <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_twsk_put\">inet_twsk_put</a>(<a class=\"id\" href=\"#tw\">tw</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#TCP_TW_SUCCESS\">TCP_TW_SUCCESS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* New data or FIN. If new data arrive after half-duplex close,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * reset.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#fin\">fin</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a> != <a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_rcv_nxt\">tw_rcv_nxt</a> + 1) {", 
"<a class=\"id\" href=\"#kill_with_rst\">kill_with_rst</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_twsk_deschedule\">inet_twsk_deschedule</a>(<a class=\"id\" href=\"#tw\">tw</a>, &amp;<a class=\"id\" href=\"#tcp_death_row\">tcp_death_row</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_twsk_put\">inet_twsk_put</a>(<a class=\"id\" href=\"#tw\">tw</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#TCP_TW_RST\">TCP_TW_RST</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* FIN arrived, enter true time-wait state. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_substate\">tw_substate</a><span class=\"ts\"/>  = <a class=\"id\" href=\"#TCP_TIME_WAIT\">TCP_TIME_WAIT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_rcv_nxt\">tw_rcv_nxt</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tmp_opt\">tmp_opt</a>.<a class=\"id\" href=\"#saw_tstamp\">saw_tstamp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_ts_recent_stamp\">tw_ts_recent_stamp</a> = <a class=\"id\" href=\"#get_seconds\">get_seconds</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_ts_recent\">tw_ts_recent</a><span class=\"ts\"/>  = <a class=\"id\" href=\"#tmp_opt\">tmp_opt</a>.<a class=\"id\" href=\"#rcv_tsval\">rcv_tsval</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* I am shamed, but failed to make it more elegant.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Yes, it is direct reference to IP, which is impossible</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * to generalize to IPv6. Taking into account that IPv6</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * do not understand recycling in any case, it not</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * a big problem in practice. --ANK */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_family\">tw_family</a> == <a class=\"id\" href=\"#AF_INET\">AF_INET</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#tcp_death_row\">tcp_death_row</a>.<a class=\"id\" href=\"#sysctl_tw_recycle\">sysctl_tw_recycle</a> && <a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_ts_recent_stamp\">tw_ts_recent_stamp</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#tcp_v4_tw_remember_stamp\">tcp_v4_tw_remember_stamp</a>(<a class=\"id\" href=\"#tw\">tw</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_twsk_schedule\">inet_twsk_schedule</a>(<a class=\"id\" href=\"#tw\">tw</a>, &amp;<a class=\"id\" href=\"#tcp_death_row\">tcp_death_row</a>, <a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_timeout\">tw_timeout</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#TCP_TIMEWAIT_LEN\">TCP_TIMEWAIT_LEN</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_twsk_schedule\">inet_twsk_schedule</a>(<a class=\"id\" href=\"#tw\">tw</a>, &amp;<a class=\"id\" href=\"#tcp_death_row\">tcp_death_row</a>, <a class=\"id\" href=\"#TCP_TIMEWAIT_LEN\">TCP_TIMEWAIT_LEN</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#TCP_TIMEWAIT_LEN\">TCP_TIMEWAIT_LEN</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#TCP_TW_ACK\">TCP_TW_ACK</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Now real TIME-WAIT state.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>RFC 1122:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>\"When a connection is [...] on TIME-WAIT state [...]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>[a TCP] MAY accept a new SYN from the remote TCP to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>reopen the connection directly, if it:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>(1)  assigns its initial sequence number for the new</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>connection to be larger than the largest sequence</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>number it used on the previous connection incarnation,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>(2)  returns to TIME-WAIT state if the SYN turns out</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>to be an old duplicate\".</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#paws_reject\">paws_reject</a> &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a> == <a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_rcv_nxt\">tw_rcv_nxt</a> &&", 
"<span class=\"ts\"/>     (<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a> == <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a> || <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#rst\">rst</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* In window segment, it may be only reset or bare ack. */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#rst\">rst</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* This is TIME_WAIT assassination, in two flavors.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Oh well... nobody has a sufficient solution to this</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * protocol bug yet.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sysctl_tcp_rfc1337\">sysctl_tcp_rfc1337</a> == 0) {", 
"<a class=\"id\" href=\"#kill\">kill</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_twsk_deschedule\">inet_twsk_deschedule</a>(<a class=\"id\" href=\"#tw\">tw</a>, &amp;<a class=\"id\" href=\"#tcp_death_row\">tcp_death_row</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_twsk_put\">inet_twsk_put</a>(<a class=\"id\" href=\"#tw\">tw</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#TCP_TW_SUCCESS\">TCP_TW_SUCCESS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_twsk_schedule\">inet_twsk_schedule</a>(<a class=\"id\" href=\"#tw\">tw</a>, &amp;<a class=\"id\" href=\"#tcp_death_row\">tcp_death_row</a>, <a class=\"id\" href=\"#TCP_TIMEWAIT_LEN\">TCP_TIMEWAIT_LEN</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#TCP_TIMEWAIT_LEN\">TCP_TIMEWAIT_LEN</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tmp_opt\">tmp_opt</a>.<a class=\"id\" href=\"#saw_tstamp\">saw_tstamp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_ts_recent\">tw_ts_recent</a><span class=\"ts\"/>  = <a class=\"id\" href=\"#tmp_opt\">tmp_opt</a>.<a class=\"id\" href=\"#rcv_tsval\">rcv_tsval</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_ts_recent_stamp\">tw_ts_recent_stamp</a> = <a class=\"id\" href=\"#get_seconds\">get_seconds</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_twsk_put\">inet_twsk_put</a>(<a class=\"id\" href=\"#tw\">tw</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#TCP_TW_SUCCESS\">TCP_TW_SUCCESS</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Out of window segment.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\"><span class=\"ts\"/>   All the segments are ACKed immediately.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\"><span class=\"ts\"/>   The only exception is new SYN. We accept it, if it is</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   not old duplicate and we are not in danger to be killed</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   by delayed old duplicates. RFC check is that it has</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   newer sequence number works at rates &lt;40Mbit/sec.</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   However, if paws works, it is reliable AND even more,</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   we even may relax silly seq space cutoff.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\"><span class=\"ts\"/>   RED-PEN: we violate main RFC requirement, if this SYN will appear</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   old duplicate (i.e. we receive RST in reply to SYN-ACK),</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   we must return socket to time-wait state. It is not good,</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   but not fatal yet.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#syn\">syn</a> && !<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#rst\">rst</a> && !<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#ack\">ack</a> && !<a class=\"id\" href=\"#paws_reject\">paws_reject</a> &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#after\">after</a>(<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_rcv_nxt\">tw_rcv_nxt</a>) ||", 
"<span class=\"ts\"/>     (<a class=\"id\" href=\"#tmp_opt\">tmp_opt</a>.<a class=\"id\" href=\"#saw_tstamp\">saw_tstamp</a> &&", 
"<span class=\"ts\"/>      (<a class=\"id\" href=\"#s32\">s32</a>)(<a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_ts_recent\">tw_ts_recent</a> - <a class=\"id\" href=\"#tmp_opt\">tmp_opt</a>.<a class=\"id\" href=\"#rcv_tsval\">rcv_tsval</a>) &lt; 0))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#isn\">isn</a> = <a class=\"id\" href=\"#tcptw\">tcptw</a>-><a class=\"id\" href=\"#tw_snd_nxt\">tw_snd_nxt</a> + 65535 + 2;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#isn\">isn</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#isn\">isn</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#when\">when</a> = <a class=\"id\" href=\"#isn\">isn</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#TCP_TW_SYN\">TCP_TW_SYN</a>;", 
"<span class=\"ts\"/>}", 
];
xr_frag_insert('l/6e/136d79be738986682c80529b07135811fabb77.xr', __xr_tmp);
