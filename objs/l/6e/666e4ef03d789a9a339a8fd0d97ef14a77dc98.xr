var __xr_tmp = [
"<span class=\"comment\">/* -*- linux-c -*- ------------------------------------------------------- *</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *   Copyright (C) 1991, 1992 Linus Torvalds</span>", 
"<span class=\"comment\"> *   Copyright 2007 rPath, Inc. - All Rights Reserved</span>", 
"<span class=\"comment\"> *   Copyright 2009 Intel Corporation; author H. Peter Anvin</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *   This file is part of the Linux kernel, and is made available under</span>", 
"<span class=\"comment\"> *   the terms of the GNU General Public License version 2.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * ----------------------------------------------------------------------- */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Header file for the real-mode kernel code</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#BOOT_BOOT_H\">BOOT_BOOT_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BOOT_BOOT_H\">BOOT_BOOT_H</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#STACK_SIZE\">STACK_SIZE</a><span class=\"ts\"/>512<span class=\"ts\"/><span class=\"comment\">/* Minimum number of bytes for stack */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__ASSEMBLY__\">__ASSEMBLY__</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#stdarg\">stdarg</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#edd\">edd</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#boot\">boot</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#setup\">setup</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"bitops.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#cpufeature\">cpufeature</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#processor\">processor</a>-<a class=\"id\" href=\"#flags\">flags</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"ctype.h\"", 
"", 
"<span class=\"comment\">/* Useful macros */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(<a class=\"id\" href=\"#condition\">condition</a>) ((void)sizeof(char[1 - 2*!!(<a class=\"id\" href=\"#condition\">condition</a>)]))", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#x\">x</a>) (sizeof(<a class=\"id\" href=\"#x\">x</a>) / sizeof(*(<a class=\"id\" href=\"#x\">x</a>)))", 
"", 
"extern struct <a class=\"id\" href=\"#setup_header\">setup_header</a> <a class=\"id\" href=\"#hdr\">hdr</a>;", 
"extern struct <a class=\"id\" href=\"#boot_params\">boot_params</a> <a class=\"id\" href=\"#boot_params\">boot_params</a>;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#cpu_relax\">cpu_relax</a>()<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"rep; nop\")", 
"", 
"<span class=\"comment\">/* Basic port I/O */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#outb\">outb</a>(<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#port\">port</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"outb %0,%1\" : : \"a\" (<a class=\"id\" href=\"#v\">v</a>), \"dN\" (<a class=\"id\" href=\"#port\">port</a>));", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#inb\">inb</a>(<a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#port\">port</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"inb %1,%0\" : \"=a\" (<a class=\"id\" href=\"#v\">v</a>) : \"dN\" (<a class=\"id\" href=\"#port\">port</a>));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#v\">v</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#outw\">outw</a>(<a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#port\">port</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"outw %0,%1\" : : \"a\" (<a class=\"id\" href=\"#v\">v</a>), \"dN\" (<a class=\"id\" href=\"#port\">port</a>));", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#inw\">inw</a>(<a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#port\">port</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"inw %1,%0\" : \"=a\" (<a class=\"id\" href=\"#v\">v</a>) : \"dN\" (<a class=\"id\" href=\"#port\">port</a>));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#v\">v</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#outl\">outl</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#port\">port</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"outl %0,%1\" : : \"a\" (<a class=\"id\" href=\"#v\">v</a>), \"dN\" (<a class=\"id\" href=\"#port\">port</a>));", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#inl\">inl</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#port\">port</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"inl %1,%0\" : \"=a\" (<a class=\"id\" href=\"#v\">v</a>) : \"dN\" (<a class=\"id\" href=\"#port\">port</a>));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#v\">v</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#io_delay\">io_delay</a>(void)", 
"{", 
"<span class=\"ts\"/>const <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#DELAY_PORT\">DELAY_PORT</a> = 0x80;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"outb %%al,%0\" : : \"dN\" (<a class=\"id\" href=\"#DELAY_PORT\">DELAY_PORT</a>));", 
"}", 
"", 
"<span class=\"comment\">/* These functions are used to reference data in other segments. */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#ds\">ds</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#seg\">seg</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"movw %%ds,%0\" : \"=rm\" (<a class=\"id\" href=\"#seg\">seg</a>));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#seg\">seg</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#set_fs\">set_fs</a>(<a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#seg\">seg</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movw %0,%%fs\" : : \"rm\" (<a class=\"id\" href=\"#seg\">seg</a>));", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#fs\">fs</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#seg\">seg</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movw %%fs,%0\" : \"=rm\" (<a class=\"id\" href=\"#seg\">seg</a>));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#seg\">seg</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#set_gs\">set_gs</a>(<a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#seg\">seg</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movw %0,%%gs\" : : \"rm\" (<a class=\"id\" href=\"#seg\">seg</a>));", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#gs\">gs</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#seg\">seg</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movw %%gs,%0\" : \"=rm\" (<a class=\"id\" href=\"#seg\">seg</a>));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#seg\">seg</a>;", 
"}", 
"", 
"typedef unsigned int <a class=\"id\" href=\"#addr_t\">addr_t</a>;", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#rdfs8\">rdfs8</a>(<a class=\"id\" href=\"#addr_t\">addr_t</a> <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movb %%fs:%1,%0\" : \"=q\" (<a class=\"id\" href=\"#v\">v</a>) : \"m\" (*(<a class=\"id\" href=\"#u8\">u8</a> *)<a class=\"id\" href=\"#addr\">addr</a>));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#v\">v</a>;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#rdfs16\">rdfs16</a>(<a class=\"id\" href=\"#addr_t\">addr_t</a> <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movw %%fs:%1,%0\" : \"=r\" (<a class=\"id\" href=\"#v\">v</a>) : \"m\" (*(<a class=\"id\" href=\"#u16\">u16</a> *)<a class=\"id\" href=\"#addr\">addr</a>));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#v\">v</a>;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#rdfs32\">rdfs32</a>(<a class=\"id\" href=\"#addr_t\">addr_t</a> <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movl %%fs:%1,%0\" : \"=r\" (<a class=\"id\" href=\"#v\">v</a>) : \"m\" (*(<a class=\"id\" href=\"#u32\">u32</a> *)<a class=\"id\" href=\"#addr\">addr</a>));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#v\">v</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#wrfs8\">wrfs8</a>(<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#addr_t\">addr_t</a> <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movb %1,%%fs:%0\" : \"+m\" (*(<a class=\"id\" href=\"#u8\">u8</a> *)<a class=\"id\" href=\"#addr\">addr</a>) : \"qi\" (<a class=\"id\" href=\"#v\">v</a>));", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#wrfs16\">wrfs16</a>(<a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#addr_t\">addr_t</a> <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movw %1,%%fs:%0\" : \"+m\" (*(<a class=\"id\" href=\"#u16\">u16</a> *)<a class=\"id\" href=\"#addr\">addr</a>) : \"ri\" (<a class=\"id\" href=\"#v\">v</a>));", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#wrfs32\">wrfs32</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#addr_t\">addr_t</a> <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movl %1,%%fs:%0\" : \"+m\" (*(<a class=\"id\" href=\"#u32\">u32</a> *)<a class=\"id\" href=\"#addr\">addr</a>) : \"ri\" (<a class=\"id\" href=\"#v\">v</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#rdgs8\">rdgs8</a>(<a class=\"id\" href=\"#addr_t\">addr_t</a> <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movb %%gs:%1,%0\" : \"=q\" (<a class=\"id\" href=\"#v\">v</a>) : \"m\" (*(<a class=\"id\" href=\"#u8\">u8</a> *)<a class=\"id\" href=\"#addr\">addr</a>));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#v\">v</a>;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#rdgs16\">rdgs16</a>(<a class=\"id\" href=\"#addr_t\">addr_t</a> <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movw %%gs:%1,%0\" : \"=r\" (<a class=\"id\" href=\"#v\">v</a>) : \"m\" (*(<a class=\"id\" href=\"#u16\">u16</a> *)<a class=\"id\" href=\"#addr\">addr</a>));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#v\">v</a>;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#rdgs32\">rdgs32</a>(<a class=\"id\" href=\"#addr_t\">addr_t</a> <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movl %%gs:%1,%0\" : \"=r\" (<a class=\"id\" href=\"#v\">v</a>) : \"m\" (*(<a class=\"id\" href=\"#u32\">u32</a> *)<a class=\"id\" href=\"#addr\">addr</a>));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#v\">v</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#wrgs8\">wrgs8</a>(<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#addr_t\">addr_t</a> <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movb %1,%%gs:%0\" : \"+m\" (*(<a class=\"id\" href=\"#u8\">u8</a> *)<a class=\"id\" href=\"#addr\">addr</a>) : \"qi\" (<a class=\"id\" href=\"#v\">v</a>));", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#wrgs16\">wrgs16</a>(<a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#addr_t\">addr_t</a> <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movw %1,%%gs:%0\" : \"+m\" (*(<a class=\"id\" href=\"#u16\">u16</a> *)<a class=\"id\" href=\"#addr\">addr</a>) : \"ri\" (<a class=\"id\" href=\"#v\">v</a>));", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#wrgs32\">wrgs32</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#addr_t\">addr_t</a> <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"movl %1,%%gs:%0\" : \"+m\" (*(<a class=\"id\" href=\"#u32\">u32</a> *)<a class=\"id\" href=\"#addr\">addr</a>) : \"ri\" (<a class=\"id\" href=\"#v\">v</a>));", 
"}", 
"", 
"<span class=\"comment\">/* Note: these only return true/false, not a signed return value! */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#memcmp\">memcmp</a>(const void *<a class=\"id\" href=\"#s1\">s1</a>, const void *<a class=\"id\" href=\"#s2\">s2</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#diff\">diff</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"repe; cmpsb; setnz %0\"", 
"<span class=\"ts\"/>    : \"=qm\" (<a class=\"id\" href=\"#diff\">diff</a>), \"+D\" (<a class=\"id\" href=\"#s1\">s1</a>), \"+S\" (<a class=\"id\" href=\"#s2\">s2</a>), \"+c\" (<a class=\"id\" href=\"#len\">len</a>));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#diff\">diff</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#memcmp_fs\">memcmp_fs</a>(const void *<a class=\"id\" href=\"#s1\">s1</a>, <a class=\"id\" href=\"#addr_t\">addr_t</a> <a class=\"id\" href=\"#s2\">s2</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#diff\">diff</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"fs; repe; cmpsb; setnz %0\"", 
"<span class=\"ts\"/><span class=\"ts\"/>     : \"=qm\" (<a class=\"id\" href=\"#diff\">diff</a>), \"+D\" (<a class=\"id\" href=\"#s1\">s1</a>), \"+S\" (<a class=\"id\" href=\"#s2\">s2</a>), \"+c\" (<a class=\"id\" href=\"#len\">len</a>));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#diff\">diff</a>;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#memcmp_gs\">memcmp_gs</a>(const void *<a class=\"id\" href=\"#s1\">s1</a>, <a class=\"id\" href=\"#addr_t\">addr_t</a> <a class=\"id\" href=\"#s2\">s2</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#diff\">diff</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"gs; repe; cmpsb; setnz %0\"", 
"<span class=\"ts\"/><span class=\"ts\"/>     : \"=qm\" (<a class=\"id\" href=\"#diff\">diff</a>), \"+D\" (<a class=\"id\" href=\"#s1\">s1</a>), \"+S\" (<a class=\"id\" href=\"#s2\">s2</a>), \"+c\" (<a class=\"id\" href=\"#len\">len</a>));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#diff\">diff</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Heap -- available for dynamic lists. */</span>", 
"extern char <a class=\"id\" href=\"#_end\">_end</a>[];", 
"extern char *<a class=\"id\" href=\"#HEAP\">HEAP</a>;", 
"extern char *<a class=\"id\" href=\"#heap_end\">heap_end</a>;", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RESET_HEAP\">RESET_HEAP</a>() ((void *)( <a class=\"id\" href=\"#HEAP\">HEAP</a> = <a class=\"id\" href=\"#_end\">_end</a> ))", 
"static <a class=\"id\" href=\"#inline\">inline</a> char *<a class=\"id\" href=\"#__get_heap\">__get_heap</a>(<a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#a\">a</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#n\">n</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#tmp\">tmp</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#HEAP\">HEAP</a> = (char *)(((<a class=\"id\" href=\"#size_t\">size_t</a>)<a class=\"id\" href=\"#HEAP\">HEAP</a>+(<a class=\"id\" href=\"#a\">a</a>-1)) &amp; ~(<a class=\"id\" href=\"#a\">a</a>-1));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#HEAP\">HEAP</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#HEAP\">HEAP</a> += <a class=\"id\" href=\"#s\">s</a>*<a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"}", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#GET_HEAP\">GET_HEAP</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#n\">n</a>) \\", 
"<span class=\"ts\"/>((<a class=\"id\" href=\"#type\">type</a> *)<a class=\"id\" href=\"#__get_heap\">__get_heap</a>(sizeof(<a class=\"id\" href=\"#type\">type</a>),<a class=\"id\" href=\"#__alignof__\">__alignof__</a>(<a class=\"id\" href=\"#type\">type</a>),(<a class=\"id\" href=\"#n\">n</a>)))", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#heap_free\">heap_free</a>(<a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#n\">n</a>)", 
"{", 
"<span class=\"ts\"/>return (int)(<a class=\"id\" href=\"#heap_end\">heap_end</a>-<a class=\"id\" href=\"#HEAP\">HEAP</a>) >= (int)<a class=\"id\" href=\"#n\">n</a>;", 
"}", 
"", 
"<span class=\"comment\">/* copy.S */</span>", 
"", 
"void <a class=\"id\" href=\"#copy_to_fs\">copy_to_fs</a>(<a class=\"id\" href=\"#addr_t\">addr_t</a> <a class=\"id\" href=\"#dst\">dst</a>, void *<a class=\"id\" href=\"#src\">src</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>);", 
"void *<a class=\"id\" href=\"#copy_from_fs\">copy_from_fs</a>(void *<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#addr_t\">addr_t</a> <a class=\"id\" href=\"#src\">src</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>);", 
"void <a class=\"id\" href=\"#copy_to_gs\">copy_to_gs</a>(<a class=\"id\" href=\"#addr_t\">addr_t</a> <a class=\"id\" href=\"#dst\">dst</a>, void *<a class=\"id\" href=\"#src\">src</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>);", 
"void *<a class=\"id\" href=\"#copy_from_gs\">copy_from_gs</a>(void *<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#addr_t\">addr_t</a> <a class=\"id\" href=\"#src\">src</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>);", 
"void *<a class=\"id\" href=\"#memcpy\">memcpy</a>(void *<a class=\"id\" href=\"#dst\">dst</a>, void *<a class=\"id\" href=\"#src\">src</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>);", 
"void *<a class=\"id\" href=\"#memset\">memset</a>(void *<a class=\"id\" href=\"#dst\">dst</a>, int <a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#d\">d</a>,<a class=\"id\" href=\"#s\">s</a>,<a class=\"id\" href=\"#l\">l</a>) <a class=\"id\" href=\"#__builtin_memcpy\">__builtin_memcpy</a>(<a class=\"id\" href=\"#d\">d</a>,<a class=\"id\" href=\"#s\">s</a>,<a class=\"id\" href=\"#l\">l</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#d\">d</a>,<a class=\"id\" href=\"#c\">c</a>,<a class=\"id\" href=\"#l\">l</a>) <a class=\"id\" href=\"#__builtin_memset\">__builtin_memset</a>(<a class=\"id\" href=\"#d\">d</a>,<a class=\"id\" href=\"#c\">c</a>,<a class=\"id\" href=\"#l\">l</a>)", 
"", 
"<span class=\"comment\">/* a20.c */</span>", 
"int <a class=\"id\" href=\"#enable_a20\">enable_a20</a>(void);", 
"", 
"<span class=\"comment\">/* apm.c */</span>", 
"int <a class=\"id\" href=\"#query_apm_bios\">query_apm_bios</a>(void);", 
"", 
"<span class=\"comment\">/* bioscall.c */</span>", 
"struct <a class=\"id\" href=\"#biosregs\">biosregs</a> {", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#edi\">edi</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#esi\">esi</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ebp\">ebp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#_esp\">_esp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ebx\">ebx</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#edx\">edx</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ecx\">ecx</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#eax\">eax</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#_fsgs\">_fsgs</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#_dses\">_dses</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#eflags\">eflags</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>};", 
"<span class=\"ts\"/><span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#di\">di</a>, <a class=\"id\" href=\"#hdi\">hdi</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#si\">si</a>, <a class=\"id\" href=\"#hsi\">hsi</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#bp\">bp</a>, <a class=\"id\" href=\"#hbp\">hbp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#_sp\">_sp</a>, <a class=\"id\" href=\"#_hsp\">_hsp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#bx\">bx</a>, <a class=\"id\" href=\"#hbx\">hbx</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#dx\">dx</a>, <a class=\"id\" href=\"#hdx\">hdx</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#cx\">cx</a>, <a class=\"id\" href=\"#hcx\">hcx</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#ax\">ax</a>, <a class=\"id\" href=\"#hax\">hax</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#gs\">gs</a>, <a class=\"id\" href=\"#fs\">fs</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#es\">es</a>, <a class=\"id\" href=\"#ds\">ds</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#hflags\">hflags</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>};", 
"<span class=\"ts\"/><span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#dil\">dil</a>, <a class=\"id\" href=\"#dih\">dih</a>, <a class=\"id\" href=\"#edi2\">edi2</a>, <a class=\"id\" href=\"#edi3\">edi3</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#sil\">sil</a>, <a class=\"id\" href=\"#sih\">sih</a>, <a class=\"id\" href=\"#esi2\">esi2</a>, <a class=\"id\" href=\"#esi3\">esi3</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#bpl\">bpl</a>, <a class=\"id\" href=\"#bph\">bph</a>, <a class=\"id\" href=\"#ebp2\">ebp2</a>, <a class=\"id\" href=\"#ebp3\">ebp3</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#_spl\">_spl</a>, <a class=\"id\" href=\"#_sph\">_sph</a>, <a class=\"id\" href=\"#_esp2\">_esp2</a>, <a class=\"id\" href=\"#_esp3\">_esp3</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#bl\">bl</a>, <a class=\"id\" href=\"#bh\">bh</a>, <a class=\"id\" href=\"#ebx2\">ebx2</a>, <a class=\"id\" href=\"#ebx3\">ebx3</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#dl\">dl</a>, <a class=\"id\" href=\"#dh\">dh</a>, <a class=\"id\" href=\"#edx2\">edx2</a>, <a class=\"id\" href=\"#edx3\">edx3</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#cl\">cl</a>, <a class=\"id\" href=\"#ch\">ch</a>, <a class=\"id\" href=\"#ecx2\">ecx2</a>, <a class=\"id\" href=\"#ecx3\">ecx3</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#al\">al</a>, <a class=\"id\" href=\"#ah\">ah</a>, <a class=\"id\" href=\"#eax2\">eax2</a>, <a class=\"id\" href=\"#eax3\">eax3</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>};", 
"<span class=\"ts\"/>};", 
"};", 
"void <a class=\"id\" href=\"#intcall\">intcall</a>(<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#int_no\">int_no</a>, const struct <a class=\"id\" href=\"#biosregs\">biosregs</a> *<a class=\"id\" href=\"#ireg\">ireg</a>, struct <a class=\"id\" href=\"#biosregs\">biosregs</a> *<a class=\"id\" href=\"#oreg\">oreg</a>);", 
"", 
"<span class=\"comment\">/* cmdline.c */</span>", 
"int <a class=\"id\" href=\"#__cmdline_find_option\">__cmdline_find_option</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#cmdline_ptr\">cmdline_ptr</a>, const char *<a class=\"id\" href=\"#option\">option</a>, char *<a class=\"id\" href=\"#buffer\">buffer</a>, int <a class=\"id\" href=\"#bufsize\">bufsize</a>);", 
"int <a class=\"id\" href=\"#__cmdline_find_option_bool\">__cmdline_find_option_bool</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#cmdline_ptr\">cmdline_ptr</a>, const char *<a class=\"id\" href=\"#option\">option</a>);", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#cmdline_find_option\">cmdline_find_option</a>(const char *<a class=\"id\" href=\"#option\">option</a>, char *<a class=\"id\" href=\"#buffer\">buffer</a>, int <a class=\"id\" href=\"#bufsize\">bufsize</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__cmdline_find_option\">__cmdline_find_option</a>(<a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#cmd_line_ptr\">cmd_line_ptr</a>, <a class=\"id\" href=\"#option\">option</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#bufsize\">bufsize</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#cmdline_find_option_bool\">cmdline_find_option_bool</a>(const char *<a class=\"id\" href=\"#option\">option</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__cmdline_find_option_bool\">__cmdline_find_option_bool</a>(<a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#cmd_line_ptr\">cmd_line_ptr</a>, <a class=\"id\" href=\"#option\">option</a>);", 
"}", 
"", 
"", 
"<span class=\"comment\">/* cpu.c, cpucheck.c */</span>", 
"struct <a class=\"id\" href=\"#cpu_features\">cpu_features</a> {", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#level\">level</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Family, or 64 for x86-64 */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#model\">model</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#flags\">flags</a>[<a class=\"id\" href=\"#NCAPINTS\">NCAPINTS</a>];", 
"};", 
"extern struct <a class=\"id\" href=\"#cpu_features\">cpu_features</a> <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"int <a class=\"id\" href=\"#check_cpu\">check_cpu</a>(int *<a class=\"id\" href=\"#cpu_level_ptr\">cpu_level_ptr</a>, int *<a class=\"id\" href=\"#req_level_ptr\">req_level_ptr</a>, <a class=\"id\" href=\"#u32\">u32</a> **<a class=\"id\" href=\"#err_flags_ptr\">err_flags_ptr</a>);", 
"int <a class=\"id\" href=\"#validate_cpu\">validate_cpu</a>(void);", 
"", 
"<span class=\"comment\">/* early_serial_console.c */</span>", 
"extern int <a class=\"id\" href=\"#early_serial_base\">early_serial_base</a>;", 
"void <a class=\"id\" href=\"#console_init\">console_init</a>(void);", 
"", 
"<span class=\"comment\">/* edd.c */</span>", 
"void <a class=\"id\" href=\"#query_edd\">query_edd</a>(void);", 
"", 
"<span class=\"comment\">/* header.S */</span>", 
"void <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#noreturn\">noreturn</a>)) <a class=\"id\" href=\"#die\">die</a>(void);", 
"", 
"<span class=\"comment\">/* mca.c */</span>", 
"int <a class=\"id\" href=\"#query_mca\">query_mca</a>(void);", 
"", 
"<span class=\"comment\">/* memory.c */</span>", 
"int <a class=\"id\" href=\"#detect_memory\">detect_memory</a>(void);", 
"", 
"<span class=\"comment\">/* pm.c */</span>", 
"void <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#noreturn\">noreturn</a>)) <a class=\"id\" href=\"#go_to_protected_mode\">go_to_protected_mode</a>(void);", 
"", 
"<span class=\"comment\">/* pmjump.S */</span>", 
"void <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#noreturn\">noreturn</a>))", 
"<span class=\"ts\"/><a class=\"id\" href=\"#protected_mode_jump\">protected_mode_jump</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#entrypoint\">entrypoint</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#bootparams\">bootparams</a>);", 
"", 
"<span class=\"comment\">/* printf.c */</span>", 
"int <a class=\"id\" href=\"#sprintf\">sprintf</a>(char *<a class=\"id\" href=\"#buf\">buf</a>, const char *<a class=\"id\" href=\"#fmt\">fmt</a>, ...);", 
"int <a class=\"id\" href=\"#vsprintf\">vsprintf</a>(char *<a class=\"id\" href=\"#buf\">buf</a>, const char *<a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#va_list\">va_list</a> <a class=\"id\" href=\"#args\">args</a>);", 
"int <a class=\"id\" href=\"#printf\">printf</a>(const char *<a class=\"id\" href=\"#fmt\">fmt</a>, ...);", 
"", 
"<span class=\"comment\">/* regs.c */</span>", 
"void <a class=\"id\" href=\"#initregs\">initregs</a>(struct <a class=\"id\" href=\"#biosregs\">biosregs</a> *<a class=\"id\" href=\"#regs\">regs</a>);", 
"", 
"<span class=\"comment\">/* string.c */</span>", 
"int <a class=\"id\" href=\"#strcmp\">strcmp</a>(const char *<a class=\"id\" href=\"#str1\">str1</a>, const char *<a class=\"id\" href=\"#str2\">str2</a>);", 
"int <a class=\"id\" href=\"#strncmp\">strncmp</a>(const char *<a class=\"id\" href=\"#cs\">cs</a>, const char *<a class=\"id\" href=\"#ct\">ct</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>);", 
"<a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#strnlen\">strnlen</a>(const char *<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#maxlen\">maxlen</a>);", 
"unsigned int <a class=\"id\" href=\"#atou\">atou</a>(const char *<a class=\"id\" href=\"#s\">s</a>);", 
"unsigned long long <a class=\"id\" href=\"#simple_strtoull\">simple_strtoull</a>(const char *<a class=\"id\" href=\"#cp\">cp</a>, char **<a class=\"id\" href=\"#endp\">endp</a>, unsigned int <a class=\"id\" href=\"#base\">base</a>);", 
"", 
"<span class=\"comment\">/* tty.c */</span>", 
"void <a class=\"id\" href=\"#puts\">puts</a>(const char *);", 
"void <a class=\"id\" href=\"#putchar\">putchar</a>(int);", 
"int <a class=\"id\" href=\"#getchar\">getchar</a>(void);", 
"void <a class=\"id\" href=\"#kbd_flush\">kbd_flush</a>(void);", 
"int <a class=\"id\" href=\"#getchar_timeout\">getchar_timeout</a>(void);", 
"", 
"<span class=\"comment\">/* video.c */</span>", 
"void <a class=\"id\" href=\"#set_video\">set_video</a>(void);", 
"", 
"<span class=\"comment\">/* video-mode.c */</span>", 
"int <a class=\"id\" href=\"#set_mode\">set_mode</a>(<a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#mode\">mode</a>);", 
"int <a class=\"id\" href=\"#mode_defined\">mode_defined</a>(<a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#mode\">mode</a>);", 
"void <a class=\"id\" href=\"#probe_cards\">probe_cards</a>(int <a class=\"id\" href=\"#unsafe\">unsafe</a>);", 
"", 
"<span class=\"comment\">/* video-vesa.c */</span>", 
"void <a class=\"id\" href=\"#vesa_store_edid\">vesa_store_edid</a>(void);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __ASSEMBLY__ */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* BOOT_BOOT_H */</span>", 
];
xr_frag_insert('l/6e/666e4ef03d789a9a339a8fd0d97ef14a77dc98.xr', __xr_tmp);
