var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * INET<span class=\"ts\"/><span class=\"ts\"/>An implementation of the TCP/IP protocol suite for the LINUX</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>operating system.  INET is implemented using the  BSD Socket</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>interface as the means of communication with the user level.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>This file implements the various access functions for the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>PROC file system.  It is mainly used for debugging and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>statistics.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Authors:<span class=\"ts\"/>Fred N. van Kempen, &lt;waltje@uWalt.NL.Mugnet.ORG&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Gerald J. Heim, &lt;heim@peanuts.informatik.uni-tuebingen.de&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Fred Baumgarten, &lt;dc6iq@insu1.etec.uni-karlsruhe.de&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Erik Schoenfelder, &lt;schoenfr@ibr.cs.tu-bs.de&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Fixes:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>UDP sockets show the rxqueue/txqueue</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>using hint flag for the netinfo.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Pauline Middelink<span class=\"ts\"/>:<span class=\"ts\"/>identd support</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Make /proc safer.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Erik Schoenfelder<span class=\"ts\"/>:<span class=\"ts\"/>/proc/net/snmp</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Handle dead sockets properly.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Gerhard Koerting<span class=\"ts\"/>:<span class=\"ts\"/>Show both timers</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Allow inode to be NULL (kernel socket)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Andi Kleen<span class=\"ts\"/><span class=\"ts\"/>:<span class=\"ts\"/>Add support for open_requests and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>split functions for more readibility.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Andi Kleen<span class=\"ts\"/><span class=\"ts\"/>:<span class=\"ts\"/>Add support for /proc/net/netstat</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Arnaldo C. Melo<span class=\"ts\"/><span class=\"ts\"/>:<span class=\"ts\"/>Convert to seq_file</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#net_namespace\">net_namespace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#icmp\">icmp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#protocol\">protocol</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#tcp\">tcp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#udp\">udp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#udplite\">udplite</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bottom_half\">bottom_half</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#inetdevice\">inetdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#sock\">sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#raw\">raw</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Report socket allocation statistics [mea@utu.fi]</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#sockstat_seq_show\">sockstat_seq_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#seq\">seq</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#orphans\">orphans</a>, <a class=\"id\" href=\"#sockets\">sockets</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_bh_disable\">local_bh_disable</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#orphans\">orphans</a> = <a class=\"id\" href=\"#percpu_counter_sum_positive\">percpu_counter_sum_positive</a>(&amp;<a class=\"id\" href=\"#tcp_orphan_count\">tcp_orphan_count</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sockets\">sockets</a> = <a class=\"id\" href=\"#percpu_counter_sum_positive\">percpu_counter_sum_positive</a>(&amp;<a class=\"id\" href=\"#tcp_sockets_allocated\">tcp_sockets_allocated</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_bh_enable\">local_bh_enable</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#socket_seq_show\">socket_seq_show</a>(<a class=\"id\" href=\"#seq\">seq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"TCP: inuse %d orphan %d tw %d alloc %d mem %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#sock_prot_inuse_get\">sock_prot_inuse_get</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#tcp_prot\">tcp_prot</a>), <a class=\"id\" href=\"#orphans\">orphans</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#tcp_death_row\">tcp_death_row</a>.<a class=\"id\" href=\"#tw_count\">tw_count</a>, <a class=\"id\" href=\"#sockets\">sockets</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#tcp_memory_allocated\">tcp_memory_allocated</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"UDP: inuse %d mem %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#sock_prot_inuse_get\">sock_prot_inuse_get</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#udp_prot\">udp_prot</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#udp_memory_allocated\">udp_memory_allocated</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"UDPLITE: inuse %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#sock_prot_inuse_get\">sock_prot_inuse_get</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#udplite_prot\">udplite_prot</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"RAW: inuse %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#sock_prot_inuse_get\">sock_prot_inuse_get</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#raw_prot\">raw_prot</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>,  \"FRAG: inuse %d memory %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip_frag_nqueues\">ip_frag_nqueues</a>(<a class=\"id\" href=\"#net\">net</a>), <a class=\"id\" href=\"#ip_frag_mem\">ip_frag_mem</a>(<a class=\"id\" href=\"#net\">net</a>));", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#sockstat_seq_open\">sockstat_seq_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#single_open_net\">single_open_net</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#sockstat_seq_show\">sockstat_seq_show</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#sockstat_seq_fops\">sockstat_seq_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/> = <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/> = <a class=\"id\" href=\"#sockstat_seq_open\">sockstat_seq_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/> = <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/> = <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a> = <a class=\"id\" href=\"#single_release_net\">single_release_net</a>,", 
"};", 
"", 
"<span class=\"comment\">/* snmp items */</span>", 
"static const struct <a class=\"id\" href=\"#snmp_mib\">snmp_mib</a> <a class=\"id\" href=\"#snmp4_ipstats_list\">snmp4_ipstats_list</a>[] = {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"InReceives\", <a class=\"id\" href=\"#IPSTATS_MIB_INPKTS\">IPSTATS_MIB_INPKTS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"InHdrErrors\", <a class=\"id\" href=\"#IPSTATS_MIB_INHDRERRORS\">IPSTATS_MIB_INHDRERRORS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"InAddrErrors\", <a class=\"id\" href=\"#IPSTATS_MIB_INADDRERRORS\">IPSTATS_MIB_INADDRERRORS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"ForwDatagrams\", <a class=\"id\" href=\"#IPSTATS_MIB_OUTFORWDATAGRAMS\">IPSTATS_MIB_OUTFORWDATAGRAMS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"InUnknownProtos\", <a class=\"id\" href=\"#IPSTATS_MIB_INUNKNOWNPROTOS\">IPSTATS_MIB_INUNKNOWNPROTOS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"InDiscards\", <a class=\"id\" href=\"#IPSTATS_MIB_INDISCARDS\">IPSTATS_MIB_INDISCARDS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"InDelivers\", <a class=\"id\" href=\"#IPSTATS_MIB_INDELIVERS\">IPSTATS_MIB_INDELIVERS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"OutRequests\", <a class=\"id\" href=\"#IPSTATS_MIB_OUTPKTS\">IPSTATS_MIB_OUTPKTS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"OutDiscards\", <a class=\"id\" href=\"#IPSTATS_MIB_OUTDISCARDS\">IPSTATS_MIB_OUTDISCARDS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"OutNoRoutes\", <a class=\"id\" href=\"#IPSTATS_MIB_OUTNOROUTES\">IPSTATS_MIB_OUTNOROUTES</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"ReasmTimeout\", <a class=\"id\" href=\"#IPSTATS_MIB_REASMTIMEOUT\">IPSTATS_MIB_REASMTIMEOUT</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"ReasmReqds\", <a class=\"id\" href=\"#IPSTATS_MIB_REASMREQDS\">IPSTATS_MIB_REASMREQDS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"ReasmOKs\", <a class=\"id\" href=\"#IPSTATS_MIB_REASMOKS\">IPSTATS_MIB_REASMOKS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"ReasmFails\", <a class=\"id\" href=\"#IPSTATS_MIB_REASMFAILS\">IPSTATS_MIB_REASMFAILS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"FragOKs\", <a class=\"id\" href=\"#IPSTATS_MIB_FRAGOKS\">IPSTATS_MIB_FRAGOKS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"FragFails\", <a class=\"id\" href=\"#IPSTATS_MIB_FRAGFAILS\">IPSTATS_MIB_FRAGFAILS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"FragCreates\", <a class=\"id\" href=\"#IPSTATS_MIB_FRAGCREATES\">IPSTATS_MIB_FRAGCREATES</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_SENTINEL\">SNMP_MIB_SENTINEL</a>", 
"};", 
"", 
"<span class=\"comment\">/* Following RFC4293 items are displayed in /proc/net/netstat */</span>", 
"static const struct <a class=\"id\" href=\"#snmp_mib\">snmp_mib</a> <a class=\"id\" href=\"#snmp4_ipextstats_list\">snmp4_ipextstats_list</a>[] = {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"InNoRoutes\", <a class=\"id\" href=\"#IPSTATS_MIB_INNOROUTES\">IPSTATS_MIB_INNOROUTES</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"InTruncatedPkts\", <a class=\"id\" href=\"#IPSTATS_MIB_INTRUNCATEDPKTS\">IPSTATS_MIB_INTRUNCATEDPKTS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"InMcastPkts\", <a class=\"id\" href=\"#IPSTATS_MIB_INMCASTPKTS\">IPSTATS_MIB_INMCASTPKTS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"OutMcastPkts\", <a class=\"id\" href=\"#IPSTATS_MIB_OUTMCASTPKTS\">IPSTATS_MIB_OUTMCASTPKTS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"InBcastPkts\", <a class=\"id\" href=\"#IPSTATS_MIB_INBCASTPKTS\">IPSTATS_MIB_INBCASTPKTS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"OutBcastPkts\", <a class=\"id\" href=\"#IPSTATS_MIB_OUTBCASTPKTS\">IPSTATS_MIB_OUTBCASTPKTS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"InOctets\", <a class=\"id\" href=\"#IPSTATS_MIB_INOCTETS\">IPSTATS_MIB_INOCTETS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"OutOctets\", <a class=\"id\" href=\"#IPSTATS_MIB_OUTOCTETS\">IPSTATS_MIB_OUTOCTETS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"InMcastOctets\", <a class=\"id\" href=\"#IPSTATS_MIB_INMCASTOCTETS\">IPSTATS_MIB_INMCASTOCTETS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"OutMcastOctets\", <a class=\"id\" href=\"#IPSTATS_MIB_OUTMCASTOCTETS\">IPSTATS_MIB_OUTMCASTOCTETS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"InBcastOctets\", <a class=\"id\" href=\"#IPSTATS_MIB_INBCASTOCTETS\">IPSTATS_MIB_INBCASTOCTETS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"OutBcastOctets\", <a class=\"id\" href=\"#IPSTATS_MIB_OUTBCASTOCTETS\">IPSTATS_MIB_OUTBCASTOCTETS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_SENTINEL\">SNMP_MIB_SENTINEL</a>", 
"};", 
"", 
"static const struct {", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#index\">index</a>;", 
"} <a class=\"id\" href=\"#icmpmibmap\">icmpmibmap</a>[] = {", 
"<span class=\"ts\"/>{ \"DestUnreachs\", <a class=\"id\" href=\"#ICMP_DEST_UNREACH\">ICMP_DEST_UNREACH</a> },", 
"<span class=\"ts\"/>{ \"TimeExcds\", <a class=\"id\" href=\"#ICMP_TIME_EXCEEDED\">ICMP_TIME_EXCEEDED</a> },", 
"<span class=\"ts\"/>{ \"ParmProbs\", <a class=\"id\" href=\"#ICMP_PARAMETERPROB\">ICMP_PARAMETERPROB</a> },", 
"<span class=\"ts\"/>{ \"SrcQuenchs\", <a class=\"id\" href=\"#ICMP_SOURCE_QUENCH\">ICMP_SOURCE_QUENCH</a> },", 
"<span class=\"ts\"/>{ \"Redirects\", <a class=\"id\" href=\"#ICMP_REDIRECT\">ICMP_REDIRECT</a> },", 
"<span class=\"ts\"/>{ \"Echos\", <a class=\"id\" href=\"#ICMP_ECHO\">ICMP_ECHO</a> },", 
"<span class=\"ts\"/>{ \"EchoReps\", <a class=\"id\" href=\"#ICMP_ECHOREPLY\">ICMP_ECHOREPLY</a> },", 
"<span class=\"ts\"/>{ \"Timestamps\", <a class=\"id\" href=\"#ICMP_TIMESTAMP\">ICMP_TIMESTAMP</a> },", 
"<span class=\"ts\"/>{ \"TimestampReps\", <a class=\"id\" href=\"#ICMP_TIMESTAMPREPLY\">ICMP_TIMESTAMPREPLY</a> },", 
"<span class=\"ts\"/>{ \"AddrMasks\", <a class=\"id\" href=\"#ICMP_ADDRESS\">ICMP_ADDRESS</a> },", 
"<span class=\"ts\"/>{ \"AddrMaskReps\", <a class=\"id\" href=\"#ICMP_ADDRESSREPLY\">ICMP_ADDRESSREPLY</a> },", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#NULL\">NULL</a>, 0 }", 
"};", 
"", 
"", 
"static const struct <a class=\"id\" href=\"#snmp_mib\">snmp_mib</a> <a class=\"id\" href=\"#snmp4_tcp_list\">snmp4_tcp_list</a>[] = {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"RtoAlgorithm\", <a class=\"id\" href=\"#TCP_MIB_RTOALGORITHM\">TCP_MIB_RTOALGORITHM</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"RtoMin\", <a class=\"id\" href=\"#TCP_MIB_RTOMIN\">TCP_MIB_RTOMIN</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"RtoMax\", <a class=\"id\" href=\"#TCP_MIB_RTOMAX\">TCP_MIB_RTOMAX</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"MaxConn\", <a class=\"id\" href=\"#TCP_MIB_MAXCONN\">TCP_MIB_MAXCONN</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"ActiveOpens\", <a class=\"id\" href=\"#TCP_MIB_ACTIVEOPENS\">TCP_MIB_ACTIVEOPENS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"PassiveOpens\", <a class=\"id\" href=\"#TCP_MIB_PASSIVEOPENS\">TCP_MIB_PASSIVEOPENS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"AttemptFails\", <a class=\"id\" href=\"#TCP_MIB_ATTEMPTFAILS\">TCP_MIB_ATTEMPTFAILS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"EstabResets\", <a class=\"id\" href=\"#TCP_MIB_ESTABRESETS\">TCP_MIB_ESTABRESETS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"CurrEstab\", <a class=\"id\" href=\"#TCP_MIB_CURRESTAB\">TCP_MIB_CURRESTAB</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"InSegs\", <a class=\"id\" href=\"#TCP_MIB_INSEGS\">TCP_MIB_INSEGS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"OutSegs\", <a class=\"id\" href=\"#TCP_MIB_OUTSEGS\">TCP_MIB_OUTSEGS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"RetransSegs\", <a class=\"id\" href=\"#TCP_MIB_RETRANSSEGS\">TCP_MIB_RETRANSSEGS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"InErrs\", <a class=\"id\" href=\"#TCP_MIB_INERRS\">TCP_MIB_INERRS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"OutRsts\", <a class=\"id\" href=\"#TCP_MIB_OUTRSTS\">TCP_MIB_OUTRSTS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_SENTINEL\">SNMP_MIB_SENTINEL</a>", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#snmp_mib\">snmp_mib</a> <a class=\"id\" href=\"#snmp4_udp_list\">snmp4_udp_list</a>[] = {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"InDatagrams\", <a class=\"id\" href=\"#UDP_MIB_INDATAGRAMS\">UDP_MIB_INDATAGRAMS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"NoPorts\", <a class=\"id\" href=\"#UDP_MIB_NOPORTS\">UDP_MIB_NOPORTS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"InErrors\", <a class=\"id\" href=\"#UDP_MIB_INERRORS\">UDP_MIB_INERRORS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"OutDatagrams\", <a class=\"id\" href=\"#UDP_MIB_OUTDATAGRAMS\">UDP_MIB_OUTDATAGRAMS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"RcvbufErrors\", <a class=\"id\" href=\"#UDP_MIB_RCVBUFERRORS\">UDP_MIB_RCVBUFERRORS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"SndbufErrors\", <a class=\"id\" href=\"#UDP_MIB_SNDBUFERRORS\">UDP_MIB_SNDBUFERRORS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_SENTINEL\">SNMP_MIB_SENTINEL</a>", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#snmp_mib\">snmp_mib</a> <a class=\"id\" href=\"#snmp4_net_list\">snmp4_net_list</a>[] = {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"SyncookiesSent\", <a class=\"id\" href=\"#LINUX_MIB_SYNCOOKIESSENT\">LINUX_MIB_SYNCOOKIESSENT</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"SyncookiesRecv\", <a class=\"id\" href=\"#LINUX_MIB_SYNCOOKIESRECV\">LINUX_MIB_SYNCOOKIESRECV</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"SyncookiesFailed\", <a class=\"id\" href=\"#LINUX_MIB_SYNCOOKIESFAILED\">LINUX_MIB_SYNCOOKIESFAILED</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"EmbryonicRsts\", <a class=\"id\" href=\"#LINUX_MIB_EMBRYONICRSTS\">LINUX_MIB_EMBRYONICRSTS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"PruneCalled\", <a class=\"id\" href=\"#LINUX_MIB_PRUNECALLED\">LINUX_MIB_PRUNECALLED</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"RcvPruned\", <a class=\"id\" href=\"#LINUX_MIB_RCVPRUNED\">LINUX_MIB_RCVPRUNED</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"OfoPruned\", <a class=\"id\" href=\"#LINUX_MIB_OFOPRUNED\">LINUX_MIB_OFOPRUNED</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"OutOfWindowIcmps\", <a class=\"id\" href=\"#LINUX_MIB_OUTOFWINDOWICMPS\">LINUX_MIB_OUTOFWINDOWICMPS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"LockDroppedIcmps\", <a class=\"id\" href=\"#LINUX_MIB_LOCKDROPPEDICMPS\">LINUX_MIB_LOCKDROPPEDICMPS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"ArpFilter\", <a class=\"id\" href=\"#LINUX_MIB_ARPFILTER\">LINUX_MIB_ARPFILTER</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TW\", <a class=\"id\" href=\"#LINUX_MIB_TIMEWAITED\">LINUX_MIB_TIMEWAITED</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TWRecycled\", <a class=\"id\" href=\"#LINUX_MIB_TIMEWAITRECYCLED\">LINUX_MIB_TIMEWAITRECYCLED</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TWKilled\", <a class=\"id\" href=\"#LINUX_MIB_TIMEWAITKILLED\">LINUX_MIB_TIMEWAITKILLED</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"PAWSPassive\", <a class=\"id\" href=\"#LINUX_MIB_PAWSPASSIVEREJECTED\">LINUX_MIB_PAWSPASSIVEREJECTED</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"PAWSActive\", <a class=\"id\" href=\"#LINUX_MIB_PAWSACTIVEREJECTED\">LINUX_MIB_PAWSACTIVEREJECTED</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"PAWSEstab\", <a class=\"id\" href=\"#LINUX_MIB_PAWSESTABREJECTED\">LINUX_MIB_PAWSESTABREJECTED</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"DelayedACKs\", <a class=\"id\" href=\"#LINUX_MIB_DELAYEDACKS\">LINUX_MIB_DELAYEDACKS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"DelayedACKLocked\", <a class=\"id\" href=\"#LINUX_MIB_DELAYEDACKLOCKED\">LINUX_MIB_DELAYEDACKLOCKED</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"DelayedACKLost\", <a class=\"id\" href=\"#LINUX_MIB_DELAYEDACKLOST\">LINUX_MIB_DELAYEDACKLOST</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"ListenOverflows\", <a class=\"id\" href=\"#LINUX_MIB_LISTENOVERFLOWS\">LINUX_MIB_LISTENOVERFLOWS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"ListenDrops\", <a class=\"id\" href=\"#LINUX_MIB_LISTENDROPS\">LINUX_MIB_LISTENDROPS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPPrequeued\", <a class=\"id\" href=\"#LINUX_MIB_TCPPREQUEUED\">LINUX_MIB_TCPPREQUEUED</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPDirectCopyFromBacklog\", <a class=\"id\" href=\"#LINUX_MIB_TCPDIRECTCOPYFROMBACKLOG\">LINUX_MIB_TCPDIRECTCOPYFROMBACKLOG</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPDirectCopyFromPrequeue\", <a class=\"id\" href=\"#LINUX_MIB_TCPDIRECTCOPYFROMPREQUEUE\">LINUX_MIB_TCPDIRECTCOPYFROMPREQUEUE</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPPrequeueDropped\", <a class=\"id\" href=\"#LINUX_MIB_TCPPREQUEUEDROPPED\">LINUX_MIB_TCPPREQUEUEDROPPED</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPHPHits\", <a class=\"id\" href=\"#LINUX_MIB_TCPHPHITS\">LINUX_MIB_TCPHPHITS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPHPHitsToUser\", <a class=\"id\" href=\"#LINUX_MIB_TCPHPHITSTOUSER\">LINUX_MIB_TCPHPHITSTOUSER</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPPureAcks\", <a class=\"id\" href=\"#LINUX_MIB_TCPPUREACKS\">LINUX_MIB_TCPPUREACKS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPHPAcks\", <a class=\"id\" href=\"#LINUX_MIB_TCPHPACKS\">LINUX_MIB_TCPHPACKS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPRenoRecovery\", <a class=\"id\" href=\"#LINUX_MIB_TCPRENORECOVERY\">LINUX_MIB_TCPRENORECOVERY</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPSackRecovery\", <a class=\"id\" href=\"#LINUX_MIB_TCPSACKRECOVERY\">LINUX_MIB_TCPSACKRECOVERY</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPSACKReneging\", <a class=\"id\" href=\"#LINUX_MIB_TCPSACKRENEGING\">LINUX_MIB_TCPSACKRENEGING</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPFACKReorder\", <a class=\"id\" href=\"#LINUX_MIB_TCPFACKREORDER\">LINUX_MIB_TCPFACKREORDER</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPSACKReorder\", <a class=\"id\" href=\"#LINUX_MIB_TCPSACKREORDER\">LINUX_MIB_TCPSACKREORDER</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPRenoReorder\", <a class=\"id\" href=\"#LINUX_MIB_TCPRENOREORDER\">LINUX_MIB_TCPRENOREORDER</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPTSReorder\", <a class=\"id\" href=\"#LINUX_MIB_TCPTSREORDER\">LINUX_MIB_TCPTSREORDER</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPFullUndo\", <a class=\"id\" href=\"#LINUX_MIB_TCPFULLUNDO\">LINUX_MIB_TCPFULLUNDO</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPPartialUndo\", <a class=\"id\" href=\"#LINUX_MIB_TCPPARTIALUNDO\">LINUX_MIB_TCPPARTIALUNDO</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPDSACKUndo\", <a class=\"id\" href=\"#LINUX_MIB_TCPDSACKUNDO\">LINUX_MIB_TCPDSACKUNDO</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPLossUndo\", <a class=\"id\" href=\"#LINUX_MIB_TCPLOSSUNDO\">LINUX_MIB_TCPLOSSUNDO</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPLoss\", <a class=\"id\" href=\"#LINUX_MIB_TCPLOSS\">LINUX_MIB_TCPLOSS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPLostRetransmit\", <a class=\"id\" href=\"#LINUX_MIB_TCPLOSTRETRANSMIT\">LINUX_MIB_TCPLOSTRETRANSMIT</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPRenoFailures\", <a class=\"id\" href=\"#LINUX_MIB_TCPRENOFAILURES\">LINUX_MIB_TCPRENOFAILURES</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPSackFailures\", <a class=\"id\" href=\"#LINUX_MIB_TCPSACKFAILURES\">LINUX_MIB_TCPSACKFAILURES</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPLossFailures\", <a class=\"id\" href=\"#LINUX_MIB_TCPLOSSFAILURES\">LINUX_MIB_TCPLOSSFAILURES</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPFastRetrans\", <a class=\"id\" href=\"#LINUX_MIB_TCPFASTRETRANS\">LINUX_MIB_TCPFASTRETRANS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPForwardRetrans\", <a class=\"id\" href=\"#LINUX_MIB_TCPFORWARDRETRANS\">LINUX_MIB_TCPFORWARDRETRANS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPSlowStartRetrans\", <a class=\"id\" href=\"#LINUX_MIB_TCPSLOWSTARTRETRANS\">LINUX_MIB_TCPSLOWSTARTRETRANS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPTimeouts\", <a class=\"id\" href=\"#LINUX_MIB_TCPTIMEOUTS\">LINUX_MIB_TCPTIMEOUTS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPRenoRecoveryFail\", <a class=\"id\" href=\"#LINUX_MIB_TCPRENORECOVERYFAIL\">LINUX_MIB_TCPRENORECOVERYFAIL</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPSackRecoveryFail\", <a class=\"id\" href=\"#LINUX_MIB_TCPSACKRECOVERYFAIL\">LINUX_MIB_TCPSACKRECOVERYFAIL</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPSchedulerFailed\", <a class=\"id\" href=\"#LINUX_MIB_TCPSCHEDULERFAILED\">LINUX_MIB_TCPSCHEDULERFAILED</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPRcvCollapsed\", <a class=\"id\" href=\"#LINUX_MIB_TCPRCVCOLLAPSED\">LINUX_MIB_TCPRCVCOLLAPSED</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPDSACKOldSent\", <a class=\"id\" href=\"#LINUX_MIB_TCPDSACKOLDSENT\">LINUX_MIB_TCPDSACKOLDSENT</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPDSACKOfoSent\", <a class=\"id\" href=\"#LINUX_MIB_TCPDSACKOFOSENT\">LINUX_MIB_TCPDSACKOFOSENT</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPDSACKRecv\", <a class=\"id\" href=\"#LINUX_MIB_TCPDSACKRECV\">LINUX_MIB_TCPDSACKRECV</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPDSACKOfoRecv\", <a class=\"id\" href=\"#LINUX_MIB_TCPDSACKOFORECV\">LINUX_MIB_TCPDSACKOFORECV</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPAbortOnSyn\", <a class=\"id\" href=\"#LINUX_MIB_TCPABORTONSYN\">LINUX_MIB_TCPABORTONSYN</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPAbortOnData\", <a class=\"id\" href=\"#LINUX_MIB_TCPABORTONDATA\">LINUX_MIB_TCPABORTONDATA</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPAbortOnClose\", <a class=\"id\" href=\"#LINUX_MIB_TCPABORTONCLOSE\">LINUX_MIB_TCPABORTONCLOSE</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPAbortOnMemory\", <a class=\"id\" href=\"#LINUX_MIB_TCPABORTONMEMORY\">LINUX_MIB_TCPABORTONMEMORY</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPAbortOnTimeout\", <a class=\"id\" href=\"#LINUX_MIB_TCPABORTONTIMEOUT\">LINUX_MIB_TCPABORTONTIMEOUT</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPAbortOnLinger\", <a class=\"id\" href=\"#LINUX_MIB_TCPABORTONLINGER\">LINUX_MIB_TCPABORTONLINGER</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPAbortFailed\", <a class=\"id\" href=\"#LINUX_MIB_TCPABORTFAILED\">LINUX_MIB_TCPABORTFAILED</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPMemoryPressures\", <a class=\"id\" href=\"#LINUX_MIB_TCPMEMORYPRESSURES\">LINUX_MIB_TCPMEMORYPRESSURES</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPSACKDiscard\", <a class=\"id\" href=\"#LINUX_MIB_TCPSACKDISCARD\">LINUX_MIB_TCPSACKDISCARD</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPDSACKIgnoredOld\", <a class=\"id\" href=\"#LINUX_MIB_TCPDSACKIGNOREDOLD\">LINUX_MIB_TCPDSACKIGNOREDOLD</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPDSACKIgnoredNoUndo\", <a class=\"id\" href=\"#LINUX_MIB_TCPDSACKIGNOREDNOUNDO\">LINUX_MIB_TCPDSACKIGNOREDNOUNDO</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPSpuriousRTOs\", <a class=\"id\" href=\"#LINUX_MIB_TCPSPURIOUSRTOS\">LINUX_MIB_TCPSPURIOUSRTOS</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPMD5NotFound\", <a class=\"id\" href=\"#LINUX_MIB_TCPMD5NOTFOUND\">LINUX_MIB_TCPMD5NOTFOUND</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPMD5Unexpected\", <a class=\"id\" href=\"#LINUX_MIB_TCPMD5UNEXPECTED\">LINUX_MIB_TCPMD5UNEXPECTED</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPSackShifted\", <a class=\"id\" href=\"#LINUX_MIB_SACKSHIFTED\">LINUX_MIB_SACKSHIFTED</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPSackMerged\", <a class=\"id\" href=\"#LINUX_MIB_SACKMERGED\">LINUX_MIB_SACKMERGED</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPSackShiftFallback\", <a class=\"id\" href=\"#LINUX_MIB_SACKSHIFTFALLBACK\">LINUX_MIB_SACKSHIFTFALLBACK</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPBacklogDrop\", <a class=\"id\" href=\"#LINUX_MIB_TCPBACKLOGDROP\">LINUX_MIB_TCPBACKLOGDROP</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPMinTTLDrop\", <a class=\"id\" href=\"#LINUX_MIB_TCPMINTTLDROP\">LINUX_MIB_TCPMINTTLDROP</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"TCPDeferAcceptDrop\", <a class=\"id\" href=\"#LINUX_MIB_TCPDEFERACCEPTDROP\">LINUX_MIB_TCPDEFERACCEPTDROP</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_ITEM\">SNMP_MIB_ITEM</a>(\"IPReversePathFilter\", <a class=\"id\" href=\"#LINUX_MIB_IPRPFILTER\">LINUX_MIB_IPRPFILTER</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SNMP_MIB_SENTINEL\">SNMP_MIB_SENTINEL</a>", 
"};", 
"", 
"static void <a class=\"id\" href=\"#icmpmsg_put_line\">icmpmsg_put_line</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, unsigned long *<a class=\"id\" href=\"#vals\">vals</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned short *<a class=\"id\" href=\"#type\">type</a>, int <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#j\">j</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"\\nIcmpMsg:\");", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#count\">count</a>; ++<a class=\"id\" href=\"#j\">j</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \" %sType%u\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a>[<a class=\"id\" href=\"#j\">j</a>] &amp; 0x100 ? \"Out\" : \"In\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a>[<a class=\"id\" href=\"#j\">j</a>] &amp; 0xff);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"\\nIcmpMsg:\");", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#count\">count</a>; ++<a class=\"id\" href=\"#j\">j</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \" %lu\", <a class=\"id\" href=\"#vals\">vals</a>[<a class=\"id\" href=\"#j\">j</a>]);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#icmpmsg_put\">icmpmsg_put</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>)", 
"{", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PERLINE\">PERLINE</a><span class=\"ts\"/>16", 
"", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#type\">type</a>[<a class=\"id\" href=\"#PERLINE\">PERLINE</a>];", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#vals\">vals</a>[<a class=\"id\" href=\"#PERLINE\">PERLINE</a>], <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#seq\">seq</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = 0;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ICMPMSG_MIB_MAX\">ICMPMSG_MIB_MAX</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#snmp_fold_field\">snmp_fold_field</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **) <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#icmpmsg_statistics\">icmpmsg_statistics</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#val\">val</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a>[<a class=\"id\" href=\"#count\">count</a>] = <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vals\">vals</a>[<a class=\"id\" href=\"#count\">count</a>++] = <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> == <a class=\"id\" href=\"#PERLINE\">PERLINE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icmpmsg_put_line\">icmpmsg_put_line</a>(<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#vals\">vals</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icmpmsg_put_line\">icmpmsg_put_line</a>(<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#vals\">vals</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#PERLINE\">PERLINE</a>", 
"}", 
"", 
"static void <a class=\"id\" href=\"#icmp_put\">icmp_put</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#seq\">seq</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"\\nIcmp: InMsgs InErrors\");", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a>=0; <a class=\"id\" href=\"#icmpmibmap\">icmpmibmap</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#name\">name</a> != <a class=\"id\" href=\"#NULL\">NULL</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \" In%s\", <a class=\"id\" href=\"#icmpmibmap\">icmpmibmap</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \" OutMsgs OutErrors\");", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a>=0; <a class=\"id\" href=\"#icmpmibmap\">icmpmibmap</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#name\">name</a> != <a class=\"id\" href=\"#NULL\">NULL</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \" Out%s\", <a class=\"id\" href=\"#icmpmibmap\">icmpmibmap</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"\\nIcmp: %lu %lu\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#snmp_fold_field\">snmp_fold_field</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **) <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#icmp_statistics\">icmp_statistics</a>, <a class=\"id\" href=\"#ICMP_MIB_INMSGS\">ICMP_MIB_INMSGS</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#snmp_fold_field\">snmp_fold_field</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **) <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#icmp_statistics\">icmp_statistics</a>, <a class=\"id\" href=\"#ICMP_MIB_INERRORS\">ICMP_MIB_INERRORS</a>));", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a>=0; <a class=\"id\" href=\"#icmpmibmap\">icmpmibmap</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#name\">name</a> != <a class=\"id\" href=\"#NULL\">NULL</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \" %lu\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#snmp_fold_field\">snmp_fold_field</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **) <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#icmpmsg_statistics\">icmpmsg_statistics</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icmpmibmap\">icmpmibmap</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#index\">index</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \" %lu %lu\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#snmp_fold_field\">snmp_fold_field</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **) <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#icmp_statistics\">icmp_statistics</a>, <a class=\"id\" href=\"#ICMP_MIB_OUTMSGS\">ICMP_MIB_OUTMSGS</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#snmp_fold_field\">snmp_fold_field</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **) <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#icmp_statistics\">icmp_statistics</a>, <a class=\"id\" href=\"#ICMP_MIB_OUTERRORS\">ICMP_MIB_OUTERRORS</a>));", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a>=0; <a class=\"id\" href=\"#icmpmibmap\">icmpmibmap</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#name\">name</a> != <a class=\"id\" href=\"#NULL\">NULL</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \" %lu\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#snmp_fold_field\">snmp_fold_field</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **) <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#icmpmsg_statistics\">icmpmsg_statistics</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icmpmibmap\">icmpmibmap</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#index\">index</a> | 0x100));", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Called from the PROCfs module. This outputs /proc/net/snmp.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#snmp_seq_show\">snmp_seq_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#seq\">seq</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"Ip: Forwarding DefaultTTL\");", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#snmp4_ipstats_list\">snmp4_ipstats_list</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#name\">name</a> != <a class=\"id\" href=\"#NULL\">NULL</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \" %s\", <a class=\"id\" href=\"#snmp4_ipstats_list\">snmp4_ipstats_list</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#name\">name</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"\\nIp: %d %d\",", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#IPV4_DEVCONF_ALL\">IPV4_DEVCONF_ALL</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#FORWARDING\">FORWARDING</a>) ? 1 : 2,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#sysctl_ip_default_ttl\">sysctl_ip_default_ttl</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(<a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#ipstats_mib\">ipstats_mib</a>, <a class=\"id\" href=\"#mibs\">mibs</a>) != 0);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#snmp4_ipstats_list\">snmp4_ipstats_list</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#name\">name</a> != <a class=\"id\" href=\"#NULL\">NULL</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \" %llu\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#snmp_fold_field64\">snmp_fold_field64</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#ip_statistics\">ip_statistics</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#snmp4_ipstats_list\">snmp4_ipstats_list</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#entry\">entry</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#ipstats_mib\">ipstats_mib</a>, <a class=\"id\" href=\"#syncp\">syncp</a>)));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icmp_put\">icmp_put</a>(<a class=\"id\" href=\"#seq\">seq</a>);<span class=\"ts\"/><span class=\"comment\">/* RFC 2011 compatibility */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icmpmsg_put\">icmpmsg_put</a>(<a class=\"id\" href=\"#seq\">seq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"\\nTcp:\");", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#snmp4_tcp_list\">snmp4_tcp_list</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#name\">name</a> != <a class=\"id\" href=\"#NULL\">NULL</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \" %s\", <a class=\"id\" href=\"#snmp4_tcp_list\">snmp4_tcp_list</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#name\">name</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"\\nTcp:\");", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#snmp4_tcp_list\">snmp4_tcp_list</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#name\">name</a> != <a class=\"id\" href=\"#NULL\">NULL</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* MaxConn field is signed, RFC 2012 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#snmp4_tcp_list\">snmp4_tcp_list</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#entry\">entry</a> == <a class=\"id\" href=\"#TCP_MIB_MAXCONN\">TCP_MIB_MAXCONN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \" %ld\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#snmp_fold_field\">snmp_fold_field</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#tcp_statistics\">tcp_statistics</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#snmp4_tcp_list\">snmp4_tcp_list</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#entry\">entry</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \" %lu\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#snmp_fold_field\">snmp_fold_field</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#tcp_statistics\">tcp_statistics</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#snmp4_tcp_list\">snmp4_tcp_list</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#entry\">entry</a>));", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"\\nUdp:\");", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#snmp4_udp_list\">snmp4_udp_list</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#name\">name</a> != <a class=\"id\" href=\"#NULL\">NULL</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \" %s\", <a class=\"id\" href=\"#snmp4_udp_list\">snmp4_udp_list</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#name\">name</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"\\nUdp:\");", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#snmp4_udp_list\">snmp4_udp_list</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#name\">name</a> != <a class=\"id\" href=\"#NULL\">NULL</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \" %lu\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#snmp_fold_field\">snmp_fold_field</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#udp_statistics\">udp_statistics</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#snmp4_udp_list\">snmp4_udp_list</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#entry\">entry</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* the UDP and UDP-Lite MIBs are the same */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"\\nUdpLite:\");", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#snmp4_udp_list\">snmp4_udp_list</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#name\">name</a> != <a class=\"id\" href=\"#NULL\">NULL</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \" %s\", <a class=\"id\" href=\"#snmp4_udp_list\">snmp4_udp_list</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#name\">name</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"\\nUdpLite:\");", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#snmp4_udp_list\">snmp4_udp_list</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#name\">name</a> != <a class=\"id\" href=\"#NULL\">NULL</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \" %lu\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#snmp_fold_field\">snmp_fold_field</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#udplite_statistics\">udplite_statistics</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#snmp4_udp_list\">snmp4_udp_list</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#entry\">entry</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_putc\">seq_putc</a>(<a class=\"id\" href=\"#seq\">seq</a>, '\\n');", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#snmp_seq_open\">snmp_seq_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#single_open_net\">single_open_net</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#snmp_seq_show\">snmp_seq_show</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#snmp_seq_fops\">snmp_seq_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/> = <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/> = <a class=\"id\" href=\"#snmp_seq_open\">snmp_seq_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/> = <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
];
xr_frag_insert('l/6e/6ab3ee4edc72ab4695035ea4060c4db2609bb5.xr', __xr_tmp);
