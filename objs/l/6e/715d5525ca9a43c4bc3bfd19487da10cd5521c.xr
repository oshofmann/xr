var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  linux/fs/ext4/resize.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Support for resizing an ext4 filesystem while it is mounted.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2001, 2002 Andreas Dilger &lt;adilger@clusterfs.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This could probably be made into a module, because it is not often in use.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4FS_DEBUG\">EXT4FS_DEBUG</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"ext4_jbd2.h\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#outside\">outside</a>(<a class=\"id\" href=\"#b\">b</a>, <a class=\"id\" href=\"#first\">first</a>, <a class=\"id\" href=\"#last\">last</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#b\">b</a>) &lt; (<a class=\"id\" href=\"#first\">first</a>) || (<a class=\"id\" href=\"#b\">b</a>) >= (<a class=\"id\" href=\"#last\">last</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#inside\">inside</a>(<a class=\"id\" href=\"#b\">b</a>, <a class=\"id\" href=\"#first\">first</a>, <a class=\"id\" href=\"#last\">last</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#b\">b</a>) >= (<a class=\"id\" href=\"#first\">first</a>) && (<a class=\"id\" href=\"#b\">b</a>) &lt; (<a class=\"id\" href=\"#last\">last</a>))", 
"", 
"static int <a class=\"id\" href=\"#verify_group_input\">verify_group_input</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#ext4_new_group_data\">ext4_new_group_data</a> *<a class=\"id\" href=\"#input\">input</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a> *<a class=\"id\" href=\"#es\">es</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#ext4_blocks_count\">ext4_blocks_count</a>(<a class=\"id\" href=\"#es\">es</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#start\">start</a> + <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#blocks_count\">blocks_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#group\">group</a> = <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#group\">group</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#itend\">itend</a> = <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#inode_table\">inode_table</a> + <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_itb_per_group\">s_itb_per_group</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#overhead\">overhead</a> = <a class=\"id\" href=\"#ext4_bg_has_super\">ext4_bg_has_super</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#group\">group</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/>(1 + <a class=\"id\" href=\"#ext4_bg_num_gdb\">ext4_bg_num_gdb</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#group\">group</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_reserved_gdt_blocks\">s_reserved_gdt_blocks</a>)) : 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#metaend\">metaend</a> = <a class=\"id\" href=\"#start\">start</a> + <a class=\"id\" href=\"#overhead\">overhead</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_grpblk_t\">ext4_grpblk_t</a> <a class=\"id\" href=\"#free_blocks_count\">free_blocks_count</a>, <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#free_blocks_count\">free_blocks_count</a> = <a class=\"id\" href=\"#free_blocks_count\">free_blocks_count</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#blocks_count\">blocks_count</a> - 2 - <a class=\"id\" href=\"#overhead\">overhead</a> - <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_itb_per_group\">s_itb_per_group</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#DEBUG\">DEBUG</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"EXT4-fs: adding %s group %u: %u blocks \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"(%d free, %u reserved)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#ext4_bg_has_super\">ext4_bg_has_super</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#group\">group</a>) ? \"normal\" :", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"no-super\", <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#blocks_count\">blocks_count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#free_blocks_count\">free_blocks_count</a>, <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#reserved_blocks\">reserved_blocks</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_get_group_no_and_offset\">ext4_get_group_no_and_offset</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#group\">group</a> != <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_groups_count\">s_groups_count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_warning\">ext4_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"Cannot add at group %u (only %u groups)\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_groups_count\">s_groups_count</a>);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#offset\">offset</a> != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_warning\">ext4_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"Last group not full\");", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#reserved_blocks\">reserved_blocks</a> &gt; <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#blocks_count\">blocks_count</a> / 5)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_warning\">ext4_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"Reserved blocks too high (%u)\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#reserved_blocks\">reserved_blocks</a>);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#free_blocks_count\">free_blocks_count</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_warning\">ext4_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"Bad blocks count %u\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#blocks_count\">blocks_count</a>);", 
"<span class=\"ts\"/>else if (!(<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#end\">end</a> - 1)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_warning\">ext4_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"Cannot read last block (%llu)\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#end\">end</a> - 1);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#outside\">outside</a>(<a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#block_bitmap\">block_bitmap</a>, <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_warning\">ext4_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"Block bitmap not in group (block %llu)\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     (unsigned long long)<a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#block_bitmap\">block_bitmap</a>);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#outside\">outside</a>(<a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#inode_bitmap\">inode_bitmap</a>, <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_warning\">ext4_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"Inode bitmap not in group (block %llu)\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     (unsigned long long)<a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#inode_bitmap\">inode_bitmap</a>);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#outside\">outside</a>(<a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#inode_table\">inode_table</a>, <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#outside\">outside</a>(<a class=\"id\" href=\"#itend\">itend</a> - 1, <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_warning\">ext4_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"Inode table not in group (blocks %llu-%llu)\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     (unsigned long long)<a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#inode_table\">inode_table</a>, <a class=\"id\" href=\"#itend\">itend</a> - 1);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#inode_bitmap\">inode_bitmap</a> == <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#block_bitmap\">block_bitmap</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_warning\">ext4_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"Block bitmap same as inode bitmap (%llu)\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     (unsigned long long)<a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#block_bitmap\">block_bitmap</a>);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#inside\">inside</a>(<a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#block_bitmap\">block_bitmap</a>, <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#inode_table\">inode_table</a>, <a class=\"id\" href=\"#itend\">itend</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_warning\">ext4_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"Block bitmap (%llu) in inode table \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     \"(%llu-%llu)\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     (unsigned long long)<a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#block_bitmap\">block_bitmap</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     (unsigned long long)<a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#inode_table\">inode_table</a>, <a class=\"id\" href=\"#itend\">itend</a> - 1);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#inside\">inside</a>(<a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#inode_bitmap\">inode_bitmap</a>, <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#inode_table\">inode_table</a>, <a class=\"id\" href=\"#itend\">itend</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_warning\">ext4_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"Inode bitmap (%llu) in inode table \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     \"(%llu-%llu)\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     (unsigned long long)<a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#inode_bitmap\">inode_bitmap</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     (unsigned long long)<a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#inode_table\">inode_table</a>, <a class=\"id\" href=\"#itend\">itend</a> - 1);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#inside\">inside</a>(<a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#block_bitmap\">block_bitmap</a>, <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#metaend\">metaend</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_warning\">ext4_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"Block bitmap (%llu) in GDT table (%llu-%llu)\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     (unsigned long long)<a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#block_bitmap\">block_bitmap</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#metaend\">metaend</a> - 1);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#inside\">inside</a>(<a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#inode_bitmap\">inode_bitmap</a>, <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#metaend\">metaend</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_warning\">ext4_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"Inode bitmap (%llu) in GDT table (%llu-%llu)\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     (unsigned long long)<a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#inode_bitmap\">inode_bitmap</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#metaend\">metaend</a> - 1);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#inside\">inside</a>(<a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#inode_table\">inode_table</a>, <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#metaend\">metaend</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#inside\">inside</a>(<a class=\"id\" href=\"#itend\">itend</a> - 1, <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#metaend\">metaend</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_warning\">ext4_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"Inode table (%llu-%llu) overlaps GDT table \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     \"(%llu-%llu)\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     (unsigned long long)<a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#inode_table\">inode_table</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#itend\">itend</a> - 1, <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#metaend\">metaend</a> - 1);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bclean\">bclean</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#blk\">blk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sb_getblk\">sb_getblk</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#blk\">blk</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EIO\">EIO</a>);", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_journal_get_write_access\">ext4_journal_get_write_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#bh\">bh</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lock_buffer\">lock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>, 0, <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_buffer_uptodate\">set_buffer_uptodate</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_buffer\">unlock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bh\">bh</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * If we have fewer than thresh credits, extend by EXT4_MAX_TRANS_DATA.</span>", 
"<span class=\"comment\"> * If that fails, restart the transaction &amp; regain write access for the</span>", 
"<span class=\"comment\"> * buffer head which is used for block_bitmap modifications.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#extend_or_restart_transaction\">extend_or_restart_transaction</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, int <a class=\"id\" href=\"#thresh\">thresh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_handle_has_enough_credits\">ext4_handle_has_enough_credits</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#thresh\">thresh</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_journal_extend\">ext4_journal_extend</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#EXT4_MAX_TRANS_DATA\">EXT4_MAX_TRANS_DATA</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_journal_restart\">ext4_journal_restart</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#EXT4_MAX_TRANS_DATA\">EXT4_MAX_TRANS_DATA</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_journal_get_write_access\">ext4_journal_get_write_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#bh\">bh</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Set up the block and inode bitmaps, and the inode table for the new group.</span>", 
"<span class=\"comment\"> * This doesn't need to be part of the main transaction, since we are only</span>", 
"<span class=\"comment\"> * changing blocks outside the actual filesystem.  We still do journaling to</span>", 
"<span class=\"comment\"> * ensure the recovery is correct in case of a failure just after resize.</span>", 
"<span class=\"comment\"> * If any part of this fails, we simply abort the resize.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#setup_new_group_blocks\">setup_new_group_blocks</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#ext4_new_group_data\">ext4_new_group_data</a> *<a class=\"id\" href=\"#input\">input</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#ext4_group_first_block_no\">ext4_group_first_block_no</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#group\">group</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#reserved_gdb\">reserved_gdb</a> = <a class=\"id\" href=\"#ext4_bg_has_super\">ext4_bg_has_super</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#group\">group</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_reserved_gdt_blocks\">s_reserved_gdt_blocks</a>) : 0;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#gdblocks\">gdblocks</a> = <a class=\"id\" href=\"#ext4_bg_num_gdb\">ext4_bg_num_gdb</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#group\">group</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#block\">block</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_grpblk_t\">ext4_grpblk_t</a> <a class=\"id\" href=\"#bit\">bit</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0, <a class=\"id\" href=\"#err2\">err2</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* This transaction may be extended/restarted along the way */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#ext4_journal_start_sb\">ext4_journal_start_sb</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT4_MAX_TRANS_DATA\">EXT4_MAX_TRANS_DATA</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resize_lock\">s_resize_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#group\">group</a> != <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_groups_count\">s_groups_count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_journal\">exit_journal</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#bclean\">bclean</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#block_bitmap\">block_bitmap</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_journal\">exit_journal</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_bg_has_super\">ext4_bg_has_super</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#group\">group</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_debug\">ext4_debug</a>(\"mark backup superblock %#04llx (+0)\\n\", <a class=\"id\" href=\"#start\">start</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_set_bit\">ext4_set_bit</a>(0, <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Copy all of the GDT blocks into the backup in this group */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0, <a class=\"id\" href=\"#bit\">bit</a> = 1, <a class=\"id\" href=\"#block\">block</a> = <a class=\"id\" href=\"#start\">start</a> + 1;", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#gdblocks\">gdblocks</a>; <a class=\"id\" href=\"#i\">i</a>++, <a class=\"id\" href=\"#block\">block</a>++, <a class=\"id\" href=\"#bit\">bit</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#gdb\">gdb</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_debug\">ext4_debug</a>(\"update backup group %#04llx (+%d)\\n\", <a class=\"id\" href=\"#block\">block</a>, <a class=\"id\" href=\"#bit\">bit</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#extend_or_restart_transaction\">extend_or_restart_transaction</a>(<a class=\"id\" href=\"#handle\">handle</a>, 1, <a class=\"id\" href=\"#bh\">bh</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_bh\">exit_bh</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gdb\">gdb</a> = <a class=\"id\" href=\"#sb_getblk\">sb_getblk</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#block\">block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#gdb\">gdb</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_bh\">exit_bh</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_journal_get_write_access\">ext4_journal_get_write_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#gdb\">gdb</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#gdb\">gdb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_bh\">exit_bh</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lock_buffer\">lock_buffer</a>(<a class=\"id\" href=\"#gdb\">gdb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#gdb\">gdb</a>-><a class=\"id\" href=\"#b_data\">b_data</a>, <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_group_desc\">s_group_desc</a>[<a class=\"id\" href=\"#i\">i</a>]-><a class=\"id\" href=\"#b_data\">b_data</a>, <a class=\"id\" href=\"#gdb\">gdb</a>-><a class=\"id\" href=\"#b_size\">b_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_buffer_uptodate\">set_buffer_uptodate</a>(<a class=\"id\" href=\"#gdb\">gdb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_buffer\">unlock_buffer</a>(<a class=\"id\" href=\"#gdb\">gdb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_handle_dirty_metadata\">ext4_handle_dirty_metadata</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#gdb\">gdb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_set_bit\">ext4_set_bit</a>(<a class=\"id\" href=\"#bit\">bit</a>, <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#gdb\">gdb</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Zero out all of the reserved backup group descriptor table blocks */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0, <a class=\"id\" href=\"#bit\">bit</a> = <a class=\"id\" href=\"#gdblocks\">gdblocks</a> + 1, <a class=\"id\" href=\"#block\">block</a> = <a class=\"id\" href=\"#start\">start</a> + <a class=\"id\" href=\"#bit\">bit</a>;", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#reserved_gdb\">reserved_gdb</a>; <a class=\"id\" href=\"#i\">i</a>++, <a class=\"id\" href=\"#block\">block</a>++, <a class=\"id\" href=\"#bit\">bit</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#gdb\">gdb</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_debug\">ext4_debug</a>(\"clear reserved block %#04llx (+%d)\\n\", <a class=\"id\" href=\"#block\">block</a>, <a class=\"id\" href=\"#bit\">bit</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#extend_or_restart_transaction\">extend_or_restart_transaction</a>(<a class=\"id\" href=\"#handle\">handle</a>, 1, <a class=\"id\" href=\"#bh\">bh</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_bh\">exit_bh</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#gdb\">gdb</a> = <a class=\"id\" href=\"#bclean\">bclean</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#block\">block</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#gdb\">gdb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_bh\">exit_bh</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_handle_dirty_metadata\">ext4_handle_dirty_metadata</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#gdb\">gdb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_set_bit\">ext4_set_bit</a>(<a class=\"id\" href=\"#bit\">bit</a>, <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#gdb\">gdb</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_debug\">ext4_debug</a>(\"mark block bitmap %#04llx (+%llu)\\n\", <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#block_bitmap\">block_bitmap</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#block_bitmap\">block_bitmap</a> - <a class=\"id\" href=\"#start\">start</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_set_bit\">ext4_set_bit</a>(<a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#block_bitmap\">block_bitmap</a> - <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_debug\">ext4_debug</a>(\"mark inode bitmap %#04llx (+%llu)\\n\", <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#inode_bitmap\">inode_bitmap</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#inode_bitmap\">inode_bitmap</a> - <a class=\"id\" href=\"#start\">start</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_set_bit\">ext4_set_bit</a>(<a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#inode_bitmap\">inode_bitmap</a> - <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Zero out all of the inode table blocks */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0, <a class=\"id\" href=\"#block\">block</a> = <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#inode_table\">inode_table</a>, <a class=\"id\" href=\"#bit\">bit</a> = <a class=\"id\" href=\"#block\">block</a> - <a class=\"id\" href=\"#start\">start</a>;", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_itb_per_group\">s_itb_per_group</a>; <a class=\"id\" href=\"#i\">i</a>++, <a class=\"id\" href=\"#bit\">bit</a>++, <a class=\"id\" href=\"#block\">block</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#it\">it</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_debug\">ext4_debug</a>(\"clear inode block %#04llx (+%d)\\n\", <a class=\"id\" href=\"#block\">block</a>, <a class=\"id\" href=\"#bit\">bit</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#extend_or_restart_transaction\">extend_or_restart_transaction</a>(<a class=\"id\" href=\"#handle\">handle</a>, 1, <a class=\"id\" href=\"#bh\">bh</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_bh\">exit_bh</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#it\">it</a> = <a class=\"id\" href=\"#bclean\">bclean</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#block\">block</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#it\">it</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_bh\">exit_bh</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_handle_dirty_metadata\">ext4_handle_dirty_metadata</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#it\">it</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#it\">it</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_set_bit\">ext4_set_bit</a>(<a class=\"id\" href=\"#bit\">bit</a>, <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#extend_or_restart_transaction\">extend_or_restart_transaction</a>(<a class=\"id\" href=\"#handle\">handle</a>, 2, <a class=\"id\" href=\"#bh\">bh</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_bh\">exit_bh</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mark_bitmap_end\">mark_bitmap_end</a>(<a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#blocks_count\">blocks_count</a>, <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> * 8, <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_handle_dirty_metadata\">ext4_handle_dirty_metadata</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Mark unused entries in inode bitmap used */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_debug\">ext4_debug</a>(\"clear inode bitmap %#04llx (+%llu)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#inode_bitmap\">inode_bitmap</a>, <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#inode_bitmap\">inode_bitmap</a> - <a class=\"id\" href=\"#start\">start</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#bclean\">bclean</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#inode_bitmap\">inode_bitmap</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_journal\">exit_journal</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mark_bitmap_end\">mark_bitmap_end</a>(<a class=\"id\" href=\"#EXT4_INODES_PER_GROUP\">EXT4_INODES_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>), <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> * 8,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_handle_dirty_metadata\">ext4_handle_dirty_metadata</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#bh\">bh</a>);", 
"<a class=\"id\" href=\"#exit_bh\">exit_bh</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"", 
"<a class=\"id\" href=\"#exit_journal\">exit_journal</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resize_lock\">s_resize_lock</a>);", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#err2\">err2</a> = <a class=\"id\" href=\"#ext4_journal_stop\">ext4_journal_stop</a>(<a class=\"id\" href=\"#handle\">handle</a>)) && !<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#err2\">err2</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Iterate through the groups which hold BACKUP superblock/GDT copies in an</span>", 
"<span class=\"comment\"> * ext4 filesystem.  The counters should be initialized to 1, 5, and 7 before</span>", 
"<span class=\"comment\"> * calling this for the first time.  In a sparse filesystem it will be the</span>", 
"<span class=\"comment\"> * sequence of powers of 3, 5, and 7: 1, 3, 5, 7, 9, 25, 27, 49, 81, ...</span>", 
"<span class=\"comment\"> * For a non-sparse filesystem it will be every group: 1, 2, 3, 4, ...</span>", 
"<span class=\"comment\"> */</span>", 
"static unsigned <a class=\"id\" href=\"#ext4_list_backups\">ext4_list_backups</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, unsigned *<a class=\"id\" href=\"#three\">three</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned *<a class=\"id\" href=\"#five\">five</a>, unsigned *<a class=\"id\" href=\"#seven\">seven</a>)", 
"{", 
"<span class=\"ts\"/>unsigned *<a class=\"id\" href=\"#min\">min</a> = <a class=\"id\" href=\"#three\">three</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#mult\">mult</a> = 3;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#EXT4_HAS_RO_COMPAT_FEATURE\">EXT4_HAS_RO_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_FEATURE_RO_COMPAT_SPARSE_SUPER\">EXT4_FEATURE_RO_COMPAT_SPARSE_SUPER</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = *<a class=\"id\" href=\"#min\">min</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#min\">min</a> += 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#five\">five</a> &lt; *<a class=\"id\" href=\"#min\">min</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#min\">min</a> = <a class=\"id\" href=\"#five\">five</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mult\">mult</a> = 5;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#seven\">seven</a> &lt; *<a class=\"id\" href=\"#min\">min</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#min\">min</a> = <a class=\"id\" href=\"#seven\">seven</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mult\">mult</a> = 7;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = *<a class=\"id\" href=\"#min\">min</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#min\">min</a> *= <a class=\"id\" href=\"#mult\">mult</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Check that all of the backup GDT blocks are held in the primary GDT block.</span>", 
"<span class=\"comment\"> * It is assumed that they are stored in group order.  Returns the number of</span>", 
"<span class=\"comment\"> * groups in current filesystem that have BACKUPS, or -ve error code.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#verify_reserved_gdb\">verify_reserved_gdb</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#primary\">primary</a>)", 
"{", 
"<span class=\"ts\"/>const <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#blk\">blk</a> = <a class=\"id\" href=\"#primary\">primary</a>-><a class=\"id\" href=\"#b_blocknr\">b_blocknr</a>;", 
"<span class=\"ts\"/>const <a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_groups_count\">s_groups_count</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#three\">three</a> = 1;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#five\">five</a> = 5;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#seven\">seven</a> = 7;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#grp\">grp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> *<a class=\"id\" href=\"#p\">p</a> = (<a class=\"id\" href=\"#__le32\">__le32</a> *)<a class=\"id\" href=\"#primary\">primary</a>-><a class=\"id\" href=\"#b_data\">b_data</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#gdbackups\">gdbackups</a> = 0;", 
"", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#grp\">grp</a> = <a class=\"id\" href=\"#ext4_list_backups\">ext4_list_backups</a>(<a class=\"id\" href=\"#sb\">sb</a>, &amp;<a class=\"id\" href=\"#three\">three</a>, &amp;<a class=\"id\" href=\"#five\">five</a>, &amp;<a class=\"id\" href=\"#seven\">seven</a>)) &lt; <a class=\"id\" href=\"#end\">end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(*<a class=\"id\" href=\"#p\">p</a>++) !=", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#grp\">grp</a> * <a class=\"id\" href=\"#EXT4_BLOCKS_PER_GROUP\">EXT4_BLOCKS_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>) + <a class=\"id\" href=\"#blk\">blk</a>){", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_warning\">ext4_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"reserved GDT %llu\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     \" missing grp %d (%llu)\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#blk\">blk</a>, <a class=\"id\" href=\"#grp\">grp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#grp\">grp</a> *", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     (<a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a>)<a class=\"id\" href=\"#EXT4_BLOCKS_PER_GROUP\">EXT4_BLOCKS_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#blk\">blk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (++<a class=\"id\" href=\"#gdbackups\">gdbackups</a> &gt; <a class=\"id\" href=\"#EXT4_ADDR_PER_BLOCK\">EXT4_ADDR_PER_BLOCK</a>(<a class=\"id\" href=\"#sb\">sb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFBIG\">EFBIG</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#gdbackups\">gdbackups</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Called when we need to bring a reserved group descriptor table block into</span>", 
"<span class=\"comment\"> * use from the resize inode.  The primary copy of the new GDT block currently</span>", 
"<span class=\"comment\"> * is an indirect block (under the double indirect block in the resize inode).</span>", 
"<span class=\"comment\"> * The new backup GDT blocks will be stored as leaf blocks in this indirect</span>", 
"<span class=\"comment\"> * block, in group order.  Even though we know all the block numbers we need,</span>", 
"<span class=\"comment\"> * we check to ensure that the resize inode has actually reserved these blocks.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Don't need to update the block bitmaps because the blocks are still in use.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We get all of the error cases out of the way, so that we are sure to not</span>", 
"<span class=\"comment\"> * fail once we start modifying the data on disk, because JBD has no rollback.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#add_new_gdb\">add_new_gdb</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#ext4_new_group_data\">ext4_new_group_data</a> *<a class=\"id\" href=\"#input\">input</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> **<a class=\"id\" href=\"#primary\">primary</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a> *<a class=\"id\" href=\"#es\">es</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#gdb_num\">gdb_num</a> = <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#group\">group</a> / <a class=\"id\" href=\"#EXT4_DESC_PER_BLOCK\">EXT4_DESC_PER_BLOCK</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#gdblock\">gdblock</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_sbh\">s_sbh</a>-><a class=\"id\" href=\"#b_blocknr\">b_blocknr</a> + 1 + <a class=\"id\" href=\"#gdb_num\">gdb_num</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> **<a class=\"id\" href=\"#o_group_desc\">o_group_desc</a>, **<a class=\"id\" href=\"#n_group_desc\">n_group_desc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#dind\">dind</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#gdbackups\">gdbackups</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_iloc\">ext4_iloc</a> <a class=\"id\" href=\"#iloc\">iloc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> *<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#DEBUG\">DEBUG</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"EXT4-fs: ext4_add_new_gdb: adding group block %lu\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#gdb_num\">gdb_num</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If we are not using the primary superblock/GDT copy don't resize,</span>", 
"<span class=\"comment\">         * because the user tools have no way of handling this.  Probably a</span>", 
"<span class=\"comment\">         * bad time to do it anyways.</span>", 
"<span class=\"comment\">         */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_sbh\">s_sbh</a>-><a class=\"id\" href=\"#b_blocknr\">b_blocknr</a> !=", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_first_data_block\">s_first_data_block</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_warning\">ext4_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"won't resize using backup superblock at %llu\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long long)<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_sbh\">s_sbh</a>-><a class=\"id\" href=\"#b_blocknr\">b_blocknr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#primary\">primary</a> = <a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#gdblock\">gdblock</a>);", 
"<span class=\"ts\"/>if (!*<a class=\"id\" href=\"#primary\">primary</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#gdbackups\">gdbackups</a> = <a class=\"id\" href=\"#verify_reserved_gdb\">verify_reserved_gdb</a>(<a class=\"id\" href=\"#sb\">sb</a>, *<a class=\"id\" href=\"#primary\">primary</a>)) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#gdbackups\">gdbackups</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_bh\">exit_bh</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_data\">i_data</a> + <a class=\"id\" href=\"#EXT4_DIND_BLOCK\">EXT4_DIND_BLOCK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dind\">dind</a> = <a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(*<a class=\"id\" href=\"#data\">data</a>));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dind\">dind</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_bh\">exit_bh</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> = (<a class=\"id\" href=\"#__le32\">__le32</a> *)<a class=\"id\" href=\"#dind\">dind</a>-><a class=\"id\" href=\"#b_data\">b_data</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#data\">data</a>[<a class=\"id\" href=\"#gdb_num\">gdb_num</a> % <a class=\"id\" href=\"#EXT4_ADDR_PER_BLOCK\">EXT4_ADDR_PER_BLOCK</a>(<a class=\"id\" href=\"#sb\">sb</a>)]) != <a class=\"id\" href=\"#gdblock\">gdblock</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_warning\">ext4_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"new group %u GDT block %llu not reserved\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#gdblock\">gdblock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_dind\">exit_dind</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_journal_get_write_access\">ext4_journal_get_write_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_sbh\">s_sbh</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_dind\">exit_dind</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_journal_get_write_access\">ext4_journal_get_write_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, *<a class=\"id\" href=\"#primary\">primary</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_sbh\">exit_sbh</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_journal_get_write_access\">ext4_journal_get_write_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#dind\">dind</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_primary\">exit_primary</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* ext4_reserve_inode_write() gets a reference on the iloc */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_reserve_inode_write\">ext4_reserve_inode_write</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#iloc\">iloc</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_dindj\">exit_dindj</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n_group_desc\">n_group_desc</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>((<a class=\"id\" href=\"#gdb_num\">gdb_num</a> + 1) * sizeof(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#GFP_NOFS\">GFP_NOFS</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#n_group_desc\">n_group_desc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_warning\">ext4_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      \"not enough memory for %lu groups\", <a class=\"id\" href=\"#gdb_num\">gdb_num</a> + 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_inode\">exit_inode</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Finally, we have all of the possible failures behind us...</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Remove new GDT block from inode double-indirect block and clear out</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the new GDT block for use (which also \"frees\" the backup GDT blocks</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * from the reserved inode).  We don't need to change the bitmaps for</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * these blocks, because they are marked as in-use from being in the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * reserved inode, and will become GDT blocks (primary and backup).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>[<a class=\"id\" href=\"#gdb_num\">gdb_num</a> % <a class=\"id\" href=\"#EXT4_ADDR_PER_BLOCK\">EXT4_ADDR_PER_BLOCK</a>(<a class=\"id\" href=\"#sb\">sb</a>)] = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_handle_dirty_metadata\">ext4_handle_dirty_metadata</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#dind\">dind</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#dind\">dind</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_blocks\">i_blocks</a> -= (<a class=\"id\" href=\"#gdbackups\">gdbackups</a> + 1) * <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> >> 9;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_mark_iloc_dirty\">ext4_mark_iloc_dirty</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#iloc\">iloc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>((*<a class=\"id\" href=\"#primary\">primary</a>)-><a class=\"id\" href=\"#b_data\">b_data</a>, 0, <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_handle_dirty_metadata\">ext4_handle_dirty_metadata</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, *<a class=\"id\" href=\"#primary\">primary</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#o_group_desc\">o_group_desc</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_group_desc\">s_group_desc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#n_group_desc\">n_group_desc</a>, <a class=\"id\" href=\"#o_group_desc\">o_group_desc</a>,", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_gdb_count\">s_gdb_count</a> * sizeof(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n_group_desc\">n_group_desc</a>[<a class=\"id\" href=\"#gdb_num\">gdb_num</a>] = *<a class=\"id\" href=\"#primary\">primary</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_group_desc\">s_group_desc</a> = <a class=\"id\" href=\"#n_group_desc\">n_group_desc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_gdb_count\">s_gdb_count</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#o_group_desc\">o_group_desc</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#le16_add_cpu\">le16_add_cpu</a>(&amp;<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_reserved_gdt_blocks\">s_reserved_gdt_blocks</a>, -1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_handle_dirty_metadata\">ext4_handle_dirty_metadata</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_sbh\">s_sbh</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#exit_inode\">exit_inode</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/* ext4_journal_release_buffer(handle, iloc.bh); */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#iloc\">iloc</a>.<a class=\"id\" href=\"#bh\">bh</a>);", 
"<a class=\"id\" href=\"#exit_dindj\">exit_dindj</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/* ext4_journal_release_buffer(handle, dind); */</span>", 
"<a class=\"id\" href=\"#exit_primary\">exit_primary</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/* ext4_journal_release_buffer(handle, *primary); */</span>", 
"<a class=\"id\" href=\"#exit_sbh\">exit_sbh</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/* ext4_journal_release_buffer(handle, *primary); */</span>", 
"<a class=\"id\" href=\"#exit_dind\">exit_dind</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#dind\">dind</a>);", 
"<a class=\"id\" href=\"#exit_bh\">exit_bh</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(*<a class=\"id\" href=\"#primary\">primary</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_debug\">ext4_debug</a>(\"leaving with error %d\\n\", <a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Called when we are adding a new group which has a backup copy of each of</span>", 
"<span class=\"comment\"> * the GDT blocks (i.e. sparse group) and there are reserved GDT blocks.</span>", 
"<span class=\"comment\"> * We need to add these reserved backup GDT blocks to the resize inode, so</span>", 
"<span class=\"comment\"> * that they are kept for future resizing and not allocated to files.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Each reserved backup GDT block will go into a different indirect block.</span>", 
"<span class=\"comment\"> * The indirect blocks are actually the primary reserved GDT blocks,</span>", 
"<span class=\"comment\"> * so we know in advance what their block numbers are.  We only get the</span>", 
"<span class=\"comment\"> * double-indirect block to verify it is pointing to the primary reserved</span>", 
"<span class=\"comment\"> * GDT blocks so we don't overwrite a data block by accident.  The reserved</span>", 
"<span class=\"comment\"> * backup GDT blocks are stored in their reserved primary GDT block.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#reserve_backup_gdb\">reserve_backup_gdb</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#ext4_new_group_data\">ext4_new_group_data</a> *<a class=\"id\" href=\"#input\">input</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#reserved_gdb\">reserved_gdb</a> =<a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_reserved_gdt_blocks\">s_reserved_gdt_blocks</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> **<a class=\"id\" href=\"#primary\">primary</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#dind\">dind</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_iloc\">ext4_iloc</a> <a class=\"id\" href=\"#iloc\">iloc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#blk\">blk</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> *<a class=\"id\" href=\"#data\">data</a>, *<a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#gdbackups\">gdbackups</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#res\">res</a>, <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#primary\">primary</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#reserved_gdb\">reserved_gdb</a> * sizeof(*<a class=\"id\" href=\"#primary\">primary</a>), <a class=\"id\" href=\"#GFP_NOFS\">GFP_NOFS</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#primary\">primary</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_data\">i_data</a> + <a class=\"id\" href=\"#EXT4_DIND_BLOCK\">EXT4_DIND_BLOCK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dind\">dind</a> = <a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(*<a class=\"id\" href=\"#data\">data</a>));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dind\">dind</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_free\">exit_free</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk\">blk</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_sbh\">s_sbh</a>-><a class=\"id\" href=\"#b_blocknr\">b_blocknr</a> + 1 + <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_gdb_count\">s_gdb_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> = (<a class=\"id\" href=\"#__le32\">__le32</a> *)<a class=\"id\" href=\"#dind\">dind</a>-><a class=\"id\" href=\"#b_data\">b_data</a> + (<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_gdb_count\">s_gdb_count</a> %", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_ADDR_PER_BLOCK\">EXT4_ADDR_PER_BLOCK</a>(<a class=\"id\" href=\"#sb\">sb</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = (<a class=\"id\" href=\"#__le32\">__le32</a> *)<a class=\"id\" href=\"#dind\">dind</a>-><a class=\"id\" href=\"#b_data\">b_data</a> + <a class=\"id\" href=\"#EXT4_ADDR_PER_BLOCK\">EXT4_ADDR_PER_BLOCK</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Get each reserved primary GDT block and verify it holds backups */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#res\">res</a> = 0; <a class=\"id\" href=\"#res\">res</a> &lt; <a class=\"id\" href=\"#reserved_gdb\">reserved_gdb</a>; <a class=\"id\" href=\"#res\">res</a>++, <a class=\"id\" href=\"#blk\">blk</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(*<a class=\"id\" href=\"#data\">data</a>) != <a class=\"id\" href=\"#blk\">blk</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_warning\">ext4_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"reserved block %llu\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     \" not at offset %ld\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#blk\">blk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     (long)(<a class=\"id\" href=\"#data\">data</a> - (<a class=\"id\" href=\"#__le32\">__le32</a> *)<a class=\"id\" href=\"#dind\">dind</a>-><a class=\"id\" href=\"#b_data\">b_data</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_bh\">exit_bh</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#primary\">primary</a>[<a class=\"id\" href=\"#res\">res</a>] = <a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#blk\">blk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#primary\">primary</a>[<a class=\"id\" href=\"#res\">res</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_bh\">exit_bh</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#gdbackups\">gdbackups</a> = <a class=\"id\" href=\"#verify_reserved_gdb\">verify_reserved_gdb</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#primary\">primary</a>[<a class=\"id\" href=\"#res\">res</a>])) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#primary\">primary</a>[<a class=\"id\" href=\"#res\">res</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#gdbackups\">gdbackups</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_bh\">exit_bh</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (++<a class=\"id\" href=\"#data\">data</a> >= <a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> = (<a class=\"id\" href=\"#__le32\">__le32</a> *)<a class=\"id\" href=\"#dind\">dind</a>-><a class=\"id\" href=\"#b_data\">b_data</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#reserved_gdb\">reserved_gdb</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_journal_get_write_access\">ext4_journal_get_write_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#primary\">primary</a>[<a class=\"id\" href=\"#i\">i</a>]))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int j;</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (j = 0; j &lt; i; j++)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>ext4_journal_release_buffer(handle, primary[j]);</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_bh\">exit_bh</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_reserve_inode_write\">ext4_reserve_inode_write</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#iloc\">iloc</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_bh\">exit_bh</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Finally we can add each of the reserved backup GDT blocks from</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the new group to its reserved primary GDT block.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk\">blk</a> = <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#group\">group</a> * <a class=\"id\" href=\"#EXT4_BLOCKS_PER_GROUP\">EXT4_BLOCKS_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#reserved_gdb\">reserved_gdb</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#err2\">err2</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> = (<a class=\"id\" href=\"#__le32\">__le32</a> *)<a class=\"id\" href=\"#primary\">primary</a>[<a class=\"id\" href=\"#i\">i</a>]-><a class=\"id\" href=\"#b_data\">b_data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* printk(\"reserving backup %lu[%u] = %lu\\n\",</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>       primary[i]-&gt;b_blocknr, gdbackups,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>       blk + primary[i]-&gt;b_blocknr); */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>[<a class=\"id\" href=\"#gdbackups\">gdbackups</a>] = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#blk\">blk</a> + <a class=\"id\" href=\"#primary\">primary</a>[<a class=\"id\" href=\"#i\">i</a>]-><a class=\"id\" href=\"#b_blocknr\">b_blocknr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err2\">err2</a> = <a class=\"id\" href=\"#ext4_handle_dirty_metadata\">ext4_handle_dirty_metadata</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#primary\">primary</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#err2\">err2</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_blocks\">i_blocks</a> += <a class=\"id\" href=\"#reserved_gdb\">reserved_gdb</a> * <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> >> 9;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_mark_iloc_dirty\">ext4_mark_iloc_dirty</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#iloc\">iloc</a>);", 
"", 
"<a class=\"id\" href=\"#exit_bh\">exit_bh</a>:", 
"<span class=\"ts\"/>while (--<a class=\"id\" href=\"#res\">res</a> >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#primary\">primary</a>[<a class=\"id\" href=\"#res\">res</a>]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#dind\">dind</a>);", 
"", 
"<a class=\"id\" href=\"#exit_free\">exit_free</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#primary\">primary</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Update the backup copies of the ext4 metadata.  These don't need to be part</span>", 
"<span class=\"comment\"> * of the main resize transaction, because e2fsck will re-write them if there</span>", 
"<span class=\"comment\"> * is a problem (basically only OOM will cause a problem).  However, we</span>", 
"<span class=\"comment\"> * _should_ update the backups if possible, in case the primary gets trashed</span>", 
"<span class=\"comment\"> * for some reason and we need to run e2fsck from a backup superblock.  The</span>", 
"<span class=\"comment\"> * important part is that the new block and inode counts are in the backup</span>", 
"<span class=\"comment\"> * superblocks, and the location of the new group metadata in the GDT backups.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We do not need take the s_resize_lock for this, because these</span>", 
"<span class=\"comment\"> * blocks are not otherwise touched by the filesystem code when it is</span>", 
"<span class=\"comment\"> * mounted.  We don't need to worry about last changing from</span>", 
"<span class=\"comment\"> * sbi-&gt;s_groups_count, because the worst that can happen is that we</span>", 
"<span class=\"comment\"> * do not copy the full number of backups at this time.  The resize</span>", 
"<span class=\"comment\"> * which changed s_groups_count will backup again.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#update_backups\">update_backups</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   int <a class=\"id\" href=\"#blk_off\">blk_off</a>, char *<a class=\"id\" href=\"#data\">data</a>, int <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>const <a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_groups_count\">s_groups_count</a>;", 
"<span class=\"ts\"/>const int <a class=\"id\" href=\"#bpg\">bpg</a> = <a class=\"id\" href=\"#EXT4_BLOCKS_PER_GROUP\">EXT4_BLOCKS_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#three\">three</a> = 1;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#five\">five</a> = 5;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#seven\">seven</a> = 7;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#group\">group</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rest\">rest</a> = <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> - <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0, <a class=\"id\" href=\"#err2\">err2</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#ext4_journal_start_sb\">ext4_journal_start_sb</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT4_MAX_TRANS_DATA\">EXT4_MAX_TRANS_DATA</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#group\">group</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_err\">exit_err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#group\">group</a> = <a class=\"id\" href=\"#ext4_list_backups\">ext4_list_backups</a>(<a class=\"id\" href=\"#sb\">sb</a>, &amp;<a class=\"id\" href=\"#three\">three</a>, &amp;<a class=\"id\" href=\"#five\">five</a>, &amp;<a class=\"id\" href=\"#seven\">seven</a>)) &lt; <a class=\"id\" href=\"#last\">last</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Out of journal space, and can't get more - abort - so sad */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_handle_valid\">ext4_handle_valid</a>(<a class=\"id\" href=\"#handle\">handle</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#h_buffer_credits\">h_buffer_credits</a> == 0 &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ext4_journal_extend\">ext4_journal_extend</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#EXT4_MAX_TRANS_DATA\">EXT4_MAX_TRANS_DATA</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_journal_restart\">ext4_journal_restart</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#EXT4_MAX_TRANS_DATA\">EXT4_MAX_TRANS_DATA</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sb_getblk\">sb_getblk</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#group\">group</a> * <a class=\"id\" href=\"#bpg\">bpg</a> + <a class=\"id\" href=\"#blk_off\">blk_off</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_debug\">ext4_debug</a>(\"update metadata backup %#04lx\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (unsigned long)<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_blocknr\">b_blocknr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_journal_get_write_access\">ext4_journal_get_write_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#bh\">bh</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lock_buffer\">lock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>, <a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rest\">rest</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a> + <a class=\"id\" href=\"#size\">size</a>, 0, <a class=\"id\" href=\"#rest\">rest</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_buffer_uptodate\">set_buffer_uptodate</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_buffer\">unlock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_handle_dirty_metadata\">ext4_handle_dirty_metadata</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#err2\">err2</a> = <a class=\"id\" href=\"#ext4_journal_stop\">ext4_journal_stop</a>(<a class=\"id\" href=\"#handle\">handle</a>)) && !<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#err2\">err2</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Ugh! Need to have e2fsck write the backup copies.  It is too</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * late to revert the resize, we shouldn't fail just because of</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the backup copies (they are only needed in case of corruption).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * However, if we got here we have a journal problem too, so we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * can't really start a transaction to mark the superblock.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Chicken out and just set the flag on the hope it will be written</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to disk, and if not - we will simply wait until next fsck.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<a class=\"id\" href=\"#exit_err\">exit_err</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_warning\">ext4_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"can't update backup for group %u (err %d), \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     \"forcing fsck on next reboot\", <a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_state\">s_mount_state</a> &= ~<a class=\"id\" href=\"#EXT4_VALID_FS\">EXT4_VALID_FS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_state\">s_state</a> &= <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(~<a class=\"id\" href=\"#EXT4_VALID_FS\">EXT4_VALID_FS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mark_buffer_dirty\">mark_buffer_dirty</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_sbh\">s_sbh</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/* Add group descriptor data to an existing or new group descriptor block.</span>", 
"<span class=\"comment\"> * Ensure we handle all possible error conditions _before_ we start modifying</span>", 
"<span class=\"comment\"> * the filesystem, because we cannot abort the transaction and not have it</span>", 
"<span class=\"comment\"> * write the data to disk.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If we are on a GDT block boundary, we need to get the reserved GDT block.</span>", 
"<span class=\"comment\"> * Otherwise, we may need to add backup GDT blocks for a sparse group.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We only need to hold the superblock lock while we are actually adding</span>", 
"<span class=\"comment\"> * in the new group's counts to the superblock.  Prior to that we have</span>", 
"<span class=\"comment\"> * not really \"added\" the group at all.  We re-check that we are still</span>", 
"<span class=\"comment\"> * adding in the last group in case things have changed since verifying.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ext4_group_add\">ext4_group_add</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, struct <a class=\"id\" href=\"#ext4_new_group_data\">ext4_new_group_data</a> *<a class=\"id\" href=\"#input\">input</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a> *<a class=\"id\" href=\"#es\">es</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#reserved_gdb\">reserved_gdb</a> = <a class=\"id\" href=\"#ext4_bg_has_super\">ext4_bg_has_super</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#group\">group</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_reserved_gdt_blocks\">s_reserved_gdt_blocks</a>) : 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#primary\">primary</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#gdp\">gdp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#gdb_off\">gdb_off</a>, <a class=\"id\" href=\"#gdb_num\">gdb_num</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>, <a class=\"id\" href=\"#err2\">err2</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gdb_num\">gdb_num</a> = <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#group\">group</a> / <a class=\"id\" href=\"#EXT4_DESC_PER_BLOCK\">EXT4_DESC_PER_BLOCK</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gdb_off\">gdb_off</a> = <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#group\">group</a> % <a class=\"id\" href=\"#EXT4_DESC_PER_BLOCK\">EXT4_DESC_PER_BLOCK</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#gdb_off\">gdb_off</a> == 0 && !<a class=\"id\" href=\"#EXT4_HAS_RO_COMPAT_FEATURE\">EXT4_HAS_RO_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_FEATURE_RO_COMPAT_SPARSE_SUPER\">EXT4_FEATURE_RO_COMPAT_SPARSE_SUPER</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_warning\">ext4_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"Can't resize non-sparse filesystem further\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_blocks_count\">ext4_blocks_count</a>(<a class=\"id\" href=\"#es\">es</a>) + <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#blocks_count\">blocks_count</a> &lt;", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#ext4_blocks_count\">ext4_blocks_count</a>(<a class=\"id\" href=\"#es\">es</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_warning\">ext4_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"blocks_count overflow\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_inodes_count\">s_inodes_count</a>) + <a class=\"id\" href=\"#EXT4_INODES_PER_GROUP\">EXT4_INODES_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>) &lt;", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_inodes_count\">s_inodes_count</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_warning\">ext4_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"inodes_count overflow\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#reserved_gdb\">reserved_gdb</a> || <a class=\"id\" href=\"#gdb_off\">gdb_off</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#EXT4_HAS_COMPAT_FEATURE\">EXT4_HAS_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#EXT4_FEATURE_COMPAT_RESIZE_INODE\">EXT4_FEATURE_COMPAT_RESIZE_INODE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>    || !<a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_reserved_gdt_blocks\">s_reserved_gdt_blocks</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_warning\">ext4_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     \"No reserved GDT blocks, can't resize\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#ext4_iget\">ext4_iget</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT4_RESIZE_INO\">EXT4_RESIZE_INO</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#inode\">inode</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_warning\">ext4_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"Error opening resize inode\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#verify_group_input\">verify_group_input</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#input\">input</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_put\">exit_put</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#setup_new_group_blocks\">setup_new_group_blocks</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#input\">input</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_put\">exit_put</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We will always be modifying at least the superblock and a GDT</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * block.  If we are adding a group past the last current GDT block,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we will also modify the inode and the dindirect block.  If we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * are adding a group with superblock/GDT backups  we will also</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * modify each of the reserved GDT dindirect blocks.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#ext4_journal_start_sb\">ext4_journal_start_sb</a>(<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#ext4_bg_has_super\">ext4_bg_has_super</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#group\">group</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       3 + <a class=\"id\" href=\"#reserved_gdb\">reserved_gdb</a> : 4);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_put\">exit_put</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resize_lock\">s_resize_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#group\">group</a> != <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_groups_count\">s_groups_count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_warning\">ext4_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"multiple resizers run on filesystem!\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_journal\">exit_journal</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_journal_get_write_access\">ext4_journal_get_write_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_sbh\">s_sbh</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_journal\">exit_journal</a>;", 
"", 
"        <span class=\"comment\">/*</span>", 
"<span class=\"comment\">         * We will only either add reserved group blocks to a backup group</span>", 
"<span class=\"comment\">         * or remove reserved blocks for the first group in a new group block.</span>", 
"<span class=\"comment\">         * Doing both would be mean more complex code, and sane people don't</span>", 
"<span class=\"comment\">         * use non-sparse filesystems anymore.  This is already checked above.</span>", 
"<span class=\"comment\">         */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#gdb_off\">gdb_off</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#primary\">primary</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_group_desc\">s_group_desc</a>[<a class=\"id\" href=\"#gdb_num\">gdb_num</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_journal_get_write_access\">ext4_journal_get_write_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#primary\">primary</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_journal\">exit_journal</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#reserved_gdb\">reserved_gdb</a> && <a class=\"id\" href=\"#ext4_bg_num_gdb\">ext4_bg_num_gdb</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#group\">group</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#reserve_backup_gdb\">reserve_backup_gdb</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#input\">input</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_journal\">exit_journal</a>;", 
"<span class=\"ts\"/>} else if ((<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#add_new_gdb\">add_new_gdb</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#input\">input</a>, &amp;<a class=\"id\" href=\"#primary\">primary</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_journal\">exit_journal</a>;", 
"", 
"        <span class=\"comment\">/*</span>", 
"<span class=\"comment\">         * OK, now we've set up the new group.  Time to make it active.</span>", 
"<span class=\"comment\">         *</span>", 
];
xr_frag_insert('l/6e/715d5525ca9a43c4bc3bfd19487da10cd5521c.xr', __xr_tmp);
