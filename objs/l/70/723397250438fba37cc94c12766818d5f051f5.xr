var __xr_tmp = [
"static const <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#tomoyo_pnnn2mac\">tomoyo_pnnn2mac</a>[<a class=\"id\" href=\"#TOMOYO_MAX_MKDEV_OPERATION\">TOMOYO_MAX_MKDEV_OPERATION</a>] = {", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#TOMOYO_TYPE_MKBLOCK\">TOMOYO_TYPE_MKBLOCK</a>] = <a class=\"id\" href=\"#TOMOYO_MAC_FILE_MKBLOCK\">TOMOYO_MAC_FILE_MKBLOCK</a>,", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#TOMOYO_TYPE_MKCHAR\">TOMOYO_TYPE_MKCHAR</a>]  = <a class=\"id\" href=\"#TOMOYO_MAC_FILE_MKCHAR\">TOMOYO_MAC_FILE_MKCHAR</a>,", 
"};", 
"", 
"static const <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#tomoyo_pp2mac\">tomoyo_pp2mac</a>[<a class=\"id\" href=\"#TOMOYO_MAX_PATH2_OPERATION\">TOMOYO_MAX_PATH2_OPERATION</a>] = {", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#TOMOYO_TYPE_LINK\">TOMOYO_TYPE_LINK</a>]       = <a class=\"id\" href=\"#TOMOYO_MAC_FILE_LINK\">TOMOYO_MAC_FILE_LINK</a>,", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#TOMOYO_TYPE_RENAME\">TOMOYO_TYPE_RENAME</a>]     = <a class=\"id\" href=\"#TOMOYO_MAC_FILE_RENAME\">TOMOYO_MAC_FILE_RENAME</a>,", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#TOMOYO_TYPE_PIVOT_ROOT\">TOMOYO_TYPE_PIVOT_ROOT</a>] = <a class=\"id\" href=\"#TOMOYO_MAC_FILE_PIVOT_ROOT\">TOMOYO_MAC_FILE_PIVOT_ROOT</a>,", 
"};", 
"", 
"static const <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#tomoyo_pn2mac\">tomoyo_pn2mac</a>[<a class=\"id\" href=\"#TOMOYO_MAX_PATH_NUMBER_OPERATION\">TOMOYO_MAX_PATH_NUMBER_OPERATION</a>] = {", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#TOMOYO_TYPE_CREATE\">TOMOYO_TYPE_CREATE</a>] = <a class=\"id\" href=\"#TOMOYO_MAC_FILE_CREATE\">TOMOYO_MAC_FILE_CREATE</a>,", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#TOMOYO_TYPE_MKDIR\">TOMOYO_TYPE_MKDIR</a>]  = <a class=\"id\" href=\"#TOMOYO_MAC_FILE_MKDIR\">TOMOYO_MAC_FILE_MKDIR</a>,", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#TOMOYO_TYPE_MKFIFO\">TOMOYO_TYPE_MKFIFO</a>] = <a class=\"id\" href=\"#TOMOYO_MAC_FILE_MKFIFO\">TOMOYO_MAC_FILE_MKFIFO</a>,", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#TOMOYO_TYPE_MKSOCK\">TOMOYO_TYPE_MKSOCK</a>] = <a class=\"id\" href=\"#TOMOYO_MAC_FILE_MKSOCK\">TOMOYO_MAC_FILE_MKSOCK</a>,", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#TOMOYO_TYPE_IOCTL\">TOMOYO_TYPE_IOCTL</a>]  = <a class=\"id\" href=\"#TOMOYO_MAC_FILE_IOCTL\">TOMOYO_MAC_FILE_IOCTL</a>,", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#TOMOYO_TYPE_CHMOD\">TOMOYO_TYPE_CHMOD</a>]  = <a class=\"id\" href=\"#TOMOYO_MAC_FILE_CHMOD\">TOMOYO_MAC_FILE_CHMOD</a>,", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#TOMOYO_TYPE_CHOWN\">TOMOYO_TYPE_CHOWN</a>]  = <a class=\"id\" href=\"#TOMOYO_MAC_FILE_CHOWN\">TOMOYO_MAC_FILE_CHOWN</a>,", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#TOMOYO_TYPE_CHGRP\">TOMOYO_TYPE_CHGRP</a>]  = <a class=\"id\" href=\"#TOMOYO_MAC_FILE_CHGRP\">TOMOYO_MAC_FILE_CHGRP</a>,", 
"};", 
"", 
"void <a class=\"id\" href=\"#tomoyo_put_name_union\">tomoyo_put_name_union</a>(struct <a class=\"id\" href=\"#tomoyo_name_union\">tomoyo_name_union</a> *<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#is_group\">is_group</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_put_group\">tomoyo_put_group</a>(<a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#group\">group</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_put_name\">tomoyo_put_name</a>(<a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#filename\">filename</a>);", 
"}", 
"", 
"const struct <a class=\"id\" href=\"#tomoyo_path_info\">tomoyo_path_info</a> *", 
"<a class=\"id\" href=\"#tomoyo_compare_name_union\">tomoyo_compare_name_union</a>(const struct <a class=\"id\" href=\"#tomoyo_path_info\">tomoyo_path_info</a> *<a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const struct <a class=\"id\" href=\"#tomoyo_name_union\">tomoyo_name_union</a> *<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#is_group\">is_group</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#tomoyo_path_matches_group\">tomoyo_path_matches_group</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#group\">group</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tomoyo_path_matches_pattern\">tomoyo_path_matches_pattern</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#filename\">filename</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#filename\">filename</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#tomoyo_put_number_union\">tomoyo_put_number_union</a>(struct <a class=\"id\" href=\"#tomoyo_number_union\">tomoyo_number_union</a> *<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ptr\">ptr</a> && <a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#is_group\">is_group</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_put_group\">tomoyo_put_group</a>(<a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#group\">group</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#tomoyo_compare_number_union\">tomoyo_compare_number_union</a>(const unsigned long <a class=\"id\" href=\"#value\">value</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const struct <a class=\"id\" href=\"#tomoyo_number_union\">tomoyo_number_union</a> *<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#is_group\">is_group</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#tomoyo_number_matches_group\">tomoyo_number_matches_group</a>(<a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#group\">group</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#value\">value</a> >= <a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#values\">values</a>[0] && <a class=\"id\" href=\"#value\">value</a> <= <a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#values\">values</a>[1];", 
"}", 
"", 
"static void <a class=\"id\" href=\"#tomoyo_add_slash\">tomoyo_add_slash</a>(struct <a class=\"id\" href=\"#tomoyo_path_info\">tomoyo_path_info</a> *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#is_dir\">is_dir</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This is OK because tomoyo_encode() reserves space for appending \"/\".</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#strcat\">strcat</a>((char *) <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#name\">name</a>, \"/\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_fill_path_info\">tomoyo_fill_path_info</a>(<a class=\"id\" href=\"#buf\">buf</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tomoyo_strendswith - Check whether the token ends with the given token.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @name: The token to check.</span>", 
"<span class=\"comment\"> * @tail: The token to find.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns true if @name ends with @tail, false otherwise.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#tomoyo_strendswith\">tomoyo_strendswith</a>(const char *<a class=\"id\" href=\"#name\">name</a>, const char *<a class=\"id\" href=\"#tail\">tail</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#name\">name</a> || !<a class=\"id\" href=\"#tail\">tail</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#name\">name</a>) - <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#tail\">tail</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a> >= 0 && !<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#name\">name</a> + <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#tail\">tail</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tomoyo_get_realpath - Get realpath.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @buf:  Pointer to \"struct tomoyo_path_info\".</span>", 
"<span class=\"comment\"> * @path: Pointer to \"struct path\".</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns true on success, false otherwise.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#tomoyo_get_realpath\">tomoyo_get_realpath</a>(struct <a class=\"id\" href=\"#tomoyo_path_info\">tomoyo_path_info</a> *<a class=\"id\" href=\"#buf\">buf</a>, struct <a class=\"id\" href=\"#path\">path</a> *<a class=\"id\" href=\"#path\">path</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#tomoyo_realpath_from_path\">tomoyo_realpath_from_path</a>(<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#name\">name</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_fill_path_info\">tomoyo_fill_path_info</a>(<a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/>}", 
"        return <a class=\"id\" href=\"#false\">false</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tomoyo_audit_path_log - Audit path request log.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @r: Pointer to \"struct tomoyo_request_info\".</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 on success, negative value otherwise.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#tomoyo_audit_path_log\">tomoyo_audit_path_log</a>(struct <a class=\"id\" href=\"#tomoyo_request_info\">tomoyo_request_info</a> *<a class=\"id\" href=\"#r\">r</a>)", 
"{", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#operation\">operation</a> = <a class=\"id\" href=\"#tomoyo_path_keyword\">tomoyo_path_keyword</a>[<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#operation\">operation</a>];", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#tomoyo_path_info\">tomoyo_path_info</a> *<a class=\"id\" href=\"#filename\">filename</a> = <a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#filename\">filename</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#granted\">granted</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_warn_log\">tomoyo_warn_log</a>(<a class=\"id\" href=\"#r\">r</a>, \"%s %s\", <a class=\"id\" href=\"#operation\">operation</a>, <a class=\"id\" href=\"#filename\">filename</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tomoyo_supervisor\">tomoyo_supervisor</a>(<a class=\"id\" href=\"#r\">r</a>, \"allow_%s %s\\n\", <a class=\"id\" href=\"#operation\">operation</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#tomoyo_pattern\">tomoyo_pattern</a>(<a class=\"id\" href=\"#filename\">filename</a>));", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tomoyo_audit_path2_log - Audit path/path request log.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @r: Pointer to \"struct tomoyo_request_info\".</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 on success, negative value otherwise.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#tomoyo_audit_path2_log\">tomoyo_audit_path2_log</a>(struct <a class=\"id\" href=\"#tomoyo_request_info\">tomoyo_request_info</a> *<a class=\"id\" href=\"#r\">r</a>)", 
"{", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#operation\">operation</a> = <a class=\"id\" href=\"#tomoyo_path2_keyword\">tomoyo_path2_keyword</a>[<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#path2\">path2</a>.<a class=\"id\" href=\"#operation\">operation</a>];", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#tomoyo_path_info\">tomoyo_path_info</a> *<a class=\"id\" href=\"#filename1\">filename1</a> = <a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#path2\">path2</a>.<a class=\"id\" href=\"#filename1\">filename1</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#tomoyo_path_info\">tomoyo_path_info</a> *<a class=\"id\" href=\"#filename2\">filename2</a> = <a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#path2\">path2</a>.<a class=\"id\" href=\"#filename2\">filename2</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#granted\">granted</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_warn_log\">tomoyo_warn_log</a>(<a class=\"id\" href=\"#r\">r</a>, \"%s %s %s\", <a class=\"id\" href=\"#operation\">operation</a>, <a class=\"id\" href=\"#filename1\">filename1</a>-><a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filename2\">filename2</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tomoyo_supervisor\">tomoyo_supervisor</a>(<a class=\"id\" href=\"#r\">r</a>, \"allow_%s %s %s\\n\", <a class=\"id\" href=\"#operation\">operation</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#tomoyo_pattern\">tomoyo_pattern</a>(<a class=\"id\" href=\"#filename1\">filename1</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#tomoyo_pattern\">tomoyo_pattern</a>(<a class=\"id\" href=\"#filename2\">filename2</a>));", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tomoyo_audit_mkdev_log - Audit path/number/number/number request log.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @r: Pointer to \"struct tomoyo_request_info\".</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 on success, negative value otherwise.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#tomoyo_audit_mkdev_log\">tomoyo_audit_mkdev_log</a>(struct <a class=\"id\" href=\"#tomoyo_request_info\">tomoyo_request_info</a> *<a class=\"id\" href=\"#r\">r</a>)", 
"{", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#operation\">operation</a> = <a class=\"id\" href=\"#tomoyo_mkdev_keyword\">tomoyo_mkdev_keyword</a>[<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#mkdev\">mkdev</a>.<a class=\"id\" href=\"#operation\">operation</a>];", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#tomoyo_path_info\">tomoyo_path_info</a> *<a class=\"id\" href=\"#filename\">filename</a> = <a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#mkdev\">mkdev</a>.<a class=\"id\" href=\"#filename\">filename</a>;", 
"<span class=\"ts\"/>const unsigned int <a class=\"id\" href=\"#major\">major</a> = <a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#mkdev\">mkdev</a>.<a class=\"id\" href=\"#major\">major</a>;", 
"<span class=\"ts\"/>const unsigned int <a class=\"id\" href=\"#minor\">minor</a> = <a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#mkdev\">mkdev</a>.<a class=\"id\" href=\"#minor\">minor</a>;", 
"<span class=\"ts\"/>const unsigned int <a class=\"id\" href=\"#mode\">mode</a> = <a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#mkdev\">mkdev</a>.<a class=\"id\" href=\"#mode\">mode</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#granted\">granted</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_warn_log\">tomoyo_warn_log</a>(<a class=\"id\" href=\"#r\">r</a>, \"%s %s 0%o %u %u\", <a class=\"id\" href=\"#operation\">operation</a>, <a class=\"id\" href=\"#filename\">filename</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#mode\">mode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#major\">major</a>, <a class=\"id\" href=\"#minor\">minor</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tomoyo_supervisor\">tomoyo_supervisor</a>(<a class=\"id\" href=\"#r\">r</a>, \"allow_%s %s 0%o %u %u\\n\", <a class=\"id\" href=\"#operation\">operation</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#tomoyo_pattern\">tomoyo_pattern</a>(<a class=\"id\" href=\"#filename\">filename</a>), <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#major\">major</a>, <a class=\"id\" href=\"#minor\">minor</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tomoyo_audit_path_number_log - Audit path/number request log.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @r:     Pointer to \"struct tomoyo_request_info\".</span>", 
"<span class=\"comment\"> * @error: Error code.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 on success, negative value otherwise.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#tomoyo_audit_path_number_log\">tomoyo_audit_path_number_log</a>(struct <a class=\"id\" href=\"#tomoyo_request_info\">tomoyo_request_info</a> *<a class=\"id\" href=\"#r\">r</a>)", 
"{", 
"<span class=\"ts\"/>const <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#path_number\">path_number</a>.<a class=\"id\" href=\"#operation\">operation</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#radix\">radix</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#tomoyo_path_info\">tomoyo_path_info</a> *<a class=\"id\" href=\"#filename\">filename</a> = <a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#path_number\">path_number</a>.<a class=\"id\" href=\"#filename\">filename</a>;", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#operation\">operation</a> = <a class=\"id\" href=\"#tomoyo_path_number_keyword\">tomoyo_path_number_keyword</a>[<a class=\"id\" href=\"#type\">type</a>];", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buffer\">buffer</a>[64];", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#granted\">granted</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TOMOYO_TYPE_CREATE\">TOMOYO_TYPE_CREATE</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TOMOYO_TYPE_MKDIR\">TOMOYO_TYPE_MKDIR</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TOMOYO_TYPE_MKFIFO\">TOMOYO_TYPE_MKFIFO</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TOMOYO_TYPE_MKSOCK\">TOMOYO_TYPE_MKSOCK</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TOMOYO_TYPE_CHMOD\">TOMOYO_TYPE_CHMOD</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#radix\">radix</a> = <a class=\"id\" href=\"#TOMOYO_VALUE_TYPE_OCTAL\">TOMOYO_VALUE_TYPE_OCTAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TOMOYO_TYPE_IOCTL\">TOMOYO_TYPE_IOCTL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#radix\">radix</a> = <a class=\"id\" href=\"#TOMOYO_VALUE_TYPE_HEXADECIMAL\">TOMOYO_VALUE_TYPE_HEXADECIMAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#radix\">radix</a> = <a class=\"id\" href=\"#TOMOYO_VALUE_TYPE_DECIMAL\">TOMOYO_VALUE_TYPE_DECIMAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_print_ulong\">tomoyo_print_ulong</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>), <a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#path_number\">path_number</a>.<a class=\"id\" href=\"#number\">number</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#radix\">radix</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_warn_log\">tomoyo_warn_log</a>(<a class=\"id\" href=\"#r\">r</a>, \"%s %s %s\", <a class=\"id\" href=\"#operation\">operation</a>, <a class=\"id\" href=\"#filename\">filename</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#buffer\">buffer</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tomoyo_supervisor\">tomoyo_supervisor</a>(<a class=\"id\" href=\"#r\">r</a>, \"allow_%s %s %s\\n\", <a class=\"id\" href=\"#operation\">operation</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#tomoyo_pattern\">tomoyo_pattern</a>(<a class=\"id\" href=\"#filename\">filename</a>), <a class=\"id\" href=\"#buffer\">buffer</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#tomoyo_same_globally_readable\">tomoyo_same_globally_readable</a>(const struct <a class=\"id\" href=\"#tomoyo_acl_head\">tomoyo_acl_head</a> *<a class=\"id\" href=\"#a\">a</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const struct <a class=\"id\" href=\"#tomoyo_acl_head\">tomoyo_acl_head</a> *<a class=\"id\" href=\"#b\">b</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#a\">a</a>, struct <a class=\"id\" href=\"#tomoyo_readable_file\">tomoyo_readable_file</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#head\">head</a>)-><a class=\"id\" href=\"#filename\">filename</a> ==", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#b\">b</a>, struct <a class=\"id\" href=\"#tomoyo_readable_file\">tomoyo_readable_file</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#head\">head</a>)-><a class=\"id\" href=\"#filename\">filename</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tomoyo_update_globally_readable_entry - Update \"struct tomoyo_readable_file\" list.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @filename:  Filename unconditionally permitted to open() for reading.</span>", 
"<span class=\"comment\"> * @is_delete: True if it is a delete request.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 on success, negative value otherwise.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Caller holds tomoyo_read_lock().</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#tomoyo_update_globally_readable_entry\">tomoyo_update_globally_readable_entry</a>(const char *<a class=\"id\" href=\"#filename\">filename</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#is_delete\">is_delete</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tomoyo_readable_file\">tomoyo_readable_file</a> <a class=\"id\" href=\"#e\">e</a> = { };", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tomoyo_correct_word\">tomoyo_correct_word</a>(<a class=\"id\" href=\"#filename\">filename</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#filename\">filename</a> = <a class=\"id\" href=\"#tomoyo_get_name\">tomoyo_get_name</a>(<a class=\"id\" href=\"#filename\">filename</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#filename\">filename</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#tomoyo_update_policy\">tomoyo_update_policy</a>(&amp;<a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#head\">head</a>, sizeof(<a class=\"id\" href=\"#e\">e</a>), <a class=\"id\" href=\"#is_delete\">is_delete</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     &amp;<a class=\"id\" href=\"#tomoyo_policy_list\">tomoyo_policy_list</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     [<a class=\"id\" href=\"#TOMOYO_ID_GLOBALLY_READABLE\">TOMOYO_ID_GLOBALLY_READABLE</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#tomoyo_same_globally_readable\">tomoyo_same_globally_readable</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_put_name\">tomoyo_put_name</a>(<a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#filename\">filename</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tomoyo_globally_readable_file - Check if the file is unconditionnaly permitted to be open()ed for reading.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @filename: The filename to check.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns true if any domain can open @filename for reading, false otherwise.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Caller holds tomoyo_read_lock().</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#tomoyo_globally_readable_file\">tomoyo_globally_readable_file</a>(const struct <a class=\"id\" href=\"#tomoyo_path_info\">tomoyo_path_info</a> *", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#filename\">filename</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tomoyo_readable_file\">tomoyo_readable_file</a> *<a class=\"id\" href=\"#ptr\">ptr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#found\">found</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_rcu\">list_for_each_entry_rcu</a>(<a class=\"id\" href=\"#ptr\">ptr</a>, &amp;<a class=\"id\" href=\"#tomoyo_policy_list\">tomoyo_policy_list</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>[<a class=\"id\" href=\"#TOMOYO_ID_GLOBALLY_READABLE\">TOMOYO_ID_GLOBALLY_READABLE</a>], <a class=\"id\" href=\"#head\">head</a>.<a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#head\">head</a>.<a class=\"id\" href=\"#is_deleted\">is_deleted</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#tomoyo_path_matches_pattern\">tomoyo_path_matches_pattern</a>(<a class=\"id\" href=\"#filename\">filename</a>, <a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#filename\">filename</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#found\">found</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tomoyo_write_globally_readable - Write \"struct tomoyo_readable_file\" list.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @data:      String to parse.</span>", 
"<span class=\"comment\"> * @is_delete: True if it is a delete request.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 on success, negative value otherwise.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Caller holds tomoyo_read_lock().</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#tomoyo_write_globally_readable\">tomoyo_write_globally_readable</a>(char *<a class=\"id\" href=\"#data\">data</a>, const <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#is_delete\">is_delete</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tomoyo_update_globally_readable_entry\">tomoyo_update_globally_readable_entry</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#is_delete\">is_delete</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#tomoyo_same_pattern\">tomoyo_same_pattern</a>(const struct <a class=\"id\" href=\"#tomoyo_acl_head\">tomoyo_acl_head</a> *<a class=\"id\" href=\"#a\">a</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#tomoyo_acl_head\">tomoyo_acl_head</a> *<a class=\"id\" href=\"#b\">b</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#a\">a</a>, struct <a class=\"id\" href=\"#tomoyo_no_pattern\">tomoyo_no_pattern</a>, <a class=\"id\" href=\"#head\">head</a>)-><a class=\"id\" href=\"#pattern\">pattern</a> ==", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#b\">b</a>, struct <a class=\"id\" href=\"#tomoyo_no_pattern\">tomoyo_no_pattern</a>, <a class=\"id\" href=\"#head\">head</a>)-><a class=\"id\" href=\"#pattern\">pattern</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tomoyo_update_file_pattern_entry - Update \"struct tomoyo_no_pattern\" list.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @pattern:   Pathname pattern.</span>", 
"<span class=\"comment\"> * @is_delete: True if it is a delete request.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 on success, negative value otherwise.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Caller holds tomoyo_read_lock().</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#tomoyo_update_file_pattern_entry\">tomoyo_update_file_pattern_entry</a>(const char *<a class=\"id\" href=\"#pattern\">pattern</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#is_delete\">is_delete</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tomoyo_no_pattern\">tomoyo_no_pattern</a> <a class=\"id\" href=\"#e\">e</a> = { };", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tomoyo_correct_word\">tomoyo_correct_word</a>(<a class=\"id\" href=\"#pattern\">pattern</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#pattern\">pattern</a> = <a class=\"id\" href=\"#tomoyo_get_name\">tomoyo_get_name</a>(<a class=\"id\" href=\"#pattern\">pattern</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#pattern\">pattern</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#tomoyo_update_policy\">tomoyo_update_policy</a>(&amp;<a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#head\">head</a>, sizeof(<a class=\"id\" href=\"#e\">e</a>), <a class=\"id\" href=\"#is_delete\">is_delete</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     &amp;<a class=\"id\" href=\"#tomoyo_policy_list\">tomoyo_policy_list</a>[<a class=\"id\" href=\"#TOMOYO_ID_PATTERN\">TOMOYO_ID_PATTERN</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#tomoyo_same_pattern\">tomoyo_same_pattern</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_put_name\">tomoyo_put_name</a>(<a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#pattern\">pattern</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tomoyo_pattern - Get patterned pathname.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @filename: The filename to find patterned pathname.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns pointer to pathname pattern if matched, @filename otherwise.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Caller holds tomoyo_read_lock().</span>", 
"<span class=\"comment\"> */</span>", 
"const char *<a class=\"id\" href=\"#tomoyo_pattern\">tomoyo_pattern</a>(const struct <a class=\"id\" href=\"#tomoyo_path_info\">tomoyo_path_info</a> *<a class=\"id\" href=\"#filename\">filename</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tomoyo_no_pattern\">tomoyo_no_pattern</a> *<a class=\"id\" href=\"#ptr\">ptr</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#tomoyo_path_info\">tomoyo_path_info</a> *<a class=\"id\" href=\"#pattern\">pattern</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_rcu\">list_for_each_entry_rcu</a>(<a class=\"id\" href=\"#ptr\">ptr</a>, &amp;<a class=\"id\" href=\"#tomoyo_policy_list\">tomoyo_policy_list</a>[<a class=\"id\" href=\"#TOMOYO_ID_PATTERN\">TOMOYO_ID_PATTERN</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a>.<a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#head\">head</a>.<a class=\"id\" href=\"#is_deleted\">is_deleted</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tomoyo_path_matches_pattern\">tomoyo_path_matches_pattern</a>(<a class=\"id\" href=\"#filename\">filename</a>, <a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#pattern\">pattern</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pattern\">pattern</a> = <a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#pattern\">pattern</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tomoyo_strendswith\">tomoyo_strendswith</a>(<a class=\"id\" href=\"#pattern\">pattern</a>-><a class=\"id\" href=\"#name\">name</a>, \"/\\\\*\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Do nothing. Try to find the better match. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* This would be the better match. Use this. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pattern\">pattern</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filename\">filename</a> = <a class=\"id\" href=\"#pattern\">pattern</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#filename\">filename</a>-><a class=\"id\" href=\"#name\">name</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tomoyo_write_pattern - Write \"struct tomoyo_no_pattern\" list.</span>", 
"<span class=\"comment\"> *</span>", 
];
xr_frag_insert('l/70/723397250438fba37cc94c12766818d5f051f5.xr', __xr_tmp);
