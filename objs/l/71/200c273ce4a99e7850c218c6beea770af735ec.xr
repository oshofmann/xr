var __xr_tmp = [
"<span class=\"ts\"/><a class=\"id\" href=\"#test_thread_flag\">test_thread_flag</a>(<a class=\"id\" href=\"#TIF_IA32\">TIF_IA32</a>) ? <a class=\"id\" href=\"#__NR_ia32_restart_syscall\">__NR_ia32_restart_syscall</a> : <a class=\"id\" href=\"#__NR_restart_syscall\">__NR_restart_syscall</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_X86_32 */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Note that 'init' is a special process: it doesn't get signals it doesn't</span>", 
"<span class=\"comment\"> * want to handle. Thus you cannot kill init even with a SIGKILL even by</span>", 
"<span class=\"comment\"> * mistake.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#do_signal\">do_signal</a>(struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#k_sigaction\">k_sigaction</a> <a class=\"id\" href=\"#ka\">ka</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#siginfo_t\">siginfo_t</a> <a class=\"id\" href=\"#info\">info</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#signr\">signr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sigset_t\">sigset_t</a> *<a class=\"id\" href=\"#oldset\">oldset</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We want the common case to go fast, which is why we may in certain</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * cases get here from kernel mode. Just return without doing anything</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * if so.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * X86_32: vm86 regs switched out by assembly code before reaching</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * here, so testing against kernel CS suffices.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#user_mode\">user_mode</a>(<a class=\"id\" href=\"#regs\">regs</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#current_thread_info\">current_thread_info</a>()-><a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#TS_RESTORE_SIGMASK\">TS_RESTORE_SIGMASK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#oldset\">oldset</a> = &amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#saved_sigmask\">saved_sigmask</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#oldset\">oldset</a> = &amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#blocked\">blocked</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#signr\">signr</a> = <a class=\"id\" href=\"#get_signal_to_deliver\">get_signal_to_deliver</a>(&amp;<a class=\"id\" href=\"#info\">info</a>, &amp;<a class=\"id\" href=\"#ka\">ka</a>, <a class=\"id\" href=\"#regs\">regs</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#signr\">signr</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Whee! Actually deliver the signal.  */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#handle_signal\">handle_signal</a>(<a class=\"id\" href=\"#signr\">signr</a>, &amp;<a class=\"id\" href=\"#info\">info</a>, &amp;<a class=\"id\" href=\"#ka\">ka</a>, <a class=\"id\" href=\"#oldset\">oldset</a>, <a class=\"id\" href=\"#regs\">regs</a>) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * A signal was successfully delivered; the saved</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * sigmask will have been stored in the signal frame,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * and will be restored by sigreturn, so we can simply</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * clear the TS_RESTORE_SIGMASK flag.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#current_thread_info\">current_thread_info</a>()-><a class=\"id\" href=\"#status\">status</a> &= ~<a class=\"id\" href=\"#TS_RESTORE_SIGMASK\">TS_RESTORE_SIGMASK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Did we come from a system call? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#syscall_get_nr\">syscall_get_nr</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#regs\">regs</a>) >= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Restart the system call - no handlers present */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#syscall_get_error\">syscall_get_error</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#regs\">regs</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case -<a class=\"id\" href=\"#ERESTARTNOHAND\">ERESTARTNOHAND</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case -<a class=\"id\" href=\"#ERESTARTSYS\">ERESTARTSYS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case -<a class=\"id\" href=\"#ERESTARTNOINTR\">ERESTARTNOINTR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#ax\">ax</a> = <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#orig_ax\">orig_ax</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#ip\">ip</a> -= 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case -<a class=\"id\" href=\"#ERESTART_RESTARTBLOCK\">ERESTART_RESTARTBLOCK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#ax\">ax</a> = <a class=\"id\" href=\"#NR_restart_syscall\">NR_restart_syscall</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#ip\">ip</a> -= 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If there's no signal to deliver, we just put the saved sigmask</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * back.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#current_thread_info\">current_thread_info</a>()-><a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#TS_RESTORE_SIGMASK\">TS_RESTORE_SIGMASK</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#current_thread_info\">current_thread_info</a>()-><a class=\"id\" href=\"#status\">status</a> &= ~<a class=\"id\" href=\"#TS_RESTORE_SIGMASK\">TS_RESTORE_SIGMASK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sigprocmask\">sigprocmask</a>(<a class=\"id\" href=\"#SIG_SETMASK\">SIG_SETMASK</a>, &amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#saved_sigmask\">saved_sigmask</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * notification of userspace execution resumption</span>", 
"<span class=\"comment\"> * - triggered by the TIF_WORK_MASK flags</span>", 
"<span class=\"comment\"> */</span>", 
"void", 
"<a class=\"id\" href=\"#do_notify_resume\">do_notify_resume</a>(struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>, void *<a class=\"id\" href=\"#unused\">unused</a>, <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#thread_info_flags\">thread_info_flags</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_MCE\">CONFIG_X86_MCE</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* notify userspace of pending MCEs */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#thread_info_flags\">thread_info_flags</a> &amp; <a class=\"id\" href=\"#_TIF_MCE_NOTIFY\">_TIF_MCE_NOTIFY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mce_notify_process\">mce_notify_process</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_X86_64 &amp;&amp; CONFIG_X86_MCE */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* deal with pending signal delivery */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#thread_info_flags\">thread_info_flags</a> &amp; <a class=\"id\" href=\"#_TIF_SIGPENDING\">_TIF_SIGPENDING</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_signal\">do_signal</a>(<a class=\"id\" href=\"#regs\">regs</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#thread_info_flags\">thread_info_flags</a> &amp; <a class=\"id\" href=\"#_TIF_NOTIFY_RESUME\">_TIF_NOTIFY_RESUME</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_thread_flag\">clear_thread_flag</a>(<a class=\"id\" href=\"#TIF_NOTIFY_RESUME\">TIF_NOTIFY_RESUME</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tracehook_notify_resume\">tracehook_notify_resume</a>(<a class=\"id\" href=\"#regs\">regs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#replacement_session_keyring\">replacement_session_keyring</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key_replace_session_keyring\">key_replace_session_keyring</a>();", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#thread_info_flags\">thread_info_flags</a> &amp; <a class=\"id\" href=\"#_TIF_USER_RETURN_NOTIFY\">_TIF_USER_RETURN_NOTIFY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fire_user_return_notifiers\">fire_user_return_notifiers</a>();", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_thread_flag\">clear_thread_flag</a>(<a class=\"id\" href=\"#TIF_IRET\">TIF_IRET</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_X86_32 */</span>", 
"}", 
"", 
"void <a class=\"id\" href=\"#signal_fault\">signal_fault</a>(struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>, void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#frame\">frame</a>, char *<a class=\"id\" href=\"#where\">where</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#me\">me</a> = <a class=\"id\" href=\"#current\">current</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#show_unhandled_signals\">show_unhandled_signals</a> && <a class=\"id\" href=\"#printk_ratelimit\">printk_ratelimit</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"%s\"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"%s[%d] bad frame in %s frame:%p ip:%lx sp:%lx orax:%lx\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#task_pid_nr\">task_pid_nr</a>(<a class=\"id\" href=\"#current\">current</a>) &gt; 1 ? <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> : <a class=\"id\" href=\"#KERN_EMERG\">KERN_EMERG</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#me\">me</a>-><a class=\"id\" href=\"#comm\">comm</a>, <a class=\"id\" href=\"#me\">me</a>-><a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#where\">where</a>, <a class=\"id\" href=\"#frame\">frame</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#ip\">ip</a>, <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#sp\">sp</a>, <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#orig_ax\">orig_ax</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#print_vma_addr\">print_vma_addr</a>(\" in \", <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CONT\">KERN_CONT</a> \"\\n\");", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#force_sig\">force_sig</a>(<a class=\"id\" href=\"#SIGSEGV\">SIGSEGV</a>, <a class=\"id\" href=\"#me\">me</a>);", 
"}", 
];
xr_frag_insert('l/71/200c273ce4a99e7850c218c6beea770af735ec.xr', __xr_tmp);
