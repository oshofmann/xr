var __xr_tmp = [
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#gpio_lock\">gpio_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#gpio_is_valid\">gpio_is_valid</a>(<a class=\"id\" href=\"#gpio\">gpio</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#chip\">chip</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip\">chip</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#chip\">chip</a> || !<a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#set\">set</a> || !<a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#set_debounce\">set_debounce</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gpio\">gpio</a> -= <a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#base\">base</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#gpio\">gpio</a> >= <a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#ngpio\">ngpio</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#gpio_ensure_requested\">gpio_ensure_requested</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#gpio\">gpio</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* now we know the gpio is valid and chip won't vanish */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#gpio_lock\">gpio_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#might_sleep_if\">might_sleep_if</a>(<a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#can_sleep\">can_sleep</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#set_debounce\">set_debounce</a>(<a class=\"id\" href=\"#chip\">chip</a>, <a class=\"id\" href=\"#gpio\">gpio</a>, <a class=\"id\" href=\"#debounce\">debounce</a>);", 
"", 
"<a class=\"id\" href=\"#fail\">fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#gpio_lock\">gpio_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"%s: gpio-%d status %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#gpio\">gpio</a>, <a class=\"id\" href=\"#status\">status</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#status\">status</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#gpio_set_debounce\">gpio_set_debounce</a>);", 
"", 
"<span class=\"comment\">/* I/O calls are only valid after configuration completed; the relevant</span>", 
"<span class=\"comment\"> * \"is this a valid GPIO\" error checks should already have been done.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * \"Get\" operations are often inlinable as reading a pin value register,</span>", 
"<span class=\"comment\"> * and masking the relevant bit in that register.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * When \"set\" operations are inlinable, they involve writing that mask to</span>", 
"<span class=\"comment\"> * one register to set a low value, or a different register to set it high.</span>", 
"<span class=\"comment\"> * Otherwise locking is needed, so there may be little value to inlining.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *------------------------------------------------------------------------</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * IMPORTANT!!!  The hot paths -- get/set value -- assume that callers</span>", 
"<span class=\"comment\"> * have requested the GPIO.  That can include implicit requesting by</span>", 
"<span class=\"comment\"> * a direction setting call.  Marking a gpio as requested locks its chip</span>", 
"<span class=\"comment\"> * in memory, guaranteeing that these table lookups need no more locking</span>", 
"<span class=\"comment\"> * and that gpiochip_remove() will fail.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * REVISIT when debugging, consider adding some instrumentation to ensure</span>", 
"<span class=\"comment\"> * that the GPIO was actually requested.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * __gpio_get_value() - return a gpio's value</span>", 
"<span class=\"comment\"> * @gpio: gpio whose value will be returned</span>", 
"<span class=\"comment\"> * Context: any</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is used directly or indirectly to implement gpio_get_value().</span>", 
"<span class=\"comment\"> * It returns the zero or nonzero value provided by the associated</span>", 
"<span class=\"comment\"> * gpio_chip.get() method; or zero if no such method is provided.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#__gpio_get_value\">__gpio_get_value</a>(unsigned <a class=\"id\" href=\"#gpio\">gpio</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#gpio_chip\">gpio_chip</a><span class=\"ts\"/>*<a class=\"id\" href=\"#chip\">chip</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#chip\">chip</a> = <a class=\"id\" href=\"#gpio_to_chip\">gpio_to_chip</a>(<a class=\"id\" href=\"#gpio\">gpio</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#can_sleep\">can_sleep</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#get\">get</a> ? <a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#get\">get</a>(<a class=\"id\" href=\"#chip\">chip</a>, <a class=\"id\" href=\"#gpio\">gpio</a> - <a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#base\">base</a>) : 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#__gpio_get_value\">__gpio_get_value</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * __gpio_set_value() - assign a gpio's value</span>", 
"<span class=\"comment\"> * @gpio: gpio whose value will be assigned</span>", 
"<span class=\"comment\"> * @value: value to assign</span>", 
"<span class=\"comment\"> * Context: any</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is used directly or indirectly to implement gpio_set_value().</span>", 
"<span class=\"comment\"> * It invokes the associated gpio_chip.set() method.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__gpio_set_value\">__gpio_set_value</a>(unsigned <a class=\"id\" href=\"#gpio\">gpio</a>, int <a class=\"id\" href=\"#value\">value</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#gpio_chip\">gpio_chip</a><span class=\"ts\"/>*<a class=\"id\" href=\"#chip\">chip</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#chip\">chip</a> = <a class=\"id\" href=\"#gpio_to_chip\">gpio_to_chip</a>(<a class=\"id\" href=\"#gpio\">gpio</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#can_sleep\">can_sleep</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#set\">set</a>(<a class=\"id\" href=\"#chip\">chip</a>, <a class=\"id\" href=\"#gpio\">gpio</a> - <a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#value\">value</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#__gpio_set_value\">__gpio_set_value</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * __gpio_cansleep() - report whether gpio value access will sleep</span>", 
"<span class=\"comment\"> * @gpio: gpio in question</span>", 
"<span class=\"comment\"> * Context: any</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is used directly or indirectly to implement gpio_cansleep().  It</span>", 
"<span class=\"comment\"> * returns nonzero if access reading or writing the GPIO value can sleep.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#__gpio_cansleep\">__gpio_cansleep</a>(unsigned <a class=\"id\" href=\"#gpio\">gpio</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#gpio_chip\">gpio_chip</a><span class=\"ts\"/>*<a class=\"id\" href=\"#chip\">chip</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* only call this on GPIOs that are valid! */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#chip\">chip</a> = <a class=\"id\" href=\"#gpio_to_chip\">gpio_to_chip</a>(<a class=\"id\" href=\"#gpio\">gpio</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#can_sleep\">can_sleep</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#__gpio_cansleep\">__gpio_cansleep</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * __gpio_to_irq() - return the IRQ corresponding to a GPIO</span>", 
"<span class=\"comment\"> * @gpio: gpio whose IRQ will be returned (already requested)</span>", 
"<span class=\"comment\"> * Context: any</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is used directly or indirectly to implement gpio_to_irq().</span>", 
"<span class=\"comment\"> * It returns the number of the IRQ signaled by this (input) GPIO,</span>", 
"<span class=\"comment\"> * or a negative errno.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#__gpio_to_irq\">__gpio_to_irq</a>(unsigned <a class=\"id\" href=\"#gpio\">gpio</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#gpio_chip\">gpio_chip</a><span class=\"ts\"/>*<a class=\"id\" href=\"#chip\">chip</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#chip\">chip</a> = <a class=\"id\" href=\"#gpio_to_chip\">gpio_to_chip</a>(<a class=\"id\" href=\"#gpio\">gpio</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#to_irq\">to_irq</a> ? <a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#to_irq\">to_irq</a>(<a class=\"id\" href=\"#chip\">chip</a>, <a class=\"id\" href=\"#gpio\">gpio</a> - <a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#base\">base</a>) : -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#__gpio_to_irq\">__gpio_to_irq</a>);", 
"", 
"", 
"", 
"<span class=\"comment\">/* There's no value in making it easy to inline GPIO calls that may sleep.</span>", 
"<span class=\"comment\"> * Common examples include ones connected to I2C or SPI chips.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#gpio_get_value_cansleep\">gpio_get_value_cansleep</a>(unsigned <a class=\"id\" href=\"#gpio\">gpio</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#gpio_chip\">gpio_chip</a><span class=\"ts\"/>*<a class=\"id\" href=\"#chip\">chip</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#might_sleep_if\">might_sleep_if</a>(<a class=\"id\" href=\"#extra_checks\">extra_checks</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#chip\">chip</a> = <a class=\"id\" href=\"#gpio_to_chip\">gpio_to_chip</a>(<a class=\"id\" href=\"#gpio\">gpio</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#get\">get</a> ? <a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#get\">get</a>(<a class=\"id\" href=\"#chip\">chip</a>, <a class=\"id\" href=\"#gpio\">gpio</a> - <a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#base\">base</a>) : 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#gpio_get_value_cansleep\">gpio_get_value_cansleep</a>);", 
"", 
"void <a class=\"id\" href=\"#gpio_set_value_cansleep\">gpio_set_value_cansleep</a>(unsigned <a class=\"id\" href=\"#gpio\">gpio</a>, int <a class=\"id\" href=\"#value\">value</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#gpio_chip\">gpio_chip</a><span class=\"ts\"/>*<a class=\"id\" href=\"#chip\">chip</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#might_sleep_if\">might_sleep_if</a>(<a class=\"id\" href=\"#extra_checks\">extra_checks</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#chip\">chip</a> = <a class=\"id\" href=\"#gpio_to_chip\">gpio_to_chip</a>(<a class=\"id\" href=\"#gpio\">gpio</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#set\">set</a>(<a class=\"id\" href=\"#chip\">chip</a>, <a class=\"id\" href=\"#gpio\">gpio</a> - <a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#value\">value</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#gpio_set_value_cansleep\">gpio_set_value_cansleep</a>);", 
"", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_DEBUG_FS\">CONFIG_DEBUG_FS</a>", 
"", 
"static void <a class=\"id\" href=\"#gpiolib_dbg_show\">gpiolib_dbg_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#s\">s</a>, struct <a class=\"id\" href=\"#gpio_chip\">gpio_chip</a> *<a class=\"id\" href=\"#chip\">chip</a>)", 
"{", 
"<span class=\"ts\"/>unsigned<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>unsigned<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gpio\">gpio</a> = <a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#base\">base</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#gpio_desc\">gpio_desc</a><span class=\"ts\"/>*<a class=\"id\" href=\"#gdesc\">gdesc</a> = &amp;<a class=\"id\" href=\"#gpio_desc\">gpio_desc</a>[<a class=\"id\" href=\"#gpio\">gpio</a>];", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#is_out\">is_out</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#ngpio\">ngpio</a>; <a class=\"id\" href=\"#i\">i</a>++, <a class=\"id\" href=\"#gpio\">gpio</a>++, <a class=\"id\" href=\"#gdesc\">gdesc</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#FLAG_REQUESTED\">FLAG_REQUESTED</a>, &amp;<a class=\"id\" href=\"#gdesc\">gdesc</a>-><a class=\"id\" href=\"#flags\">flags</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#is_out\">is_out</a> = <a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#FLAG_IS_OUT\">FLAG_IS_OUT</a>, &amp;<a class=\"id\" href=\"#gdesc\">gdesc</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \" gpio-%-3d (%-20.20s) %s %s\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gpio\">gpio</a>, <a class=\"id\" href=\"#gdesc\">gdesc</a>-><a class=\"id\" href=\"#label\">label</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#is_out\">is_out</a> ? \"out\" : \"in \",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#get\">get</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>? (<a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#get\">get</a>(<a class=\"id\" href=\"#chip\">chip</a>, <a class=\"id\" href=\"#i\">i</a>) ? \"hi\" : \"lo\")", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>: \"?  \");", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_out\">is_out</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#gpio_to_irq\">gpio_to_irq</a>(<a class=\"id\" href=\"#gpio\">gpio</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a><span class=\"ts\"/>*<a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#irq_to_desc\">irq_to_desc</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* This races with request_irq(), set_irq_type(),</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * and set_irq_wake() ... but those are \"rare\".</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * More significantly, trigger type flags aren't</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * currently maintained by genirq.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#irq\">irq</a> >= 0 && <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#action\">action</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#trigger\">trigger</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#IRQ_TYPE_SENSE_MASK\">IRQ_TYPE_SENSE_MASK</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#IRQ_TYPE_NONE\">IRQ_TYPE_NONE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trigger\">trigger</a> = \"(default)\";", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#IRQ_TYPE_EDGE_FALLING\">IRQ_TYPE_EDGE_FALLING</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trigger\">trigger</a> = \"edge-falling\";", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#IRQ_TYPE_EDGE_RISING\">IRQ_TYPE_EDGE_RISING</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trigger\">trigger</a> = \"edge-rising\";", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#IRQ_TYPE_EDGE_BOTH\">IRQ_TYPE_EDGE_BOTH</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trigger\">trigger</a> = \"edge-both\";", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#IRQ_TYPE_LEVEL_HIGH\">IRQ_TYPE_LEVEL_HIGH</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trigger\">trigger</a> = \"level-high\";", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#IRQ_TYPE_LEVEL_LOW\">IRQ_TYPE_LEVEL_LOW</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trigger\">trigger</a> = \"level-low\";", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trigger\">trigger</a> = \"?trigger?\";", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \" irq-%d %s%s\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#trigger\">trigger</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#IRQ_WAKEUP\">IRQ_WAKEUP</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>? \" wakeup\" : \"\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \"\\n\");", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#gpiolib_show\">gpiolib_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#s\">s</a>, void *<a class=\"id\" href=\"#unused\">unused</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#gpio_chip\">gpio_chip</a><span class=\"ts\"/>*<a class=\"id\" href=\"#chip\">chip</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>unsigned<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gpio\">gpio</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#started\">started</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* REVISIT this isn't locked against gpio_chip removal ... */</span>", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#gpio\">gpio</a> = 0; <a class=\"id\" href=\"#gpio_is_valid\">gpio_is_valid</a>(<a class=\"id\" href=\"#gpio\">gpio</a>); <a class=\"id\" href=\"#gpio\">gpio</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#chip\">chip</a> == <a class=\"id\" href=\"#gpio_desc\">gpio_desc</a>[<a class=\"id\" href=\"#gpio\">gpio</a>].<a class=\"id\" href=\"#chip\">chip</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#chip\">chip</a> = <a class=\"id\" href=\"#gpio_desc\">gpio_desc</a>[<a class=\"id\" href=\"#gpio\">gpio</a>].<a class=\"id\" href=\"#chip\">chip</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#chip\">chip</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \"%sGPIOs %d-%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#started\">started</a> ? \"\\n\" : \"\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#base\">base</a> + <a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#ngpio\">ngpio</a> - 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \", %s/%s\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a> ? <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#name\">name</a> : \"no-bus\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_name\">dev_name</a>(<a class=\"id\" href=\"#dev\">dev</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#label\">label</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \", %s\", <a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#label\">label</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#can_sleep\">can_sleep</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \", can sleep\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \":\\n\");", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#started\">started</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#dbg_show\">dbg_show</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#dbg_show\">dbg_show</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#chip\">chip</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gpiolib_dbg_show\">gpiolib_dbg_show</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#chip\">chip</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#gpiolib_open\">gpiolib_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#single_open\">single_open</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#gpiolib_show\">gpiolib_show</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#gpiolib_operations\">gpiolib_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#gpiolib_open\">gpiolib_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#single_release\">single_release</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#gpiolib_debugfs_init\">gpiolib_debugfs_init</a>(void)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* /sys/kernel/debug/gpio */</span>", 
"<span class=\"ts\"/>(void) <a class=\"id\" href=\"#debugfs_create_file\">debugfs_create_file</a>(\"gpio\", <a class=\"id\" href=\"#S_IFREG\">S_IFREG</a> | <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#gpiolib_operations\">gpiolib_operations</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#subsys_initcall\">subsys_initcall</a>(<a class=\"id\" href=\"#gpiolib_debugfs_init\">gpiolib_debugfs_init</a>);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* DEBUG_FS */</span>", 
];
xr_frag_insert('l/71/f7ffabcc81156ba629e6559075eebd723e476b.xr', __xr_tmp);
