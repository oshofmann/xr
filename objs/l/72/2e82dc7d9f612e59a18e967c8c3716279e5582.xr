var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_STOP_MACHINE\">_LINUX_STOP_MACHINE</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_STOP_MACHINE\">_LINUX_STOP_MACHINE</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cpu\">cpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cpumask\">cpumask</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#system\">system</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * stop_cpu[s]() is simplistic per-cpu maximum priority cpu</span>", 
"<span class=\"comment\"> * monopolization mechanism.  The caller can specify a non-sleeping</span>", 
"<span class=\"comment\"> * function to be executed on a single or multiple cpus preempting all</span>", 
"<span class=\"comment\"> * other processes and monopolizing those cpus until it finishes.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Resources for this mechanism are preallocated when a cpu is brought</span>", 
"<span class=\"comment\"> * up and requests are guaranteed to be served as long as the target</span>", 
"<span class=\"comment\"> * cpus are online.</span>", 
"<span class=\"comment\"> */</span>", 
"typedef int (*<a class=\"id\" href=\"#cpu_stop_fn_t\">cpu_stop_fn_t</a>)(void *<a class=\"id\" href=\"#arg\">arg</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"", 
"struct <a class=\"id\" href=\"#cpu_stop_work\">cpu_stop_work</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#list\">list</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* cpu_stopper-&gt;works */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpu_stop_fn_t\">cpu_stop_fn_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a>;", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#arg\">arg</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpu_stop_done\">cpu_stop_done</a><span class=\"ts\"/>*<a class=\"id\" href=\"#done\">done</a>;", 
"};", 
"", 
"int <a class=\"id\" href=\"#stop_one_cpu\">stop_one_cpu</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#cpu_stop_fn_t\">cpu_stop_fn_t</a> <a class=\"id\" href=\"#fn\">fn</a>, void *<a class=\"id\" href=\"#arg\">arg</a>);", 
"void <a class=\"id\" href=\"#stop_one_cpu_nowait\">stop_one_cpu_nowait</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#cpu_stop_fn_t\">cpu_stop_fn_t</a> <a class=\"id\" href=\"#fn\">fn</a>, void *<a class=\"id\" href=\"#arg\">arg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#cpu_stop_work\">cpu_stop_work</a> *<a class=\"id\" href=\"#work_buf\">work_buf</a>);", 
"int <a class=\"id\" href=\"#stop_cpus\">stop_cpus</a>(const struct <a class=\"id\" href=\"#cpumask\">cpumask</a> *<a class=\"id\" href=\"#cpumask\">cpumask</a>, <a class=\"id\" href=\"#cpu_stop_fn_t\">cpu_stop_fn_t</a> <a class=\"id\" href=\"#fn\">fn</a>, void *<a class=\"id\" href=\"#arg\">arg</a>);", 
"int <a class=\"id\" href=\"#try_stop_cpus\">try_stop_cpus</a>(const struct <a class=\"id\" href=\"#cpumask\">cpumask</a> *<a class=\"id\" href=\"#cpumask\">cpumask</a>, <a class=\"id\" href=\"#cpu_stop_fn_t\">cpu_stop_fn_t</a> <a class=\"id\" href=\"#fn\">fn</a>, void *<a class=\"id\" href=\"#arg\">arg</a>);", 
"", 
"#else<span class=\"ts\"/><span class=\"comment\">/* CONFIG_SMP */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#workqueue\">workqueue</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#cpu_stop_work\">cpu_stop_work</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#work_struct\">work_struct</a><span class=\"ts\"/><a class=\"id\" href=\"#work\">work</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpu_stop_fn_t\">cpu_stop_fn_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a>;", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#arg\">arg</a>;", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#stop_one_cpu\">stop_one_cpu</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#cpu_stop_fn_t\">cpu_stop_fn_t</a> <a class=\"id\" href=\"#fn\">fn</a>, void *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#preempt_disable\">preempt_disable</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu\">cpu</a> == <a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>())", 
];
xr_frag_insert('l/72/2e82dc7d9f612e59a18e967c8c3716279e5582.xr', __xr_tmp);
