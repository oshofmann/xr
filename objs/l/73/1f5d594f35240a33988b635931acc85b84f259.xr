var __xr_tmp = [
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#clocksource\">clocksource</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#clockchips\">clockchips</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sysdev\">sysdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#hpet\">hpet</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cpu\">cpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pm\">pm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#io\">io</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#fixmap\">fixmap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#i8253\">i8253</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#hpet\">hpet</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HPET_MASK\">HPET_MASK</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#CLOCKSOURCE_MASK\">CLOCKSOURCE_MASK</a>(32)", 
"", 
"<span class=\"comment\">/* FSEC = 10^-15</span>", 
"<span class=\"comment\">   NSEC = 10^-9 */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FSEC_PER_NSEC\">FSEC_PER_NSEC</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>1000000L", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HPET_DEV_USED_BIT\">HPET_DEV_USED_BIT</a><span class=\"ts\"/><span class=\"ts\"/>2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HPET_DEV_USED\">HPET_DEV_USED</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#HPET_DEV_USED_BIT\">HPET_DEV_USED_BIT</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HPET_DEV_VALID\">HPET_DEV_VALID</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0x8", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HPET_DEV_FSB_CAP\">HPET_DEV_FSB_CAP</a><span class=\"ts\"/><span class=\"ts\"/>0x1000", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HPET_DEV_PERI_CAP\">HPET_DEV_PERI_CAP</a><span class=\"ts\"/><span class=\"ts\"/>0x2000", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EVT_TO_HPET_DEV\">EVT_TO_HPET_DEV</a>(<a class=\"id\" href=\"#evt\">evt</a>) <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#evt\">evt</a>, struct <a class=\"id\" href=\"#hpet_dev\">hpet_dev</a>, <a class=\"id\" href=\"#evt\">evt</a>)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * HPET address is set in acpi/boot.c, when an ACPI entry exists</span>", 
"<span class=\"comment\"> */</span>", 
"unsigned long<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_address\">hpet_address</a>;", 
"<a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_blockid\">hpet_blockid</a>; <span class=\"comment\">/* OS timer block num */</span>", 
"<a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_msi_disable\">hpet_msi_disable</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PCI_MSI\">CONFIG_PCI_MSI</a>", 
"static unsigned long<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_num_timers\">hpet_num_timers</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"static void <a class=\"id\" href=\"#__iomem\">__iomem</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#hpet_virt_address\">hpet_virt_address</a>;", 
"", 
"struct <a class=\"id\" href=\"#hpet_dev\">hpet_dev</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a><span class=\"ts\"/><a class=\"id\" href=\"#evt\">evt</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num\">num</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu\">cpu</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a>[10];", 
"};", 
"", 
"<a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(unsigned int <a class=\"id\" href=\"#a\">a</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#readl\">readl</a>(<a class=\"id\" href=\"#hpet_virt_address\">hpet_virt_address</a> + <a class=\"id\" href=\"#a\">a</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#hpet_writel\">hpet_writel</a>(unsigned int <a class=\"id\" href=\"#d\">d</a>, unsigned int <a class=\"id\" href=\"#a\">a</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#writel\">writel</a>(<a class=\"id\" href=\"#d\">d</a>, <a class=\"id\" href=\"#hpet_virt_address\">hpet_virt_address</a> + <a class=\"id\" href=\"#a\">a</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#pgtable\">pgtable</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#hpet_set_mapping\">hpet_set_mapping</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_virt_address\">hpet_virt_address</a> = <a class=\"id\" href=\"#ioremap_nocache\">ioremap_nocache</a>(<a class=\"id\" href=\"#hpet_address\">hpet_address</a>, <a class=\"id\" href=\"#HPET_MMAP_SIZE\">HPET_MMAP_SIZE</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__set_fixmap\">__set_fixmap</a>(<a class=\"id\" href=\"#VSYSCALL_HPET\">VSYSCALL_HPET</a>, <a class=\"id\" href=\"#hpet_address\">hpet_address</a>, <a class=\"id\" href=\"#PAGE_KERNEL_VSYSCALL_NOCACHE\">PAGE_KERNEL_VSYSCALL_NOCACHE</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#hpet_clear_mapping\">hpet_clear_mapping</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iounmap\">iounmap</a>(<a class=\"id\" href=\"#hpet_virt_address\">hpet_virt_address</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_virt_address\">hpet_virt_address</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * HPET command line enable / disable</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#boot_hpet_disable\">boot_hpet_disable</a>;", 
"int <a class=\"id\" href=\"#hpet_force_user\">hpet_force_user</a>;", 
"static int <a class=\"id\" href=\"#hpet_verbose\">hpet_verbose</a>;", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#hpet_setup\">hpet_setup</a>(char *<a class=\"id\" href=\"#str\">str</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#str\">str</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#strncmp\">strncmp</a>(\"disable\", <a class=\"id\" href=\"#str\">str</a>, 7))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#boot_hpet_disable\">boot_hpet_disable</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#strncmp\">strncmp</a>(\"force\", <a class=\"id\" href=\"#str\">str</a>, 5))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_force_user\">hpet_force_user</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#strncmp\">strncmp</a>(\"verbose\", <a class=\"id\" href=\"#str\">str</a>, 7))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_verbose\">hpet_verbose</a> = 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 1;", 
"}", 
"<a class=\"id\" href=\"#__setup\">__setup</a>(\"hpet=\", <a class=\"id\" href=\"#hpet_setup\">hpet_setup</a>);", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#disable_hpet\">disable_hpet</a>(char *<a class=\"id\" href=\"#str\">str</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#boot_hpet_disable\">boot_hpet_disable</a> = 1;", 
"<span class=\"ts\"/>return 1;", 
"}", 
"<a class=\"id\" href=\"#__setup\">__setup</a>(\"nohpet\", <a class=\"id\" href=\"#disable_hpet\">disable_hpet</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#is_hpet_capable\">is_hpet_capable</a>(void)", 
"{", 
"<span class=\"ts\"/>return !<a class=\"id\" href=\"#boot_hpet_disable\">boot_hpet_disable</a> && <a class=\"id\" href=\"#hpet_address\">hpet_address</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * HPET timer interrupt enable / disable</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#hpet_legacy_int_enabled\">hpet_legacy_int_enabled</a>;", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * is_hpet_enabled - check whether the hpet timer interrupt is enabled</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#is_hpet_enabled\">is_hpet_enabled</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#is_hpet_capable\">is_hpet_capable</a>() && <a class=\"id\" href=\"#hpet_legacy_int_enabled\">hpet_legacy_int_enabled</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#is_hpet_enabled\">is_hpet_enabled</a>);", 
"", 
"static void <a class=\"id\" href=\"#_hpet_print_config\">_hpet_print_config</a>(const char *<a class=\"id\" href=\"#function\">function</a>, int <a class=\"id\" href=\"#line\">line</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#timers\">timers</a>, <a class=\"id\" href=\"#l\">l</a>, <a class=\"id\" href=\"#h\">h</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"hpet: %s(%d):\\n\", <a class=\"id\" href=\"#function\">function</a>, <a class=\"id\" href=\"#line\">line</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_ID\">HPET_ID</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a> = <a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_PERIOD\">HPET_PERIOD</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timers\">timers</a> = ((<a class=\"id\" href=\"#l\">l</a> &amp; <a class=\"id\" href=\"#HPET_ID_NUMBER\">HPET_ID_NUMBER</a>) >> <a class=\"id\" href=\"#HPET_ID_NUMBER_SHIFT\">HPET_ID_NUMBER_SHIFT</a>) + 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"hpet: ID: 0x%x, PERIOD: 0x%x\\n\", <a class=\"id\" href=\"#l\">l</a>, <a class=\"id\" href=\"#h\">h</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_CFG\">HPET_CFG</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a> = <a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_STATUS\">HPET_STATUS</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"hpet: CFG: 0x%x, STATUS: 0x%x\\n\", <a class=\"id\" href=\"#l\">l</a>, <a class=\"id\" href=\"#h\">h</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_COUNTER\">HPET_COUNTER</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a> = <a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_COUNTER\">HPET_COUNTER</a>+4);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"hpet: COUNTER_l: 0x%x, COUNTER_h: 0x%x\\n\", <a class=\"id\" href=\"#l\">l</a>, <a class=\"id\" href=\"#h\">h</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#timers\">timers</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_Tn_CFG\">HPET_Tn_CFG</a>(<a class=\"id\" href=\"#i\">i</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a> = <a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_Tn_CFG\">HPET_Tn_CFG</a>(<a class=\"id\" href=\"#i\">i</a>)+4);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"hpet: T%d: CFG_l: 0x%x, CFG_h: 0x%x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#l\">l</a>, <a class=\"id\" href=\"#h\">h</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_Tn_CMP\">HPET_Tn_CMP</a>(<a class=\"id\" href=\"#i\">i</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a> = <a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_Tn_CMP\">HPET_Tn_CMP</a>(<a class=\"id\" href=\"#i\">i</a>)+4);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"hpet: T%d: CMP_l: 0x%x, CMP_h: 0x%x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#l\">l</a>, <a class=\"id\" href=\"#h\">h</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_Tn_ROUTE\">HPET_Tn_ROUTE</a>(<a class=\"id\" href=\"#i\">i</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a> = <a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_Tn_ROUTE\">HPET_Tn_ROUTE</a>(<a class=\"id\" href=\"#i\">i</a>)+4);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"hpet: T%d ROUTE_l: 0x%x, ROUTE_h: 0x%x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#l\">l</a>, <a class=\"id\" href=\"#h\">h</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#hpet_print_config\">hpet_print_config</a>()<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hpet_verbose\">hpet_verbose</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#_hpet_print_config\">_hpet_print_config</a>(<a class=\"id\" href=\"#__FUNCTION__\">__FUNCTION__</a>, <a class=\"id\" href=\"#__LINE__\">__LINE__</a>);<span class=\"ts\"/>\\", 
"} while (0)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * When the hpet driver (/dev/hpet) is enabled, we need to reserve</span>", 
"<span class=\"comment\"> * timer 0 and timer 1 in case of RTC emulation.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HPET\">CONFIG_HPET</a>", 
"", 
"static void <a class=\"id\" href=\"#hpet_reserve_msi_timers\">hpet_reserve_msi_timers</a>(struct <a class=\"id\" href=\"#hpet_data\">hpet_data</a> *<a class=\"id\" href=\"#hd\">hd</a>);", 
"", 
"static void <a class=\"id\" href=\"#hpet_reserve_platform_timers\">hpet_reserve_platform_timers</a>(unsigned int <a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hpet\">hpet</a> <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#hpet\">hpet</a> = <a class=\"id\" href=\"#hpet_virt_address\">hpet_virt_address</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hpet_timer\">hpet_timer</a> <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#timer\">timer</a> = &amp;<a class=\"id\" href=\"#hpet\">hpet</a>-><a class=\"id\" href=\"#hpet_timers\">hpet_timers</a>[2];", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#nrtimers\">nrtimers</a>, <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hpet_data\">hpet_data</a> <a class=\"id\" href=\"#hd\">hd</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nrtimers\">nrtimers</a> = ((<a class=\"id\" href=\"#id\">id</a> &amp; <a class=\"id\" href=\"#HPET_ID_NUMBER\">HPET_ID_NUMBER</a>) >> <a class=\"id\" href=\"#HPET_ID_NUMBER_SHIFT\">HPET_ID_NUMBER_SHIFT</a>) + 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#hd\">hd</a>, 0, sizeof(<a class=\"id\" href=\"#hd\">hd</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hd\">hd</a>.<a class=\"id\" href=\"#hd_phys_address\">hd_phys_address</a><span class=\"ts\"/>= <a class=\"id\" href=\"#hpet_address\">hpet_address</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hd\">hd</a>.<a class=\"id\" href=\"#hd_address\">hd_address</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#hpet\">hpet</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hd\">hd</a>.<a class=\"id\" href=\"#hd_nirqs\">hd_nirqs</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#nrtimers\">nrtimers</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_reserve_timer\">hpet_reserve_timer</a>(&amp;<a class=\"id\" href=\"#hd\">hd</a>, 0);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HPET_EMULATE_RTC\">CONFIG_HPET_EMULATE_RTC</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_reserve_timer\">hpet_reserve_timer</a>(&amp;<a class=\"id\" href=\"#hd\">hd</a>, 1);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * NOTE that hd_irq[] reflects IOAPIC input pins (LEGACY_8254</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * is wrong for i8259!) not the output IRQ.  Many BIOS writers</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * don't bother configuring *any* comparator interrupts.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hd\">hd</a>.<a class=\"id\" href=\"#hd_irq\">hd_irq</a>[0] = <a class=\"id\" href=\"#HPET_LEGACY_8254\">HPET_LEGACY_8254</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hd\">hd</a>.<a class=\"id\" href=\"#hd_irq\">hd_irq</a>[1] = <a class=\"id\" href=\"#HPET_LEGACY_RTC\">HPET_LEGACY_RTC</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 2; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nrtimers\">nrtimers</a>; <a class=\"id\" href=\"#timer\">timer</a>++, <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hd\">hd</a>.<a class=\"id\" href=\"#hd_irq\">hd_irq</a>[<a class=\"id\" href=\"#i\">i</a>] = (<a class=\"id\" href=\"#readl\">readl</a>(&amp;<a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#hpet_config\">hpet_config</a>) &amp;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#Tn_INT_ROUTE_CNF_MASK\">Tn_INT_ROUTE_CNF_MASK</a>) >> <a class=\"id\" href=\"#Tn_INT_ROUTE_CNF_SHIFT\">Tn_INT_ROUTE_CNF_SHIFT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_reserve_msi_timers\">hpet_reserve_msi_timers</a>(&amp;<a class=\"id\" href=\"#hd\">hd</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_alloc\">hpet_alloc</a>(&amp;<a class=\"id\" href=\"#hd\">hd</a>);", 
"", 
"}", 
"#else", 
"static void <a class=\"id\" href=\"#hpet_reserve_platform_timers\">hpet_reserve_platform_timers</a>(unsigned int <a class=\"id\" href=\"#id\">id</a>) { }", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Common hpet info</span>", 
"<span class=\"comment\"> */</span>", 
"static unsigned long <a class=\"id\" href=\"#hpet_period\">hpet_period</a>;", 
"", 
"static void <a class=\"id\" href=\"#hpet_legacy_set_mode\">hpet_legacy_set_mode</a>(enum <a class=\"id\" href=\"#clock_event_mode\">clock_event_mode</a> <a class=\"id\" href=\"#mode\">mode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *<a class=\"id\" href=\"#evt\">evt</a>);", 
"static int <a class=\"id\" href=\"#hpet_legacy_next_event\">hpet_legacy_next_event</a>(unsigned long <a class=\"id\" href=\"#delta\">delta</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *<a class=\"id\" href=\"#evt\">evt</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The hpet clock event device</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> <a class=\"id\" href=\"#hpet_clockevent\">hpet_clockevent</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= \"hpet\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#features\">features</a><span class=\"ts\"/>= <a class=\"id\" href=\"#CLOCK_EVT_FEAT_PERIODIC\">CLOCK_EVT_FEAT_PERIODIC</a> | <a class=\"id\" href=\"#CLOCK_EVT_FEAT_ONESHOT\">CLOCK_EVT_FEAT_ONESHOT</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_mode\">set_mode</a><span class=\"ts\"/>= <a class=\"id\" href=\"#hpet_legacy_set_mode\">hpet_legacy_set_mode</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_next_event\">set_next_event</a> = <a class=\"id\" href=\"#hpet_legacy_next_event\">hpet_legacy_next_event</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#shift\">shift</a><span class=\"ts\"/><span class=\"ts\"/>= 32,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#irq\">irq</a><span class=\"ts\"/><span class=\"ts\"/>= 0,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#rating\">rating</a><span class=\"ts\"/><span class=\"ts\"/>= 50,", 
"};", 
"", 
"static void <a class=\"id\" href=\"#hpet_stop_counter\">hpet_stop_counter</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_CFG\">HPET_CFG</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> &= ~<a class=\"id\" href=\"#HPET_CFG_ENABLE\">HPET_CFG_ENABLE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_writel\">hpet_writel</a>(<a class=\"id\" href=\"#cfg\">cfg</a>, <a class=\"id\" href=\"#HPET_CFG\">HPET_CFG</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#hpet_reset_counter\">hpet_reset_counter</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_writel\">hpet_writel</a>(0, <a class=\"id\" href=\"#HPET_COUNTER\">HPET_COUNTER</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_writel\">hpet_writel</a>(0, <a class=\"id\" href=\"#HPET_COUNTER\">HPET_COUNTER</a> + 4);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#hpet_start_counter\">hpet_start_counter</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_CFG\">HPET_CFG</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> |= <a class=\"id\" href=\"#HPET_CFG_ENABLE\">HPET_CFG_ENABLE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_writel\">hpet_writel</a>(<a class=\"id\" href=\"#cfg\">cfg</a>, <a class=\"id\" href=\"#HPET_CFG\">HPET_CFG</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#hpet_restart_counter\">hpet_restart_counter</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_stop_counter\">hpet_stop_counter</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_reset_counter\">hpet_reset_counter</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_start_counter\">hpet_start_counter</a>();", 
"}", 
"", 
"static void <a class=\"id\" href=\"#hpet_resume_device\">hpet_resume_device</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#force_hpet_resume\">force_hpet_resume</a>();", 
"}", 
"", 
"static void <a class=\"id\" href=\"#hpet_resume_counter\">hpet_resume_counter</a>(struct <a class=\"id\" href=\"#clocksource\">clocksource</a> *<a class=\"id\" href=\"#cs\">cs</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_resume_device\">hpet_resume_device</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_restart_counter\">hpet_restart_counter</a>();", 
"}", 
"", 
"static void <a class=\"id\" href=\"#hpet_enable_legacy_int\">hpet_enable_legacy_int</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_CFG\">HPET_CFG</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> |= <a class=\"id\" href=\"#HPET_CFG_LEGACY\">HPET_CFG_LEGACY</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_writel\">hpet_writel</a>(<a class=\"id\" href=\"#cfg\">cfg</a>, <a class=\"id\" href=\"#HPET_CFG\">HPET_CFG</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_legacy_int_enabled\">hpet_legacy_int_enabled</a> = 1;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#hpet_legacy_clockevent_register\">hpet_legacy_clockevent_register</a>(void)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Start HPET legacy interrupts */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_enable_legacy_int\">hpet_enable_legacy_int</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The mult factor is defined as (include/linux/clockchips.h)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  mult/2^shift = cyc/ns (in contrast to ns/cyc in clocksource.h)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * hpet_period is in units of femtoseconds (per cycle), so</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  mult/2^shift = cyc/ns = 10^6/hpet_period</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  mult = (10^6 * 2^shift)/hpet_period</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  mult = (FSEC_PER_NSEC &lt;&lt; hpet_clockevent.shift)/hpet_period</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_clockevent\">hpet_clockevent</a>.<a class=\"id\" href=\"#mult\">mult</a> = <a class=\"id\" href=\"#div_sc\">div_sc</a>((unsigned long) <a class=\"id\" href=\"#FSEC_PER_NSEC\">FSEC_PER_NSEC</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#hpet_period\">hpet_period</a>, <a class=\"id\" href=\"#hpet_clockevent\">hpet_clockevent</a>.<a class=\"id\" href=\"#shift\">shift</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Calculate the min / max delta */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_clockevent\">hpet_clockevent</a>.<a class=\"id\" href=\"#max_delta_ns\">max_delta_ns</a> = <a class=\"id\" href=\"#clockevent_delta2ns\">clockevent_delta2ns</a>(0x7FFFFFFF,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#hpet_clockevent\">hpet_clockevent</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* 5 usec minimum reprogramming delta. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_clockevent\">hpet_clockevent</a>.<a class=\"id\" href=\"#min_delta_ns\">min_delta_ns</a> = 5000;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Start hpet with the boot cpu mask and make it</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * global after the IO_APIC has been initialized.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_clockevent\">hpet_clockevent</a>.<a class=\"id\" href=\"#cpumask\">cpumask</a> = <a class=\"id\" href=\"#cpumask_of\">cpumask_of</a>(<a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>());", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clockevents_register_device\">clockevents_register_device</a>(&amp;<a class=\"id\" href=\"#hpet_clockevent\">hpet_clockevent</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#global_clock_event\">global_clock_event</a> = &amp;<a class=\"id\" href=\"#hpet_clockevent\">hpet_clockevent</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"hpet clockevent registered\\n\");", 
"}", 
"", 
"static int <a class=\"id\" href=\"#hpet_setup_msi_irq\">hpet_setup_msi_irq</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"static void <a class=\"id\" href=\"#hpet_set_mode\">hpet_set_mode</a>(enum <a class=\"id\" href=\"#clock_event_mode\">clock_event_mode</a> <a class=\"id\" href=\"#mode\">mode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *<a class=\"id\" href=\"#evt\">evt</a>, int <a class=\"id\" href=\"#timer\">timer</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cfg\">cfg</a>, <a class=\"id\" href=\"#cmp\">cmp</a>, <a class=\"id\" href=\"#now\">now</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uint64_t\">uint64_t</a> <a class=\"id\" href=\"#delta\">delta</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#mode\">mode</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CLOCK_EVT_MODE_PERIODIC\">CLOCK_EVT_MODE_PERIODIC</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_stop_counter\">hpet_stop_counter</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#delta\">delta</a> = ((<a class=\"id\" href=\"#uint64_t\">uint64_t</a>)(<a class=\"id\" href=\"#NSEC_PER_SEC\">NSEC_PER_SEC</a>/<a class=\"id\" href=\"#HZ\">HZ</a>)) * <a class=\"id\" href=\"#evt\">evt</a>-><a class=\"id\" href=\"#mult\">mult</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#delta\">delta</a> >>= <a class=\"id\" href=\"#evt\">evt</a>-><a class=\"id\" href=\"#shift\">shift</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#now\">now</a> = <a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_COUNTER\">HPET_COUNTER</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmp\">cmp</a> = <a class=\"id\" href=\"#now\">now</a> + (unsigned int) <a class=\"id\" href=\"#delta\">delta</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_Tn_CFG\">HPET_Tn_CFG</a>(<a class=\"id\" href=\"#timer\">timer</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Make sure we use edge triggered interrupts */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> &= ~<a class=\"id\" href=\"#HPET_TN_LEVEL\">HPET_TN_LEVEL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> |= <a class=\"id\" href=\"#HPET_TN_ENABLE\">HPET_TN_ENABLE</a> | <a class=\"id\" href=\"#HPET_TN_PERIODIC\">HPET_TN_PERIODIC</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#HPET_TN_SETVAL\">HPET_TN_SETVAL</a> | <a class=\"id\" href=\"#HPET_TN_32BIT\">HPET_TN_32BIT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_writel\">hpet_writel</a>(<a class=\"id\" href=\"#cfg\">cfg</a>, <a class=\"id\" href=\"#HPET_Tn_CFG\">HPET_Tn_CFG</a>(<a class=\"id\" href=\"#timer\">timer</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_writel\">hpet_writel</a>(<a class=\"id\" href=\"#cmp\">cmp</a>, <a class=\"id\" href=\"#HPET_Tn_CMP\">HPET_Tn_CMP</a>(<a class=\"id\" href=\"#timer\">timer</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#udelay\">udelay</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * HPET on AMD 81xx needs a second write (with HPET_TN_SETVAL</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * cleared) to T0_CMP to set the period. The HPET_TN_SETVAL</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * bit is automatically cleared after the first write.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * (See AMD-8111 HyperTransport I/O Hub Data Sheet,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Publication # 24674)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_writel\">hpet_writel</a>((unsigned int) <a class=\"id\" href=\"#delta\">delta</a>, <a class=\"id\" href=\"#HPET_Tn_CMP\">HPET_Tn_CMP</a>(<a class=\"id\" href=\"#timer\">timer</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_start_counter\">hpet_start_counter</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_print_config\">hpet_print_config</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CLOCK_EVT_MODE_ONESHOT\">CLOCK_EVT_MODE_ONESHOT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_Tn_CFG\">HPET_Tn_CFG</a>(<a class=\"id\" href=\"#timer\">timer</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> &= ~<a class=\"id\" href=\"#HPET_TN_PERIODIC\">HPET_TN_PERIODIC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> |= <a class=\"id\" href=\"#HPET_TN_ENABLE\">HPET_TN_ENABLE</a> | <a class=\"id\" href=\"#HPET_TN_32BIT\">HPET_TN_32BIT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_writel\">hpet_writel</a>(<a class=\"id\" href=\"#cfg\">cfg</a>, <a class=\"id\" href=\"#HPET_Tn_CFG\">HPET_Tn_CFG</a>(<a class=\"id\" href=\"#timer\">timer</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CLOCK_EVT_MODE_UNUSED\">CLOCK_EVT_MODE_UNUSED</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CLOCK_EVT_MODE_SHUTDOWN\">CLOCK_EVT_MODE_SHUTDOWN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_Tn_CFG\">HPET_Tn_CFG</a>(<a class=\"id\" href=\"#timer\">timer</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> &= ~<a class=\"id\" href=\"#HPET_TN_ENABLE\">HPET_TN_ENABLE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_writel\">hpet_writel</a>(<a class=\"id\" href=\"#cfg\">cfg</a>, <a class=\"id\" href=\"#HPET_Tn_CFG\">HPET_Tn_CFG</a>(<a class=\"id\" href=\"#timer\">timer</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CLOCK_EVT_MODE_RESUME\">CLOCK_EVT_MODE_RESUME</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#timer\">timer</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_enable_legacy_int\">hpet_enable_legacy_int</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#hpet_dev\">hpet_dev</a> *<a class=\"id\" href=\"#hdev\">hdev</a> = <a class=\"id\" href=\"#EVT_TO_HPET_DEV\">EVT_TO_HPET_DEV</a>(<a class=\"id\" href=\"#evt\">evt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_setup_msi_irq\">hpet_setup_msi_irq</a>(<a class=\"id\" href=\"#hdev\">hdev</a>-><a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#disable_irq\">disable_irq</a>(<a class=\"id\" href=\"#hdev\">hdev</a>-><a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq_set_affinity\">irq_set_affinity</a>(<a class=\"id\" href=\"#hdev\">hdev</a>-><a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#cpumask_of\">cpumask_of</a>(<a class=\"id\" href=\"#hdev\">hdev</a>-><a class=\"id\" href=\"#cpu\">cpu</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#enable_irq\">enable_irq</a>(<a class=\"id\" href=\"#hdev\">hdev</a>-><a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_print_config\">hpet_print_config</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#hpet_next_event\">hpet_next_event</a>(unsigned long <a class=\"id\" href=\"#delta\">delta</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *<a class=\"id\" href=\"#evt\">evt</a>, int <a class=\"id\" href=\"#timer\">timer</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#cnt\">cnt</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cnt\">cnt</a> = <a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_COUNTER\">HPET_COUNTER</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cnt\">cnt</a> += (<a class=\"id\" href=\"#u32\">u32</a>) <a class=\"id\" href=\"#delta\">delta</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_writel\">hpet_writel</a>(<a class=\"id\" href=\"#cnt\">cnt</a>, <a class=\"id\" href=\"#HPET_Tn_CMP\">HPET_Tn_CMP</a>(<a class=\"id\" href=\"#timer\">timer</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We need to read back the CMP register on certain HPET</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * implementations (ATI chipsets) which seem to delay the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * transfer of the compare register into the internal compare</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * logic. With small deltas this might actually be too late as</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the counter could already be higher than the compare value</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * at that point and we would wait for the next hpet interrupt</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * forever. We found out that reading the CMP register back</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * forces the transfer so we can rely on the comparison with</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the counter register below. If the read back from the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * compare register does not match the value we programmed</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * then we might have a real hardware problem. We can not do</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * much about it here, but at least alert the user/admin with</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * a prominent warning.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * An erratum on some chipsets (ICH9,..), results in</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * comparator read immediately following a write returning old</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * value. Workaround for this is to read this value second</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * time, when first read returns old value.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * In fact the write to the comparator register is delayed up</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to two HPET cycles so the workaround we tried to restrict</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the readback to those known to be borked ATI chipsets</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * failed miserably. So we give up on optimizations forever</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and penalize all HPET incarnations unconditionally.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>((<a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_Tn_CMP\">HPET_Tn_CMP</a>(<a class=\"id\" href=\"#timer\">timer</a>)) != <a class=\"id\" href=\"#cnt\">cnt</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_Tn_CMP\">HPET_Tn_CMP</a>(<a class=\"id\" href=\"#timer\">timer</a>)) != <a class=\"id\" href=\"#cnt\">cnt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk_once\">printk_once</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"hpet: compare register read back failed.\\n\");", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#s32\">s32</a>)(<a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_COUNTER\">HPET_COUNTER</a>) - <a class=\"id\" href=\"#cnt\">cnt</a>) >= 0 ? -<a class=\"id\" href=\"#ETIME\">ETIME</a> : 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#hpet_legacy_set_mode\">hpet_legacy_set_mode</a>(enum <a class=\"id\" href=\"#clock_event_mode\">clock_event_mode</a> <a class=\"id\" href=\"#mode\">mode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *<a class=\"id\" href=\"#evt\">evt</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_set_mode\">hpet_set_mode</a>(<a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#evt\">evt</a>, 0);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#hpet_legacy_next_event\">hpet_legacy_next_event</a>(unsigned long <a class=\"id\" href=\"#delta\">delta</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *<a class=\"id\" href=\"#evt\">evt</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#hpet_next_event\">hpet_next_event</a>(<a class=\"id\" href=\"#delta\">delta</a>, <a class=\"id\" href=\"#evt\">evt</a>, 0);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * HPET MSI Support</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PCI_MSI\">CONFIG_PCI_MSI</a>", 
"", 
"static <a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(struct <a class=\"id\" href=\"#hpet_dev\">hpet_dev</a> *, <a class=\"id\" href=\"#cpu_hpet_dev\">cpu_hpet_dev</a>);", 
"static struct <a class=\"id\" href=\"#hpet_dev\">hpet_dev</a><span class=\"ts\"/>*<a class=\"id\" href=\"#hpet_devs\">hpet_devs</a>;", 
"", 
"void <a class=\"id\" href=\"#hpet_msi_unmask\">hpet_msi_unmask</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hpet_dev\">hpet_dev</a> *<a class=\"id\" href=\"#hdev\">hdev</a> = <a class=\"id\" href=\"#get_irq_data\">get_irq_data</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cfg\">cfg</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* unmask it */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_Tn_CFG\">HPET_Tn_CFG</a>(<a class=\"id\" href=\"#hdev\">hdev</a>-><a class=\"id\" href=\"#num\">num</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> |= <a class=\"id\" href=\"#HPET_TN_FSB\">HPET_TN_FSB</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_writel\">hpet_writel</a>(<a class=\"id\" href=\"#cfg\">cfg</a>, <a class=\"id\" href=\"#HPET_Tn_CFG\">HPET_Tn_CFG</a>(<a class=\"id\" href=\"#hdev\">hdev</a>-><a class=\"id\" href=\"#num\">num</a>));", 
"}", 
"", 
"void <a class=\"id\" href=\"#hpet_msi_mask\">hpet_msi_mask</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cfg\">cfg</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hpet_dev\">hpet_dev</a> *<a class=\"id\" href=\"#hdev\">hdev</a> = <a class=\"id\" href=\"#get_irq_data\">get_irq_data</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* mask it */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_Tn_CFG\">HPET_Tn_CFG</a>(<a class=\"id\" href=\"#hdev\">hdev</a>-><a class=\"id\" href=\"#num\">num</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> &= ~<a class=\"id\" href=\"#HPET_TN_FSB\">HPET_TN_FSB</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_writel\">hpet_writel</a>(<a class=\"id\" href=\"#cfg\">cfg</a>, <a class=\"id\" href=\"#HPET_Tn_CFG\">HPET_Tn_CFG</a>(<a class=\"id\" href=\"#hdev\">hdev</a>-><a class=\"id\" href=\"#num\">num</a>));", 
"}", 
"", 
"void <a class=\"id\" href=\"#hpet_msi_write\">hpet_msi_write</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>, struct <a class=\"id\" href=\"#msi_msg\">msi_msg</a> *<a class=\"id\" href=\"#msg\">msg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hpet_dev\">hpet_dev</a> *<a class=\"id\" href=\"#hdev\">hdev</a> = <a class=\"id\" href=\"#get_irq_data\">get_irq_data</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_writel\">hpet_writel</a>(<a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#HPET_Tn_ROUTE\">HPET_Tn_ROUTE</a>(<a class=\"id\" href=\"#hdev\">hdev</a>-><a class=\"id\" href=\"#num\">num</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_writel\">hpet_writel</a>(<a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#address_lo\">address_lo</a>, <a class=\"id\" href=\"#HPET_Tn_ROUTE\">HPET_Tn_ROUTE</a>(<a class=\"id\" href=\"#hdev\">hdev</a>-><a class=\"id\" href=\"#num\">num</a>) + 4);", 
"}", 
"", 
"void <a class=\"id\" href=\"#hpet_msi_read\">hpet_msi_read</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>, struct <a class=\"id\" href=\"#msi_msg\">msi_msg</a> *<a class=\"id\" href=\"#msg\">msg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hpet_dev\">hpet_dev</a> *<a class=\"id\" href=\"#hdev\">hdev</a> = <a class=\"id\" href=\"#get_irq_data\">get_irq_data</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_Tn_ROUTE\">HPET_Tn_ROUTE</a>(<a class=\"id\" href=\"#hdev\">hdev</a>-><a class=\"id\" href=\"#num\">num</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#address_lo\">address_lo</a> = <a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_Tn_ROUTE\">HPET_Tn_ROUTE</a>(<a class=\"id\" href=\"#hdev\">hdev</a>-><a class=\"id\" href=\"#num\">num</a>) + 4);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#address_hi\">address_hi</a> = 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#hpet_msi_set_mode\">hpet_msi_set_mode</a>(enum <a class=\"id\" href=\"#clock_event_mode\">clock_event_mode</a> <a class=\"id\" href=\"#mode\">mode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *<a class=\"id\" href=\"#evt\">evt</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hpet_dev\">hpet_dev</a> *<a class=\"id\" href=\"#hdev\">hdev</a> = <a class=\"id\" href=\"#EVT_TO_HPET_DEV\">EVT_TO_HPET_DEV</a>(<a class=\"id\" href=\"#evt\">evt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_set_mode\">hpet_set_mode</a>(<a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#evt\">evt</a>, <a class=\"id\" href=\"#hdev\">hdev</a>-><a class=\"id\" href=\"#num\">num</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#hpet_msi_next_event\">hpet_msi_next_event</a>(unsigned long <a class=\"id\" href=\"#delta\">delta</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *<a class=\"id\" href=\"#evt\">evt</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hpet_dev\">hpet_dev</a> *<a class=\"id\" href=\"#hdev\">hdev</a> = <a class=\"id\" href=\"#EVT_TO_HPET_DEV\">EVT_TO_HPET_DEV</a>(<a class=\"id\" href=\"#evt\">evt</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#hpet_next_event\">hpet_next_event</a>(<a class=\"id\" href=\"#delta\">delta</a>, <a class=\"id\" href=\"#evt\">evt</a>, <a class=\"id\" href=\"#hdev\">hdev</a>-><a class=\"id\" href=\"#num\">num</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#hpet_setup_msi_irq\">hpet_setup_msi_irq</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#arch_setup_hpet_msi\">arch_setup_hpet_msi</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#hpet_blockid\">hpet_blockid</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#destroy_irq\">destroy_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#hpet_assign_irq\">hpet_assign_irq</a>(struct <a class=\"id\" href=\"#hpet_dev\">hpet_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#irq\">irq</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#create_irq_nr\">create_irq_nr</a>(0, -1);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#irq\">irq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_irq_data\">set_irq_data</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hpet_setup_msi_irq\">hpet_setup_msi_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#irqreturn_t\">irqreturn_t</a> <a class=\"id\" href=\"#hpet_interrupt_handler\">hpet_interrupt_handler</a>(int <a class=\"id\" href=\"#irq\">irq</a>, void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hpet_dev\">hpet_dev</a> *<a class=\"id\" href=\"#dev\">dev</a> = (struct <a class=\"id\" href=\"#hpet_dev\">hpet_dev</a> *)<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *<a class=\"id\" href=\"#hevt\">hevt</a> = &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#evt\">evt</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hevt\">hevt</a>-><a class=\"id\" href=\"#event_handler\">event_handler</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"Spurious HPET timer interrupt on HPET timer %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#num\">num</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#IRQ_HANDLED\">IRQ_HANDLED</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hevt\">hevt</a>-><a class=\"id\" href=\"#event_handler\">event_handler</a>(<a class=\"id\" href=\"#hevt\">hevt</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#IRQ_HANDLED\">IRQ_HANDLED</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#hpet_setup_irq\">hpet_setup_irq</a>(struct <a class=\"id\" href=\"#hpet_dev\">hpet_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#request_irq\">request_irq</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#hpet_interrupt_handler\">hpet_interrupt_handler</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IRQF_TIMER\">IRQF_TIMER</a> | <a class=\"id\" href=\"#IRQF_DISABLED\">IRQF_DISABLED</a> | <a class=\"id\" href=\"#IRQF_NOBALANCING\">IRQF_NOBALANCING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disable_irq\">disable_irq</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq_set_affinity\">irq_set_affinity</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#cpumask_of\">cpumask_of</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#cpu\">cpu</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#enable_irq\">enable_irq</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"hpet: %s irq %d for MSI\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* This should be called in specific @cpu */</span>", 
"static void <a class=\"id\" href=\"#init_one_hpet_msi_clockevent\">init_one_hpet_msi_clockevent</a>(struct <a class=\"id\" href=\"#hpet_dev\">hpet_dev</a> *<a class=\"id\" href=\"#hdev\">hdev</a>, int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *<a class=\"id\" href=\"#evt\">evt</a> = &amp;<a class=\"id\" href=\"#hdev\">hdev</a>-><a class=\"id\" href=\"#evt\">evt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uint64_t\">uint64_t</a> <a class=\"id\" href=\"#hpet_freq\">hpet_freq</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#cpu\">cpu</a> != <a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>());", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#hdev\">hdev</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#HPET_DEV_VALID\">HPET_DEV_VALID</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hpet_setup_msi_irq\">hpet_setup_msi_irq</a>(<a class=\"id\" href=\"#hdev\">hdev</a>-><a class=\"id\" href=\"#irq\">irq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hdev\">hdev</a>-><a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#cpu_hpet_dev\">cpu_hpet_dev</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) = <a class=\"id\" href=\"#hdev\">hdev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evt\">evt</a>-><a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#hdev\">hdev</a>-><a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_setup_irq\">hpet_setup_irq</a>(<a class=\"id\" href=\"#hdev\">hdev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evt\">evt</a>-><a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#hdev\">hdev</a>-><a class=\"id\" href=\"#irq\">irq</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evt\">evt</a>-><a class=\"id\" href=\"#rating\">rating</a> = 110;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evt\">evt</a>-><a class=\"id\" href=\"#features\">features</a> = <a class=\"id\" href=\"#CLOCK_EVT_FEAT_ONESHOT\">CLOCK_EVT_FEAT_ONESHOT</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hdev\">hdev</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#HPET_DEV_PERI_CAP\">HPET_DEV_PERI_CAP</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#evt\">evt</a>-><a class=\"id\" href=\"#features\">features</a> |= <a class=\"id\" href=\"#CLOCK_EVT_FEAT_PERIODIC\">CLOCK_EVT_FEAT_PERIODIC</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evt\">evt</a>-><a class=\"id\" href=\"#set_mode\">set_mode</a> = <a class=\"id\" href=\"#hpet_msi_set_mode\">hpet_msi_set_mode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evt\">evt</a>-><a class=\"id\" href=\"#set_next_event\">set_next_event</a> = <a class=\"id\" href=\"#hpet_msi_next_event\">hpet_msi_next_event</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evt\">evt</a>-><a class=\"id\" href=\"#shift\">shift</a> = 32;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The period is a femto seconds value. We need to calculate the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * scaled math multiplication factor for nanosecond to hpet tick</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * conversion.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_freq\">hpet_freq</a> = <a class=\"id\" href=\"#FSEC_PER_SEC\">FSEC_PER_SEC</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#do_div\">do_div</a>(<a class=\"id\" href=\"#hpet_freq\">hpet_freq</a>, <a class=\"id\" href=\"#hpet_period\">hpet_period</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evt\">evt</a>-><a class=\"id\" href=\"#mult\">mult</a> = <a class=\"id\" href=\"#div_sc\">div_sc</a>((unsigned long) <a class=\"id\" href=\"#hpet_freq\">hpet_freq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#NSEC_PER_SEC\">NSEC_PER_SEC</a>, <a class=\"id\" href=\"#evt\">evt</a>-><a class=\"id\" href=\"#shift\">shift</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Calculate the max delta */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evt\">evt</a>-><a class=\"id\" href=\"#max_delta_ns\">max_delta_ns</a> = <a class=\"id\" href=\"#clockevent_delta2ns\">clockevent_delta2ns</a>(0x7FFFFFFF, <a class=\"id\" href=\"#evt\">evt</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* 5 usec minimum reprogramming delta. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evt\">evt</a>-><a class=\"id\" href=\"#min_delta_ns\">min_delta_ns</a> = 5000;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evt\">evt</a>-><a class=\"id\" href=\"#cpumask\">cpumask</a> = <a class=\"id\" href=\"#cpumask_of\">cpumask_of</a>(<a class=\"id\" href=\"#hdev\">hdev</a>-><a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clockevents_register_device\">clockevents_register_device</a>(<a class=\"id\" href=\"#evt\">evt</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HPET\">CONFIG_HPET</a>", 
"<span class=\"comment\">/* Reserve at least one timer for userspace (/dev/hpet) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RESERVE_TIMERS\">RESERVE_TIMERS</a> 1", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RESERVE_TIMERS\">RESERVE_TIMERS</a> 0", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static void <a class=\"id\" href=\"#hpet_msi_capability_lookup\">hpet_msi_capability_lookup</a>(unsigned int <a class=\"id\" href=\"#start_timer\">start_timer</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#num_timers\">num_timers</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#num_timers_used\">num_timers_used</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hpet_msi_disable\">hpet_msi_disable</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#boot_cpu_has\">boot_cpu_has</a>(<a class=\"id\" href=\"#X86_FEATURE_ARAT\">X86_FEATURE_ARAT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_ID\">HPET_ID</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#num_timers\">num_timers</a> = ((<a class=\"id\" href=\"#id\">id</a> &amp; <a class=\"id\" href=\"#HPET_ID_NUMBER\">HPET_ID_NUMBER</a>) >> <a class=\"id\" href=\"#HPET_ID_NUMBER_SHIFT\">HPET_ID_NUMBER_SHIFT</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#num_timers\">num_timers</a>++; <span class=\"comment\">/* Value read out starts from 0 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_print_config\">hpet_print_config</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_devs\">hpet_devs</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#hpet_dev\">hpet_dev</a>) * <a class=\"id\" href=\"#num_timers\">num_timers</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hpet_devs\">hpet_devs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_num_timers\">hpet_num_timers</a> = <a class=\"id\" href=\"#num_timers\">num_timers</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#start_timer\">start_timer</a>; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#num_timers\">num_timers</a> - <a class=\"id\" href=\"#RESERVE_TIMERS\">RESERVE_TIMERS</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#hpet_dev\">hpet_dev</a> *<a class=\"id\" href=\"#hdev\">hdev</a> = &amp;<a class=\"id\" href=\"#hpet_devs\">hpet_devs</a>[<a class=\"id\" href=\"#num_timers_used\">num_timers_used</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_Tn_CFG\">HPET_Tn_CFG</a>(<a class=\"id\" href=\"#i\">i</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Only consider HPET timer with MSI support */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#cfg\">cfg</a> &amp; <a class=\"id\" href=\"#HPET_TN_FSB_CAP\">HPET_TN_FSB_CAP</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hdev\">hdev</a>-><a class=\"id\" href=\"#flags\">flags</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cfg\">cfg</a> &amp; <a class=\"id\" href=\"#HPET_TN_PERIODIC_CAP\">HPET_TN_PERIODIC_CAP</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hdev\">hdev</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#HPET_DEV_PERI_CAP\">HPET_DEV_PERI_CAP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hdev\">hdev</a>-><a class=\"id\" href=\"#num\">num</a> = <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#hdev\">hdev</a>-><a class=\"id\" href=\"#name\">name</a>, \"hpet%d\", <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#hpet_assign_irq\">hpet_assign_irq</a>(<a class=\"id\" href=\"#hdev\">hdev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hdev\">hdev</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#HPET_DEV_FSB_CAP\">HPET_DEV_FSB_CAP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hdev\">hdev</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#HPET_DEV_VALID\">HPET_DEV_VALID</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_timers_used\">num_timers_used</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#num_timers_used\">num_timers_used</a> == <a class=\"id\" href=\"#num_possible_cpus\">num_possible_cpus</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"HPET: %d timers in total, %d timers will be used for per-cpu timer\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_timers\">num_timers</a>, <a class=\"id\" href=\"#num_timers_used\">num_timers_used</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HPET\">CONFIG_HPET</a>", 
"static void <a class=\"id\" href=\"#hpet_reserve_msi_timers\">hpet_reserve_msi_timers</a>(struct <a class=\"id\" href=\"#hpet_data\">hpet_data</a> *<a class=\"id\" href=\"#hd\">hd</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hpet_devs\">hpet_devs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#hpet_num_timers\">hpet_num_timers</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#hpet_dev\">hpet_dev</a> *<a class=\"id\" href=\"#hdev\">hdev</a> = &amp;<a class=\"id\" href=\"#hpet_devs\">hpet_devs</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#hdev\">hdev</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#HPET_DEV_VALID\">HPET_DEV_VALID</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hd\">hd</a>-><a class=\"id\" href=\"#hd_irq\">hd_irq</a>[<a class=\"id\" href=\"#hdev\">hdev</a>-><a class=\"id\" href=\"#num\">num</a>] = <a class=\"id\" href=\"#hdev\">hdev</a>-><a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_reserve_timer\">hpet_reserve_timer</a>(<a class=\"id\" href=\"#hd\">hd</a>, <a class=\"id\" href=\"#hdev\">hdev</a>-><a class=\"id\" href=\"#num\">num</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static struct <a class=\"id\" href=\"#hpet_dev\">hpet_dev</a> *<a class=\"id\" href=\"#hpet_get_unused_timer\">hpet_get_unused_timer</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hpet_devs\">hpet_devs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#hpet_num_timers\">hpet_num_timers</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#hpet_dev\">hpet_dev</a> *<a class=\"id\" href=\"#hdev\">hdev</a> = &amp;<a class=\"id\" href=\"#hpet_devs\">hpet_devs</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#hdev\">hdev</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#HPET_DEV_VALID\">HPET_DEV_VALID</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#test_and_set_bit\">test_and_set_bit</a>(<a class=\"id\" href=\"#HPET_DEV_USED_BIT\">HPET_DEV_USED_BIT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long *)&amp;<a class=\"id\" href=\"#hdev\">hdev</a>-><a class=\"id\" href=\"#flags\">flags</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#hdev\">hdev</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#hpet_work_struct\">hpet_work_struct</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#delayed_work\">delayed_work</a> <a class=\"id\" href=\"#work\">work</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#completion\">completion</a> <a class=\"id\" href=\"#complete\">complete</a>;", 
"};", 
"", 
"static void <a class=\"id\" href=\"#hpet_work\">hpet_work</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#w\">w</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hpet_dev\">hpet_dev</a> *<a class=\"id\" href=\"#hdev\">hdev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>();", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hpet_work_struct\">hpet_work_struct</a> *<a class=\"id\" href=\"#hpet_work\">hpet_work</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_work\">hpet_work</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#w\">w</a>, struct <a class=\"id\" href=\"#hpet_work_struct\">hpet_work_struct</a>, <a class=\"id\" href=\"#work\">work</a>.<a class=\"id\" href=\"#work\">work</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hdev\">hdev</a> = <a class=\"id\" href=\"#hpet_get_unused_timer\">hpet_get_unused_timer</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hdev\">hdev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#init_one_hpet_msi_clockevent\">init_one_hpet_msi_clockevent</a>(<a class=\"id\" href=\"#hdev\">hdev</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#complete\">complete</a>(&amp;<a class=\"id\" href=\"#hpet_work\">hpet_work</a>-><a class=\"id\" href=\"#complete\">complete</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#hpet_cpuhp_notify\">hpet_cpuhp_notify</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#n\">n</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#action\">action</a>, void *<a class=\"id\" href=\"#hcpu\">hcpu</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#cpu\">cpu</a> = (unsigned long)<a class=\"id\" href=\"#hcpu\">hcpu</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hpet_work_struct\">hpet_work_struct</a> <a class=\"id\" href=\"#work\">work</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hpet_dev\">hpet_dev</a> *<a class=\"id\" href=\"#hdev\">hdev</a> = <a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#cpu_hpet_dev\">cpu_hpet_dev</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#action\">action</a> &amp; 0xf) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_ONLINE\">CPU_ONLINE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INIT_DELAYED_WORK_ON_STACK\">INIT_DELAYED_WORK_ON_STACK</a>(&amp;<a class=\"id\" href=\"#work\">work</a>.<a class=\"id\" href=\"#work\">work</a>, <a class=\"id\" href=\"#hpet_work\">hpet_work</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#init_completion\">init_completion</a>(&amp;<a class=\"id\" href=\"#work\">work</a>.<a class=\"id\" href=\"#complete\">complete</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* FIXME: add schedule_work_on() */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule_delayed_work_on\">schedule_delayed_work_on</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, &amp;<a class=\"id\" href=\"#work\">work</a>.<a class=\"id\" href=\"#work\">work</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wait_for_completion\">wait_for_completion</a>(&amp;<a class=\"id\" href=\"#work\">work</a>.<a class=\"id\" href=\"#complete\">complete</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#destroy_timer_on_stack\">destroy_timer_on_stack</a>(&amp;<a class=\"id\" href=\"#work\">work</a>.<a class=\"id\" href=\"#work\">work</a>.<a class=\"id\" href=\"#timer\">timer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_DEAD\">CPU_DEAD</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#hdev\">hdev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_irq\">free_irq</a>(<a class=\"id\" href=\"#hdev\">hdev</a>-><a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#hdev\">hdev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hdev\">hdev</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#HPET_DEV_USED\">HPET_DEV_USED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#cpu_hpet_dev\">cpu_hpet_dev</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NOTIFY_OK\">NOTIFY_OK</a>;", 
"}", 
"#else", 
"", 
"static int <a class=\"id\" href=\"#hpet_setup_msi_irq\">hpet_setup_msi_irq</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"static void <a class=\"id\" href=\"#hpet_msi_capability_lookup\">hpet_msi_capability_lookup</a>(unsigned int <a class=\"id\" href=\"#start_timer\">start_timer</a>)", 
"{", 
"<span class=\"ts\"/>return;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HPET\">CONFIG_HPET</a>", 
"static void <a class=\"id\" href=\"#hpet_reserve_msi_timers\">hpet_reserve_msi_timers</a>(struct <a class=\"id\" href=\"#hpet_data\">hpet_data</a> *<a class=\"id\" href=\"#hd\">hd</a>)", 
"{", 
"<span class=\"ts\"/>return;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static int <a class=\"id\" href=\"#hpet_cpuhp_notify\">hpet_cpuhp_notify</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#n\">n</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#action\">action</a>, void *<a class=\"id\" href=\"#hcpu\">hcpu</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NOTIFY_OK\">NOTIFY_OK</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Clock source related code</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#cycle_t\">cycle_t</a> <a class=\"id\" href=\"#read_hpet\">read_hpet</a>(struct <a class=\"id\" href=\"#clocksource\">clocksource</a> *<a class=\"id\" href=\"#cs\">cs</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#cycle_t\">cycle_t</a>)<a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_COUNTER\">HPET_COUNTER</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"static <a class=\"id\" href=\"#cycle_t\">cycle_t</a> <a class=\"id\" href=\"#__vsyscall_fn\">__vsyscall_fn</a> <a class=\"id\" href=\"#vread_hpet\">vread_hpet</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#readl\">readl</a>((const void <a class=\"id\" href=\"#__iomem\">__iomem</a> *)<a class=\"id\" href=\"#fix_to_virt\">fix_to_virt</a>(<a class=\"id\" href=\"#VSYSCALL_HPET\">VSYSCALL_HPET</a>) + 0xf0);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static struct <a class=\"id\" href=\"#clocksource\">clocksource</a> <a class=\"id\" href=\"#clocksource_hpet\">clocksource_hpet</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= \"hpet\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#rating\">rating</a><span class=\"ts\"/><span class=\"ts\"/>= 250,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#read_hpet\">read_hpet</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#mask\">mask</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#HPET_MASK\">HPET_MASK</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#CLOCK_SOURCE_IS_CONTINUOUS\">CLOCK_SOURCE_IS_CONTINUOUS</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#resume\">resume</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#hpet_resume_counter\">hpet_resume_counter</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#vread\">vread</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#vread_hpet\">vread_hpet</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"static int <a class=\"id\" href=\"#hpet_clocksource_register\">hpet_clocksource_register</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#now\">now</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#hpet_freq\">hpet_freq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cycle_t\">cycle_t</a> <a class=\"id\" href=\"#t1\">t1</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Start the counter */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_restart_counter\">hpet_restart_counter</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Verify whether hpet counter works */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#t1\">t1</a> = <a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_COUNTER\">HPET_COUNTER</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdtscll\">rdtscll</a>(<a class=\"id\" href=\"#start\">start</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We don't know the TSC frequency yet, but waiting for</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 200000 TSC cycles is safe:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 4 GHz == 50us</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 1 GHz == 200us</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rep_nop\">rep_nop</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rdtscll\">rdtscll</a>(<a class=\"id\" href=\"#now\">now</a>);", 
"<span class=\"ts\"/>} while ((<a class=\"id\" href=\"#now\">now</a> - <a class=\"id\" href=\"#start\">start</a>) &lt; 200000UL);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#t1\">t1</a> == <a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_COUNTER\">HPET_COUNTER</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"HPET counter not counting. HPET disabled\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The definition of mult is (include/linux/clocksource.h)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * mult/2^shift = ns/cyc and hpet_period is in units of fsec/cyc</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so we first need to convert hpet_period to ns/cyc units:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  mult/2^shift = ns/cyc = hpet_period/10^6</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  mult = (hpet_period * 2^shift)/10^6</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  mult = (hpet_period &lt;&lt; shift)/FSEC_PER_NSEC</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Need to convert hpet_period (fsec/cyc) to cyc/sec:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * cyc/sec = FSEC_PER_SEC/hpet_period(fsec/cyc)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * cyc/sec = (FSEC_PER_NSEC * NSEC_PER_SEC)/hpet_period</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_freq\">hpet_freq</a> = <a class=\"id\" href=\"#FSEC_PER_SEC\">FSEC_PER_SEC</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#do_div\">do_div</a>(<a class=\"id\" href=\"#hpet_freq\">hpet_freq</a>, <a class=\"id\" href=\"#hpet_period\">hpet_period</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clocksource_register_hz\">clocksource_register_hz</a>(&amp;<a class=\"id\" href=\"#clocksource_hpet\">clocksource_hpet</a>, (<a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#hpet_freq\">hpet_freq</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * hpet_enable - Try to setup the HPET timer. Returns 1 on success.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#hpet_enable\">hpet_enable</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_hpet_capable\">is_hpet_capable</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_set_mapping\">hpet_set_mapping</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Read the period and check for a sane value:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_period\">hpet_period</a> = <a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_PERIOD\">HPET_PERIOD</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * AMD SB700 based systems with spread spectrum enabled use a</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * SMM based HPET emulation to provide proper frequency</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * setting. The SMM code is initialized with the first HPET</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * register access and takes some time to complete. During</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * this time the config register reads 0xffffffff. We check</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * for max. 1000 loops whether the config register reads a non</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 0xffffffff value to make sure that HPET is up and running</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * before we go further. A counting loop is safe, as the HPET</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * access takes thousands of CPU cycles. On non SB700 based</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * machines this check is only done once and has no side</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * effects.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_CFG\">HPET_CFG</a>) == 0xFFFFFFFF; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> == 1000) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"HPET config register value = 0xFFFFFFFF. \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"Disabling HPET\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_nohpet\">out_nohpet</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hpet_period\">hpet_period</a> &lt; <a class=\"id\" href=\"#HPET_MIN_PERIOD\">HPET_MIN_PERIOD</a> || <a class=\"id\" href=\"#hpet_period\">hpet_period</a> &gt; <a class=\"id\" href=\"#HPET_MAX_PERIOD\">HPET_MAX_PERIOD</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_nohpet\">out_nohpet</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Read the HPET ID register to retrieve the IRQ routing</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * information and the number of channels</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_ID\">HPET_ID</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_print_config\">hpet_print_config</a>();", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HPET_EMULATE_RTC\">CONFIG_HPET_EMULATE_RTC</a>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The legacy routing mode needs at least two channels, tick timer</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and the rtc emulation channel.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#id\">id</a> &amp; <a class=\"id\" href=\"#HPET_ID_NUMBER\">HPET_ID_NUMBER</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_nohpet\">out_nohpet</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hpet_clocksource_register\">hpet_clocksource_register</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_nohpet\">out_nohpet</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#id\">id</a> &amp; <a class=\"id\" href=\"#HPET_ID_LEGSUP\">HPET_ID_LEGSUP</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_legacy_clockevent_register\">hpet_legacy_clockevent_register</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#out_nohpet\">out_nohpet</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_clear_mapping\">hpet_clear_mapping</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_address\">hpet_address</a> = 0;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Needs to be late, as the reserve_timer code calls kalloc !</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Not a problem on i386 as hpet_enable is called from late_time_init,</span>", 
"<span class=\"comment\"> * but on x86_64 it is necessary !</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#__init\">__init</a> int <a class=\"id\" href=\"#hpet_late_init\">hpet_late_init</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#boot_hpet_disable\">boot_hpet_disable</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hpet_address\">hpet_address</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#force_hpet_address\">force_hpet_address</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_address\">hpet_address</a> = <a class=\"id\" href=\"#force_hpet_address\">force_hpet_address</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_enable\">hpet_enable</a>();", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hpet_virt_address\">hpet_virt_address</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_ID\">HPET_ID</a>) &amp; <a class=\"id\" href=\"#HPET_ID_LEGSUP\">HPET_ID_LEGSUP</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_msi_capability_lookup\">hpet_msi_capability_lookup</a>(2);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_msi_capability_lookup\">hpet_msi_capability_lookup</a>(0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_reserve_platform_timers\">hpet_reserve_platform_timers</a>(<a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_ID\">HPET_ID</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_print_config\">hpet_print_config</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hpet_msi_disable\">hpet_msi_disable</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#boot_cpu_has\">boot_cpu_has</a>(<a class=\"id\" href=\"#X86_FEATURE_ARAT\">X86_FEATURE_ARAT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_online_cpu\">for_each_online_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_cpuhp_notify\">hpet_cpuhp_notify</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#CPU_ONLINE\">CPU_ONLINE</a>, (void *)(long)<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* This notifier should be called after workqueue is ready */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hotcpu_notifier\">hotcpu_notifier</a>(<a class=\"id\" href=\"#hpet_cpuhp_notify\">hpet_cpuhp_notify</a>, -20);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#fs_initcall\">fs_initcall</a>(<a class=\"id\" href=\"#hpet_late_init\">hpet_late_init</a>);", 
"", 
"void <a class=\"id\" href=\"#hpet_disable\">hpet_disable</a>(void)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_hpet_capable\">is_hpet_capable</a>() && <a class=\"id\" href=\"#hpet_virt_address\">hpet_virt_address</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_CFG\">HPET_CFG</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#hpet_legacy_int_enabled\">hpet_legacy_int_enabled</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> &= ~<a class=\"id\" href=\"#HPET_CFG_LEGACY\">HPET_CFG_LEGACY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_legacy_int_enabled\">hpet_legacy_int_enabled</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> &= ~<a class=\"id\" href=\"#HPET_CFG_ENABLE\">HPET_CFG_ENABLE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_writel\">hpet_writel</a>(<a class=\"id\" href=\"#cfg\">cfg</a>, <a class=\"id\" href=\"#HPET_CFG\">HPET_CFG</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HPET_EMULATE_RTC\">CONFIG_HPET_EMULATE_RTC</a>", 
"", 
"<span class=\"comment\">/* HPET in LegacyReplacement Mode eats up RTC interrupt line. When, HPET</span>", 
"<span class=\"comment\"> * is enabled, we support RTC interrupt functionality in software.</span>", 
"<span class=\"comment\"> * RTC has 3 kinds of interrupts:</span>", 
"<span class=\"comment\"> * 1) Update Interrupt - generate an interrupt, every sec, when RTC clock</span>", 
"<span class=\"comment\"> *    is updated</span>", 
"<span class=\"comment\"> * 2) Alarm Interrupt - generate an interrupt at a specific time of day</span>", 
"<span class=\"comment\"> * 3) Periodic Interrupt - generate periodic interrupt, with frequencies</span>", 
"<span class=\"comment\"> *    2Hz-8192Hz (2Hz-64Hz for non-root user) (all freqs in powers of 2)</span>", 
"<span class=\"comment\"> * (1) and (2) above are implemented using polling at a frequency of</span>", 
"<span class=\"comment\"> * 64 Hz. The exact frequency is a tradeoff between accuracy and interrupt</span>", 
"<span class=\"comment\"> * overhead. (DEFAULT_RTC_INT_FREQ)</span>", 
"<span class=\"comment\"> * For (3), we use interrupts at 64Hz or user specified periodic</span>", 
"<span class=\"comment\"> * frequency, whichever is higher.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mc146818rtc\">mc146818rtc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rtc\">rtc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#rtc\">rtc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEFAULT_RTC_INT_FREQ\">DEFAULT_RTC_INT_FREQ</a><span class=\"ts\"/>64", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEFAULT_RTC_SHIFT\">DEFAULT_RTC_SHIFT</a><span class=\"ts\"/>6", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RTC_NUM_INTS\">RTC_NUM_INTS</a><span class=\"ts\"/><span class=\"ts\"/>1", 
"", 
"static unsigned long <a class=\"id\" href=\"#hpet_rtc_flags\">hpet_rtc_flags</a>;", 
"static int <a class=\"id\" href=\"#hpet_prev_update_sec\">hpet_prev_update_sec</a>;", 
"static struct <a class=\"id\" href=\"#rtc_time\">rtc_time</a> <a class=\"id\" href=\"#hpet_alarm_time\">hpet_alarm_time</a>;", 
"static unsigned long <a class=\"id\" href=\"#hpet_pie_count\">hpet_pie_count</a>;", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#hpet_t1_cmp\">hpet_t1_cmp</a>;", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#hpet_default_delta\">hpet_default_delta</a>;", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#hpet_pie_delta\">hpet_pie_delta</a>;", 
"static unsigned long <a class=\"id\" href=\"#hpet_pie_limit\">hpet_pie_limit</a>;", 
"", 
"static <a class=\"id\" href=\"#rtc_irq_handler\">rtc_irq_handler</a> <a class=\"id\" href=\"#irq_handler\">irq_handler</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Check that the hpet counter c1 is ahead of the c2</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#hpet_cnt_ahead\">hpet_cnt_ahead</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#c1\">c1</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#c2\">c2</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#s32\">s32</a>)(<a class=\"id\" href=\"#c2\">c2</a> - <a class=\"id\" href=\"#c1\">c1</a>) &lt; 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Registers a IRQ handler.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#hpet_register_irq_handler\">hpet_register_irq_handler</a>(<a class=\"id\" href=\"#rtc_irq_handler\">rtc_irq_handler</a> <a class=\"id\" href=\"#handler\">handler</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_hpet_enabled\">is_hpet_enabled</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#irq_handler\">irq_handler</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq_handler\">irq_handler</a> = <a class=\"id\" href=\"#handler\">handler</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#hpet_register_irq_handler\">hpet_register_irq_handler</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Deregisters the IRQ handler registered with hpet_register_irq_handler()</span>", 
"<span class=\"comment\"> * and does cleanup.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#hpet_unregister_irq_handler\">hpet_unregister_irq_handler</a>(<a class=\"id\" href=\"#rtc_irq_handler\">rtc_irq_handler</a> <a class=\"id\" href=\"#handler\">handler</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_hpet_enabled\">is_hpet_enabled</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq_handler\">irq_handler</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_rtc_flags\">hpet_rtc_flags</a> = 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#hpet_unregister_irq_handler\">hpet_unregister_irq_handler</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Timer 1 for RTC emulation. We use one shot mode, as periodic mode</span>", 
"<span class=\"comment\"> * is not supported by all HPET implementations for timer 1.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * hpet_rtc_timer_init() is called when the rtc is initialized.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#hpet_rtc_timer_init\">hpet_rtc_timer_init</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cfg\">cfg</a>, <a class=\"id\" href=\"#cnt\">cnt</a>, <a class=\"id\" href=\"#delta\">delta</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_hpet_enabled\">is_hpet_enabled</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hpet_default_delta\">hpet_default_delta</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uint64_t\">uint64_t</a> <a class=\"id\" href=\"#clc\">clc</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clc\">clc</a> = (<a class=\"id\" href=\"#uint64_t\">uint64_t</a>) <a class=\"id\" href=\"#hpet_clockevent\">hpet_clockevent</a>.<a class=\"id\" href=\"#mult\">mult</a> * <a class=\"id\" href=\"#NSEC_PER_SEC\">NSEC_PER_SEC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clc\">clc</a> >>= <a class=\"id\" href=\"#hpet_clockevent\">hpet_clockevent</a>.<a class=\"id\" href=\"#shift\">shift</a> + <a class=\"id\" href=\"#DEFAULT_RTC_SHIFT\">DEFAULT_RTC_SHIFT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_default_delta\">hpet_default_delta</a> = <a class=\"id\" href=\"#clc\">clc</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#hpet_rtc_flags\">hpet_rtc_flags</a> &amp; <a class=\"id\" href=\"#RTC_PIE\">RTC_PIE</a>) || <a class=\"id\" href=\"#hpet_pie_limit\">hpet_pie_limit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#delta\">delta</a> = <a class=\"id\" href=\"#hpet_default_delta\">hpet_default_delta</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#delta\">delta</a> = <a class=\"id\" href=\"#hpet_pie_delta\">hpet_pie_delta</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_save\">local_irq_save</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cnt\">cnt</a> = <a class=\"id\" href=\"#delta\">delta</a> + <a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_COUNTER\">HPET_COUNTER</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_writel\">hpet_writel</a>(<a class=\"id\" href=\"#cnt\">cnt</a>, <a class=\"id\" href=\"#HPET_T1_CMP\">HPET_T1_CMP</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_t1_cmp\">hpet_t1_cmp</a> = <a class=\"id\" href=\"#cnt\">cnt</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_T1_CFG\">HPET_T1_CFG</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> &= ~<a class=\"id\" href=\"#HPET_TN_PERIODIC\">HPET_TN_PERIODIC</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> |= <a class=\"id\" href=\"#HPET_TN_ENABLE\">HPET_TN_ENABLE</a> | <a class=\"id\" href=\"#HPET_TN_32BIT\">HPET_TN_32BIT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_writel\">hpet_writel</a>(<a class=\"id\" href=\"#cfg\">cfg</a>, <a class=\"id\" href=\"#HPET_T1_CFG\">HPET_T1_CFG</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_restore\">local_irq_restore</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#hpet_rtc_timer_init\">hpet_rtc_timer_init</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The functions below are called from rtc driver.</span>", 
"<span class=\"comment\"> * Return 0 if HPET is not being used.</span>", 
"<span class=\"comment\"> * Otherwise do the necessary changes and return 1.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#hpet_mask_rtc_irq_bit\">hpet_mask_rtc_irq_bit</a>(unsigned long <a class=\"id\" href=\"#bit_mask\">bit_mask</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_hpet_enabled\">is_hpet_enabled</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_rtc_flags\">hpet_rtc_flags</a> &= ~<a class=\"id\" href=\"#bit_mask\">bit_mask</a>;", 
"<span class=\"ts\"/>return 1;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#hpet_mask_rtc_irq_bit\">hpet_mask_rtc_irq_bit</a>);", 
"", 
"int <a class=\"id\" href=\"#hpet_set_rtc_irq_bit\">hpet_set_rtc_irq_bit</a>(unsigned long <a class=\"id\" href=\"#bit_mask\">bit_mask</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#oldbits\">oldbits</a> = <a class=\"id\" href=\"#hpet_rtc_flags\">hpet_rtc_flags</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_hpet_enabled\">is_hpet_enabled</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_rtc_flags\">hpet_rtc_flags</a> |= <a class=\"id\" href=\"#bit_mask\">bit_mask</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#bit_mask\">bit_mask</a> &amp; <a class=\"id\" href=\"#RTC_UIE\">RTC_UIE</a>) && !(<a class=\"id\" href=\"#oldbits\">oldbits</a> &amp; <a class=\"id\" href=\"#RTC_UIE\">RTC_UIE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_prev_update_sec\">hpet_prev_update_sec</a> = -1;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#oldbits\">oldbits</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_rtc_timer_init\">hpet_rtc_timer_init</a>();", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#hpet_set_rtc_irq_bit\">hpet_set_rtc_irq_bit</a>);", 
"", 
"int <a class=\"id\" href=\"#hpet_set_alarm_time\">hpet_set_alarm_time</a>(unsigned char <a class=\"id\" href=\"#hrs\">hrs</a>, unsigned char <a class=\"id\" href=\"#min\">min</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#sec\">sec</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_hpet_enabled\">is_hpet_enabled</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_alarm_time\">hpet_alarm_time</a>.<a class=\"id\" href=\"#tm_hour\">tm_hour</a> = <a class=\"id\" href=\"#hrs\">hrs</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_alarm_time\">hpet_alarm_time</a>.<a class=\"id\" href=\"#tm_min\">tm_min</a> = <a class=\"id\" href=\"#min\">min</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_alarm_time\">hpet_alarm_time</a>.<a class=\"id\" href=\"#tm_sec\">tm_sec</a> = <a class=\"id\" href=\"#sec\">sec</a>;", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#hpet_set_alarm_time\">hpet_set_alarm_time</a>);", 
"", 
"int <a class=\"id\" href=\"#hpet_set_periodic_freq\">hpet_set_periodic_freq</a>(unsigned long <a class=\"id\" href=\"#freq\">freq</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uint64_t\">uint64_t</a> <a class=\"id\" href=\"#clc\">clc</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_hpet_enabled\">is_hpet_enabled</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#freq\">freq</a> <= <a class=\"id\" href=\"#DEFAULT_RTC_INT_FREQ\">DEFAULT_RTC_INT_FREQ</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_pie_limit\">hpet_pie_limit</a> = <a class=\"id\" href=\"#DEFAULT_RTC_INT_FREQ\">DEFAULT_RTC_INT_FREQ</a> / <a class=\"id\" href=\"#freq\">freq</a>;", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clc\">clc</a> = (<a class=\"id\" href=\"#uint64_t\">uint64_t</a>) <a class=\"id\" href=\"#hpet_clockevent\">hpet_clockevent</a>.<a class=\"id\" href=\"#mult\">mult</a> * <a class=\"id\" href=\"#NSEC_PER_SEC\">NSEC_PER_SEC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_div\">do_div</a>(<a class=\"id\" href=\"#clc\">clc</a>, <a class=\"id\" href=\"#freq\">freq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clc\">clc</a> >>= <a class=\"id\" href=\"#hpet_clockevent\">hpet_clockevent</a>.<a class=\"id\" href=\"#shift\">shift</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_pie_delta\">hpet_pie_delta</a> = <a class=\"id\" href=\"#clc\">clc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_pie_limit\">hpet_pie_limit</a> = 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 1;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#hpet_set_periodic_freq\">hpet_set_periodic_freq</a>);", 
"", 
"int <a class=\"id\" href=\"#hpet_rtc_dropped_irq\">hpet_rtc_dropped_irq</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#is_hpet_enabled\">is_hpet_enabled</a>();", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#hpet_rtc_dropped_irq\">hpet_rtc_dropped_irq</a>);", 
"", 
"static void <a class=\"id\" href=\"#hpet_rtc_timer_reinit\">hpet_rtc_timer_reinit</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cfg\">cfg</a>, <a class=\"id\" href=\"#delta\">delta</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#lost_ints\">lost_ints</a> = -1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#hpet_rtc_flags\">hpet_rtc_flags</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> = <a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_T1_CFG\">HPET_T1_CFG</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a> &= ~<a class=\"id\" href=\"#HPET_TN_ENABLE\">HPET_TN_ENABLE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_writel\">hpet_writel</a>(<a class=\"id\" href=\"#cfg\">cfg</a>, <a class=\"id\" href=\"#HPET_T1_CFG\">HPET_T1_CFG</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#hpet_rtc_flags\">hpet_rtc_flags</a> &amp; <a class=\"id\" href=\"#RTC_PIE\">RTC_PIE</a>) || <a class=\"id\" href=\"#hpet_pie_limit\">hpet_pie_limit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#delta\">delta</a> = <a class=\"id\" href=\"#hpet_default_delta\">hpet_default_delta</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#delta\">delta</a> = <a class=\"id\" href=\"#hpet_pie_delta\">hpet_pie_delta</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Increment the comparator value until we are ahead of the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * current count.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_t1_cmp\">hpet_t1_cmp</a> += <a class=\"id\" href=\"#delta\">delta</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_writel\">hpet_writel</a>(<a class=\"id\" href=\"#hpet_t1_cmp\">hpet_t1_cmp</a>, <a class=\"id\" href=\"#HPET_T1_CMP\">HPET_T1_CMP</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lost_ints\">lost_ints</a>++;", 
"<span class=\"ts\"/>} while (!<a class=\"id\" href=\"#hpet_cnt_ahead\">hpet_cnt_ahead</a>(<a class=\"id\" href=\"#hpet_t1_cmp\">hpet_t1_cmp</a>, <a class=\"id\" href=\"#hpet_readl\">hpet_readl</a>(<a class=\"id\" href=\"#HPET_COUNTER\">HPET_COUNTER</a>)));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lost_ints\">lost_ints</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#hpet_rtc_flags\">hpet_rtc_flags</a> &amp; <a class=\"id\" href=\"#RTC_PIE\">RTC_PIE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_pie_count\">hpet_pie_count</a> += <a class=\"id\" href=\"#lost_ints\">lost_ints</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#printk_ratelimit\">printk_ratelimit</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"hpet1: lost %d rtc interrupts\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lost_ints\">lost_ints</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<a class=\"id\" href=\"#irqreturn_t\">irqreturn_t</a> <a class=\"id\" href=\"#hpet_rtc_interrupt\">hpet_rtc_interrupt</a>(int <a class=\"id\" href=\"#irq\">irq</a>, void *<a class=\"id\" href=\"#dev_id\">dev_id</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtc_time\">rtc_time</a> <a class=\"id\" href=\"#curr_time\">curr_time</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#rtc_int_flag\">rtc_int_flag</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_rtc_timer_reinit\">hpet_rtc_timer_reinit</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#curr_time\">curr_time</a>, 0, sizeof(struct <a class=\"id\" href=\"#rtc_time\">rtc_time</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hpet_rtc_flags\">hpet_rtc_flags</a> &amp; (<a class=\"id\" href=\"#RTC_UIE\">RTC_UIE</a> | <a class=\"id\" href=\"#RTC_AIE\">RTC_AIE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_rtc_time\">get_rtc_time</a>(&amp;<a class=\"id\" href=\"#curr_time\">curr_time</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hpet_rtc_flags\">hpet_rtc_flags</a> &amp; <a class=\"id\" href=\"#RTC_UIE\">RTC_UIE</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#curr_time\">curr_time</a>.<a class=\"id\" href=\"#tm_sec\">tm_sec</a> != <a class=\"id\" href=\"#hpet_prev_update_sec\">hpet_prev_update_sec</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#hpet_prev_update_sec\">hpet_prev_update_sec</a> >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtc_int_flag\">rtc_int_flag</a> = <a class=\"id\" href=\"#RTC_UF\">RTC_UF</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_prev_update_sec\">hpet_prev_update_sec</a> = <a class=\"id\" href=\"#curr_time\">curr_time</a>.<a class=\"id\" href=\"#tm_sec\">tm_sec</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hpet_rtc_flags\">hpet_rtc_flags</a> &amp; <a class=\"id\" href=\"#RTC_PIE\">RTC_PIE</a> &&", 
"<span class=\"ts\"/>    ++<a class=\"id\" href=\"#hpet_pie_count\">hpet_pie_count</a> >= <a class=\"id\" href=\"#hpet_pie_limit\">hpet_pie_limit</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtc_int_flag\">rtc_int_flag</a> |= <a class=\"id\" href=\"#RTC_PF\">RTC_PF</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpet_pie_count\">hpet_pie_count</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hpet_rtc_flags\">hpet_rtc_flags</a> &amp; <a class=\"id\" href=\"#RTC_AIE\">RTC_AIE</a> &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#curr_time\">curr_time</a>.<a class=\"id\" href=\"#tm_sec\">tm_sec</a> == <a class=\"id\" href=\"#hpet_alarm_time\">hpet_alarm_time</a>.<a class=\"id\" href=\"#tm_sec\">tm_sec</a>) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#curr_time\">curr_time</a>.<a class=\"id\" href=\"#tm_min\">tm_min</a> == <a class=\"id\" href=\"#hpet_alarm_time\">hpet_alarm_time</a>.<a class=\"id\" href=\"#tm_min\">tm_min</a>) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#curr_time\">curr_time</a>.<a class=\"id\" href=\"#tm_hour\">tm_hour</a> == <a class=\"id\" href=\"#hpet_alarm_time\">hpet_alarm_time</a>.<a class=\"id\" href=\"#tm_hour\">tm_hour</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtc_int_flag\">rtc_int_flag</a> |= <a class=\"id\" href=\"#RTC_AF\">RTC_AF</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rtc_int_flag\">rtc_int_flag</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtc_int_flag\">rtc_int_flag</a> |= (<a class=\"id\" href=\"#RTC_IRQF\">RTC_IRQF</a> | (<a class=\"id\" href=\"#RTC_NUM_INTS\">RTC_NUM_INTS</a> << 8));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#irq_handler\">irq_handler</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq_handler\">irq_handler</a>(<a class=\"id\" href=\"#rtc_int_flag\">rtc_int_flag</a>, <a class=\"id\" href=\"#dev_id\">dev_id</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#IRQ_HANDLED\">IRQ_HANDLED</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#hpet_rtc_interrupt\">hpet_rtc_interrupt</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/73/1f5d594f35240a33988b635931acc85b84f259.xr', __xr_tmp);
