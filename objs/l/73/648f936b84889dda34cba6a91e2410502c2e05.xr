var __xr_tmp = [
"<span class=\"comment\">/*  Paravirtualization interfaces</span>", 
"<span class=\"comment\">    Copyright (C) 2006 Rusty Russell IBM Corporation</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">    This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\">    it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\">    the Free Software Foundation; either version 2 of the License, or</span>", 
"<span class=\"comment\">    (at your option) any later version.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">    This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\">    but WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\">    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>", 
"<span class=\"comment\">    GNU General Public License for more details.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">    You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\">    along with this program; if not, write to the Free Software</span>", 
"<span class=\"comment\">    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">    2007 - x86_64 support added by Glauber de Oliveira Costa, Red Hat Inc</span>", 
"<span class=\"comment\">*/</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#efi\">efi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bcd\">bcd</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#highmem\">highmem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#bug\">bug</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#paravirt\">paravirt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#desc\">desc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#setup\">setup</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#pgtable\">pgtable</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#pgalloc\">pgalloc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#irq\">irq</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#fixmap\">fixmap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#apic\">apic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#tlbflush\">tlbflush</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* nop stub */</span>", 
"void <a class=\"id\" href=\"#_paravirt_nop\">_paravirt_nop</a>(void)", 
"{", 
"}", 
"", 
"<span class=\"comment\">/* identity function, which can be inlined */</span>", 
"<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#_paravirt_ident_32\">_paravirt_ident_32</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#x\">x</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#x\">x</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#_paravirt_ident_64\">_paravirt_ident_64</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#x\">x</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#x\">x</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#default_banner\">default_banner</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"Booting paravirtualized kernel on %s\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#pv_info\">pv_info</a>.<a class=\"id\" href=\"#name\">name</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Simple instruction patching code. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEF_NATIVE\">DEF_NATIVE</a>(<a class=\"id\" href=\"#ops\">ops</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#code\">code</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>extern const char <a class=\"id\" href=\"#start_\">start_</a>##<a class=\"id\" href=\"#ops\">ops</a>##<a class=\"id\" href=\"#_\">_</a>##<a class=\"id\" href=\"#name\">name</a>[], <a class=\"id\" href=\"#end_\">end_</a>##<a class=\"id\" href=\"#ops\">ops</a>##<a class=\"id\" href=\"#_\">_</a>##<a class=\"id\" href=\"#name\">name</a>[];<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"start_\" #<a class=\"id\" href=\"#ops\">ops</a> \"_\" #<a class=\"id\" href=\"#name\">name</a> \": \" <a class=\"id\" href=\"#code\">code</a> \"; end_\" #<a class=\"id\" href=\"#ops\">ops</a> \"_\" #<a class=\"id\" href=\"#name\">name</a> \":\")", 
"", 
"<span class=\"comment\">/* Undefined instruction for dealing with missing ops pointers. */</span>", 
"static const unsigned char <a class=\"id\" href=\"#ud2a\">ud2a</a>[] = { 0x0f, 0x0b };", 
"", 
"unsigned <a class=\"id\" href=\"#paravirt_patch_nop\">paravirt_patch_nop</a>(void)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"unsigned <a class=\"id\" href=\"#paravirt_patch_ignore\">paravirt_patch_ignore</a>(unsigned <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#branch\">branch</a> {", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#opcode\">opcode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#delta\">delta</a>;", 
"} <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#packed\">packed</a>));", 
"", 
"unsigned <a class=\"id\" href=\"#paravirt_patch_call\">paravirt_patch_call</a>(void *<a class=\"id\" href=\"#insnbuf\">insnbuf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     const void *<a class=\"id\" href=\"#target\">target</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#tgt_clobbers\">tgt_clobbers</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned long <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#site_clobbers\">site_clobbers</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#branch\">branch</a> *<a class=\"id\" href=\"#b\">b</a> = <a class=\"id\" href=\"#insnbuf\">insnbuf</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#delta\">delta</a> = (unsigned long)<a class=\"id\" href=\"#target\">target</a> - (<a class=\"id\" href=\"#addr\">addr</a>+5);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tgt_clobbers\">tgt_clobbers</a> &amp; ~<a class=\"id\" href=\"#site_clobbers\">site_clobbers</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a>;<span class=\"ts\"/><span class=\"comment\">/* target would clobber too much for this site */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &lt; 5)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a>;<span class=\"ts\"/><span class=\"comment\">/* call too long for patch site */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#opcode\">opcode</a> = 0xe8; <span class=\"comment\">/* call */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#delta\">delta</a> = <a class=\"id\" href=\"#delta\">delta</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(sizeof(*<a class=\"id\" href=\"#b\">b</a>) != 5);", 
"", 
"<span class=\"ts\"/>return 5;", 
"}", 
"", 
"unsigned <a class=\"id\" href=\"#paravirt_patch_jmp\">paravirt_patch_jmp</a>(void *<a class=\"id\" href=\"#insnbuf\">insnbuf</a>, const void *<a class=\"id\" href=\"#target\">target</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    unsigned long <a class=\"id\" href=\"#addr\">addr</a>, unsigned <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#branch\">branch</a> *<a class=\"id\" href=\"#b\">b</a> = <a class=\"id\" href=\"#insnbuf\">insnbuf</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#delta\">delta</a> = (unsigned long)<a class=\"id\" href=\"#target\">target</a> - (<a class=\"id\" href=\"#addr\">addr</a>+5);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &lt; 5)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a>;<span class=\"ts\"/><span class=\"comment\">/* call too long for patch site */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#opcode\">opcode</a> = 0xe9;<span class=\"ts\"/><span class=\"comment\">/* jmp */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#delta\">delta</a> = <a class=\"id\" href=\"#delta\">delta</a>;", 
"", 
"<span class=\"ts\"/>return 5;", 
"}", 
"", 
"<span class=\"comment\">/* Neat trick to map patch type back to the call within the</span>", 
"<span class=\"comment\"> * corresponding structure. */</span>", 
"static void *<a class=\"id\" href=\"#get_call_destination\">get_call_destination</a>(<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#paravirt_patch_template\">paravirt_patch_template</a> <a class=\"id\" href=\"#tmpl\">tmpl</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#pv_init_ops\">pv_init_ops</a> = <a class=\"id\" href=\"#pv_init_ops\">pv_init_ops</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#pv_time_ops\">pv_time_ops</a> = <a class=\"id\" href=\"#pv_time_ops\">pv_time_ops</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#pv_cpu_ops\">pv_cpu_ops</a> = <a class=\"id\" href=\"#pv_cpu_ops\">pv_cpu_ops</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#pv_irq_ops\">pv_irq_ops</a> = <a class=\"id\" href=\"#pv_irq_ops\">pv_irq_ops</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#pv_apic_ops\">pv_apic_ops</a> = <a class=\"id\" href=\"#pv_apic_ops\">pv_apic_ops</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#pv_mmu_ops\">pv_mmu_ops</a> = <a class=\"id\" href=\"#pv_mmu_ops\">pv_mmu_ops</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PARAVIRT_SPINLOCKS\">CONFIG_PARAVIRT_SPINLOCKS</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#pv_lock_ops\">pv_lock_ops</a> = <a class=\"id\" href=\"#pv_lock_ops\">pv_lock_ops</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>};", 
"<span class=\"ts\"/>return *((void **)&amp;<a class=\"id\" href=\"#tmpl\">tmpl</a> + <a class=\"id\" href=\"#type\">type</a>);", 
"}", 
"", 
"unsigned <a class=\"id\" href=\"#paravirt_patch_default\">paravirt_patch_default</a>(<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#clobbers\">clobbers</a>, void *<a class=\"id\" href=\"#insnbuf\">insnbuf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#addr\">addr</a>, unsigned <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#opfunc\">opfunc</a> = <a class=\"id\" href=\"#get_call_destination\">get_call_destination</a>(<a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#opfunc\">opfunc</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If there's no function, patch it with a ud2a (BUG) */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#paravirt_patch_insns\">paravirt_patch_insns</a>(<a class=\"id\" href=\"#insnbuf\">insnbuf</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#ud2a\">ud2a</a>, <a class=\"id\" href=\"#ud2a\">ud2a</a>+sizeof(<a class=\"id\" href=\"#ud2a\">ud2a</a>));", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#opfunc\">opfunc</a> == <a class=\"id\" href=\"#_paravirt_nop\">_paravirt_nop</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If the operation is a nop, then nop the callsite */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#paravirt_patch_nop\">paravirt_patch_nop</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* identity functions just return their single argument */</span>", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#opfunc\">opfunc</a> == <a class=\"id\" href=\"#_paravirt_ident_32\">_paravirt_ident_32</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#paravirt_patch_ident_32\">paravirt_patch_ident_32</a>(<a class=\"id\" href=\"#insnbuf\">insnbuf</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#opfunc\">opfunc</a> == <a class=\"id\" href=\"#_paravirt_ident_64\">_paravirt_ident_64</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#paravirt_patch_ident_64\">paravirt_patch_ident_64</a>(<a class=\"id\" href=\"#insnbuf\">insnbuf</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#PARAVIRT_PATCH\">PARAVIRT_PATCH</a>(<a class=\"id\" href=\"#pv_cpu_ops\">pv_cpu_ops</a>.<a class=\"id\" href=\"#iret\">iret</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#PARAVIRT_PATCH\">PARAVIRT_PATCH</a>(<a class=\"id\" href=\"#pv_cpu_ops\">pv_cpu_ops</a>.<a class=\"id\" href=\"#irq_enable_sysexit\">irq_enable_sysexit</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#PARAVIRT_PATCH\">PARAVIRT_PATCH</a>(<a class=\"id\" href=\"#pv_cpu_ops\">pv_cpu_ops</a>.<a class=\"id\" href=\"#usergs_sysret32\">usergs_sysret32</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#PARAVIRT_PATCH\">PARAVIRT_PATCH</a>(<a class=\"id\" href=\"#pv_cpu_ops\">pv_cpu_ops</a>.<a class=\"id\" href=\"#usergs_sysret64\">usergs_sysret64</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If operation requires a jmp, then jmp */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#paravirt_patch_jmp\">paravirt_patch_jmp</a>(<a class=\"id\" href=\"#insnbuf\">insnbuf</a>, <a class=\"id\" href=\"#opfunc\">opfunc</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Otherwise call the function; assume target could</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   clobber any caller-save reg */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#paravirt_patch_call\">paravirt_patch_call</a>(<a class=\"id\" href=\"#insnbuf\">insnbuf</a>, <a class=\"id\" href=\"#opfunc\">opfunc</a>, <a class=\"id\" href=\"#CLBR_ANY\">CLBR_ANY</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#clobbers\">clobbers</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"unsigned <a class=\"id\" href=\"#paravirt_patch_insns\">paravirt_patch_insns</a>(void *<a class=\"id\" href=\"#insnbuf\">insnbuf</a>, unsigned <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      const char *<a class=\"id\" href=\"#start\">start</a>, const char *<a class=\"id\" href=\"#end\">end</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#insn_len\">insn_len</a> = <a class=\"id\" href=\"#end\">end</a> - <a class=\"id\" href=\"#start\">start</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#insn_len\">insn_len</a> &gt; <a class=\"id\" href=\"#len\">len</a> || <a class=\"id\" href=\"#start\">start</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#insn_len\">insn_len</a> = <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#insnbuf\">insnbuf</a>, <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#insn_len\">insn_len</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#insn_len\">insn_len</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#native_flush_tlb\">native_flush_tlb</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__native_flush_tlb\">__native_flush_tlb</a>();", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Global pages have to be flushed a bit differently. Not a real</span>", 
"<span class=\"comment\"> * performance problem because this does not happen often.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#native_flush_tlb_global\">native_flush_tlb_global</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__native_flush_tlb_global\">__native_flush_tlb_global</a>();", 
"}", 
"", 
"static void <a class=\"id\" href=\"#native_flush_tlb_single\">native_flush_tlb_single</a>(unsigned long <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__native_flush_tlb_single\">__native_flush_tlb_single</a>(<a class=\"id\" href=\"#addr\">addr</a>);", 
"}", 
"", 
"<span class=\"comment\">/* These are in entry.S */</span>", 
"extern void <a class=\"id\" href=\"#native_iret\">native_iret</a>(void);", 
"extern void <a class=\"id\" href=\"#native_irq_enable_sysexit\">native_irq_enable_sysexit</a>(void);", 
"extern void <a class=\"id\" href=\"#native_usergs_sysret32\">native_usergs_sysret32</a>(void);", 
"extern void <a class=\"id\" href=\"#native_usergs_sysret64\">native_usergs_sysret64</a>(void);", 
"", 
"static struct <a class=\"id\" href=\"#resource\">resource</a> <a class=\"id\" href=\"#reserve_ioports\">reserve_ioports</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a> = 0,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#IO_SPACE_LIMIT\">IO_SPACE_LIMIT</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a> = \"paravirt-ioport\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#IORESOURCE_IO\">IORESOURCE_IO</a> | <a class=\"id\" href=\"#IORESOURCE_BUSY\">IORESOURCE_BUSY</a>,", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Reserve the whole legacy IO space to prevent any legacy drivers</span>", 
"<span class=\"comment\"> * from wasting time probing for their hardware.  This is a fairly</span>", 
"<span class=\"comment\"> * brute-force approach to disabling all non-virtual drivers.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Note that this must be called very early to have any effect.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#paravirt_disable_iospace\">paravirt_disable_iospace</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#request_resource\">request_resource</a>(&amp;<a class=\"id\" href=\"#ioport_resource\">ioport_resource</a>, &amp;<a class=\"id\" href=\"#reserve_ioports\">reserve_ioports</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(enum <a class=\"id\" href=\"#paravirt_lazy_mode\">paravirt_lazy_mode</a>, <a class=\"id\" href=\"#paravirt_lazy_mode\">paravirt_lazy_mode</a>) = <a class=\"id\" href=\"#PARAVIRT_LAZY_NONE\">PARAVIRT_LAZY_NONE</a>;", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#enter_lazy\">enter_lazy</a>(enum <a class=\"id\" href=\"#paravirt_lazy_mode\">paravirt_lazy_mode</a> <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#percpu_read\">percpu_read</a>(<a class=\"id\" href=\"#paravirt_lazy_mode\">paravirt_lazy_mode</a>) != <a class=\"id\" href=\"#PARAVIRT_LAZY_NONE\">PARAVIRT_LAZY_NONE</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#percpu_write\">percpu_write</a>(<a class=\"id\" href=\"#paravirt_lazy_mode\">paravirt_lazy_mode</a>, <a class=\"id\" href=\"#mode\">mode</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#leave_lazy\">leave_lazy</a>(enum <a class=\"id\" href=\"#paravirt_lazy_mode\">paravirt_lazy_mode</a> <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#percpu_read\">percpu_read</a>(<a class=\"id\" href=\"#paravirt_lazy_mode\">paravirt_lazy_mode</a>) != <a class=\"id\" href=\"#mode\">mode</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#percpu_write\">percpu_write</a>(<a class=\"id\" href=\"#paravirt_lazy_mode\">paravirt_lazy_mode</a>, <a class=\"id\" href=\"#PARAVIRT_LAZY_NONE\">PARAVIRT_LAZY_NONE</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#paravirt_enter_lazy_mmu\">paravirt_enter_lazy_mmu</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#enter_lazy\">enter_lazy</a>(<a class=\"id\" href=\"#PARAVIRT_LAZY_MMU\">PARAVIRT_LAZY_MMU</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#paravirt_leave_lazy_mmu\">paravirt_leave_lazy_mmu</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#leave_lazy\">leave_lazy</a>(<a class=\"id\" href=\"#PARAVIRT_LAZY_MMU\">PARAVIRT_LAZY_MMU</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#paravirt_start_context_switch\">paravirt_start_context_switch</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#prev\">prev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#preemptible\">preemptible</a>());", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#percpu_read\">percpu_read</a>(<a class=\"id\" href=\"#paravirt_lazy_mode\">paravirt_lazy_mode</a>) == <a class=\"id\" href=\"#PARAVIRT_LAZY_MMU\">PARAVIRT_LAZY_MMU</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arch_leave_lazy_mmu_mode\">arch_leave_lazy_mmu_mode</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_ti_thread_flag\">set_ti_thread_flag</a>(<a class=\"id\" href=\"#task_thread_info\">task_thread_info</a>(<a class=\"id\" href=\"#prev\">prev</a>), <a class=\"id\" href=\"#TIF_LAZY_MMU_UPDATES\">TIF_LAZY_MMU_UPDATES</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#enter_lazy\">enter_lazy</a>(<a class=\"id\" href=\"#PARAVIRT_LAZY_CPU\">PARAVIRT_LAZY_CPU</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#paravirt_end_context_switch\">paravirt_end_context_switch</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#next\">next</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#preemptible\">preemptible</a>());", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#leave_lazy\">leave_lazy</a>(<a class=\"id\" href=\"#PARAVIRT_LAZY_CPU\">PARAVIRT_LAZY_CPU</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_and_clear_ti_thread_flag\">test_and_clear_ti_thread_flag</a>(<a class=\"id\" href=\"#task_thread_info\">task_thread_info</a>(<a class=\"id\" href=\"#next\">next</a>), <a class=\"id\" href=\"#TIF_LAZY_MMU_UPDATES\">TIF_LAZY_MMU_UPDATES</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arch_enter_lazy_mmu_mode\">arch_enter_lazy_mmu_mode</a>();", 
"}", 
"", 
"enum <a class=\"id\" href=\"#paravirt_lazy_mode\">paravirt_lazy_mode</a> <a class=\"id\" href=\"#paravirt_get_lazy_mode\">paravirt_get_lazy_mode</a>(void)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#in_interrupt\">in_interrupt</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PARAVIRT_LAZY_NONE\">PARAVIRT_LAZY_NONE</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#percpu_read\">percpu_read</a>(<a class=\"id\" href=\"#paravirt_lazy_mode\">paravirt_lazy_mode</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#arch_flush_lazy_mmu_mode\">arch_flush_lazy_mmu_mode</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#preempt_disable\">preempt_disable</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#paravirt_get_lazy_mode\">paravirt_get_lazy_mode</a>() == <a class=\"id\" href=\"#PARAVIRT_LAZY_MMU\">PARAVIRT_LAZY_MMU</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arch_leave_lazy_mmu_mode\">arch_leave_lazy_mmu_mode</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arch_enter_lazy_mmu_mode\">arch_enter_lazy_mmu_mode</a>();", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#preempt_enable\">preempt_enable</a>();", 
"}", 
"", 
"struct <a class=\"id\" href=\"#pv_info\">pv_info</a> <a class=\"id\" href=\"#pv_info\">pv_info</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a> = \"bare hardware\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#paravirt_enabled\">paravirt_enabled</a> = 0,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#kernel_rpl\">kernel_rpl</a> = 0,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#shared_kernel_pmd\">shared_kernel_pmd</a> = 1,<span class=\"ts\"/><span class=\"comment\">/* Only used when CONFIG_X86_PAE is set */</span>", 
"};", 
"", 
"struct <a class=\"id\" href=\"#pv_init_ops\">pv_init_ops</a> <a class=\"id\" href=\"#pv_init_ops\">pv_init_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#patch\">patch</a> = <a class=\"id\" href=\"#native_patch\">native_patch</a>,", 
"};", 
"", 
"struct <a class=\"id\" href=\"#pv_time_ops\">pv_time_ops</a> <a class=\"id\" href=\"#pv_time_ops\">pv_time_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sched_clock\">sched_clock</a> = <a class=\"id\" href=\"#native_sched_clock\">native_sched_clock</a>,", 
"};", 
"", 
"struct <a class=\"id\" href=\"#pv_irq_ops\">pv_irq_ops</a> <a class=\"id\" href=\"#pv_irq_ops\">pv_irq_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#save_fl\">save_fl</a> = <a class=\"id\" href=\"#__PV_IS_CALLEE_SAVE\">__PV_IS_CALLEE_SAVE</a>(<a class=\"id\" href=\"#native_save_fl\">native_save_fl</a>),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#restore_fl\">restore_fl</a> = <a class=\"id\" href=\"#__PV_IS_CALLEE_SAVE\">__PV_IS_CALLEE_SAVE</a>(<a class=\"id\" href=\"#native_restore_fl\">native_restore_fl</a>),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#irq_disable\">irq_disable</a> = <a class=\"id\" href=\"#__PV_IS_CALLEE_SAVE\">__PV_IS_CALLEE_SAVE</a>(<a class=\"id\" href=\"#native_irq_disable\">native_irq_disable</a>),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#irq_enable\">irq_enable</a> = <a class=\"id\" href=\"#__PV_IS_CALLEE_SAVE\">__PV_IS_CALLEE_SAVE</a>(<a class=\"id\" href=\"#native_irq_enable\">native_irq_enable</a>),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#safe_halt\">safe_halt</a> = <a class=\"id\" href=\"#native_safe_halt\">native_safe_halt</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#halt\">halt</a> = <a class=\"id\" href=\"#native_halt\">native_halt</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#adjust_exception_frame\">adjust_exception_frame</a> = <a class=\"id\" href=\"#paravirt_nop\">paravirt_nop</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"struct <a class=\"id\" href=\"#pv_cpu_ops\">pv_cpu_ops</a> <a class=\"id\" href=\"#pv_cpu_ops\">pv_cpu_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#cpuid\">cpuid</a> = <a class=\"id\" href=\"#native_cpuid\">native_cpuid</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#get_debugreg\">get_debugreg</a> = <a class=\"id\" href=\"#native_get_debugreg\">native_get_debugreg</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_debugreg\">set_debugreg</a> = <a class=\"id\" href=\"#native_set_debugreg\">native_set_debugreg</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#clts\">clts</a> = <a class=\"id\" href=\"#native_clts\">native_clts</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read_cr0\">read_cr0</a> = <a class=\"id\" href=\"#native_read_cr0\">native_read_cr0</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write_cr0\">write_cr0</a> = <a class=\"id\" href=\"#native_write_cr0\">native_write_cr0</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read_cr4\">read_cr4</a> = <a class=\"id\" href=\"#native_read_cr4\">native_read_cr4</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read_cr4_safe\">read_cr4_safe</a> = <a class=\"id\" href=\"#native_read_cr4_safe\">native_read_cr4_safe</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write_cr4\">write_cr4</a> = <a class=\"id\" href=\"#native_write_cr4\">native_write_cr4</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read_cr8\">read_cr8</a> = <a class=\"id\" href=\"#native_read_cr8\">native_read_cr8</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write_cr8\">write_cr8</a> = <a class=\"id\" href=\"#native_write_cr8\">native_write_cr8</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#wbinvd\">wbinvd</a> = <a class=\"id\" href=\"#native_wbinvd\">native_wbinvd</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read_msr\">read_msr</a> = <a class=\"id\" href=\"#native_read_msr_safe\">native_read_msr_safe</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#rdmsr_regs\">rdmsr_regs</a> = <a class=\"id\" href=\"#native_rdmsr_safe_regs\">native_rdmsr_safe_regs</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write_msr\">write_msr</a> = <a class=\"id\" href=\"#native_write_msr_safe\">native_write_msr_safe</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#wrmsr_regs\">wrmsr_regs</a> = <a class=\"id\" href=\"#native_wrmsr_safe_regs\">native_wrmsr_safe_regs</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read_tsc\">read_tsc</a> = <a class=\"id\" href=\"#native_read_tsc\">native_read_tsc</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read_pmc\">read_pmc</a> = <a class=\"id\" href=\"#native_read_pmc\">native_read_pmc</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read_tscp\">read_tscp</a> = <a class=\"id\" href=\"#native_read_tscp\">native_read_tscp</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#load_tr_desc\">load_tr_desc</a> = <a class=\"id\" href=\"#native_load_tr_desc\">native_load_tr_desc</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_ldt\">set_ldt</a> = <a class=\"id\" href=\"#native_set_ldt\">native_set_ldt</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#load_gdt\">load_gdt</a> = <a class=\"id\" href=\"#native_load_gdt\">native_load_gdt</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#load_idt\">load_idt</a> = <a class=\"id\" href=\"#native_load_idt\">native_load_idt</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#store_gdt\">store_gdt</a> = <a class=\"id\" href=\"#native_store_gdt\">native_store_gdt</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#store_idt\">store_idt</a> = <a class=\"id\" href=\"#native_store_idt\">native_store_idt</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#store_tr\">store_tr</a> = <a class=\"id\" href=\"#native_store_tr\">native_store_tr</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#load_tls\">load_tls</a> = <a class=\"id\" href=\"#native_load_tls\">native_load_tls</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#load_gs_index\">load_gs_index</a> = <a class=\"id\" href=\"#native_load_gs_index\">native_load_gs_index</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write_ldt_entry\">write_ldt_entry</a> = <a class=\"id\" href=\"#native_write_ldt_entry\">native_write_ldt_entry</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write_gdt_entry\">write_gdt_entry</a> = <a class=\"id\" href=\"#native_write_gdt_entry\">native_write_gdt_entry</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write_idt_entry\">write_idt_entry</a> = <a class=\"id\" href=\"#native_write_idt_entry\">native_write_idt_entry</a>,", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#alloc_ldt\">alloc_ldt</a> = <a class=\"id\" href=\"#paravirt_nop\">paravirt_nop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#free_ldt\">free_ldt</a> = <a class=\"id\" href=\"#paravirt_nop\">paravirt_nop</a>,", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#load_sp0\">load_sp0</a> = <a class=\"id\" href=\"#native_load_sp0\">native_load_sp0</a>,", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IA32_EMULATION\">CONFIG_IA32_EMULATION</a>)", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#irq_enable_sysexit\">irq_enable_sysexit</a> = <a class=\"id\" href=\"#native_irq_enable_sysexit\">native_irq_enable_sysexit</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IA32_EMULATION\">CONFIG_IA32_EMULATION</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#usergs_sysret32\">usergs_sysret32</a> = <a class=\"id\" href=\"#native_usergs_sysret32\">native_usergs_sysret32</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#usergs_sysret64\">usergs_sysret64</a> = <a class=\"id\" href=\"#native_usergs_sysret64\">native_usergs_sysret64</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#iret\">iret</a> = <a class=\"id\" href=\"#native_iret\">native_iret</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#swapgs\">swapgs</a> = <a class=\"id\" href=\"#native_swapgs\">native_swapgs</a>,", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_iopl_mask\">set_iopl_mask</a> = <a class=\"id\" href=\"#native_set_iopl_mask\">native_set_iopl_mask</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#io_delay\">io_delay</a> = <a class=\"id\" href=\"#native_io_delay\">native_io_delay</a>,", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start_context_switch\">start_context_switch</a> = <a class=\"id\" href=\"#paravirt_nop\">paravirt_nop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#end_context_switch\">end_context_switch</a> = <a class=\"id\" href=\"#paravirt_nop\">paravirt_nop</a>,", 
"};", 
"", 
"struct <a class=\"id\" href=\"#pv_apic_ops\">pv_apic_ops</a> <a class=\"id\" href=\"#pv_apic_ops\">pv_apic_ops</a> = {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_LOCAL_APIC\">CONFIG_X86_LOCAL_APIC</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#startup_ipi_hook\">startup_ipi_hook</a> = <a class=\"id\" href=\"#paravirt_nop\">paravirt_nop</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>) && !<a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_X86_PAE\">CONFIG_X86_PAE</a>)", 
"<span class=\"comment\">/* 32-bit pagetable entries */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PTE_IDENT\">PTE_IDENT</a><span class=\"ts\"/><a class=\"id\" href=\"#__PV_IS_CALLEE_SAVE\">__PV_IS_CALLEE_SAVE</a>(<a class=\"id\" href=\"#_paravirt_ident_32\">_paravirt_ident_32</a>)", 
"#else", 
"<span class=\"comment\">/* 64-bit pagetable entries */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PTE_IDENT\">PTE_IDENT</a><span class=\"ts\"/><a class=\"id\" href=\"#__PV_IS_CALLEE_SAVE\">__PV_IS_CALLEE_SAVE</a>(<a class=\"id\" href=\"#_paravirt_ident_64\">_paravirt_ident_64</a>)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"struct <a class=\"id\" href=\"#pv_mmu_ops\">pv_mmu_ops</a> <a class=\"id\" href=\"#pv_mmu_ops\">pv_mmu_ops</a> = {", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read_cr2\">read_cr2</a> = <a class=\"id\" href=\"#native_read_cr2\">native_read_cr2</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write_cr2\">write_cr2</a> = <a class=\"id\" href=\"#native_write_cr2\">native_write_cr2</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read_cr3\">read_cr3</a> = <a class=\"id\" href=\"#native_read_cr3\">native_read_cr3</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write_cr3\">write_cr3</a> = <a class=\"id\" href=\"#native_write_cr3\">native_write_cr3</a>,", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#flush_tlb_user\">flush_tlb_user</a> = <a class=\"id\" href=\"#native_flush_tlb\">native_flush_tlb</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#flush_tlb_kernel\">flush_tlb_kernel</a> = <a class=\"id\" href=\"#native_flush_tlb_global\">native_flush_tlb_global</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#flush_tlb_single\">flush_tlb_single</a> = <a class=\"id\" href=\"#native_flush_tlb_single\">native_flush_tlb_single</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#flush_tlb_others\">flush_tlb_others</a> = <a class=\"id\" href=\"#native_flush_tlb_others\">native_flush_tlb_others</a>,", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#pgd_alloc\">pgd_alloc</a> = <a class=\"id\" href=\"#__paravirt_pgd_alloc\">__paravirt_pgd_alloc</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#pgd_free\">pgd_free</a> = <a class=\"id\" href=\"#paravirt_nop\">paravirt_nop</a>,", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#alloc_pte\">alloc_pte</a> = <a class=\"id\" href=\"#paravirt_nop\">paravirt_nop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#alloc_pmd\">alloc_pmd</a> = <a class=\"id\" href=\"#paravirt_nop\">paravirt_nop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#alloc_pmd_clone\">alloc_pmd_clone</a> = <a class=\"id\" href=\"#paravirt_nop\">paravirt_nop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#alloc_pud\">alloc_pud</a> = <a class=\"id\" href=\"#paravirt_nop\">paravirt_nop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release_pte\">release_pte</a> = <a class=\"id\" href=\"#paravirt_nop\">paravirt_nop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release_pmd\">release_pmd</a> = <a class=\"id\" href=\"#paravirt_nop\">paravirt_nop</a>,", 
];
xr_frag_insert('l/73/648f936b84889dda34cba6a91e2410502c2e05.xr', __xr_tmp);
