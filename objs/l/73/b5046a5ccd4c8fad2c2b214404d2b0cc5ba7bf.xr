var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *      sd.c Copyright (C) 1992 Drew Eckhardt</span>", 
"<span class=\"comment\"> *           Copyright (C) 1993, 1994, 1995, 1999 Eric Youngdale</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *      Linux scsi disk driver</span>", 
"<span class=\"comment\"> *              Initial versions: Drew Eckhardt</span>", 
"<span class=\"comment\"> *              Subsequent revisions: Eric Youngdale</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Modification history:</span>", 
"<span class=\"comment\"> *       - Drew Eckhardt &lt;drew@colorado.edu&gt; original</span>", 
"<span class=\"comment\"> *       - Eric Youngdale &lt;eric@andante.org&gt; add scatter-gather, multiple </span>", 
"<span class=\"comment\"> *         outstanding request, and other enhancements.</span>", 
"<span class=\"comment\"> *         Support loadable low-level scsi drivers.</span>", 
"<span class=\"comment\"> *       - Jirka Hanika &lt;geo@ff.cuni.cz&gt; support more scsi disks using </span>", 
"<span class=\"comment\"> *         eight major numbers.</span>", 
"<span class=\"comment\"> *       - Richard Gooch &lt;rgooch@atnf.csiro.au&gt; support devfs.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/> - Torben Mathiasen &lt;tmm@image.dk&gt; Resource allocation fixes in </span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>   sd_init and cleanups.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/> - Alex Davis &lt;letmein@erols.com&gt; Fix problem where partition info</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>   not being read in sd_open. Fix problem where removable media </span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>   could be ejected after sd_open.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/> - Douglas Gilbert &lt;dgilbert@interlog.com&gt; cleanup for lk 2.5.x</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/> - Badari Pulavarty &lt;pbadari@us.ibm.com&gt;, Matthew Wilcox </span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>   &lt;willy@debian.org&gt;, Kurt Garloff &lt;garloff@suse.de&gt;: </span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>   Support 32k/1M disks.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Logging policy (needs CONFIG_SCSI_LOGGING defined):</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/> - setting up transfer: SCSI_LOG_HLQUEUE levels 1 and 2</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/> - end of transfer (bh + scsi_lib): SCSI_LOG_HLCOMPLETE level 1</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/> - entering sd_ioctl: SCSI_LOG_IOCTL level 1</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/> - entering other commands: SCSI_LOG_HLQUEUE level 3</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Note: when the logging level is set by the user, it must be greater</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>than the level indicated above to trigger output.<span class=\"ts\"/></span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bio\">bio</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#genhd\">genhd</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#hdreg\">hdreg</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#idr\">idr</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blkdev\">blkdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blkpg\">blkpg</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#smp_lock\">smp_lock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mutex\">mutex</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string_helpers\">string_helpers</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#async\">async</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#unaligned\">unaligned</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi\">scsi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_dbg\">scsi_dbg</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_device\">scsi_device</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_driver\">scsi_driver</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_eh\">scsi_eh</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_host\">scsi_host</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_ioctl\">scsi_ioctl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsicam\">scsicam</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"sd.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"scsi_logging.h\"", 
"", 
"<a class=\"id\" href=\"#MODULE_AUTHOR\">MODULE_AUTHOR</a>(\"Eric Youngdale\");", 
"<a class=\"id\" href=\"#MODULE_DESCRIPTION\">MODULE_DESCRIPTION</a>(\"SCSI disk (sd) driver\");", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
"", 
"<a class=\"id\" href=\"#MODULE_ALIAS_BLOCKDEV_MAJOR\">MODULE_ALIAS_BLOCKDEV_MAJOR</a>(<a class=\"id\" href=\"#SCSI_DISK0_MAJOR\">SCSI_DISK0_MAJOR</a>);", 
"<a class=\"id\" href=\"#MODULE_ALIAS_BLOCKDEV_MAJOR\">MODULE_ALIAS_BLOCKDEV_MAJOR</a>(<a class=\"id\" href=\"#SCSI_DISK1_MAJOR\">SCSI_DISK1_MAJOR</a>);", 
"<a class=\"id\" href=\"#MODULE_ALIAS_BLOCKDEV_MAJOR\">MODULE_ALIAS_BLOCKDEV_MAJOR</a>(<a class=\"id\" href=\"#SCSI_DISK2_MAJOR\">SCSI_DISK2_MAJOR</a>);", 
"<a class=\"id\" href=\"#MODULE_ALIAS_BLOCKDEV_MAJOR\">MODULE_ALIAS_BLOCKDEV_MAJOR</a>(<a class=\"id\" href=\"#SCSI_DISK3_MAJOR\">SCSI_DISK3_MAJOR</a>);", 
"<a class=\"id\" href=\"#MODULE_ALIAS_BLOCKDEV_MAJOR\">MODULE_ALIAS_BLOCKDEV_MAJOR</a>(<a class=\"id\" href=\"#SCSI_DISK4_MAJOR\">SCSI_DISK4_MAJOR</a>);", 
"<a class=\"id\" href=\"#MODULE_ALIAS_BLOCKDEV_MAJOR\">MODULE_ALIAS_BLOCKDEV_MAJOR</a>(<a class=\"id\" href=\"#SCSI_DISK5_MAJOR\">SCSI_DISK5_MAJOR</a>);", 
"<a class=\"id\" href=\"#MODULE_ALIAS_BLOCKDEV_MAJOR\">MODULE_ALIAS_BLOCKDEV_MAJOR</a>(<a class=\"id\" href=\"#SCSI_DISK6_MAJOR\">SCSI_DISK6_MAJOR</a>);", 
"<a class=\"id\" href=\"#MODULE_ALIAS_BLOCKDEV_MAJOR\">MODULE_ALIAS_BLOCKDEV_MAJOR</a>(<a class=\"id\" href=\"#SCSI_DISK7_MAJOR\">SCSI_DISK7_MAJOR</a>);", 
"<a class=\"id\" href=\"#MODULE_ALIAS_BLOCKDEV_MAJOR\">MODULE_ALIAS_BLOCKDEV_MAJOR</a>(<a class=\"id\" href=\"#SCSI_DISK8_MAJOR\">SCSI_DISK8_MAJOR</a>);", 
"<a class=\"id\" href=\"#MODULE_ALIAS_BLOCKDEV_MAJOR\">MODULE_ALIAS_BLOCKDEV_MAJOR</a>(<a class=\"id\" href=\"#SCSI_DISK9_MAJOR\">SCSI_DISK9_MAJOR</a>);", 
"<a class=\"id\" href=\"#MODULE_ALIAS_BLOCKDEV_MAJOR\">MODULE_ALIAS_BLOCKDEV_MAJOR</a>(<a class=\"id\" href=\"#SCSI_DISK10_MAJOR\">SCSI_DISK10_MAJOR</a>);", 
"<a class=\"id\" href=\"#MODULE_ALIAS_BLOCKDEV_MAJOR\">MODULE_ALIAS_BLOCKDEV_MAJOR</a>(<a class=\"id\" href=\"#SCSI_DISK11_MAJOR\">SCSI_DISK11_MAJOR</a>);", 
"<a class=\"id\" href=\"#MODULE_ALIAS_BLOCKDEV_MAJOR\">MODULE_ALIAS_BLOCKDEV_MAJOR</a>(<a class=\"id\" href=\"#SCSI_DISK12_MAJOR\">SCSI_DISK12_MAJOR</a>);", 
"<a class=\"id\" href=\"#MODULE_ALIAS_BLOCKDEV_MAJOR\">MODULE_ALIAS_BLOCKDEV_MAJOR</a>(<a class=\"id\" href=\"#SCSI_DISK13_MAJOR\">SCSI_DISK13_MAJOR</a>);", 
"<a class=\"id\" href=\"#MODULE_ALIAS_BLOCKDEV_MAJOR\">MODULE_ALIAS_BLOCKDEV_MAJOR</a>(<a class=\"id\" href=\"#SCSI_DISK14_MAJOR\">SCSI_DISK14_MAJOR</a>);", 
"<a class=\"id\" href=\"#MODULE_ALIAS_BLOCKDEV_MAJOR\">MODULE_ALIAS_BLOCKDEV_MAJOR</a>(<a class=\"id\" href=\"#SCSI_DISK15_MAJOR\">SCSI_DISK15_MAJOR</a>);", 
"<a class=\"id\" href=\"#MODULE_ALIAS_SCSI_DEVICE\">MODULE_ALIAS_SCSI_DEVICE</a>(<a class=\"id\" href=\"#TYPE_DISK\">TYPE_DISK</a>);", 
"<a class=\"id\" href=\"#MODULE_ALIAS_SCSI_DEVICE\">MODULE_ALIAS_SCSI_DEVICE</a>(<a class=\"id\" href=\"#TYPE_MOD\">TYPE_MOD</a>);", 
"<a class=\"id\" href=\"#MODULE_ALIAS_SCSI_DEVICE\">MODULE_ALIAS_SCSI_DEVICE</a>(<a class=\"id\" href=\"#TYPE_RBC\">TYPE_RBC</a>);", 
"", 
"#if !<a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_DEBUG_BLOCK_EXT_DEVT\">CONFIG_DEBUG_BLOCK_EXT_DEVT</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SD_MINORS\">SD_MINORS</a><span class=\"ts\"/>16", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SD_MINORS\">SD_MINORS</a><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static int  <a class=\"id\" href=\"#sd_revalidate_disk\">sd_revalidate_disk</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *);", 
"static void <a class=\"id\" href=\"#sd_unlock_native_capacity\">sd_unlock_native_capacity</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>);", 
"static int  <a class=\"id\" href=\"#sd_probe\">sd_probe</a>(struct <a class=\"id\" href=\"#device\">device</a> *);", 
"static int  <a class=\"id\" href=\"#sd_remove\">sd_remove</a>(struct <a class=\"id\" href=\"#device\">device</a> *);", 
"static void <a class=\"id\" href=\"#sd_shutdown\">sd_shutdown</a>(struct <a class=\"id\" href=\"#device\">device</a> *);", 
"static int <a class=\"id\" href=\"#sd_suspend\">sd_suspend</a>(struct <a class=\"id\" href=\"#device\">device</a> *, <a class=\"id\" href=\"#pm_message_t\">pm_message_t</a> <a class=\"id\" href=\"#state\">state</a>);", 
"static int <a class=\"id\" href=\"#sd_resume\">sd_resume</a>(struct <a class=\"id\" href=\"#device\">device</a> *);", 
"static void <a class=\"id\" href=\"#sd_rescan\">sd_rescan</a>(struct <a class=\"id\" href=\"#device\">device</a> *);", 
"static int <a class=\"id\" href=\"#sd_done\">sd_done</a>(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *);", 
"static void <a class=\"id\" href=\"#sd_read_capacity\">sd_read_capacity</a>(struct <a class=\"id\" href=\"#scsi_disk\">scsi_disk</a> *<a class=\"id\" href=\"#sdkp\">sdkp</a>, unsigned char *<a class=\"id\" href=\"#buffer\">buffer</a>);", 
"static void <a class=\"id\" href=\"#scsi_disk_release\">scsi_disk_release</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#cdev\">cdev</a>);", 
"static void <a class=\"id\" href=\"#sd_print_sense_hdr\">sd_print_sense_hdr</a>(struct <a class=\"id\" href=\"#scsi_disk\">scsi_disk</a> *, struct <a class=\"id\" href=\"#scsi_sense_hdr\">scsi_sense_hdr</a> *);", 
"static void <a class=\"id\" href=\"#sd_print_result\">sd_print_result</a>(struct <a class=\"id\" href=\"#scsi_disk\">scsi_disk</a> *, int);", 
"", 
"static <a class=\"id\" href=\"#DEFINE_SPINLOCK\">DEFINE_SPINLOCK</a>(<a class=\"id\" href=\"#sd_index_lock\">sd_index_lock</a>);", 
"static <a class=\"id\" href=\"#DEFINE_IDA\">DEFINE_IDA</a>(<a class=\"id\" href=\"#sd_index_ida\">sd_index_ida</a>);", 
"", 
"<span class=\"comment\">/* This semaphore is used to mediate the 0-&gt;1 reference get in the</span>", 
"<span class=\"comment\"> * face of object destruction (i.e. we can't allow a get on an</span>", 
"<span class=\"comment\"> * object after last put) */</span>", 
"static <a class=\"id\" href=\"#DEFINE_MUTEX\">DEFINE_MUTEX</a>(<a class=\"id\" href=\"#sd_ref_mutex\">sd_ref_mutex</a>);", 
"", 
"static struct <a class=\"id\" href=\"#kmem_cache\">kmem_cache</a> *<a class=\"id\" href=\"#sd_cdb_cache\">sd_cdb_cache</a>;", 
"static <a class=\"id\" href=\"#mempool_t\">mempool_t</a> *<a class=\"id\" href=\"#sd_cdb_pool\">sd_cdb_pool</a>;", 
"", 
"static const char *<a class=\"id\" href=\"#sd_cache_types\">sd_cache_types</a>[] = {", 
"<span class=\"ts\"/>\"write through\", \"none\", \"write back\",", 
"<span class=\"ts\"/>\"write back, no read (daft)\"", 
"};", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#sd_store_cache_type\">sd_store_cache_type</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#ct\">ct</a> = -1, <a class=\"id\" href=\"#rcd\">rcd</a>, <a class=\"id\" href=\"#wce\">wce</a>, <a class=\"id\" href=\"#sp\">sp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_disk\">scsi_disk</a> *<a class=\"id\" href=\"#sdkp\">sdkp</a> = <a class=\"id\" href=\"#to_scsi_disk\">to_scsi_disk</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdp\">sdp</a> = <a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#device\">device</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buffer\">buffer</a>[64];", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#buffer_data\">buffer_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_mode_data\">scsi_mode_data</a> <a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_sense_hdr\">scsi_sense_hdr</a> <a class=\"id\" href=\"#sshdr\">sshdr</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#TYPE_DISK\">TYPE_DISK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* no cache control on RBC devices; theoretically they</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * can do it, but there's probably so many exceptions</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * it's not worth the risk */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#sd_cache_types\">sd_cache_types</a>); <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#sd_cache_types\">sd_cache_types</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#strncmp\">strncmp</a>(<a class=\"id\" href=\"#sd_cache_types\">sd_cache_types</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#len\">len</a>) == 0 &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#len\">len</a>] == '\\n') {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ct\">ct</a> = <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ct\">ct</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcd\">rcd</a> = <a class=\"id\" href=\"#ct\">ct</a> &amp; 0x01 ? 1 : 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wce\">wce</a> = <a class=\"id\" href=\"#ct\">ct</a> &amp; 0x02 ? 1 : 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#scsi_mode_sense\">scsi_mode_sense</a>(<a class=\"id\" href=\"#sdp\">sdp</a>, 0x08, 8, <a class=\"id\" href=\"#buffer\">buffer</a>, sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>), <a class=\"id\" href=\"#SD_TIMEOUT\">SD_TIMEOUT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#SD_MAX_RETRIES\">SD_MAX_RETRIES</a>, &amp;<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#NULL\">NULL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#min_t\">min_t</a>(<a class=\"id\" href=\"#size_t\">size_t</a>, sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>), <a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#length\">length</a> - <a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#header_length\">header_length</a> -", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#block_descriptor_length\">block_descriptor_length</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buffer_data\">buffer_data</a> = <a class=\"id\" href=\"#buffer\">buffer</a> + <a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#header_length\">header_length</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#block_descriptor_length\">block_descriptor_length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buffer_data\">buffer_data</a>[2] &= ~0x05;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buffer_data\">buffer_data</a>[2] |= <a class=\"id\" href=\"#wce\">wce</a> << 2 | <a class=\"id\" href=\"#rcd\">rcd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sp\">sp</a> = <a class=\"id\" href=\"#buffer_data\">buffer_data</a>[0] &amp; 0x80 ? 1 : 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#scsi_mode_select\">scsi_mode_select</a>(<a class=\"id\" href=\"#sdp\">sdp</a>, 1, <a class=\"id\" href=\"#sp\">sp</a>, 8, <a class=\"id\" href=\"#buffer_data\">buffer_data</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#SD_TIMEOUT\">SD_TIMEOUT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#SD_MAX_RETRIES\">SD_MAX_RETRIES</a>, &amp;<a class=\"id\" href=\"#data\">data</a>, &amp;<a class=\"id\" href=\"#sshdr\">sshdr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#scsi_sense_valid\">scsi_sense_valid</a>(&amp;<a class=\"id\" href=\"#sshdr\">sshdr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sd_print_sense_hdr\">sd_print_sense_hdr</a>(<a class=\"id\" href=\"#sdkp\">sdkp</a>, &amp;<a class=\"id\" href=\"#sshdr\">sshdr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#revalidate_disk\">revalidate_disk</a>(<a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#disk\">disk</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#sd_store_manage_start_stop\">sd_store_manage_start_stop</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_disk\">scsi_disk</a> *<a class=\"id\" href=\"#sdkp\">sdkp</a> = <a class=\"id\" href=\"#to_scsi_disk\">to_scsi_disk</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdp\">sdp</a> = <a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#device\">device</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_ADMIN\">CAP_SYS_ADMIN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#manage_start_stop\">manage_start_stop</a> = <a class=\"id\" href=\"#simple_strtoul\">simple_strtoul</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 10);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#sd_store_allow_restart\">sd_store_allow_restart</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_disk\">scsi_disk</a> *<a class=\"id\" href=\"#sdkp\">sdkp</a> = <a class=\"id\" href=\"#to_scsi_disk\">to_scsi_disk</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdp\">sdp</a> = <a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#device\">device</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_ADMIN\">CAP_SYS_ADMIN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#TYPE_DISK\">TYPE_DISK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#allow_restart\">allow_restart</a> = <a class=\"id\" href=\"#simple_strtoul\">simple_strtoul</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 10);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#sd_show_cache_type\">sd_show_cache_type</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_disk\">scsi_disk</a> *<a class=\"id\" href=\"#sdkp\">sdkp</a> = <a class=\"id\" href=\"#to_scsi_disk\">to_scsi_disk</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ct\">ct</a> = <a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#RCD\">RCD</a> + 2*<a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#WCE\">WCE</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, 40, \"%s\\n\", <a class=\"id\" href=\"#sd_cache_types\">sd_cache_types</a>[<a class=\"id\" href=\"#ct\">ct</a>]);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#sd_show_fua\">sd_show_fua</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_disk\">scsi_disk</a> *<a class=\"id\" href=\"#sdkp\">sdkp</a> = <a class=\"id\" href=\"#to_scsi_disk\">to_scsi_disk</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, 20, \"%u\\n\", <a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#DPOFUA\">DPOFUA</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#sd_show_manage_start_stop\">sd_show_manage_start_stop</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_disk\">scsi_disk</a> *<a class=\"id\" href=\"#sdkp\">sdkp</a> = <a class=\"id\" href=\"#to_scsi_disk\">to_scsi_disk</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdp\">sdp</a> = <a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#device\">device</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, 20, \"%u\\n\", <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#manage_start_stop\">manage_start_stop</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#sd_show_allow_restart\">sd_show_allow_restart</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_disk\">scsi_disk</a> *<a class=\"id\" href=\"#sdkp\">sdkp</a> = <a class=\"id\" href=\"#to_scsi_disk\">to_scsi_disk</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, 40, \"%d\\n\", <a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#allow_restart\">allow_restart</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#sd_show_protection_type\">sd_show_protection_type</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_disk\">scsi_disk</a> *<a class=\"id\" href=\"#sdkp\">sdkp</a> = <a class=\"id\" href=\"#to_scsi_disk\">to_scsi_disk</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, 20, \"%u\\n\", <a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#protection_type\">protection_type</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#sd_show_app_tag_own\">sd_show_app_tag_own</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_disk\">scsi_disk</a> *<a class=\"id\" href=\"#sdkp\">sdkp</a> = <a class=\"id\" href=\"#to_scsi_disk\">to_scsi_disk</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, 20, \"%u\\n\", <a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#ATO\">ATO</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#sd_show_thin_provisioning\">sd_show_thin_provisioning</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_disk\">scsi_disk</a> *<a class=\"id\" href=\"#sdkp\">sdkp</a> = <a class=\"id\" href=\"#to_scsi_disk\">to_scsi_disk</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, 20, \"%u\\n\", <a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#thin_provisioning\">thin_provisioning</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> <a class=\"id\" href=\"#sd_disk_attrs\">sd_disk_attrs</a>[] = {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ATTR\">__ATTR</a>(<a class=\"id\" href=\"#cache_type\">cache_type</a>, <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>|<a class=\"id\" href=\"#S_IWUSR\">S_IWUSR</a>, <a class=\"id\" href=\"#sd_show_cache_type\">sd_show_cache_type</a>,", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#sd_store_cache_type\">sd_store_cache_type</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ATTR\">__ATTR</a>(<a class=\"id\" href=\"#FUA\">FUA</a>, <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#sd_show_fua\">sd_show_fua</a>, <a class=\"id\" href=\"#NULL\">NULL</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ATTR\">__ATTR</a>(<a class=\"id\" href=\"#allow_restart\">allow_restart</a>, <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>|<a class=\"id\" href=\"#S_IWUSR\">S_IWUSR</a>, <a class=\"id\" href=\"#sd_show_allow_restart\">sd_show_allow_restart</a>,", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#sd_store_allow_restart\">sd_store_allow_restart</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ATTR\">__ATTR</a>(<a class=\"id\" href=\"#manage_start_stop\">manage_start_stop</a>, <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>|<a class=\"id\" href=\"#S_IWUSR\">S_IWUSR</a>, <a class=\"id\" href=\"#sd_show_manage_start_stop\">sd_show_manage_start_stop</a>,", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#sd_store_manage_start_stop\">sd_store_manage_start_stop</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ATTR\">__ATTR</a>(<a class=\"id\" href=\"#protection_type\">protection_type</a>, <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#sd_show_protection_type\">sd_show_protection_type</a>, <a class=\"id\" href=\"#NULL\">NULL</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ATTR\">__ATTR</a>(<a class=\"id\" href=\"#app_tag_own\">app_tag_own</a>, <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#sd_show_app_tag_own\">sd_show_app_tag_own</a>, <a class=\"id\" href=\"#NULL\">NULL</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ATTR\">__ATTR</a>(<a class=\"id\" href=\"#thin_provisioning\">thin_provisioning</a>, <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#sd_show_thin_provisioning\">sd_show_thin_provisioning</a>, <a class=\"id\" href=\"#NULL\">NULL</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ATTR_NULL\">__ATTR_NULL</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#class\">class</a> <a class=\"id\" href=\"#sd_disk_class\">sd_disk_class</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= \"scsi_disk\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#dev_release\">dev_release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#scsi_disk_release\">scsi_disk_release</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#dev_attrs\">dev_attrs</a><span class=\"ts\"/>= <a class=\"id\" href=\"#sd_disk_attrs\">sd_disk_attrs</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#scsi_driver\">scsi_driver</a> <a class=\"id\" href=\"#sd_template\">sd_template</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#gendrv\">gendrv</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= \"sd\",", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#probe\">probe</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#sd_probe\">sd_probe</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#remove\">remove</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#sd_remove\">sd_remove</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#suspend\">suspend</a><span class=\"ts\"/>= <a class=\"id\" href=\"#sd_suspend\">sd_suspend</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#resume\">resume</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#sd_resume\">sd_resume</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#shutdown\">shutdown</a><span class=\"ts\"/>= <a class=\"id\" href=\"#sd_shutdown\">sd_shutdown</a>,", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#rescan\">rescan</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#sd_rescan\">sd_rescan</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#done\">done</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#sd_done\">sd_done</a>,", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Device no to disk mapping:</span>", 
"<span class=\"comment\"> * </span>", 
"<span class=\"comment\"> *       major         disc2     disc  p1</span>", 
"<span class=\"comment\"> *   |............|.............|....|....| &lt;- dev_t</span>", 
"<span class=\"comment\"> *    31        20 19          8 7  4 3  0</span>", 
"<span class=\"comment\"> * </span>", 
"<span class=\"comment\"> * Inside a major, we have 16k disks, however mapped non-</span>", 
"<span class=\"comment\"> * contiguously. The first 16 disks are for major0, the next</span>", 
"<span class=\"comment\"> * ones with major1, ... Disk 256 is for major0 again, disk 272 </span>", 
"<span class=\"comment\"> * for major1, ... </span>", 
"<span class=\"comment\"> * As we stay compatible with our numbering scheme, we can reuse </span>", 
"<span class=\"comment\"> * the well-know SCSI majors 8, 65--71, 136--143.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#sd_major\">sd_major</a>(int <a class=\"id\" href=\"#major_idx\">major_idx</a>)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#major_idx\">major_idx</a>) {", 
"<span class=\"ts\"/>case 0:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#SCSI_DISK0_MAJOR\">SCSI_DISK0_MAJOR</a>;", 
"<span class=\"ts\"/>case 1 ... 7:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#SCSI_DISK1_MAJOR\">SCSI_DISK1_MAJOR</a> + <a class=\"id\" href=\"#major_idx\">major_idx</a> - 1;", 
"<span class=\"ts\"/>case 8 ... 15:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#SCSI_DISK8_MAJOR\">SCSI_DISK8_MAJOR</a> + <a class=\"id\" href=\"#major_idx\">major_idx</a> - 8;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;<span class=\"ts\"/><span class=\"comment\">/* shut up gcc */</span>", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#scsi_disk\">scsi_disk</a> *<a class=\"id\" href=\"#__scsi_disk_get\">__scsi_disk_get</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_disk\">scsi_disk</a> *<a class=\"id\" href=\"#sdkp\">sdkp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#private_data\">private_data</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sdkp\">sdkp</a> = <a class=\"id\" href=\"#scsi_disk\">scsi_disk</a>(<a class=\"id\" href=\"#disk\">disk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#scsi_device_get\">scsi_device_get</a>(<a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#device\">device</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_device\">get_device</a>(&amp;<a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sdkp\">sdkp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sdkp\">sdkp</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#scsi_disk\">scsi_disk</a> *<a class=\"id\" href=\"#scsi_disk_get\">scsi_disk_get</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_disk\">scsi_disk</a> *<a class=\"id\" href=\"#sdkp\">sdkp</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#sd_ref_mutex\">sd_ref_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sdkp\">sdkp</a> = <a class=\"id\" href=\"#__scsi_disk_get\">__scsi_disk_get</a>(<a class=\"id\" href=\"#disk\">disk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#sd_ref_mutex\">sd_ref_mutex</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sdkp\">sdkp</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#scsi_disk\">scsi_disk</a> *<a class=\"id\" href=\"#scsi_disk_get_from_dev\">scsi_disk_get_from_dev</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_disk\">scsi_disk</a> *<a class=\"id\" href=\"#sdkp\">sdkp</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#sd_ref_mutex\">sd_ref_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sdkp\">sdkp</a> = <a class=\"id\" href=\"#dev_get_drvdata\">dev_get_drvdata</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sdkp\">sdkp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sdkp\">sdkp</a> = <a class=\"id\" href=\"#__scsi_disk_get\">__scsi_disk_get</a>(<a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#disk\">disk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#sd_ref_mutex\">sd_ref_mutex</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sdkp\">sdkp</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#scsi_disk_put\">scsi_disk_put</a>(struct <a class=\"id\" href=\"#scsi_disk\">scsi_disk</a> *<a class=\"id\" href=\"#sdkp\">sdkp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a> = <a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#device\">device</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#sd_ref_mutex\">sd_ref_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_device\">put_device</a>(&amp;<a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scsi_device_put\">scsi_device_put</a>(<a class=\"id\" href=\"#sdev\">sdev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#sd_ref_mutex\">sd_ref_mutex</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#sd_prot_op\">sd_prot_op</a>(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#scmd\">scmd</a>, unsigned int <a class=\"id\" href=\"#dif\">dif</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#prot_op\">prot_op</a> = <a class=\"id\" href=\"#SCSI_PROT_NORMAL\">SCSI_PROT_NORMAL</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#dix\">dix</a> = <a class=\"id\" href=\"#scsi_prot_sg_count\">scsi_prot_sg_count</a>(<a class=\"id\" href=\"#scmd\">scmd</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#scmd\">scmd</a>-><a class=\"id\" href=\"#sc_data_direction\">sc_data_direction</a> == <a class=\"id\" href=\"#DMA_FROM_DEVICE\">DMA_FROM_DEVICE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dif\">dif</a> && <a class=\"id\" href=\"#dix\">dix</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prot_op\">prot_op</a> = <a class=\"id\" href=\"#SCSI_PROT_READ_PASS\">SCSI_PROT_READ_PASS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#dif\">dif</a> && !<a class=\"id\" href=\"#dix\">dix</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prot_op\">prot_op</a> = <a class=\"id\" href=\"#SCSI_PROT_READ_STRIP\">SCSI_PROT_READ_STRIP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (!<a class=\"id\" href=\"#dif\">dif</a> && <a class=\"id\" href=\"#dix\">dix</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prot_op\">prot_op</a> = <a class=\"id\" href=\"#SCSI_PROT_READ_INSERT\">SCSI_PROT_READ_INSERT</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dif\">dif</a> && <a class=\"id\" href=\"#dix\">dix</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prot_op\">prot_op</a> = <a class=\"id\" href=\"#SCSI_PROT_WRITE_PASS\">SCSI_PROT_WRITE_PASS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#dif\">dif</a> && !<a class=\"id\" href=\"#dix\">dix</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prot_op\">prot_op</a> = <a class=\"id\" href=\"#SCSI_PROT_WRITE_INSERT\">SCSI_PROT_WRITE_INSERT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (!<a class=\"id\" href=\"#dif\">dif</a> && <a class=\"id\" href=\"#dix\">dix</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prot_op\">prot_op</a> = <a class=\"id\" href=\"#SCSI_PROT_WRITE_STRIP\">SCSI_PROT_WRITE_STRIP</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scsi_set_prot_op\">scsi_set_prot_op</a>(<a class=\"id\" href=\"#scmd\">scmd</a>, <a class=\"id\" href=\"#prot_op\">prot_op</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scsi_set_prot_type\">scsi_set_prot_type</a>(<a class=\"id\" href=\"#scmd\">scmd</a>, <a class=\"id\" href=\"#dif\">dif</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * scsi_setup_discard_cmnd - unmap blocks on thinly provisioned device</span>", 
"<span class=\"comment\"> * @sdp: scsi device to operate one</span>", 
"<span class=\"comment\"> * @rq: Request to prepare</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Will issue either UNMAP or WRITE SAME(16) depending on preference</span>", 
"<span class=\"comment\"> * indicated by target device.</span>", 
"<span class=\"comment\"> **/</span>", 
"static int <a class=\"id\" href=\"#scsi_setup_discard_cmnd\">scsi_setup_discard_cmnd</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdp\">sdp</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_disk\">scsi_disk</a> *<a class=\"id\" href=\"#sdkp\">sdkp</a> = <a class=\"id\" href=\"#scsi_disk\">scsi_disk</a>(<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#rq_disk\">rq_disk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#bio\">bio</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#sector\">sector</a> = <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_sector\">bi_sector</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#nr_sectors\">nr_sectors</a> = <a class=\"id\" href=\"#bio_sectors\">bio_sectors</a>(<a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#sector_size\">sector_size</a> == 4096) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sector\">sector</a> >>= 3;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_sectors\">nr_sectors</a> >>= 3;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#timeout\">timeout</a> = <a class=\"id\" href=\"#SD_TIMEOUT\">SD_TIMEOUT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd\">cmd</a>, 0, <a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_len\">cmd_len</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#alloc_page\">alloc_page</a>(<a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a> | <a class=\"id\" href=\"#__GFP_ZERO\">__GFP_ZERO</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#page\">page</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#BLKPREP_DEFER\">BLKPREP_DEFER</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#unmap\">unmap</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#page_address\">page_address</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_len\">cmd_len</a> = 10;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#UNMAP\">UNMAP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[8] = 24;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_unaligned_be16\">put_unaligned_be16</a>(6 + 16, &amp;<a class=\"id\" href=\"#buf\">buf</a>[0]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_unaligned_be16\">put_unaligned_be16</a>(16, &amp;<a class=\"id\" href=\"#buf\">buf</a>[2]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_unaligned_be64\">put_unaligned_be64</a>(<a class=\"id\" href=\"#sector\">sector</a>, &amp;<a class=\"id\" href=\"#buf\">buf</a>[8]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_unaligned_be32\">put_unaligned_be32</a>(<a class=\"id\" href=\"#nr_sectors\">nr_sectors</a>, &amp;<a class=\"id\" href=\"#buf\">buf</a>[16]);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = 24;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_len\">cmd_len</a> = 16;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#WRITE_SAME_16\">WRITE_SAME_16</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[1] = 0x8; <span class=\"comment\">/* UNMAP */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_unaligned_be64\">put_unaligned_be64</a>(<a class=\"id\" href=\"#sector\">sector</a>, &amp;<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[2]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_unaligned_be32\">put_unaligned_be32</a>(<a class=\"id\" href=\"#nr_sectors\">nr_sectors</a>, &amp;<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[10]);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#sector_size\">sector_size</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_add_request_payload\">blk_add_request_payload</a>(<a class=\"id\" href=\"#rq\">rq</a>, <a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#scsi_setup_blk_pc_cmnd\">scsi_setup_blk_pc_cmnd</a>(<a class=\"id\" href=\"#sdp\">sdp</a>, <a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#buffer\">buffer</a> = <a class=\"id\" href=\"#page_address\">page_address</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != <a class=\"id\" href=\"#BLKPREP_OK\">BLKPREP_OK</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__free_page\">__free_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#buffer\">buffer</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#scsi_setup_flush_cmnd\">scsi_setup_flush_cmnd</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdp\">sdp</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#timeout\">timeout</a> = <a class=\"id\" href=\"#SD_TIMEOUT\">SD_TIMEOUT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#retries\">retries</a> = <a class=\"id\" href=\"#SD_MAX_RETRIES\">SD_MAX_RETRIES</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#SYNCHRONIZE_CACHE\">SYNCHRONIZE_CACHE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_len\">cmd_len</a> = 10;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#scsi_setup_blk_pc_cmnd\">scsi_setup_blk_pc_cmnd</a>(<a class=\"id\" href=\"#sdp\">sdp</a>, <a class=\"id\" href=\"#rq\">rq</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#sd_unprep_fn\">sd_unprep_fn</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a> &amp; <a class=\"id\" href=\"#REQ_DISCARD\">REQ_DISCARD</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_page\">free_page</a>((unsigned long)<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#buffer\">buffer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#buffer\">buffer</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>sd_init_command - build a scsi (read or write) command from</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>information in the request structure.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@SCpnt: pointer to mid-level's per scsi command structure that</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>contains request and into which the scsi command is written</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Returns 1 if successful and 0 if error (or cannot be done now).</span>", 
"<span class=\"comment\"> **/</span>", 
"static int <a class=\"id\" href=\"#sd_prep_fn\">sd_prep_fn</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#SCpnt\">SCpnt</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdp\">sdp</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queuedata\">queuedata</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a> = <a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#rq_disk\">rq_disk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_disk\">scsi_disk</a> *<a class=\"id\" href=\"#sdkp\">sdkp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#block\">block</a> = <a class=\"id\" href=\"#blk_rq_pos\">blk_rq_pos</a>(<a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#threshold\">threshold</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#this_count\">this_count</a> = <a class=\"id\" href=\"#blk_rq_sectors\">blk_rq_sectors</a>(<a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#host_dif\">host_dif</a>;", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#protect\">protect</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Discard request come in as REQ_TYPE_FS but we turn them into</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * block PC requests to make life easier.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a> &amp; <a class=\"id\" href=\"#REQ_DISCARD\">REQ_DISCARD</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#scsi_setup_discard_cmnd\">scsi_setup_discard_cmnd</a>(<a class=\"id\" href=\"#sdp\">sdp</a>, <a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a> &amp; <a class=\"id\" href=\"#REQ_FLUSH\">REQ_FLUSH</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#scsi_setup_flush_cmnd\">scsi_setup_flush_cmnd</a>(<a class=\"id\" href=\"#sdp\">sdp</a>, <a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_type\">cmd_type</a> == <a class=\"id\" href=\"#REQ_TYPE_BLOCK_PC\">REQ_TYPE_BLOCK_PC</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#scsi_setup_blk_pc_cmnd\">scsi_setup_blk_pc_cmnd</a>(<a class=\"id\" href=\"#sdp\">sdp</a>, <a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_type\">cmd_type</a> != <a class=\"id\" href=\"#REQ_TYPE_FS\">REQ_TYPE_FS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#BLKPREP_KILL\">BLKPREP_KILL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#scsi_setup_fs_cmnd\">scsi_setup_fs_cmnd</a>(<a class=\"id\" href=\"#sdp\">sdp</a>, <a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != <a class=\"id\" href=\"#BLKPREP_OK\">BLKPREP_OK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a> = <a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#special\">special</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sdkp\">sdkp</a> = <a class=\"id\" href=\"#scsi_disk\">scsi_disk</a>(<a class=\"id\" href=\"#disk\">disk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* from here on until we're complete, any goto out</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * is used for a killable error condition */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#BLKPREP_KILL\">BLKPREP_KILL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_HLQUEUE\">SCSI_LOG_HLQUEUE</a>(1, <a class=\"id\" href=\"#scmd_printk\">scmd_printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, <a class=\"id\" href=\"#SCpnt\">SCpnt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"sd_init_command: block=%llu, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"count=%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long long)<a class=\"id\" href=\"#block\">block</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_count\">this_count</a>));", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sdp\">sdp</a> || !<a class=\"id\" href=\"#scsi_device_online\">scsi_device_online</a>(<a class=\"id\" href=\"#sdp\">sdp</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#block\">block</a> + <a class=\"id\" href=\"#blk_rq_sectors\">blk_rq_sectors</a>(<a class=\"id\" href=\"#rq\">rq</a>) &gt; <a class=\"id\" href=\"#get_capacity\">get_capacity</a>(<a class=\"id\" href=\"#disk\">disk</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_HLQUEUE\">SCSI_LOG_HLQUEUE</a>(2, <a class=\"id\" href=\"#scmd_printk\">scmd_printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, <a class=\"id\" href=\"#SCpnt\">SCpnt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"Finishing %u sectors\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_rq_sectors\">blk_rq_sectors</a>(<a class=\"id\" href=\"#rq\">rq</a>)));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_HLQUEUE\">SCSI_LOG_HLQUEUE</a>(2, <a class=\"id\" href=\"#scmd_printk\">scmd_printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, <a class=\"id\" href=\"#SCpnt\">SCpnt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"Retry with 0x%p\\n\", <a class=\"id\" href=\"#SCpnt\">SCpnt</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#changed\">changed</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * quietly refuse to do anything to a changed disc until </span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the changed bit has been reset</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* printk(\"SCSI disk has been changed. Prohibiting further I/O.\\n\"); */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Some SD card readers can't handle multi-sector accesses which touch</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the last one or two hardware sectors.  Split accesses as needed.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#threshold\">threshold</a> = <a class=\"id\" href=\"#get_capacity\">get_capacity</a>(<a class=\"id\" href=\"#disk\">disk</a>) - <a class=\"id\" href=\"#SD_LAST_BUGGY_SECTORS\">SD_LAST_BUGGY_SECTORS</a> *", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#sector_size\">sector_size</a> / 512);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#last_sector_bug\">last_sector_bug</a> && <a class=\"id\" href=\"#block\">block</a> + <a class=\"id\" href=\"#this_count\">this_count</a> &gt; <a class=\"id\" href=\"#threshold\">threshold</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#block\">block</a> &lt; <a class=\"id\" href=\"#threshold\">threshold</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Access up to the threshold but not beyond */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_count\">this_count</a> = <a class=\"id\" href=\"#threshold\">threshold</a> - <a class=\"id\" href=\"#block\">block</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Access only a single hardware sector */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_count\">this_count</a> = <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#sector_size\">sector_size</a> / 512;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_HLQUEUE\">SCSI_LOG_HLQUEUE</a>(2, <a class=\"id\" href=\"#scmd_printk\">scmd_printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, <a class=\"id\" href=\"#SCpnt\">SCpnt</a>, \"block=%llu\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long long)<a class=\"id\" href=\"#block\">block</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If we have a 1K hardware sectorsize, prevent access to single</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 512 byte sectors.  In theory we could handle this - in fact</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the scsi cdrom driver must be able to handle this because</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we typically use 1K blocksizes, and cdroms typically have</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 2K hardware sectorsizes.  Of course, things are simpler</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * with the cdrom, since it is read-only.  For performance</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * reasons, the filesystems should be able to handle this</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and not force the scsi disk driver to use bounce buffers</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * for this.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#sector_size\">sector_size</a> == 1024) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#block\">block</a> &amp; 1) || (<a class=\"id\" href=\"#blk_rq_sectors\">blk_rq_sectors</a>(<a class=\"id\" href=\"#rq\">rq</a>) &amp; 1)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scmd_printk\">scmd_printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, <a class=\"id\" href=\"#SCpnt\">SCpnt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"Bad block number requested\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#block\">block</a> = <a class=\"id\" href=\"#block\">block</a> >> 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_count\">this_count</a> = <a class=\"id\" href=\"#this_count\">this_count</a> >> 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#sector_size\">sector_size</a> == 2048) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#block\">block</a> &amp; 3) || (<a class=\"id\" href=\"#blk_rq_sectors\">blk_rq_sectors</a>(<a class=\"id\" href=\"#rq\">rq</a>) &amp; 3)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scmd_printk\">scmd_printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, <a class=\"id\" href=\"#SCpnt\">SCpnt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"Bad block number requested\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#block\">block</a> = <a class=\"id\" href=\"#block\">block</a> >> 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_count\">this_count</a> = <a class=\"id\" href=\"#this_count\">this_count</a> >> 2;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#sector_size\">sector_size</a> == 4096) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#block\">block</a> &amp; 7) || (<a class=\"id\" href=\"#blk_rq_sectors\">blk_rq_sectors</a>(<a class=\"id\" href=\"#rq\">rq</a>) &amp; 7)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scmd_printk\">scmd_printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, <a class=\"id\" href=\"#SCpnt\">SCpnt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"Bad block number requested\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#block\">block</a> = <a class=\"id\" href=\"#block\">block</a> >> 3;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_count\">this_count</a> = <a class=\"id\" href=\"#this_count\">this_count</a> >> 3;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rq_data_dir\">rq_data_dir</a>(<a class=\"id\" href=\"#rq\">rq</a>) == <a class=\"id\" href=\"#WRITE\">WRITE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#writeable\">writeable</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[0] = <a class=\"id\" href=\"#WRITE_6\">WRITE_6</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#sc_data_direction\">sc_data_direction</a> = <a class=\"id\" href=\"#DMA_TO_DEVICE\">DMA_TO_DEVICE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#blk_integrity_rq\">blk_integrity_rq</a>(<a class=\"id\" href=\"#rq\">rq</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sd_dif_prepare\">sd_dif_prepare</a>(<a class=\"id\" href=\"#rq\">rq</a>, <a class=\"id\" href=\"#block\">block</a>, <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#sector_size\">sector_size</a>) == -<a class=\"id\" href=\"#EIO\">EIO</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#rq_data_dir\">rq_data_dir</a>(<a class=\"id\" href=\"#rq\">rq</a>) == <a class=\"id\" href=\"#READ\">READ</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[0] = <a class=\"id\" href=\"#READ_6\">READ_6</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#sc_data_direction\">sc_data_direction</a> = <a class=\"id\" href=\"#DMA_FROM_DEVICE\">DMA_FROM_DEVICE</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scmd_printk\">scmd_printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, <a class=\"id\" href=\"#SCpnt\">SCpnt</a>, \"Unknown command %x\\n\", <a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_HLQUEUE\">SCSI_LOG_HLQUEUE</a>(2, <a class=\"id\" href=\"#scmd_printk\">scmd_printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, <a class=\"id\" href=\"#SCpnt\">SCpnt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"%s %d/%u 512 byte blocks.\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#rq_data_dir\">rq_data_dir</a>(<a class=\"id\" href=\"#rq\">rq</a>) == <a class=\"id\" href=\"#WRITE\">WRITE</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"writing\" : \"reading\", <a class=\"id\" href=\"#this_count\">this_count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_rq_sectors\">blk_rq_sectors</a>(<a class=\"id\" href=\"#rq\">rq</a>)));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Set RDPROTECT/WRPROTECT if disk is formatted with DIF */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#host_dif\">host_dif</a> = <a class=\"id\" href=\"#scsi_host_dif_capable\">scsi_host_dif_capable</a>(<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#host\">host</a>, <a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#protection_type\">protection_type</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#host_dif\">host_dif</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#protect\">protect</a> = 1 << 5;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#protect\">protect</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#host_dif\">host_dif</a> == <a class=\"id\" href=\"#SD_DIF_TYPE2_PROTECTION\">SD_DIF_TYPE2_PROTECTION</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a> = <a class=\"id\" href=\"#mempool_alloc\">mempool_alloc</a>(<a class=\"id\" href=\"#sd_cdb_pool\">sd_cdb_pool</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#BLKPREP_DEFER\">BLKPREP_DEFER</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmd_len\">cmd_len</a> = <a class=\"id\" href=\"#SD_EXT_CDB_SIZE\">SD_EXT_CDB_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>, 0, <a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmd_len\">cmd_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[0] = <a class=\"id\" href=\"#VARIABLE_LENGTH_CMD\">VARIABLE_LENGTH_CMD</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[7] = 0x18;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[9] = (<a class=\"id\" href=\"#rq_data_dir\">rq_data_dir</a>(<a class=\"id\" href=\"#rq\">rq</a>) == <a class=\"id\" href=\"#READ\">READ</a>) ? <a class=\"id\" href=\"#READ_32\">READ_32</a> : <a class=\"id\" href=\"#WRITE_32\">WRITE_32</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[10] = <a class=\"id\" href=\"#protect\">protect</a> | ((<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a> &amp; <a class=\"id\" href=\"#REQ_FUA\">REQ_FUA</a>) ? 0x8 : 0);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* LBA */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[12] = sizeof(<a class=\"id\" href=\"#block\">block</a>) &gt; 4 ? (unsigned char) (<a class=\"id\" href=\"#block\">block</a> >> 56) &amp; 0xff : 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[13] = sizeof(<a class=\"id\" href=\"#block\">block</a>) &gt; 4 ? (unsigned char) (<a class=\"id\" href=\"#block\">block</a> >> 48) &amp; 0xff : 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[14] = sizeof(<a class=\"id\" href=\"#block\">block</a>) &gt; 4 ? (unsigned char) (<a class=\"id\" href=\"#block\">block</a> >> 40) &amp; 0xff : 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[15] = sizeof(<a class=\"id\" href=\"#block\">block</a>) &gt; 4 ? (unsigned char) (<a class=\"id\" href=\"#block\">block</a> >> 32) &amp; 0xff : 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[16] = (unsigned char) (<a class=\"id\" href=\"#block\">block</a> >> 24) &amp; 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[17] = (unsigned char) (<a class=\"id\" href=\"#block\">block</a> >> 16) &amp; 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[18] = (unsigned char) (<a class=\"id\" href=\"#block\">block</a> >> 8) &amp; 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[19] = (unsigned char) <a class=\"id\" href=\"#block\">block</a> &amp; 0xff;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Expected Indirect LBA */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[20] = (unsigned char) (<a class=\"id\" href=\"#block\">block</a> >> 24) &amp; 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[21] = (unsigned char) (<a class=\"id\" href=\"#block\">block</a> >> 16) &amp; 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[22] = (unsigned char) (<a class=\"id\" href=\"#block\">block</a> >> 8) &amp; 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[23] = (unsigned char) <a class=\"id\" href=\"#block\">block</a> &amp; 0xff;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Transfer length */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[28] = (unsigned char) (<a class=\"id\" href=\"#this_count\">this_count</a> >> 24) &amp; 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[29] = (unsigned char) (<a class=\"id\" href=\"#this_count\">this_count</a> >> 16) &amp; 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[30] = (unsigned char) (<a class=\"id\" href=\"#this_count\">this_count</a> >> 8) &amp; 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[31] = (unsigned char) <a class=\"id\" href=\"#this_count\">this_count</a> &amp; 0xff;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#block\">block</a> &gt; 0xffffffff) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[0] += <a class=\"id\" href=\"#READ_16\">READ_16</a> - <a class=\"id\" href=\"#READ_6\">READ_6</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[1] = <a class=\"id\" href=\"#protect\">protect</a> | ((<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a> &amp; <a class=\"id\" href=\"#REQ_FUA\">REQ_FUA</a>) ? 0x8 : 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[2] = sizeof(<a class=\"id\" href=\"#block\">block</a>) &gt; 4 ? (unsigned char) (<a class=\"id\" href=\"#block\">block</a> >> 56) &amp; 0xff : 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[3] = sizeof(<a class=\"id\" href=\"#block\">block</a>) &gt; 4 ? (unsigned char) (<a class=\"id\" href=\"#block\">block</a> >> 48) &amp; 0xff : 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[4] = sizeof(<a class=\"id\" href=\"#block\">block</a>) &gt; 4 ? (unsigned char) (<a class=\"id\" href=\"#block\">block</a> >> 40) &amp; 0xff : 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[5] = sizeof(<a class=\"id\" href=\"#block\">block</a>) &gt; 4 ? (unsigned char) (<a class=\"id\" href=\"#block\">block</a> >> 32) &amp; 0xff : 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[6] = (unsigned char) (<a class=\"id\" href=\"#block\">block</a> >> 24) &amp; 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[7] = (unsigned char) (<a class=\"id\" href=\"#block\">block</a> >> 16) &amp; 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[8] = (unsigned char) (<a class=\"id\" href=\"#block\">block</a> >> 8) &amp; 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[9] = (unsigned char) <a class=\"id\" href=\"#block\">block</a> &amp; 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[10] = (unsigned char) (<a class=\"id\" href=\"#this_count\">this_count</a> >> 24) &amp; 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[11] = (unsigned char) (<a class=\"id\" href=\"#this_count\">this_count</a> >> 16) &amp; 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[12] = (unsigned char) (<a class=\"id\" href=\"#this_count\">this_count</a> >> 8) &amp; 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[13] = (unsigned char) <a class=\"id\" href=\"#this_count\">this_count</a> &amp; 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[14] = <a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[15] = 0;", 
"<span class=\"ts\"/>} else if ((<a class=\"id\" href=\"#this_count\">this_count</a> &gt; 0xff) || (<a class=\"id\" href=\"#block\">block</a> &gt; 0x1fffff) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#scsi_device_protection\">scsi_device_protection</a>(<a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#device\">device</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#use_10_for_rw\">use_10_for_rw</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#this_count\">this_count</a> &gt; 0xffff)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_count\">this_count</a> = 0xffff;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[0] += <a class=\"id\" href=\"#READ_10\">READ_10</a> - <a class=\"id\" href=\"#READ_6\">READ_6</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[1] = <a class=\"id\" href=\"#protect\">protect</a> | ((<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a> &amp; <a class=\"id\" href=\"#REQ_FUA\">REQ_FUA</a>) ? 0x8 : 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[2] = (unsigned char) (<a class=\"id\" href=\"#block\">block</a> >> 24) &amp; 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[3] = (unsigned char) (<a class=\"id\" href=\"#block\">block</a> >> 16) &amp; 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[4] = (unsigned char) (<a class=\"id\" href=\"#block\">block</a> >> 8) &amp; 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[5] = (unsigned char) <a class=\"id\" href=\"#block\">block</a> &amp; 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[6] = <a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[9] = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[7] = (unsigned char) (<a class=\"id\" href=\"#this_count\">this_count</a> >> 8) &amp; 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[8] = (unsigned char) <a class=\"id\" href=\"#this_count\">this_count</a> &amp; 0xff;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a> &amp; <a class=\"id\" href=\"#REQ_FUA\">REQ_FUA</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * This happens only if this drive failed</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * 10byte rw command with ILLEGAL_REQUEST</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * during operation and thus turned off</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * use_10_for_rw.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scmd_printk\">scmd_printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, <a class=\"id\" href=\"#SCpnt\">SCpnt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"FUA write on READ/WRITE(6) drive\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[1] |= (unsigned char) ((<a class=\"id\" href=\"#block\">block</a> >> 16) &amp; 0x1f);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[2] = (unsigned char) ((<a class=\"id\" href=\"#block\">block</a> >> 8) &amp; 0xff);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[3] = (unsigned char) <a class=\"id\" href=\"#block\">block</a> &amp; 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[4] = (unsigned char) <a class=\"id\" href=\"#this_count\">this_count</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[5] = 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#sdb\">sdb</a>.<a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#this_count\">this_count</a> * <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#sector_size\">sector_size</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If DIF or DIX is enabled, tell HBA how to handle request */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#host_dif\">host_dif</a> || <a class=\"id\" href=\"#scsi_prot_sg_count\">scsi_prot_sg_count</a>(<a class=\"id\" href=\"#SCpnt\">SCpnt</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sd_prot_op\">sd_prot_op</a>(<a class=\"id\" href=\"#SCpnt\">SCpnt</a>, <a class=\"id\" href=\"#host_dif\">host_dif</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We shouldn't disconnect in the middle of a sector, so with a dumb</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * host adapter, it's safe to assume that we can at least transfer</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * this many bytes between each connect / disconnect.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#transfersize\">transfersize</a> = <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#sector_size\">sector_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#underflow\">underflow</a> = <a class=\"id\" href=\"#this_count\">this_count</a> << 9;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCpnt\">SCpnt</a>-><a class=\"id\" href=\"#allowed\">allowed</a> = <a class=\"id\" href=\"#SD_MAX_RETRIES\">SD_MAX_RETRIES</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This indicates that the command is ready from our end to be</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * queued.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#BLKPREP_OK\">BLKPREP_OK</a>;", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#scsi_prep_return\">scsi_prep_return</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#rq\">rq</a>, <a class=\"id\" href=\"#ret\">ret</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>sd_open - open a scsi disk device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@inode: only i_rdev member may be used</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@filp: only f_mode and f_flags may be used</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Returns 0 if successful. Returns a negated errno value in case </span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>of error.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Note: This can be called from a user context (e.g. fsck(1) )</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>or from within the kernel (e.g. as a result of a mount(1) ).</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>In the latter case @inode and @filp carry an abridged amount</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>of information as noted above.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: called with bdev-&gt;bd_mutex held.</span>", 
"<span class=\"comment\"> **/</span>", 
"static int <a class=\"id\" href=\"#sd_open\">sd_open</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#fmode_t\">fmode_t</a> <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_disk\">scsi_disk</a> *<a class=\"id\" href=\"#sdkp\">sdkp</a> = <a class=\"id\" href=\"#scsi_disk_get\">scsi_disk_get</a>(<a class=\"id\" href=\"#bdev\">bdev</a>-><a class=\"id\" href=\"#bd_disk\">bd_disk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sdkp\">sdkp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_HLQUEUE\">SCSI_LOG_HLQUEUE</a>(3, <a class=\"id\" href=\"#sd_printk\">sd_printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, <a class=\"id\" href=\"#sdkp\">sdkp</a>, \"sd_open\\n\"));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sdev\">sdev</a> = <a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#device\">device</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#scsi_autopm_get_device\">scsi_autopm_get_device</a>(<a class=\"id\" href=\"#sdev\">sdev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_autopm\">error_autopm</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the device is in error recovery, wait until it is done.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the device is offline, then disallow any access to it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#scsi_block_when_processing_errors\">scsi_block_when_processing_errors</a>(<a class=\"id\" href=\"#sdev\">sdev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_out\">error_out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#removable\">removable</a> || <a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#write_prot\">write_prot</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#check_disk_change\">check_disk_change</a>(<a class=\"id\" href=\"#bdev\">bdev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the drive is empty, just let the open fail.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ENOMEDIUM\">ENOMEDIUM</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#removable\">removable</a> && !<a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#media_present\">media_present</a> && !(<a class=\"id\" href=\"#mode\">mode</a> &amp; <a class=\"id\" href=\"#FMODE_NDELAY\">FMODE_NDELAY</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_out\">error_out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the device has the write protect tab set, have the open fail</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * if the user expects to be able to write to the thing.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EROFS\">EROFS</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#write_prot\">write_prot</a> && (<a class=\"id\" href=\"#mode\">mode</a> &amp; <a class=\"id\" href=\"#FMODE_WRITE\">FMODE_WRITE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_out\">error_out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * It is possible that the disk changing stuff resulted in</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the device being taken offline.  If this is the case,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * report this to the user, and don't pretend that the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * open actually succeeded.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#scsi_device_online\">scsi_device_online</a>(<a class=\"id\" href=\"#sdev\">sdev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_out\">error_out</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#atomic_inc_return\">atomic_inc_return</a>(&amp;<a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#openers\">openers</a>) == 1) && <a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#removable\">removable</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#scsi_block_when_processing_errors\">scsi_block_when_processing_errors</a>(<a class=\"id\" href=\"#sdev\">sdev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsi_set_medium_removal\">scsi_set_medium_removal</a>(<a class=\"id\" href=\"#sdev\">sdev</a>, <a class=\"id\" href=\"#SCSI_REMOVAL_PREVENT\">SCSI_REMOVAL_PREVENT</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#error_out\">error_out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scsi_autopm_put_device\">scsi_autopm_put_device</a>(<a class=\"id\" href=\"#sdev\">sdev</a>);", 
"<a class=\"id\" href=\"#error_autopm\">error_autopm</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scsi_disk_put\">scsi_disk_put</a>(<a class=\"id\" href=\"#sdkp\">sdkp</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;<span class=\"ts\"/>", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>sd_release - invoked when the (last) close(2) is called on this</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>scsi disk.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@inode: only i_rdev member may be used</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@filp: only f_mode and f_flags may be used</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Returns 0. </span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Note: may block (uninterruptible) if error recovery is underway</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>on this disk.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: called with bdev-&gt;bd_mutex held.</span>", 
"<span class=\"comment\"> **/</span>", 
"static int <a class=\"id\" href=\"#sd_release\">sd_release</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>, <a class=\"id\" href=\"#fmode_t\">fmode_t</a> <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_disk\">scsi_disk</a> *<a class=\"id\" href=\"#sdkp\">sdkp</a> = <a class=\"id\" href=\"#scsi_disk\">scsi_disk</a>(<a class=\"id\" href=\"#disk\">disk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a> = <a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#device\">device</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_HLQUEUE\">SCSI_LOG_HLQUEUE</a>(3, <a class=\"id\" href=\"#sd_printk\">sd_printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, <a class=\"id\" href=\"#sdkp\">sdkp</a>, \"sd_release\\n\"));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_dec_return\">atomic_dec_return</a>(&amp;<a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#openers\">openers</a>) == 0 && <a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#removable\">removable</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#scsi_block_when_processing_errors\">scsi_block_when_processing_errors</a>(<a class=\"id\" href=\"#sdev\">sdev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsi_set_medium_removal\">scsi_set_medium_removal</a>(<a class=\"id\" href=\"#sdev\">sdev</a>, <a class=\"id\" href=\"#SCSI_REMOVAL_ALLOW\">SCSI_REMOVAL_ALLOW</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * XXX and what if there are packets in flight and this close()</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * XXX is followed by a \"rmmod sd_mod\"?</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scsi_autopm_put_device\">scsi_autopm_put_device</a>(<a class=\"id\" href=\"#sdev\">sdev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scsi_disk_put\">scsi_disk_put</a>(<a class=\"id\" href=\"#sdkp\">sdkp</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#sd_getgeo\">sd_getgeo</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>, struct <a class=\"id\" href=\"#hd_geometry\">hd_geometry</a> *<a class=\"id\" href=\"#geo\">geo</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_disk\">scsi_disk</a> *<a class=\"id\" href=\"#sdkp\">sdkp</a> = <a class=\"id\" href=\"#scsi_disk\">scsi_disk</a>(<a class=\"id\" href=\"#bdev\">bdev</a>-><a class=\"id\" href=\"#bd_disk\">bd_disk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdp\">sdp</a> = <a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#device\">device</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#Scsi_Host\">Scsi_Host</a> *<a class=\"id\" href=\"#host\">host</a> = <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#host\">host</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#diskinfo\">diskinfo</a>[4];", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* default to most commonly used values */</span>", 
"        <a class=\"id\" href=\"#diskinfo\">diskinfo</a>[0] = 0x40;<span class=\"ts\"/><span class=\"comment\">/* 1 &lt;&lt; 6 */</span>", 
"       <span class=\"ts\"/><a class=\"id\" href=\"#diskinfo\">diskinfo</a>[1] = 0x20;<span class=\"ts\"/><span class=\"comment\">/* 1 &lt;&lt; 5 */</span>", 
"       <span class=\"ts\"/><a class=\"id\" href=\"#diskinfo\">diskinfo</a>[2] = <a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#capacity\">capacity</a> >> 11;", 
"<span class=\"ts\"/>", 
"<span class=\"ts\"/><span class=\"comment\">/* override with calculated, extended default, or driver values */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#hostt\">hostt</a>-><a class=\"id\" href=\"#bios_param\">bios_param</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#hostt\">hostt</a>-><a class=\"id\" href=\"#bios_param\">bios_param</a>(<a class=\"id\" href=\"#sdp\">sdp</a>, <a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#capacity\">capacity</a>, <a class=\"id\" href=\"#diskinfo\">diskinfo</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsicam_bios_param\">scsicam_bios_param</a>(<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#capacity\">capacity</a>, <a class=\"id\" href=\"#diskinfo\">diskinfo</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#geo\">geo</a>-><a class=\"id\" href=\"#heads\">heads</a> = <a class=\"id\" href=\"#diskinfo\">diskinfo</a>[0];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#geo\">geo</a>-><a class=\"id\" href=\"#sectors\">sectors</a> = <a class=\"id\" href=\"#diskinfo\">diskinfo</a>[1];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#geo\">geo</a>-><a class=\"id\" href=\"#cylinders\">cylinders</a> = <a class=\"id\" href=\"#diskinfo\">diskinfo</a>[2];", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>sd_ioctl - process an ioctl</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@inode: only i_rdev/i_bdev members may be used</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@filp: only f_mode and f_flags may be used</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@cmd: ioctl command number</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@arg: this is third argument given to ioctl(2) system call.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Often contains a pointer.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Returns 0 if successful (some ioctls return postive numbers on</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>success as well). Returns a negated errno value in case of error.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Note: most ioctls are forward onto the block subsystem or further</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>down in the scsi subsystem.</span>", 
"<span class=\"comment\"> **/</span>", 
"static int <a class=\"id\" href=\"#sd_ioctl\">sd_ioctl</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#fmode_t\">fmode_t</a> <a class=\"id\" href=\"#mode\">mode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>, unsigned long <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a> = <a class=\"id\" href=\"#bdev\">bdev</a>-><a class=\"id\" href=\"#bd_disk\">bd_disk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdp\">sdp</a> = <a class=\"id\" href=\"#scsi_disk\">scsi_disk</a>(<a class=\"id\" href=\"#disk\">disk</a>)-><a class=\"id\" href=\"#device\">device</a>;", 
"<span class=\"ts\"/>void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#p\">p</a> = (void <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#arg\">arg</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"    ", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_IOCTL\">SCSI_LOG_IOCTL</a>(1, <a class=\"id\" href=\"#printk\">printk</a>(\"sd_ioctl: disk=%s, cmd=0x%x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#disk_name\">disk_name</a>, <a class=\"id\" href=\"#cmd\">cmd</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If we are in the middle of error recovery, don't let anyone</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * else try and use this device.  Also, if error recovery fails, it</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * may try and take the device offline, in which case all further</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * access to the device is prohibited.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#scsi_nonblockable_ioctl\">scsi_nonblockable_ioctl</a>(<a class=\"id\" href=\"#sdp\">sdp</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#p\">p</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#mode\">mode</a> &amp; <a class=\"id\" href=\"#FMODE_NDELAY\">FMODE_NDELAY</a>) != 0);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#scsi_block_when_processing_errors\">scsi_block_when_processing_errors</a>(<a class=\"id\" href=\"#sdp\">sdp</a>) || !<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Send SCSI addressing ioctls directly to mid level, send other</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ioctls to block level and then onto mid level if they can't be</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * resolved.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#cmd\">cmd</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#SCSI_IOCTL_GET_IDLUN\">SCSI_IOCTL_GET_IDLUN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#SCSI_IOCTL_GET_BUS_NUMBER\">SCSI_IOCTL_GET_BUS_NUMBER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#scsi_ioctl\">scsi_ioctl</a>(<a class=\"id\" href=\"#sdp\">sdp</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#scsi_cmd_ioctl\">scsi_cmd_ioctl</a>(<a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#queue\">queue</a>, <a class=\"id\" href=\"#disk\">disk</a>, <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> != -<a class=\"id\" href=\"#ENOTTY\">ENOTTY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#scsi_ioctl\">scsi_ioctl</a>(<a class=\"id\" href=\"#sdp\">sdp</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#set_media_not_present\">set_media_not_present</a>(struct <a class=\"id\" href=\"#scsi_disk\">scsi_disk</a> *<a class=\"id\" href=\"#sdkp\">sdkp</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#media_present\">media_present</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#capacity\">capacity</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#device\">device</a>-><a class=\"id\" href=\"#changed\">changed</a> = 1;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>sd_media_changed - check if our medium changed</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@disk: kernel device descriptor </span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Returns 0 if not applicable or no change; 1 if change</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Note: this function is invoked from the block subsystem.</span>", 
"<span class=\"comment\"> **/</span>", 
"static int <a class=\"id\" href=\"#sd_media_changed\">sd_media_changed</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_disk\">scsi_disk</a> *<a class=\"id\" href=\"#sdkp\">sdkp</a> = <a class=\"id\" href=\"#scsi_disk\">scsi_disk</a>(<a class=\"id\" href=\"#disk\">disk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdp\">sdp</a> = <a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#device\">device</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_sense_hdr\">scsi_sense_hdr</a> *<a class=\"id\" href=\"#sshdr\">sshdr</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_LOG_HLQUEUE\">SCSI_LOG_HLQUEUE</a>(3, <a class=\"id\" href=\"#sd_printk\">sd_printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, <a class=\"id\" href=\"#sdkp\">sdkp</a>, \"sd_media_changed\\n\"));", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#removable\">removable</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the device is offline, don't send any commands - just pretend as</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * if the command failed.  If the device ever comes back online, we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * can deal with it then.  It is only because of unrecoverable errors</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * that we would ever take a device offline in the first place.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#scsi_device_online\">scsi_device_online</a>(<a class=\"id\" href=\"#sdp\">sdp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_media_not_present\">set_media_not_present</a>(<a class=\"id\" href=\"#sdkp\">sdkp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Using TEST_UNIT_READY enables differentiation between drive with</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * no cartridge loaded - NOT READY, drive with changed cartridge -</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * UNIT ATTENTION, or with same cartridge - GOOD STATUS.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Drives that auto spin down. eg iomega jaz 1G, will be started</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * by sd_spinup_disk() from sd_revalidate_disk(), which happens whenever</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * sd_revalidate() is called.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#scsi_block_when_processing_errors\">scsi_block_when_processing_errors</a>(<a class=\"id\" href=\"#sdp\">sdp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sshdr\">sshdr</a>  = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#sshdr\">sshdr</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#scsi_test_unit_ready\">scsi_test_unit_ready</a>(<a class=\"id\" href=\"#sdp\">sdp</a>, <a class=\"id\" href=\"#SD_TIMEOUT\">SD_TIMEOUT</a>, <a class=\"id\" href=\"#SD_MAX_RETRIES\">SD_MAX_RETRIES</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#sshdr\">sshdr</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Unable to test, unit probably not ready.   This usually</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * means there is no disc in the drive.  Mark as changed,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and we will figure it out later once the drive is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * available again.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> || (<a class=\"id\" href=\"#scsi_sense_valid\">scsi_sense_valid</a>(<a class=\"id\" href=\"#sshdr\">sshdr</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>       <span class=\"comment\">/* 0x3a is medium not present */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#sshdr\">sshdr</a>-><a class=\"id\" href=\"#asc\">asc</a> == 0x3a)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_media_not_present\">set_media_not_present</a>(<a class=\"id\" href=\"#sdkp\">sdkp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * For removable scsi disk we have to recognise the presence</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * of a disk in the drive. This is kept in the struct scsi_disk</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * struct and tested at open !  Daniel Roche (dan@lectra.fr)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#media_present\">media_present</a> = 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#changed\">changed</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sdp\">sdp</a>-><a class=\"id\" href=\"#changed\">changed</a> = 0;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> != <a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#previous_state\">previous_state</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sdev_evt_send_simple\">sdev_evt_send_simple</a>(<a class=\"id\" href=\"#sdp\">sdp</a>, <a class=\"id\" href=\"#SDEV_EVT_MEDIA_CHANGE\">SDEV_EVT_MEDIA_CHANGE</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#previous_state\">previous_state</a> = <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sshdr\">sshdr</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#sd_sync_cache\">sd_sync_cache</a>(struct <a class=\"id\" href=\"#scsi_disk\">scsi_disk</a> *<a class=\"id\" href=\"#sdkp\">sdkp</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retries\">retries</a>, <a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdp\">sdp</a> = <a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#device\">device</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_sense_hdr\">scsi_sense_hdr</a> <a class=\"id\" href=\"#sshdr\">sshdr</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#scsi_device_online\">scsi_device_online</a>(<a class=\"id\" href=\"#sdp\">sdp</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#retries\">retries</a> = 3; <a class=\"id\" href=\"#retries\">retries</a> &gt; 0; --<a class=\"id\" href=\"#retries\">retries</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#cmd\">cmd</a>[10] = { 0 };", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#SYNCHRONIZE_CACHE\">SYNCHRONIZE_CACHE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Leave the rest of the command zero to indicate</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * flush everything.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#scsi_execute_req\">scsi_execute_req</a>(<a class=\"id\" href=\"#sdp\">sdp</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#DMA_NONE\">DMA_NONE</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0, &amp;<a class=\"id\" href=\"#sshdr\">sshdr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#SD_TIMEOUT\">SD_TIMEOUT</a>, <a class=\"id\" href=\"#SD_MAX_RETRIES\">SD_MAX_RETRIES</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sd_print_result\">sd_print_result</a>(<a class=\"id\" href=\"#sdkp\">sdkp</a>, <a class=\"id\" href=\"#res\">res</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#driver_byte\">driver_byte</a>(<a class=\"id\" href=\"#res\">res</a>) &amp; <a class=\"id\" href=\"#DRIVER_SENSE\">DRIVER_SENSE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sd_print_sense_hdr\">sd_print_sense_hdr</a>(<a class=\"id\" href=\"#sdkp\">sdkp</a>, &amp;<a class=\"id\" href=\"#sshdr\">sshdr</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#sd_rescan\">sd_rescan</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_disk\">scsi_disk</a> *<a class=\"id\" href=\"#sdkp\">sdkp</a> = <a class=\"id\" href=\"#scsi_disk_get_from_dev\">scsi_disk_get_from_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sdkp\">sdkp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#revalidate_disk\">revalidate_disk</a>(<a class=\"id\" href=\"#sdkp\">sdkp</a>-><a class=\"id\" href=\"#disk\">disk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsi_disk_put\">scsi_disk_put</a>(<a class=\"id\" href=\"#sdkp\">sdkp</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>", 
"<span class=\"comment\">/* </span>", 
"<span class=\"comment\"> * This gets directly called from VFS. When the ioctl </span>", 
"<span class=\"comment\"> * is not recognized we go back to the other translation paths. </span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#sd_compat_ioctl\">sd_compat_ioctl</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#fmode_t\">fmode_t</a> <a class=\"id\" href=\"#mode\">mode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>, unsigned long <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a> = <a class=\"id\" href=\"#scsi_disk\">scsi_disk</a>(<a class=\"id\" href=\"#bdev\">bdev</a>-><a class=\"id\" href=\"#bd_disk\">bd_disk</a>)-><a class=\"id\" href=\"#device\">device</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If we are in the middle of error recovery, don't let anyone</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * else try and use this device.  Also, if error recovery fails, it</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * may try and take the device offline, in which case all further</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * access to the device is prohibited.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#scsi_block_when_processing_errors\">scsi_block_when_processing_errors</a>(<a class=\"id\" href=\"#sdev\">sdev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>       ", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#hostt\">hostt</a>-><a class=\"id\" href=\"#compat_ioctl\">compat_ioctl</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#hostt\">hostt</a>-><a class=\"id\" href=\"#compat_ioctl\">compat_ioctl</a>(<a class=\"id\" href=\"#sdev\">sdev</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, (void <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#arg\">arg</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* </span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Let the static ioctl translation table take care of it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOIOCTLCMD\">ENOIOCTLCMD</a>; ", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static const struct <a class=\"id\" href=\"#block_device_operations\">block_device_operations</a> <a class=\"id\" href=\"#sd_fops\">sd_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#sd_open\">sd_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#sd_release\">sd_release</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ioctl\">ioctl</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#sd_ioctl\">sd_ioctl</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#getgeo\">getgeo</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#sd_getgeo\">sd_getgeo</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#compat_ioctl\">compat_ioctl</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#sd_compat_ioctl\">sd_compat_ioctl</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#media_changed\">media_changed</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#sd_media_changed\">sd_media_changed</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#revalidate_disk\">revalidate_disk</a><span class=\"ts\"/>= <a class=\"id\" href=\"#sd_revalidate_disk\">sd_revalidate_disk</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#unlock_native_capacity\">unlock_native_capacity</a><span class=\"ts\"/>= <a class=\"id\" href=\"#sd_unlock_native_capacity\">sd_unlock_native_capacity</a>,", 
"};", 
"", 
"static unsigned int <a class=\"id\" href=\"#sd_completed_bytes\">sd_completed_bytes</a>(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#scmd\">scmd</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start_lba\">start_lba</a> = <a class=\"id\" href=\"#blk_rq_pos\">blk_rq_pos</a>(<a class=\"id\" href=\"#scmd\">scmd</a>-><a class=\"id\" href=\"#request\">request</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#end_lba\">end_lba</a> = <a class=\"id\" href=\"#blk_rq_pos\">blk_rq_pos</a>(<a class=\"id\" href=\"#scmd\">scmd</a>-><a class=\"id\" href=\"#request\">request</a>) + (<a class=\"id\" href=\"#scsi_bufflen\">scsi_bufflen</a>(<a class=\"id\" href=\"#scmd\">scmd</a>) / 512);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#bad_lba\">bad_lba</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#info_valid\">info_valid</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#scmd\">scmd</a>-><a class=\"id\" href=\"#request\">request</a>-><a class=\"id\" href=\"#cmd_type\">cmd_type</a> != <a class=\"id\" href=\"#REQ_TYPE_FS\">REQ_TYPE_FS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info_valid\">info_valid</a> = <a class=\"id\" href=\"#scsi_get_sense_info_fld\">scsi_get_sense_info_fld</a>(<a class=\"id\" href=\"#scmd\">scmd</a>-><a class=\"id\" href=\"#sense_buffer\">sense_buffer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#SCSI_SENSE_BUFFERSIZE\">SCSI_SENSE_BUFFERSIZE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     &amp;<a class=\"id\" href=\"#bad_lba\">bad_lba</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#info_valid\">info_valid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
];
xr_frag_insert('l/73/b5046a5ccd4c8fad2c2b214404d2b0cc5ba7bf.xr', __xr_tmp);
