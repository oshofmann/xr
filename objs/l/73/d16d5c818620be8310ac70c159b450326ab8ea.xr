var __xr_tmp = [
"<span class=\"ts\"/>int <a class=\"id\" href=\"#mycount\">mycount</a> = <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#mnt\">mnt</a>-><a class=\"id\" href=\"#mnt_count\">mnt_count</a>) - <a class=\"id\" href=\"#mnt\">mnt</a>-><a class=\"id\" href=\"#mnt_ghosts\">mnt_ghosts</a>;", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#mycount\">mycount</a> &gt; <a class=\"id\" href=\"#count\">count</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * check if the mount 'mnt' can be unmounted successfully.</span>", 
"<span class=\"comment\"> * @mnt: the mount to be checked for unmount</span>", 
"<span class=\"comment\"> * NOTE: unmounting 'mnt' would naturally propagate to all</span>", 
"<span class=\"comment\"> * other mounts its parent propagates to.</span>", 
"<span class=\"comment\"> * Check if any of these mounts that **do not have submounts**</span>", 
"<span class=\"comment\"> * have more references than 'refcnt'. If so return busy.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * vfsmount lock must be held for read or write</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#propagate_mount_busy\">propagate_mount_busy</a>(struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#mnt\">mnt</a>, int <a class=\"id\" href=\"#refcnt\">refcnt</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#m\">m</a>, *<a class=\"id\" href=\"#child\">child</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#mnt\">mnt</a>-><a class=\"id\" href=\"#mnt_parent\">mnt_parent</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mnt\">mnt</a> == <a class=\"id\" href=\"#parent\">parent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#do_refcount_check\">do_refcount_check</a>(<a class=\"id\" href=\"#mnt\">mnt</a>, <a class=\"id\" href=\"#refcnt\">refcnt</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * quickly check if the current mount can be unmounted.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If not, we don't have to go checking for all other</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * mounts</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#mnt\">mnt</a>-><a class=\"id\" href=\"#mnt_mounts\">mnt_mounts</a>) || <a class=\"id\" href=\"#do_refcount_check\">do_refcount_check</a>(<a class=\"id\" href=\"#mnt\">mnt</a>, <a class=\"id\" href=\"#refcnt\">refcnt</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#m\">m</a> = <a class=\"id\" href=\"#propagation_next\">propagation_next</a>(<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#parent\">parent</a>); <a class=\"id\" href=\"#m\">m</a>;", 
"<span class=\"ts\"/>     <span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a> = <a class=\"id\" href=\"#propagation_next\">propagation_next</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#parent\">parent</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a> = <a class=\"id\" href=\"#__lookup_mnt\">__lookup_mnt</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#mnt\">mnt</a>-><a class=\"id\" href=\"#mnt_mountpoint\">mnt_mountpoint</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#child\">child</a> && <a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#mnt_mounts\">mnt_mounts</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#do_refcount_check\">do_refcount_check</a>(<a class=\"id\" href=\"#child\">child</a>, 1)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * NOTE: unmounting 'mnt' naturally propagates to all other mounts its</span>", 
"<span class=\"comment\"> * parent propagates to.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#__propagate_umount\">__propagate_umount</a>(struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#mnt\">mnt</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#mnt\">mnt</a>-><a class=\"id\" href=\"#mnt_parent\">mnt_parent</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#m\">m</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#parent\">parent</a> == <a class=\"id\" href=\"#mnt\">mnt</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#m\">m</a> = <a class=\"id\" href=\"#propagation_next\">propagation_next</a>(<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#parent\">parent</a>); <a class=\"id\" href=\"#m\">m</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a> = <a class=\"id\" href=\"#propagation_next\">propagation_next</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#parent\">parent</a>)) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#child\">child</a> = <a class=\"id\" href=\"#__lookup_mnt\">__lookup_mnt</a>(<a class=\"id\" href=\"#m\">m</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mnt\">mnt</a>-><a class=\"id\" href=\"#mnt_mountpoint\">mnt_mountpoint</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * umount the child only if the child has no</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * other children</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#child\">child</a> && <a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#mnt_mounts\">mnt_mounts</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_move_tail\">list_move_tail</a>(&amp;<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#mnt_hash\">mnt_hash</a>, &amp;<a class=\"id\" href=\"#mnt\">mnt</a>-><a class=\"id\" href=\"#mnt_hash\">mnt_hash</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * collect all mounts that receive propagation from the mount in @list,</span>", 
"<span class=\"comment\"> * and return these additional mounts in the same list.</span>", 
"<span class=\"comment\"> * @list: the list of mounts to be unmounted.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * vfsmount lock must be held for write</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#propagate_umount\">propagate_umount</a>(struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#list\">list</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#mnt\">mnt</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#mnt\">mnt</a>, <a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#mnt_hash\">mnt_hash</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__propagate_umount\">__propagate_umount</a>(<a class=\"id\" href=\"#mnt\">mnt</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
];
xr_frag_insert('l/73/d16d5c818620be8310ac70c159b450326ab8ea.xr', __xr_tmp);
