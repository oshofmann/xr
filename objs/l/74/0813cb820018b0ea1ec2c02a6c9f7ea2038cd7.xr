var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DPRINTK\">DPRINTK</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": %s Optimum Power Calibration failed\\n\", <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * called at open time.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#pkt_open_dev\">pkt_open_dev</a>(struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a>, <a class=\"id\" href=\"#fmode_t\">fmode_t</a> <a class=\"id\" href=\"#write\">write</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#lba\">lba</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We need to re-open the cdrom device without O_NONBLOCK to be able</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to read/write from/to it. It is already opened in O_NONBLOCK mode</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so bdget() can't fail.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bdget\">bdget</a>(<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#bdev\">bdev</a>-><a class=\"id\" href=\"#bd_dev\">bd_dev</a>);", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#blkdev_get\">blkdev_get</a>(<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#FMODE_READ\">FMODE_READ</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#bd_claim\">bd_claim</a>(<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#pd\">pd</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_putdev\">out_putdev</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pkt_get_last_written\">pkt_get_last_written</a>(<a class=\"id\" href=\"#pd\">pd</a>, &amp;<a class=\"id\" href=\"#lba\">lba</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": pkt_get_last_written failed\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unclaim\">out_unclaim</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_capacity\">set_capacity</a>(<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#disk\">disk</a>, <a class=\"id\" href=\"#lba\">lba</a> << 2);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_capacity\">set_capacity</a>(<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#bdev\">bdev</a>-><a class=\"id\" href=\"#bd_disk\">bd_disk</a>, <a class=\"id\" href=\"#lba\">lba</a> << 2);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bd_set_size\">bd_set_size</a>(<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#bdev\">bdev</a>, (<a class=\"id\" href=\"#loff_t\">loff_t</a>)<a class=\"id\" href=\"#lba\">lba</a> << 11);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a> = <a class=\"id\" href=\"#bdev_get_queue\">bdev_get_queue</a>(<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#bdev\">bdev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#write\">write</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pkt_open_write\">pkt_open_write</a>(<a class=\"id\" href=\"#pd\">pd</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unclaim\">out_unclaim</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Some CDRW drives can not handle writes larger than one packet,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * even if the size is a multiple of the packet size.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_lock\">queue_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_queue_max_hw_sectors\">blk_queue_max_hw_sectors</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#settings\">settings</a>.<a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_lock\">queue_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#PACKET_WRITABLE\">PACKET_WRITABLE</a>, &amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_set_speed\">pkt_set_speed</a>(<a class=\"id\" href=\"#pd\">pd</a>, <a class=\"id\" href=\"#MAX_SPEED\">MAX_SPEED</a>, <a class=\"id\" href=\"#MAX_SPEED\">MAX_SPEED</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#PACKET_WRITABLE\">PACKET_WRITABLE</a>, &amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pkt_set_segment_merging\">pkt_set_segment_merging</a>(<a class=\"id\" href=\"#pd\">pd</a>, <a class=\"id\" href=\"#q\">q</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unclaim\">out_unclaim</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#write\">write</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pkt_grow_pktlist\">pkt_grow_pktlist</a>(<a class=\"id\" href=\"#pd\">pd</a>, <a class=\"id\" href=\"#CONFIG_CDROM_PKTCDVD_BUFFERS\">CONFIG_CDROM_PKTCDVD_BUFFERS</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": not enough memory for buffers\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unclaim\">out_unclaim</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": %lukB available on disc\\n\", <a class=\"id\" href=\"#lba\">lba</a> << 1);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#out_unclaim\">out_unclaim</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bd_release\">bd_release</a>(<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#bdev\">bdev</a>);", 
"<a class=\"id\" href=\"#out_putdev\">out_putdev</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blkdev_put\">blkdev_put</a>(<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#FMODE_READ\">FMODE_READ</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * called when the device is closed. makes sure that the device flushes</span>", 
"<span class=\"comment\"> * the internal cache before we close.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#pkt_release_dev\">pkt_release_dev</a>(struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a>, int <a class=\"id\" href=\"#flush\">flush</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flush\">flush</a> && <a class=\"id\" href=\"#pkt_flush_cache\">pkt_flush_cache</a>(<a class=\"id\" href=\"#pd\">pd</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DPRINTK\">DPRINTK</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": %s not flushing cache\\n\", <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt_lock_door\">pkt_lock_door</a>(<a class=\"id\" href=\"#pd\">pd</a>, 0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt_set_speed\">pkt_set_speed</a>(<a class=\"id\" href=\"#pd\">pd</a>, <a class=\"id\" href=\"#MAX_SPEED\">MAX_SPEED</a>, <a class=\"id\" href=\"#MAX_SPEED\">MAX_SPEED</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bd_release\">bd_release</a>(<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#bdev\">bdev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blkdev_put\">blkdev_put</a>(<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#FMODE_READ\">FMODE_READ</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt_shrink_pktlist\">pkt_shrink_pktlist</a>(<a class=\"id\" href=\"#pd\">pd</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pkt_find_dev_from_minor\">pkt_find_dev_from_minor</a>(unsigned int <a class=\"id\" href=\"#dev_minor\">dev_minor</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev_minor\">dev_minor</a> >= <a class=\"id\" href=\"#MAX_WRITERS\">MAX_WRITERS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pkt_devs\">pkt_devs</a>[<a class=\"id\" href=\"#dev_minor\">dev_minor</a>];", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pkt_open\">pkt_open</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#fmode_t\">fmode_t</a> <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VPRINTK\">VPRINTK</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": entering open\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_kernel\">lock_kernel</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#ctl_mutex\">ctl_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a> = <a class=\"id\" href=\"#pkt_find_dev_from_minor\">pkt_find_dev_from_minor</a>(<a class=\"id\" href=\"#MINOR\">MINOR</a>(<a class=\"id\" href=\"#bdev\">bdev</a>-><a class=\"id\" href=\"#bd_dev\">bd_dev</a>));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pd\">pd</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#refcnt\">refcnt</a> &lt; 0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#refcnt\">refcnt</a>++;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#refcnt\">refcnt</a> &gt; 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#mode\">mode</a> &amp; <a class=\"id\" href=\"#FMODE_WRITE\">FMODE_WRITE</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#PACKET_WRITABLE\">PACKET_WRITABLE</a>, &amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#flags\">flags</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_dec\">out_dec</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pkt_open_dev\">pkt_open_dev</a>(<a class=\"id\" href=\"#pd\">pd</a>, <a class=\"id\" href=\"#mode\">mode</a> &amp; <a class=\"id\" href=\"#FMODE_WRITE\">FMODE_WRITE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_dec\">out_dec</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * needed here as well, since ext2 (among others) may change</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the blocksize at mount time</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_blocksize\">set_blocksize</a>(<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#CD_FRAMESIZE\">CD_FRAMESIZE</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#ctl_mutex\">ctl_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_kernel\">unlock_kernel</a>();", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#out_dec\">out_dec</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#refcnt\">refcnt</a>--;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VPRINTK\">VPRINTK</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": failed open (%d)\\n\", <a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#ctl_mutex\">ctl_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_kernel\">unlock_kernel</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pkt_close\">pkt_close</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>, <a class=\"id\" href=\"#fmode_t\">fmode_t</a> <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a> = <a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_kernel\">lock_kernel</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#ctl_mutex\">ctl_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#refcnt\">refcnt</a>--;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#refcnt\">refcnt</a> &lt; 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#refcnt\">refcnt</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#flush\">flush</a> = <a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#PACKET_WRITABLE\">PACKET_WRITABLE</a>, &amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_release_dev\">pkt_release_dev</a>(<a class=\"id\" href=\"#pd\">pd</a>, <a class=\"id\" href=\"#flush\">flush</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#ctl_mutex\">ctl_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_kernel\">unlock_kernel</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"", 
"static void <a class=\"id\" href=\"#pkt_end_io_read_cloned\">pkt_end_io_read_cloned</a>(struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>, int <a class=\"id\" href=\"#err\">err</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_stacked_data\">packet_stacked_data</a> *<a class=\"id\" href=\"#psd\">psd</a> = <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_private\">bi_private</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a> = <a class=\"id\" href=\"#psd\">psd</a>-><a class=\"id\" href=\"#pd\">pd</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio_put\">bio_put</a>(<a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio_endio\">bio_endio</a>(<a class=\"id\" href=\"#psd\">psd</a>-><a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mempool_free\">mempool_free</a>(<a class=\"id\" href=\"#psd\">psd</a>, <a class=\"id\" href=\"#psd_pool\">psd_pool</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt_bio_finished\">pkt_bio_finished</a>(<a class=\"id\" href=\"#pd\">pd</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pkt_make_request\">pkt_make_request</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#b\">b</a>[<a class=\"id\" href=\"#BDEVNAME_SIZE\">BDEVNAME_SIZE</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#zone\">zone</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_data\">packet_data</a> *<a class=\"id\" href=\"#pkt\">pkt</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#was_empty\">was_empty</a>, <a class=\"id\" href=\"#blocked_bio\">blocked_bio</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pkt_rb_node\">pkt_rb_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queuedata\">queuedata</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pd\">pd</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": %s incorrect request queue\\n\", <a class=\"id\" href=\"#bdevname\">bdevname</a>(<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_bdev\">bi_bdev</a>, <a class=\"id\" href=\"#b\">b</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end_io\">end_io</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Clone READ bios so we can have our own bi_end_io callback.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bio_data_dir\">bio_data_dir</a>(<a class=\"id\" href=\"#bio\">bio</a>) == <a class=\"id\" href=\"#READ\">READ</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#cloned_bio\">cloned_bio</a> = <a class=\"id\" href=\"#bio_clone\">bio_clone</a>(<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#GFP_NOIO\">GFP_NOIO</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_stacked_data\">packet_stacked_data</a> *<a class=\"id\" href=\"#psd\">psd</a> = <a class=\"id\" href=\"#mempool_alloc\">mempool_alloc</a>(<a class=\"id\" href=\"#psd_pool\">psd_pool</a>, <a class=\"id\" href=\"#GFP_NOIO\">GFP_NOIO</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psd\">psd</a>-><a class=\"id\" href=\"#pd\">pd</a> = <a class=\"id\" href=\"#pd\">pd</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psd\">psd</a>-><a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#bio\">bio</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cloned_bio\">cloned_bio</a>-><a class=\"id\" href=\"#bi_bdev\">bi_bdev</a> = <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#bdev\">bdev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cloned_bio\">cloned_bio</a>-><a class=\"id\" href=\"#bi_private\">bi_private</a> = <a class=\"id\" href=\"#psd\">psd</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cloned_bio\">cloned_bio</a>-><a class=\"id\" href=\"#bi_end_io\">bi_end_io</a> = <a class=\"id\" href=\"#pkt_end_io_read_cloned\">pkt_end_io_read_cloned</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#secs_r\">secs_r</a> += <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_size\">bi_size</a> >> 9;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_queue_bio\">pkt_queue_bio</a>(<a class=\"id\" href=\"#pd\">pd</a>, <a class=\"id\" href=\"#cloned_bio\">cloned_bio</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#PACKET_WRITABLE\">PACKET_WRITABLE</a>, &amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#flags\">flags</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": WRITE for ro device %s (%llu)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#name\">name</a>, (unsigned long long)<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_sector\">bi_sector</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end_io\">end_io</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_size\">bi_size</a> || (<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_size\">bi_size</a> % <a class=\"id\" href=\"#CD_FRAMESIZE\">CD_FRAMESIZE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": wrong bio size\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end_io\">end_io</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_queue_bounce\">blk_queue_bounce</a>(<a class=\"id\" href=\"#q\">q</a>, &amp;<a class=\"id\" href=\"#bio\">bio</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#zone\">zone</a> = <a class=\"id\" href=\"#ZONE\">ZONE</a>(<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_sector\">bi_sector</a>, <a class=\"id\" href=\"#pd\">pd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VPRINTK\">VPRINTK</a>(\"pkt_make_request: start = %6llx stop = %6llx\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>(unsigned long long)<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_sector\">bi_sector</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>(unsigned long long)(<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_sector\">bi_sector</a> + <a class=\"id\" href=\"#bio_sectors\">bio_sectors</a>(<a class=\"id\" href=\"#bio\">bio</a>)));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check if we have to split the bio */</span>", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_pair\">bio_pair</a> *<a class=\"id\" href=\"#bp\">bp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#last_zone\">last_zone</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#first_sectors\">first_sectors</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_zone\">last_zone</a> = <a class=\"id\" href=\"#ZONE\">ZONE</a>(<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_sector\">bi_sector</a> + <a class=\"id\" href=\"#bio_sectors\">bio_sectors</a>(<a class=\"id\" href=\"#bio\">bio</a>) - 1, <a class=\"id\" href=\"#pd\">pd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#last_zone\">last_zone</a> != <a class=\"id\" href=\"#zone\">zone</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#last_zone\">last_zone</a> != <a class=\"id\" href=\"#zone\">zone</a> + <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#settings\">settings</a>.<a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#first_sectors\">first_sectors</a> = <a class=\"id\" href=\"#last_zone\">last_zone</a> - <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_sector\">bi_sector</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bp\">bp</a> = <a class=\"id\" href=\"#bio_split\">bio_split</a>(<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#first_sectors\">first_sectors</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#bp\">bp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_make_request\">pkt_make_request</a>(<a class=\"id\" href=\"#q\">q</a>, &amp;<a class=\"id\" href=\"#bp\">bp</a>-><a class=\"id\" href=\"#bio1\">bio1</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_make_request\">pkt_make_request</a>(<a class=\"id\" href=\"#q\">q</a>, &amp;<a class=\"id\" href=\"#bp\">bp</a>-><a class=\"id\" href=\"#bio2\">bio2</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio_pair_release\">bio_pair_release</a>(<a class=\"id\" href=\"#bp\">bp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If we find a matching packet in state WAITING or READ_WAIT, we can</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * just append this bio to that packet.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#cdrw\">cdrw</a>.<a class=\"id\" href=\"#active_list_lock\">active_list_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blocked_bio\">blocked_bio</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#pkt\">pkt</a>, &amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#cdrw\">cdrw</a>.<a class=\"id\" href=\"#pkt_active_list\">pkt_active_list</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#sector\">sector</a> == <a class=\"id\" href=\"#zone\">zone</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#state\">state</a> == <a class=\"id\" href=\"#PACKET_WAITING_STATE\">PACKET_WAITING_STATE</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#state\">state</a> == <a class=\"id\" href=\"#PACKET_READ_WAIT_STATE\">PACKET_READ_WAIT_STATE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio_list_add\">bio_list_add</a>(&amp;<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#orig_bios\">orig_bios</a>, <a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#write_size\">write_size</a> += <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_size\">bi_size</a> / <a class=\"id\" href=\"#CD_FRAMESIZE\">CD_FRAMESIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#write_size\">write_size</a> >= <a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#frames\">frames</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#state\">state</a> == <a class=\"id\" href=\"#PACKET_WAITING_STATE\">PACKET_WAITING_STATE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#run_sm\">run_sm</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up\">wake_up</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#wqueue\">wqueue</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#cdrw\">cdrw</a>.<a class=\"id\" href=\"#active_list_lock\">active_list_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blocked_bio\">blocked_bio</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#cdrw\">cdrw</a>.<a class=\"id\" href=\"#active_list_lock\">active_list_lock</a>);", 
"", 
" <span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Test if there is enough room left in the bio work queue</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * (queue size &gt;= congestion on mark).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If not, wait till the work queue size is below the congestion off mark.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#write_congestion_on\">write_congestion_on</a> &gt; 0", 
"<span class=\"ts\"/>    && <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#bio_queue_size\">bio_queue_size</a> >= <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#write_congestion_on\">write_congestion_on</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bdi_congested\">set_bdi_congested</a>(&amp;<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#backing_dev_info\">backing_dev_info</a>, <a class=\"id\" href=\"#BLK_RW_ASYNC\">BLK_RW_ASYNC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#congestion_wait\">congestion_wait</a>(<a class=\"id\" href=\"#BLK_RW_ASYNC\">BLK_RW_ASYNC</a>, <a class=\"id\" href=\"#HZ\">HZ</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} while(<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#bio_queue_size\">bio_queue_size</a> &gt; <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#write_congestion_off\">write_congestion_off</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * No matching packet found. Store the bio in the work queue.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#mempool_alloc\">mempool_alloc</a>(<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#rb_pool\">rb_pool</a>, <a class=\"id\" href=\"#GFP_NOIO\">GFP_NOIO</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#bio\">bio</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#bio_queue_size\">bio_queue_size</a> &lt; 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#was_empty\">was_empty</a> = (<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#bio_queue_size\">bio_queue_size</a> == 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt_rbtree_insert\">pkt_rbtree_insert</a>(<a class=\"id\" href=\"#pd\">pd</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Wake up the worker thread.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#scan_queue\">scan_queue</a>, 1);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#was_empty\">was_empty</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* This wake_up is required for correct operation */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up\">wake_up</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#wqueue\">wqueue</a>);", 
"<span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#cdrw\">cdrw</a>.<a class=\"id\" href=\"#pkt_free_list\">pkt_free_list</a>) && !<a class=\"id\" href=\"#blocked_bio\">blocked_bio</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * This wake up is not required for correct operation,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * but improves performance in some cases.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up\">wake_up</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#wqueue\">wqueue</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"<a class=\"id\" href=\"#end_io\">end_io</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio_io_error\">bio_io_error</a>(<a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"", 
"", 
"static int <a class=\"id\" href=\"#pkt_merge_bvec\">pkt_merge_bvec</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#bvec_merge_data\">bvec_merge_data</a> *<a class=\"id\" href=\"#bmd\">bmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a> *<a class=\"id\" href=\"#bvec\">bvec</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queuedata\">queuedata</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#zone\">zone</a> = <a class=\"id\" href=\"#ZONE\">ZONE</a>(<a class=\"id\" href=\"#bmd\">bmd</a>-><a class=\"id\" href=\"#bi_sector\">bi_sector</a>, <a class=\"id\" href=\"#pd\">pd</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#used\">used</a> = ((<a class=\"id\" href=\"#bmd\">bmd</a>-><a class=\"id\" href=\"#bi_sector\">bi_sector</a> - <a class=\"id\" href=\"#zone\">zone</a>) << 9) + <a class=\"id\" href=\"#bmd\">bmd</a>-><a class=\"id\" href=\"#bi_size\">bi_size</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#remaining\">remaining</a> = (<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#settings\">settings</a>.<a class=\"id\" href=\"#size\">size</a> << 9) - <a class=\"id\" href=\"#used\">used</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#remaining2\">remaining2</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * A bio &lt;= PAGE_SIZE must be allowed. If it crosses a packet</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * boundary, pkt_make_request() will split the bio.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#remaining2\">remaining2</a> = <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - <a class=\"id\" href=\"#bmd\">bmd</a>-><a class=\"id\" href=\"#bi_size\">bi_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#remaining\">remaining</a> = <a class=\"id\" href=\"#max\">max</a>(<a class=\"id\" href=\"#remaining\">remaining</a>, <a class=\"id\" href=\"#remaining2\">remaining2</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#remaining\">remaining</a> &lt; 0);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#remaining\">remaining</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#pkt_init_queue\">pkt_init_queue</a>(struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a> = <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#queue\">queue</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_queue_make_request\">blk_queue_make_request</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#pkt_make_request\">pkt_make_request</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_queue_logical_block_size\">blk_queue_logical_block_size</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#CD_FRAMESIZE\">CD_FRAMESIZE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_queue_max_hw_sectors\">blk_queue_max_hw_sectors</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#PACKET_MAX_SECTORS\">PACKET_MAX_SECTORS</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_queue_merge_bvec\">blk_queue_merge_bvec</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#pkt_merge_bvec\">pkt_merge_bvec</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queuedata\">queuedata</a> = <a class=\"id\" href=\"#pd\">pd</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pkt_seq_show\">pkt_seq_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a> = <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#msg\">msg</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#bdev_buf\">bdev_buf</a>[<a class=\"id\" href=\"#BDEVNAME_SIZE\">BDEVNAME_SIZE</a>];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#states\">states</a>[<a class=\"id\" href=\"#PACKET_NUM_STATES\">PACKET_NUM_STATES</a>];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"Writer %s mapped to %s:\\n\", <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#bdevname\">bdevname</a>(<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#bdev_buf\">bdev_buf</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\nSettings:\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\tpacket size:\\t\\t%dkB\\n\", <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#settings\">settings</a>.<a class=\"id\" href=\"#size\">size</a> / 2);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#settings\">settings</a>.<a class=\"id\" href=\"#write_type\">write_type</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a> = \"Packet\";", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a> = \"Unknown\";", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\twrite type:\\t\\t%s\\n\", <a class=\"id\" href=\"#msg\">msg</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\tpacket type:\\t\\t%s\\n\", <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#settings\">settings</a>.<a class=\"id\" href=\"#fp\">fp</a> ? \"Fixed\" : \"Variable\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\tlink loss:\\t\\t%d\\n\", <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#settings\">settings</a>.<a class=\"id\" href=\"#link_loss\">link_loss</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\ttrack mode:\\t\\t%d\\n\", <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#settings\">settings</a>.<a class=\"id\" href=\"#track_mode\">track_mode</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#settings\">settings</a>.<a class=\"id\" href=\"#block_mode\">block_mode</a> == <a class=\"id\" href=\"#PACKET_BLOCK_MODE1\">PACKET_BLOCK_MODE1</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a> = \"Mode 1\";", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#settings\">settings</a>.<a class=\"id\" href=\"#block_mode\">block_mode</a> == <a class=\"id\" href=\"#PACKET_BLOCK_MODE2\">PACKET_BLOCK_MODE2</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a> = \"Mode 2\";", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a> = \"Unknown\";", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\tblock mode:\\t\\t%s\\n\", <a class=\"id\" href=\"#msg\">msg</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\nStatistics:\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\tpackets started:\\t%lu\\n\", <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#pkt_started\">pkt_started</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\tpackets ended:\\t\\t%lu\\n\", <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#pkt_ended\">pkt_ended</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\twritten:\\t\\t%lukB\\n\", <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#secs_w\">secs_w</a> >> 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\tread gather:\\t\\t%lukB\\n\", <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#secs_rg\">secs_rg</a> >> 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\tread:\\t\\t\\t%lukB\\n\", <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#secs_r\">secs_r</a> >> 1);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\nMisc:\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\treference count:\\t%d\\n\", <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#refcnt\">refcnt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\tflags:\\t\\t\\t0x%lx\\n\", <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\tread speed:\\t\\t%ukB/s\\n\", <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#read_speed\">read_speed</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\twrite speed:\\t\\t%ukB/s\\n\", <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#write_speed\">write_speed</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\tstart offset:\\t\\t%lu\\n\", <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\tmode page offset:\\t%u\\n\", <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#mode_offset\">mode_offset</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\nQueue state:\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\tbios queued:\\t\\t%d\\n\", <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#bio_queue_size\">bio_queue_size</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\tbios pending:\\t\\t%d\\n\", <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#cdrw\">cdrw</a>.<a class=\"id\" href=\"#pending_bios\">pending_bios</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\tcurrent sector:\\t\\t0x%llx\\n\", (unsigned long long)<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#current_sector\">current_sector</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt_count_states\">pkt_count_states</a>(<a class=\"id\" href=\"#pd\">pd</a>, <a class=\"id\" href=\"#states\">states</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\tstate:\\t\\t\\ti:%d ow:%d rw:%d ww:%d rec:%d fin:%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#states\">states</a>[0], <a class=\"id\" href=\"#states\">states</a>[1], <a class=\"id\" href=\"#states\">states</a>[2], <a class=\"id\" href=\"#states\">states</a>[3], <a class=\"id\" href=\"#states\">states</a>[4], <a class=\"id\" href=\"#states\">states</a>[5]);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\twrite congestion marks:\\toff=%d on=%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#write_congestion_off\">write_congestion_off</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#write_congestion_on\">write_congestion_on</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pkt_seq_open\">pkt_seq_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#single_open\">single_open</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#pkt_seq_show\">pkt_seq_show</a>, <a class=\"id\" href=\"#PDE\">PDE</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#data\">data</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#pkt_proc_fops\">pkt_proc_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/>= <a class=\"id\" href=\"#pkt_seq_open\">pkt_seq_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a> = <a class=\"id\" href=\"#single_release\">single_release</a>", 
"};", 
"", 
"static int <a class=\"id\" href=\"#pkt_new_dev\">pkt_new_dev</a>(struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a>, <a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#b\">b</a>[<a class=\"id\" href=\"#BDEVNAME_SIZE\">BDEVNAME_SIZE</a>];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#pkt_dev\">pkt_dev</a> == <a class=\"id\" href=\"#dev\">dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": Recursive setup not allowed\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#MAX_WRITERS\">MAX_WRITERS</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd2\">pd2</a> = <a class=\"id\" href=\"#pkt_devs\">pkt_devs</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pd2\">pd2</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pd2\">pd2</a>-><a class=\"id\" href=\"#bdev\">bdev</a>-><a class=\"id\" href=\"#bd_dev\">bd_dev</a> == <a class=\"id\" href=\"#dev\">dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": %s already setup\\n\", <a class=\"id\" href=\"#bdevname\">bdevname</a>(<a class=\"id\" href=\"#pd2\">pd2</a>-><a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#b\">b</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pd2\">pd2</a>-><a class=\"id\" href=\"#pkt_dev\">pkt_dev</a> == <a class=\"id\" href=\"#dev\">dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": Can't chain pktcdvd devices\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bdev\">bdev</a> = <a class=\"id\" href=\"#bdget\">bdget</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bdev\">bdev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#blkdev_get\">blkdev_get</a>(<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#FMODE_READ\">FMODE_READ</a> | <a class=\"id\" href=\"#FMODE_NDELAY\">FMODE_NDELAY</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* This is safe, since we have a reference from open(). */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__module_get\">__module_get</a>(<a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#bdev\">bdev</a> = <a class=\"id\" href=\"#bdev\">bdev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_blocksize\">set_blocksize</a>(<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#CD_FRAMESIZE\">CD_FRAMESIZE</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt_init_queue\">pkt_init_queue</a>(<a class=\"id\" href=\"#pd\">pd</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#cdrw\">cdrw</a>.<a class=\"id\" href=\"#pending_bios\">pending_bios</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#cdrw\">cdrw</a>.<a class=\"id\" href=\"#thread\">thread</a> = <a class=\"id\" href=\"#kthread_run\">kthread_run</a>(<a class=\"id\" href=\"#kcdrwd\">kcdrwd</a>, <a class=\"id\" href=\"#pd\">pd</a>, \"%s\", <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#cdrw\">cdrw</a>.<a class=\"id\" href=\"#thread\">thread</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": can't start kernel thread\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_mem\">out_mem</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proc_create_data\">proc_create_data</a>(<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#name\">name</a>, 0, <a class=\"id\" href=\"#pkt_proc\">pkt_proc</a>, &amp;<a class=\"id\" href=\"#pkt_proc_fops\">pkt_proc_fops</a>, <a class=\"id\" href=\"#pd\">pd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DPRINTK\">DPRINTK</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": writer %s mapped to %s\\n\", <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#bdevname\">bdevname</a>(<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#b\">b</a>));", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#out_mem\">out_mem</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blkdev_put\">blkdev_put</a>(<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#FMODE_READ\">FMODE_READ</a> | <a class=\"id\" href=\"#FMODE_NDELAY\">FMODE_NDELAY</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* This is safe: open() is still holding a reference. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pkt_ioctl\">pkt_ioctl</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#fmode_t\">fmode_t</a> <a class=\"id\" href=\"#mode\">mode</a>, unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>, unsigned long <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a> = <a class=\"id\" href=\"#bdev\">bdev</a>-><a class=\"id\" href=\"#bd_disk\">bd_disk</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VPRINTK\">VPRINTK</a>(\"pkt_ioctl: cmd %x, dev %d:%d\\n\", <a class=\"id\" href=\"#cmd\">cmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#MAJOR\">MAJOR</a>(<a class=\"id\" href=\"#bdev\">bdev</a>-><a class=\"id\" href=\"#bd_dev\">bd_dev</a>), <a class=\"id\" href=\"#MINOR\">MINOR</a>(<a class=\"id\" href=\"#bdev\">bdev</a>-><a class=\"id\" href=\"#bd_dev\">bd_dev</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_kernel\">lock_kernel</a>();", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#cmd\">cmd</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CDROMEJECT\">CDROMEJECT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The door gets locked when the device is opened, so we</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * have to unlock it or else the eject command fails.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#refcnt\">refcnt</a> == 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_lock_door\">pkt_lock_door</a>(<a class=\"id\" href=\"#pd\">pd</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fallthru */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * forward selected CDROM ioctls to CD-ROM, for UDF</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CDROMMULTISESSION\">CDROMMULTISESSION</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CDROMREADTOCENTRY\">CDROMREADTOCENTRY</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CDROM_LAST_WRITTEN\">CDROM_LAST_WRITTEN</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CDROM_SEND_PACKET\">CDROM_SEND_PACKET</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SCSI_IOCTL_SEND_COMMAND\">SCSI_IOCTL_SEND_COMMAND</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#__blkdev_driver_ioctl\">__blkdev_driver_ioctl</a>(<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#VPRINTK\">VPRINTK</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": Unknown ioctl for %s (%x)\\n\", <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#cmd\">cmd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOTTY\">ENOTTY</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_kernel\">unlock_kernel</a>();", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pkt_media_changed\">pkt_media_changed</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a> = <a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#attached_disk\">attached_disk</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pd\">pd</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#bdev\">bdev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#attached_disk\">attached_disk</a> = <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#bdev\">bdev</a>-><a class=\"id\" href=\"#bd_disk\">bd_disk</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#attached_disk\">attached_disk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#attached_disk\">attached_disk</a>-><a class=\"id\" href=\"#fops\">fops</a>-><a class=\"id\" href=\"#media_changed\">media_changed</a>(<a class=\"id\" href=\"#attached_disk\">attached_disk</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#block_device_operations\">block_device_operations</a> <a class=\"id\" href=\"#pktcdvd_ops\">pktcdvd_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a> =<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_open\">pkt_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_close\">pkt_close</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ioctl\">ioctl</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_ioctl\">pkt_ioctl</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#media_changed\">media_changed</a> =<span class=\"ts\"/><a class=\"id\" href=\"#pkt_media_changed\">pkt_media_changed</a>,", 
"};", 
"", 
"static char *<a class=\"id\" href=\"#pktcdvd_devnode\">pktcdvd_devnode</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#gd\">gd</a>, <a class=\"id\" href=\"#mode_t\">mode_t</a> *<a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#kasprintf\">kasprintf</a>(<a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>, \"pktcdvd/%s\", <a class=\"id\" href=\"#gd\">gd</a>-><a class=\"id\" href=\"#disk_name\">disk_name</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Set up mapping from pktcdvd device to CD-ROM device.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#pkt_setup_dev\">pkt_setup_dev</a>(<a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#dev_t\">dev_t</a>* <a class=\"id\" href=\"#pkt_dev\">pkt_dev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#idx\">idx</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock_nested\">mutex_lock_nested</a>(&amp;<a class=\"id\" href=\"#ctl_mutex\">ctl_mutex</a>, <a class=\"id\" href=\"#SINGLE_DEPTH_NESTING\">SINGLE_DEPTH_NESTING</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#idx\">idx</a> = 0; <a class=\"id\" href=\"#idx\">idx</a> &lt; <a class=\"id\" href=\"#MAX_WRITERS\">MAX_WRITERS</a>; <a class=\"id\" href=\"#idx\">idx</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pkt_devs\">pkt_devs</a>[<a class=\"id\" href=\"#idx\">idx</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idx\">idx</a> == <a class=\"id\" href=\"#MAX_WRITERS\">MAX_WRITERS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": max %d writers supported\\n\", <a class=\"id\" href=\"#MAX_WRITERS\">MAX_WRITERS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_mutex\">out_mutex</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pd\">pd</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_mutex\">out_mutex</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#rb_pool\">rb_pool</a> = <a class=\"id\" href=\"#mempool_create_kmalloc_pool\">mempool_create_kmalloc_pool</a>(<a class=\"id\" href=\"#PKT_RB_POOL_SIZE\">PKT_RB_POOL_SIZE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  sizeof(struct <a class=\"id\" href=\"#pkt_rb_node\">pkt_rb_node</a>));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#rb_pool\">rb_pool</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_mem\">out_mem</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#cdrw\">cdrw</a>.<a class=\"id\" href=\"#pkt_free_list\">pkt_free_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#cdrw\">cdrw</a>.<a class=\"id\" href=\"#pkt_active_list\">pkt_active_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#cdrw\">cdrw</a>.<a class=\"id\" href=\"#active_list_lock\">active_list_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#iosched\">iosched</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio_list_init\">bio_list_init</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#iosched\">iosched</a>.<a class=\"id\" href=\"#read_queue\">read_queue</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio_list_init\">bio_list_init</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#iosched\">iosched</a>.<a class=\"id\" href=\"#write_queue\">write_queue</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\"%d\", <a class=\"id\" href=\"#idx\">idx</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_waitqueue_head\">init_waitqueue_head</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#wqueue\">wqueue</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#bio_queue\">bio_queue</a> = <a class=\"id\" href=\"#RB_ROOT\">RB_ROOT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#write_congestion_on\">write_congestion_on</a>  = <a class=\"id\" href=\"#write_congestion_on\">write_congestion_on</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#write_congestion_off\">write_congestion_off</a> = <a class=\"id\" href=\"#write_congestion_off\">write_congestion_off</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disk\">disk</a> = <a class=\"id\" href=\"#alloc_disk\">alloc_disk</a>(1);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#disk\">disk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_mem\">out_mem</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#disk\">disk</a> = <a class=\"id\" href=\"#disk\">disk</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#major\">major</a> = <a class=\"id\" href=\"#pktdev_major\">pktdev_major</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#first_minor\">first_minor</a> = <a class=\"id\" href=\"#idx\">idx</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#fops\">fops</a> = &amp;<a class=\"id\" href=\"#pktcdvd_ops\">pktcdvd_ops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#GENHD_FL_REMOVABLE\">GENHD_FL_REMOVABLE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#strcpy\">strcpy</a>(<a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#disk_name\">disk_name</a>, <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#devnode\">devnode</a> = <a class=\"id\" href=\"#pktcdvd_devnode\">pktcdvd_devnode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#private_data\">private_data</a> = <a class=\"id\" href=\"#pd\">pd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#queue\">queue</a> = <a class=\"id\" href=\"#blk_alloc_queue\">blk_alloc_queue</a>(<a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#queue\">queue</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_mem2\">out_mem2</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#pkt_dev\">pkt_dev</a> = <a class=\"id\" href=\"#MKDEV\">MKDEV</a>(<a class=\"id\" href=\"#pktdev_major\">pktdev_major</a>, <a class=\"id\" href=\"#idx\">idx</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pkt_new_dev\">pkt_new_dev</a>(<a class=\"id\" href=\"#pd\">pd</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_new_dev\">out_new_dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#add_disk\">add_disk</a>(<a class=\"id\" href=\"#disk\">disk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt_sysfs_dev_new\">pkt_sysfs_dev_new</a>(<a class=\"id\" href=\"#pd\">pd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt_debugfs_dev_new\">pkt_debugfs_dev_new</a>(<a class=\"id\" href=\"#pd\">pd</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt_devs\">pkt_devs</a>[<a class=\"id\" href=\"#idx\">idx</a>] = <a class=\"id\" href=\"#pd\">pd</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pkt_dev\">pkt_dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#pkt_dev\">pkt_dev</a> = <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#pkt_dev\">pkt_dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#ctl_mutex\">ctl_mutex</a>);", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#out_new_dev\">out_new_dev</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_cleanup_queue\">blk_cleanup_queue</a>(<a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#queue\">queue</a>);", 
"<a class=\"id\" href=\"#out_mem2\">out_mem2</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_disk\">put_disk</a>(<a class=\"id\" href=\"#disk\">disk</a>);", 
"<a class=\"id\" href=\"#out_mem\">out_mem</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#rb_pool\">rb_pool</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mempool_destroy\">mempool_destroy</a>(<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#rb_pool\">rb_pool</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#pd\">pd</a>);", 
"<a class=\"id\" href=\"#out_mutex\">out_mutex</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#ctl_mutex\">ctl_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": setup of pktcdvd device failed\\n\");", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Tear down mapping from pktcdvd device to CD-ROM device.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#pkt_remove_dev\">pkt_remove_dev</a>(<a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#pkt_dev\">pkt_dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#idx\">idx</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock_nested\">mutex_lock_nested</a>(&amp;<a class=\"id\" href=\"#ctl_mutex\">ctl_mutex</a>, <a class=\"id\" href=\"#SINGLE_DEPTH_NESTING\">SINGLE_DEPTH_NESTING</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#idx\">idx</a> = 0; <a class=\"id\" href=\"#idx\">idx</a> &lt; <a class=\"id\" href=\"#MAX_WRITERS\">MAX_WRITERS</a>; <a class=\"id\" href=\"#idx\">idx</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a> = <a class=\"id\" href=\"#pkt_devs\">pkt_devs</a>[<a class=\"id\" href=\"#idx\">idx</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pd\">pd</a> && (<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#pkt_dev\">pkt_dev</a> == <a class=\"id\" href=\"#pkt_dev\">pkt_dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idx\">idx</a> == <a class=\"id\" href=\"#MAX_WRITERS\">MAX_WRITERS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DPRINTK\">DPRINTK</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": dev not setup\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#refcnt\">refcnt</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#cdrw\">cdrw</a>.<a class=\"id\" href=\"#thread\">thread</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kthread_stop\">kthread_stop</a>(<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#cdrw\">cdrw</a>.<a class=\"id\" href=\"#thread\">thread</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt_devs\">pkt_devs</a>[<a class=\"id\" href=\"#idx\">idx</a>] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt_debugfs_dev_remove\">pkt_debugfs_dev_remove</a>(<a class=\"id\" href=\"#pd\">pd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt_sysfs_dev_remove\">pkt_sysfs_dev_remove</a>(<a class=\"id\" href=\"#pd\">pd</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blkdev_put\">blkdev_put</a>(<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#FMODE_READ\">FMODE_READ</a> | <a class=\"id\" href=\"#FMODE_NDELAY\">FMODE_NDELAY</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#remove_proc_entry\">remove_proc_entry</a>(<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#pkt_proc\">pkt_proc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DPRINTK\">DPRINTK</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": writer %s unmapped\\n\", <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#del_gendisk\">del_gendisk</a>(<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#disk\">disk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_cleanup_queue\">blk_cleanup_queue</a>(<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#queue\">queue</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_disk\">put_disk</a>(<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#disk\">disk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mempool_destroy\">mempool_destroy</a>(<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#rb_pool\">rb_pool</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#pd\">pd</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* This is safe: open() is still holding a reference. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#ctl_mutex\">ctl_mutex</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#pkt_get_status\">pkt_get_status</a>(struct <a class=\"id\" href=\"#pkt_ctrl_command\">pkt_ctrl_command</a> *<a class=\"id\" href=\"#ctrl_cmd\">ctrl_cmd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock_nested\">mutex_lock_nested</a>(&amp;<a class=\"id\" href=\"#ctl_mutex\">ctl_mutex</a>, <a class=\"id\" href=\"#SINGLE_DEPTH_NESTING\">SINGLE_DEPTH_NESTING</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a> = <a class=\"id\" href=\"#pkt_find_dev_from_minor\">pkt_find_dev_from_minor</a>(<a class=\"id\" href=\"#ctrl_cmd\">ctrl_cmd</a>-><a class=\"id\" href=\"#dev_index\">dev_index</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pd\">pd</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctrl_cmd\">ctrl_cmd</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#new_encode_dev\">new_encode_dev</a>(<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#bdev\">bdev</a>-><a class=\"id\" href=\"#bd_dev\">bd_dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctrl_cmd\">ctrl_cmd</a>-><a class=\"id\" href=\"#pkt_dev\">pkt_dev</a> = <a class=\"id\" href=\"#new_encode_dev\">new_encode_dev</a>(<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#pkt_dev\">pkt_dev</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctrl_cmd\">ctrl_cmd</a>-><a class=\"id\" href=\"#dev\">dev</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctrl_cmd\">ctrl_cmd</a>-><a class=\"id\" href=\"#pkt_dev\">pkt_dev</a> = 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctrl_cmd\">ctrl_cmd</a>-><a class=\"id\" href=\"#num_devices\">num_devices</a> = <a class=\"id\" href=\"#MAX_WRITERS\">MAX_WRITERS</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#ctl_mutex\">ctl_mutex</a>);", 
"}", 
"", 
"static long <a class=\"id\" href=\"#pkt_ctl_ioctl\">pkt_ctl_ioctl</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>, unsigned long <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#argp\">argp</a> = (void <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#arg\">arg</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pkt_ctrl_command\">pkt_ctrl_command</a> <a class=\"id\" href=\"#ctrl_cmd\">ctrl_cmd</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#pkt_dev\">pkt_dev</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cmd\">cmd</a> != <a class=\"id\" href=\"#PACKET_CTRL_CMD\">PACKET_CTRL_CMD</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOTTY\">ENOTTY</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#ctrl_cmd\">ctrl_cmd</a>, <a class=\"id\" href=\"#argp\">argp</a>, sizeof(struct <a class=\"id\" href=\"#pkt_ctrl_command\">pkt_ctrl_command</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#ctrl_cmd\">ctrl_cmd</a>.<a class=\"id\" href=\"#command\">command</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PKT_CTRL_CMD_SETUP\">PKT_CTRL_CMD_SETUP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_ADMIN\">CAP_SYS_ADMIN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pkt_setup_dev\">pkt_setup_dev</a>(<a class=\"id\" href=\"#new_decode_dev\">new_decode_dev</a>(<a class=\"id\" href=\"#ctrl_cmd\">ctrl_cmd</a>.<a class=\"id\" href=\"#dev\">dev</a>), &amp;<a class=\"id\" href=\"#pkt_dev\">pkt_dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctrl_cmd\">ctrl_cmd</a>.<a class=\"id\" href=\"#pkt_dev\">pkt_dev</a> = <a class=\"id\" href=\"#new_encode_dev\">new_encode_dev</a>(<a class=\"id\" href=\"#pkt_dev\">pkt_dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PKT_CTRL_CMD_TEARDOWN\">PKT_CTRL_CMD_TEARDOWN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_ADMIN\">CAP_SYS_ADMIN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pkt_remove_dev\">pkt_remove_dev</a>(<a class=\"id\" href=\"#new_decode_dev\">new_decode_dev</a>(<a class=\"id\" href=\"#ctrl_cmd\">ctrl_cmd</a>.<a class=\"id\" href=\"#pkt_dev\">pkt_dev</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PKT_CTRL_CMD_STATUS\">PKT_CTRL_CMD_STATUS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_get_status\">pkt_get_status</a>(&amp;<a class=\"id\" href=\"#ctrl_cmd\">ctrl_cmd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOTTY\">ENOTTY</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#argp\">argp</a>, &amp;<a class=\"id\" href=\"#ctrl_cmd\">ctrl_cmd</a>, sizeof(struct <a class=\"id\" href=\"#pkt_ctrl_command\">pkt_ctrl_command</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>", 
"static long <a class=\"id\" href=\"#pkt_ctl_compat_ioctl\">pkt_ctl_compat_ioctl</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>, unsigned long <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pkt_ctl_ioctl\">pkt_ctl_ioctl</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, (unsigned long)<a class=\"id\" href=\"#compat_ptr\">compat_ptr</a>(<a class=\"id\" href=\"#arg\">arg</a>));", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#pkt_ctl_fops\">pkt_ctl_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#nonseekable_open\">nonseekable_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#unlocked_ioctl\">unlocked_ioctl</a><span class=\"ts\"/>= <a class=\"id\" href=\"#pkt_ctl_ioctl\">pkt_ctl_ioctl</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#compat_ioctl\">compat_ioctl</a><span class=\"ts\"/>= <a class=\"id\" href=\"#pkt_ctl_compat_ioctl\">pkt_ctl_compat_ioctl</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#miscdevice\">miscdevice</a> <a class=\"id\" href=\"#pkt_misc\">pkt_misc</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#minor\">minor</a> <span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#MISC_DYNAMIC_MINOR\">MISC_DYNAMIC_MINOR</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a>  <span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#nodename\">nodename</a><span class=\"ts\"/>= \"pktcdvd/control\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#fops\">fops</a>  <span class=\"ts\"/><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#pkt_ctl_fops\">pkt_ctl_fops</a>", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#pkt_init\">pkt_init</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_init\">mutex_init</a>(&amp;<a class=\"id\" href=\"#ctl_mutex\">ctl_mutex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#psd_pool\">psd_pool</a> = <a class=\"id\" href=\"#mempool_create_kmalloc_pool\">mempool_create_kmalloc_pool</a>(<a class=\"id\" href=\"#PSD_POOL_SIZE\">PSD_POOL_SIZE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sizeof(struct <a class=\"id\" href=\"#packet_stacked_data\">packet_stacked_data</a>));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#psd_pool\">psd_pool</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#register_blkdev\">register_blkdev</a>(<a class=\"id\" href=\"#pktdev_major\">pktdev_major</a>, <a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": Unable to register block device\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out2\">out2</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pktdev_major\">pktdev_major</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pktdev_major\">pktdev_major</a> = <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pkt_sysfs_init\">pkt_sysfs_init</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt_debugfs_init\">pkt_debugfs_init</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#misc_register\">misc_register</a>(&amp;<a class=\"id\" href=\"#pkt_misc\">pkt_misc</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": Unable to register misc device\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_misc\">out_misc</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt_proc\">pkt_proc</a> = <a class=\"id\" href=\"#proc_mkdir\">proc_mkdir</a>(\"driver/\"<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#out_misc\">out_misc</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt_debugfs_cleanup\">pkt_debugfs_cleanup</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt_sysfs_cleanup\">pkt_sysfs_cleanup</a>();", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_blkdev\">unregister_blkdev</a>(<a class=\"id\" href=\"#pktdev_major\">pktdev_major</a>, <a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>);", 
"<a class=\"id\" href=\"#out2\">out2</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mempool_destroy\">mempool_destroy</a>(<a class=\"id\" href=\"#psd_pool\">psd_pool</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__exit\">__exit</a> <a class=\"id\" href=\"#pkt_exit\">pkt_exit</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#remove_proc_entry\">remove_proc_entry</a>(\"driver/\"<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#misc_deregister\">misc_deregister</a>(&amp;<a class=\"id\" href=\"#pkt_misc\">pkt_misc</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt_debugfs_cleanup\">pkt_debugfs_cleanup</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt_sysfs_cleanup\">pkt_sysfs_cleanup</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_blkdev\">unregister_blkdev</a>(<a class=\"id\" href=\"#pktdev_major\">pktdev_major</a>, <a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mempool_destroy\">mempool_destroy</a>(<a class=\"id\" href=\"#psd_pool\">psd_pool</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#MODULE_DESCRIPTION\">MODULE_DESCRIPTION</a>(\"Packet writing layer for CD/DVD drives\");", 
"<a class=\"id\" href=\"#MODULE_AUTHOR\">MODULE_AUTHOR</a>(\"Jens Axboe <axboe@suse.de>\");", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
"", 
"<a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#pkt_init\">pkt_init</a>);", 
"<a class=\"id\" href=\"#module_exit\">module_exit</a>(<a class=\"id\" href=\"#pkt_exit\">pkt_exit</a>);", 
];
xr_frag_insert('l/74/0813cb820018b0ea1ec2c02a6c9f7ea2038cd7.xr', __xr_tmp);
