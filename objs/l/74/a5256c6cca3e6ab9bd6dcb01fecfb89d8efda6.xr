var __xr_tmp = [
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_table_init\">acpi_table_init</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#disable_acpi\">disable_acpi</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_table_parse\">acpi_table_parse</a>(<a class=\"id\" href=\"#ACPI_SIG_BOOT\">ACPI_SIG_BOOT</a>, <a class=\"id\" href=\"#acpi_parse_sbf\">acpi_parse_sbf</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * blacklist may disable ACPI entirely</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_blacklisted\">acpi_blacklisted</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_force\">acpi_force</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"acpi=force override\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Disabling ACPI support\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#disable_acpi\">disable_acpi</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#early_acpi_boot_init\">early_acpi_boot_init</a>(void)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If acpi_disabled, bail out</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_disabled\">acpi_disabled</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Process the Multiple APIC Description Table (MADT), if present</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#early_acpi_process_madt\">early_acpi_process_madt</a>();", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#acpi_boot_init\">acpi_boot_init</a>(void)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* those are executed after early-quirks are executed */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dmi_check_system\">dmi_check_system</a>(<a class=\"id\" href=\"#acpi_dmi_table_late\">acpi_dmi_table_late</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If acpi_disabled, bail out</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_disabled\">acpi_disabled</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_table_parse\">acpi_table_parse</a>(<a class=\"id\" href=\"#ACPI_SIG_BOOT\">ACPI_SIG_BOOT</a>, <a class=\"id\" href=\"#acpi_parse_sbf\">acpi_parse_sbf</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * set sci_int and PM timer address</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_table_parse\">acpi_table_parse</a>(<a class=\"id\" href=\"#ACPI_SIG_FADT\">ACPI_SIG_FADT</a>, <a class=\"id\" href=\"#acpi_parse_fadt\">acpi_parse_fadt</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Process the Multiple APIC Description Table (MADT), if present</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_process_madt\">acpi_process_madt</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_table_parse\">acpi_table_parse</a>(<a class=\"id\" href=\"#ACPI_SIG_HPET\">ACPI_SIG_HPET</a>, <a class=\"id\" href=\"#acpi_parse_hpet\">acpi_parse_hpet</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#acpi_noirq\">acpi_noirq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x86_init\">x86_init</a>.<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#init\">init</a> = <a class=\"id\" href=\"#pci_acpi_init\">pci_acpi_init</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#parse_acpi\">parse_acpi</a>(char *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#arg\">arg</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* \"acpi=off\" disables both ACPI table parsing and interpreter */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#arg\">arg</a>, \"off\") == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#disable_acpi\">disable_acpi</a>();", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* acpi=force to over-ride black-list */</span>", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#arg\">arg</a>, \"force\") == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_force\">acpi_force</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_disabled\">acpi_disabled</a> = 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* acpi=strict disables out-of-spec workarounds */</span>", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#arg\">arg</a>, \"strict\") == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_strict\">acpi_strict</a> = 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* acpi=rsdt use RSDT instead of XSDT */</span>", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#arg\">arg</a>, \"rsdt\") == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_rsdt_forced\">acpi_rsdt_forced</a> = 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* \"acpi=noirq\" disables ACPI interrupt routing */</span>", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#arg\">arg</a>, \"noirq\") == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_noirq_set\">acpi_noirq_set</a>();", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* \"acpi=copy_dsdt\" copys DSDT */</span>", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#arg\">arg</a>, \"copy_dsdt\") == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_copy_dsdt_locally\">acpi_gbl_copy_dsdt_locally</a> = 1;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Core will printk when we return error. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#early_param\">early_param</a>(\"acpi\", <a class=\"id\" href=\"#parse_acpi\">parse_acpi</a>);", 
"", 
"<span class=\"comment\">/* FIXME: Using pci= for an ACPI parameter is a travesty. */</span>", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#parse_pci\">parse_pci</a>(char *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#arg\">arg</a> && <a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#arg\">arg</a>, \"noacpi\") == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_disable_pci\">acpi_disable_pci</a>();", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#early_param\">early_param</a>(\"pci\", <a class=\"id\" href=\"#parse_pci\">parse_pci</a>);", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#acpi_mps_check\">acpi_mps_check</a>(void)", 
"{", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_X86_LOCAL_APIC\">CONFIG_X86_LOCAL_APIC</a>) && !<a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_X86_MPPARSE\">CONFIG_X86_MPPARSE</a>)", 
"<span class=\"comment\">/* mptable code is not built-in*/</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_disabled\">acpi_disabled</a> || <a class=\"id\" href=\"#acpi_noirq\">acpi_noirq</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"MPS support code is not built-in.\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"Using acpi=off or acpi=noirq or pci=noacpi \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"may have problem\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_IO_APIC\">CONFIG_X86_IO_APIC</a>", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#parse_acpi_skip_timer_override\">parse_acpi_skip_timer_override</a>(char *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_skip_timer_override\">acpi_skip_timer_override</a> = 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#early_param\">early_param</a>(\"acpi_skip_timer_override\", <a class=\"id\" href=\"#parse_acpi_skip_timer_override\">parse_acpi_skip_timer_override</a>);", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#parse_acpi_use_timer_override\">parse_acpi_use_timer_override</a>(char *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_use_timer_override\">acpi_use_timer_override</a> = 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#early_param\">early_param</a>(\"acpi_use_timer_override\", <a class=\"id\" href=\"#parse_acpi_use_timer_override\">parse_acpi_use_timer_override</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_X86_IO_APIC */</span>", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#setup_acpi_sci\">setup_acpi_sci</a>(char *<a class=\"id\" href=\"#s\">s</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#s\">s</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#s\">s</a>, \"edge\"))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_sci_flags\">acpi_sci_flags</a> =  <a class=\"id\" href=\"#ACPI_MADT_TRIGGER_EDGE\">ACPI_MADT_TRIGGER_EDGE</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#acpi_sci_flags\">acpi_sci_flags</a> &amp; ~<a class=\"id\" href=\"#ACPI_MADT_TRIGGER_MASK\">ACPI_MADT_TRIGGER_MASK</a>);", 
"<span class=\"ts\"/>else if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#s\">s</a>, \"level\"))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_sci_flags\">acpi_sci_flags</a> = <a class=\"id\" href=\"#ACPI_MADT_TRIGGER_LEVEL\">ACPI_MADT_TRIGGER_LEVEL</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#acpi_sci_flags\">acpi_sci_flags</a> &amp; ~<a class=\"id\" href=\"#ACPI_MADT_TRIGGER_MASK\">ACPI_MADT_TRIGGER_MASK</a>);", 
"<span class=\"ts\"/>else if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#s\">s</a>, \"high\"))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_sci_flags\">acpi_sci_flags</a> = <a class=\"id\" href=\"#ACPI_MADT_POLARITY_ACTIVE_HIGH\">ACPI_MADT_POLARITY_ACTIVE_HIGH</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#acpi_sci_flags\">acpi_sci_flags</a> &amp; ~<a class=\"id\" href=\"#ACPI_MADT_POLARITY_MASK\">ACPI_MADT_POLARITY_MASK</a>);", 
"<span class=\"ts\"/>else if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#s\">s</a>, \"low\"))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_sci_flags\">acpi_sci_flags</a> = <a class=\"id\" href=\"#ACPI_MADT_POLARITY_ACTIVE_LOW\">ACPI_MADT_POLARITY_ACTIVE_LOW</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#acpi_sci_flags\">acpi_sci_flags</a> &amp; ~<a class=\"id\" href=\"#ACPI_MADT_POLARITY_MASK\">ACPI_MADT_POLARITY_MASK</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#early_param\">early_param</a>(\"acpi_sci\", <a class=\"id\" href=\"#setup_acpi_sci\">setup_acpi_sci</a>);", 
"", 
"int <a class=\"id\" href=\"#__acpi_acquire_global_lock\">__acpi_acquire_global_lock</a>(unsigned int *<a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#old\">old</a>, <a class=\"id\" href=\"#new\">new</a>, <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old\">old</a> = *<a class=\"id\" href=\"#lock\">lock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a> = (((<a class=\"id\" href=\"#old\">old</a> &amp; ~0x3) + 2) + ((<a class=\"id\" href=\"#old\">old</a> >> 1) &amp; 0x1));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#cmpxchg\">cmpxchg</a>(<a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#old\">old</a>, <a class=\"id\" href=\"#new\">new</a>);", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#unlikely\">unlikely</a> (<a class=\"id\" href=\"#val\">val</a> != <a class=\"id\" href=\"#old\">old</a>));", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#new\">new</a> &lt; 3) ? -1 : 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#__acpi_release_global_lock\">__acpi_release_global_lock</a>(unsigned int *<a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#old\">old</a>, <a class=\"id\" href=\"#new\">new</a>, <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old\">old</a> = *<a class=\"id\" href=\"#lock\">lock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a> = <a class=\"id\" href=\"#old\">old</a> &amp; ~0x3;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#cmpxchg\">cmpxchg</a>(<a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#old\">old</a>, <a class=\"id\" href=\"#new\">new</a>);", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#unlikely\">unlikely</a> (<a class=\"id\" href=\"#val\">val</a> != <a class=\"id\" href=\"#old\">old</a>));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#old\">old</a> &amp; 0x1;", 
"}", 
];
xr_frag_insert('l/74/a5256c6cca3e6ab9bd6dcb01fecfb89d8efda6.xr', __xr_tmp);
