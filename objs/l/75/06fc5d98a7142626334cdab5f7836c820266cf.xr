var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#max\">max</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<a class=\"id\" href=\"#get_max\">get_max</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max\">max</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set\">set</a> >>= 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>} while (<a class=\"id\" href=\"#set\">set</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max\">max</a> += <a class=\"id\" href=\"#n\">n</a> * <a class=\"id\" href=\"#__NFDBITS\">__NFDBITS</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#max\">max</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#POLLIN_SET\">POLLIN_SET</a> (<a class=\"id\" href=\"#POLLRDNORM\">POLLRDNORM</a> | <a class=\"id\" href=\"#POLLRDBAND\">POLLRDBAND</a> | <a class=\"id\" href=\"#POLLIN\">POLLIN</a> | <a class=\"id\" href=\"#POLLHUP\">POLLHUP</a> | <a class=\"id\" href=\"#POLLERR\">POLLERR</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#POLLOUT_SET\">POLLOUT_SET</a> (<a class=\"id\" href=\"#POLLWRBAND\">POLLWRBAND</a> | <a class=\"id\" href=\"#POLLWRNORM\">POLLWRNORM</a> | <a class=\"id\" href=\"#POLLOUT\">POLLOUT</a> | <a class=\"id\" href=\"#POLLERR\">POLLERR</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#POLLEX_SET\">POLLEX_SET</a> (<a class=\"id\" href=\"#POLLPRI\">POLLPRI</a>)", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#wait_key_set\">wait_key_set</a>(<a class=\"id\" href=\"#poll_table\">poll_table</a> *<a class=\"id\" href=\"#wait\">wait</a>, unsigned long <a class=\"id\" href=\"#in\">in</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#out\">out</a>, unsigned long <a class=\"id\" href=\"#bit\">bit</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#wait\">wait</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wait\">wait</a>-><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#POLLEX_SET\">POLLEX_SET</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#in\">in</a> &amp; <a class=\"id\" href=\"#bit\">bit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wait\">wait</a>-><a class=\"id\" href=\"#key\">key</a> |= <a class=\"id\" href=\"#POLLIN_SET\">POLLIN_SET</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#out\">out</a> &amp; <a class=\"id\" href=\"#bit\">bit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wait\">wait</a>-><a class=\"id\" href=\"#key\">key</a> |= <a class=\"id\" href=\"#POLLOUT_SET\">POLLOUT_SET</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"int <a class=\"id\" href=\"#do_select\">do_select</a>(int <a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#fd_set_bits\">fd_set_bits</a> *<a class=\"id\" href=\"#fds\">fds</a>, struct <a class=\"id\" href=\"#timespec\">timespec</a> *<a class=\"id\" href=\"#end_time\">end_time</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#expire\">expire</a>, *<a class=\"id\" href=\"#to\">to</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#poll_wqueues\">poll_wqueues</a> <a class=\"id\" href=\"#table\">table</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#poll_table\">poll_table</a> *<a class=\"id\" href=\"#wait\">wait</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#timed_out\">timed_out</a> = 0;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#slack\">slack</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#max_select_fd\">max_select_fd</a>(<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#fds\">fds</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#poll_initwait\">poll_initwait</a>(&amp;<a class=\"id\" href=\"#table\">table</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wait\">wait</a> = &amp;<a class=\"id\" href=\"#table\">table</a>.<a class=\"id\" href=\"#pt\">pt</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#end_time\">end_time</a> && !<a class=\"id\" href=\"#end_time\">end_time</a>-><a class=\"id\" href=\"#tv_sec\">tv_sec</a> && !<a class=\"id\" href=\"#end_time\">end_time</a>-><a class=\"id\" href=\"#tv_nsec\">tv_nsec</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wait\">wait</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timed_out\">timed_out</a> = 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#end_time\">end_time</a> && !<a class=\"id\" href=\"#timed_out\">timed_out</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#slack\">slack</a> = <a class=\"id\" href=\"#estimate_accuracy\">estimate_accuracy</a>(<a class=\"id\" href=\"#end_time\">end_time</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"<span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long *<a class=\"id\" href=\"#rinp\">rinp</a>, *<a class=\"id\" href=\"#routp\">routp</a>, *<a class=\"id\" href=\"#rexp\">rexp</a>, *<a class=\"id\" href=\"#inp\">inp</a>, *<a class=\"id\" href=\"#outp\">outp</a>, *<a class=\"id\" href=\"#exp\">exp</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inp\">inp</a> = <a class=\"id\" href=\"#fds\">fds</a>-><a class=\"id\" href=\"#in\">in</a>; <a class=\"id\" href=\"#outp\">outp</a> = <a class=\"id\" href=\"#fds\">fds</a>-><a class=\"id\" href=\"#out\">out</a>; <a class=\"id\" href=\"#exp\">exp</a> = <a class=\"id\" href=\"#fds\">fds</a>-><a class=\"id\" href=\"#ex\">ex</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rinp\">rinp</a> = <a class=\"id\" href=\"#fds\">fds</a>-><a class=\"id\" href=\"#res_in\">res_in</a>; <a class=\"id\" href=\"#routp\">routp</a> = <a class=\"id\" href=\"#fds\">fds</a>-><a class=\"id\" href=\"#res_out\">res_out</a>; <a class=\"id\" href=\"#rexp\">rexp</a> = <a class=\"id\" href=\"#fds\">fds</a>-><a class=\"id\" href=\"#res_ex\">res_ex</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#n\">n</a>; ++<a class=\"id\" href=\"#rinp\">rinp</a>, ++<a class=\"id\" href=\"#routp\">routp</a>, ++<a class=\"id\" href=\"#rexp\">rexp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#in\">in</a>, <a class=\"id\" href=\"#out\">out</a>, <a class=\"id\" href=\"#ex\">ex</a>, <a class=\"id\" href=\"#all_bits\">all_bits</a>, <a class=\"id\" href=\"#bit\">bit</a> = 1, <a class=\"id\" href=\"#mask\">mask</a>, <a class=\"id\" href=\"#j\">j</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#res_in\">res_in</a> = 0, <a class=\"id\" href=\"#res_out\">res_out</a> = 0, <a class=\"id\" href=\"#res_ex\">res_ex</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> *<a class=\"id\" href=\"#f_op\">f_op</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in\">in</a> = *<a class=\"id\" href=\"#inp\">inp</a>++; <a class=\"id\" href=\"#out\">out</a> = *<a class=\"id\" href=\"#outp\">outp</a>++; <a class=\"id\" href=\"#ex\">ex</a> = *<a class=\"id\" href=\"#exp\">exp</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#all_bits\">all_bits</a> = <a class=\"id\" href=\"#in\">in</a> | <a class=\"id\" href=\"#out\">out</a> | <a class=\"id\" href=\"#ex\">ex</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#all_bits\">all_bits</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> += <a class=\"id\" href=\"#__NFDBITS\">__NFDBITS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#__NFDBITS\">__NFDBITS</a>; ++<a class=\"id\" href=\"#j\">j</a>, ++<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#bit\">bit</a> <<= 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#fput_needed\">fput_needed</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> >= <a class=\"id\" href=\"#n\">n</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#bit\">bit</a> &amp; <a class=\"id\" href=\"#all_bits\">all_bits</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#fget_light\">fget_light</a>(<a class=\"id\" href=\"#i\">i</a>, &amp;<a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#file\">file</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#f_op\">f_op</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#DEFAULT_POLLMASK\">DEFAULT_POLLMASK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#f_op\">f_op</a> && <a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#poll\">poll</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wait_key_set\">wait_key_set</a>(<a class=\"id\" href=\"#wait\">wait</a>, <a class=\"id\" href=\"#in\">in</a>, <a class=\"id\" href=\"#out\">out</a>, <a class=\"id\" href=\"#bit\">bit</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> = (*<a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#poll\">poll</a>)(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fput_light\">fput_light</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#mask\">mask</a> &amp; <a class=\"id\" href=\"#POLLIN_SET\">POLLIN_SET</a>) && (<a class=\"id\" href=\"#in\">in</a> &amp; <a class=\"id\" href=\"#bit\">bit</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res_in\">res_in</a> |= <a class=\"id\" href=\"#bit\">bit</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wait\">wait</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#mask\">mask</a> &amp; <a class=\"id\" href=\"#POLLOUT_SET\">POLLOUT_SET</a>) && (<a class=\"id\" href=\"#out\">out</a> &amp; <a class=\"id\" href=\"#bit\">bit</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res_out\">res_out</a> |= <a class=\"id\" href=\"#bit\">bit</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wait\">wait</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#mask\">mask</a> &amp; <a class=\"id\" href=\"#POLLEX_SET\">POLLEX_SET</a>) && (<a class=\"id\" href=\"#ex\">ex</a> &amp; <a class=\"id\" href=\"#bit\">bit</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res_ex\">res_ex</a> |= <a class=\"id\" href=\"#bit\">bit</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wait\">wait</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res_in\">res_in</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#rinp\">rinp</a> = <a class=\"id\" href=\"#res_in\">res_in</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res_out\">res_out</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#routp\">routp</a> = <a class=\"id\" href=\"#res_out\">res_out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res_ex\">res_ex</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#rexp\">rexp</a> = <a class=\"id\" href=\"#res_ex\">res_ex</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cond_resched\">cond_resched</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wait\">wait</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> || <a class=\"id\" href=\"#timed_out\">timed_out</a> || <a class=\"id\" href=\"#signal_pending\">signal_pending</a>(<a class=\"id\" href=\"#current\">current</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#table\">table</a>.<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#table\">table</a>.<a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If this is the first loop and we have a timeout</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * given, then we convert to ktime_t and set the to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * pointer to the expiry value.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#end_time\">end_time</a> && !<a class=\"id\" href=\"#to\">to</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#expire\">expire</a> = <a class=\"id\" href=\"#timespec_to_ktime\">timespec_to_ktime</a>(*<a class=\"id\" href=\"#end_time\">end_time</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#to\">to</a> = &amp;<a class=\"id\" href=\"#expire\">expire</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#poll_schedule_timeout\">poll_schedule_timeout</a>(&amp;<a class=\"id\" href=\"#table\">table</a>, <a class=\"id\" href=\"#TASK_INTERRUPTIBLE\">TASK_INTERRUPTIBLE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#to\">to</a>, <a class=\"id\" href=\"#slack\">slack</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timed_out\">timed_out</a> = 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#poll_freewait\">poll_freewait</a>(&amp;<a class=\"id\" href=\"#table\">table</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * We can actually return ERESTARTSYS instead of EINTR, but I'd</span>", 
"<span class=\"comment\"> * like to be certain this leads to no problems. So I return</span>", 
"<span class=\"comment\"> * EINTR just for safety.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Update: ERESTARTSYS breaks at least the xview clock binary, so</span>", 
"<span class=\"comment\"> * I'm trying ERESTARTNOHAND which restart only when you want to.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_SELECT_SECONDS\">MAX_SELECT_SECONDS</a> \\", 
"<span class=\"ts\"/>((unsigned long) (<a class=\"id\" href=\"#MAX_SCHEDULE_TIMEOUT\">MAX_SCHEDULE_TIMEOUT</a> / <a class=\"id\" href=\"#HZ\">HZ</a>)-1)", 
"", 
"int <a class=\"id\" href=\"#core_sys_select\">core_sys_select</a>(int <a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#fd_set\">fd_set</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#inp\">inp</a>, <a class=\"id\" href=\"#fd_set\">fd_set</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#outp\">outp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#fd_set\">fd_set</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#exp\">exp</a>, struct <a class=\"id\" href=\"#timespec\">timespec</a> *<a class=\"id\" href=\"#end_time\">end_time</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fd_set_bits\">fd_set_bits</a> <a class=\"id\" href=\"#fds\">fds</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#bits\">bits</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#max_fds\">max_fds</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fdtable\">fdtable</a> *<a class=\"id\" href=\"#fdt\">fdt</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Allocate small arguments on the stack to save memory and be faster */</span>", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#stack_fds\">stack_fds</a>[<a class=\"id\" href=\"#SELECT_STACK_ALLOC\">SELECT_STACK_ALLOC</a>/sizeof(long)];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_nofds\">out_nofds</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* max_fds can increase, so grab it once to avoid race */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fdt\">fdt</a> = <a class=\"id\" href=\"#files_fdtable\">files_fdtable</a>(<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#files\">files</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#max_fds\">max_fds</a> = <a class=\"id\" href=\"#fdt\">fdt</a>-><a class=\"id\" href=\"#max_fds\">max_fds</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a> &gt; <a class=\"id\" href=\"#max_fds\">max_fds</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#max_fds\">max_fds</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We need 6 bitmaps (in/out/ex for both incoming and outgoing),</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * since we used fdset we need to allocate memory in units of</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * long-words. </span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#FDS_BYTES\">FDS_BYTES</a>(<a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bits\">bits</a> = <a class=\"id\" href=\"#stack_fds\">stack_fds</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> &gt; sizeof(<a class=\"id\" href=\"#stack_fds\">stack_fds</a>) / 6) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Not enough space in on-stack array; must use kmalloc */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bits\">bits</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(6 * <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#bits\">bits</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_nofds\">out_nofds</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fds\">fds</a>.<a class=\"id\" href=\"#in\">in</a>      = <a class=\"id\" href=\"#bits\">bits</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fds\">fds</a>.<a class=\"id\" href=\"#out\">out</a>     = <a class=\"id\" href=\"#bits\">bits</a> +   <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fds\">fds</a>.<a class=\"id\" href=\"#ex\">ex</a>      = <a class=\"id\" href=\"#bits\">bits</a> + 2*<a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fds\">fds</a>.<a class=\"id\" href=\"#res_in\">res_in</a>  = <a class=\"id\" href=\"#bits\">bits</a> + 3*<a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fds\">fds</a>.<a class=\"id\" href=\"#res_out\">res_out</a> = <a class=\"id\" href=\"#bits\">bits</a> + 4*<a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fds\">fds</a>.<a class=\"id\" href=\"#res_ex\">res_ex</a>  = <a class=\"id\" href=\"#bits\">bits</a> + 5*<a class=\"id\" href=\"#size\">size</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#get_fd_set\">get_fd_set</a>(<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#inp\">inp</a>, <a class=\"id\" href=\"#fds\">fds</a>.<a class=\"id\" href=\"#in\">in</a>)) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#get_fd_set\">get_fd_set</a>(<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#outp\">outp</a>, <a class=\"id\" href=\"#fds\">fds</a>.<a class=\"id\" href=\"#out\">out</a>)) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#get_fd_set\">get_fd_set</a>(<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#exp\">exp</a>, <a class=\"id\" href=\"#fds\">fds</a>.<a class=\"id\" href=\"#ex\">ex</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#zero_fd_set\">zero_fd_set</a>(<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#fds\">fds</a>.<a class=\"id\" href=\"#res_in\">res_in</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#zero_fd_set\">zero_fd_set</a>(<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#fds\">fds</a>.<a class=\"id\" href=\"#res_out\">res_out</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#zero_fd_set\">zero_fd_set</a>(<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#fds\">fds</a>.<a class=\"id\" href=\"#res_ex\">res_ex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#do_select\">do_select</a>(<a class=\"id\" href=\"#n\">n</a>, &amp;<a class=\"id\" href=\"#fds\">fds</a>, <a class=\"id\" href=\"#end_time\">end_time</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ERESTARTNOHAND\">ERESTARTNOHAND</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#signal_pending\">signal_pending</a>(<a class=\"id\" href=\"#current\">current</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#set_fd_set\">set_fd_set</a>(<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#inp\">inp</a>, <a class=\"id\" href=\"#fds\">fds</a>.<a class=\"id\" href=\"#res_in\">res_in</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#set_fd_set\">set_fd_set</a>(<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#outp\">outp</a>, <a class=\"id\" href=\"#fds\">fds</a>.<a class=\"id\" href=\"#res_out\">res_out</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#set_fd_set\">set_fd_set</a>(<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#exp\">exp</a>, <a class=\"id\" href=\"#fds\">fds</a>.<a class=\"id\" href=\"#res_ex\">res_ex</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bits\">bits</a> != <a class=\"id\" href=\"#stack_fds\">stack_fds</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#bits\">bits</a>);", 
"<a class=\"id\" href=\"#out_nofds\">out_nofds</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE5\">SYSCALL_DEFINE5</a>(<a class=\"id\" href=\"#select\">select</a>, int, <a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#fd_set\">fd_set</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#inp\">inp</a>, <a class=\"id\" href=\"#fd_set\">fd_set</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#outp\">outp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fd_set\">fd_set</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#exp\">exp</a>, struct <a class=\"id\" href=\"#timeval\">timeval</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#tvp\">tvp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#end_time\">end_time</a>, *<a class=\"id\" href=\"#to\">to</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timeval\">timeval</a> <a class=\"id\" href=\"#tv\">tv</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tvp\">tvp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#tv\">tv</a>, <a class=\"id\" href=\"#tvp\">tvp</a>, sizeof(<a class=\"id\" href=\"#tv\">tv</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#to\">to</a> = &amp;<a class=\"id\" href=\"#end_time\">end_time</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#poll_select_set_timeout\">poll_select_set_timeout</a>(<a class=\"id\" href=\"#to\">to</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tv\">tv</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> + (<a class=\"id\" href=\"#tv\">tv</a>.<a class=\"id\" href=\"#tv_usec\">tv_usec</a> / <a class=\"id\" href=\"#USEC_PER_SEC\">USEC_PER_SEC</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#tv\">tv</a>.<a class=\"id\" href=\"#tv_usec\">tv_usec</a> % <a class=\"id\" href=\"#USEC_PER_SEC\">USEC_PER_SEC</a>) * <a class=\"id\" href=\"#NSEC_PER_USEC\">NSEC_PER_USEC</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#core_sys_select\">core_sys_select</a>(<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#inp\">inp</a>, <a class=\"id\" href=\"#outp\">outp</a>, <a class=\"id\" href=\"#exp\">exp</a>, <a class=\"id\" href=\"#to\">to</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#poll_select_copy_remaining\">poll_select_copy_remaining</a>(&amp;<a class=\"id\" href=\"#end_time\">end_time</a>, <a class=\"id\" href=\"#tvp\">tvp</a>, 1, <a class=\"id\" href=\"#ret\">ret</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#HAVE_SET_RESTORE_SIGMASK\">HAVE_SET_RESTORE_SIGMASK</a>", 
"static long <a class=\"id\" href=\"#do_pselect\">do_pselect</a>(int <a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#fd_set\">fd_set</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#inp\">inp</a>, <a class=\"id\" href=\"#fd_set\">fd_set</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#outp\">outp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#fd_set\">fd_set</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#exp\">exp</a>, struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#tsp\">tsp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       const <a class=\"id\" href=\"#sigset_t\">sigset_t</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#sigmask\">sigmask</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#sigsetsize\">sigsetsize</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sigset_t\">sigset_t</a> <a class=\"id\" href=\"#ksigmask\">ksigmask</a>, <a class=\"id\" href=\"#sigsaved\">sigsaved</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#ts\">ts</a>, <a class=\"id\" href=\"#end_time\">end_time</a>, *<a class=\"id\" href=\"#to\">to</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tsp\">tsp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#ts\">ts</a>, <a class=\"id\" href=\"#tsp\">tsp</a>, sizeof(<a class=\"id\" href=\"#ts\">ts</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#to\">to</a> = &amp;<a class=\"id\" href=\"#end_time\">end_time</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#poll_select_set_timeout\">poll_select_set_timeout</a>(<a class=\"id\" href=\"#to\">to</a>, <a class=\"id\" href=\"#ts\">ts</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a>, <a class=\"id\" href=\"#ts\">ts</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sigmask\">sigmask</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* XXX: Don't preclude handling different sized sigset_t's.  */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sigsetsize\">sigsetsize</a> != sizeof(<a class=\"id\" href=\"#sigset_t\">sigset_t</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#ksigmask\">ksigmask</a>, <a class=\"id\" href=\"#sigmask\">sigmask</a>, sizeof(<a class=\"id\" href=\"#ksigmask\">ksigmask</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sigdelsetmask\">sigdelsetmask</a>(&amp;<a class=\"id\" href=\"#ksigmask\">ksigmask</a>, <a class=\"id\" href=\"#sigmask\">sigmask</a>(<a class=\"id\" href=\"#SIGKILL\">SIGKILL</a>)|<a class=\"id\" href=\"#sigmask\">sigmask</a>(<a class=\"id\" href=\"#SIGSTOP\">SIGSTOP</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sigprocmask\">sigprocmask</a>(<a class=\"id\" href=\"#SIG_SETMASK\">SIG_SETMASK</a>, &amp;<a class=\"id\" href=\"#ksigmask\">ksigmask</a>, &amp;<a class=\"id\" href=\"#sigsaved\">sigsaved</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#core_sys_select\">core_sys_select</a>(<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#inp\">inp</a>, <a class=\"id\" href=\"#outp\">outp</a>, <a class=\"id\" href=\"#exp\">exp</a>, <a class=\"id\" href=\"#to\">to</a>);", 
];
xr_frag_insert('l/75/06fc5d98a7142626334cdab5f7836c820266cf.xr', __xr_tmp);
