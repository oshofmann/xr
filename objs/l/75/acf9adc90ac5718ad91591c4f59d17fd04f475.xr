var __xr_tmp = [
"<span class=\"comment\">/* include/asm-generic/tlb.h</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Generic TLB shootdown code</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright 2001 Red Hat, Inc.</span>", 
"<span class=\"comment\"> * Based on code from mm/memory.c Copyright Linus Torvalds and others.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> * modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> * as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> * 2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_ASM_GENERIC__TLB_H\">_ASM_GENERIC__TLB_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_ASM_GENERIC__TLB_H\">_ASM_GENERIC__TLB_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#swap\">swap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#pgalloc\">pgalloc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#tlbflush\">tlbflush</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * For UP we don't need to worry about TLB flush</span>", 
"<span class=\"comment\"> * and page free order so much..</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"  #<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#ARCH_FREE_PTR_NR\">ARCH_FREE_PTR_NR</a>", 
"    #<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FREE_PTR_NR\">FREE_PTR_NR</a>   <a class=\"id\" href=\"#ARCH_FREE_PTR_NR\">ARCH_FREE_PTR_NR</a>", 
"  #else", 
"    #<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FREE_PTE_NR\">FREE_PTE_NR</a><span class=\"ts\"/>506", 
"  #<a class=\"id\" href=\"#endif\">endif</a>", 
"  #<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#tlb_fast_mode\">tlb_fast_mode</a>(<a class=\"id\" href=\"#tlb\">tlb</a>) ((<a class=\"id\" href=\"#tlb\">tlb</a>)-><a class=\"id\" href=\"#nr\">nr</a> == ~0U)", 
"#else", 
"  #<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FREE_PTE_NR\">FREE_PTE_NR</a><span class=\"ts\"/>1", 
"  #<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#tlb_fast_mode\">tlb_fast_mode</a>(<a class=\"id\" href=\"#tlb\">tlb</a>) 1", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/* struct mmu_gather is an opaque type used by the mm code for passing around</span>", 
"<span class=\"comment\"> * any data needed by arch specific code for tlb_remove_page.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#mmu_gather\">mmu_gather</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a><span class=\"ts\"/>*<a class=\"id\" href=\"#mm\">mm</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr\">nr</a>;<span class=\"ts\"/><span class=\"comment\">/* set to ~0U means fast mode */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#need_flush\">need_flush</a>;<span class=\"comment\">/* Really unmapped some ptes? */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fullmm\">fullmm</a>; <span class=\"comment\">/* non-zero means full mm flush */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#FREE_PTE_NR\">FREE_PTE_NR</a>];", 
"};", 
"", 
"<span class=\"comment\">/* Users of the generic TLB shootdown code must declare this storage space. */</span>", 
"<a class=\"id\" href=\"#DECLARE_PER_CPU\">DECLARE_PER_CPU</a>(struct <a class=\"id\" href=\"#mmu_gather\">mmu_gather</a>, <a class=\"id\" href=\"#mmu_gathers\">mmu_gathers</a>);", 
"", 
"<span class=\"comment\">/* tlb_gather_mmu</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Return a pointer to an initialized struct mmu_gather.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#mmu_gather\">mmu_gather</a> *", 
"<a class=\"id\" href=\"#tlb_gather_mmu\">tlb_gather_mmu</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>, unsigned int <a class=\"id\" href=\"#full_mm_flush\">full_mm_flush</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mmu_gather\">mmu_gather</a> *<a class=\"id\" href=\"#tlb\">tlb</a> = &amp;<a class=\"id\" href=\"#get_cpu_var\">get_cpu_var</a>(<a class=\"id\" href=\"#mmu_gathers\">mmu_gathers</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tlb\">tlb</a>-><a class=\"id\" href=\"#mm\">mm</a> = <a class=\"id\" href=\"#mm\">mm</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Use fast mode if only one CPU is online */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tlb\">tlb</a>-><a class=\"id\" href=\"#nr\">nr</a> = <a class=\"id\" href=\"#num_online_cpus\">num_online_cpus</a>() &gt; 1 ? 0U : ~0U;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tlb\">tlb</a>-><a class=\"id\" href=\"#fullmm\">fullmm</a> = <a class=\"id\" href=\"#full_mm_flush\">full_mm_flush</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tlb\">tlb</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void", 
"<a class=\"id\" href=\"#tlb_flush_mmu\">tlb_flush_mmu</a>(struct <a class=\"id\" href=\"#mmu_gather\">mmu_gather</a> *<a class=\"id\" href=\"#tlb\">tlb</a>, unsigned long <a class=\"id\" href=\"#start\">start</a>, unsigned long <a class=\"id\" href=\"#end\">end</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tlb\">tlb</a>-><a class=\"id\" href=\"#need_flush\">need_flush</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tlb\">tlb</a>-><a class=\"id\" href=\"#need_flush\">need_flush</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tlb_flush\">tlb_flush</a>(<a class=\"id\" href=\"#tlb\">tlb</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tlb_fast_mode\">tlb_fast_mode</a>(<a class=\"id\" href=\"#tlb\">tlb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_pages_and_swap_cache\">free_pages_and_swap_cache</a>(<a class=\"id\" href=\"#tlb\">tlb</a>-><a class=\"id\" href=\"#pages\">pages</a>, <a class=\"id\" href=\"#tlb\">tlb</a>-><a class=\"id\" href=\"#nr\">nr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tlb\">tlb</a>-><a class=\"id\" href=\"#nr\">nr</a> = 0;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/* tlb_finish_mmu</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Called at the end of the shootdown operation to free up any resources</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>that were required.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void", 
"<a class=\"id\" href=\"#tlb_finish_mmu\">tlb_finish_mmu</a>(struct <a class=\"id\" href=\"#mmu_gather\">mmu_gather</a> *<a class=\"id\" href=\"#tlb\">tlb</a>, unsigned long <a class=\"id\" href=\"#start\">start</a>, unsigned long <a class=\"id\" href=\"#end\">end</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tlb_flush_mmu\">tlb_flush_mmu</a>(<a class=\"id\" href=\"#tlb\">tlb</a>, <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* keep the page table cache within bounds */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#check_pgt_cache\">check_pgt_cache</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_cpu_var\">put_cpu_var</a>(<a class=\"id\" href=\"#mmu_gathers\">mmu_gathers</a>);", 
"}", 
"", 
"<span class=\"comment\">/* tlb_remove_page</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Must perform the equivalent to __free_pte(pte_get_and_clear(ptep)), while</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>handling the additional races in SMP caused by other CPUs caching valid</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>mappings in their TLBs.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#tlb_remove_page\">tlb_remove_page</a>(struct <a class=\"id\" href=\"#mmu_gather\">mmu_gather</a> *<a class=\"id\" href=\"#tlb\">tlb</a>, struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tlb\">tlb</a>-><a class=\"id\" href=\"#need_flush\">need_flush</a> = 1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tlb_fast_mode\">tlb_fast_mode</a>(<a class=\"id\" href=\"#tlb\">tlb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_page_and_swap_cache\">free_page_and_swap_cache</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tlb\">tlb</a>-><a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#tlb\">tlb</a>-><a class=\"id\" href=\"#nr\">nr</a>++] = <a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tlb\">tlb</a>-><a class=\"id\" href=\"#nr\">nr</a> >= <a class=\"id\" href=\"#FREE_PTE_NR\">FREE_PTE_NR</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tlb_flush_mmu\">tlb_flush_mmu</a>(<a class=\"id\" href=\"#tlb\">tlb</a>, 0, 0);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tlb_remove_tlb_entry - remember a pte unmapping for later tlb invalidation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Record the fact that pte's were really umapped in -&gt;need_flush, so we can</span>", 
"<span class=\"comment\"> * later optimise away the tlb invalidate.   This helps when userspace is</span>", 
"<span class=\"comment\"> * unmapping already-unmapped pages, which happens quite a lot.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#tlb_remove_tlb_entry\">tlb_remove_tlb_entry</a>(<a class=\"id\" href=\"#tlb\">tlb</a>, <a class=\"id\" href=\"#ptep\">ptep</a>, <a class=\"id\" href=\"#address\">address</a>)<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tlb\">tlb</a>-><a class=\"id\" href=\"#need_flush\">need_flush</a> = 1;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__tlb_remove_tlb_entry\">__tlb_remove_tlb_entry</a>(<a class=\"id\" href=\"#tlb\">tlb</a>, <a class=\"id\" href=\"#ptep\">ptep</a>, <a class=\"id\" href=\"#address\">address</a>);<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>} while (0)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pte_free_tlb\">pte_free_tlb</a>(<a class=\"id\" href=\"#tlb\">tlb</a>, <a class=\"id\" href=\"#ptep\">ptep</a>, <a class=\"id\" href=\"#address\">address</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tlb\">tlb</a>-><a class=\"id\" href=\"#need_flush\">need_flush</a> = 1;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__pte_free_tlb\">__pte_free_tlb</a>(<a class=\"id\" href=\"#tlb\">tlb</a>, <a class=\"id\" href=\"#ptep\">ptep</a>, <a class=\"id\" href=\"#address\">address</a>);<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>} while (0)", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__ARCH_HAS_4LEVEL_HACK\">__ARCH_HAS_4LEVEL_HACK</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pud_free_tlb\">pud_free_tlb</a>(<a class=\"id\" href=\"#tlb\">tlb</a>, <a class=\"id\" href=\"#pudp\">pudp</a>, <a class=\"id\" href=\"#address\">address</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tlb\">tlb</a>-><a class=\"id\" href=\"#need_flush\">need_flush</a> = 1;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__pud_free_tlb\">__pud_free_tlb</a>(<a class=\"id\" href=\"#tlb\">tlb</a>, <a class=\"id\" href=\"#pudp\">pudp</a>, <a class=\"id\" href=\"#address\">address</a>);<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>} while (0)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pmd_free_tlb\">pmd_free_tlb</a>(<a class=\"id\" href=\"#tlb\">tlb</a>, <a class=\"id\" href=\"#pmdp\">pmdp</a>, <a class=\"id\" href=\"#address\">address</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tlb\">tlb</a>-><a class=\"id\" href=\"#need_flush\">need_flush</a> = 1;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__pmd_free_tlb\">__pmd_free_tlb</a>(<a class=\"id\" href=\"#tlb\">tlb</a>, <a class=\"id\" href=\"#pmdp\">pmdp</a>, <a class=\"id\" href=\"#address\">address</a>);<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>} while (0)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#tlb_migrate_finish\">tlb_migrate_finish</a>(<a class=\"id\" href=\"#mm\">mm</a>) do {} while (0)", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _ASM_GENERIC__TLB_H */</span>", 
];
xr_frag_insert('l/75/acf9adc90ac5718ad91591c4f59d17fd04f475.xr', __xr_tmp);
