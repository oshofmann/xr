var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_ASM_X86_KPROBES_H\">_ASM_X86_KPROBES_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_ASM_X86_KPROBES_H\">_ASM_X86_KPROBES_H</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  Kernel Probes (KProbes)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> * it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> * the Free Software Foundation; either version 2 of the License, or</span>", 
"<span class=\"comment\"> * (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>", 
"<span class=\"comment\"> * GNU General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\"> * along with this program; if not, write to the Free Software</span>", 
"<span class=\"comment\"> * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) IBM Corporation, 2002, 2004</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * See arch/x86/kernel/kprobes.c for x86 kprobes history.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ptrace\">ptrace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#percpu\">percpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#insn\">insn</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a>  <a class=\"id\" href=\"#__ARCH_WANT_KPROBES_INSN_SLOT\">__ARCH_WANT_KPROBES_INSN_SLOT</a>", 
"", 
"struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a>;", 
"struct <a class=\"id\" href=\"#kprobe\">kprobe</a>;", 
"", 
"typedef <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#kprobe_opcode_t\">kprobe_opcode_t</a>;", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BREAKPOINT_INSTRUCTION\">BREAKPOINT_INSTRUCTION</a><span class=\"ts\"/>0xcc", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RELATIVEJUMP_OPCODE\">RELATIVEJUMP_OPCODE</a> 0xe9", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RELATIVEJUMP_SIZE\">RELATIVEJUMP_SIZE</a> 5", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RELATIVECALL_OPCODE\">RELATIVECALL_OPCODE</a> 0xe8", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RELATIVE_ADDR_SIZE\">RELATIVE_ADDR_SIZE</a> 4", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_STACK_SIZE\">MAX_STACK_SIZE</a> 64", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MIN_STACK_SIZE\">MIN_STACK_SIZE</a>(<a class=\"id\" href=\"#ADDR\">ADDR</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \\", 
"<span class=\"ts\"/>(((<a class=\"id\" href=\"#MAX_STACK_SIZE\">MAX_STACK_SIZE</a>) &lt; (((unsigned long)<a class=\"id\" href=\"#current_thread_info\">current_thread_info</a>()) + \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#THREAD_SIZE\">THREAD_SIZE</a> - (unsigned long)(<a class=\"id\" href=\"#ADDR\">ADDR</a>)))    \\", 
"<span class=\"ts\"/> ? (<a class=\"id\" href=\"#MAX_STACK_SIZE\">MAX_STACK_SIZE</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \\", 
"<span class=\"ts\"/> : (((unsigned long)<a class=\"id\" href=\"#current_thread_info\">current_thread_info</a>()) +<span class=\"ts\"/><span class=\"ts\"/>       \\", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#THREAD_SIZE\">THREAD_SIZE</a> - (unsigned long)(<a class=\"id\" href=\"#ADDR\">ADDR</a>)))", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#flush_insn_slot\">flush_insn_slot</a>(<a class=\"id\" href=\"#p\">p</a>)<span class=\"ts\"/>do { } while (0)", 
"", 
"<span class=\"comment\">/* optinsn template addresses */</span>", 
"extern <a class=\"id\" href=\"#kprobe_opcode_t\">kprobe_opcode_t</a> <a class=\"id\" href=\"#optprobe_template_entry\">optprobe_template_entry</a>;", 
"extern <a class=\"id\" href=\"#kprobe_opcode_t\">kprobe_opcode_t</a> <a class=\"id\" href=\"#optprobe_template_val\">optprobe_template_val</a>;", 
"extern <a class=\"id\" href=\"#kprobe_opcode_t\">kprobe_opcode_t</a> <a class=\"id\" href=\"#optprobe_template_call\">optprobe_template_call</a>;", 
"extern <a class=\"id\" href=\"#kprobe_opcode_t\">kprobe_opcode_t</a> <a class=\"id\" href=\"#optprobe_template_end\">optprobe_template_end</a>;", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_OPTIMIZED_LENGTH\">MAX_OPTIMIZED_LENGTH</a> (<a class=\"id\" href=\"#MAX_INSN_SIZE\">MAX_INSN_SIZE</a> + <a class=\"id\" href=\"#RELATIVE_ADDR_SIZE\">RELATIVE_ADDR_SIZE</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_OPTINSN_SIZE\">MAX_OPTINSN_SIZE</a> <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>(((unsigned long)&amp;<a class=\"id\" href=\"#optprobe_template_end\">optprobe_template_end</a> -<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>  (unsigned long)&amp;<a class=\"id\" href=\"#optprobe_template_entry\">optprobe_template_entry</a>) +<span class=\"ts\"/>\\", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#MAX_OPTIMIZED_LENGTH\">MAX_OPTIMIZED_LENGTH</a> + <a class=\"id\" href=\"#RELATIVEJUMP_SIZE\">RELATIVEJUMP_SIZE</a>)", 
"", 
"extern const int <a class=\"id\" href=\"#kretprobe_blacklist_size\">kretprobe_blacklist_size</a>;", 
"", 
"void <a class=\"id\" href=\"#arch_remove_kprobe\">arch_remove_kprobe</a>(struct <a class=\"id\" href=\"#kprobe\">kprobe</a> *<a class=\"id\" href=\"#p\">p</a>);", 
"void <a class=\"id\" href=\"#kretprobe_trampoline\">kretprobe_trampoline</a>(void);", 
"", 
"<span class=\"comment\">/* Architecture specific copy of original instruction*/</span>", 
"struct <a class=\"id\" href=\"#arch_specific_insn\">arch_specific_insn</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* copy of the original instruction */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kprobe_opcode_t\">kprobe_opcode_t</a> *<a class=\"id\" href=\"#insn\">insn</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * boostable = -1: This instruction type is not boostable.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * boostable = 0: This instruction type is boostable.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * boostable = 1: This instruction has been boosted: we have</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * added a relative jump after the instruction copy in insn,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so no single-step and fixup are needed (unless there's</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * a post_handler or break_handler).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#boostable\">boostable</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#arch_optimized_insn\">arch_optimized_insn</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* copy of the original instructions */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kprobe_opcode_t\">kprobe_opcode_t</a> <a class=\"id\" href=\"#copied_insn\">copied_insn</a>[<a class=\"id\" href=\"#RELATIVE_ADDR_SIZE\">RELATIVE_ADDR_SIZE</a>];", 
"<span class=\"ts\"/><span class=\"comment\">/* detour code buffer */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kprobe_opcode_t\">kprobe_opcode_t</a> *<a class=\"id\" href=\"#insn\">insn</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* the size of instructions copied to detour code buffer */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>;", 
"};", 
"", 
"<span class=\"comment\">/* Return true (!0) if optinsn is prepared for optimization. */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#arch_prepared_optinsn\">arch_prepared_optinsn</a>(struct <a class=\"id\" href=\"#arch_optimized_insn\">arch_optimized_insn</a> *<a class=\"id\" href=\"#optinsn\">optinsn</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#optinsn\">optinsn</a>-><a class=\"id\" href=\"#size\">size</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#prev_kprobe\">prev_kprobe</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kprobe\">kprobe</a> *<a class=\"id\" href=\"#kp\">kp</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#old_flags\">old_flags</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#saved_flags\">saved_flags</a>;", 
"};", 
"", 
"<span class=\"comment\">/* per-cpu kprobe control block */</span>", 
"struct <a class=\"id\" href=\"#kprobe_ctlblk\">kprobe_ctlblk</a> {", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#kprobe_status\">kprobe_status</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#kprobe_old_flags\">kprobe_old_flags</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#kprobe_saved_flags\">kprobe_saved_flags</a>;", 
"<span class=\"ts\"/>unsigned long *<a class=\"id\" href=\"#jprobe_saved_sp\">jprobe_saved_sp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> <a class=\"id\" href=\"#jprobe_saved_regs\">jprobe_saved_regs</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kprobe_opcode_t\">kprobe_opcode_t</a> <a class=\"id\" href=\"#jprobes_stack\">jprobes_stack</a>[<a class=\"id\" href=\"#MAX_STACK_SIZE\">MAX_STACK_SIZE</a>];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#prev_kprobe\">prev_kprobe</a> <a class=\"id\" href=\"#prev_kprobe\">prev_kprobe</a>;", 
"};", 
"", 
"extern int <a class=\"id\" href=\"#kprobe_fault_handler\">kprobe_fault_handler</a>(struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>, int <a class=\"id\" href=\"#trapnr\">trapnr</a>);", 
"extern int <a class=\"id\" href=\"#kprobe_exceptions_notify\">kprobe_exceptions_notify</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#self\">self</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    unsigned long <a class=\"id\" href=\"#val\">val</a>, void *<a class=\"id\" href=\"#data\">data</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _ASM_X86_KPROBES_H */</span>", 
];
xr_frag_insert('l/76/b0102d4e674dda74c38c99a894502bbfed9298.xr', __xr_tmp);
