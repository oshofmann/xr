var __xr_tmp = [
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#hw_breakpoint\">hw_breakpoint</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#trace_seq\">trace_seq</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ftrace_event\">ftrace_event</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"enum <a class=\"id\" href=\"#trace_type\">trace_type</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__TRACE_FIRST_TYPE\">__TRACE_FIRST_TYPE</a> = 0,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_FN\">TRACE_FN</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_CTX\">TRACE_CTX</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_WAKE\">TRACE_WAKE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_STACK\">TRACE_STACK</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_PRINT\">TRACE_PRINT</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_BPRINT\">TRACE_BPRINT</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_MMIO_RW\">TRACE_MMIO_RW</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_MMIO_MAP\">TRACE_MMIO_MAP</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_BRANCH\">TRACE_BRANCH</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_GRAPH_RET\">TRACE_GRAPH_RET</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_GRAPH_ENT\">TRACE_GRAPH_ENT</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_USER_STACK\">TRACE_USER_STACK</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_BLK\">TRACE_BLK</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__TRACE_LAST_TYPE\">__TRACE_LAST_TYPE</a>,", 
"};", 
"", 
"", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#__field\">__field</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__field\">__field</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#item\">item</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a><span class=\"ts\"/><a class=\"id\" href=\"#item\">item</a>;", 
"", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#__field_struct\">__field_struct</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__field_struct\">__field_struct</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#item\">item</a>)<span class=\"ts\"/><a class=\"id\" href=\"#__field\">__field</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#item\">item</a>)", 
"", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#__field_desc\">__field_desc</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__field_desc\">__field_desc</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#container\">container</a>, <a class=\"id\" href=\"#item\">item</a>)", 
"", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#__array\">__array</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__array\">__array</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#item\">item</a>, <a class=\"id\" href=\"#size\">size</a>)<span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a><span class=\"ts\"/><a class=\"id\" href=\"#item\">item</a>[<a class=\"id\" href=\"#size\">size</a>];", 
"", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#__array_desc\">__array_desc</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__array_desc\">__array_desc</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#container\">container</a>, <a class=\"id\" href=\"#item\">item</a>, <a class=\"id\" href=\"#size\">size</a>)", 
"", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#__dynamic_array\">__dynamic_array</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__dynamic_array\">__dynamic_array</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#item\">item</a>)<span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a><span class=\"ts\"/><a class=\"id\" href=\"#item\">item</a>[];", 
"", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#F_STRUCT\">F_STRUCT</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#F_STRUCT\">F_STRUCT</a>(<a class=\"id\" href=\"#args\">args</a>...)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#args\">args</a>", 
"", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#FTRACE_ENTRY\">FTRACE_ENTRY</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FTRACE_ENTRY\">FTRACE_ENTRY</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#struct_name\">struct_name</a>, <a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#tstruct\">tstruct</a>, <a class=\"id\" href=\"#print\">print</a>)<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#struct_name\">struct_name</a> {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#trace_entry\">trace_entry</a><span class=\"ts\"/><a class=\"id\" href=\"#ent\">ent</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tstruct\">tstruct</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>}", 
"", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#TP_ARGS\">TP_ARGS</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TP_ARGS\">TP_ARGS</a>(<a class=\"id\" href=\"#args\">args</a>...)<span class=\"ts\"/><a class=\"id\" href=\"#args\">args</a>", 
"", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#FTRACE_ENTRY_DUP\">FTRACE_ENTRY_DUP</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FTRACE_ENTRY_DUP\">FTRACE_ENTRY_DUP</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#name_struct\">name_struct</a>, <a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#tstruct\">tstruct</a>, <a class=\"id\" href=\"#printk\">printk</a>)", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"trace_entries.h\"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * syscalls are special, and need special handling, this is why</span>", 
"<span class=\"comment\"> * they are not included in trace_entries.h</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#syscall_trace_enter\">syscall_trace_enter</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#trace_entry\">trace_entry</a><span class=\"ts\"/><a class=\"id\" href=\"#ent\">ent</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr\">nr</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#args\">args</a>[];", 
"};", 
"", 
"struct <a class=\"id\" href=\"#syscall_trace_exit\">syscall_trace_exit</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#trace_entry\">trace_entry</a><span class=\"ts\"/><a class=\"id\" href=\"#ent\">ent</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr\">nr</a>;", 
"<span class=\"ts\"/>long<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#kprobe_trace_entry_head\">kprobe_trace_entry_head</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#trace_entry\">trace_entry</a><span class=\"ts\"/><a class=\"id\" href=\"#ent\">ent</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip\">ip</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#kretprobe_trace_entry_head\">kretprobe_trace_entry_head</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#trace_entry\">trace_entry</a><span class=\"ts\"/><a class=\"id\" href=\"#ent\">ent</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#func\">func</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_ip\">ret_ip</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * trace_flag_type is an enumeration that holds different</span>", 
"<span class=\"comment\"> * states when a trace occurs. These are:</span>", 
"<span class=\"comment\"> *  IRQS_OFF<span class=\"ts\"/><span class=\"ts\"/>- interrupts were disabled</span>", 
"<span class=\"comment\"> *  IRQS_NOSUPPORT<span class=\"ts\"/>- arch does not support irqs_disabled_flags</span>", 
"<span class=\"comment\"> *  NEED_RESCHED<span class=\"ts\"/>- reschedule is requested</span>", 
"<span class=\"comment\"> *  HARDIRQ<span class=\"ts\"/><span class=\"ts\"/>- inside an interrupt handler</span>", 
"<span class=\"comment\"> *  SOFTIRQ<span class=\"ts\"/><span class=\"ts\"/>- inside a softirq handler</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#trace_flag_type\">trace_flag_type</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_FLAG_IRQS_OFF\">TRACE_FLAG_IRQS_OFF</a><span class=\"ts\"/><span class=\"ts\"/>= 0x01,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_FLAG_IRQS_NOSUPPORT\">TRACE_FLAG_IRQS_NOSUPPORT</a><span class=\"ts\"/>= 0x02,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_FLAG_NEED_RESCHED\">TRACE_FLAG_NEED_RESCHED</a><span class=\"ts\"/><span class=\"ts\"/>= 0x04,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_FLAG_HARDIRQ\">TRACE_FLAG_HARDIRQ</a><span class=\"ts\"/><span class=\"ts\"/>= 0x08,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_FLAG_SOFTIRQ\">TRACE_FLAG_SOFTIRQ</a><span class=\"ts\"/><span class=\"ts\"/>= 0x10,", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TRACE_BUF_SIZE\">TRACE_BUF_SIZE</a><span class=\"ts\"/><span class=\"ts\"/>1024", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The CPU trace array - it consists of thousands of trace entries</span>", 
"<span class=\"comment\"> * plus some other descriptor data: (for example which task started</span>", 
"<span class=\"comment\"> * the trace, etc.)</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#trace_array_cpu\">trace_array_cpu</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#disabled\">disabled</a>;", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#buffer_page\">buffer_page</a>;<span class=\"ts\"/><span class=\"comment\">/* ring buffer spare */</span>", 
"", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#saved_latency\">saved_latency</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#critical_start\">critical_start</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#critical_end\">critical_end</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#critical_sequence\">critical_sequence</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nice\">nice</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt_priority\">rt_priority</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skipped_entries\">skipped_entries</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cycle_t\">cycle_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#preempt_timestamp\">preempt_timestamp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pid_t\">pid_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pid\">pid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uid_t\">uid_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uid\">uid</a>;", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#comm\">comm</a>[<a class=\"id\" href=\"#TASK_COMM_LEN\">TASK_COMM_LEN</a>];", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The trace array - an array of per-CPU trace arrays. This is the</span>", 
"<span class=\"comment\"> * highest level data structure that individual tracers deal with.</span>", 
"<span class=\"comment\"> * They have on/off state as well:</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#trace_array\">trace_array</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ring_buffer\">ring_buffer</a><span class=\"ts\"/>*<a class=\"id\" href=\"#buffer\">buffer</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entries\">entries</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu\">cpu</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cycle_t\">cycle_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#time_start\">time_start</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a><span class=\"ts\"/>*<a class=\"id\" href=\"#waiter\">waiter</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#trace_array_cpu\">trace_array_cpu</a><span class=\"ts\"/>*<a class=\"id\" href=\"#data\">data</a>[<a class=\"id\" href=\"#NR_CPUS\">NR_CPUS</a>];", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FTRACE_CMP_TYPE\">FTRACE_CMP_TYPE</a>(<a class=\"id\" href=\"#var\">var</a>, <a class=\"id\" href=\"#type\">type</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__builtin_types_compatible_p\">__builtin_types_compatible_p</a>(<a class=\"id\" href=\"#typeof\">typeof</a>(<a class=\"id\" href=\"#var\">var</a>), <a class=\"id\" href=\"#type\">type</a> *)", 
"", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#IF_ASSIGN\">IF_ASSIGN</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IF_ASSIGN\">IF_ASSIGN</a>(<a class=\"id\" href=\"#var\">var</a>, <a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#etype\">etype</a>, <a class=\"id\" href=\"#id\">id</a>)<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#FTRACE_CMP_TYPE\">FTRACE_CMP_TYPE</a>(<a class=\"id\" href=\"#var\">var</a>, <a class=\"id\" href=\"#etype\">etype</a>)) {<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#var\">var</a> = (<a class=\"id\" href=\"#typeof\">typeof</a>(<a class=\"id\" href=\"#var\">var</a>))(<a class=\"id\" href=\"#entry\">entry</a>);<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#id\">id</a> && (<a class=\"id\" href=\"#entry\">entry</a>)-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#id\">id</a>);<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>break;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"comment\">/* Will cause compile errors if type is not found. */</span>", 
"extern void <a class=\"id\" href=\"#__ftrace_bad_type\">__ftrace_bad_type</a>(void);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The trace_assign_type is a verifier that the entry type is</span>", 
"<span class=\"comment\"> * the same as the type being assigned. To add new types simply</span>", 
"<span class=\"comment\"> * add a line with the following format:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * IF_ASSIGN(var, ent, type, id);</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Where \"type\" is the trace type that includes the trace_entry</span>", 
"<span class=\"comment\"> *  as the \"ent\" item. And \"id\" is the trace identifier that is</span>", 
"<span class=\"comment\"> *  used in the trace_type enum.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  If the type can have more than one id, then use zero.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#trace_assign_type\">trace_assign_type</a>(<a class=\"id\" href=\"#var\">var</a>, <a class=\"id\" href=\"#ent\">ent</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IF_ASSIGN\">IF_ASSIGN</a>(<a class=\"id\" href=\"#var\">var</a>, <a class=\"id\" href=\"#ent\">ent</a>, struct <a class=\"id\" href=\"#ftrace_entry\">ftrace_entry</a>, <a class=\"id\" href=\"#TRACE_FN\">TRACE_FN</a>);<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IF_ASSIGN\">IF_ASSIGN</a>(<a class=\"id\" href=\"#var\">var</a>, <a class=\"id\" href=\"#ent\">ent</a>, struct <a class=\"id\" href=\"#ctx_switch_entry\">ctx_switch_entry</a>, 0);<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IF_ASSIGN\">IF_ASSIGN</a>(<a class=\"id\" href=\"#var\">var</a>, <a class=\"id\" href=\"#ent\">ent</a>, struct <a class=\"id\" href=\"#stack_entry\">stack_entry</a>, <a class=\"id\" href=\"#TRACE_STACK\">TRACE_STACK</a>);<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IF_ASSIGN\">IF_ASSIGN</a>(<a class=\"id\" href=\"#var\">var</a>, <a class=\"id\" href=\"#ent\">ent</a>, struct <a class=\"id\" href=\"#userstack_entry\">userstack_entry</a>, <a class=\"id\" href=\"#TRACE_USER_STACK\">TRACE_USER_STACK</a>);\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IF_ASSIGN\">IF_ASSIGN</a>(<a class=\"id\" href=\"#var\">var</a>, <a class=\"id\" href=\"#ent\">ent</a>, struct <a class=\"id\" href=\"#print_entry\">print_entry</a>, <a class=\"id\" href=\"#TRACE_PRINT\">TRACE_PRINT</a>);<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IF_ASSIGN\">IF_ASSIGN</a>(<a class=\"id\" href=\"#var\">var</a>, <a class=\"id\" href=\"#ent\">ent</a>, struct <a class=\"id\" href=\"#bprint_entry\">bprint_entry</a>, <a class=\"id\" href=\"#TRACE_BPRINT\">TRACE_BPRINT</a>);<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IF_ASSIGN\">IF_ASSIGN</a>(<a class=\"id\" href=\"#var\">var</a>, <a class=\"id\" href=\"#ent\">ent</a>, struct <a class=\"id\" href=\"#trace_mmiotrace_rw\">trace_mmiotrace_rw</a>,<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#TRACE_MMIO_RW\">TRACE_MMIO_RW</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IF_ASSIGN\">IF_ASSIGN</a>(<a class=\"id\" href=\"#var\">var</a>, <a class=\"id\" href=\"#ent\">ent</a>, struct <a class=\"id\" href=\"#trace_mmiotrace_map\">trace_mmiotrace_map</a>,<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#TRACE_MMIO_MAP\">TRACE_MMIO_MAP</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IF_ASSIGN\">IF_ASSIGN</a>(<a class=\"id\" href=\"#var\">var</a>, <a class=\"id\" href=\"#ent\">ent</a>, struct <a class=\"id\" href=\"#trace_branch\">trace_branch</a>, <a class=\"id\" href=\"#TRACE_BRANCH\">TRACE_BRANCH</a>); \\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IF_ASSIGN\">IF_ASSIGN</a>(<a class=\"id\" href=\"#var\">var</a>, <a class=\"id\" href=\"#ent\">ent</a>, struct <a class=\"id\" href=\"#ftrace_graph_ent_entry\">ftrace_graph_ent_entry</a>,<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#TRACE_GRAPH_ENT\">TRACE_GRAPH_ENT</a>);<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IF_ASSIGN\">IF_ASSIGN</a>(<a class=\"id\" href=\"#var\">var</a>, <a class=\"id\" href=\"#ent\">ent</a>, struct <a class=\"id\" href=\"#ftrace_graph_ret_entry\">ftrace_graph_ret_entry</a>,<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#TRACE_GRAPH_RET\">TRACE_GRAPH_RET</a>);<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__ftrace_bad_type\">__ftrace_bad_type</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>} while (0)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * An option specific to a tracer. This is a boolean value.</span>", 
"<span class=\"comment\"> * The bit is the bit index that sets its value on the</span>", 
"<span class=\"comment\"> * flags value in struct tracer_flags.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#tracer_opt\">tracer_opt</a> {", 
"<span class=\"ts\"/>const char<span class=\"ts\"/>*<a class=\"id\" href=\"#name\">name</a>; <span class=\"comment\">/* Will appear on the trace_options file */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bit\">bit</a>; <span class=\"comment\">/* Mask assigned in val field in tracer_flags */</span>", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The set of specific options for a tracer. Your tracer</span>", 
"<span class=\"comment\"> * have to set the initial value of the flags val.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#tracer_flags\">tracer_flags</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tracer_opt\">tracer_opt</a><span class=\"ts\"/>*<a class=\"id\" href=\"#opts\">opts</a>;", 
"};", 
"", 
"<span class=\"comment\">/* Makes more easy to define a tracer opt */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TRACER_OPT\">TRACER_OPT</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#b\">b</a>)<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a> = #<a class=\"id\" href=\"#s\">s</a>, .<a class=\"id\" href=\"#bit\">bit</a> = <a class=\"id\" href=\"#b\">b</a>", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * struct tracer - a specific tracer and its callbacks to interact with debugfs</span>", 
"<span class=\"comment\"> * @name: the name chosen to select it on the available_tracers file</span>", 
"<span class=\"comment\"> * @init: called when one switches to this tracer (echo name &gt; current_tracer)</span>", 
"<span class=\"comment\"> * @reset: called when one switches to another tracer</span>", 
"<span class=\"comment\"> * @start: called when tracing is unpaused (echo 1 &gt; tracing_enabled)</span>", 
"<span class=\"comment\"> * @stop: called when tracing is paused (echo 0 &gt; tracing_enabled)</span>", 
"<span class=\"comment\"> * @open: called when the trace file is opened</span>", 
"<span class=\"comment\"> * @pipe_open: called when the trace_pipe file is opened</span>", 
"<span class=\"comment\"> * @wait_pipe: override how the user waits for traces on trace_pipe</span>", 
"<span class=\"comment\"> * @close: called when the trace file is released</span>", 
"<span class=\"comment\"> * @pipe_close: called when the trace_pipe file is released</span>", 
"<span class=\"comment\"> * @read: override the default read callback on trace_pipe</span>", 
"<span class=\"comment\"> * @splice_read: override the default splice_read callback on trace_pipe</span>", 
"<span class=\"comment\"> * @selftest: selftest to run on boot (see trace_selftest.c)</span>", 
"<span class=\"comment\"> * @print_headers: override the first lines that describe your columns</span>", 
"<span class=\"comment\"> * @print_line: callback that prints a trace</span>", 
"<span class=\"comment\"> * @set_flag: signals one of your private flags changed (trace_options file)</span>", 
"<span class=\"comment\"> * @flags: your private flags</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#tracer\">tracer</a> {", 
"<span class=\"ts\"/>const char<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#init\">init</a>)(struct <a class=\"id\" href=\"#trace_array\">trace_array</a> *<a class=\"id\" href=\"#tr\">tr</a>);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#reset\">reset</a>)(struct <a class=\"id\" href=\"#trace_array\">trace_array</a> *<a class=\"id\" href=\"#tr\">tr</a>);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#start\">start</a>)(struct <a class=\"id\" href=\"#trace_array\">trace_array</a> *<a class=\"id\" href=\"#tr\">tr</a>);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#stop\">stop</a>)(struct <a class=\"id\" href=\"#trace_array\">trace_array</a> *<a class=\"id\" href=\"#tr\">tr</a>);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#open\">open</a>)(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#pipe_open\">pipe_open</a>)(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#wait_pipe\">wait_pipe</a>)(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#close\">close</a>)(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#pipe_close\">pipe_close</a>)(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#read\">read</a>)(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ubuf\">ubuf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#cnt\">cnt</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#splice_read\">splice_read</a>)(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#pipe_inode_info\">pipe_inode_info</a> *<a class=\"id\" href=\"#pipe\">pipe</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned int <a class=\"id\" href=\"#flags\">flags</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_FTRACE_STARTUP_TEST\">CONFIG_FTRACE_STARTUP_TEST</a>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#selftest\">selftest</a>)(struct <a class=\"id\" href=\"#tracer\">tracer</a> *<a class=\"id\" href=\"#trace\">trace</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#trace_array\">trace_array</a> *<a class=\"id\" href=\"#tr\">tr</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#print_header\">print_header</a>)(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>);", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#print_line_t\">print_line_t</a><span class=\"ts\"/>(*<a class=\"id\" href=\"#print_line\">print_line</a>)(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* If you handled the flag setting, return 0 */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#set_flag\">set_flag</a>)(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#old_flags\">old_flags</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#bit\">bit</a>, int <a class=\"id\" href=\"#set\">set</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tracer\">tracer</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#print_max\">print_max</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tracer_flags\">tracer_flags</a><span class=\"ts\"/>*<a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#use_max_tr\">use_max_tr</a>;", 
"};", 
"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TRACE_PIPE_ALL_CPU\">TRACE_PIPE_ALL_CPU</a><span class=\"ts\"/>-1", 
"", 
"int <a class=\"id\" href=\"#tracer_init\">tracer_init</a>(struct <a class=\"id\" href=\"#tracer\">tracer</a> *<a class=\"id\" href=\"#t\">t</a>, struct <a class=\"id\" href=\"#trace_array\">trace_array</a> *<a class=\"id\" href=\"#tr\">tr</a>);", 
"int <a class=\"id\" href=\"#tracing_is_enabled\">tracing_is_enabled</a>(void);", 
"void <a class=\"id\" href=\"#trace_wake_up\">trace_wake_up</a>(void);", 
"void <a class=\"id\" href=\"#tracing_reset\">tracing_reset</a>(struct <a class=\"id\" href=\"#trace_array\">trace_array</a> *<a class=\"id\" href=\"#tr\">tr</a>, int <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"void <a class=\"id\" href=\"#tracing_reset_online_cpus\">tracing_reset_online_cpus</a>(struct <a class=\"id\" href=\"#trace_array\">trace_array</a> *<a class=\"id\" href=\"#tr\">tr</a>);", 
"void <a class=\"id\" href=\"#tracing_reset_current\">tracing_reset_current</a>(int <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"void <a class=\"id\" href=\"#tracing_reset_current_online_cpus\">tracing_reset_current_online_cpus</a>(void);", 
"int <a class=\"id\" href=\"#tracing_open_generic\">tracing_open_generic</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>);", 
"struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#trace_create_file\">trace_create_file</a>(const char *<a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#mode_t\">mode_t</a> <a class=\"id\" href=\"#mode\">mode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#parent\">parent</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> void *<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> *<a class=\"id\" href=\"#fops\">fops</a>);", 
"", 
"struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#tracing_init_dentry\">tracing_init_dentry</a>(void);", 
"", 
"struct <a class=\"id\" href=\"#ring_buffer_event\">ring_buffer_event</a>;", 
"", 
"struct <a class=\"id\" href=\"#ring_buffer_event\">ring_buffer_event</a> *", 
"<a class=\"id\" href=\"#trace_buffer_lock_reserve\">trace_buffer_lock_reserve</a>(struct <a class=\"id\" href=\"#ring_buffer\">ring_buffer</a> *<a class=\"id\" href=\"#buffer\">buffer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  int <a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned long <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned long <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  int <a class=\"id\" href=\"#pc\">pc</a>);", 
"void <a class=\"id\" href=\"#trace_buffer_unlock_commit\">trace_buffer_unlock_commit</a>(struct <a class=\"id\" href=\"#ring_buffer\">ring_buffer</a> *<a class=\"id\" href=\"#buffer\">buffer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ring_buffer_event\">ring_buffer_event</a> *<a class=\"id\" href=\"#event\">event</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>, int <a class=\"id\" href=\"#pc\">pc</a>);", 
"", 
"struct <a class=\"id\" href=\"#trace_entry\">trace_entry</a> *<a class=\"id\" href=\"#tracing_get_trace_entry\">tracing_get_trace_entry</a>(struct <a class=\"id\" href=\"#trace_array\">trace_array</a> *<a class=\"id\" href=\"#tr\">tr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#trace_array_cpu\">trace_array_cpu</a> *<a class=\"id\" href=\"#data\">data</a>);", 
"", 
"struct <a class=\"id\" href=\"#trace_entry\">trace_entry</a> *<a class=\"id\" href=\"#trace_find_next_entry\">trace_find_next_entry</a>(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  int *<a class=\"id\" href=\"#ent_cpu\">ent_cpu</a>, <a class=\"id\" href=\"#u64\">u64</a> *<a class=\"id\" href=\"#ent_ts\">ent_ts</a>);", 
"", 
"int <a class=\"id\" href=\"#trace_empty\">trace_empty</a>(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>);", 
"", 
"void *<a class=\"id\" href=\"#trace_find_next_entry_inc\">trace_find_next_entry_inc</a>(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>);", 
"", 
"void <a class=\"id\" href=\"#trace_init_global_iter\">trace_init_global_iter</a>(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>);", 
"", 
"void <a class=\"id\" href=\"#tracing_iter_reset\">tracing_iter_reset</a>(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>, int <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"void <a class=\"id\" href=\"#default_wait_pipe\">default_wait_pipe</a>(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>);", 
"void <a class=\"id\" href=\"#poll_wait_pipe\">poll_wait_pipe</a>(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>);", 
"", 
"void <a class=\"id\" href=\"#ftrace\">ftrace</a>(struct <a class=\"id\" href=\"#trace_array\">trace_array</a> *<a class=\"id\" href=\"#tr\">tr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#trace_array_cpu\">trace_array_cpu</a> *<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    unsigned long <a class=\"id\" href=\"#ip\">ip</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    unsigned long <a class=\"id\" href=\"#parent_ip\">parent_ip</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    unsigned long <a class=\"id\" href=\"#flags\">flags</a>, int <a class=\"id\" href=\"#pc\">pc</a>);", 
"void <a class=\"id\" href=\"#tracing_sched_switch_trace\">tracing_sched_switch_trace</a>(struct <a class=\"id\" href=\"#trace_array\">trace_array</a> *<a class=\"id\" href=\"#tr\">tr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#prev\">prev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#next\">next</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>, int <a class=\"id\" href=\"#pc\">pc</a>);", 
"", 
"void <a class=\"id\" href=\"#tracing_sched_wakeup_trace\">tracing_sched_wakeup_trace</a>(struct <a class=\"id\" href=\"#trace_array\">trace_array</a> *<a class=\"id\" href=\"#tr\">tr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#wakee\">wakee</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#cur\">cur</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>, int <a class=\"id\" href=\"#pc\">pc</a>);", 
"void <a class=\"id\" href=\"#trace_function\">trace_function</a>(struct <a class=\"id\" href=\"#trace_array\">trace_array</a> *<a class=\"id\" href=\"#tr\">tr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    unsigned long <a class=\"id\" href=\"#ip\">ip</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    unsigned long <a class=\"id\" href=\"#parent_ip\">parent_ip</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    unsigned long <a class=\"id\" href=\"#flags\">flags</a>, int <a class=\"id\" href=\"#pc\">pc</a>);", 
"void <a class=\"id\" href=\"#trace_default_header\">trace_default_header</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>);", 
"void <a class=\"id\" href=\"#print_trace_header\">print_trace_header</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>);", 
"int <a class=\"id\" href=\"#trace_empty\">trace_empty</a>(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>);", 
"", 
"void <a class=\"id\" href=\"#trace_graph_return\">trace_graph_return</a>(struct <a class=\"id\" href=\"#ftrace_graph_ret\">ftrace_graph_ret</a> *<a class=\"id\" href=\"#trace\">trace</a>);", 
"int <a class=\"id\" href=\"#trace_graph_entry\">trace_graph_entry</a>(struct <a class=\"id\" href=\"#ftrace_graph_ent\">ftrace_graph_ent</a> *<a class=\"id\" href=\"#trace\">trace</a>);", 
"void <a class=\"id\" href=\"#set_graph_array\">set_graph_array</a>(struct <a class=\"id\" href=\"#trace_array\">trace_array</a> *<a class=\"id\" href=\"#tr\">tr</a>);", 
"", 
"void <a class=\"id\" href=\"#tracing_start_cmdline_record\">tracing_start_cmdline_record</a>(void);", 
"void <a class=\"id\" href=\"#tracing_stop_cmdline_record\">tracing_stop_cmdline_record</a>(void);", 
"void <a class=\"id\" href=\"#tracing_sched_switch_assign_trace\">tracing_sched_switch_assign_trace</a>(struct <a class=\"id\" href=\"#trace_array\">trace_array</a> *<a class=\"id\" href=\"#tr\">tr</a>);", 
"void <a class=\"id\" href=\"#tracing_stop_sched_switch_record\">tracing_stop_sched_switch_record</a>(void);", 
"void <a class=\"id\" href=\"#tracing_start_sched_switch_record\">tracing_start_sched_switch_record</a>(void);", 
"int <a class=\"id\" href=\"#register_tracer\">register_tracer</a>(struct <a class=\"id\" href=\"#tracer\">tracer</a> *<a class=\"id\" href=\"#type\">type</a>);", 
"void <a class=\"id\" href=\"#unregister_tracer\">unregister_tracer</a>(struct <a class=\"id\" href=\"#tracer\">tracer</a> *<a class=\"id\" href=\"#type\">type</a>);", 
"int <a class=\"id\" href=\"#is_tracing_stopped\">is_tracing_stopped</a>(void);", 
"enum <a class=\"id\" href=\"#trace_file_type\">trace_file_type</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_FILE_LAT_FMT\">TRACE_FILE_LAT_FMT</a><span class=\"ts\"/>= 1,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_FILE_ANNOTATE\">TRACE_FILE_ANNOTATE</a><span class=\"ts\"/>= 2,", 
"};", 
"", 
"extern <a class=\"id\" href=\"#cpumask_var_t\">cpumask_var_t</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> <a class=\"id\" href=\"#tracing_buffer_mask\">tracing_buffer_mask</a>;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#for_each_tracing_cpu\">for_each_tracing_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>)<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_cpu\">for_each_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#tracing_buffer_mask\">tracing_buffer_mask</a>)", 
"", 
"extern unsigned long <a class=\"id\" href=\"#nsecs_to_usecs\">nsecs_to_usecs</a>(unsigned long <a class=\"id\" href=\"#nsecs\">nsecs</a>);", 
"", 
"extern unsigned long <a class=\"id\" href=\"#tracing_thresh\">tracing_thresh</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TRACER_MAX_TRACE\">CONFIG_TRACER_MAX_TRACE</a>", 
"extern unsigned long <a class=\"id\" href=\"#tracing_max_latency\">tracing_max_latency</a>;", 
"", 
"void <a class=\"id\" href=\"#update_max_tr\">update_max_tr</a>(struct <a class=\"id\" href=\"#trace_array\">trace_array</a> *<a class=\"id\" href=\"#tr\">tr</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>, int <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"void <a class=\"id\" href=\"#update_max_tr_single\">update_max_tr_single</a>(struct <a class=\"id\" href=\"#trace_array\">trace_array</a> *<a class=\"id\" href=\"#tr\">tr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>, int <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_TRACER_MAX_TRACE */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_STACKTRACE\">CONFIG_STACKTRACE</a>", 
"void <a class=\"id\" href=\"#ftrace_trace_stack\">ftrace_trace_stack</a>(struct <a class=\"id\" href=\"#ring_buffer\">ring_buffer</a> *<a class=\"id\" href=\"#buffer\">buffer</a>, unsigned long <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#skip\">skip</a>, int <a class=\"id\" href=\"#pc\">pc</a>);", 
"", 
"void <a class=\"id\" href=\"#ftrace_trace_userstack\">ftrace_trace_userstack</a>(struct <a class=\"id\" href=\"#ring_buffer\">ring_buffer</a> *<a class=\"id\" href=\"#buffer\">buffer</a>, unsigned long <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    int <a class=\"id\" href=\"#pc\">pc</a>);", 
"", 
"void <a class=\"id\" href=\"#__trace_stack\">__trace_stack</a>(struct <a class=\"id\" href=\"#trace_array\">trace_array</a> *<a class=\"id\" href=\"#tr\">tr</a>, unsigned long <a class=\"id\" href=\"#flags\">flags</a>, int <a class=\"id\" href=\"#skip\">skip</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   int <a class=\"id\" href=\"#pc\">pc</a>);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ftrace_trace_stack\">ftrace_trace_stack</a>(struct <a class=\"id\" href=\"#ring_buffer\">ring_buffer</a> *<a class=\"id\" href=\"#buffer\">buffer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      unsigned long <a class=\"id\" href=\"#flags\">flags</a>, int <a class=\"id\" href=\"#skip\">skip</a>, int <a class=\"id\" href=\"#pc\">pc</a>)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ftrace_trace_userstack\">ftrace_trace_userstack</a>(struct <a class=\"id\" href=\"#ring_buffer\">ring_buffer</a> *<a class=\"id\" href=\"#buffer\">buffer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned long <a class=\"id\" href=\"#flags\">flags</a>, int <a class=\"id\" href=\"#pc\">pc</a>)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__trace_stack\">__trace_stack</a>(struct <a class=\"id\" href=\"#trace_array\">trace_array</a> *<a class=\"id\" href=\"#tr\">tr</a>, unsigned long <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> int <a class=\"id\" href=\"#skip\">skip</a>, int <a class=\"id\" href=\"#pc\">pc</a>)", 
"{", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_STACKTRACE */</span>", 
"", 
"extern <a class=\"id\" href=\"#cycle_t\">cycle_t</a> <a class=\"id\" href=\"#ftrace_now\">ftrace_now</a>(int <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"extern void <a class=\"id\" href=\"#trace_find_cmdline\">trace_find_cmdline</a>(int <a class=\"id\" href=\"#pid\">pid</a>, char <a class=\"id\" href=\"#comm\">comm</a>[]);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_DYNAMIC_FTRACE\">CONFIG_DYNAMIC_FTRACE</a>", 
"extern unsigned long <a class=\"id\" href=\"#ftrace_update_tot_cnt\">ftrace_update_tot_cnt</a>;", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DYN_FTRACE_TEST_NAME\">DYN_FTRACE_TEST_NAME</a> <a class=\"id\" href=\"#trace_selftest_dynamic_test_func\">trace_selftest_dynamic_test_func</a>", 
"extern int <a class=\"id\" href=\"#DYN_FTRACE_TEST_NAME\">DYN_FTRACE_TEST_NAME</a>(void);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"extern int <a class=\"id\" href=\"#ring_buffer_expanded\">ring_buffer_expanded</a>;", 
"extern <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#tracing_selftest_disabled\">tracing_selftest_disabled</a>;", 
"<a class=\"id\" href=\"#DECLARE_PER_CPU\">DECLARE_PER_CPU</a>(int, <a class=\"id\" href=\"#ftrace_cpu_disabled\">ftrace_cpu_disabled</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_FTRACE_STARTUP_TEST\">CONFIG_FTRACE_STARTUP_TEST</a>", 
"extern int <a class=\"id\" href=\"#trace_selftest_startup_function\">trace_selftest_startup_function</a>(struct <a class=\"id\" href=\"#tracer\">tracer</a> *<a class=\"id\" href=\"#trace\">trace</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#trace_array\">trace_array</a> *<a class=\"id\" href=\"#tr\">tr</a>);", 
"extern int <a class=\"id\" href=\"#trace_selftest_startup_function_graph\">trace_selftest_startup_function_graph</a>(struct <a class=\"id\" href=\"#tracer\">tracer</a> *<a class=\"id\" href=\"#trace\">trace</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#trace_array\">trace_array</a> *<a class=\"id\" href=\"#tr\">tr</a>);", 
"extern int <a class=\"id\" href=\"#trace_selftest_startup_irqsoff\">trace_selftest_startup_irqsoff</a>(struct <a class=\"id\" href=\"#tracer\">tracer</a> *<a class=\"id\" href=\"#trace\">trace</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#trace_array\">trace_array</a> *<a class=\"id\" href=\"#tr\">tr</a>);", 
"extern int <a class=\"id\" href=\"#trace_selftest_startup_preemptoff\">trace_selftest_startup_preemptoff</a>(struct <a class=\"id\" href=\"#tracer\">tracer</a> *<a class=\"id\" href=\"#trace\">trace</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#trace_array\">trace_array</a> *<a class=\"id\" href=\"#tr\">tr</a>);", 
"extern int <a class=\"id\" href=\"#trace_selftest_startup_preemptirqsoff\">trace_selftest_startup_preemptirqsoff</a>(struct <a class=\"id\" href=\"#tracer\">tracer</a> *<a class=\"id\" href=\"#trace\">trace</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#trace_array\">trace_array</a> *<a class=\"id\" href=\"#tr\">tr</a>);", 
"extern int <a class=\"id\" href=\"#trace_selftest_startup_wakeup\">trace_selftest_startup_wakeup</a>(struct <a class=\"id\" href=\"#tracer\">tracer</a> *<a class=\"id\" href=\"#trace\">trace</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#trace_array\">trace_array</a> *<a class=\"id\" href=\"#tr\">tr</a>);", 
"extern int <a class=\"id\" href=\"#trace_selftest_startup_nop\">trace_selftest_startup_nop</a>(struct <a class=\"id\" href=\"#tracer\">tracer</a> *<a class=\"id\" href=\"#trace\">trace</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#trace_array\">trace_array</a> *<a class=\"id\" href=\"#tr\">tr</a>);", 
"extern int <a class=\"id\" href=\"#trace_selftest_startup_sched_switch\">trace_selftest_startup_sched_switch</a>(struct <a class=\"id\" href=\"#tracer\">tracer</a> *<a class=\"id\" href=\"#trace\">trace</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#trace_array\">trace_array</a> *<a class=\"id\" href=\"#tr\">tr</a>);", 
"extern int <a class=\"id\" href=\"#trace_selftest_startup_branch\">trace_selftest_startup_branch</a>(struct <a class=\"id\" href=\"#tracer\">tracer</a> *<a class=\"id\" href=\"#trace\">trace</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#trace_array\">trace_array</a> *<a class=\"id\" href=\"#tr\">tr</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_FTRACE_STARTUP_TEST */</span>", 
"", 
"extern void *<a class=\"id\" href=\"#head_page\">head_page</a>(struct <a class=\"id\" href=\"#trace_array_cpu\">trace_array_cpu</a> *<a class=\"id\" href=\"#data\">data</a>);", 
"extern unsigned long long <a class=\"id\" href=\"#ns2usecs\">ns2usecs</a>(<a class=\"id\" href=\"#cycle_t\">cycle_t</a> <a class=\"id\" href=\"#nsec\">nsec</a>);", 
"extern int", 
"<a class=\"id\" href=\"#trace_vbprintk\">trace_vbprintk</a>(unsigned long <a class=\"id\" href=\"#ip\">ip</a>, const char *<a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#va_list\">va_list</a> <a class=\"id\" href=\"#args\">args</a>);", 
"extern int", 
"<a class=\"id\" href=\"#trace_vprintk\">trace_vprintk</a>(unsigned long <a class=\"id\" href=\"#ip\">ip</a>, const char *<a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#va_list\">va_list</a> <a class=\"id\" href=\"#args\">args</a>);", 
"extern int", 
"<a class=\"id\" href=\"#trace_array_vprintk\">trace_array_vprintk</a>(struct <a class=\"id\" href=\"#trace_array\">trace_array</a> *<a class=\"id\" href=\"#tr\">tr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    unsigned long <a class=\"id\" href=\"#ip\">ip</a>, const char *<a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#va_list\">va_list</a> <a class=\"id\" href=\"#args\">args</a>);", 
"int <a class=\"id\" href=\"#trace_array_printk\">trace_array_printk</a>(struct <a class=\"id\" href=\"#trace_array\">trace_array</a> *<a class=\"id\" href=\"#tr\">tr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       unsigned long <a class=\"id\" href=\"#ip\">ip</a>, const char *<a class=\"id\" href=\"#fmt\">fmt</a>, ...);", 
"void <a class=\"id\" href=\"#trace_printk_seq\">trace_printk_seq</a>(struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a>);", 
"enum <a class=\"id\" href=\"#print_line_t\">print_line_t</a> <a class=\"id\" href=\"#print_trace_line\">print_trace_line</a>(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>);", 
"", 
"extern unsigned long <a class=\"id\" href=\"#trace_flags\">trace_flags</a>;", 
"", 
"extern int <a class=\"id\" href=\"#trace_clock_id\">trace_clock_id</a>;", 
"", 
"<span class=\"comment\">/* Standard output formatting function used for function return traces */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_FUNCTION_GRAPH_TRACER\">CONFIG_FUNCTION_GRAPH_TRACER</a>", 
"", 
"<span class=\"comment\">/* Flag options */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TRACE_GRAPH_PRINT_OVERRUN\">TRACE_GRAPH_PRINT_OVERRUN</a>       0x1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TRACE_GRAPH_PRINT_CPU\">TRACE_GRAPH_PRINT_CPU</a>           0x2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TRACE_GRAPH_PRINT_OVERHEAD\">TRACE_GRAPH_PRINT_OVERHEAD</a>      0x4", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TRACE_GRAPH_PRINT_PROC\">TRACE_GRAPH_PRINT_PROC</a>          0x8", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TRACE_GRAPH_PRINT_DURATION\">TRACE_GRAPH_PRINT_DURATION</a>      0x10", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TRACE_GRAPH_PRINT_ABS_TIME\">TRACE_GRAPH_PRINT_ABS_TIME</a>      0x20", 
"", 
"extern enum <a class=\"id\" href=\"#print_line_t\">print_line_t</a>", 
"<a class=\"id\" href=\"#print_graph_function_flags\">print_graph_function_flags</a>(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#flags\">flags</a>);", 
"extern void <a class=\"id\" href=\"#print_graph_headers_flags\">print_graph_headers_flags</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#flags\">flags</a>);", 
"extern enum <a class=\"id\" href=\"#print_line_t\">print_line_t</a>", 
"<a class=\"id\" href=\"#trace_print_graph_duration\">trace_print_graph_duration</a>(unsigned long long <a class=\"id\" href=\"#duration\">duration</a>, struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a>);", 
"extern void <a class=\"id\" href=\"#graph_trace_open\">graph_trace_open</a>(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>);", 
"extern void <a class=\"id\" href=\"#graph_trace_close\">graph_trace_close</a>(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>);", 
"extern int <a class=\"id\" href=\"#__trace_graph_entry\">__trace_graph_entry</a>(struct <a class=\"id\" href=\"#trace_array\">trace_array</a> *<a class=\"id\" href=\"#tr\">tr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#ftrace_graph_ent\">ftrace_graph_ent</a> *<a class=\"id\" href=\"#trace\">trace</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned long <a class=\"id\" href=\"#flags\">flags</a>, int <a class=\"id\" href=\"#pc\">pc</a>);", 
"extern void <a class=\"id\" href=\"#__trace_graph_return\">__trace_graph_return</a>(struct <a class=\"id\" href=\"#trace_array\">trace_array</a> *<a class=\"id\" href=\"#tr\">tr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#ftrace_graph_ret\">ftrace_graph_ret</a> *<a class=\"id\" href=\"#trace\">trace</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned long <a class=\"id\" href=\"#flags\">flags</a>, int <a class=\"id\" href=\"#pc\">pc</a>);", 
"", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_DYNAMIC_FTRACE\">CONFIG_DYNAMIC_FTRACE</a>", 
"<span class=\"comment\">/* TODO: make this variable */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FTRACE_GRAPH_MAX_FUNCS\">FTRACE_GRAPH_MAX_FUNCS</a><span class=\"ts\"/><span class=\"ts\"/>32", 
"extern int <a class=\"id\" href=\"#ftrace_graph_filter_enabled\">ftrace_graph_filter_enabled</a>;", 
"extern int <a class=\"id\" href=\"#ftrace_graph_count\">ftrace_graph_count</a>;", 
"extern unsigned long <a class=\"id\" href=\"#ftrace_graph_funcs\">ftrace_graph_funcs</a>[<a class=\"id\" href=\"#FTRACE_GRAPH_MAX_FUNCS\">FTRACE_GRAPH_MAX_FUNCS</a>];", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ftrace_graph_addr\">ftrace_graph_addr</a>(unsigned long <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ftrace_graph_filter_enabled\">ftrace_graph_filter_enabled</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ftrace_graph_count\">ftrace_graph_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#addr\">addr</a> == <a class=\"id\" href=\"#ftrace_graph_funcs\">ftrace_graph_funcs</a>[<a class=\"id\" href=\"#i\">i</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ftrace_graph_addr\">ftrace_graph_addr</a>(unsigned long <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>return 1;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_DYNAMIC_FTRACE */</span>", 
"#else <span class=\"comment\">/* CONFIG_FUNCTION_GRAPH_TRACER */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> enum <a class=\"id\" href=\"#print_line_t\">print_line_t</a>", 
"<a class=\"id\" href=\"#print_graph_function_flags\">print_graph_function_flags</a>(struct <a class=\"id\" href=\"#trace_iterator\">trace_iterator</a> *<a class=\"id\" href=\"#iter\">iter</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#TRACE_TYPE_UNHANDLED\">TRACE_TYPE_UNHANDLED</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_FUNCTION_GRAPH_TRACER */</span>", 
"", 
"extern struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#ftrace_pids\">ftrace_pids</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_FUNCTION_TRACER\">CONFIG_FUNCTION_TRACER</a>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ftrace_trace_task\">ftrace_trace_task</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#ftrace_pids\">ftrace_pids</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#test_tsk_trace_trace\">test_tsk_trace_trace</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"}", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ftrace_trace_task\">ftrace_trace_task</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>)", 
"{", 
"<span class=\"ts\"/>return 1;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * struct trace_parser - servers for reading the user input separated by spaces</span>", 
"<span class=\"comment\"> * @cont: set if the input is not complete - no final space char was found</span>", 
"<span class=\"comment\"> * @buffer: holds the parsed user input</span>", 
"<span class=\"comment\"> * @idx: user input length</span>", 
"<span class=\"comment\"> * @size: buffer size</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#trace_parser\">trace_parser</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cont\">cont</a>;", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#buffer\">buffer</a>;", 
"<span class=\"ts\"/>unsigned<span class=\"ts\"/><a class=\"id\" href=\"#idx\">idx</a>;", 
"<span class=\"ts\"/>unsigned<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a>;", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#trace_parser_loaded\">trace_parser_loaded</a>(struct <a class=\"id\" href=\"#trace_parser\">trace_parser</a> *<a class=\"id\" href=\"#parser\">parser</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#parser\">parser</a>-><a class=\"id\" href=\"#idx\">idx</a> != 0);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#trace_parser_cont\">trace_parser_cont</a>(struct <a class=\"id\" href=\"#trace_parser\">trace_parser</a> *<a class=\"id\" href=\"#parser\">parser</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#parser\">parser</a>-><a class=\"id\" href=\"#cont\">cont</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#trace_parser_clear\">trace_parser_clear</a>(struct <a class=\"id\" href=\"#trace_parser\">trace_parser</a> *<a class=\"id\" href=\"#parser\">parser</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#parser\">parser</a>-><a class=\"id\" href=\"#cont\">cont</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#parser\">parser</a>-><a class=\"id\" href=\"#idx\">idx</a> = 0;", 
"}", 
"", 
"extern int <a class=\"id\" href=\"#trace_parser_get_init\">trace_parser_get_init</a>(struct <a class=\"id\" href=\"#trace_parser\">trace_parser</a> *<a class=\"id\" href=\"#parser\">parser</a>, int <a class=\"id\" href=\"#size\">size</a>);", 
"extern void <a class=\"id\" href=\"#trace_parser_put\">trace_parser_put</a>(struct <a class=\"id\" href=\"#trace_parser\">trace_parser</a> *<a class=\"id\" href=\"#parser\">parser</a>);", 
"extern int <a class=\"id\" href=\"#trace_get_user\">trace_get_user</a>(struct <a class=\"id\" href=\"#trace_parser\">trace_parser</a> *<a class=\"id\" href=\"#parser\">parser</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ubuf\">ubuf</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#cnt\">cnt</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * trace_iterator_flags is an enumeration that defines bit</span>", 
"<span class=\"comment\"> * positions into trace_flags that controls the output.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NOTE: These bits must match the trace_options array in</span>", 
"<span class=\"comment\"> *       trace.c.</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#trace_iterator_flags\">trace_iterator_flags</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_ITER_PRINT_PARENT\">TRACE_ITER_PRINT_PARENT</a><span class=\"ts\"/><span class=\"ts\"/>= 0x01,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_ITER_SYM_OFFSET\">TRACE_ITER_SYM_OFFSET</a><span class=\"ts\"/><span class=\"ts\"/>= 0x02,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_ITER_SYM_ADDR\">TRACE_ITER_SYM_ADDR</a><span class=\"ts\"/><span class=\"ts\"/>= 0x04,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_ITER_VERBOSE\">TRACE_ITER_VERBOSE</a><span class=\"ts\"/><span class=\"ts\"/>= 0x08,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_ITER_RAW\">TRACE_ITER_RAW</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= 0x10,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_ITER_HEX\">TRACE_ITER_HEX</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= 0x20,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_ITER_BIN\">TRACE_ITER_BIN</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= 0x40,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_ITER_BLOCK\">TRACE_ITER_BLOCK</a><span class=\"ts\"/><span class=\"ts\"/>= 0x80,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_ITER_STACKTRACE\">TRACE_ITER_STACKTRACE</a><span class=\"ts\"/><span class=\"ts\"/>= 0x100,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_ITER_PRINTK\">TRACE_ITER_PRINTK</a><span class=\"ts\"/><span class=\"ts\"/>= 0x200,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_ITER_PREEMPTONLY\">TRACE_ITER_PREEMPTONLY</a><span class=\"ts\"/><span class=\"ts\"/>= 0x400,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_ITER_BRANCH\">TRACE_ITER_BRANCH</a><span class=\"ts\"/><span class=\"ts\"/>= 0x800,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_ITER_ANNOTATE\">TRACE_ITER_ANNOTATE</a><span class=\"ts\"/><span class=\"ts\"/>= 0x1000,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_ITER_USERSTACKTRACE\">TRACE_ITER_USERSTACKTRACE</a>       = 0x2000,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_ITER_SYM_USEROBJ\">TRACE_ITER_SYM_USEROBJ</a>          = 0x4000,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_ITER_PRINTK_MSGONLY\">TRACE_ITER_PRINTK_MSGONLY</a><span class=\"ts\"/>= 0x8000,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_ITER_CONTEXT_INFO\">TRACE_ITER_CONTEXT_INFO</a><span class=\"ts\"/><span class=\"ts\"/>= 0x10000, <span class=\"comment\">/* Print pid/cpu/time */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_ITER_LATENCY_FMT\">TRACE_ITER_LATENCY_FMT</a><span class=\"ts\"/><span class=\"ts\"/>= 0x20000,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_ITER_SLEEP_TIME\">TRACE_ITER_SLEEP_TIME</a><span class=\"ts\"/><span class=\"ts\"/>= 0x40000,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_ITER_GRAPH_TIME\">TRACE_ITER_GRAPH_TIME</a><span class=\"ts\"/><span class=\"ts\"/>= 0x80000,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_ITER_RECORD_CMD\">TRACE_ITER_RECORD_CMD</a><span class=\"ts\"/><span class=\"ts\"/>= 0x100000,", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * TRACE_ITER_SYM_MASK masks the options in trace_flags that</span>", 
"<span class=\"comment\"> * control the output of kernel symbols.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TRACE_ITER_SYM_MASK\">TRACE_ITER_SYM_MASK</a> \\", 
"<span class=\"ts\"/>(<a class=\"id\" href=\"#TRACE_ITER_PRINT_PARENT\">TRACE_ITER_PRINT_PARENT</a>|<a class=\"id\" href=\"#TRACE_ITER_SYM_OFFSET\">TRACE_ITER_SYM_OFFSET</a>|<a class=\"id\" href=\"#TRACE_ITER_SYM_ADDR\">TRACE_ITER_SYM_ADDR</a>)", 
"", 
"extern struct <a class=\"id\" href=\"#tracer\">tracer</a> <a class=\"id\" href=\"#nop_trace\">nop_trace</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_BRANCH_TRACER\">CONFIG_BRANCH_TRACER</a>", 
"extern int <a class=\"id\" href=\"#enable_branch_tracing\">enable_branch_tracing</a>(struct <a class=\"id\" href=\"#trace_array\">trace_array</a> *<a class=\"id\" href=\"#tr\">tr</a>);", 
"extern void <a class=\"id\" href=\"#disable_branch_tracing\">disable_branch_tracing</a>(void);", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#trace_branch_enable\">trace_branch_enable</a>(struct <a class=\"id\" href=\"#trace_array\">trace_array</a> *<a class=\"id\" href=\"#tr\">tr</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#trace_flags\">trace_flags</a> &amp; <a class=\"id\" href=\"#TRACE_ITER_BRANCH\">TRACE_ITER_BRANCH</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#enable_branch_tracing\">enable_branch_tracing</a>(<a class=\"id\" href=\"#tr\">tr</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#trace_branch_disable\">trace_branch_disable</a>(void)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* due to races, always disable */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disable_branch_tracing\">disable_branch_tracing</a>();", 
"}", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#trace_branch_enable\">trace_branch_enable</a>(struct <a class=\"id\" href=\"#trace_array\">trace_array</a> *<a class=\"id\" href=\"#tr\">tr</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#trace_branch_disable\">trace_branch_disable</a>(void)", 
"{", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_BRANCH_TRACER */</span>", 
"", 
"<span class=\"comment\">/* set ring buffers to default size if not already done so */</span>", 
"int <a class=\"id\" href=\"#tracing_update_buffers\">tracing_update_buffers</a>(void);", 
"", 
"<span class=\"comment\">/* trace event type bit fields, not numeric */</span>", 
"enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_EVENT_TYPE_PRINTF\">TRACE_EVENT_TYPE_PRINTF</a><span class=\"ts\"/><span class=\"ts\"/>= 1,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TRACE_EVENT_TYPE_RAW\">TRACE_EVENT_TYPE_RAW</a><span class=\"ts\"/><span class=\"ts\"/>= 2,", 
"};", 
"", 
"struct <a class=\"id\" href=\"#ftrace_event_field\">ftrace_event_field</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a>;", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filter_type\">filter_type</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#is_signed\">is_signed</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#event_filter\">event_filter</a> {", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n_preds\">n_preds</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#filter_pred\">filter_pred</a><span class=\"ts\"/>**<a class=\"id\" href=\"#preds\">preds</a>;", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#filter_string\">filter_string</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#event_subsystem\">event_subsystem</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/>const char<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#event_filter\">event_filter</a><span class=\"ts\"/>*<a class=\"id\" href=\"#filter\">filter</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_events\">nr_events</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#filter_pred\">filter_pred</a>;", 
"struct <a class=\"id\" href=\"#regex\">regex</a>;", 
"", 
"typedef int (*<a class=\"id\" href=\"#filter_pred_fn_t\">filter_pred_fn_t</a>) (struct <a class=\"id\" href=\"#filter_pred\">filter_pred</a> *<a class=\"id\" href=\"#pred\">pred</a>, void *<a class=\"id\" href=\"#event\">event</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> int <a class=\"id\" href=\"#val1\">val1</a>, int <a class=\"id\" href=\"#val2\">val2</a>);", 
"", 
"typedef int (*<a class=\"id\" href=\"#regex_match_func\">regex_match_func</a>)(char *<a class=\"id\" href=\"#str\">str</a>, struct <a class=\"id\" href=\"#regex\">regex</a> *<a class=\"id\" href=\"#r\">r</a>, int <a class=\"id\" href=\"#len\">len</a>);", 
"", 
"enum <a class=\"id\" href=\"#regex_type\">regex_type</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MATCH_FULL\">MATCH_FULL</a> = 0,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MATCH_FRONT_ONLY\">MATCH_FRONT_ONLY</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MATCH_MIDDLE_ONLY\">MATCH_MIDDLE_ONLY</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MATCH_END_ONLY\">MATCH_END_ONLY</a>,", 
"};", 
"", 
"struct <a class=\"id\" href=\"#regex\">regex</a> {", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pattern\">pattern</a>[<a class=\"id\" href=\"#MAX_FILTER_STR_VAL\">MAX_FILTER_STR_VAL</a>];", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#field_len\">field_len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#regex_match_func\">regex_match_func</a><span class=\"ts\"/><a class=\"id\" href=\"#match\">match</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#filter_pred\">filter_pred</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#filter_pred_fn_t\">filter_pred_fn_t</a> <span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#regex\">regex</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#regex\">regex</a>;", 
"<span class=\"ts\"/>char <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#field_name\">field_name</a>;", 
"<span class=\"ts\"/>int <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/>int <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#not\">not</a>;", 
"<span class=\"ts\"/>int <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#op\">op</a>;", 
"<span class=\"ts\"/>int <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pop_n\">pop_n</a>;", 
"};", 
"", 
"extern struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#ftrace_common_fields\">ftrace_common_fields</a>;", 
"", 
"extern enum <a class=\"id\" href=\"#regex_type\">regex_type</a>", 
"<a class=\"id\" href=\"#filter_parse_regex\">filter_parse_regex</a>(char *<a class=\"id\" href=\"#buff\">buff</a>, int <a class=\"id\" href=\"#len\">len</a>, char **<a class=\"id\" href=\"#search\">search</a>, int *<a class=\"id\" href=\"#not\">not</a>);", 
"extern void <a class=\"id\" href=\"#print_event_filter\">print_event_filter</a>(struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a>);", 
"extern int <a class=\"id\" href=\"#apply_event_filter\">apply_event_filter</a>(struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      char *<a class=\"id\" href=\"#filter_string\">filter_string</a>);", 
"extern int <a class=\"id\" href=\"#apply_subsystem_event_filter\">apply_subsystem_event_filter</a>(struct <a class=\"id\" href=\"#event_subsystem\">event_subsystem</a> *<a class=\"id\" href=\"#system\">system</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#filter_string\">filter_string</a>);", 
"extern void <a class=\"id\" href=\"#print_subsystem_event_filter\">print_subsystem_event_filter</a>(struct <a class=\"id\" href=\"#event_subsystem\">event_subsystem</a> *<a class=\"id\" href=\"#system\">system</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a>);", 
"extern int <a class=\"id\" href=\"#filter_assign_type\">filter_assign_type</a>(const char *<a class=\"id\" href=\"#type\">type</a>);", 
"", 
"struct <a class=\"id\" href=\"#list_head\">list_head</a> *", 
"<a class=\"id\" href=\"#trace_get_fields\">trace_get_fields</a>(struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#event_call\">event_call</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int", 
"<a class=\"id\" href=\"#filter_check_discard\">filter_check_discard</a>(struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a>, void *<a class=\"id\" href=\"#rec\">rec</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#ring_buffer\">ring_buffer</a> *<a class=\"id\" href=\"#buffer\">buffer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#ring_buffer_event\">ring_buffer_event</a> *<a class=\"id\" href=\"#event\">event</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TRACE_EVENT_FL_FILTERED\">TRACE_EVENT_FL_FILTERED</a>) &&", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#filter_match_preds\">filter_match_preds</a>(<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#filter\">filter</a>, <a class=\"id\" href=\"#rec\">rec</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ring_buffer_discard_commit\">ring_buffer_discard_commit</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#event\">event</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"extern void <a class=\"id\" href=\"#trace_event_enable_cmd_record\">trace_event_enable_cmd_record</a>(<a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#enable\">enable</a>);", 
"", 
"extern struct <a class=\"id\" href=\"#mutex\">mutex</a> <a class=\"id\" href=\"#event_mutex\">event_mutex</a>;", 
"extern struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#ftrace_events\">ftrace_events</a>;", 
"", 
"extern const char *<a class=\"id\" href=\"#__start___trace_bprintk_fmt\">__start___trace_bprintk_fmt</a>[];", 
"extern const char *<a class=\"id\" href=\"#__stop___trace_bprintk_fmt\">__stop___trace_bprintk_fmt</a>[];", 
"", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#FTRACE_ENTRY\">FTRACE_ENTRY</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FTRACE_ENTRY\">FTRACE_ENTRY</a>(<a class=\"id\" href=\"#call\">call</a>, <a class=\"id\" href=\"#struct_name\">struct_name</a>, <a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#tstruct\">tstruct</a>, <a class=\"id\" href=\"#print\">print</a>)<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>extern struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#__aligned__\">__aligned__</a>(4))) <a class=\"id\" href=\"#event_\">event_</a>##<a class=\"id\" href=\"#call\">call</a>;", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#FTRACE_ENTRY_DUP\">FTRACE_ENTRY_DUP</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FTRACE_ENTRY_DUP\">FTRACE_ENTRY_DUP</a>(<a class=\"id\" href=\"#call\">call</a>, <a class=\"id\" href=\"#struct_name\">struct_name</a>, <a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#tstruct\">tstruct</a>, <a class=\"id\" href=\"#print\">print</a>)<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#FTRACE_ENTRY\">FTRACE_ENTRY</a>(<a class=\"id\" href=\"#call\">call</a>, <a class=\"id\" href=\"#struct_name\">struct_name</a>, <a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#PARAMS\">PARAMS</a>(<a class=\"id\" href=\"#tstruct\">tstruct</a>), <a class=\"id\" href=\"#PARAMS\">PARAMS</a>(<a class=\"id\" href=\"#print\">print</a>))", 
"#<a class=\"id\" href=\"#include\">include</a> \"trace_entries.h\"", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _LINUX_KERNEL_TRACE_H */</span>", 
];
xr_frag_insert('l/76/d98d5a0a0997334e8b69c86560618c552fd2be.xr', __xr_tmp);
