var __xr_tmp = [
"<span class=\"comment\"> * be the overrun of the timer last delivered.  At the same time we are</span>", 
"<span class=\"comment\"> * accumulating overruns on the next timer.  The overrun is frozen when</span>", 
"<span class=\"comment\"> * the signal is delivered, either at the notify time (if the info block</span>", 
"<span class=\"comment\"> * is not queued) or at the actual delivery time (as we are informed by</span>", 
"<span class=\"comment\"> * the call back to do_schedule_next_timer().  So all we need to do is</span>", 
"<span class=\"comment\"> * to pick up the frozen overrun.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE1\">SYSCALL_DEFINE1</a>(<a class=\"id\" href=\"#timer_getoverrun\">timer_getoverrun</a>, <a class=\"id\" href=\"#timer_t\">timer_t</a>, <a class=\"id\" href=\"#timer_id\">timer_id</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#k_itimer\">k_itimer</a> *<a class=\"id\" href=\"#timr\">timr</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#overrun\">overrun</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timr\">timr</a> = <a class=\"id\" href=\"#lock_timer\">lock_timer</a>(<a class=\"id\" href=\"#timer_id\">timer_id</a>, &amp;<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#timr\">timr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#overrun\">overrun</a> = <a class=\"id\" href=\"#timr\">timr</a>-><a class=\"id\" href=\"#it_overrun_last\">it_overrun_last</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_timer\">unlock_timer</a>(<a class=\"id\" href=\"#timr\">timr</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#overrun\">overrun</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Set a POSIX.1b interval timer. */</span>", 
];
xr_frag_insert('l/77/208714d5eccaaaa0de13f4692e094863aa7043.xr', __xr_tmp);
