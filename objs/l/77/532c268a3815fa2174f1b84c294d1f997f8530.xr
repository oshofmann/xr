var __xr_tmp = [
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_sock\">lock_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fasync_helper\">fasync_helper</a>(<a class=\"id\" href=\"#fd\">fd</a>, <a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#on\">on</a>, &amp;<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#wq\">wq</a>-><a class=\"id\" href=\"#fasync_list\">fasync_list</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#wq\">wq</a>-><a class=\"id\" href=\"#fasync_list\">fasync_list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_reset_flag\">sock_reset_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_FASYNC\">SOCK_FASYNC</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_set_flag\">sock_set_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_FASYNC\">SOCK_FASYNC</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_sock\">release_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* This function may be called only under socket lock or callback_lock or rcu_lock */</span>", 
"", 
"int <a class=\"id\" href=\"#sock_wake_async\">sock_wake_async</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, int <a class=\"id\" href=\"#how\">how</a>, int <a class=\"id\" href=\"#band\">band</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#socket_wq\">socket_wq</a> *<a class=\"id\" href=\"#wq\">wq</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sock\">sock</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wq\">wq</a> = <a class=\"id\" href=\"#rcu_dereference\">rcu_dereference</a>(<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#wq\">wq</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#wq\">wq</a> || !<a class=\"id\" href=\"#wq\">wq</a>-><a class=\"id\" href=\"#fasync_list\">fasync_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#how\">how</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SOCK_WAKE_WAITD\">SOCK_WAKE_WAITD</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#SOCK_ASYNC_WAITDATA\">SOCK_ASYNC_WAITDATA</a>, &amp;<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#flags\">flags</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#call_kill\">call_kill</a>;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SOCK_WAKE_SPACE\">SOCK_WAKE_SPACE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_and_clear_bit\">test_and_clear_bit</a>(<a class=\"id\" href=\"#SOCK_ASYNC_NOSPACE\">SOCK_ASYNC_NOSPACE</a>, &amp;<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#flags\">flags</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fall through */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SOCK_WAKE_IO\">SOCK_WAKE_IO</a>:", 
"<a class=\"id\" href=\"#call_kill\">call_kill</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kill_fasync\">kill_fasync</a>(&amp;<a class=\"id\" href=\"#wq\">wq</a>-><a class=\"id\" href=\"#fasync_list\">fasync_list</a>, <a class=\"id\" href=\"#SIGIO\">SIGIO</a>, <a class=\"id\" href=\"#band\">band</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SOCK_WAKE_URG\">SOCK_WAKE_URG</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kill_fasync\">kill_fasync</a>(&amp;<a class=\"id\" href=\"#wq\">wq</a>-><a class=\"id\" href=\"#fasync_list\">fasync_list</a>, <a class=\"id\" href=\"#SIGURG\">SIGURG</a>, <a class=\"id\" href=\"#band\">band</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#sock_wake_async\">sock_wake_async</a>);", 
"", 
"static int <a class=\"id\" href=\"#__sock_create\">__sock_create</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, int <a class=\"id\" href=\"#family\">family</a>, int <a class=\"id\" href=\"#type\">type</a>, int <a class=\"id\" href=\"#protocol\">protocol</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#socket\">socket</a> **<a class=\"id\" href=\"#res\">res</a>, int <a class=\"id\" href=\"#kern\">kern</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#net_proto_family\">net_proto_family</a> *<a class=\"id\" href=\"#pf\">pf</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *      Check protocol is in range</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#family\">family</a> &lt; 0 || <a class=\"id\" href=\"#family\">family</a> >= <a class=\"id\" href=\"#NPROTO\">NPROTO</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EAFNOSUPPORT\">EAFNOSUPPORT</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> &lt; 0 || <a class=\"id\" href=\"#type\">type</a> >= <a class=\"id\" href=\"#SOCK_MAX\">SOCK_MAX</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Compatibility.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\"><span class=\"ts\"/>   This uglymoron is moved from INET layer to here to avoid</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   deadlock in module load.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#family\">family</a> == <a class=\"id\" href=\"#PF_INET\">PF_INET</a> && <a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#SOCK_PACKET\">SOCK_PACKET</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>static int <a class=\"id\" href=\"#warned\">warned</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#warned\">warned</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#warned\">warned</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"%s uses obsolete (PF_INET,SOCK_PACKET)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#comm\">comm</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#family\">family</a> = <a class=\"id\" href=\"#PF_PACKET\">PF_PACKET</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#security_socket_create\">security_socket_create</a>(<a class=\"id\" href=\"#family\">family</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#protocol\">protocol</a>, <a class=\"id\" href=\"#kern\">kern</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Allocate the socket and allow the family to set things up. if</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>the protocol is 0, the family is instructed to select an appropriate</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>default.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock\">sock</a> = <a class=\"id\" href=\"#sock_alloc\">sock_alloc</a>();", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sock\">sock</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#net_ratelimit\">net_ratelimit</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"socket: no more sockets\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENFILE\">ENFILE</a>;<span class=\"ts\"/><span class=\"comment\">/* Not exactly a match, but its the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   closest posix thing */</span>", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#type\">type</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_MODULES\">CONFIG_MODULES</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* Attempt to load a protocol module if the find failed.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 12/09/1996 Marcin: But! this makes REALLY only sense, if the user</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * requested real, full-featured networking support upon configuration.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Otherwise module support will break!</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#net_families\">net_families</a>[<a class=\"id\" href=\"#family\">family</a>] == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#request_module\">request_module</a>(\"net-pf-%d\", <a class=\"id\" href=\"#family\">family</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pf\">pf</a> = <a class=\"id\" href=\"#rcu_dereference\">rcu_dereference</a>(<a class=\"id\" href=\"#net_families\">net_families</a>[<a class=\"id\" href=\"#family\">family</a>]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EAFNOSUPPORT\">EAFNOSUPPORT</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pf\">pf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_release\">out_release</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We will call the -&gt;create function, that possibly is in a loadable</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * module, so we have to bump that loadable module refcnt first.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#try_module_get\">try_module_get</a>(<a class=\"id\" href=\"#pf\">pf</a>-><a class=\"id\" href=\"#owner\">owner</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_release\">out_release</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Now protected by module ref count */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#pf\">pf</a>-><a class=\"id\" href=\"#create\">create</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#sock\">sock</a>, <a class=\"id\" href=\"#protocol\">protocol</a>, <a class=\"id\" href=\"#kern\">kern</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_module_put\">out_module_put</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Now to bump the refcnt of the [loadable] module that owns this</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * socket at sock_release time we decrement its refcnt.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#try_module_get\">try_module_get</a>(<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#owner\">owner</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_module_busy\">out_module_busy</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Now that we're done with the -&gt;create function, the [loadable]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * module can have its refcnt decremented</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#pf\">pf</a>-><a class=\"id\" href=\"#owner\">owner</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#security_socket_post_create\">security_socket_post_create</a>(<a class=\"id\" href=\"#sock\">sock</a>, <a class=\"id\" href=\"#family\">family</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#protocol\">protocol</a>, <a class=\"id\" href=\"#kern\">kern</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_sock_release\">out_sock_release</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#sock\">sock</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#out_module_busy\">out_module_busy</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EAFNOSUPPORT\">EAFNOSUPPORT</a>;", 
"<a class=\"id\" href=\"#out_module_put\">out_module_put</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#pf\">pf</a>-><a class=\"id\" href=\"#owner\">owner</a>);", 
"<a class=\"id\" href=\"#out_sock_release\">out_sock_release</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_release\">sock_release</a>(<a class=\"id\" href=\"#sock\">sock</a>);", 
];
xr_frag_insert('l/77/532c268a3815fa2174f1b84c294d1f997f8530.xr', __xr_tmp);
