var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Memory merging support.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This code enables dynamic sharing of identical pages found in different</span>", 
"<span class=\"comment\"> * memory areas, even if they are not shared by fork()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2008-2009 Red Hat, Inc.</span>", 
"<span class=\"comment\"> * Authors:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Izik Eidus</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Andrea Arcangeli</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Chris Wright</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Hugh Dickins</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This work is licensed under the terms of the GNU GPL, version 2.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mman\">mman</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rwsem\">rwsem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pagemap\">pagemap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rmap\">rmap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jhash\">jhash</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kthread\">kthread</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#wait\">wait</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rbtree\">rbtree</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#memory\">memory</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mmu_notifier\">mmu_notifier</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#swap\">swap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ksm\">ksm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#hash\">hash</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#tlbflush\">tlbflush</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"internal.h\"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * A few notes about the KSM scanning process,</span>", 
"<span class=\"comment\"> * to make it easier to understand the data structures below:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * In order to reduce excessive scanning, KSM sorts the memory pages by their</span>", 
"<span class=\"comment\"> * contents into a data structure that holds pointers to the pages' locations.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Since the contents of the pages may change at any moment, KSM cannot just</span>", 
"<span class=\"comment\"> * insert the pages into a normal sorted tree and expect it to find anything.</span>", 
"<span class=\"comment\"> * Therefore KSM uses two data structures - the stable and the unstable tree.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The stable tree holds pointers to all the merged pages (ksm pages), sorted</span>", 
"<span class=\"comment\"> * by their contents.  Because each such page is write-protected, searching on</span>", 
"<span class=\"comment\"> * this tree is fully assured to be working (except when pages are unmapped),</span>", 
"<span class=\"comment\"> * and therefore this tree is called the stable tree.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * In addition to the stable tree, KSM uses a second data structure called the</span>", 
"<span class=\"comment\"> * unstable tree: this tree holds pointers to pages which have been found to</span>", 
"<span class=\"comment\"> * be \"unchanged for a period of time\".  The unstable tree sorts these pages</span>", 
"<span class=\"comment\"> * by their contents, but since they are not write-protected, KSM cannot rely</span>", 
"<span class=\"comment\"> * upon the unstable tree to work correctly - the unstable tree is liable to</span>", 
"<span class=\"comment\"> * be corrupted as its contents are modified, and so it is called unstable.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * KSM solves this problem by several techniques:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * 1) The unstable tree is flushed every time KSM completes scanning all</span>", 
"<span class=\"comment\"> *    memory areas, and then the tree is rebuilt again from the beginning.</span>", 
"<span class=\"comment\"> * 2) KSM will only insert into the unstable tree, pages whose hash value</span>", 
"<span class=\"comment\"> *    has not changed since the previous scan of all memory areas.</span>", 
"<span class=\"comment\"> * 3) The unstable tree is a RedBlack Tree - so its balancing is based on the</span>", 
"<span class=\"comment\"> *    colors of the nodes and not on their contents, assuring that even when</span>", 
"<span class=\"comment\"> *    the tree gets \"corrupted\" it won't get out of balance, so scanning time</span>", 
"<span class=\"comment\"> *    remains the same (also, searching and inserting nodes in an rbtree uses</span>", 
"<span class=\"comment\"> *    the same algorithm, so we have no overhead when we flush and rebuild).</span>", 
];
xr_frag_insert('l/77/923ee6ff79f55464395766dcd946b87253f4f3.xr', __xr_tmp);
