var __xr_tmp = [
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#zutil\">zutil</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#vmalloc\">vmalloc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* Utility function: initialize zlib, unpack binary blob, clean up zlib,</span>", 
"<span class=\"comment\"> * return len or negative error code.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#zlib_inflate_blob\">zlib_inflate_blob</a>(void *<a class=\"id\" href=\"#gunzip_buf\">gunzip_buf</a>, unsigned int <a class=\"id\" href=\"#sz\">sz</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      const void *<a class=\"id\" href=\"#buf\">buf</a>, unsigned int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#zbuf\">zbuf</a> = <a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#z_stream_s\">z_stream_s</a> *<a class=\"id\" href=\"#strm\">strm</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#strm\">strm</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#strm\">strm</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#strm\">strm</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#gunzip_nomem1\">gunzip_nomem1</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#strm\">strm</a>-><a class=\"id\" href=\"#workspace\">workspace</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#zlib_inflate_workspacesize\">zlib_inflate_workspacesize</a>(), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#strm\">strm</a>-><a class=\"id\" href=\"#workspace\">workspace</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#gunzip_nomem2\">gunzip_nomem2</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* gzip header (1f,8b,08... 10 bytes total + possible asciz filename)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * expected to be stripped from input</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#strm\">strm</a>-><a class=\"id\" href=\"#next_in\">next_in</a> = <a class=\"id\" href=\"#zbuf\">zbuf</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#strm\">strm</a>-><a class=\"id\" href=\"#avail_in\">avail_in</a> = <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#strm\">strm</a>-><a class=\"id\" href=\"#next_out\">next_out</a> = <a class=\"id\" href=\"#gunzip_buf\">gunzip_buf</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#strm\">strm</a>-><a class=\"id\" href=\"#avail_out\">avail_out</a> = <a class=\"id\" href=\"#sz\">sz</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#zlib_inflateInit2\">zlib_inflateInit2</a>(<a class=\"id\" href=\"#strm\">strm</a>, -<a class=\"id\" href=\"#MAX_WBITS\">MAX_WBITS</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> == <a class=\"id\" href=\"#Z_OK\">Z_OK</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#zlib_inflate\">zlib_inflate</a>(<a class=\"id\" href=\"#strm\">strm</a>, <a class=\"id\" href=\"#Z_FINISH\">Z_FINISH</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* after Z_FINISH, only Z_STREAM_END is \"we unpacked it all\" */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> == <a class=\"id\" href=\"#Z_STREAM_END\">Z_STREAM_END</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sz\">sz</a> - <a class=\"id\" href=\"#strm\">strm</a>-><a class=\"id\" href=\"#avail_out\">avail_out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#zlib_inflateEnd\">zlib_inflateEnd</a>(<a class=\"id\" href=\"#strm\">strm</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#strm\">strm</a>-><a class=\"id\" href=\"#workspace\">workspace</a>);", 
"<a class=\"id\" href=\"#gunzip_nomem2\">gunzip_nomem2</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#strm\">strm</a>);", 
"<a class=\"id\" href=\"#gunzip_nomem1\">gunzip_nomem1</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>; <span class=\"comment\">/* returns Z_OK (0) if successful */</span>", 
"}", 
];
xr_frag_insert('l/77/cd5e67e47bf2931da99c9cf0d5ef3d598213a1.xr', __xr_tmp);
