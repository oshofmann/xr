var __xr_tmp = [
"<span class=\"comment\">/* request_key_auth.c: request key authorisation controlling key def</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2005 Red Hat, Inc. All Rights Reserved.</span>", 
"<span class=\"comment\"> * Written by David Howells (dhowells@redhat.com)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> * modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> * as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> * 2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * See Documentation/keys-request-key.txt</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#err\">err</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"internal.h\"", 
"", 
"static int <a class=\"id\" href=\"#request_key_auth_instantiate\">request_key_auth_instantiate</a>(struct <a class=\"id\" href=\"#key\">key</a> *, const void *, <a class=\"id\" href=\"#size_t\">size_t</a>);", 
"static void <a class=\"id\" href=\"#request_key_auth_describe\">request_key_auth_describe</a>(const struct <a class=\"id\" href=\"#key\">key</a> *, struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *);", 
"static void <a class=\"id\" href=\"#request_key_auth_revoke\">request_key_auth_revoke</a>(struct <a class=\"id\" href=\"#key\">key</a> *);", 
"static void <a class=\"id\" href=\"#request_key_auth_destroy\">request_key_auth_destroy</a>(struct <a class=\"id\" href=\"#key\">key</a> *);", 
"static long <a class=\"id\" href=\"#request_key_auth_read\">request_key_auth_read</a>(const struct <a class=\"id\" href=\"#key\">key</a> *, char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#size_t\">size_t</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * the request-key authorisation key type definition</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#key_type\">key_type</a> <a class=\"id\" href=\"#key_type_request_key_auth\">key_type_request_key_auth</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= \".request_key_auth\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#def_datalen\">def_datalen</a><span class=\"ts\"/>= sizeof(struct <a class=\"id\" href=\"#request_key_auth\">request_key_auth</a>),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#instantiate\">instantiate</a><span class=\"ts\"/>= <a class=\"id\" href=\"#request_key_auth_instantiate\">request_key_auth_instantiate</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#describe\">describe</a><span class=\"ts\"/>= <a class=\"id\" href=\"#request_key_auth_describe\">request_key_auth_describe</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#revoke\">revoke</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#request_key_auth_revoke\">request_key_auth_revoke</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#destroy\">destroy</a><span class=\"ts\"/>= <a class=\"id\" href=\"#request_key_auth_destroy\">request_key_auth_destroy</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#request_key_auth_read\">request_key_auth_read</a>,", 
"};", 
"", 
"<span class=\"comment\">/*****************************************************************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * instantiate a request-key authorisation key</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#request_key_auth_instantiate\">request_key_auth_instantiate</a>(struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key\">key</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const void *<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#datalen\">datalen</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#payload\">payload</a>.<a class=\"id\" href=\"#data\">data</a> = (struct <a class=\"id\" href=\"#request_key_auth\">request_key_auth</a> *) <a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>return 0;", 
"", 
"} <span class=\"comment\">/* end request_key_auth_instantiate() */</span>", 
"", 
"<span class=\"comment\">/*****************************************************************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * reading a request-key authorisation key retrieves the callout information</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#request_key_auth_describe\">request_key_auth_describe</a>(const struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key\">key</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_key_auth\">request_key_auth</a> *<a class=\"id\" href=\"#rka\">rka</a> = <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#payload\">payload</a>.<a class=\"id\" href=\"#data\">data</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#m\">m</a>, \"key:\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#description\">description</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \" pid:%d ci:%zu\", <a class=\"id\" href=\"#rka\">rka</a>-><a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#rka\">rka</a>-><a class=\"id\" href=\"#callout_len\">callout_len</a>);", 
"", 
"} <span class=\"comment\">/* end request_key_auth_describe() */</span>", 
"", 
"<span class=\"comment\">/*****************************************************************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * read the callout_info data</span>", 
"<span class=\"comment\"> * - the key's semaphore is read-locked</span>", 
"<span class=\"comment\"> */</span>", 
"static long <a class=\"id\" href=\"#request_key_auth_read\">request_key_auth_read</a>(const struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key\">key</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#buflen\">buflen</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_key_auth\">request_key_auth</a> *<a class=\"id\" href=\"#rka\">rka</a> = <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#payload\">payload</a>.<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#datalen\">datalen</a>;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#datalen\">datalen</a> = <a class=\"id\" href=\"#rka\">rka</a>-><a class=\"id\" href=\"#callout_len\">callout_len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#datalen\">datalen</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* we can return the data as is */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#buffer\">buffer</a> && <a class=\"id\" href=\"#buflen\">buflen</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#buflen\">buflen</a> &gt; <a class=\"id\" href=\"#datalen\">datalen</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buflen\">buflen</a> = <a class=\"id\" href=\"#datalen\">datalen</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#rka\">rka</a>-><a class=\"id\" href=\"#callout_info\">callout_info</a>, <a class=\"id\" href=\"#buflen\">buflen</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"} <span class=\"comment\">/* end request_key_auth_read() */</span>", 
"", 
"<span class=\"comment\">/*****************************************************************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * handle revocation of an authorisation token key</span>", 
"<span class=\"comment\"> * - called with the key sem write-locked</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#request_key_auth_revoke\">request_key_auth_revoke</a>(struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key\">key</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_key_auth\">request_key_auth</a> *<a class=\"id\" href=\"#rka\">rka</a> = <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#payload\">payload</a>.<a class=\"id\" href=\"#data\">data</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kenter\">kenter</a>(\"{%d}\", <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#serial\">serial</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rka\">rka</a>-><a class=\"id\" href=\"#cred\">cred</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_cred\">put_cred</a>(<a class=\"id\" href=\"#rka\">rka</a>-><a class=\"id\" href=\"#cred\">cred</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rka\">rka</a>-><a class=\"id\" href=\"#cred\">cred</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"} <span class=\"comment\">/* end request_key_auth_revoke() */</span>", 
"", 
"<span class=\"comment\">/*****************************************************************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * destroy an instantiation authorisation token key</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#request_key_auth_destroy\">request_key_auth_destroy</a>(struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key\">key</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_key_auth\">request_key_auth</a> *<a class=\"id\" href=\"#rka\">rka</a> = <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#payload\">payload</a>.<a class=\"id\" href=\"#data\">data</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kenter\">kenter</a>(\"{%d}\", <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#serial\">serial</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rka\">rka</a>-><a class=\"id\" href=\"#cred\">cred</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_cred\">put_cred</a>(<a class=\"id\" href=\"#rka\">rka</a>-><a class=\"id\" href=\"#cred\">cred</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rka\">rka</a>-><a class=\"id\" href=\"#cred\">cred</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_put\">key_put</a>(<a class=\"id\" href=\"#rka\">rka</a>-><a class=\"id\" href=\"#target_key\">target_key</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_put\">key_put</a>(<a class=\"id\" href=\"#rka\">rka</a>-><a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#rka\">rka</a>-><a class=\"id\" href=\"#callout_info\">callout_info</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#rka\">rka</a>);", 
"", 
"} <span class=\"comment\">/* end request_key_auth_destroy() */</span>", 
"", 
"<span class=\"comment\">/*****************************************************************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * create an authorisation token for /sbin/request-key or whoever to gain</span>", 
"<span class=\"comment\"> * access to the caller's security data</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#request_key_auth_new\">request_key_auth_new</a>(struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#target\">target</a>, const void *<a class=\"id\" href=\"#callout_info\">callout_info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#callout_len\">callout_len</a>, struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_key_auth\">request_key_auth</a> *<a class=\"id\" href=\"#rka\">rka</a>, *<a class=\"id\" href=\"#irka\">irka</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#cred\">cred</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#cred\">cred</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#authkey\">authkey</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#desc\">desc</a>[20];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kenter\">kenter</a>(\"%d,\", <a class=\"id\" href=\"#target\">target</a>-><a class=\"id\" href=\"#serial\">serial</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* allocate a auth record */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rka\">rka</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#rka\">rka</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rka\">rka</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kleave\">kleave</a>(\" = -ENOMEM\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rka\">rka</a>-><a class=\"id\" href=\"#callout_info\">callout_info</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#callout_len\">callout_len</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rka\">rka</a>-><a class=\"id\" href=\"#callout_info\">callout_info</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kleave\">kleave</a>(\" = -ENOMEM\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#rka\">rka</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* see if the calling process is already servicing the key request of</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * another process */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#request_key_auth\">request_key_auth</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* it is - use that instantiation context here too */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#request_key_auth\">request_key_auth</a>-><a class=\"id\" href=\"#sem\">sem</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* if the auth key has been revoked, then the key we're</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * servicing is already instantiated */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#KEY_FLAG_REVOKED\">KEY_FLAG_REVOKED</a>, &amp;<a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#request_key_auth\">request_key_auth</a>-><a class=\"id\" href=\"#flags\">flags</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#auth_key_revoked\">auth_key_revoked</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irka\">irka</a> = <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#request_key_auth\">request_key_auth</a>-><a class=\"id\" href=\"#payload\">payload</a>.<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rka\">rka</a>-><a class=\"id\" href=\"#cred\">cred</a> = <a class=\"id\" href=\"#get_cred\">get_cred</a>(<a class=\"id\" href=\"#irka\">irka</a>-><a class=\"id\" href=\"#cred\">cred</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rka\">rka</a>-><a class=\"id\" href=\"#pid\">pid</a> = <a class=\"id\" href=\"#irka\">irka</a>-><a class=\"id\" href=\"#pid\">pid</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#request_key_auth\">request_key_auth</a>-><a class=\"id\" href=\"#sem\">sem</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* it isn't - use this process as the context */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rka\">rka</a>-><a class=\"id\" href=\"#cred\">cred</a> = <a class=\"id\" href=\"#get_cred\">get_cred</a>(<a class=\"id\" href=\"#cred\">cred</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rka\">rka</a>-><a class=\"id\" href=\"#pid\">pid</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#pid\">pid</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rka\">rka</a>-><a class=\"id\" href=\"#target_key\">target_key</a> = <a class=\"id\" href=\"#key_get\">key_get</a>(<a class=\"id\" href=\"#target\">target</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rka\">rka</a>-><a class=\"id\" href=\"#dest_keyring\">dest_keyring</a> = <a class=\"id\" href=\"#key_get\">key_get</a>(<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#rka\">rka</a>-><a class=\"id\" href=\"#callout_info\">callout_info</a>, <a class=\"id\" href=\"#callout_info\">callout_info</a>, <a class=\"id\" href=\"#callout_len\">callout_len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rka\">rka</a>-><a class=\"id\" href=\"#callout_len\">callout_len</a> = <a class=\"id\" href=\"#callout_len\">callout_len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* allocate the auth key */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#desc\">desc</a>, \"%x\", <a class=\"id\" href=\"#target\">target</a>-><a class=\"id\" href=\"#serial\">serial</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#authkey\">authkey</a> = <a class=\"id\" href=\"#key_alloc\">key_alloc</a>(&amp;<a class=\"id\" href=\"#key_type_request_key_auth\">key_type_request_key_auth</a>, <a class=\"id\" href=\"#desc\">desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#fsuid\">fsuid</a>, <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#fsgid\">fsgid</a>, <a class=\"id\" href=\"#cred\">cred</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#KEY_POS_VIEW\">KEY_POS_VIEW</a> | <a class=\"id\" href=\"#KEY_POS_READ\">KEY_POS_READ</a> | <a class=\"id\" href=\"#KEY_POS_SEARCH\">KEY_POS_SEARCH</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#KEY_USR_VIEW\">KEY_USR_VIEW</a>, <a class=\"id\" href=\"#KEY_ALLOC_NOT_IN_QUOTA\">KEY_ALLOC_NOT_IN_QUOTA</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#authkey\">authkey</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#authkey\">authkey</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_alloc\">error_alloc</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* construct the auth key */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#key_instantiate_and_link\">key_instantiate_and_link</a>(<a class=\"id\" href=\"#authkey\">authkey</a>, <a class=\"id\" href=\"#rka\">rka</a>, 0, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_inst\">error_inst</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kleave\">kleave</a>(\" = {%d,%d}\", <a class=\"id\" href=\"#authkey\">authkey</a>-><a class=\"id\" href=\"#serial\">serial</a>, <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#authkey\">authkey</a>-><a class=\"id\" href=\"#usage\">usage</a>));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#authkey\">authkey</a>;", 
"", 
"<a class=\"id\" href=\"#auth_key_revoked\">auth_key_revoked</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#request_key_auth\">request_key_auth</a>-><a class=\"id\" href=\"#sem\">sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#rka\">rka</a>-><a class=\"id\" href=\"#callout_info\">callout_info</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#rka\">rka</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kleave\">kleave</a>(\"= -EKEYREVOKED\");", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EKEYREVOKED\">EKEYREVOKED</a>);", 
"", 
"<a class=\"id\" href=\"#error_inst\">error_inst</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_revoke\">key_revoke</a>(<a class=\"id\" href=\"#authkey\">authkey</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_put\">key_put</a>(<a class=\"id\" href=\"#authkey\">authkey</a>);", 
"<a class=\"id\" href=\"#error_alloc\">error_alloc</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_put\">key_put</a>(<a class=\"id\" href=\"#rka\">rka</a>-><a class=\"id\" href=\"#target_key\">target_key</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_put\">key_put</a>(<a class=\"id\" href=\"#rka\">rka</a>-><a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#rka\">rka</a>-><a class=\"id\" href=\"#callout_info\">callout_info</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#rka\">rka</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kleave\">kleave</a>(\"= %d\", <a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#ret\">ret</a>);", 
"", 
"} <span class=\"comment\">/* end request_key_auth_new() */</span>", 
"", 
"<span class=\"comment\">/*****************************************************************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * see if an authorisation key is associated with a particular key</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#key_get_instantiation_authkey_match\">key_get_instantiation_authkey_match</a>(const struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key\">key</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       const void *<a class=\"id\" href=\"#_id\">_id</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_key_auth\">request_key_auth</a> *<a class=\"id\" href=\"#rka\">rka</a> = <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#payload\">payload</a>.<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_serial_t\">key_serial_t</a> <a class=\"id\" href=\"#id\">id</a> = (<a class=\"id\" href=\"#key_serial_t\">key_serial_t</a>)(unsigned long) <a class=\"id\" href=\"#_id\">_id</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rka\">rka</a>-><a class=\"id\" href=\"#target_key\">target_key</a>-><a class=\"id\" href=\"#serial\">serial</a> == <a class=\"id\" href=\"#id\">id</a>;", 
"", 
"} <span class=\"comment\">/* end key_get_instantiation_authkey_match() */</span>", 
"", 
"<span class=\"comment\">/*****************************************************************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * get the authorisation key for instantiation of a specific key if attached to</span>", 
"<span class=\"comment\"> * the current process's keyrings</span>", 
"<span class=\"comment\"> * - this key is inserted into a keyring and that is set as /sbin/request-key's</span>", 
"<span class=\"comment\"> *   session keyring</span>", 
"<span class=\"comment\"> * - a target_id of zero specifies any valid token</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key_get_instantiation_authkey\">key_get_instantiation_authkey</a>(<a class=\"id\" href=\"#key_serial_t\">key_serial_t</a> <a class=\"id\" href=\"#target_id\">target_id</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#cred\">cred</a> = <a class=\"id\" href=\"#current_cred\">current_cred</a>();", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#authkey\">authkey</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref_t\">key_ref_t</a> <a class=\"id\" href=\"#authkey_ref\">authkey_ref</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#authkey_ref\">authkey_ref</a> = <a class=\"id\" href=\"#search_process_keyrings\">search_process_keyrings</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#key_type_request_key_auth\">key_type_request_key_auth</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>(void *) (unsigned long) <a class=\"id\" href=\"#target_id\">target_id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key_get_instantiation_authkey_match\">key_get_instantiation_authkey_match</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cred\">cred</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#authkey_ref\">authkey_ref</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#authkey\">authkey</a> = <a class=\"id\" href=\"#ERR_CAST\">ERR_CAST</a>(<a class=\"id\" href=\"#authkey_ref\">authkey_ref</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#authkey\">authkey</a> = <a class=\"id\" href=\"#key_ref_to_ptr\">key_ref_to_ptr</a>(<a class=\"id\" href=\"#authkey_ref\">authkey_ref</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#KEY_FLAG_REVOKED\">KEY_FLAG_REVOKED</a>, &amp;<a class=\"id\" href=\"#authkey\">authkey</a>-><a class=\"id\" href=\"#flags\">flags</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key_put\">key_put</a>(<a class=\"id\" href=\"#authkey\">authkey</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#authkey\">authkey</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EKEYREVOKED\">EKEYREVOKED</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#authkey\">authkey</a>;", 
"", 
"} <span class=\"comment\">/* end key_get_instantiation_authkey() */</span>", 
];
xr_frag_insert('l/77/d84af3c4a772bec238f35616b0eabef3eb953c.xr', __xr_tmp);
