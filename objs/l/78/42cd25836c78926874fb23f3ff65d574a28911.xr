var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Neighbour Discovery for IPv6</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Linux INET6 implementation</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Authors:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Pedro Roque<span class=\"ts\"/><span class=\"ts\"/>&lt;roque@di.fc.ul.pt&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Mike Shaver<span class=\"ts\"/><span class=\"ts\"/>&lt;shaver@ingenia.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *      modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *      as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *      2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Changes:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Pierre Ynard<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>:<span class=\"ts\"/>export userland ND options</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>through netlink (RDNSS support)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Lars Fenneberg<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>:<span class=\"ts\"/>fixed MTU setting on receipt</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>of an RA.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Janos Farkas<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>:<span class=\"ts\"/>kmalloc failure checks</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Alexey Kuznetsov<span class=\"ts\"/><span class=\"ts\"/>:<span class=\"ts\"/>state machine reworked</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>and moved to net/core.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Pekka Savola<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>:<span class=\"ts\"/>RFC2461 validation</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>YOSHIFUJI Hideaki @USAGI<span class=\"ts\"/>:<span class=\"ts\"/>Verify ND options properly</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/* Set to 3 to get tracing... */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ND_DEBUG\">ND_DEBUG</a> 1", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ND_PRINTK\">ND_PRINTK</a>(<a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#args\">args</a>...) do { if (<a class=\"id\" href=\"#net_ratelimit\">net_ratelimit</a>()) { <a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#fmt\">fmt</a>, ## <a class=\"id\" href=\"#args\">args</a>); } } while(0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ND_NOPRINTK\">ND_NOPRINTK</a>(<a class=\"id\" href=\"#x\">x</a>...) do { ; } while(0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ND_PRINTK0\">ND_PRINTK0</a> <a class=\"id\" href=\"#ND_PRINTK\">ND_PRINTK</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ND_PRINTK1\">ND_PRINTK1</a> <a class=\"id\" href=\"#ND_NOPRINTK\">ND_NOPRINTK</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ND_PRINTK2\">ND_PRINTK2</a> <a class=\"id\" href=\"#ND_NOPRINTK\">ND_NOPRINTK</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ND_PRINTK3\">ND_PRINTK3</a> <a class=\"id\" href=\"#ND_NOPRINTK\">ND_NOPRINTK</a>", 
"#if <a class=\"id\" href=\"#ND_DEBUG\">ND_DEBUG</a> >= 1", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#ND_PRINTK1\">ND_PRINTK1</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ND_PRINTK1\">ND_PRINTK1</a> <a class=\"id\" href=\"#ND_PRINTK\">ND_PRINTK</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#if <a class=\"id\" href=\"#ND_DEBUG\">ND_DEBUG</a> >= 2", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#ND_PRINTK2\">ND_PRINTK2</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ND_PRINTK2\">ND_PRINTK2</a> <a class=\"id\" href=\"#ND_PRINTK\">ND_PRINTK</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#if <a class=\"id\" href=\"#ND_DEBUG\">ND_DEBUG</a> >= 3", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#ND_PRINTK3\">ND_PRINTK3</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ND_PRINTK3\">ND_PRINTK3</a> <a class=\"id\" href=\"#ND_PRINTK\">ND_PRINTK</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sockios\">sockios</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#in6\">in6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#route\">route</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rcupdate\">rcupdate</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYSCTL\">CONFIG_SYSCTL</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sysctl\">sysctl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#if_addr\">if_addr</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#if_arp\">if_arp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#icmpv6\">icmpv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jhash\">jhash</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#sock\">sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#snmp\">snmp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#protocol\">protocol</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ndisc\">ndisc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip6_route\">ip6_route</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#addrconf\">addrconf</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#icmp\">icmp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#netlink\">netlink</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rtnetlink\">rtnetlink</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#flow\">flow</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip6_checksum\">ip6_checksum</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#inet_common\">inet_common</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netfilter\">netfilter</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netfilter_ipv6\">netfilter_ipv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ndisc_hash\">ndisc_hash</a>(const void *<a class=\"id\" href=\"#pkey\">pkey</a>, const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"static int <a class=\"id\" href=\"#ndisc_constructor\">ndisc_constructor</a>(struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#neigh\">neigh</a>);", 
"static void <a class=\"id\" href=\"#ndisc_solicit\">ndisc_solicit</a>(struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#neigh\">neigh</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"static void <a class=\"id\" href=\"#ndisc_error_report\">ndisc_error_report</a>(struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#neigh\">neigh</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"static int <a class=\"id\" href=\"#pndisc_constructor\">pndisc_constructor</a>(struct <a class=\"id\" href=\"#pneigh_entry\">pneigh_entry</a> *<a class=\"id\" href=\"#n\">n</a>);", 
"static void <a class=\"id\" href=\"#pndisc_destructor\">pndisc_destructor</a>(struct <a class=\"id\" href=\"#pneigh_entry\">pneigh_entry</a> *<a class=\"id\" href=\"#n\">n</a>);", 
"static void <a class=\"id\" href=\"#pndisc_redo\">pndisc_redo</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"static const struct <a class=\"id\" href=\"#neigh_ops\">neigh_ops</a> <a class=\"id\" href=\"#ndisc_generic_ops\">ndisc_generic_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#family\">family</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#AF_INET6\">AF_INET6</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#solicit\">solicit</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ndisc_solicit\">ndisc_solicit</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#error_report\">error_report</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ndisc_error_report\">ndisc_error_report</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#output\">output</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh_resolve_output\">neigh_resolve_output</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#connected_output\">connected_output</a> =<span class=\"ts\"/><a class=\"id\" href=\"#neigh_connected_output\">neigh_connected_output</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#hh_output\">hh_output</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_queue_xmit\">dev_queue_xmit</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#queue_xmit\">queue_xmit</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_queue_xmit\">dev_queue_xmit</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#neigh_ops\">neigh_ops</a> <a class=\"id\" href=\"#ndisc_hh_ops\">ndisc_hh_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#family\">family</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#AF_INET6\">AF_INET6</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#solicit\">solicit</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ndisc_solicit\">ndisc_solicit</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#error_report\">error_report</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ndisc_error_report\">ndisc_error_report</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#output\">output</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh_resolve_output\">neigh_resolve_output</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#connected_output\">connected_output</a> =<span class=\"ts\"/><a class=\"id\" href=\"#neigh_resolve_output\">neigh_resolve_output</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#hh_output\">hh_output</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_queue_xmit\">dev_queue_xmit</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#queue_xmit\">queue_xmit</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_queue_xmit\">dev_queue_xmit</a>,", 
"};", 
"", 
"", 
"static const struct <a class=\"id\" href=\"#neigh_ops\">neigh_ops</a> <a class=\"id\" href=\"#ndisc_direct_ops\">ndisc_direct_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#family\">family</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#AF_INET6\">AF_INET6</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#output\">output</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_queue_xmit\">dev_queue_xmit</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#connected_output\">connected_output</a> =<span class=\"ts\"/><a class=\"id\" href=\"#dev_queue_xmit\">dev_queue_xmit</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#hh_output\">hh_output</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_queue_xmit\">dev_queue_xmit</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#queue_xmit\">queue_xmit</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_queue_xmit\">dev_queue_xmit</a>,", 
"};", 
"", 
"struct <a class=\"id\" href=\"#neigh_table\">neigh_table</a> <a class=\"id\" href=\"#nd_tbl\">nd_tbl</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#family\">family</a> =<span class=\"ts\"/><a class=\"id\" href=\"#AF_INET6\">AF_INET6</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#entry_size\">entry_size</a> =<span class=\"ts\"/>sizeof(struct <a class=\"id\" href=\"#neighbour\">neighbour</a>) + sizeof(struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a>),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#key_len\">key_len</a> =<span class=\"ts\"/>sizeof(struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a>),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#hash\">hash</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ndisc_hash\">ndisc_hash</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#constructor\">constructor</a> =<span class=\"ts\"/><a class=\"id\" href=\"#ndisc_constructor\">ndisc_constructor</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#pconstructor\">pconstructor</a> =<span class=\"ts\"/><a class=\"id\" href=\"#pndisc_constructor\">pndisc_constructor</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#pdestructor\">pdestructor</a> =<span class=\"ts\"/><a class=\"id\" href=\"#pndisc_destructor\">pndisc_destructor</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#proxy_redo\">proxy_redo</a> =<span class=\"ts\"/><a class=\"id\" href=\"#pndisc_redo\">pndisc_redo</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#id\">id</a> =<span class=\"ts\"/><span class=\"ts\"/>\"ndisc_cache\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#parms\">parms</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#tbl\">tbl</a> =<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#nd_tbl\">nd_tbl</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#base_reachable_time\">base_reachable_time</a> =<span class=\"ts\"/>30 * <a class=\"id\" href=\"#HZ\">HZ</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#retrans_time\">retrans_time</a> =<span class=\"ts\"/> 1 * <a class=\"id\" href=\"#HZ\">HZ</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#gc_staletime\">gc_staletime</a> =<span class=\"ts\"/>60 * <a class=\"id\" href=\"#HZ\">HZ</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#reachable_time\">reachable_time</a> =<span class=\"ts\"/><span class=\"ts\"/>30 * <a class=\"id\" href=\"#HZ\">HZ</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#delay_probe_time\">delay_probe_time</a> =<span class=\"ts\"/> 5 * <a class=\"id\" href=\"#HZ\">HZ</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#queue_len\">queue_len</a> =<span class=\"ts\"/><span class=\"ts\"/> 3,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ucast_probes\">ucast_probes</a> =<span class=\"ts\"/> 3,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#mcast_probes\">mcast_probes</a> =<span class=\"ts\"/> 3,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#anycast_delay\">anycast_delay</a> =<span class=\"ts\"/> 1 * <a class=\"id\" href=\"#HZ\">HZ</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#proxy_delay\">proxy_delay</a> =<span class=\"ts\"/><span class=\"ts\"/>(8 * <a class=\"id\" href=\"#HZ\">HZ</a>) / 10,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#proxy_qlen\">proxy_qlen</a> =<span class=\"ts\"/><span class=\"ts\"/>64,", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#gc_interval\">gc_interval</a> =<span class=\"ts\"/>  30 * <a class=\"id\" href=\"#HZ\">HZ</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#gc_thresh1\">gc_thresh1</a> =<span class=\"ts\"/> 128,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#gc_thresh2\">gc_thresh2</a> =<span class=\"ts\"/> 512,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#gc_thresh3\">gc_thresh3</a> =<span class=\"ts\"/>1024,", 
"};", 
"", 
"<span class=\"comment\">/* ND options */</span>", 
"struct <a class=\"id\" href=\"#ndisc_options\">ndisc_options</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nd_opt_hdr\">nd_opt_hdr</a> *<a class=\"id\" href=\"#nd_opt_array\">nd_opt_array</a>[<a class=\"id\" href=\"#__ND_OPT_ARRAY_MAX\">__ND_OPT_ARRAY_MAX</a>];", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_ROUTE_INFO\">CONFIG_IPV6_ROUTE_INFO</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nd_opt_hdr\">nd_opt_hdr</a> *<a class=\"id\" href=\"#nd_opts_ri\">nd_opts_ri</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nd_opt_hdr\">nd_opt_hdr</a> *<a class=\"id\" href=\"#nd_opts_ri_end\">nd_opts_ri_end</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nd_opt_hdr\">nd_opt_hdr</a> *<a class=\"id\" href=\"#nd_useropts\">nd_useropts</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nd_opt_hdr\">nd_opt_hdr</a> *<a class=\"id\" href=\"#nd_useropts_end\">nd_useropts_end</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#nd_opts_src_lladdr\">nd_opts_src_lladdr</a><span class=\"ts\"/><a class=\"id\" href=\"#nd_opt_array\">nd_opt_array</a>[<a class=\"id\" href=\"#ND_OPT_SOURCE_LL_ADDR\">ND_OPT_SOURCE_LL_ADDR</a>]", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#nd_opts_tgt_lladdr\">nd_opts_tgt_lladdr</a><span class=\"ts\"/><a class=\"id\" href=\"#nd_opt_array\">nd_opt_array</a>[<a class=\"id\" href=\"#ND_OPT_TARGET_LL_ADDR\">ND_OPT_TARGET_LL_ADDR</a>]", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#nd_opts_pi\">nd_opts_pi</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nd_opt_array\">nd_opt_array</a>[<a class=\"id\" href=\"#ND_OPT_PREFIX_INFO\">ND_OPT_PREFIX_INFO</a>]", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#nd_opts_pi_end\">nd_opts_pi_end</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nd_opt_array\">nd_opt_array</a>[<a class=\"id\" href=\"#__ND_OPT_PREFIX_INFO_END\">__ND_OPT_PREFIX_INFO_END</a>]", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#nd_opts_rh\">nd_opts_rh</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nd_opt_array\">nd_opt_array</a>[<a class=\"id\" href=\"#ND_OPT_REDIRECT_HDR\">ND_OPT_REDIRECT_HDR</a>]", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#nd_opts_mtu\">nd_opts_mtu</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nd_opt_array\">nd_opt_array</a>[<a class=\"id\" href=\"#ND_OPT_MTU\">ND_OPT_MTU</a>]", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NDISC_OPT_SPACE\">NDISC_OPT_SPACE</a>(<a class=\"id\" href=\"#len\">len</a>) (((<a class=\"id\" href=\"#len\">len</a>)+2+7)&amp;~7)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Return the padding between the option length and the start of the</span>", 
"<span class=\"comment\"> * link addr.  Currently only IP-over-InfiniBand needs this, although</span>", 
"<span class=\"comment\"> * if RFC 3831 IPv6-over-Fibre Channel is ever implemented it may</span>", 
"<span class=\"comment\"> * also need a pad of 2.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ndisc_addr_option_pad\">ndisc_addr_option_pad</a>(unsigned short <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ARPHRD_INFINIBAND\">ARPHRD_INFINIBAND</a>: return 2;", 
"<span class=\"ts\"/>default:                return 0;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ndisc_opt_addr_space\">ndisc_opt_addr_space</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NDISC_OPT_SPACE\">NDISC_OPT_SPACE</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#addr_len\">addr_len</a> + <a class=\"id\" href=\"#ndisc_addr_option_pad\">ndisc_addr_option_pad</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#ndisc_fill_addr_option\">ndisc_fill_addr_option</a>(<a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#opt\">opt</a>, int <a class=\"id\" href=\"#type\">type</a>, void *<a class=\"id\" href=\"#data\">data</a>, int <a class=\"id\" href=\"#data_len\">data_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned short <a class=\"id\" href=\"#addr_type\">addr_type</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#space\">space</a> = <a class=\"id\" href=\"#NDISC_OPT_SPACE\">NDISC_OPT_SPACE</a>(<a class=\"id\" href=\"#data_len\">data_len</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#pad\">pad</a>   = <a class=\"id\" href=\"#ndisc_addr_option_pad\">ndisc_addr_option_pad</a>(<a class=\"id\" href=\"#addr_type\">addr_type</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#opt\">opt</a>[0] = <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#opt\">opt</a>[1] = <a class=\"id\" href=\"#space\">space</a>>>3;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#opt\">opt</a> + 2, 0, <a class=\"id\" href=\"#pad\">pad</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#opt\">opt</a>   += <a class=\"id\" href=\"#pad\">pad</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#space\">space</a> -= <a class=\"id\" href=\"#pad\">pad</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#opt\">opt</a>+2, <a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#data_len\">data_len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data_len\">data_len</a> += 2;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#opt\">opt</a> += <a class=\"id\" href=\"#data_len\">data_len</a>;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#space\">space</a> -= <a class=\"id\" href=\"#data_len\">data_len</a>) &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#opt\">opt</a>, 0, <a class=\"id\" href=\"#space\">space</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#opt\">opt</a> + <a class=\"id\" href=\"#space\">space</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#nd_opt_hdr\">nd_opt_hdr</a> *<a class=\"id\" href=\"#ndisc_next_option\">ndisc_next_option</a>(struct <a class=\"id\" href=\"#nd_opt_hdr\">nd_opt_hdr</a> *<a class=\"id\" href=\"#cur\">cur</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#nd_opt_hdr\">nd_opt_hdr</a> *<a class=\"id\" href=\"#end\">end</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cur\">cur</a> || !<a class=\"id\" href=\"#end\">end</a> || <a class=\"id\" href=\"#cur\">cur</a> >= <a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#nd_opt_type\">nd_opt_type</a>;", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cur\">cur</a> = ((void *)<a class=\"id\" href=\"#cur\">cur</a>) + (<a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#nd_opt_len\">nd_opt_len</a> << 3);", 
"<span class=\"ts\"/>} while(<a class=\"id\" href=\"#cur\">cur</a> &lt; <a class=\"id\" href=\"#end\">end</a> && <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#nd_opt_type\">nd_opt_type</a> != <a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#cur\">cur</a> <= <a class=\"id\" href=\"#end\">end</a> && <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#nd_opt_type\">nd_opt_type</a> == <a class=\"id\" href=\"#type\">type</a> ? <a class=\"id\" href=\"#cur\">cur</a> : <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ndisc_is_useropt\">ndisc_is_useropt</a>(struct <a class=\"id\" href=\"#nd_opt_hdr\">nd_opt_hdr</a> *<a class=\"id\" href=\"#opt\">opt</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#nd_opt_type\">nd_opt_type</a> == <a class=\"id\" href=\"#ND_OPT_RDNSS\">ND_OPT_RDNSS</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#nd_opt_hdr\">nd_opt_hdr</a> *<a class=\"id\" href=\"#ndisc_next_useropt\">ndisc_next_useropt</a>(struct <a class=\"id\" href=\"#nd_opt_hdr\">nd_opt_hdr</a> *<a class=\"id\" href=\"#cur\">cur</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#nd_opt_hdr\">nd_opt_hdr</a> *<a class=\"id\" href=\"#end\">end</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cur\">cur</a> || !<a class=\"id\" href=\"#end\">end</a> || <a class=\"id\" href=\"#cur\">cur</a> >= <a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cur\">cur</a> = ((void *)<a class=\"id\" href=\"#cur\">cur</a>) + (<a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#nd_opt_len\">nd_opt_len</a> << 3);", 
"<span class=\"ts\"/>} while(<a class=\"id\" href=\"#cur\">cur</a> &lt; <a class=\"id\" href=\"#end\">end</a> && !<a class=\"id\" href=\"#ndisc_is_useropt\">ndisc_is_useropt</a>(<a class=\"id\" href=\"#cur\">cur</a>));", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#cur\">cur</a> <= <a class=\"id\" href=\"#end\">end</a> && <a class=\"id\" href=\"#ndisc_is_useropt\">ndisc_is_useropt</a>(<a class=\"id\" href=\"#cur\">cur</a>) ? <a class=\"id\" href=\"#cur\">cur</a> : <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#ndisc_options\">ndisc_options</a> *<a class=\"id\" href=\"#ndisc_parse_options\">ndisc_parse_options</a>(<a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#opt\">opt</a>, int <a class=\"id\" href=\"#opt_len\">opt_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#ndisc_options\">ndisc_options</a> *<a class=\"id\" href=\"#ndopts\">ndopts</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nd_opt_hdr\">nd_opt_hdr</a> *<a class=\"id\" href=\"#nd_opt\">nd_opt</a> = (struct <a class=\"id\" href=\"#nd_opt_hdr\">nd_opt_hdr</a> *)<a class=\"id\" href=\"#opt\">opt</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#nd_opt\">nd_opt</a> || <a class=\"id\" href=\"#opt_len\">opt_len</a> &lt; 0 || !<a class=\"id\" href=\"#ndopts\">ndopts</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#ndopts\">ndopts</a>, 0, sizeof(*<a class=\"id\" href=\"#ndopts\">ndopts</a>));", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#opt_len\">opt_len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#l\">l</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#opt_len\">opt_len</a> &lt; sizeof(struct <a class=\"id\" href=\"#nd_opt_hdr\">nd_opt_hdr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#nd_opt\">nd_opt</a>-><a class=\"id\" href=\"#nd_opt_len\">nd_opt_len</a> << 3;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#opt_len\">opt_len</a> &lt; <a class=\"id\" href=\"#l\">l</a> || <a class=\"id\" href=\"#l\">l</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#nd_opt\">nd_opt</a>-><a class=\"id\" href=\"#nd_opt_type\">nd_opt_type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ND_OPT_SOURCE_LL_ADDR\">ND_OPT_SOURCE_LL_ADDR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ND_OPT_TARGET_LL_ADDR\">ND_OPT_TARGET_LL_ADDR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ND_OPT_MTU\">ND_OPT_MTU</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ND_OPT_REDIRECT_HDR\">ND_OPT_REDIRECT_HDR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ndopts\">ndopts</a>-><a class=\"id\" href=\"#nd_opt_array\">nd_opt_array</a>[<a class=\"id\" href=\"#nd_opt\">nd_opt</a>-><a class=\"id\" href=\"#nd_opt_type\">nd_opt_type</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ND_PRINTK2\">ND_PRINTK2</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"%s(): duplicated ND6 option found: type=%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#__func__\">__func__</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#nd_opt\">nd_opt</a>-><a class=\"id\" href=\"#nd_opt_type\">nd_opt_type</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ndopts\">ndopts</a>-><a class=\"id\" href=\"#nd_opt_array\">nd_opt_array</a>[<a class=\"id\" href=\"#nd_opt\">nd_opt</a>-><a class=\"id\" href=\"#nd_opt_type\">nd_opt_type</a>] = <a class=\"id\" href=\"#nd_opt\">nd_opt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ND_OPT_PREFIX_INFO\">ND_OPT_PREFIX_INFO</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ndopts\">ndopts</a>-><a class=\"id\" href=\"#nd_opts_pi_end\">nd_opts_pi_end</a> = <a class=\"id\" href=\"#nd_opt\">nd_opt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ndopts\">ndopts</a>-><a class=\"id\" href=\"#nd_opt_array\">nd_opt_array</a>[<a class=\"id\" href=\"#nd_opt\">nd_opt</a>-><a class=\"id\" href=\"#nd_opt_type\">nd_opt_type</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ndopts\">ndopts</a>-><a class=\"id\" href=\"#nd_opt_array\">nd_opt_array</a>[<a class=\"id\" href=\"#nd_opt\">nd_opt</a>-><a class=\"id\" href=\"#nd_opt_type\">nd_opt_type</a>] = <a class=\"id\" href=\"#nd_opt\">nd_opt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_ROUTE_INFO\">CONFIG_IPV6_ROUTE_INFO</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ND_OPT_ROUTE_INFO\">ND_OPT_ROUTE_INFO</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ndopts\">ndopts</a>-><a class=\"id\" href=\"#nd_opts_ri_end\">nd_opts_ri_end</a> = <a class=\"id\" href=\"#nd_opt\">nd_opt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ndopts\">ndopts</a>-><a class=\"id\" href=\"#nd_opts_ri\">nd_opts_ri</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ndopts\">ndopts</a>-><a class=\"id\" href=\"#nd_opts_ri\">nd_opts_ri</a> = <a class=\"id\" href=\"#nd_opt\">nd_opt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ndisc_is_useropt\">ndisc_is_useropt</a>(<a class=\"id\" href=\"#nd_opt\">nd_opt</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ndopts\">ndopts</a>-><a class=\"id\" href=\"#nd_useropts_end\">nd_useropts_end</a> = <a class=\"id\" href=\"#nd_opt\">nd_opt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ndopts\">ndopts</a>-><a class=\"id\" href=\"#nd_useropts\">nd_useropts</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ndopts\">ndopts</a>-><a class=\"id\" href=\"#nd_useropts\">nd_useropts</a> = <a class=\"id\" href=\"#nd_opt\">nd_opt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Unknown options must be silently ignored,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * to accommodate future extension to the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * protocol.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ND_PRINTK2\">ND_PRINTK2</a>(<a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"%s(): ignored unsupported option; type=%d, len=%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#__func__\">__func__</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#nd_opt\">nd_opt</a>-><a class=\"id\" href=\"#nd_opt_type\">nd_opt_type</a>, <a class=\"id\" href=\"#nd_opt\">nd_opt</a>-><a class=\"id\" href=\"#nd_opt_len\">nd_opt_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opt_len\">opt_len</a> -= <a class=\"id\" href=\"#l\">l</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nd_opt\">nd_opt</a> = ((void *)<a class=\"id\" href=\"#nd_opt\">nd_opt</a>) + <a class=\"id\" href=\"#l\">l</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ndopts\">ndopts</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#ndisc_opt_addr_data\">ndisc_opt_addr_data</a>(struct <a class=\"id\" href=\"#nd_opt_hdr\">nd_opt_hdr</a> *<a class=\"id\" href=\"#p\">p</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#lladdr\">lladdr</a> = (<a class=\"id\" href=\"#u8\">u8</a> *)(<a class=\"id\" href=\"#p\">p</a> + 1);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#lladdrlen\">lladdrlen</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#nd_opt_len\">nd_opt_len</a> << 3;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#prepad\">prepad</a> = <a class=\"id\" href=\"#ndisc_addr_option_pad\">ndisc_addr_option_pad</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lladdrlen\">lladdrlen</a> != <a class=\"id\" href=\"#NDISC_OPT_SPACE\">NDISC_OPT_SPACE</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#addr_len\">addr_len</a> + <a class=\"id\" href=\"#prepad\">prepad</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#lladdr\">lladdr</a> + <a class=\"id\" href=\"#prepad\">prepad</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#ndisc_mc_map\">ndisc_mc_map</a>(struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#dir\">dir</a>)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ARPHRD_ETHER\">ARPHRD_ETHER</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ARPHRD_IEEE802\">ARPHRD_IEEE802</a>:<span class=\"ts\"/><span class=\"comment\">/* Not sure. Check it later. --ANK */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ARPHRD_FDDI\">ARPHRD_FDDI</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_eth_mc_map\">ipv6_eth_mc_map</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ARPHRD_IEEE802_TR\">ARPHRD_IEEE802_TR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_tr_mc_map\">ipv6_tr_mc_map</a>(<a class=\"id\" href=\"#addr\">addr</a>,<a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ARPHRD_ARCNET\">ARPHRD_ARCNET</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_arcnet_mc_map\">ipv6_arcnet_mc_map</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ARPHRD_INFINIBAND\">ARPHRD_INFINIBAND</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_ib_mc_map\">ipv6_ib_mc_map</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#broadcast\">broadcast</a>, <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dir\">dir</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#broadcast\">broadcast</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#addr_len\">addr_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#ndisc_mc_map\">ndisc_mc_map</a>);", 
"", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ndisc_hash\">ndisc_hash</a>(const void *<a class=\"id\" href=\"#pkey\">pkey</a>, const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>const <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#p32\">p32</a> = <a class=\"id\" href=\"#pkey\">pkey</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#addr_hash\">addr_hash</a>, <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addr_hash\">addr_hash</a> = 0;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; (sizeof(struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a>) / sizeof(<a class=\"id\" href=\"#u32\">u32</a>)); <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr_hash\">addr_hash</a> ^= *<a class=\"id\" href=\"#p32\">p32</a>++;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#jhash_2words\">jhash_2words</a>(<a class=\"id\" href=\"#addr_hash\">addr_hash</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a>, <a class=\"id\" href=\"#nd_tbl\">nd_tbl</a>.<a class=\"id\" href=\"#hash_rnd\">hash_rnd</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ndisc_constructor\">ndisc_constructor</a>(struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#neigh\">neigh</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a> = (struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a>*)&amp;<a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#primary_key\">primary_key</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#in6_dev\">in6_dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#neigh_parms\">neigh_parms</a> *<a class=\"id\" href=\"#parms\">parms</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#is_multicast\">is_multicast</a> = <a class=\"id\" href=\"#ipv6_addr_is_multicast\">ipv6_addr_is_multicast</a>(<a class=\"id\" href=\"#addr\">addr</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in6_dev\">in6_dev</a> = <a class=\"id\" href=\"#in6_dev_get\">in6_dev_get</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#in6_dev\">in6_dev</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#parms\">parms</a> = <a class=\"id\" href=\"#in6_dev\">in6_dev</a>-><a class=\"id\" href=\"#nd_parms\">nd_parms</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__neigh_parms_put\">__neigh_parms_put</a>(<a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#parms\">parms</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#parms\">parms</a> = <a class=\"id\" href=\"#neigh_parms_clone\">neigh_parms_clone</a>(<a class=\"id\" href=\"#parms\">parms</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#is_multicast\">is_multicast</a> ? <a class=\"id\" href=\"#RTN_MULTICAST\">RTN_MULTICAST</a> : <a class=\"id\" href=\"#RTN_UNICAST\">RTN_UNICAST</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#header_ops\">header_ops</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#nud_state\">nud_state</a> = <a class=\"id\" href=\"#NUD_NOARP\">NUD_NOARP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#ops\">ops</a> = &amp;<a class=\"id\" href=\"#ndisc_direct_ops\">ndisc_direct_ops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#output\">output</a> = <a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#queue_xmit\">queue_xmit</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#is_multicast\">is_multicast</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#nud_state\">nud_state</a> = <a class=\"id\" href=\"#NUD_NOARP\">NUD_NOARP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ndisc_mc_map\">ndisc_mc_map</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#ha\">ha</a>, <a class=\"id\" href=\"#dev\">dev</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a>&amp;(<a class=\"id\" href=\"#IFF_NOARP\">IFF_NOARP</a>|<a class=\"id\" href=\"#IFF_LOOPBACK\">IFF_LOOPBACK</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#nud_state\">nud_state</a> = <a class=\"id\" href=\"#NUD_NOARP\">NUD_NOARP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#ha\">ha</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev_addr\">dev_addr</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#addr_len\">addr_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a>&amp;<a class=\"id\" href=\"#IFF_LOOPBACK\">IFF_LOOPBACK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#RTN_LOCAL\">RTN_LOCAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a>&amp;<a class=\"id\" href=\"#IFF_POINTOPOINT\">IFF_POINTOPOINT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#nud_state\">nud_state</a> = <a class=\"id\" href=\"#NUD_NOARP\">NUD_NOARP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#ha\">ha</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#broadcast\">broadcast</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#addr_len\">addr_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#header_ops\">header_ops</a>-><a class=\"id\" href=\"#cache\">cache</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#ops\">ops</a> = &amp;<a class=\"id\" href=\"#ndisc_hh_ops\">ndisc_hh_ops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#ops\">ops</a> = &amp;<a class=\"id\" href=\"#ndisc_generic_ops\">ndisc_generic_ops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#nud_state\">nud_state</a>&amp;<a class=\"id\" href=\"#NUD_VALID\">NUD_VALID</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#output\">output</a> = <a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#connected_output\">connected_output</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#output\">output</a> = <a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#output\">output</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in6_dev_put\">in6_dev_put</a>(<a class=\"id\" href=\"#in6_dev\">in6_dev</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pndisc_constructor\">pndisc_constructor</a>(struct <a class=\"id\" href=\"#pneigh_entry\">pneigh_entry</a> *<a class=\"id\" href=\"#n\">n</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a> = (struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a>*)&amp;<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> <a class=\"id\" href=\"#maddr\">maddr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a> == <a class=\"id\" href=\"#NULL\">NULL</a> || <a class=\"id\" href=\"#__in6_dev_get\">__in6_dev_get</a>(<a class=\"id\" href=\"#dev\">dev</a>) == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addrconf_addr_solict_mult\">addrconf_addr_solict_mult</a>(<a class=\"id\" href=\"#addr\">addr</a>, &amp;<a class=\"id\" href=\"#maddr\">maddr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_dev_mc_inc\">ipv6_dev_mc_inc</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#maddr\">maddr</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#pndisc_destructor\">pndisc_destructor</a>(struct <a class=\"id\" href=\"#pneigh_entry\">pneigh_entry</a> *<a class=\"id\" href=\"#n\">n</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a> = (struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a>*)&amp;<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> <a class=\"id\" href=\"#maddr\">maddr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a> == <a class=\"id\" href=\"#NULL\">NULL</a> || <a class=\"id\" href=\"#__in6_dev_get\">__in6_dev_get</a>(<a class=\"id\" href=\"#dev\">dev</a>) == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addrconf_addr_solict_mult\">addrconf_addr_solict_mult</a>(<a class=\"id\" href=\"#addr\">addr</a>, &amp;<a class=\"id\" href=\"#maddr\">maddr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_dev_mc_dec\">ipv6_dev_mc_dec</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#maddr\">maddr</a>);", 
"}", 
"", 
"struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#ndisc_build_skb\">ndisc_build_skb</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#daddr\">daddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#saddr\">saddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#icmp6hdr\">icmp6hdr</a> *<a class=\"id\" href=\"#icmp6h\">icmp6h</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#target\">target</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#llinfo\">llinfo</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#ndisc_sk\">ndisc_sk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#icmp6hdr\">icmp6hdr</a> *<a class=\"id\" href=\"#hdr\">hdr</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#opt\">opt</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#addr_len\">addr_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#llinfo\">llinfo</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = sizeof(struct <a class=\"id\" href=\"#icmp6hdr\">icmp6hdr</a>) + (<a class=\"id\" href=\"#target\">target</a> ? sizeof(*<a class=\"id\" href=\"#target\">target</a>) : 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#llinfo\">llinfo</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#ndisc_opt_addr_space\">ndisc_opt_addr_space</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#sock_alloc_send_skb\">sock_alloc_send_skb</a>(<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (<a class=\"id\" href=\"#MAX_HEADER\">MAX_HEADER</a> + sizeof(struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#len\">len</a> + <a class=\"id\" href=\"#LL_ALLOCATED_SPACE\">LL_ALLOCATED_SPACE</a>(<a class=\"id\" href=\"#dev\">dev</a>)),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  1, &amp;<a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb\">skb</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ND_PRINTK0\">ND_PRINTK0</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"ICMPv6 ND: %s() failed to allocate an skb, err=%d.\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_reserve\">skb_reserve</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#LL_RESERVED_SPACE\">LL_RESERVED_SPACE</a>(<a class=\"id\" href=\"#dev\">dev</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip6_nd_hdr\">ip6_nd_hdr</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#IPPROTO_ICMPV6\">IPPROTO_ICMPV6</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#transport_header\">transport_header</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#tail\">tail</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_put\">skb_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a> = (struct <a class=\"id\" href=\"#icmp6hdr\">icmp6hdr</a> *)<a class=\"id\" href=\"#skb_transport_header\">skb_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#hdr\">hdr</a>, <a class=\"id\" href=\"#icmp6h\">icmp6h</a>, sizeof(*<a class=\"id\" href=\"#hdr\">hdr</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#opt\">opt</a> = <a class=\"id\" href=\"#skb_transport_header\">skb_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>) + sizeof(struct <a class=\"id\" href=\"#icmp6hdr\">icmp6hdr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#target\">target</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>((struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *)<a class=\"id\" href=\"#opt\">opt</a>, <a class=\"id\" href=\"#target\">target</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opt\">opt</a> += sizeof(*<a class=\"id\" href=\"#target\">target</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#llinfo\">llinfo</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ndisc_fill_addr_option\">ndisc_fill_addr_option</a>(<a class=\"id\" href=\"#opt\">opt</a>, <a class=\"id\" href=\"#llinfo\">llinfo</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev_addr\">dev_addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#addr_len\">addr_len</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#icmp6_cksum\">icmp6_cksum</a> = <a class=\"id\" href=\"#csum_ipv6_magic\">csum_ipv6_magic</a>(<a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#IPPROTO_ICMPV6\">IPPROTO_ICMPV6</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#csum_partial\">csum_partial</a>(<a class=\"id\" href=\"#hdr\">hdr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a>, 0));", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#skb\">skb</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#ndisc_build_skb\">ndisc_build_skb</a>);", 
"", 
"void <a class=\"id\" href=\"#ndisc_send_skb\">ndisc_send_skb</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#neigh\">neigh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#daddr\">daddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#saddr\">saddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#icmp6hdr\">icmp6hdr</a> *<a class=\"id\" href=\"#icmp6h\">icmp6h</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#flowi\">flowi</a> <a class=\"id\" href=\"#fl\">fl</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#ndisc_sk\">ndisc_sk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#type\">type</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#icmp6h\">icmp6h</a>-><a class=\"id\" href=\"#icmp6_type\">icmp6_type</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icmpv6_flow_init\">icmpv6_flow_init</a>(<a class=\"id\" href=\"#sk\">sk</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#icmp6_dst_alloc\">icmp6_dst_alloc</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#neigh\">neigh</a>, <a class=\"id\" href=\"#daddr\">daddr</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dst\">dst</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#xfrm_lookup\">xfrm_lookup</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#dst\">dst</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_dst_set\">skb_dst_set</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#dst\">dst</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#in6_dev_get\">in6_dev_get</a>(<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IP6_UPD_PO_STATS\">IP6_UPD_PO_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#IPSTATS_MIB_OUT\">IPSTATS_MIB_OUT</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#NF_HOOK\">NF_HOOK</a>(<a class=\"id\" href=\"#NFPROTO_IPV6\">NFPROTO_IPV6</a>, <a class=\"id\" href=\"#NF_INET_LOCAL_OUT\">NF_INET_LOCAL_OUT</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#dst_output\">dst_output</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ICMP6MSGOUT_INC_STATS\">ICMP6MSGOUT_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ICMP6_INC_STATS\">ICMP6_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#ICMP6_MIB_OUTMSGS\">ICMP6_MIB_OUTMSGS</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#idev\">idev</a> != <a class=\"id\" href=\"#NULL\">NULL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_dev_put\">in6_dev_put</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#ndisc_send_skb\">ndisc_send_skb</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Send a Neighbour Discover packet</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#__ndisc_send\">__ndisc_send</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#neigh\">neigh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#daddr\">daddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#saddr\">saddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#icmp6hdr\">icmp6hdr</a> *<a class=\"id\" href=\"#icmp6h\">icmp6h</a>, const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#target\">target</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> int <a class=\"id\" href=\"#llinfo\">llinfo</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#ndisc_build_skb\">ndisc_build_skb</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#icmp6h\">icmp6h</a>, <a class=\"id\" href=\"#target\">target</a>, <a class=\"id\" href=\"#llinfo\">llinfo</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb\">skb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ndisc_send_skb\">ndisc_send_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#neigh\">neigh</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#icmp6h\">icmp6h</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ndisc_send_na\">ndisc_send_na</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#neigh\">neigh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#daddr\">daddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#solicited_addr\">solicited_addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  int <a class=\"id\" href=\"#router\">router</a>, int <a class=\"id\" href=\"#solicited\">solicited</a>, int <a class=\"id\" href=\"#override\">override</a>, int <a class=\"id\" href=\"#inc_opt\">inc_opt</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> <a class=\"id\" href=\"#tmpaddr\">tmpaddr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ifp\">ifp</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#src_addr\">src_addr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#icmp6hdr\">icmp6hdr</a> <a class=\"id\" href=\"#icmp6h\">icmp6h</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#icmp6_type\">icmp6_type</a> = <a class=\"id\" href=\"#NDISC_NEIGHBOUR_ADVERTISEMENT\">NDISC_NEIGHBOUR_ADVERTISEMENT</a>,", 
"<span class=\"ts\"/>};", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* for anycast or proxy, solicited_addr != src_addr */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ifp\">ifp</a> = <a class=\"id\" href=\"#ipv6_get_ifaddr\">ipv6_get_ifaddr</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#solicited_addr\">solicited_addr</a>, <a class=\"id\" href=\"#dev\">dev</a>, 1);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ifp\">ifp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#src_addr\">src_addr</a> = <a class=\"id\" href=\"#solicited_addr\">solicited_addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IFA_F_OPTIMISTIC\">IFA_F_OPTIMISTIC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#override\">override</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inc_opt\">inc_opt</a> |= <a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#force_tllao\">force_tllao</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_ifa_put\">in6_ifa_put</a>(<a class=\"id\" href=\"#ifp\">ifp</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_dev_get_saddr\">ipv6_dev_get_saddr</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#daddr\">daddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>)-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#ndisc_sk\">ndisc_sk</a>)-><a class=\"id\" href=\"#srcprefs\">srcprefs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#tmpaddr\">tmpaddr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#src_addr\">src_addr</a> = &amp;<a class=\"id\" href=\"#tmpaddr\">tmpaddr</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icmp6h\">icmp6h</a>.<a class=\"id\" href=\"#icmp6_router\">icmp6_router</a> = <a class=\"id\" href=\"#router\">router</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icmp6h\">icmp6h</a>.<a class=\"id\" href=\"#icmp6_solicited\">icmp6_solicited</a> = <a class=\"id\" href=\"#solicited\">solicited</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icmp6h\">icmp6h</a>.<a class=\"id\" href=\"#icmp6_override\">icmp6_override</a> = <a class=\"id\" href=\"#override\">override</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ndisc_send\">__ndisc_send</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#neigh\">neigh</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#src_addr\">src_addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     &amp;<a class=\"id\" href=\"#icmp6h\">icmp6h</a>, <a class=\"id\" href=\"#solicited_addr\">solicited_addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#inc_opt\">inc_opt</a> ? <a class=\"id\" href=\"#ND_OPT_TARGET_LL_ADDR\">ND_OPT_TARGET_LL_ADDR</a> : 0);", 
"}", 
"", 
"void <a class=\"id\" href=\"#ndisc_send_ns\">ndisc_send_ns</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#neigh\">neigh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#solicit\">solicit</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#daddr\">daddr</a>, const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#saddr\">saddr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> <a class=\"id\" href=\"#addr_buf\">addr_buf</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#icmp6hdr\">icmp6hdr</a> <a class=\"id\" href=\"#icmp6h\">icmp6h</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#icmp6_type\">icmp6_type</a> = <a class=\"id\" href=\"#NDISC_NEIGHBOUR_SOLICITATION\">NDISC_NEIGHBOUR_SOLICITATION</a>,", 
"<span class=\"ts\"/>};", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#saddr\">saddr</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_get_lladdr\">ipv6_get_lladdr</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#addr_buf\">addr_buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (<a class=\"id\" href=\"#IFA_F_TENTATIVE\">IFA_F_TENTATIVE</a>|<a class=\"id\" href=\"#IFA_F_OPTIMISTIC\">IFA_F_OPTIMISTIC</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#saddr\">saddr</a> = &amp;<a class=\"id\" href=\"#addr_buf\">addr_buf</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ndisc_send\">__ndisc_send</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#neigh\">neigh</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#saddr\">saddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     &amp;<a class=\"id\" href=\"#icmp6h\">icmp6h</a>, <a class=\"id\" href=\"#solicit\">solicit</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     !<a class=\"id\" href=\"#ipv6_addr_any\">ipv6_addr_any</a>(<a class=\"id\" href=\"#saddr\">saddr</a>) ? <a class=\"id\" href=\"#ND_OPT_SOURCE_LL_ADDR\">ND_OPT_SOURCE_LL_ADDR</a> : 0);", 
"}", 
"", 
"void <a class=\"id\" href=\"#ndisc_send_rs\">ndisc_send_rs</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#saddr\">saddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#daddr\">daddr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#icmp6hdr\">icmp6hdr</a> <a class=\"id\" href=\"#icmp6h\">icmp6h</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#icmp6_type\">icmp6_type</a> = <a class=\"id\" href=\"#NDISC_ROUTER_SOLICITATION\">NDISC_ROUTER_SOLICITATION</a>,", 
"<span class=\"ts\"/>};", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#send_sllao\">send_sllao</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#addr_len\">addr_len</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_OPTIMISTIC_DAD\">CONFIG_IPV6_OPTIMISTIC_DAD</a>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * According to section 2.2 of RFC 4429, we must not</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * send router solicitations with a sllao from</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * optimistic addresses, but we may send the solicitation</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * if we don't include the sllao.  So here we check</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * if our address is optimistic, and if so, we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * suppress the inclusion of the sllao.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#send_sllao\">send_sllao</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ifp\">ifp</a> = <a class=\"id\" href=\"#ipv6_get_ifaddr\">ipv6_get_ifaddr</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#saddr\">saddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#dev\">dev</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ifp\">ifp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IFA_F_OPTIMISTIC\">IFA_F_OPTIMISTIC</a>)  {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#send_sllao\">send_sllao</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_ifa_put\">in6_ifa_put</a>(<a class=\"id\" href=\"#ifp\">ifp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#send_sllao\">send_sllao</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ndisc_send\">__ndisc_send</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#saddr\">saddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     &amp;<a class=\"id\" href=\"#icmp6h\">icmp6h</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#send_sllao\">send_sllao</a> ? <a class=\"id\" href=\"#ND_OPT_SOURCE_LL_ADDR\">ND_OPT_SOURCE_LL_ADDR</a> : 0);", 
"}", 
"", 
"", 
"static void <a class=\"id\" href=\"#ndisc_error_report\">ndisc_error_report</a>(struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#neigh\">neigh</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>\"The sender MUST return an ICMP</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/> destination unreachable\"</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst_link_failure\">dst_link_failure</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Called with locked neigh: either read or both */</span>", 
"", 
"static void <a class=\"id\" href=\"#ndisc_solicit\">ndisc_solicit</a>(struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#neigh\">neigh</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#saddr\">saddr</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> <a class=\"id\" href=\"#mcaddr\">mcaddr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#target\">target</a> = (struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *)&amp;<a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#primary_key\">primary_key</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#probes\">probes</a> = <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#probes\">probes</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a> && <a class=\"id\" href=\"#ipv6_chk_addr\">ipv6_chk_addr</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>), &amp;<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#dev\">dev</a>, 1))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#saddr\">saddr</a> = &amp;<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#saddr\">saddr</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#probes\">probes</a> -= <a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#parms\">parms</a>-><a class=\"id\" href=\"#ucast_probes\">ucast_probes</a>) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#nud_state\">nud_state</a> &amp; <a class=\"id\" href=\"#NUD_VALID\">NUD_VALID</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ND_PRINTK1\">ND_PRINTK1</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"%s(): trying to ucast probe in NUD_INVALID: %pI6\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#target\">target</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ndisc_send_ns\">ndisc_send_ns</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#neigh\">neigh</a>, <a class=\"id\" href=\"#target\">target</a>, <a class=\"id\" href=\"#target\">target</a>, <a class=\"id\" href=\"#saddr\">saddr</a>);", 
"<span class=\"ts\"/>} else if ((<a class=\"id\" href=\"#probes\">probes</a> -= <a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#parms\">parms</a>-><a class=\"id\" href=\"#app_probes\">app_probes</a>) &lt; 0) {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_ARPD\">CONFIG_ARPD</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh_app_ns\">neigh_app_ns</a>(<a class=\"id\" href=\"#neigh\">neigh</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrconf_addr_solict_mult\">addrconf_addr_solict_mult</a>(<a class=\"id\" href=\"#target\">target</a>, &amp;<a class=\"id\" href=\"#mcaddr\">mcaddr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ndisc_send_ns\">ndisc_send_ns</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#target\">target</a>, &amp;<a class=\"id\" href=\"#mcaddr\">mcaddr</a>, <a class=\"id\" href=\"#saddr\">saddr</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pndisc_is_router\">pndisc_is_router</a>(const void *<a class=\"id\" href=\"#pkey\">pkey</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pneigh_entry\">pneigh_entry</a> *<a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock_bh\">read_lock_bh</a>(&amp;<a class=\"id\" href=\"#nd_tbl\">nd_tbl</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#__pneigh_lookup\">__pneigh_lookup</a>(&amp;<a class=\"id\" href=\"#nd_tbl\">nd_tbl</a>, <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#pkey\">pkey</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = !!(<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#NTF_ROUTER\">NTF_ROUTER</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#nd_tbl\">nd_tbl</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ndisc_recv_ns\">ndisc_recv_ns</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nd_msg\">nd_msg</a> *<a class=\"id\" href=\"#msg\">msg</a> = (struct <a class=\"id\" href=\"#nd_msg\">nd_msg</a> *)<a class=\"id\" href=\"#skb_transport_header\">skb_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#saddr\">saddr</a> = &amp;<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#saddr\">saddr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#daddr\">daddr</a> = &amp;<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#daddr\">daddr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#lladdr\">lladdr</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ndoptlen\">ndoptlen</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#tail\">tail</a> - (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#transport_header\">transport_header</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#nd_msg\">nd_msg</a>, <a class=\"id\" href=\"#opt\">opt</a>));", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ndisc_options\">ndisc_options</a> <a class=\"id\" href=\"#ndopts\">ndopts</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ifp\">ifp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#neigh\">neigh</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#dad\">dad</a> = <a class=\"id\" href=\"#ipv6_addr_any\">ipv6_addr_any</a>(<a class=\"id\" href=\"#saddr\">saddr</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#inc\">inc</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#is_router\">is_router</a> = -1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_is_multicast\">ipv6_addr_is_multicast</a>(&amp;<a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#target\">target</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ND_PRINTK2\">ND_PRINTK2</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"ICMPv6 NS: multicast target address\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * RFC2461 7.1.1:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * DAD has to be destined for solicited node multicast address.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dad\">dad</a> &&", 
"<span class=\"ts\"/>    !(<a class=\"id\" href=\"#daddr\">daddr</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[0] == <a class=\"id\" href=\"#htonl\">htonl</a>(0xff020000) &&", 
"<span class=\"ts\"/>      <a class=\"id\" href=\"#daddr\">daddr</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[1] == <a class=\"id\" href=\"#htonl\">htonl</a>(0x00000000) &&", 
"<span class=\"ts\"/>      <a class=\"id\" href=\"#daddr\">daddr</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[2] == <a class=\"id\" href=\"#htonl\">htonl</a>(0x00000001) &&", 
"<span class=\"ts\"/>      <a class=\"id\" href=\"#daddr\">daddr</a>-><a class=\"id\" href=\"#s6_addr\">s6_addr</a> [12] == 0xff )) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ND_PRINTK2\">ND_PRINTK2</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"ICMPv6 NS: bad DAD packet (wrong destination)\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ndisc_parse_options\">ndisc_parse_options</a>(<a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#opt\">opt</a>, <a class=\"id\" href=\"#ndoptlen\">ndoptlen</a>, &amp;<a class=\"id\" href=\"#ndopts\">ndopts</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ND_PRINTK2\">ND_PRINTK2</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"ICMPv6 NS: invalid ND options\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ndopts\">ndopts</a>.<a class=\"id\" href=\"#nd_opts_src_lladdr\">nd_opts_src_lladdr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lladdr\">lladdr</a> = <a class=\"id\" href=\"#ndisc_opt_addr_data\">ndisc_opt_addr_data</a>(<a class=\"id\" href=\"#ndopts\">ndopts</a>.<a class=\"id\" href=\"#nd_opts_src_lladdr\">nd_opts_src_lladdr</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#lladdr\">lladdr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ND_PRINTK2\">ND_PRINTK2</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"ICMPv6 NS: invalid link-layer address length\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* RFC2461 7.1.1:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>If the IP source address is the unspecified address,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>there MUST NOT be source link-layer address option</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>in the message.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dad\">dad</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ND_PRINTK2\">ND_PRINTK2</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"ICMPv6 NS: bad DAD packet (link-layer address option)\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inc\">inc</a> = <a class=\"id\" href=\"#ipv6_addr_is_multicast\">ipv6_addr_is_multicast</a>(<a class=\"id\" href=\"#daddr\">daddr</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ifp\">ifp</a> = <a class=\"id\" href=\"#ipv6_get_ifaddr\">ipv6_get_ifaddr</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>), &amp;<a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#target\">target</a>, <a class=\"id\" href=\"#dev\">dev</a>, 1);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ifp\">ifp</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; (<a class=\"id\" href=\"#IFA_F_TENTATIVE\">IFA_F_TENTATIVE</a>|<a class=\"id\" href=\"#IFA_F_OPTIMISTIC\">IFA_F_OPTIMISTIC</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dad\">dad</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#ARPHRD_IEEE802_TR\">ARPHRD_IEEE802_TR</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const unsigned char *<a class=\"id\" href=\"#sadr\">sadr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sadr\">sadr</a> = <a class=\"id\" href=\"#skb_mac_header\">skb_mac_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (((<a class=\"id\" href=\"#sadr\">sadr</a>[8] ^ <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev_addr\">dev_addr</a>[0]) &amp; 0x7f) == 0 &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sadr\">sadr</a>[9] == <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev_addr\">dev_addr</a>[1] &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sadr\">sadr</a>[10] == <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev_addr\">dev_addr</a>[2] &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sadr\">sadr</a>[11] == <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev_addr\">dev_addr</a>[3] &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sadr\">sadr</a>[12] == <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev_addr\">dev_addr</a>[4] &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sadr\">sadr</a>[13] == <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev_addr\">dev_addr</a>[5]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* looped-back to us */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * We are colliding with another node</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * who is doing DAD</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * so fail our DAD process</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrconf_dad_failure\">addrconf_dad_failure</a>(<a class=\"id\" href=\"#ifp\">ifp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * This is not a dad solicitation.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * If we are an optimistic node,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * we should respond.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Otherwise, we should ignore it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IFA_F_OPTIMISTIC\">IFA_F_OPTIMISTIC</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#idev\">idev</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#in6_dev_get\">in6_dev_get</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#idev\">idev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* XXX: count this drop? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_chk_acast_addr\">ipv6_chk_acast_addr</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#target\">target</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#forwarding\">forwarding</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>     (<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#devconf_all\">devconf_all</a>-><a class=\"id\" href=\"#proxy_ndp\">proxy_ndp</a> || <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#proxy_ndp\">proxy_ndp</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>     (<a class=\"id\" href=\"#is_router\">is_router</a> = <a class=\"id\" href=\"#pndisc_is_router\">pndisc_is_router</a>(&amp;<a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#target\">target</a>, <a class=\"id\" href=\"#dev\">dev</a>)) >= 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#NEIGH_CB\">NEIGH_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#LOCALLY_ENQUEUED\">LOCALLY_ENQUEUED</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#pkt_type\">pkt_type</a> != <a class=\"id\" href=\"#PACKET_HOST\">PACKET_HOST</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#inc\">inc</a> != 0 &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#nd_parms\">nd_parms</a>-><a class=\"id\" href=\"#proxy_delay\">proxy_delay</a> != 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * for anycast or proxy,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * sender should delay its response</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * by a random time between 0 and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * MAX_ANYCAST_DELAY_TIME seconds.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * (RFC2461) -- yoshfuji</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#skb_clone\">skb_clone</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pneigh_enqueue\">pneigh_enqueue</a>(&amp;<a class=\"id\" href=\"#nd_tbl\">nd_tbl</a>, <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#nd_parms\">nd_parms</a>, <a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_router\">is_router</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#is_router\">is_router</a> = !!<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#forwarding\">forwarding</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dad\">dad</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ndisc_send_na\">ndisc_send_na</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#in6addr_linklocal_allnodes\">in6addr_linklocal_allnodes</a>, &amp;<a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#target\">target</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#is_router\">is_router</a>, 0, (<a class=\"id\" href=\"#ifp\">ifp</a> != <a class=\"id\" href=\"#NULL\">NULL</a>), 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inc\">inc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NEIGH_CACHE_STAT_INC\">NEIGH_CACHE_STAT_INC</a>(&amp;<a class=\"id\" href=\"#nd_tbl\">nd_tbl</a>, <a class=\"id\" href=\"#rcv_probes_mcast\">rcv_probes_mcast</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NEIGH_CACHE_STAT_INC\">NEIGH_CACHE_STAT_INC</a>(&amp;<a class=\"id\" href=\"#nd_tbl\">nd_tbl</a>, <a class=\"id\" href=\"#rcv_probes_ucast\">rcv_probes_ucast</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>update / create cache entry</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>for the source address</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#neigh\">neigh</a> = <a class=\"id\" href=\"#__neigh_lookup\">__neigh_lookup</a>(&amp;<a class=\"id\" href=\"#nd_tbl\">nd_tbl</a>, <a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       !<a class=\"id\" href=\"#inc\">inc</a> || <a class=\"id\" href=\"#lladdr\">lladdr</a> || !<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#addr_len\">addr_len</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#neigh\">neigh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh_update\">neigh_update</a>(<a class=\"id\" href=\"#neigh\">neigh</a>, <a class=\"id\" href=\"#lladdr\">lladdr</a>, <a class=\"id\" href=\"#NUD_STALE\">NUD_STALE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#NEIGH_UPDATE_F_WEAK_OVERRIDE\">NEIGH_UPDATE_F_WEAK_OVERRIDE</a>|", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#NEIGH_UPDATE_F_OVERRIDE\">NEIGH_UPDATE_F_OVERRIDE</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#neigh\">neigh</a> || !<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#header_ops\">header_ops</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ndisc_send_na\">ndisc_send_na</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#neigh\">neigh</a>, <a class=\"id\" href=\"#saddr\">saddr</a>, &amp;<a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#target\">target</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#is_router\">is_router</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      1, (<a class=\"id\" href=\"#ifp\">ifp</a> != <a class=\"id\" href=\"#NULL\">NULL</a> && <a class=\"id\" href=\"#inc\">inc</a>), <a class=\"id\" href=\"#inc\">inc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#neigh\">neigh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh_release\">neigh_release</a>(<a class=\"id\" href=\"#neigh\">neigh</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ifp\">ifp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_ifa_put\">in6_ifa_put</a>(<a class=\"id\" href=\"#ifp\">ifp</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_dev_put\">in6_dev_put</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ndisc_recv_na\">ndisc_recv_na</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nd_msg\">nd_msg</a> *<a class=\"id\" href=\"#msg\">msg</a> = (struct <a class=\"id\" href=\"#nd_msg\">nd_msg</a> *)<a class=\"id\" href=\"#skb_transport_header\">skb_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#saddr\">saddr</a> = &amp;<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#saddr\">saddr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#daddr\">daddr</a> = &amp;<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#daddr\">daddr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#lladdr\">lladdr</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ndoptlen\">ndoptlen</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#tail\">tail</a> - (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#transport_header\">transport_header</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#nd_msg\">nd_msg</a>, <a class=\"id\" href=\"#opt\">opt</a>));", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ndisc_options\">ndisc_options</a> <a class=\"id\" href=\"#ndopts\">ndopts</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ifp\">ifp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#neigh\">neigh</a>;", 
"", 
];
xr_frag_insert('l/78/42cd25836c78926874fb23f3ff65d574a28911.xr', __xr_tmp);
