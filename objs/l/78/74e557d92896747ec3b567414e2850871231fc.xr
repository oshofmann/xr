var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#increment\">increment</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>++<a class=\"id\" href=\"#mtrr_usage_table\">mtrr_usage_table</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* Search for an empty MTRR */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#mtrr_if\">mtrr_if</a>-><a class=\"id\" href=\"#get_free_region\">get_free_region</a>(<a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#replace\">replace</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> >= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_mtrr\">set_mtrr</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#replace\">replace</a> &lt; 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mtrr_usage_table\">mtrr_usage_table</a>[<a class=\"id\" href=\"#i\">i</a>] = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mtrr_usage_table\">mtrr_usage_table</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#mtrr_usage_table\">mtrr_usage_table</a>[<a class=\"id\" href=\"#replace\">replace</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#increment\">increment</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mtrr_usage_table\">mtrr_usage_table</a>[<a class=\"id\" href=\"#i\">i</a>]++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#replace\">replace</a> != <a class=\"id\" href=\"#i\">i</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_mtrr\">set_mtrr</a>(<a class=\"id\" href=\"#replace\">replace</a>, 0, 0, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mtrr_usage_table\">mtrr_usage_table</a>[<a class=\"id\" href=\"#replace\">replace</a>] = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_info\">pr_info</a>(\"mtrr: no more MTRRs available\\n\");", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#i\">i</a>;", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#mtrr_mutex\">mtrr_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_online_cpus\">put_online_cpus</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#mtrr_check\">mtrr_check</a>(unsigned long <a class=\"id\" href=\"#base\">base</a>, unsigned long <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#base\">base</a> &amp; (<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - 1)) || (<a class=\"id\" href=\"#size\">size</a> &amp; (<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - 1))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_warning\">pr_warning</a>(\"mtrr: size and base must be multiples of 4 kiB\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"mtrr: size: 0x%lx  base: 0x%lx\\n\", <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#base\">base</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dump_stack\">dump_stack</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * mtrr_add - Add a memory type region</span>", 
"<span class=\"comment\"> * @base: Physical base address of region</span>", 
"<span class=\"comment\"> * @size: Physical size of region</span>", 
"<span class=\"comment\"> * @type: Type of MTRR desired</span>", 
"<span class=\"comment\"> * @increment: If this is true do usage counting on the region</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Memory type region registers control the caching on newer Intel and</span>", 
"<span class=\"comment\"> * non Intel processors. This function allows drivers to request an</span>", 
"<span class=\"comment\"> * MTRR is added. The details and hardware specifics of each processor's</span>", 
"<span class=\"comment\"> * implementation are hidden from the caller, but nevertheless the</span>", 
"<span class=\"comment\"> * caller should expect to need to provide a power of two size on an</span>", 
"<span class=\"comment\"> * equivalent power of two boundary.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If the region cannot be added either because all regions are in use</span>", 
"<span class=\"comment\"> * or the CPU cannot support it a negative value is returned. On success</span>", 
"<span class=\"comment\"> * the register number for this entry is returned, but should be treated</span>", 
"<span class=\"comment\"> * as a cookie only.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * On a multiprocessor machine the changes are made to all processors.</span>", 
"<span class=\"comment\"> * This is required on x86 by the Intel processors.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The available types are</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * %MTRR_TYPE_UNCACHABLE - No caching</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * %MTRR_TYPE_WRBACK - Write data back in bursts whenever</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * %MTRR_TYPE_WRCOMB - Write data back soon but allow bursts</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * %MTRR_TYPE_WRTHROUGH - Cache reads but not writes</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * BUGS: Needs a quiet flag for the cases where drivers do not mind</span>", 
"<span class=\"comment\"> * failures and do not wish system log messages to be sent.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#mtrr_add\">mtrr_add</a>(unsigned long <a class=\"id\" href=\"#base\">base</a>, unsigned long <a class=\"id\" href=\"#size\">size</a>, unsigned int <a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#increment\">increment</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mtrr_check\">mtrr_check</a>(<a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#size\">size</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#mtrr_add_page\">mtrr_add_page</a>(<a class=\"id\" href=\"#base\">base</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>, <a class=\"id\" href=\"#size\">size</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>, <a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#increment\">increment</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#mtrr_add\">mtrr_add</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * mtrr_del_page - delete a memory type region</span>", 
];
xr_frag_insert('l/78/74e557d92896747ec3b567414e2850871231fc.xr', __xr_tmp);
