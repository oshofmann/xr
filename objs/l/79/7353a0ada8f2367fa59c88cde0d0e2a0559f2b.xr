var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * TCP CUBIC: Binary Increase Congestion control for TCP v2.3</span>", 
"<span class=\"comment\"> * Home page:</span>", 
"<span class=\"comment\"> *      http://netsrv.csc.ncsu.edu/twiki/bin/view/Main/BIC</span>", 
"<span class=\"comment\"> * This is from the implementation of CUBIC TCP in</span>", 
"<span class=\"comment\"> * Sangtae Ha, Injong Rhee and Lisong Xu,</span>", 
"<span class=\"comment\"> *  \"CUBIC: A New TCP-Friendly High-Speed TCP Variant\"</span>", 
"<span class=\"comment\"> *  in ACM SIGOPS Operating System Review, July 2008.</span>", 
"<span class=\"comment\"> * Available from:</span>", 
"<span class=\"comment\"> *  http://netsrv.csc.ncsu.edu/export/cubic_a_new_tcp_2008.pdf</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * CUBIC integrates a new slow start algorithm, called HyStart.</span>", 
"<span class=\"comment\"> * The details of HyStart are presented in</span>", 
"<span class=\"comment\"> *  Sangtae Ha and Injong Rhee,</span>", 
"<span class=\"comment\"> *  \"Taming the Elephants: New TCP Slow Start\", NCSU TechReport 2008.</span>", 
"<span class=\"comment\"> * Available from:</span>", 
"<span class=\"comment\"> *  http://netsrv.csc.ncsu.edu/export/hystart_techreport_2008.pdf</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * All testing results are available from:</span>", 
"<span class=\"comment\"> * http://netsrv.csc.ncsu.edu/wiki/index.php/TCP_Testing</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Unless CUBIC is enabled and congestion window is large</span>", 
"<span class=\"comment\"> * this behaves the same as the original Reno.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#math64\">math64</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#tcp\">tcp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BICTCP_BETA_SCALE\">BICTCP_BETA_SCALE</a>    1024<span class=\"ts\"/><span class=\"comment\">/* Scale factor beta calculation</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * max_cwnd = snd_cwnd * beta</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#BICTCP_HZ\">BICTCP_HZ</a><span class=\"ts\"/><span class=\"ts\"/>10<span class=\"ts\"/><span class=\"comment\">/* BIC HZ 2^10 = 1024 */</span>", 
"", 
"<span class=\"comment\">/* Two methods of hybrid slow start */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HYSTART_ACK_TRAIN\">HYSTART_ACK_TRAIN</a><span class=\"ts\"/>0x1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HYSTART_DELAY\">HYSTART_DELAY</a><span class=\"ts\"/><span class=\"ts\"/>0x2", 
"", 
"<span class=\"comment\">/* Number of delay samples for detecting the increase of delay */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HYSTART_MIN_SAMPLES\">HYSTART_MIN_SAMPLES</a><span class=\"ts\"/>8", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HYSTART_DELAY_MIN\">HYSTART_DELAY_MIN</a><span class=\"ts\"/>(2U<<3)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HYSTART_DELAY_MAX\">HYSTART_DELAY_MAX</a><span class=\"ts\"/>(16U<<3)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HYSTART_DELAY_THRESH\">HYSTART_DELAY_THRESH</a>(<a class=\"id\" href=\"#x\">x</a>)<span class=\"ts\"/><a class=\"id\" href=\"#clamp\">clamp</a>(<a class=\"id\" href=\"#x\">x</a>, <a class=\"id\" href=\"#HYSTART_DELAY_MIN\">HYSTART_DELAY_MIN</a>, <a class=\"id\" href=\"#HYSTART_DELAY_MAX\">HYSTART_DELAY_MAX</a>)", 
"", 
"static int <a class=\"id\" href=\"#fast_convergence\">fast_convergence</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = 1;", 
"static int <a class=\"id\" href=\"#beta\">beta</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = 717;<span class=\"ts\"/><span class=\"comment\">/* = 717/1024 (BICTCP_BETA_SCALE) */</span>", 
"static int <a class=\"id\" href=\"#initial_ssthresh\">initial_ssthresh</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a>;", 
"static int <a class=\"id\" href=\"#bic_scale\">bic_scale</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = 41;", 
"static int <a class=\"id\" href=\"#tcp_friendliness\">tcp_friendliness</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = 1;", 
"", 
"static int <a class=\"id\" href=\"#hystart\">hystart</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = 1;", 
"static int <a class=\"id\" href=\"#hystart_detect\">hystart_detect</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = <a class=\"id\" href=\"#HYSTART_ACK_TRAIN\">HYSTART_ACK_TRAIN</a> | <a class=\"id\" href=\"#HYSTART_DELAY\">HYSTART_DELAY</a>;", 
"static int <a class=\"id\" href=\"#hystart_low_window\">hystart_low_window</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = 16;", 
"", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#cube_rtt_scale\">cube_rtt_scale</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a>;", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#beta_scale\">beta_scale</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a>;", 
"static <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#cube_factor\">cube_factor</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a>;", 
"", 
"<span class=\"comment\">/* Note parameters that are used for precomputing scale factors are read-only */</span>", 
"<a class=\"id\" href=\"#module_param\">module_param</a>(<a class=\"id\" href=\"#fast_convergence\">fast_convergence</a>, int, 0644);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#fast_convergence\">fast_convergence</a>, \"turn on/off fast convergence\");", 
"<a class=\"id\" href=\"#module_param\">module_param</a>(<a class=\"id\" href=\"#beta\">beta</a>, int, 0644);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#beta\">beta</a>, \"beta for multiplicative increase\");", 
"<a class=\"id\" href=\"#module_param\">module_param</a>(<a class=\"id\" href=\"#initial_ssthresh\">initial_ssthresh</a>, int, 0644);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#initial_ssthresh\">initial_ssthresh</a>, \"initial value of slow start threshold\");", 
"<a class=\"id\" href=\"#module_param\">module_param</a>(<a class=\"id\" href=\"#bic_scale\">bic_scale</a>, int, 0444);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#bic_scale\">bic_scale</a>, \"scale (scaled by 1024) value for bic function (bic_scale/1024)\");", 
"<a class=\"id\" href=\"#module_param\">module_param</a>(<a class=\"id\" href=\"#tcp_friendliness\">tcp_friendliness</a>, int, 0644);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#tcp_friendliness\">tcp_friendliness</a>, \"turn on/off tcp friendliness\");", 
"<a class=\"id\" href=\"#module_param\">module_param</a>(<a class=\"id\" href=\"#hystart\">hystart</a>, int, 0644);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#hystart\">hystart</a>, \"turn on/off hybrid slow start algorithm\");", 
"<a class=\"id\" href=\"#module_param\">module_param</a>(<a class=\"id\" href=\"#hystart_detect\">hystart_detect</a>, int, 0644);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#hystart_detect\">hystart_detect</a>, \"hyrbrid slow start detection mechanisms\"", 
"<span class=\"ts\"/><span class=\"ts\"/> \" 1: packet-train 2: delay 3: both packet-train and delay\");", 
"<a class=\"id\" href=\"#module_param\">module_param</a>(<a class=\"id\" href=\"#hystart_low_window\">hystart_low_window</a>, int, 0644);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#hystart_low_window\">hystart_low_window</a>, \"lower bound cwnd for hybrid slow start\");", 
"", 
"<span class=\"comment\">/* BIC TCP Parameters */</span>", 
"struct <a class=\"id\" href=\"#bictcp\">bictcp</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#cnt\">cnt</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* increase cwnd by 1 after ACKs */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <span class=\"ts\"/><a class=\"id\" href=\"#last_max_cwnd\">last_max_cwnd</a>;<span class=\"ts\"/><span class=\"comment\">/* last maximum snd_cwnd */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#loss_cwnd\">loss_cwnd</a>;<span class=\"ts\"/><span class=\"comment\">/* congestion window at last loss */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#last_cwnd\">last_cwnd</a>;<span class=\"ts\"/><span class=\"comment\">/* the last snd_cwnd */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#last_time\">last_time</a>;<span class=\"ts\"/><span class=\"comment\">/* time when updated last_cwnd */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#bic_origin_point\">bic_origin_point</a>;<span class=\"comment\">/* origin point of bic function */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#bic_K\">bic_K</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* time to origin point from the beginning of the current epoch */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#delay_min\">delay_min</a>;<span class=\"ts\"/><span class=\"comment\">/* min delay */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#epoch_start\">epoch_start</a>;<span class=\"ts\"/><span class=\"comment\">/* beginning of an epoch */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#ack_cnt\">ack_cnt</a>;<span class=\"ts\"/><span class=\"comment\">/* number of acks */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#tcp_cwnd\">tcp_cwnd</a>;<span class=\"ts\"/><span class=\"comment\">/* estimated tcp cwnd */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACK_RATIO_SHIFT\">ACK_RATIO_SHIFT</a><span class=\"ts\"/>4", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a><span class=\"ts\"/><a class=\"id\" href=\"#delayed_ack\">delayed_ack</a>;<span class=\"ts\"/><span class=\"comment\">/* estimate the ratio of Packets/ACKs &lt;&lt; 4 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><a class=\"id\" href=\"#sample_cnt\">sample_cnt</a>;<span class=\"ts\"/><span class=\"comment\">/* number of samples to decide curr_rtt */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* the exit point is found? */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#round_start\">round_start</a>;<span class=\"ts\"/><span class=\"comment\">/* beginning of each round */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#end_seq\">end_seq</a>;<span class=\"ts\"/><span class=\"comment\">/* end_seq of the round */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#last_jiffies\">last_jiffies</a>;<span class=\"ts\"/><span class=\"comment\">/* last time when the ACK spacing is close */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#curr_rtt\">curr_rtt</a>;<span class=\"ts\"/><span class=\"comment\">/* the minimum rtt of current round */</span>", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#bictcp_reset\">bictcp_reset</a>(struct <a class=\"id\" href=\"#bictcp\">bictcp</a> *<a class=\"id\" href=\"#ca\">ca</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#cnt\">cnt</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#last_max_cwnd\">last_max_cwnd</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#loss_cwnd\">loss_cwnd</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#last_cwnd\">last_cwnd</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#last_time\">last_time</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#bic_origin_point\">bic_origin_point</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#bic_K\">bic_K</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#delay_min\">delay_min</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#epoch_start\">epoch_start</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#delayed_ack\">delayed_ack</a> = 2 << <a class=\"id\" href=\"#ACK_RATIO_SHIFT\">ACK_RATIO_SHIFT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#ack_cnt\">ack_cnt</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#tcp_cwnd\">tcp_cwnd</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#found\">found</a> = 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#bictcp_hystart_reset\">bictcp_hystart_reset</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bictcp\">bictcp</a> *<a class=\"id\" href=\"#ca\">ca</a> = <a class=\"id\" href=\"#inet_csk_ca\">inet_csk_ca</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#round_start\">round_start</a> = <a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#last_jiffies\">last_jiffies</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#end_seq\">end_seq</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_nxt\">snd_nxt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#curr_rtt\">curr_rtt</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#sample_cnt\">sample_cnt</a> = 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#bictcp_init\">bictcp_init</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bictcp_reset\">bictcp_reset</a>(<a class=\"id\" href=\"#inet_csk_ca\">inet_csk_ca</a>(<a class=\"id\" href=\"#sk\">sk</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hystart\">hystart</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bictcp_hystart_reset\">bictcp_hystart_reset</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hystart\">hystart</a> && <a class=\"id\" href=\"#initial_ssthresh\">initial_ssthresh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#snd_ssthresh\">snd_ssthresh</a> = <a class=\"id\" href=\"#initial_ssthresh\">initial_ssthresh</a>;", 
"}", 
"", 
"<span class=\"comment\">/* calculate the cubic root of x using a table lookup followed by one</span>", 
"<span class=\"comment\"> * Newton-Raphson iteration.</span>", 
"<span class=\"comment\"> * Avg err ~= 0.195%</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#cubic_root\">cubic_root</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#a\">a</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#x\">x</a>, <a class=\"id\" href=\"#b\">b</a>, <a class=\"id\" href=\"#shift\">shift</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * cbrt(x) MSB values for x MSB values in [0..63].</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Precomputed then refined by hand - Willy Tarreau</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * For x in [0..63],</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *   v = cbrt(x &lt;&lt; 18) - 1</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *   cbrt(x) = (v[x] + 10) &gt;&gt; 6</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>static const <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#v\">v</a>[] = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 0x00 */</span>    0,   54,   54,   54,  118,  118,  118,  118,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 0x08 */</span>  123,  129,  134,  138,  143,  147,  151,  156,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 0x10 */</span>  157,  161,  164,  168,  170,  173,  176,  179,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 0x18 */</span>  181,  185,  187,  190,  192,  194,  197,  199,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 0x20 */</span>  200,  202,  204,  206,  209,  211,  213,  215,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 0x28 */</span>  217,  219,  221,  222,  224,  225,  227,  229,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 0x30 */</span>  231,  232,  234,  236,  237,  239,  240,  242,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 0x38 */</span>  244,  245,  246,  248,  250,  251,  252,  254,", 
"<span class=\"ts\"/>};", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#b\">b</a> = <a class=\"id\" href=\"#fls64\">fls64</a>(<a class=\"id\" href=\"#a\">a</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#b\">b</a> &lt; 7) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* a in [0..63] */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return ((<a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#v\">v</a>[(<a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#a\">a</a>] + 35) >> 6;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#b\">b</a> = ((<a class=\"id\" href=\"#b\">b</a> * 84) >> 8) - 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shift\">shift</a> = (<a class=\"id\" href=\"#a\">a</a> >> (<a class=\"id\" href=\"#b\">b</a> * 3));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x\">x</a> = ((<a class=\"id\" href=\"#u32\">u32</a>)(((<a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#v\">v</a>[<a class=\"id\" href=\"#shift\">shift</a>] + 10) << <a class=\"id\" href=\"#b\">b</a>)) >> 6;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Newton-Raphson iteration</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *                         2</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * x    = ( 2 * x  +  a / x  ) / 3</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  k+1          k         k</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x\">x</a> = (2 * <a class=\"id\" href=\"#x\">x</a> + (<a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#div64_u64\">div64_u64</a>(<a class=\"id\" href=\"#a\">a</a>, (<a class=\"id\" href=\"#u64\">u64</a>)<a class=\"id\" href=\"#x\">x</a> * (<a class=\"id\" href=\"#u64\">u64</a>)(<a class=\"id\" href=\"#x\">x</a> - 1)));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x\">x</a> = ((<a class=\"id\" href=\"#x\">x</a> * 341) >> 10);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#x\">x</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Compute congestion window to use.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#bictcp_update\">bictcp_update</a>(struct <a class=\"id\" href=\"#bictcp\">bictcp</a> *<a class=\"id\" href=\"#ca\">ca</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#cwnd\">cwnd</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#offs\">offs</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#delta\">delta</a>, <a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#bic_target\">bic_target</a>, <a class=\"id\" href=\"#max_cnt\">max_cnt</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#ack_cnt\">ack_cnt</a>++;<span class=\"ts\"/><span class=\"comment\">/* count the number of ACKs */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#last_cwnd\">last_cwnd</a> == <a class=\"id\" href=\"#cwnd\">cwnd</a> &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#s32\">s32</a>)(<a class=\"id\" href=\"#tcp_time_stamp\">tcp_time_stamp</a> - <a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#last_time\">last_time</a>) <= <a class=\"id\" href=\"#HZ\">HZ</a> / 32)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#last_cwnd\">last_cwnd</a> = <a class=\"id\" href=\"#cwnd\">cwnd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#last_time\">last_time</a> = <a class=\"id\" href=\"#tcp_time_stamp\">tcp_time_stamp</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#epoch_start\">epoch_start</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#epoch_start\">epoch_start</a> = <a class=\"id\" href=\"#tcp_time_stamp\">tcp_time_stamp</a>;<span class=\"ts\"/><span class=\"comment\">/* record the beginning of an epoch */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#ack_cnt\">ack_cnt</a> = 1;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* start counting */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#tcp_cwnd\">tcp_cwnd</a> = <a class=\"id\" href=\"#cwnd\">cwnd</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* syn with cubic */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#last_max_cwnd\">last_max_cwnd</a> <= <a class=\"id\" href=\"#cwnd\">cwnd</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#bic_K\">bic_K</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#bic_origin_point\">bic_origin_point</a> = <a class=\"id\" href=\"#cwnd\">cwnd</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Compute new K based on</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * (wmax-cwnd) * (srtt&gt;&gt;3 / HZ) / c * 2^(3*bictcp_HZ)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#bic_K\">bic_K</a> = <a class=\"id\" href=\"#cubic_root\">cubic_root</a>(<a class=\"id\" href=\"#cube_factor\">cube_factor</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       * (<a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#last_max_cwnd\">last_max_cwnd</a> - <a class=\"id\" href=\"#cwnd\">cwnd</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#bic_origin_point\">bic_origin_point</a> = <a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#last_max_cwnd\">last_max_cwnd</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* cubic function - calc*/</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* calculate c * time^3 / rtt,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  while considering overflow in calculation of time^3</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * (so time^3 is done by using 64 bit)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and without the support of division of 64bit numbers</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * (so all divisions are done by using 32 bit)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  also NOTE the unit of those veriables</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>  time  = (t - K) / 2^bictcp_HZ</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>  c = bic_scale &gt;&gt; 10</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * rtt  = (srtt &gt;&gt; 3) / HZ</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * !!! The following code does not have overflow problems,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * if the cwnd &lt; 1 million packets !!!</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* change the unit from HZ to bictcp_HZ */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a> = ((<a class=\"id\" href=\"#tcp_time_stamp\">tcp_time_stamp</a> + (<a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#delay_min\">delay_min</a>>>3) - <a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#epoch_start\">epoch_start</a>)", 
"<span class=\"ts\"/>     << <a class=\"id\" href=\"#BICTCP_HZ\">BICTCP_HZ</a>) / <a class=\"id\" href=\"#HZ\">HZ</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#t\">t</a> &lt; <a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#bic_K\">bic_K</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* t - K */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offs\">offs</a> = <a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#bic_K\">bic_K</a> - <a class=\"id\" href=\"#t\">t</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offs\">offs</a> = <a class=\"id\" href=\"#t\">t</a> - <a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#bic_K\">bic_K</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* c/rtt * (t-K)^3 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#delta\">delta</a> = (<a class=\"id\" href=\"#cube_rtt_scale\">cube_rtt_scale</a> * <a class=\"id\" href=\"#offs\">offs</a> * <a class=\"id\" href=\"#offs\">offs</a> * <a class=\"id\" href=\"#offs\">offs</a>) >> (10+3*<a class=\"id\" href=\"#BICTCP_HZ\">BICTCP_HZ</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#t\">t</a> &lt; <a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#bic_K\">bic_K</a>)                                <span class=\"ts\"/><span class=\"comment\">/* below origin*/</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bic_target\">bic_target</a> = <a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#bic_origin_point\">bic_origin_point</a> - <a class=\"id\" href=\"#delta\">delta</a>;", 
"<span class=\"ts\"/>else                                                <span class=\"ts\"/><span class=\"comment\">/* above origin*/</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bic_target\">bic_target</a> = <a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#bic_origin_point\">bic_origin_point</a> + <a class=\"id\" href=\"#delta\">delta</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* cubic function - calc bictcp_cnt*/</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bic_target\">bic_target</a> &gt; <a class=\"id\" href=\"#cwnd\">cwnd</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#cnt\">cnt</a> = <a class=\"id\" href=\"#cwnd\">cwnd</a> / (<a class=\"id\" href=\"#bic_target\">bic_target</a> - <a class=\"id\" href=\"#cwnd\">cwnd</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#cnt\">cnt</a> = 100 * <a class=\"id\" href=\"#cwnd\">cwnd</a>;              <span class=\"comment\">/* very small increment*/</span>", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* TCP Friendly */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_friendliness\">tcp_friendliness</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#scale\">scale</a> = <a class=\"id\" href=\"#beta_scale\">beta_scale</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#delta\">delta</a> = (<a class=\"id\" href=\"#cwnd\">cwnd</a> * <a class=\"id\" href=\"#scale\">scale</a>) >> 3;", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#ack_cnt\">ack_cnt</a> &gt; <a class=\"id\" href=\"#delta\">delta</a>) {<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* update tcp cwnd */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#ack_cnt\">ack_cnt</a> -= <a class=\"id\" href=\"#delta\">delta</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#tcp_cwnd\">tcp_cwnd</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#tcp_cwnd\">tcp_cwnd</a> &gt; <a class=\"id\" href=\"#cwnd\">cwnd</a>){<span class=\"ts\"/><span class=\"comment\">/* if bic is slower than tcp */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#delta\">delta</a> = <a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#tcp_cwnd\">tcp_cwnd</a> - <a class=\"id\" href=\"#cwnd\">cwnd</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_cnt\">max_cnt</a> = <a class=\"id\" href=\"#cwnd\">cwnd</a> / <a class=\"id\" href=\"#delta\">delta</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#cnt\">cnt</a> &gt; <a class=\"id\" href=\"#max_cnt\">max_cnt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#cnt\">cnt</a> = <a class=\"id\" href=\"#max_cnt\">max_cnt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#cnt\">cnt</a> = (<a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#cnt\">cnt</a> << <a class=\"id\" href=\"#ACK_RATIO_SHIFT\">ACK_RATIO_SHIFT</a>) / <a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#delayed_ack\">delayed_ack</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#cnt\">cnt</a> == 0)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* cannot be zero */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#cnt\">cnt</a> = 1;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#bictcp_cong_avoid\">bictcp_cong_avoid</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ack\">ack</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#in_flight\">in_flight</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bictcp\">bictcp</a> *<a class=\"id\" href=\"#ca\">ca</a> = <a class=\"id\" href=\"#inet_csk_ca\">inet_csk_ca</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tcp_is_cwnd_limited\">tcp_is_cwnd_limited</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#in_flight\">in_flight</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd\">snd_cwnd</a> <= <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_ssthresh\">snd_ssthresh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#hystart\">hystart</a> && <a class=\"id\" href=\"#after\">after</a>(<a class=\"id\" href=\"#ack\">ack</a>, <a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#end_seq\">end_seq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bictcp_hystart_reset\">bictcp_hystart_reset</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_slow_start\">tcp_slow_start</a>(<a class=\"id\" href=\"#tp\">tp</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bictcp_update\">bictcp_update</a>(<a class=\"id\" href=\"#ca\">ca</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd\">snd_cwnd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_cong_avoid_ai\">tcp_cong_avoid_ai</a>(<a class=\"id\" href=\"#tp\">tp</a>, <a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#cnt\">cnt</a>);", 
"<span class=\"ts\"/>}", 
"", 
"}", 
"", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#bictcp_recalc_ssthresh\">bictcp_recalc_ssthresh</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bictcp\">bictcp</a> *<a class=\"id\" href=\"#ca\">ca</a> = <a class=\"id\" href=\"#inet_csk_ca\">inet_csk_ca</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#epoch_start\">epoch_start</a> = 0;<span class=\"ts\"/><span class=\"comment\">/* end of epoch */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Wmax and fast convergence */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd\">snd_cwnd</a> &lt; <a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#last_max_cwnd\">last_max_cwnd</a> && <a class=\"id\" href=\"#fast_convergence\">fast_convergence</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#last_max_cwnd\">last_max_cwnd</a> = (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd\">snd_cwnd</a> * (<a class=\"id\" href=\"#BICTCP_BETA_SCALE\">BICTCP_BETA_SCALE</a> + <a class=\"id\" href=\"#beta\">beta</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>/ (2 * <a class=\"id\" href=\"#BICTCP_BETA_SCALE\">BICTCP_BETA_SCALE</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#last_max_cwnd\">last_max_cwnd</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd\">snd_cwnd</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#loss_cwnd\">loss_cwnd</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd\">snd_cwnd</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#max\">max</a>((<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd\">snd_cwnd</a> * <a class=\"id\" href=\"#beta\">beta</a>) / <a class=\"id\" href=\"#BICTCP_BETA_SCALE\">BICTCP_BETA_SCALE</a>, 2U);", 
"}", 
"", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#bictcp_undo_cwnd\">bictcp_undo_cwnd</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bictcp\">bictcp</a> *<a class=\"id\" href=\"#ca\">ca</a> = <a class=\"id\" href=\"#inet_csk_ca\">inet_csk_ca</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#max\">max</a>(<a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#snd_cwnd\">snd_cwnd</a>, <a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#last_max_cwnd\">last_max_cwnd</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#bictcp_state\">bictcp_state</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#new_state\">new_state</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new_state\">new_state</a> == <a class=\"id\" href=\"#TCP_CA_Loss\">TCP_CA_Loss</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bictcp_reset\">bictcp_reset</a>(<a class=\"id\" href=\"#inet_csk_ca\">inet_csk_ca</a>(<a class=\"id\" href=\"#sk\">sk</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bictcp_hystart_reset\">bictcp_hystart_reset</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#hystart_update\">hystart_update</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#delay\">delay</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bictcp\">bictcp</a> *<a class=\"id\" href=\"#ca\">ca</a> = <a class=\"id\" href=\"#inet_csk_ca\">inet_csk_ca</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#found\">found</a> &amp; <a class=\"id\" href=\"#hystart_detect\">hystart_detect</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#curr_jiffies\">curr_jiffies</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* first detection parameter - ack-train detection */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#curr_jiffies\">curr_jiffies</a> - <a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#last_jiffies\">last_jiffies</a> <= <a class=\"id\" href=\"#msecs_to_jiffies\">msecs_to_jiffies</a>(2)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#last_jiffies\">last_jiffies</a> = <a class=\"id\" href=\"#curr_jiffies\">curr_jiffies</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#curr_jiffies\">curr_jiffies</a> - <a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#round_start\">round_start</a> >= <a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#delay_min\">delay_min</a>>>4)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#found\">found</a> |= <a class=\"id\" href=\"#HYSTART_ACK_TRAIN\">HYSTART_ACK_TRAIN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* obtain the minimum delay of more than sampling packets */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#sample_cnt\">sample_cnt</a> &lt; <a class=\"id\" href=\"#HYSTART_MIN_SAMPLES\">HYSTART_MIN_SAMPLES</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#curr_rtt\">curr_rtt</a> == 0 || <a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#curr_rtt\">curr_rtt</a> &gt; <a class=\"id\" href=\"#delay\">delay</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#curr_rtt\">curr_rtt</a> = <a class=\"id\" href=\"#delay\">delay</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#sample_cnt\">sample_cnt</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#curr_rtt\">curr_rtt</a> &gt; <a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#delay_min\">delay_min</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#HYSTART_DELAY_THRESH\">HYSTART_DELAY_THRESH</a>(<a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#delay_min\">delay_min</a>>>4))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#found\">found</a> |= <a class=\"id\" href=\"#HYSTART_DELAY\">HYSTART_DELAY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Either one of two conditions are met,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * we exit from slow start immediately.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#found\">found</a> &amp; <a class=\"id\" href=\"#hystart_detect\">hystart_detect</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_ssthresh\">snd_ssthresh</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd\">snd_cwnd</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/* Track delayed acknowledgment ratio using sliding window</span>", 
"<span class=\"comment\"> * ratio = (15*ratio + sample) / 16</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#bictcp_acked\">bictcp_acked</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#cnt\">cnt</a>, <a class=\"id\" href=\"#s32\">s32</a> <a class=\"id\" href=\"#rtt_us\">rtt_us</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a> *<a class=\"id\" href=\"#icsk\">icsk</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bictcp\">bictcp</a> *<a class=\"id\" href=\"#ca\">ca</a> = <a class=\"id\" href=\"#inet_csk_ca\">inet_csk_ca</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#delay\">delay</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_ca_state\">icsk_ca_state</a> == <a class=\"id\" href=\"#TCP_CA_Open\">TCP_CA_Open</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cnt\">cnt</a> -= <a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#delayed_ack\">delayed_ack</a> >> <a class=\"id\" href=\"#ACK_RATIO_SHIFT\">ACK_RATIO_SHIFT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#delayed_ack\">delayed_ack</a> += <a class=\"id\" href=\"#cnt\">cnt</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Some calls are for duplicates without timetamps */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rtt_us\">rtt_us</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Discard delay samples right after fast recovery */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#s32\">s32</a>)(<a class=\"id\" href=\"#tcp_time_stamp\">tcp_time_stamp</a> - <a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#epoch_start\">epoch_start</a>) &lt; <a class=\"id\" href=\"#HZ\">HZ</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#delay\">delay</a> = <a class=\"id\" href=\"#usecs_to_jiffies\">usecs_to_jiffies</a>(<a class=\"id\" href=\"#rtt_us\">rtt_us</a>) << 3;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#delay\">delay</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#delay\">delay</a> = 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* first time call or link delay decreases */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#delay_min\">delay_min</a> == 0 || <a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#delay_min\">delay_min</a> &gt; <a class=\"id\" href=\"#delay\">delay</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ca\">ca</a>-><a class=\"id\" href=\"#delay_min\">delay_min</a> = <a class=\"id\" href=\"#delay\">delay</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* hystart triggers when cwnd is larger than some threshold */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hystart\">hystart</a> && <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd\">snd_cwnd</a> <= <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_ssthresh\">snd_ssthresh</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd\">snd_cwnd</a> >= <a class=\"id\" href=\"#hystart_low_window\">hystart_low_window</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hystart_update\">hystart_update</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#delay\">delay</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#tcp_congestion_ops\">tcp_congestion_ops</a> <a class=\"id\" href=\"#cubictcp\">cubictcp</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#init\">init</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#bictcp_init\">bictcp_init</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ssthresh\">ssthresh</a><span class=\"ts\"/>= <a class=\"id\" href=\"#bictcp_recalc_ssthresh\">bictcp_recalc_ssthresh</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#cong_avoid\">cong_avoid</a><span class=\"ts\"/>= <a class=\"id\" href=\"#bictcp_cong_avoid\">bictcp_cong_avoid</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_state\">set_state</a><span class=\"ts\"/>= <a class=\"id\" href=\"#bictcp_state\">bictcp_state</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#undo_cwnd\">undo_cwnd</a><span class=\"ts\"/>= <a class=\"id\" href=\"#bictcp_undo_cwnd\">bictcp_undo_cwnd</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#pkts_acked\">pkts_acked</a>     = <a class=\"id\" href=\"#bictcp_acked\">bictcp_acked</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= \"cubic\",", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#cubictcp_register\">cubictcp_register</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(sizeof(struct <a class=\"id\" href=\"#bictcp\">bictcp</a>) &gt; <a class=\"id\" href=\"#ICSK_CA_PRIV_SIZE\">ICSK_CA_PRIV_SIZE</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Precompute a bunch of the scaling factors that are used per-packet</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * based on SRTT of 100ms</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#beta_scale\">beta_scale</a> = 8*(<a class=\"id\" href=\"#BICTCP_BETA_SCALE\">BICTCP_BETA_SCALE</a>+<a class=\"id\" href=\"#beta\">beta</a>)/ 3 / (<a class=\"id\" href=\"#BICTCP_BETA_SCALE\">BICTCP_BETA_SCALE</a> - <a class=\"id\" href=\"#beta\">beta</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cube_rtt_scale\">cube_rtt_scale</a> = (<a class=\"id\" href=\"#bic_scale\">bic_scale</a> * 10);<span class=\"ts\"/><span class=\"comment\">/* 1024*c/rtt */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* calculate the \"K\" for (wmax-cwnd) = c/rtt * K^3</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  so K = cubic_root( (wmax-cwnd)*rtt/c )</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the unit of K is bictcp_HZ=2^10, not HZ</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  c = bic_scale &gt;&gt; 10</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  rtt = 100ms</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the following code has been designed and tested for</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * cwnd &lt; 1 million packets</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * RTT &lt; 100 seconds</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * HZ &lt; 1,000,00  (corresponding to 10 nano-second)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* 1/c * 2^2*bictcp_HZ * srtt */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cube_factor\">cube_factor</a> = 1ull << (10+3*<a class=\"id\" href=\"#BICTCP_HZ\">BICTCP_HZ</a>); <span class=\"comment\">/* 2^40 */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* divide by bic_scale and by constant Srtt (100ms) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#do_div\">do_div</a>(<a class=\"id\" href=\"#cube_factor\">cube_factor</a>, <a class=\"id\" href=\"#bic_scale\">bic_scale</a> * 10);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tcp_register_congestion_control\">tcp_register_congestion_control</a>(&amp;<a class=\"id\" href=\"#cubictcp\">cubictcp</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__exit\">__exit</a> <a class=\"id\" href=\"#cubictcp_unregister\">cubictcp_unregister</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_unregister_congestion_control\">tcp_unregister_congestion_control</a>(&amp;<a class=\"id\" href=\"#cubictcp\">cubictcp</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#cubictcp_register\">cubictcp_register</a>);", 
"<a class=\"id\" href=\"#module_exit\">module_exit</a>(<a class=\"id\" href=\"#cubictcp_unregister\">cubictcp_unregister</a>);", 
"", 
"<a class=\"id\" href=\"#MODULE_AUTHOR\">MODULE_AUTHOR</a>(\"Sangtae Ha, Stephen Hemminger\");", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
"<a class=\"id\" href=\"#MODULE_DESCRIPTION\">MODULE_DESCRIPTION</a>(\"CUBIC TCP\");", 
"<a class=\"id\" href=\"#MODULE_VERSION\">MODULE_VERSION</a>(\"2.3\");", 
];
xr_frag_insert('l/79/7353a0ada8f2367fa59c88cde0d0e2a0559f2b.xr', __xr_tmp);
