var __xr_tmp = [
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#unistd\">unistd</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#minix_fs\">minix_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ext2_fs\">ext2_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#romfs_fs\">romfs_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#initrd\">initrd</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#freezer\">freezer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"do_mounts.h\"", 
"", 
"unsigned long <a class=\"id\" href=\"#initrd_start\">initrd_start</a>, <a class=\"id\" href=\"#initrd_end\">initrd_end</a>;", 
"int <a class=\"id\" href=\"#initrd_below_start_ok\">initrd_below_start_ok</a>;", 
"unsigned int <a class=\"id\" href=\"#real_root_dev\">real_root_dev</a>;<span class=\"ts\"/><span class=\"comment\">/* do_proc_dointvec cannot handle kdev_t */</span>", 
"static int <a class=\"id\" href=\"#__initdata\">__initdata</a> <a class=\"id\" href=\"#old_fd\">old_fd</a>, <a class=\"id\" href=\"#root_fd\">root_fd</a>;", 
"static int <a class=\"id\" href=\"#__initdata\">__initdata</a> <a class=\"id\" href=\"#mount_initrd\">mount_initrd</a> = 1;", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#no_initrd\">no_initrd</a>(char *<a class=\"id\" href=\"#str\">str</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mount_initrd\">mount_initrd</a> = 0;", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<a class=\"id\" href=\"#__setup\">__setup</a>(\"noinitrd\", <a class=\"id\" href=\"#no_initrd\">no_initrd</a>);", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#do_linuxrc\">do_linuxrc</a>(void *<a class=\"id\" href=\"#_shell\">_shell</a>)", 
"{", 
"<span class=\"ts\"/>static const char *<a class=\"id\" href=\"#argv\">argv</a>[] = { \"linuxrc\", <a class=\"id\" href=\"#NULL\">NULL</a>, };", 
"<span class=\"ts\"/>extern const char *<a class=\"id\" href=\"#envp_init\">envp_init</a>[];", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#shell\">shell</a> = <a class=\"id\" href=\"#_shell\">_shell</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sys_close\">sys_close</a>(<a class=\"id\" href=\"#old_fd\">old_fd</a>);<a class=\"id\" href=\"#sys_close\">sys_close</a>(<a class=\"id\" href=\"#root_fd\">root_fd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sys_setsid\">sys_setsid</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#kernel_execve\">kernel_execve</a>(<a class=\"id\" href=\"#shell\">shell</a>, <a class=\"id\" href=\"#argv\">argv</a>, <a class=\"id\" href=\"#envp_init\">envp_init</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#handle_initrd\">handle_initrd</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#pid\">pid</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#real_root_dev\">real_root_dev</a> = <a class=\"id\" href=\"#new_encode_dev\">new_encode_dev</a>(<a class=\"id\" href=\"#ROOT_DEV\">ROOT_DEV</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#create_dev\">create_dev</a>(\"/dev/root.old\", <a class=\"id\" href=\"#Root_RAM0\">Root_RAM0</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* mount initrd on rootfs' /root */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mount_block_root\">mount_block_root</a>(\"/dev/root.old\", <a class=\"id\" href=\"#root_mountflags\">root_mountflags</a> &amp; ~<a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sys_mkdir\">sys_mkdir</a>(\"/old\", 0700);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#root_fd\">root_fd</a> = <a class=\"id\" href=\"#sys_open\">sys_open</a>(\"/\", 0, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_fd\">old_fd</a> = <a class=\"id\" href=\"#sys_open\">sys_open</a>(\"/old\", 0, 0);", 
"<span class=\"ts\"/><span class=\"comment\">/* move initrd over / and chdir/chroot in initrd root */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sys_chdir\">sys_chdir</a>(\"/root\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sys_mount\">sys_mount</a>(\".\", \"/\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#MS_MOVE\">MS_MOVE</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sys_chroot\">sys_chroot</a>(\".\");", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * In case that a resume from disk is carried out by linuxrc or one of</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * its children, we need to tell the freezer not to wait for us.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#PF_FREEZER_SKIP\">PF_FREEZER_SKIP</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pid\">pid</a> = <a class=\"id\" href=\"#kernel_thread\">kernel_thread</a>(<a class=\"id\" href=\"#do_linuxrc\">do_linuxrc</a>, \"/linuxrc\", <a class=\"id\" href=\"#SIGCHLD\">SIGCHLD</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pid\">pid</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#pid\">pid</a> != <a class=\"id\" href=\"#sys_wait4\">sys_wait4</a>(-1, <a class=\"id\" href=\"#NULL\">NULL</a>, 0, <a class=\"id\" href=\"#NULL\">NULL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#yield\">yield</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#PF_FREEZER_SKIP\">PF_FREEZER_SKIP</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* move initrd to rootfs' /old */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sys_fchdir\">sys_fchdir</a>(<a class=\"id\" href=\"#old_fd\">old_fd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sys_mount\">sys_mount</a>(\"/\", \".\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#MS_MOVE\">MS_MOVE</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* switch root and cwd back to / of rootfs */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sys_fchdir\">sys_fchdir</a>(<a class=\"id\" href=\"#root_fd\">root_fd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sys_chroot\">sys_chroot</a>(\".\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sys_close\">sys_close</a>(<a class=\"id\" href=\"#old_fd\">old_fd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sys_close\">sys_close</a>(<a class=\"id\" href=\"#root_fd\">root_fd</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new_decode_dev\">new_decode_dev</a>(<a class=\"id\" href=\"#real_root_dev\">real_root_dev</a>) == <a class=\"id\" href=\"#Root_RAM0\">Root_RAM0</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sys_chdir\">sys_chdir</a>(\"/old\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ROOT_DEV\">ROOT_DEV</a> = <a class=\"id\" href=\"#new_decode_dev\">new_decode_dev</a>(<a class=\"id\" href=\"#real_root_dev\">real_root_dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mount_root\">mount_root</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a> \"Trying to move old root to /initrd ... \");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#sys_mount\">sys_mount</a>(\"/old\", \"/root/initrd\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#MS_MOVE\">MS_MOVE</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"okay\\n\");", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#fd\">fd</a> = <a class=\"id\" href=\"#sys_open\">sys_open</a>(\"/dev/root.old\", <a class=\"id\" href=\"#O_RDWR\">O_RDWR</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> == -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"/initrd does not exist. Ignored.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"failed\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a> \"Unmounting old root\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sys_umount\">sys_umount</a>(\"/old\", <a class=\"id\" href=\"#MNT_DETACH\">MNT_DETACH</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a> \"Trying to free ramdisk memory ... \");", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fd\">fd</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#fd\">fd</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#sys_ioctl\">sys_ioctl</a>(<a class=\"id\" href=\"#fd\">fd</a>, <a class=\"id\" href=\"#BLKFLSBUF\">BLKFLSBUF</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sys_close\">sys_close</a>(<a class=\"id\" href=\"#fd\">fd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(!<a class=\"id\" href=\"#error\">error</a> ? \"okay\\n\" : \"failed\\n\");", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#initrd_load\">initrd_load</a>(void)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mount_initrd\">mount_initrd</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#create_dev\">create_dev</a>(\"/dev/ram\", <a class=\"id\" href=\"#Root_RAM0\">Root_RAM0</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Load the initrd data into /dev/ram0. Execute it as initrd</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * unless /dev/ram0 is supposed to be our actual root device,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * in that case the ram disk is just set up here, and gets</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * mounted in the normal path.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rd_load_image\">rd_load_image</a>(\"/initrd.image\") && <a class=\"id\" href=\"#ROOT_DEV\">ROOT_DEV</a> != <a class=\"id\" href=\"#Root_RAM0\">Root_RAM0</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sys_unlink\">sys_unlink</a>(\"/initrd.image\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#handle_initrd\">handle_initrd</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sys_unlink\">sys_unlink</a>(\"/initrd.image\");", 
"<span class=\"ts\"/>return 0;", 
"}", 
];
xr_frag_insert('l/79/e1f5d70c9dd00f9fc4f33c027423222366398e.xr', __xr_tmp);
