var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_BLOCKGROUP_LOCK_H\">_LINUX_BLOCKGROUP_LOCK_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_BLOCKGROUP_LOCK_H\">_LINUX_BLOCKGROUP_LOCK_H</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Per-blockgroup locking for ext2 and ext3.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Simple hashed spinlocking.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cache\">cache</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * We want a power-of-two.  Is there a better way than this?</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#if <a class=\"id\" href=\"#NR_CPUS\">NR_CPUS</a> >= 32", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NR_BG_LOCKS\">NR_BG_LOCKS</a><span class=\"ts\"/>128", 
"#<a class=\"id\" href=\"#elif\">elif</a> <a class=\"id\" href=\"#NR_CPUS\">NR_CPUS</a> >= 16", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NR_BG_LOCKS\">NR_BG_LOCKS</a><span class=\"ts\"/>64", 
"#<a class=\"id\" href=\"#elif\">elif</a> <a class=\"id\" href=\"#NR_CPUS\">NR_CPUS</a> >= 8", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NR_BG_LOCKS\">NR_BG_LOCKS</a><span class=\"ts\"/>32", 
"#<a class=\"id\" href=\"#elif\">elif</a> <a class=\"id\" href=\"#NR_CPUS\">NR_CPUS</a> >= 4", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NR_BG_LOCKS\">NR_BG_LOCKS</a><span class=\"ts\"/>16", 
"#<a class=\"id\" href=\"#elif\">elif</a> <a class=\"id\" href=\"#NR_CPUS\">NR_CPUS</a> >= 2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NR_BG_LOCKS\">NR_BG_LOCKS</a><span class=\"ts\"/>8", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NR_BG_LOCKS\">NR_BG_LOCKS</a><span class=\"ts\"/>4", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#else<span class=\"ts\"/><span class=\"comment\">/* CONFIG_SMP */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NR_BG_LOCKS\">NR_BG_LOCKS</a><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* CONFIG_SMP */</span>", 
"", 
"struct <a class=\"id\" href=\"#bgl_lock\">bgl_lock</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> <a class=\"id\" href=\"#lock\">lock</a>;", 
"} <a class=\"id\" href=\"#____cacheline_aligned_in_smp\">____cacheline_aligned_in_smp</a>;", 
"", 
"struct <a class=\"id\" href=\"#blockgroup_lock\">blockgroup_lock</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bgl_lock\">bgl_lock</a> <a class=\"id\" href=\"#locks\">locks</a>[<a class=\"id\" href=\"#NR_BG_LOCKS\">NR_BG_LOCKS</a>];", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#bgl_lock_init\">bgl_lock_init</a>(struct <a class=\"id\" href=\"#blockgroup_lock\">blockgroup_lock</a> *<a class=\"id\" href=\"#bgl\">bgl</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#NR_BG_LOCKS\">NR_BG_LOCKS</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#bgl\">bgl</a>-><a class=\"id\" href=\"#locks\">locks</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The accessor is a macro so we can embed a blockgroup_lock into different</span>", 
"<span class=\"comment\"> * superblock types</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> *", 
"<a class=\"id\" href=\"#bgl_lock_ptr\">bgl_lock_ptr</a>(struct <a class=\"id\" href=\"#blockgroup_lock\">blockgroup_lock</a> *<a class=\"id\" href=\"#bgl\">bgl</a>, unsigned int <a class=\"id\" href=\"#block_group\">block_group</a>)", 
"{", 
"<span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#bgl\">bgl</a>-><a class=\"id\" href=\"#locks\">locks</a>[(<a class=\"id\" href=\"#block_group\">block_group</a>) &amp; (<a class=\"id\" href=\"#NR_BG_LOCKS\">NR_BG_LOCKS</a>-1)].<a class=\"id\" href=\"#lock\">lock</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/7b/50d712817e13ad726318f7ed41256f2096a8a4.xr', __xr_tmp);
