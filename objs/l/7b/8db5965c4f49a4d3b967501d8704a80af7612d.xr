var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>UDP over IPv6</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Linux INET6 implementation</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Authors:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Pedro Roque<span class=\"ts\"/><span class=\"ts\"/>&lt;roque@di.fc.ul.pt&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Based on linux/ipv4/udp.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Fixes:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Hideaki YOSHIFUJI<span class=\"ts\"/>:<span class=\"ts\"/>sin6_scope_id support</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>YOSHIFUJI Hideaki @USAGI and:<span class=\"ts\"/>Support IPV6_V6ONLY socket option, which</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Alexey Kuznetsov<span class=\"ts\"/><span class=\"ts\"/>allow both IPv4 and IPv6 sockets to bind</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>a single port at the same time.</span>", 
"<span class=\"comment\"> *      Kazunori MIYAZAWA @USAGI:       change process style to use ip6_append_data</span>", 
"<span class=\"comment\"> *      YOSHIFUJI Hideaki @USAGI:<span class=\"ts\"/>convert /proc/net/udp6 to seq_file.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *      modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *      as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *      2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sockios\">sockios</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#in6\">in6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netdevice\">netdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#if_arp\">if_arp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#icmpv6\">icmpv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#skbuff\">skbuff</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ndisc\">ndisc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#protocol\">protocol</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#transp_v6\">transp_v6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip6_route\">ip6_route</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#raw\">raw</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#tcp_states\">tcp_states</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip6_checksum\">ip6_checksum</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#xfrm\">xfrm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"udp_impl.h\"", 
"", 
"int <a class=\"id\" href=\"#ipv6_rcv_saddr_equal\">ipv6_rcv_saddr_equal</a>(const struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, const struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk2\">sk2</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#sk_rcv_saddr6\">sk_rcv_saddr6</a> = &amp;<a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#rcv_saddr\">rcv_saddr</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#sk2_rcv_saddr6\">sk2_rcv_saddr6</a> = <a class=\"id\" href=\"#inet6_rcv_saddr\">inet6_rcv_saddr</a>(<a class=\"id\" href=\"#sk2\">sk2</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#sk1_rcv_saddr\">sk1_rcv_saddr</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#inet_rcv_saddr\">inet_rcv_saddr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#sk2_rcv_saddr\">sk2_rcv_saddr</a> = <a class=\"id\" href=\"#inet_rcv_saddr\">inet_rcv_saddr</a>(<a class=\"id\" href=\"#sk2\">sk2</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#sk_ipv6only\">sk_ipv6only</a> = <a class=\"id\" href=\"#ipv6_only_sock\">ipv6_only_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#sk2_ipv6only\">sk2_ipv6only</a> = <a class=\"id\" href=\"#inet_v6_ipv6only\">inet_v6_ipv6only</a>(<a class=\"id\" href=\"#sk2\">sk2</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#addr_type\">addr_type</a> = <a class=\"id\" href=\"#ipv6_addr_type\">ipv6_addr_type</a>(<a class=\"id\" href=\"#sk_rcv_saddr6\">sk_rcv_saddr6</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#addr_type2\">addr_type2</a> = <a class=\"id\" href=\"#sk2_rcv_saddr6\">sk2_rcv_saddr6</a> ? <a class=\"id\" href=\"#ipv6_addr_type\">ipv6_addr_type</a>(<a class=\"id\" href=\"#sk2_rcv_saddr6\">sk2_rcv_saddr6</a>) : <a class=\"id\" href=\"#IPV6_ADDR_MAPPED\">IPV6_ADDR_MAPPED</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* if both are mapped, treat as IPv4 */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr_type\">addr_type</a> == <a class=\"id\" href=\"#IPV6_ADDR_MAPPED\">IPV6_ADDR_MAPPED</a> && <a class=\"id\" href=\"#addr_type2\">addr_type2</a> == <a class=\"id\" href=\"#IPV6_ADDR_MAPPED\">IPV6_ADDR_MAPPED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return (!<a class=\"id\" href=\"#sk2_ipv6only\">sk2_ipv6only</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(!<a class=\"id\" href=\"#sk1_rcv_saddr\">sk1_rcv_saddr</a> || !<a class=\"id\" href=\"#sk2_rcv_saddr\">sk2_rcv_saddr</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#sk1_rcv_saddr\">sk1_rcv_saddr</a> == <a class=\"id\" href=\"#sk2_rcv_saddr\">sk2_rcv_saddr</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr_type2\">addr_type2</a> == <a class=\"id\" href=\"#IPV6_ADDR_ANY\">IPV6_ADDR_ANY</a> &&", 
"<span class=\"ts\"/>    !(<a class=\"id\" href=\"#sk2_ipv6only\">sk2_ipv6only</a> && <a class=\"id\" href=\"#addr_type\">addr_type</a> == <a class=\"id\" href=\"#IPV6_ADDR_MAPPED\">IPV6_ADDR_MAPPED</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr_type\">addr_type</a> == <a class=\"id\" href=\"#IPV6_ADDR_ANY\">IPV6_ADDR_ANY</a> &&", 
"<span class=\"ts\"/>    !(<a class=\"id\" href=\"#sk_ipv6only\">sk_ipv6only</a> && <a class=\"id\" href=\"#addr_type2\">addr_type2</a> == <a class=\"id\" href=\"#IPV6_ADDR_MAPPED\">IPV6_ADDR_MAPPED</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk2_rcv_saddr6\">sk2_rcv_saddr6</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(<a class=\"id\" href=\"#sk_rcv_saddr6\">sk_rcv_saddr6</a>, <a class=\"id\" href=\"#sk2_rcv_saddr6\">sk2_rcv_saddr6</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static unsigned int <a class=\"id\" href=\"#udp6_portaddr_hash\">udp6_portaddr_hash</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr6\">addr6</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned int <a class=\"id\" href=\"#port\">port</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#hash\">hash</a>, <a class=\"id\" href=\"#mix\">mix</a> = <a class=\"id\" href=\"#net_hash_mix\">net_hash_mix</a>(<a class=\"id\" href=\"#net\">net</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_any\">ipv6_addr_any</a>(<a class=\"id\" href=\"#addr6\">addr6</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#jhash_1word\">jhash_1word</a>(0, <a class=\"id\" href=\"#mix\">mix</a>);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#ipv6_addr_v4mapped\">ipv6_addr_v4mapped</a>(<a class=\"id\" href=\"#addr6\">addr6</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#jhash_1word\">jhash_1word</a>((<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#addr6\">addr6</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[3], <a class=\"id\" href=\"#mix\">mix</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#jhash2\">jhash2</a>((<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a> *)<a class=\"id\" href=\"#addr6\">addr6</a>-><a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>, 4, <a class=\"id\" href=\"#mix\">mix</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#hash\">hash</a> ^ <a class=\"id\" href=\"#port\">port</a>;", 
"}", 
"", 
"", 
"int <a class=\"id\" href=\"#udp_v6_get_port\">udp_v6_get_port</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, unsigned short <a class=\"id\" href=\"#snum\">snum</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#hash2_nulladdr\">hash2_nulladdr</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#udp6_portaddr_hash\">udp6_portaddr_hash</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), &amp;<a class=\"id\" href=\"#in6addr_any\">in6addr_any</a>, <a class=\"id\" href=\"#snum\">snum</a>);", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#hash2_partial\">hash2_partial</a> = ", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#udp6_portaddr_hash\">udp6_portaddr_hash</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), &amp;<a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#rcv_saddr\">rcv_saddr</a>, 0);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* precompute partial secondary hash */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#udp_sk\">udp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#udp_portaddr_hash\">udp_portaddr_hash</a> = <a class=\"id\" href=\"#hash2_partial\">hash2_partial</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#udp_lib_get_port\">udp_lib_get_port</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#snum\">snum</a>, <a class=\"id\" href=\"#ipv6_rcv_saddr_equal\">ipv6_rcv_saddr_equal</a>, <a class=\"id\" href=\"#hash2_nulladdr\">hash2_nulladdr</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#udp_v6_rehash\">udp_v6_rehash</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#new_hash\">new_hash</a> = <a class=\"id\" href=\"#udp6_portaddr_hash\">udp6_portaddr_hash</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#rcv_saddr\">rcv_saddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#inet_num\">inet_num</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#udp_lib_rehash\">udp_lib_rehash</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#new_hash\">new_hash</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#compute_score\">compute_score</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#hnum\">hnum</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#sport\">sport</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#dport\">dport</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#dif\">dif</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#score\">score</a> = -1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#net_eq\">net_eq</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#net\">net</a>) && <a class=\"id\" href=\"#udp_sk\">udp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#udp_port_hash\">udp_port_hash</a> == <a class=\"id\" href=\"#hnum\">hnum</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_family\">sk_family</a> == <a class=\"id\" href=\"#PF_INET6\">PF_INET6</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#np\">np</a> = <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#score\">score</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_dport\">inet_dport</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_dport\">inet_dport</a> != <a class=\"id\" href=\"#sport\">sport</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#score\">score</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ipv6_addr_any\">ipv6_addr_any</a>(&amp;<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#rcv_saddr\">rcv_saddr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(&amp;<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#rcv_saddr\">rcv_saddr</a>, <a class=\"id\" href=\"#daddr\">daddr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#score\">score</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ipv6_addr_any\">ipv6_addr_any</a>(&amp;<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#daddr\">daddr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(&amp;<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#saddr\">saddr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#score\">score</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_bound_dev_if\">sk_bound_dev_if</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_bound_dev_if\">sk_bound_dev_if</a> != <a class=\"id\" href=\"#dif\">dif</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#score\">score</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#score\">score</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SCORE2_MAX\">SCORE2_MAX</a> (1 + 1 + 1)", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#compute_score2\">compute_score2</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#sport\">sport</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#daddr\">daddr</a>, unsigned short <a class=\"id\" href=\"#hnum\">hnum</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#dif\">dif</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#score\">score</a> = -1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#net_eq\">net_eq</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#net\">net</a>) && <a class=\"id\" href=\"#udp_sk\">udp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#udp_port_hash\">udp_port_hash</a> == <a class=\"id\" href=\"#hnum\">hnum</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_family\">sk_family</a> == <a class=\"id\" href=\"#PF_INET6\">PF_INET6</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#np\">np</a> = <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(&amp;<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#rcv_saddr\">rcv_saddr</a>, <a class=\"id\" href=\"#daddr\">daddr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#score\">score</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_dport\">inet_dport</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_dport\">inet_dport</a> != <a class=\"id\" href=\"#sport\">sport</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#score\">score</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ipv6_addr_any\">ipv6_addr_any</a>(&amp;<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#daddr\">daddr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(&amp;<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#saddr\">saddr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#score\">score</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_bound_dev_if\">sk_bound_dev_if</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_bound_dev_if\">sk_bound_dev_if</a> != <a class=\"id\" href=\"#dif\">dif</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#score\">score</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#score\">score</a>;", 
"}", 
"", 
"", 
"<span class=\"comment\">/* called with read_rcu_lock() */</span>", 
"static struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#udp6_lib_lookup2\">udp6_lib_lookup2</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#sport\">sport</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#daddr\">daddr</a>, unsigned int <a class=\"id\" href=\"#hnum\">hnum</a>, int <a class=\"id\" href=\"#dif\">dif</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#udp_hslot\">udp_hslot</a> *<a class=\"id\" href=\"#hslot2\">hslot2</a>, unsigned int <a class=\"id\" href=\"#slot2\">slot2</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, *<a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_nulls_node\">hlist_nulls_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#score\">score</a>, <a class=\"id\" href=\"#badness\">badness</a>;", 
"", 
"<a class=\"id\" href=\"#begin\">begin</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#badness\">badness</a> = -1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#udp_portaddr_for_each_entry_rcu\">udp_portaddr_for_each_entry_rcu</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#node\">node</a>, &amp;<a class=\"id\" href=\"#hslot2\">hslot2</a>-><a class=\"id\" href=\"#head\">head</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#score\">score</a> = <a class=\"id\" href=\"#compute_score2\">compute_score2</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#sport\">sport</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#hnum\">hnum</a>, <a class=\"id\" href=\"#dif\">dif</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#score\">score</a> &gt; <a class=\"id\" href=\"#badness\">badness</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#badness\">badness</a> = <a class=\"id\" href=\"#score\">score</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#score\">score</a> == <a class=\"id\" href=\"#SCORE2_MAX\">SCORE2_MAX</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exact_match\">exact_match</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * if the nulls value we got at the end of this lookup is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * not the expected one, we must restart lookup.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We probably met an item that was moved to another chain.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#get_nulls_value\">get_nulls_value</a>(<a class=\"id\" href=\"#node\">node</a>) != <a class=\"id\" href=\"#slot2\">slot2</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#begin\">begin</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#result\">result</a>) {", 
"<a class=\"id\" href=\"#exact_match\">exact_match</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#atomic_inc_not_zero\">atomic_inc_not_zero</a>(&amp;<a class=\"id\" href=\"#result\">result</a>-><a class=\"id\" href=\"#sk_refcnt\">sk_refcnt</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#compute_score2\">compute_score2</a>(<a class=\"id\" href=\"#result\">result</a>, <a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#sport\">sport</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#hnum\">hnum</a>, <a class=\"id\" href=\"#dif\">dif</a>) &lt; <a class=\"id\" href=\"#badness\">badness</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_put\">sock_put</a>(<a class=\"id\" href=\"#result\">result</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#begin\">begin</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#__udp6_lib_lookup\">__udp6_lib_lookup</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#sport\">sport</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#dport\">dport</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      int <a class=\"id\" href=\"#dif\">dif</a>, struct <a class=\"id\" href=\"#udp_table\">udp_table</a> *<a class=\"id\" href=\"#udptable\">udptable</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, *<a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_nulls_node\">hlist_nulls_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#hnum\">hnum</a> = <a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#dport\">dport</a>);", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#hash2\">hash2</a>, <a class=\"id\" href=\"#slot2\">slot2</a>, <a class=\"id\" href=\"#slot\">slot</a> = <a class=\"id\" href=\"#udp_hashfn\">udp_hashfn</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#hnum\">hnum</a>, <a class=\"id\" href=\"#udptable\">udptable</a>-><a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#udp_hslot\">udp_hslot</a> *<a class=\"id\" href=\"#hslot2\">hslot2</a>, *<a class=\"id\" href=\"#hslot\">hslot</a> = &amp;<a class=\"id\" href=\"#udptable\">udptable</a>-><a class=\"id\" href=\"#hash\">hash</a>[<a class=\"id\" href=\"#slot\">slot</a>];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#score\">score</a>, <a class=\"id\" href=\"#badness\">badness</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hslot\">hslot</a>-><a class=\"id\" href=\"#count\">count</a> &gt; 10) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hash2\">hash2</a> = <a class=\"id\" href=\"#udp6_portaddr_hash\">udp6_portaddr_hash</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#hnum\">hnum</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#slot2\">slot2</a> = <a class=\"id\" href=\"#hash2\">hash2</a> &amp; <a class=\"id\" href=\"#udptable\">udptable</a>-><a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hslot2\">hslot2</a> = &amp;<a class=\"id\" href=\"#udptable\">udptable</a>-><a class=\"id\" href=\"#hash2\">hash2</a>[<a class=\"id\" href=\"#slot2\">slot2</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#hslot\">hslot</a>-><a class=\"id\" href=\"#count\">count</a> &lt; <a class=\"id\" href=\"#hslot2\">hslot2</a>-><a class=\"id\" href=\"#count\">count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#begin\">begin</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#udp6_lib_lookup2\">udp6_lib_lookup2</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#sport\">sport</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#hnum\">hnum</a>, <a class=\"id\" href=\"#dif\">dif</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#hslot2\">hslot2</a>, <a class=\"id\" href=\"#slot2\">slot2</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#result\">result</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hash2\">hash2</a> = <a class=\"id\" href=\"#udp6_portaddr_hash\">udp6_portaddr_hash</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#in6addr_any\">in6addr_any</a>, <a class=\"id\" href=\"#hnum\">hnum</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#slot2\">slot2</a> = <a class=\"id\" href=\"#hash2\">hash2</a> &amp; <a class=\"id\" href=\"#udptable\">udptable</a>-><a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hslot2\">hslot2</a> = &amp;<a class=\"id\" href=\"#udptable\">udptable</a>-><a class=\"id\" href=\"#hash2\">hash2</a>[<a class=\"id\" href=\"#slot2\">slot2</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#hslot\">hslot</a>-><a class=\"id\" href=\"#count\">count</a> &lt; <a class=\"id\" href=\"#hslot2\">hslot2</a>-><a class=\"id\" href=\"#count\">count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#begin\">begin</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#udp6_lib_lookup2\">udp6_lib_lookup2</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#sport\">sport</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#in6addr_any\">in6addr_any</a>, <a class=\"id\" href=\"#hnum\">hnum</a>, <a class=\"id\" href=\"#dif\">dif</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#hslot2\">hslot2</a>, <a class=\"id\" href=\"#slot2\">slot2</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#begin\">begin</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#badness\">badness</a> = -1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_nulls_for_each_rcu\">sk_nulls_for_each_rcu</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#node\">node</a>, &amp;<a class=\"id\" href=\"#hslot\">hslot</a>-><a class=\"id\" href=\"#head\">head</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#score\">score</a> = <a class=\"id\" href=\"#compute_score\">compute_score</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#hnum\">hnum</a>, <a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#sport\">sport</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#dport\">dport</a>, <a class=\"id\" href=\"#dif\">dif</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#score\">score</a> &gt; <a class=\"id\" href=\"#badness\">badness</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#badness\">badness</a> = <a class=\"id\" href=\"#score\">score</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * if the nulls value we got at the end of this lookup is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * not the expected one, we must restart lookup.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We probably met an item that was moved to another chain.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#get_nulls_value\">get_nulls_value</a>(<a class=\"id\" href=\"#node\">node</a>) != <a class=\"id\" href=\"#slot\">slot</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#begin\">begin</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#result\">result</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#atomic_inc_not_zero\">atomic_inc_not_zero</a>(&amp;<a class=\"id\" href=\"#result\">result</a>-><a class=\"id\" href=\"#sk_refcnt\">sk_refcnt</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#compute_score\">compute_score</a>(<a class=\"id\" href=\"#result\">result</a>, <a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#hnum\">hnum</a>, <a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#sport\">sport</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#dport\">dport</a>, <a class=\"id\" href=\"#dif\">dif</a>) &lt; <a class=\"id\" href=\"#badness\">badness</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_put\">sock_put</a>(<a class=\"id\" href=\"#result\">result</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#begin\">begin</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#__udp6_lib_lookup_skb\">__udp6_lib_lookup_skb</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#sport\">sport</a>, <a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#dport\">dport</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#udp_table\">udp_table</a> *<a class=\"id\" href=\"#udptable\">udptable</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a> *<a class=\"id\" href=\"#iph\">iph</a> = <a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#skb_steal_sock\">skb_steal_sock</a>(<a class=\"id\" href=\"#skb\">skb</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__udp6_lib_lookup\">__udp6_lib_lookup</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#dev\">dev</a>), &amp;<a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#sport\">sport</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> &amp;<a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#dport\">dport</a>, <a class=\"id\" href=\"#inet6_iif\">inet6_iif</a>(<a class=\"id\" href=\"#skb\">skb</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#udptable\">udptable</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>This should be easy, if there is something there we</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>return it, otherwise we block.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#udpv6_recvmsg\">udpv6_recvmsg</a>(struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *<a class=\"id\" href=\"#iocb\">iocb</a>, struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#msghdr\">msghdr</a> *<a class=\"id\" href=\"#msg\">msg</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  int <a class=\"id\" href=\"#noblock\">noblock</a>, int <a class=\"id\" href=\"#flags\">flags</a>, int *<a class=\"id\" href=\"#addr_len\">addr_len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#np\">np</a> = <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#ulen\">ulen</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#peeked\">peeked</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#is_udplite\">is_udplite</a> = <a class=\"id\" href=\"#IS_UDPLITE\">IS_UDPLITE</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#is_udp4\">is_udp4</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#slow\">slow</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr_len\">addr_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#addr_len\">addr_len</a>=sizeof(struct <a class=\"id\" href=\"#sockaddr_in6\">sockaddr_in6</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#MSG_ERRQUEUE\">MSG_ERRQUEUE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ipv6_recv_error\">ipv6_recv_error</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#msg\">msg</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#rxpmtu\">rxpmtu</a> && <a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#rxopt\">rxopt</a>.<a class=\"id\" href=\"#bits\">bits</a>.<a class=\"id\" href=\"#rxpmtu\">rxpmtu</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ipv6_recv_rxpmtu\">ipv6_recv_rxpmtu</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#msg\">msg</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<a class=\"id\" href=\"#try_again\">try_again</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#__skb_recv_datagram\">__skb_recv_datagram</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#flags\">flags</a> | (<a class=\"id\" href=\"#noblock\">noblock</a> ? <a class=\"id\" href=\"#MSG_DONTWAIT\">MSG_DONTWAIT</a> : 0),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#peeked\">peeked</a>, &amp;<a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb\">skb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ulen\">ulen</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> - sizeof(struct <a class=\"id\" href=\"#udphdr\">udphdr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#ulen\">ulen</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#ulen\">ulen</a>;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#len\">len</a> &lt; <a class=\"id\" href=\"#ulen\">ulen</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#msg_flags\">msg_flags</a> |= <a class=\"id\" href=\"#MSG_TRUNC\">MSG_TRUNC</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#is_udp4\">is_udp4</a> = (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#protocol\">protocol</a> == <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ETH_P_IP\">ETH_P_IP</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If checksum is needed at all, try to do it while copying the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * data.  If the data is truncated, or if we only want a partial</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * coverage checksum (UDP-Lite), do it before the copy.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &lt; <a class=\"id\" href=\"#ulen\">ulen</a> || <a class=\"id\" href=\"#UDP_SKB_CB\">UDP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#partial_cov\">partial_cov</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#udp_lib_checksum_complete\">udp_lib_checksum_complete</a>(<a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#csum_copy_err\">csum_copy_err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_csum_unnecessary\">skb_csum_unnecessary</a>(<a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#skb_copy_datagram_iovec\">skb_copy_datagram_iovec</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(struct <a class=\"id\" href=\"#udphdr\">udphdr</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#msg_iov\">msg_iov</a>,<a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#skb_copy_and_csum_datagram_iovec\">skb_copy_and_csum_datagram_iovec</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(struct <a class=\"id\" href=\"#udphdr\">udphdr</a>), <a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#msg_iov\">msg_iov</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#csum_copy_err\">csum_copy_err</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free\">out_free</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#peeked\">peeked</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#is_udp4\">is_udp4</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#UDP_INC_STATS_USER\">UDP_INC_STATS_USER</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#UDP_MIB_INDATAGRAMS\">UDP_MIB_INDATAGRAMS</a>, <a class=\"id\" href=\"#is_udplite\">is_udplite</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#UDP6_INC_STATS_USER\">UDP6_INC_STATS_USER</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#UDP_MIB_INDATAGRAMS\">UDP_MIB_INDATAGRAMS</a>, <a class=\"id\" href=\"#is_udplite\">is_udplite</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_recv_ts_and_drops\">sock_recv_ts_and_drops</a>(<a class=\"id\" href=\"#msg\">msg</a>, <a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Copy the address. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#msg_name\">msg_name</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_in6\">sockaddr_in6</a> *<a class=\"id\" href=\"#sin6\">sin6</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sin6\">sin6</a> = (struct <a class=\"id\" href=\"#sockaddr_in6\">sockaddr_in6</a> *) <a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#msg_name\">msg_name</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sin6\">sin6</a>-><a class=\"id\" href=\"#sin6_family\">sin6_family</a> = <a class=\"id\" href=\"#AF_INET6\">AF_INET6</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sin6\">sin6</a>-><a class=\"id\" href=\"#sin6_port\">sin6_port</a> = <a class=\"id\" href=\"#udp_hdr\">udp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#source\">source</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sin6\">sin6</a>-><a class=\"id\" href=\"#sin6_flowinfo\">sin6_flowinfo</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sin6\">sin6</a>-><a class=\"id\" href=\"#sin6_scope_id\">sin6_scope_id</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#is_udp4\">is_udp4</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_set_v4mapped\">ipv6_addr_set_v4mapped</a>(<a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#saddr\">saddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#sin6\">sin6</a>-><a class=\"id\" href=\"#sin6_addr\">sin6_addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#sin6\">sin6</a>-><a class=\"id\" href=\"#sin6_addr\">sin6_addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#saddr\">saddr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_type\">ipv6_addr_type</a>(&amp;<a class=\"id\" href=\"#sin6\">sin6</a>-><a class=\"id\" href=\"#sin6_addr\">sin6_addr</a>) &amp; <a class=\"id\" href=\"#IPV6_ADDR_LINKLOCAL\">IPV6_ADDR_LINKLOCAL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sin6\">sin6</a>-><a class=\"id\" href=\"#sin6_scope_id\">sin6_scope_id</a> = <a class=\"id\" href=\"#IP6CB\">IP6CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#iif\">iif</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_udp4\">is_udp4</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#cmsg_flags\">cmsg_flags</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip_cmsg_recv\">ip_cmsg_recv</a>(<a class=\"id\" href=\"#msg\">msg</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#rxopt\">rxopt</a>.<a class=\"id\" href=\"#all\">all</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#datagram_recv_ctl\">datagram_recv_ctl</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#msg\">msg</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#MSG_TRUNC\">MSG_TRUNC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ulen\">ulen</a>;", 
"", 
"<a class=\"id\" href=\"#out_free\">out_free</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_free_datagram_locked\">skb_free_datagram_locked</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<a class=\"id\" href=\"#csum_copy_err\">csum_copy_err</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#slow\">slow</a> = <a class=\"id\" href=\"#lock_sock_fast\">lock_sock_fast</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb_kill_datagram\">skb_kill_datagram</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#flags\">flags</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#is_udp4\">is_udp4</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#UDP_INC_STATS_USER\">UDP_INC_STATS_USER</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#UDP_MIB_INERRORS\">UDP_MIB_INERRORS</a>, <a class=\"id\" href=\"#is_udplite\">is_udplite</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#UDP6_INC_STATS_USER\">UDP6_INC_STATS_USER</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#UDP_MIB_INERRORS\">UDP_MIB_INERRORS</a>, <a class=\"id\" href=\"#is_udplite\">is_udplite</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_sock_fast\">unlock_sock_fast</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#slow\">slow</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#MSG_DONTWAIT\">MSG_DONTWAIT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#try_again\">try_again</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#__udp6_lib_err\">__udp6_lib_err</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#inet6_skb_parm\">inet6_skb_parm</a> *<a class=\"id\" href=\"#opt\">opt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#code\">code</a>, int <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#info\">info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#udp_table\">udp_table</a> *<a class=\"id\" href=\"#udptable\">udptable</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#np\">np</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a> *<a class=\"id\" href=\"#hdr\">hdr</a> = (struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a>*)<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#saddr\">saddr</a> = &amp;<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#saddr\">saddr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#daddr\">daddr</a> = &amp;<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#daddr\">daddr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#udphdr\">udphdr</a> *<a class=\"id\" href=\"#uh\">uh</a> = (struct <a class=\"id\" href=\"#udphdr\">udphdr</a>*)(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#data\">data</a>+<a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#__udp6_lib_lookup\">__udp6_lib_lookup</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#uh\">uh</a>-><a class=\"id\" href=\"#dest\">dest</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#uh\">uh</a>-><a class=\"id\" href=\"#source\">source</a>, <a class=\"id\" href=\"#inet6_iif\">inet6_iif</a>(<a class=\"id\" href=\"#skb\">skb</a>), <a class=\"id\" href=\"#udptable\">udptable</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#np\">np</a> = <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#icmpv6_err_convert\">icmpv6_err_convert</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#code\">code</a>, &amp;<a class=\"id\" href=\"#err\">err</a>) && !<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#recverr\">recverr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> != <a class=\"id\" href=\"#TCP_ESTABLISHED\">TCP_ESTABLISHED</a> && !<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#recverr\">recverr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#recverr\">recverr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_icmp_error\">ipv6_icmp_error</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#err\">err</a>, <a class=\"id\" href=\"#uh\">uh</a>-><a class=\"id\" href=\"#dest\">dest</a>, <a class=\"id\" href=\"#ntohl\">ntohl</a>(<a class=\"id\" href=\"#info\">info</a>), (<a class=\"id\" href=\"#u8\">u8</a> *)(<a class=\"id\" href=\"#uh\">uh</a>+1));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_err\">sk_err</a> = <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_error_report\">sk_error_report</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_put\">sock_put</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#__inline__\">__inline__</a> void <a class=\"id\" href=\"#udpv6_err\">udpv6_err</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#inet6_skb_parm\">inet6_skb_parm</a> *<a class=\"id\" href=\"#opt\">opt</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#code\">code</a>, int <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#info\">info</a>     )", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__udp6_lib_err\">__udp6_lib_err</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#opt\">opt</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#code\">code</a>, <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#info\">info</a>, &amp;<a class=\"id\" href=\"#udp_table\">udp_table</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#udpv6_queue_rcv_skb\">udpv6_queue_rcv_skb</a>(struct <a class=\"id\" href=\"#sock\">sock</a> * <a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#udp_sock\">udp_sock</a> *<a class=\"id\" href=\"#up\">up</a> = <a class=\"id\" href=\"#udp_sk\">udp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#is_udplite\">is_udplite</a> = <a class=\"id\" href=\"#IS_UDPLITE\">IS_UDPLITE</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#xfrm6_policy_check\">xfrm6_policy_check</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#XFRM_POLICY_IN\">XFRM_POLICY_IN</a>, <a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * UDP-Lite specific tests, ignored on UDP sockets (see net/ipv4/udp.c).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#is_udplite\">is_udplite</a> &amp; <a class=\"id\" href=\"#UDPLITE_RECV_CC\">UDPLITE_RECV_CC</a>)  &&  <a class=\"id\" href=\"#UDP_SKB_CB\">UDP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#partial_cov\">partial_cov</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#pcrlen\">pcrlen</a> == 0) {          <span class=\"comment\">/* full coverage was set  */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#LIMIT_NETDEBUG\">LIMIT_NETDEBUG</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"UDPLITE6: partial coverage\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\" %d while full coverage %d requested\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#UDP_SKB_CB\">UDP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#cscov\">cscov</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#UDP_SKB_CB\">UDP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#cscov\">cscov</a>  &lt;  <a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#pcrlen\">pcrlen</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#LIMIT_NETDEBUG\">LIMIT_NETDEBUG</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"UDPLITE6: coverage %d \"", 
];
xr_frag_insert('l/7b/8db5965c4f49a4d3b967501d8704a80af7612d.xr', __xr_tmp);
