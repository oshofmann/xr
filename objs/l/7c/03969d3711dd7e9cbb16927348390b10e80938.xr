var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  linux/mm/swapfile.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 1991, 1992, 1993, 1994  Linus Torvalds</span>", 
"<span class=\"comment\"> *  Swap reorganised 29.12.95, Stephen Tweedie</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#hugetlb\">hugetlb</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mman\">mman</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel_stat\">kernel_stat</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#swap\">swap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#vmalloc\">vmalloc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pagemap\">pagemap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#namei\">namei</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#shm\">shm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blkdev\">blkdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#random\">random</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#writeback\">writeback</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ksm\">ksm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rmap\">rmap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#security\">security</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#backing\">backing</a>-<a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mutex\">mutex</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#capability\">capability</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#syscalls\">syscalls</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#memcontrol\">memcontrol</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#pgtable\">pgtable</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#tlbflush\">tlbflush</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#swapops\">swapops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#page_cgroup\">page_cgroup</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#swap_count_continued\">swap_count_continued</a>(struct <a class=\"id\" href=\"#swap_info_struct\">swap_info_struct</a> *, <a class=\"id\" href=\"#pgoff_t\">pgoff_t</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned char);", 
"static void <a class=\"id\" href=\"#free_swap_count_continuations\">free_swap_count_continuations</a>(struct <a class=\"id\" href=\"#swap_info_struct\">swap_info_struct</a> *);", 
"static <a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#map_swap_entry\">map_swap_entry</a>(<a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a>, struct <a class=\"id\" href=\"#block_device\">block_device</a>**);", 
"", 
"static <a class=\"id\" href=\"#DEFINE_SPINLOCK\">DEFINE_SPINLOCK</a>(<a class=\"id\" href=\"#swap_lock\">swap_lock</a>);", 
"static unsigned int <a class=\"id\" href=\"#nr_swapfiles\">nr_swapfiles</a>;", 
"long <a class=\"id\" href=\"#nr_swap_pages\">nr_swap_pages</a>;", 
"long <a class=\"id\" href=\"#total_swap_pages\">total_swap_pages</a>;", 
"static int <a class=\"id\" href=\"#least_priority\">least_priority</a>;", 
"", 
"static const char <a class=\"id\" href=\"#Bad_file\">Bad_file</a>[] = \"Bad swap file entry \";", 
"static const char <a class=\"id\" href=\"#Unused_file\">Unused_file</a>[] = \"Unused swap file entry \";", 
"static const char <a class=\"id\" href=\"#Bad_offset\">Bad_offset</a>[] = \"Bad swap offset entry \";", 
"static const char <a class=\"id\" href=\"#Unused_offset\">Unused_offset</a>[] = \"Unused swap offset entry \";", 
"", 
"static struct <a class=\"id\" href=\"#swap_list_t\">swap_list_t</a> <a class=\"id\" href=\"#swap_list\">swap_list</a> = {-1, -1};", 
"", 
"static struct <a class=\"id\" href=\"#swap_info_struct\">swap_info_struct</a> *<a class=\"id\" href=\"#swap_info\">swap_info</a>[<a class=\"id\" href=\"#MAX_SWAPFILES\">MAX_SWAPFILES</a>];", 
"", 
"static <a class=\"id\" href=\"#DEFINE_MUTEX\">DEFINE_MUTEX</a>(<a class=\"id\" href=\"#swapon_mutex\">swapon_mutex</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned char <a class=\"id\" href=\"#swap_count\">swap_count</a>(unsigned char <a class=\"id\" href=\"#ent\">ent</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ent\">ent</a> &amp; ~<a class=\"id\" href=\"#SWAP_HAS_CACHE\">SWAP_HAS_CACHE</a>;<span class=\"ts\"/><span class=\"comment\">/* may include SWAP_HAS_CONT flag */</span>", 
"}", 
"", 
"<span class=\"comment\">/* returns 1 if swap entry is freed */</span>", 
"static int", 
"<a class=\"id\" href=\"#__try_to_reclaim_swap\">__try_to_reclaim_swap</a>(struct <a class=\"id\" href=\"#swap_info_struct\">swap_info_struct</a> *<a class=\"id\" href=\"#si\">si</a>, unsigned long <a class=\"id\" href=\"#offset\">offset</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a> <a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#swp_entry\">swp_entry</a>(<a class=\"id\" href=\"#si\">si</a>-><a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#find_get_page\">find_get_page</a>(&amp;<a class=\"id\" href=\"#swapper_space\">swapper_space</a>, <a class=\"id\" href=\"#entry\">entry</a>.<a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#page\">page</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This function is called from scan_swap_map() and it's called</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * by vmscan.c at reclaiming pages. So, we hold a lock on a page, here.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We have to use trylock for avoiding deadlock. This is a special</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * case and you should use try_to_free_swap() with explicit lock_page()</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * in usual operations.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#trylock_page\">trylock_page</a>(<a class=\"id\" href=\"#page\">page</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#try_to_free_swap\">try_to_free_swap</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_page\">unlock_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page_cache_release\">page_cache_release</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * We need this because the bdev-&gt;unplug_fn can sleep and we cannot</span>", 
"<span class=\"comment\"> * hold swap_lock while calling the unplug_fn. And swap_lock</span>", 
"<span class=\"comment\"> * cannot be turned into a mutex.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#DECLARE_RWSEM\">DECLARE_RWSEM</a>(<a class=\"id\" href=\"#swap_unplug_sem\">swap_unplug_sem</a>);", 
"", 
"void <a class=\"id\" href=\"#swap_unplug_io_fn\">swap_unplug_io_fn</a>(struct <a class=\"id\" href=\"#backing_dev_info\">backing_dev_info</a> *<a class=\"id\" href=\"#unused_bdi\">unused_bdi</a>, struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a> <a class=\"id\" href=\"#entry\">entry</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#swap_unplug_sem\">swap_unplug_sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>.<a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#page_private\">page_private</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#PageSwapCache\">PageSwapCache</a>(<a class=\"id\" href=\"#page\">page</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a> = <a class=\"id\" href=\"#swap_info\">swap_info</a>[<a class=\"id\" href=\"#swp_type\">swp_type</a>(<a class=\"id\" href=\"#entry\">entry</a>)]-><a class=\"id\" href=\"#bdev\">bdev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#backing_dev_info\">backing_dev_info</a> *<a class=\"id\" href=\"#bdi\">bdi</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If the page is removed from swapcache from under us (with a</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * racy try_to_unuse/swapoff) we need an additional reference</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * count to avoid reading garbage from page_private(page) above.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If the WARN_ON triggers during a swapoff it maybe the race</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * condition and it's harmless. However if it triggers without</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * swapoff it signals a problem.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#page_count\">page_count</a>(<a class=\"id\" href=\"#page\">page</a>) <= 1);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bdi\">bdi</a> = <a class=\"id\" href=\"#bdev\">bdev</a>-><a class=\"id\" href=\"#bd_inode\">bd_inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>-><a class=\"id\" href=\"#backing_dev_info\">backing_dev_info</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_run_backing_dev\">blk_run_backing_dev</a>(<a class=\"id\" href=\"#bdi\">bdi</a>, <a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#swap_unplug_sem\">swap_unplug_sem</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * swapon tell device that all the old swap contents can be discarded,</span>", 
"<span class=\"comment\"> * to allow the swap device to optimize its wear-levelling.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#discard_swap\">discard_swap</a>(struct <a class=\"id\" href=\"#swap_info_struct\">swap_info_struct</a> *<a class=\"id\" href=\"#si\">si</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#swap_extent\">swap_extent</a> *<a class=\"id\" href=\"#se\">se</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#start_block\">start_block</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#nr_blocks\">nr_blocks</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Do not discard the swap header page! */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#se\">se</a> = &amp;<a class=\"id\" href=\"#si\">si</a>-><a class=\"id\" href=\"#first_swap_extent\">first_swap_extent</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#start_block\">start_block</a> = (<a class=\"id\" href=\"#se\">se</a>-><a class=\"id\" href=\"#start_block\">start_block</a> + 1) << (<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a> - 9);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nr_blocks\">nr_blocks</a> = ((<a class=\"id\" href=\"#sector_t\">sector_t</a>)<a class=\"id\" href=\"#se\">se</a>-><a class=\"id\" href=\"#nr_pages\">nr_pages</a> - 1) << (<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a> - 9);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nr_blocks\">nr_blocks</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#blkdev_issue_discard\">blkdev_issue_discard</a>(<a class=\"id\" href=\"#si\">si</a>-><a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#start_block\">start_block</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_blocks\">nr_blocks</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>, <a class=\"id\" href=\"#BLKDEV_IFL_WAIT\">BLKDEV_IFL_WAIT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cond_resched\">cond_resched</a>();", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#se\">se</a>, &amp;<a class=\"id\" href=\"#si\">si</a>-><a class=\"id\" href=\"#first_swap_extent\">first_swap_extent</a>.<a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_block\">start_block</a> = <a class=\"id\" href=\"#se\">se</a>-><a class=\"id\" href=\"#start_block\">start_block</a> << (<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a> - 9);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_blocks\">nr_blocks</a> = (<a class=\"id\" href=\"#sector_t\">sector_t</a>)<a class=\"id\" href=\"#se\">se</a>-><a class=\"id\" href=\"#nr_pages\">nr_pages</a> << (<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a> - 9);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#blkdev_issue_discard\">blkdev_issue_discard</a>(<a class=\"id\" href=\"#si\">si</a>-><a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#start_block\">start_block</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_blocks\">nr_blocks</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>, <a class=\"id\" href=\"#BLKDEV_IFL_WAIT\">BLKDEV_IFL_WAIT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cond_resched\">cond_resched</a>();", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* That will often be -EOPNOTSUPP */</span>", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * swap allocation tell device that a cluster of swap can now be discarded,</span>", 
"<span class=\"comment\"> * to allow the swap device to optimize its wear-levelling.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#discard_swap_cluster\">discard_swap_cluster</a>(struct <a class=\"id\" href=\"#swap_info_struct\">swap_info_struct</a> *<a class=\"id\" href=\"#si\">si</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#pgoff_t\">pgoff_t</a> <a class=\"id\" href=\"#start_page\">start_page</a>, <a class=\"id\" href=\"#pgoff_t\">pgoff_t</a> <a class=\"id\" href=\"#nr_pages\">nr_pages</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#swap_extent\">swap_extent</a> *<a class=\"id\" href=\"#se\">se</a> = <a class=\"id\" href=\"#si\">si</a>-><a class=\"id\" href=\"#curr_swap_extent\">curr_swap_extent</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#found_extent\">found_extent</a> = 0;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#nr_pages\">nr_pages</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#lh\">lh</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#se\">se</a>-><a class=\"id\" href=\"#start_page\">start_page</a> <= <a class=\"id\" href=\"#start_page\">start_page</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#start_page\">start_page</a> &lt; <a class=\"id\" href=\"#se\">se</a>-><a class=\"id\" href=\"#start_page\">start_page</a> + <a class=\"id\" href=\"#se\">se</a>-><a class=\"id\" href=\"#nr_pages\">nr_pages</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pgoff_t\">pgoff_t</a> <a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#start_page\">start_page</a> - <a class=\"id\" href=\"#se\">se</a>-><a class=\"id\" href=\"#start_page\">start_page</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#start_block\">start_block</a> = <a class=\"id\" href=\"#se\">se</a>-><a class=\"id\" href=\"#start_block\">start_block</a> + <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#nr_blocks\">nr_blocks</a> = <a class=\"id\" href=\"#se\">se</a>-><a class=\"id\" href=\"#nr_pages\">nr_pages</a> - <a class=\"id\" href=\"#offset\">offset</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nr_blocks\">nr_blocks</a> &gt; <a class=\"id\" href=\"#nr_pages\">nr_pages</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_blocks\">nr_blocks</a> = <a class=\"id\" href=\"#nr_pages\">nr_pages</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_page\">start_page</a> += <a class=\"id\" href=\"#nr_blocks\">nr_blocks</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_pages\">nr_pages</a> -= <a class=\"id\" href=\"#nr_blocks\">nr_blocks</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#found_extent\">found_extent</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#si\">si</a>-><a class=\"id\" href=\"#curr_swap_extent\">curr_swap_extent</a> = <a class=\"id\" href=\"#se\">se</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_block\">start_block</a> <<= <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a> - 9;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_blocks\">nr_blocks</a> <<= <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a> - 9;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#blkdev_issue_discard\">blkdev_issue_discard</a>(<a class=\"id\" href=\"#si\">si</a>-><a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#start_block\">start_block</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#nr_blocks\">nr_blocks</a>, <a class=\"id\" href=\"#GFP_NOIO\">GFP_NOIO</a>, <a class=\"id\" href=\"#BLKDEV_IFL_WAIT\">BLKDEV_IFL_WAIT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lh\">lh</a> = <a class=\"id\" href=\"#se\">se</a>-><a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#se\">se</a> = <a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#lh\">lh</a>, struct <a class=\"id\" href=\"#swap_extent\">swap_extent</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#wait_for_discard\">wait_for_discard</a>(void *<a class=\"id\" href=\"#word\">word</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#schedule\">schedule</a>();", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SWAPFILE_CLUSTER\">SWAPFILE_CLUSTER</a><span class=\"ts\"/>256", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#LATENCY_LIMIT\">LATENCY_LIMIT</a><span class=\"ts\"/><span class=\"ts\"/>256", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long <a class=\"id\" href=\"#scan_swap_map\">scan_swap_map</a>(struct <a class=\"id\" href=\"#swap_info_struct\">swap_info_struct</a> *<a class=\"id\" href=\"#si\">si</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned char <a class=\"id\" href=\"#usage\">usage</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#scan_base\">scan_base</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#last_in_cluster\">last_in_cluster</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#latency_ration\">latency_ration</a> = <a class=\"id\" href=\"#LATENCY_LIMIT\">LATENCY_LIMIT</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#found_free_cluster\">found_free_cluster</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We try to cluster swap pages by allocating them sequentially</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * in swap.  Once we've allocated SWAPFILE_CLUSTER pages this</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * way, however, we resort to first-free allocation, starting</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * a new cluster.  This prevents us from scattering swap pages</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * all over the entire swap partition, so that we reduce</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * overall disk seek times between swap pages.  -- sct</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * But we do now try to find an empty cluster.  -Andrea</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * And we let swap pages go all over an SSD partition.  Hugh</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#si\">si</a>-><a class=\"id\" href=\"#flags\">flags</a> += <a class=\"id\" href=\"#SWP_SCANNING\">SWP_SCANNING</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scan_base\">scan_base</a> = <a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#si\">si</a>-><a class=\"id\" href=\"#cluster_next\">cluster_next</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#si\">si</a>-><a class=\"id\" href=\"#cluster_nr\">cluster_nr</a>--)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#si\">si</a>-><a class=\"id\" href=\"#pages\">pages</a> - <a class=\"id\" href=\"#si\">si</a>-><a class=\"id\" href=\"#inuse_pages\">inuse_pages</a> &lt; <a class=\"id\" href=\"#SWAPFILE_CLUSTER\">SWAPFILE_CLUSTER</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#si\">si</a>-><a class=\"id\" href=\"#cluster_nr\">cluster_nr</a> = <a class=\"id\" href=\"#SWAPFILE_CLUSTER\">SWAPFILE_CLUSTER</a> - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#checks\">checks</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#si\">si</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#SWP_DISCARDABLE\">SWP_DISCARDABLE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Start range check on racing allocations, in case</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * they overlap the cluster we eventually decide on</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * (we scan without swap_lock to allow preemption).</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * It's hardly conceivable that cluster_nr could be</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * wrapped during our scan, but don't depend on it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#si\">si</a>-><a class=\"id\" href=\"#lowest_alloc\">lowest_alloc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#checks\">checks</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#si\">si</a>-><a class=\"id\" href=\"#lowest_alloc\">lowest_alloc</a> = <a class=\"id\" href=\"#si\">si</a>-><a class=\"id\" href=\"#max\">max</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#si\">si</a>-><a class=\"id\" href=\"#highest_alloc\">highest_alloc</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#swap_lock\">swap_lock</a>);", 
"", 
];
xr_frag_insert('l/7c/03969d3711dd7e9cbb16927348390b10e80938.xr', __xr_tmp);
