var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * include/linux/cpu.h - generic cpu definition</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is mainly for topological representation. We define the </span>", 
"<span class=\"comment\"> * basic 'struct cpu' here, which can be embedded in per-arch </span>", 
"<span class=\"comment\"> * definitions of processors.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Basic handling of the devices is done in drivers/base/cpu.c</span>", 
"<span class=\"comment\"> * and system devices are handled in drivers/base/sys.c. </span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * CPUs are exported via sysfs in the class/cpu/devices/</span>", 
"<span class=\"comment\"> * directory. </span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Per-cpu interfaces can be implemented using a struct device_interface. </span>", 
"<span class=\"comment\"> * See the following for how to do this: </span>", 
"<span class=\"comment\"> * - drivers/base/intf.c </span>", 
"<span class=\"comment\"> * - Documentation/driver-model/interface.txt</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_CPU_H_\">_LINUX_CPU_H_</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_CPU_H_\">_LINUX_CPU_H_</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sysdev\">sysdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#node\">node</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#compiler\">compiler</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cpumask\">cpumask</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#cpu\">cpu</a> {", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#node_id\">node_id</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* The node which contains the CPU */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#hotpluggable\">hotpluggable</a>;<span class=\"ts\"/><span class=\"comment\">/* creates sysfs control file if hotpluggable */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sys_device\">sys_device</a> <a class=\"id\" href=\"#sysdev\">sysdev</a>;", 
"};", 
"", 
"extern int <a class=\"id\" href=\"#register_cpu\">register_cpu</a>(struct <a class=\"id\" href=\"#cpu\">cpu</a> *<a class=\"id\" href=\"#cpu\">cpu</a>, int <a class=\"id\" href=\"#num\">num</a>);", 
"extern struct <a class=\"id\" href=\"#sys_device\">sys_device</a> *<a class=\"id\" href=\"#get_cpu_sysdev\">get_cpu_sysdev</a>(unsigned <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"extern int <a class=\"id\" href=\"#cpu_add_sysdev_attr\">cpu_add_sysdev_attr</a>(struct <a class=\"id\" href=\"#sysdev_attribute\">sysdev_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>);", 
"extern void <a class=\"id\" href=\"#cpu_remove_sysdev_attr\">cpu_remove_sysdev_attr</a>(struct <a class=\"id\" href=\"#sysdev_attribute\">sysdev_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>);", 
"", 
"extern int <a class=\"id\" href=\"#cpu_add_sysdev_attr_group\">cpu_add_sysdev_attr_group</a>(struct <a class=\"id\" href=\"#attribute_group\">attribute_group</a> *<a class=\"id\" href=\"#attrs\">attrs</a>);", 
"extern void <a class=\"id\" href=\"#cpu_remove_sysdev_attr_group\">cpu_remove_sysdev_attr_group</a>(struct <a class=\"id\" href=\"#attribute_group\">attribute_group</a> *<a class=\"id\" href=\"#attrs\">attrs</a>);", 
"", 
"extern int <a class=\"id\" href=\"#sched_create_sysfs_power_savings_entries\">sched_create_sysfs_power_savings_entries</a>(struct <a class=\"id\" href=\"#sysdev_class\">sysdev_class</a> *<a class=\"id\" href=\"#cls\">cls</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HOTPLUG_CPU\">CONFIG_HOTPLUG_CPU</a>", 
"extern void <a class=\"id\" href=\"#unregister_cpu\">unregister_cpu</a>(struct <a class=\"id\" href=\"#cpu\">cpu</a> *<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"extern <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#arch_cpu_probe\">arch_cpu_probe</a>(const char *, <a class=\"id\" href=\"#size_t\">size_t</a>);", 
"extern <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#arch_cpu_release\">arch_cpu_release</a>(const char *, <a class=\"id\" href=\"#size_t\">size_t</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * CPU notifier priorities.</span>", 
"<span class=\"comment\"> */</span>", 
"enum {", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * SCHED_ACTIVE marks a cpu which is coming up active during</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * CPU_ONLINE and CPU_DOWN_FAILED and must be the first</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * notifier.  CPUSET_ACTIVE adjusts cpuset according to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * cpu_active mask right after SCHED_ACTIVE.  During</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * CPU_DOWN_PREPARE, SCHED_INACTIVE and CPUSET_INACTIVE are</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ordered in the similar way.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This ordering guarantees consistent cpu_active mask and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * migration behavior to all cpu notifiers.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CPU_PRI_SCHED_ACTIVE\">CPU_PRI_SCHED_ACTIVE</a><span class=\"ts\"/>= <a class=\"id\" href=\"#INT_MAX\">INT_MAX</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CPU_PRI_CPUSET_ACTIVE\">CPU_PRI_CPUSET_ACTIVE</a><span class=\"ts\"/>= <a class=\"id\" href=\"#INT_MAX\">INT_MAX</a> - 1,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CPU_PRI_SCHED_INACTIVE\">CPU_PRI_SCHED_INACTIVE</a><span class=\"ts\"/>= <a class=\"id\" href=\"#INT_MIN\">INT_MIN</a> + 1,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CPU_PRI_CPUSET_INACTIVE\">CPU_PRI_CPUSET_INACTIVE</a><span class=\"ts\"/>= <a class=\"id\" href=\"#INT_MIN\">INT_MIN</a>,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* migration should happen before other stuff but after perf */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CPU_PRI_PERF\">CPU_PRI_PERF</a><span class=\"ts\"/><span class=\"ts\"/>= 20,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CPU_PRI_MIGRATION\">CPU_PRI_MIGRATION</a><span class=\"ts\"/>= 10,", 
"<span class=\"ts\"/><span class=\"comment\">/* prepare workqueues for other notifiers */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CPU_PRI_WORKQUEUE\">CPU_PRI_WORKQUEUE</a><span class=\"ts\"/>= 5,", 
"};", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"<span class=\"comment\">/* Need to know about CPUs going up/down? */</span>", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_HOTPLUG_CPU\">CONFIG_HOTPLUG_CPU</a>) || !<a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#MODULE\">MODULE</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#cpu_notifier\">cpu_notifier</a>(<a class=\"id\" href=\"#fn\">fn</a>, <a class=\"id\" href=\"#pri\">pri</a>) {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>static struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> <a class=\"id\" href=\"#fn\">fn</a>##<a class=\"id\" href=\"#_nb\">_nb</a> <a class=\"id\" href=\"#__cpuinitdata\">__cpuinitdata</a> =<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>{ .<a class=\"id\" href=\"#notifier_call\">notifier_call</a> = <a class=\"id\" href=\"#fn\">fn</a>, .<a class=\"id\" href=\"#priority\">priority</a> = <a class=\"id\" href=\"#pri\">pri</a> };<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#register_cpu_notifier\">register_cpu_notifier</a>(&amp;<a class=\"id\" href=\"#fn\">fn</a>##<a class=\"id\" href=\"#_nb\">_nb</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"}", 
"#else <span class=\"comment\">/* #if defined(CONFIG_HOTPLUG_CPU) || !defined(MODULE) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#cpu_notifier\">cpu_notifier</a>(<a class=\"id\" href=\"#fn\">fn</a>, <a class=\"id\" href=\"#pri\">pri</a>)<span class=\"ts\"/>do { (void)(<a class=\"id\" href=\"#fn\">fn</a>); } while (0)", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* #else #if defined(CONFIG_HOTPLUG_CPU) || !defined(MODULE) */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HOTPLUG_CPU\">CONFIG_HOTPLUG_CPU</a>", 
"extern int <a class=\"id\" href=\"#register_cpu_notifier\">register_cpu_notifier</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nb\">nb</a>);", 
"extern void <a class=\"id\" href=\"#unregister_cpu_notifier\">unregister_cpu_notifier</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nb\">nb</a>);", 
"#else", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#MODULE\">MODULE</a>", 
"extern int <a class=\"id\" href=\"#register_cpu_notifier\">register_cpu_notifier</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nb\">nb</a>);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#register_cpu_notifier\">register_cpu_notifier</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nb\">nb</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#unregister_cpu_notifier\">unregister_cpu_notifier</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nb\">nb</a>)", 
"{", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"int <a class=\"id\" href=\"#cpu_up\">cpu_up</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"void <a class=\"id\" href=\"#notify_cpu_starting\">notify_cpu_starting</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"extern void <a class=\"id\" href=\"#cpu_maps_update_begin\">cpu_maps_update_begin</a>(void);", 
"extern void <a class=\"id\" href=\"#cpu_maps_update_done\">cpu_maps_update_done</a>(void);", 
"", 
"#else<span class=\"ts\"/><span class=\"comment\">/* CONFIG_SMP */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#cpu_notifier\">cpu_notifier</a>(<a class=\"id\" href=\"#fn\">fn</a>, <a class=\"id\" href=\"#pri\">pri</a>)<span class=\"ts\"/>do { (void)(<a class=\"id\" href=\"#fn\">fn</a>); } while (0)", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#register_cpu_notifier\">register_cpu_notifier</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nb\">nb</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#unregister_cpu_notifier\">unregister_cpu_notifier</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nb\">nb</a>)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#cpu_maps_update_begin\">cpu_maps_update_begin</a>(void)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#cpu_maps_update_done\">cpu_maps_update_done</a>(void)", 
"{", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_SMP */</span>", 
"extern struct <a class=\"id\" href=\"#sysdev_class\">sysdev_class</a> <a class=\"id\" href=\"#cpu_sysdev_class\">cpu_sysdev_class</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HOTPLUG_CPU\">CONFIG_HOTPLUG_CPU</a>", 
"<span class=\"comment\">/* Stop CPUs going up and down. */</span>", 
"", 
"extern void <a class=\"id\" href=\"#get_online_cpus\">get_online_cpus</a>(void);", 
"extern void <a class=\"id\" href=\"#put_online_cpus\">put_online_cpus</a>(void);", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#hotcpu_notifier\">hotcpu_notifier</a>(<a class=\"id\" href=\"#fn\">fn</a>, <a class=\"id\" href=\"#pri\">pri</a>)<span class=\"ts\"/><a class=\"id\" href=\"#cpu_notifier\">cpu_notifier</a>(<a class=\"id\" href=\"#fn\">fn</a>, <a class=\"id\" href=\"#pri\">pri</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#register_hotcpu_notifier\">register_hotcpu_notifier</a>(<a class=\"id\" href=\"#nb\">nb</a>)<span class=\"ts\"/><a class=\"id\" href=\"#register_cpu_notifier\">register_cpu_notifier</a>(<a class=\"id\" href=\"#nb\">nb</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#unregister_hotcpu_notifier\">unregister_hotcpu_notifier</a>(<a class=\"id\" href=\"#nb\">nb</a>)<span class=\"ts\"/><a class=\"id\" href=\"#unregister_cpu_notifier\">unregister_cpu_notifier</a>(<a class=\"id\" href=\"#nb\">nb</a>)", 
"int <a class=\"id\" href=\"#cpu_down\">cpu_down</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_ARCH_CPU_PROBE_RELEASE\">CONFIG_ARCH_CPU_PROBE_RELEASE</a>", 
"extern void <a class=\"id\" href=\"#cpu_hotplug_driver_lock\">cpu_hotplug_driver_lock</a>(void);", 
"extern void <a class=\"id\" href=\"#cpu_hotplug_driver_unlock\">cpu_hotplug_driver_unlock</a>(void);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#cpu_hotplug_driver_lock\">cpu_hotplug_driver_lock</a>(void)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#cpu_hotplug_driver_unlock\">cpu_hotplug_driver_unlock</a>(void)", 
"{", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#else<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* CONFIG_HOTPLUG_CPU */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#get_online_cpus\">get_online_cpus</a>()<span class=\"ts\"/>do { } while (0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#put_online_cpus\">put_online_cpus</a>()<span class=\"ts\"/>do { } while (0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#hotcpu_notifier\">hotcpu_notifier</a>(<a class=\"id\" href=\"#fn\">fn</a>, <a class=\"id\" href=\"#pri\">pri</a>)<span class=\"ts\"/>do { (void)(<a class=\"id\" href=\"#fn\">fn</a>); } while (0)", 
"<span class=\"comment\">/* These aren't inline functions due to a GCC bug. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#register_hotcpu_notifier\">register_hotcpu_notifier</a>(<a class=\"id\" href=\"#nb\">nb</a>)<span class=\"ts\"/>({ (void)(<a class=\"id\" href=\"#nb\">nb</a>); 0; })", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#unregister_hotcpu_notifier\">unregister_hotcpu_notifier</a>(<a class=\"id\" href=\"#nb\">nb</a>)<span class=\"ts\"/>({ (void)(<a class=\"id\" href=\"#nb\">nb</a>); })", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* CONFIG_HOTPLUG_CPU */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PM_SLEEP_SMP\">CONFIG_PM_SLEEP_SMP</a>", 
"extern int <a class=\"id\" href=\"#suspend_cpu_hotplug\">suspend_cpu_hotplug</a>;", 
"", 
"extern int <a class=\"id\" href=\"#disable_nonboot_cpus\">disable_nonboot_cpus</a>(void);", 
"extern void <a class=\"id\" href=\"#enable_nonboot_cpus\">enable_nonboot_cpus</a>(void);", 
"#else <span class=\"comment\">/* !CONFIG_PM_SLEEP_SMP */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#suspend_cpu_hotplug\">suspend_cpu_hotplug</a><span class=\"ts\"/>0", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#disable_nonboot_cpus\">disable_nonboot_cpus</a>(void) { return 0; }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#enable_nonboot_cpus\">enable_nonboot_cpus</a>(void) {}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* !CONFIG_PM_SLEEP_SMP */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _LINUX_CPU_H_ */</span>", 
];
xr_frag_insert('l/7c/60ade3db40acd63a615c57cef9a99b0211dfe6.xr', __xr_tmp);
