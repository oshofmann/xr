var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#VT_LOCKSWITCH\">VT_LOCKSWITCH</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_TTY_CONFIG\">CAP_SYS_TTY_CONFIG</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#eperm\">eperm</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vt_dont_switch\">vt_dont_switch</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#VT_UNLOCKSWITCH\">VT_UNLOCKSWITCH</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_TTY_CONFIG\">CAP_SYS_TTY_CONFIG</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#eperm\">eperm</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vt_dont_switch\">vt_dont_switch</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#VT_GETHIFONTMASK\">VT_GETHIFONTMASK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#vc\">vc</a>-><a class=\"id\" href=\"#vc_hi_font_mask\">vc_hi_font_mask</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned short <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#VT_WAITEVENT\">VT_WAITEVENT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#vt_event_wait_ioctl\">vt_event_wait_ioctl</a>((struct <a class=\"id\" href=\"#vt_event\">vt_event</a> <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOIOCTLCMD\">ENOIOCTLCMD</a>;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_unlock\">tty_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<a class=\"id\" href=\"#eperm\">eperm</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#reset_vc\">reset_vc</a>(struct <a class=\"id\" href=\"#vc_data\">vc_data</a> *<a class=\"id\" href=\"#vc\">vc</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vc\">vc</a>-><a class=\"id\" href=\"#vc_mode\">vc_mode</a> = <a class=\"id\" href=\"#KD_TEXT\">KD_TEXT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kbd_table\">kbd_table</a>[<a class=\"id\" href=\"#vc\">vc</a>-><a class=\"id\" href=\"#vc_num\">vc_num</a>].<a class=\"id\" href=\"#kbdmode\">kbdmode</a> = <a class=\"id\" href=\"#default_utf8\">default_utf8</a> ? <a class=\"id\" href=\"#VC_UNICODE\">VC_UNICODE</a> : <a class=\"id\" href=\"#VC_XLATE\">VC_XLATE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vc\">vc</a>-><a class=\"id\" href=\"#vt_mode\">vt_mode</a>.<a class=\"id\" href=\"#mode\">mode</a> = <a class=\"id\" href=\"#VT_AUTO\">VT_AUTO</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vc\">vc</a>-><a class=\"id\" href=\"#vt_mode\">vt_mode</a>.<a class=\"id\" href=\"#waitv\">waitv</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vc\">vc</a>-><a class=\"id\" href=\"#vt_mode\">vt_mode</a>.<a class=\"id\" href=\"#relsig\">relsig</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vc\">vc</a>-><a class=\"id\" href=\"#vt_mode\">vt_mode</a>.<a class=\"id\" href=\"#acqsig\">acqsig</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vc\">vc</a>-><a class=\"id\" href=\"#vt_mode\">vt_mode</a>.<a class=\"id\" href=\"#frsig\">frsig</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_pid\">put_pid</a>(<a class=\"id\" href=\"#vc\">vc</a>-><a class=\"id\" href=\"#vt_pid\">vt_pid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vc\">vc</a>-><a class=\"id\" href=\"#vt_pid\">vt_pid</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vc\">vc</a>-><a class=\"id\" href=\"#vt_newvt\">vt_newvt</a> = -1;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#in_interrupt\">in_interrupt</a>())    <span class=\"comment\">/* Via keyboard.c:SAK() - akpm */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reset_palette\">reset_palette</a>(<a class=\"id\" href=\"#vc\">vc</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#vc_SAK\">vc_SAK</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vc\">vc</a> *<a class=\"id\" href=\"#vc_con\">vc_con</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#work\">work</a>, struct <a class=\"id\" href=\"#vc\">vc</a>, <a class=\"id\" href=\"#SAK_work\">SAK_work</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vc_data\">vc_data</a> *<a class=\"id\" href=\"#vc\">vc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acquire_console_sem\">acquire_console_sem</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vc\">vc</a> = <a class=\"id\" href=\"#vc_con\">vc_con</a>-><a class=\"id\" href=\"#d\">d</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vc\">vc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a> = <a class=\"id\" href=\"#vc\">vc</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#tty\">tty</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * SAK should also work in all raw modes and reset</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * them properly.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__do_SAK\">__do_SAK</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reset_vc\">reset_vc</a>(<a class=\"id\" href=\"#vc\">vc</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_console_sem\">release_console_sem</a>();", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>", 
"", 
"struct <a class=\"id\" href=\"#compat_consolefontdesc\">compat_consolefontdesc</a> {", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#charcount\">charcount</a>;       <span class=\"comment\">/* characters in font (256 or 512) */</span>", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#charheight\">charheight</a>;      <span class=\"comment\">/* scan lines per character (1-32) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_caddr_t\">compat_caddr_t</a> <a class=\"id\" href=\"#chardata\">chardata</a>;<span class=\"ts\"/><span class=\"comment\">/* font data in expanded form */</span>", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int", 
"<a class=\"id\" href=\"#compat_fontx_ioctl\">compat_fontx_ioctl</a>(int <a class=\"id\" href=\"#cmd\">cmd</a>, struct <a class=\"id\" href=\"#compat_consolefontdesc\">compat_consolefontdesc</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#user_cfd\">user_cfd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> int <a class=\"id\" href=\"#perm\">perm</a>, struct <a class=\"id\" href=\"#console_font_op\">console_font_op</a> *<a class=\"id\" href=\"#op\">op</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#compat_consolefontdesc\">compat_consolefontdesc</a> <a class=\"id\" href=\"#cfdarg\">cfdarg</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#cfdarg\">cfdarg</a>, <a class=\"id\" href=\"#user_cfd\">user_cfd</a>, sizeof(struct <a class=\"id\" href=\"#compat_consolefontdesc\">compat_consolefontdesc</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#cmd\">cmd</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PIO_FONTX\">PIO_FONTX</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#perm\">perm</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#op\">op</a>-><a class=\"id\" href=\"#op\">op</a> = <a class=\"id\" href=\"#KD_FONT_OP_SET\">KD_FONT_OP_SET</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#op\">op</a>-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#KD_FONT_FLAG_OLD\">KD_FONT_FLAG_OLD</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#op\">op</a>-><a class=\"id\" href=\"#width\">width</a> = 8;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#op\">op</a>-><a class=\"id\" href=\"#height\">height</a> = <a class=\"id\" href=\"#cfdarg\">cfdarg</a>.<a class=\"id\" href=\"#charheight\">charheight</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#op\">op</a>-><a class=\"id\" href=\"#charcount\">charcount</a> = <a class=\"id\" href=\"#cfdarg\">cfdarg</a>.<a class=\"id\" href=\"#charcount\">charcount</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#op\">op</a>-><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#compat_ptr\">compat_ptr</a>(<a class=\"id\" href=\"#cfdarg\">cfdarg</a>.<a class=\"id\" href=\"#chardata\">chardata</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#con_font_op\">con_font_op</a>(<a class=\"id\" href=\"#vc_cons\">vc_cons</a>[<a class=\"id\" href=\"#fg_console\">fg_console</a>].<a class=\"id\" href=\"#d\">d</a>, <a class=\"id\" href=\"#op\">op</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#GIO_FONTX\">GIO_FONTX</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#op\">op</a>-><a class=\"id\" href=\"#op\">op</a> = <a class=\"id\" href=\"#KD_FONT_OP_GET\">KD_FONT_OP_GET</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#op\">op</a>-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#KD_FONT_FLAG_OLD\">KD_FONT_FLAG_OLD</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#op\">op</a>-><a class=\"id\" href=\"#width\">width</a> = 8;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#op\">op</a>-><a class=\"id\" href=\"#height\">height</a> = <a class=\"id\" href=\"#cfdarg\">cfdarg</a>.<a class=\"id\" href=\"#charheight\">charheight</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#op\">op</a>-><a class=\"id\" href=\"#charcount\">charcount</a> = <a class=\"id\" href=\"#cfdarg\">cfdarg</a>.<a class=\"id\" href=\"#charcount\">charcount</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#op\">op</a>-><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#compat_ptr\">compat_ptr</a>(<a class=\"id\" href=\"#cfdarg\">cfdarg</a>.<a class=\"id\" href=\"#chardata\">chardata</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#con_font_op\">con_font_op</a>(<a class=\"id\" href=\"#vc_cons\">vc_cons</a>[<a class=\"id\" href=\"#fg_console\">fg_console</a>].<a class=\"id\" href=\"#d\">d</a>, <a class=\"id\" href=\"#op\">op</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfdarg\">cfdarg</a>.<a class=\"id\" href=\"#charheight\">charheight</a> = <a class=\"id\" href=\"#op\">op</a>-><a class=\"id\" href=\"#height\">height</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfdarg\">cfdarg</a>.<a class=\"id\" href=\"#charcount\">charcount</a> = <a class=\"id\" href=\"#op\">op</a>-><a class=\"id\" href=\"#charcount\">charcount</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#user_cfd\">user_cfd</a>, &amp;<a class=\"id\" href=\"#cfdarg\">cfdarg</a>, sizeof(struct <a class=\"id\" href=\"#compat_consolefontdesc\">compat_consolefontdesc</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#compat_console_font_op\">compat_console_font_op</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_uint_t\">compat_uint_t</a> <a class=\"id\" href=\"#op\">op</a>;        <span class=\"comment\">/* operation code KD_FONT_OP_* */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_uint_t\">compat_uint_t</a> <a class=\"id\" href=\"#flags\">flags</a>;     <span class=\"comment\">/* KD_FONT_FLAG_* */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_uint_t\">compat_uint_t</a> <a class=\"id\" href=\"#width\">width</a>, <a class=\"id\" href=\"#height\">height</a>;     <span class=\"comment\">/* font size */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_uint_t\">compat_uint_t</a> <a class=\"id\" href=\"#charcount\">charcount</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_caddr_t\">compat_caddr_t</a> <a class=\"id\" href=\"#data\">data</a>;    <span class=\"comment\">/* font data with height fixed to 32 */</span>", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int", 
"<a class=\"id\" href=\"#compat_kdfontop_ioctl\">compat_kdfontop_ioctl</a>(struct <a class=\"id\" href=\"#compat_console_font_op\">compat_console_font_op</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#fontop\">fontop</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> int <a class=\"id\" href=\"#perm\">perm</a>, struct <a class=\"id\" href=\"#console_font_op\">console_font_op</a> *<a class=\"id\" href=\"#op\">op</a>, struct <a class=\"id\" href=\"#vc_data\">vc_data</a> *<a class=\"id\" href=\"#vc\">vc</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#op\">op</a>, <a class=\"id\" href=\"#fontop\">fontop</a>, sizeof(struct <a class=\"id\" href=\"#compat_console_font_op\">compat_console_font_op</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#perm\">perm</a> && <a class=\"id\" href=\"#op\">op</a>-><a class=\"id\" href=\"#op\">op</a> != <a class=\"id\" href=\"#KD_FONT_OP_GET\">KD_FONT_OP_GET</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#op\">op</a>-><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#compat_ptr\">compat_ptr</a>(((struct <a class=\"id\" href=\"#compat_console_font_op\">compat_console_font_op</a> *)<a class=\"id\" href=\"#op\">op</a>)-><a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#op\">op</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#KD_FONT_FLAG_OLD\">KD_FONT_FLAG_OLD</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#con_font_op\">con_font_op</a>(<a class=\"id\" href=\"#vc\">vc</a>, <a class=\"id\" href=\"#op\">op</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>((struct <a class=\"id\" href=\"#compat_console_font_op\">compat_console_font_op</a> *)<a class=\"id\" href=\"#op\">op</a>)-><a class=\"id\" href=\"#data\">data</a> = (unsigned long)<a class=\"id\" href=\"#op\">op</a>-><a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#fontop\">fontop</a>, <a class=\"id\" href=\"#op\">op</a>, sizeof(struct <a class=\"id\" href=\"#compat_console_font_op\">compat_console_font_op</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#compat_unimapdesc\">compat_unimapdesc</a> {", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#entry_ct\">entry_ct</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_caddr_t\">compat_caddr_t</a> <a class=\"id\" href=\"#entries\">entries</a>;", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int", 
"<a class=\"id\" href=\"#compat_unimap_ioctl\">compat_unimap_ioctl</a>(unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>, struct <a class=\"id\" href=\"#compat_unimapdesc\">compat_unimapdesc</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#user_ud\">user_ud</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> int <a class=\"id\" href=\"#perm\">perm</a>, struct <a class=\"id\" href=\"#vc_data\">vc_data</a> *<a class=\"id\" href=\"#vc\">vc</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#compat_unimapdesc\">compat_unimapdesc</a> <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#unipair\">unipair</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#tmp_entries\">tmp_entries</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#tmp\">tmp</a>, <a class=\"id\" href=\"#user_ud\">user_ud</a>, sizeof <a class=\"id\" href=\"#tmp\">tmp</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp_entries\">tmp_entries</a> = <a class=\"id\" href=\"#compat_ptr\">compat_ptr</a>(<a class=\"id\" href=\"#tmp\">tmp</a>.<a class=\"id\" href=\"#entries\">entries</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tmp_entries\">tmp_entries</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#access_ok\">access_ok</a>(<a class=\"id\" href=\"#VERIFY_WRITE\">VERIFY_WRITE</a>, <a class=\"id\" href=\"#tmp_entries\">tmp_entries</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a>.<a class=\"id\" href=\"#entry_ct\">entry_ct</a>*sizeof(struct <a class=\"id\" href=\"#unipair\">unipair</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#cmd\">cmd</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PIO_UNIMAP\">PIO_UNIMAP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#perm\">perm</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#con_set_unimap\">con_set_unimap</a>(<a class=\"id\" href=\"#vc\">vc</a>, <a class=\"id\" href=\"#tmp\">tmp</a>.<a class=\"id\" href=\"#entry_ct\">entry_ct</a>, <a class=\"id\" href=\"#tmp_entries\">tmp_entries</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#GIO_UNIMAP\">GIO_UNIMAP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#perm\">perm</a> && <a class=\"id\" href=\"#fg_console\">fg_console</a> != <a class=\"id\" href=\"#vc\">vc</a>-><a class=\"id\" href=\"#vc_num\">vc_num</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#con_get_unimap\">con_get_unimap</a>(<a class=\"id\" href=\"#vc\">vc</a>, <a class=\"id\" href=\"#tmp\">tmp</a>.<a class=\"id\" href=\"#entry_ct\">entry_ct</a>, &amp;(<a class=\"id\" href=\"#user_ud\">user_ud</a>-><a class=\"id\" href=\"#entry_ct\">entry_ct</a>), <a class=\"id\" href=\"#tmp_entries\">tmp_entries</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"long <a class=\"id\" href=\"#vt_compat_ioctl\">vt_compat_ioctl</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, struct <a class=\"id\" href=\"#file\">file</a> * <a class=\"id\" href=\"#file\">file</a>,", 
"<span class=\"ts\"/>     unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>, unsigned long <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vc_data\">vc_data</a> *<a class=\"id\" href=\"#vc\">vc</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver_data\">driver_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#console_font_op\">console_font_op</a> <a class=\"id\" href=\"#op\">op</a>;<span class=\"ts\"/><span class=\"comment\">/* used in multiple places here */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kbd_struct\">kbd_struct</a> *<a class=\"id\" href=\"#kbd\">kbd</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#console\">console</a>;", 
"<span class=\"ts\"/>void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#up\">up</a> = (void <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#arg\">arg</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#perm\">perm</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#console\">console</a> = <a class=\"id\" href=\"#vc\">vc</a>-><a class=\"id\" href=\"#vc_num\">vc_num</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_lock\">tty_lock</a>();", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#vc_cons_allocated\">vc_cons_allocated</a>(<a class=\"id\" href=\"#console\">console</a>)) { <span class=\"ts\"/><span class=\"comment\">/* impossible? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOIOCTLCMD\">ENOIOCTLCMD</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * To have permissions to do most of the vt ioctls, we either have</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to be the owner of the tty, or have CAP_SYS_TTY_CONFIG.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#perm\">perm</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#tty\">tty</a> == <a class=\"id\" href=\"#tty\">tty</a> || <a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_TTY_CONFIG\">CAP_SYS_TTY_CONFIG</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#perm\">perm</a> = 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kbd\">kbd</a> = <a class=\"id\" href=\"#kbd_table\">kbd_table</a> + <a class=\"id\" href=\"#console\">console</a>;", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#cmd\">cmd</a>) {", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * these need special handlers for incompatible data structures</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PIO_FONTX\">PIO_FONTX</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#GIO_FONTX\">GIO_FONTX</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#compat_fontx_ioctl\">compat_fontx_ioctl</a>(<a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#up\">up</a>, <a class=\"id\" href=\"#perm\">perm</a>, &amp;<a class=\"id\" href=\"#op\">op</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#KDFONTOP\">KDFONTOP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#compat_kdfontop_ioctl\">compat_kdfontop_ioctl</a>(<a class=\"id\" href=\"#up\">up</a>, <a class=\"id\" href=\"#perm\">perm</a>, &amp;<a class=\"id\" href=\"#op\">op</a>, <a class=\"id\" href=\"#vc\">vc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PIO_UNIMAP\">PIO_UNIMAP</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#GIO_UNIMAP\">GIO_UNIMAP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#compat_unimap_ioctl\">compat_unimap_ioctl</a>(<a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#up\">up</a>, <a class=\"id\" href=\"#perm\">perm</a>, <a class=\"id\" href=\"#vc\">vc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * all these treat 'arg' as an integer</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#KIOCSOUND\">KIOCSOUND</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#KDMKTONE\">KDMKTONE</a>:", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86\">CONFIG_X86</a>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#KDADDIO\">KDADDIO</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#KDDELIO\">KDDELIO</a>:", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#KDSETMODE\">KDSETMODE</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#KDMAPDISP\">KDMAPDISP</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#KDUNMAPDISP\">KDUNMAPDISP</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#KDSKBMODE\">KDSKBMODE</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#KDSKBMETA\">KDSKBMETA</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#KDSKBLED\">KDSKBLED</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#KDSETLED\">KDSETLED</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#KDSIGACCEPT\">KDSIGACCEPT</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#VT_ACTIVATE\">VT_ACTIVATE</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#VT_WAITACTIVE\">VT_WAITACTIVE</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#VT_RELDISP\">VT_RELDISP</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#VT_DISALLOCATE\">VT_DISALLOCATE</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#VT_RESIZE\">VT_RESIZE</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#VT_RESIZEX\">VT_RESIZEX</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fallback\">fallback</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the rest has a compatible data structure behind arg,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * but we have to convert it to a proper 64 bit pointer.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a> = (unsigned long)<a class=\"id\" href=\"#compat_ptr\">compat_ptr</a>(<a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fallback\">fallback</a>;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_unlock\">tty_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<a class=\"id\" href=\"#fallback\">fallback</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_unlock\">tty_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#vt_ioctl\">vt_ioctl</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#arg\">arg</a>);", 
"}", 
"", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_COMPAT */</span>", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Performs the back end of a vt switch. Called under the console</span>", 
"<span class=\"comment\"> * semaphore.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#complete_change_console\">complete_change_console</a>(struct <a class=\"id\" href=\"#vc_data\">vc_data</a> *<a class=\"id\" href=\"#vc\">vc</a>)", 
"{", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#old_vc_mode\">old_vc_mode</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#old\">old</a> = <a class=\"id\" href=\"#fg_console\">fg_console</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#last_console\">last_console</a> = <a class=\"id\" href=\"#fg_console\">fg_console</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If we're switching, we could be going from KD_GRAPHICS to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * KD_TEXT mode or vice versa, which means we need to blank or</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * unblank the screen later.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_vc_mode\">old_vc_mode</a> = <a class=\"id\" href=\"#vc_cons\">vc_cons</a>[<a class=\"id\" href=\"#fg_console\">fg_console</a>].<a class=\"id\" href=\"#d\">d</a>-><a class=\"id\" href=\"#vc_mode\">vc_mode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#switch_screen\">switch_screen</a>(<a class=\"id\" href=\"#vc\">vc</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This can't appear below a successful kill_pid().  If it did,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * then the *blank_screen operation could occur while X, having</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * received acqsig, is waking up on another processor.  This</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * condition can lead to overlapping accesses to the VGA range</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and the framebuffer (causing system lockups).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * To account for this we duplicate this code below only if the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * controlling process is gone and we've called reset_vc.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#old_vc_mode\">old_vc_mode</a> != <a class=\"id\" href=\"#vc\">vc</a>-><a class=\"id\" href=\"#vc_mode\">vc_mode</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#vc\">vc</a>-><a class=\"id\" href=\"#vc_mode\">vc_mode</a> == <a class=\"id\" href=\"#KD_TEXT\">KD_TEXT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_unblank_screen\">do_unblank_screen</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_blank_screen\">do_blank_screen</a>(1);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If this new console is under process control, send it a signal</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * telling it that it has acquired. Also check if it has died and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * clean up (similar to logic employed in change_console())</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vc\">vc</a>-><a class=\"id\" href=\"#vt_mode\">vt_mode</a>.<a class=\"id\" href=\"#mode\">mode</a> == <a class=\"id\" href=\"#VT_PROCESS\">VT_PROCESS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Send the signal as privileged - kill_pid() will</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * tell us if the process has gone or something else</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * is awry</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#kill_pid\">kill_pid</a>(<a class=\"id\" href=\"#vc\">vc</a>-><a class=\"id\" href=\"#vt_pid\">vt_pid</a>, <a class=\"id\" href=\"#vc\">vc</a>-><a class=\"id\" href=\"#vt_mode\">vt_mode</a>.<a class=\"id\" href=\"#acqsig\">acqsig</a>, 1) != 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The controlling process has died, so we revert back to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * normal operation. In this case, we'll also change back</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * to KD_TEXT mode. I'm not sure if this is strictly correct</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * but it saves the agony when the X server dies and the screen</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * remains blanked due to KD_GRAPHICS! It would be nice to do</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * this outside of VT_PROCESS but there is no single process</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * to account for and tracking tty count may be undesirable.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reset_vc\">reset_vc</a>(<a class=\"id\" href=\"#vc\">vc</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#old_vc_mode\">old_vc_mode</a> != <a class=\"id\" href=\"#vc\">vc</a>-><a class=\"id\" href=\"#vc_mode\">vc_mode</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#vc\">vc</a>-><a class=\"id\" href=\"#vc_mode\">vc_mode</a> == <a class=\"id\" href=\"#KD_TEXT\">KD_TEXT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_unblank_screen\">do_unblank_screen</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_blank_screen\">do_blank_screen</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Wake anyone waiting for their VT to activate</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vt_event_post\">vt_event_post</a>(<a class=\"id\" href=\"#VT_EVENT_SWITCH\">VT_EVENT_SWITCH</a>, <a class=\"id\" href=\"#old\">old</a>, <a class=\"id\" href=\"#vc\">vc</a>-><a class=\"id\" href=\"#vc_num\">vc_num</a>);", 
"<span class=\"ts\"/>return;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Performs the front-end of a vt switch</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#change_console\">change_console</a>(struct <a class=\"id\" href=\"#vc_data\">vc_data</a> *<a class=\"id\" href=\"#new_vc\">new_vc</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vc_data\">vc_data</a> *<a class=\"id\" href=\"#vc\">vc</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#new_vc\">new_vc</a> || <a class=\"id\" href=\"#new_vc\">new_vc</a>-><a class=\"id\" href=\"#vc_num\">vc_num</a> == <a class=\"id\" href=\"#fg_console\">fg_console</a> || <a class=\"id\" href=\"#vt_dont_switch\">vt_dont_switch</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If this vt is in process mode, then we need to handshake with</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * that process before switching. Essentially, we store where that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * vt wants to switch to and wait for it to tell us when it's done</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * (via VT_RELDISP ioctl).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We also check to see if the controlling process still exists.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If it doesn't, we reset this vt to auto mode and continue.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This is a cheap way to track process control. The worst thing</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * that can happen is: we send a signal to a process, it dies, and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the switch gets \"lost\" waiting for a response; hopefully, the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * user will try again, we'll detect the process is gone (unless</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the user waits just the right amount of time :-) and revert the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * vt to auto control.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vc\">vc</a> = <a class=\"id\" href=\"#vc_cons\">vc_cons</a>[<a class=\"id\" href=\"#fg_console\">fg_console</a>].<a class=\"id\" href=\"#d\">d</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vc\">vc</a>-><a class=\"id\" href=\"#vt_mode\">vt_mode</a>.<a class=\"id\" href=\"#mode\">mode</a> == <a class=\"id\" href=\"#VT_PROCESS\">VT_PROCESS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Send the signal as privileged - kill_pid() will</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * tell us if the process has gone or something else</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * is awry.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We need to set vt_newvt *before* sending the signal or we</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * have a race.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vc\">vc</a>-><a class=\"id\" href=\"#vt_newvt\">vt_newvt</a> = <a class=\"id\" href=\"#new_vc\">new_vc</a>-><a class=\"id\" href=\"#vc_num\">vc_num</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#kill_pid\">kill_pid</a>(<a class=\"id\" href=\"#vc\">vc</a>-><a class=\"id\" href=\"#vt_pid\">vt_pid</a>, <a class=\"id\" href=\"#vc\">vc</a>-><a class=\"id\" href=\"#vt_mode\">vt_mode</a>.<a class=\"id\" href=\"#relsig\">relsig</a>, 1) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * It worked. Mark the vt to switch to and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * return. The process needs to send us a</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * VT_RELDISP ioctl to complete the switch.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The controlling process has died, so we revert back to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * normal operation. In this case, we'll also change back</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * to KD_TEXT mode. I'm not sure if this is strictly correct</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * but it saves the agony when the X server dies and the screen</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * remains blanked due to KD_GRAPHICS! It would be nice to do</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * this outside of VT_PROCESS but there is no single process</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * to account for and tracking tty count may be undesirable.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reset_vc\">reset_vc</a>(<a class=\"id\" href=\"#vc\">vc</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Fall through to normal (VT_AUTO) handling of the switch...</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Ignore all switches in KD_GRAPHICS+VT_AUTO mode</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vc\">vc</a>-><a class=\"id\" href=\"#vc_mode\">vc_mode</a> == <a class=\"id\" href=\"#KD_GRAPHICS\">KD_GRAPHICS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#complete_change_console\">complete_change_console</a>(<a class=\"id\" href=\"#new_vc\">new_vc</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Perform a kernel triggered VT switch for suspend/resume */</span>", 
"", 
"static int <a class=\"id\" href=\"#disable_vt_switch\">disable_vt_switch</a>;", 
"", 
"int <a class=\"id\" href=\"#vt_move_to_console\">vt_move_to_console</a>(unsigned int <a class=\"id\" href=\"#vt\">vt</a>, int <a class=\"id\" href=\"#alloc\">alloc</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#prev\">prev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acquire_console_sem\">acquire_console_sem</a>();", 
"<span class=\"ts\"/><span class=\"comment\">/* Graphics mode - up to X */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#disable_vt_switch\">disable_vt_switch</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#release_console_sem\">release_console_sem</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#prev\">prev</a> = <a class=\"id\" href=\"#fg_console\">fg_console</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#alloc\">alloc</a> && <a class=\"id\" href=\"#vc_allocate\">vc_allocate</a>(<a class=\"id\" href=\"#vt\">vt</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* we can't have a free VC for now. Too bad,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * we don't want to mess the screen for now. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#release_console_sem\">release_console_sem</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#set_console\">set_console</a>(<a class=\"id\" href=\"#vt\">vt</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We're unable to switch to the SUSPEND_CONSOLE.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Let the calling function know so it can decide</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * what to do.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#release_console_sem\">release_console_sem</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_console_sem\">release_console_sem</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_lock\">tty_lock</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vt_waitactive\">vt_waitactive</a>(<a class=\"id\" href=\"#vt\">vt</a> + 1)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"Suspend: Can't switch VCs.\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_unlock\">tty_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINTR\">EINTR</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_unlock\">tty_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#prev\">prev</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Normally during a suspend, we allocate a new console and switch to it.</span>", 
"<span class=\"comment\"> * When we resume, we switch back to the original console.  This switch</span>", 
"<span class=\"comment\"> * can be slow, so on systems where the framebuffer can handle restoration</span>", 
"<span class=\"comment\"> * of video registers anyways, there's little point in doing the console</span>", 
"<span class=\"comment\"> * switch.  This function allows you to disable it by passing it '0'.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#pm_set_vt_switch\">pm_set_vt_switch</a>(int <a class=\"id\" href=\"#do_switch\">do_switch</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acquire_console_sem\">acquire_console_sem</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disable_vt_switch\">disable_vt_switch</a> = !<a class=\"id\" href=\"#do_switch\">do_switch</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_console_sem\">release_console_sem</a>();", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#pm_set_vt_switch\">pm_set_vt_switch</a>);", 
];
xr_frag_insert('l/7e/408178311ccec70c7c71503cd9680c84c0855b.xr', __xr_tmp);
