var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * local apic based NMI watchdog for various CPUs.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file also handles reservation of performance counters for coordination</span>", 
"<span class=\"comment\"> * with other users (like oprofile).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Note that these events normally don't tick when the CPU idles. This means</span>", 
"<span class=\"comment\"> * the frequency varies with CPU load.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Original code for K7/P6 written by Keith Owens</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#percpu\">percpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bitops\">bitops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#smp\">smp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#nmi\">nmi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kprobes\">kprobes</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#apic\">apic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#perf_event\">perf_event</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#nmi_watchdog_ctlblk\">nmi_watchdog_ctlblk</a> {", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cccr_msr\">cccr_msr</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#perfctr_msr\">perfctr_msr</a>;  <span class=\"comment\">/* the MSR to reset in NMI handler */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#evntsel_msr\">evntsel_msr</a>;  <span class=\"comment\">/* the MSR to select the events to handle */</span>", 
"};", 
"", 
"<span class=\"comment\">/* Interface defining a CPU specific perfctr watchdog */</span>", 
"struct <a class=\"id\" href=\"#wd_ops\">wd_ops</a> {", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#reserve\">reserve</a>)(void);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#unreserve\">unreserve</a>)(void);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#setup\">setup</a>)(unsigned <a class=\"id\" href=\"#nmi_hz\">nmi_hz</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#rearm\">rearm</a>)(struct <a class=\"id\" href=\"#nmi_watchdog_ctlblk\">nmi_watchdog_ctlblk</a> *<a class=\"id\" href=\"#wd\">wd</a>, unsigned <a class=\"id\" href=\"#nmi_hz\">nmi_hz</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#stop\">stop</a>)(void);", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#perfctr\">perfctr</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#evntsel\">evntsel</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#checkbit\">checkbit</a>;", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#wd_ops\">wd_ops</a> *<a class=\"id\" href=\"#wd_ops\">wd_ops</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * this number is calculated from Intel's MSR_P4_CRU_ESCR5 register and it's</span>", 
"<span class=\"comment\"> * offset from MSR_P4_BSU_ESCR0.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * It will be the max for all platforms (for now)</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NMI_MAX_COUNTER_BITS\">NMI_MAX_COUNTER_BITS</a> 66", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * perfctr_nmi_owner tracks the ownership of the perfctr registers:</span>", 
"<span class=\"comment\"> * evtsel_nmi_owner tracks the ownership of the event selection</span>", 
"<span class=\"comment\"> * - different performance counters/ event selection may be reserved for</span>", 
"<span class=\"comment\"> *   different subsystems this reservation system just tries to coordinate</span>", 
"<span class=\"comment\"> *   things a little</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#DECLARE_BITMAP\">DECLARE_BITMAP</a>(<a class=\"id\" href=\"#perfctr_nmi_owner\">perfctr_nmi_owner</a>, <a class=\"id\" href=\"#NMI_MAX_COUNTER_BITS\">NMI_MAX_COUNTER_BITS</a>);", 
"static <a class=\"id\" href=\"#DECLARE_BITMAP\">DECLARE_BITMAP</a>(<a class=\"id\" href=\"#evntsel_nmi_owner\">evntsel_nmi_owner</a>, <a class=\"id\" href=\"#NMI_MAX_COUNTER_BITS\">NMI_MAX_COUNTER_BITS</a>);", 
"", 
"static <a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(struct <a class=\"id\" href=\"#nmi_watchdog_ctlblk\">nmi_watchdog_ctlblk</a>, <a class=\"id\" href=\"#nmi_watchdog_ctlblk\">nmi_watchdog_ctlblk</a>);", 
"", 
"<span class=\"comment\">/* converts an msr to an appropriate reservation bit */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#nmi_perfctr_msr_to_bit\">nmi_perfctr_msr_to_bit</a>(unsigned int <a class=\"id\" href=\"#msr\">msr</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* returns the bit offset of the performance counter register */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86_vendor\">x86_vendor</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#X86_VENDOR_AMD\">X86_VENDOR_AMD</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#msr\">msr</a> - <a class=\"id\" href=\"#MSR_K7_PERFCTR0\">MSR_K7_PERFCTR0</a>;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#X86_VENDOR_INTEL\">X86_VENDOR_INTEL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_has\">cpu_has</a>(&amp;<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>, <a class=\"id\" href=\"#X86_FEATURE_ARCH_PERFMON\">X86_FEATURE_ARCH_PERFMON</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#msr\">msr</a> - <a class=\"id\" href=\"#MSR_ARCH_PERFMON_PERFCTR0\">MSR_ARCH_PERFMON_PERFCTR0</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86\">x86</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case 6:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#msr\">msr</a> - <a class=\"id\" href=\"#MSR_P6_PERFCTR0\">MSR_P6_PERFCTR0</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 15:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#msr\">msr</a> - <a class=\"id\" href=\"#MSR_P4_BPU_PERFCTR0\">MSR_P4_BPU_PERFCTR0</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * converts an msr to an appropriate reservation bit</span>", 
"<span class=\"comment\"> * returns the bit offset of the event selection register</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#nmi_evntsel_msr_to_bit\">nmi_evntsel_msr_to_bit</a>(unsigned int <a class=\"id\" href=\"#msr\">msr</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* returns the bit offset of the event selection register */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86_vendor\">x86_vendor</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#X86_VENDOR_AMD\">X86_VENDOR_AMD</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#msr\">msr</a> - <a class=\"id\" href=\"#MSR_K7_EVNTSEL0\">MSR_K7_EVNTSEL0</a>;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#X86_VENDOR_INTEL\">X86_VENDOR_INTEL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_has\">cpu_has</a>(&amp;<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>, <a class=\"id\" href=\"#X86_FEATURE_ARCH_PERFMON\">X86_FEATURE_ARCH_PERFMON</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#msr\">msr</a> - <a class=\"id\" href=\"#MSR_ARCH_PERFMON_EVENTSEL0\">MSR_ARCH_PERFMON_EVENTSEL0</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86\">x86</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case 6:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#msr\">msr</a> - <a class=\"id\" href=\"#MSR_P6_EVNTSEL0\">MSR_P6_EVNTSEL0</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 15:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#msr\">msr</a> - <a class=\"id\" href=\"#MSR_P4_BSU_ESCR0\">MSR_P4_BSU_ESCR0</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"", 
"}", 
"", 
"<span class=\"comment\">/* checks for a bit availability (hack for oprofile) */</span>", 
"int <a class=\"id\" href=\"#avail_to_resrv_perfctr_nmi_bit\">avail_to_resrv_perfctr_nmi_bit</a>(unsigned int <a class=\"id\" href=\"#counter\">counter</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#counter\">counter</a> &gt; <a class=\"id\" href=\"#NMI_MAX_COUNTER_BITS\">NMI_MAX_COUNTER_BITS</a>);", 
"", 
"<span class=\"ts\"/>return !<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#counter\">counter</a>, <a class=\"id\" href=\"#perfctr_nmi_owner\">perfctr_nmi_owner</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#avail_to_resrv_perfctr_nmi_bit\">avail_to_resrv_perfctr_nmi_bit</a>);", 
"", 
"int <a class=\"id\" href=\"#reserve_perfctr_nmi\">reserve_perfctr_nmi</a>(unsigned int <a class=\"id\" href=\"#msr\">msr</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#counter\">counter</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#counter\">counter</a> = <a class=\"id\" href=\"#nmi_perfctr_msr_to_bit\">nmi_perfctr_msr_to_bit</a>(<a class=\"id\" href=\"#msr\">msr</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* register not managed by the allocator? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#counter\">counter</a> &gt; <a class=\"id\" href=\"#NMI_MAX_COUNTER_BITS\">NMI_MAX_COUNTER_BITS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_and_set_bit\">test_and_set_bit</a>(<a class=\"id\" href=\"#counter\">counter</a>, <a class=\"id\" href=\"#perfctr_nmi_owner\">perfctr_nmi_owner</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#reserve_perfctr_nmi\">reserve_perfctr_nmi</a>);", 
"", 
"void <a class=\"id\" href=\"#release_perfctr_nmi\">release_perfctr_nmi</a>(unsigned int <a class=\"id\" href=\"#msr\">msr</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#counter\">counter</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#counter\">counter</a> = <a class=\"id\" href=\"#nmi_perfctr_msr_to_bit\">nmi_perfctr_msr_to_bit</a>(<a class=\"id\" href=\"#msr\">msr</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* register not managed by the allocator? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#counter\">counter</a> &gt; <a class=\"id\" href=\"#NMI_MAX_COUNTER_BITS\">NMI_MAX_COUNTER_BITS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#counter\">counter</a>, <a class=\"id\" href=\"#perfctr_nmi_owner\">perfctr_nmi_owner</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#release_perfctr_nmi\">release_perfctr_nmi</a>);", 
"", 
"int <a class=\"id\" href=\"#reserve_evntsel_nmi\">reserve_evntsel_nmi</a>(unsigned int <a class=\"id\" href=\"#msr\">msr</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#counter\">counter</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#counter\">counter</a> = <a class=\"id\" href=\"#nmi_evntsel_msr_to_bit\">nmi_evntsel_msr_to_bit</a>(<a class=\"id\" href=\"#msr\">msr</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* register not managed by the allocator? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#counter\">counter</a> &gt; <a class=\"id\" href=\"#NMI_MAX_COUNTER_BITS\">NMI_MAX_COUNTER_BITS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_and_set_bit\">test_and_set_bit</a>(<a class=\"id\" href=\"#counter\">counter</a>, <a class=\"id\" href=\"#evntsel_nmi_owner\">evntsel_nmi_owner</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#reserve_evntsel_nmi\">reserve_evntsel_nmi</a>);", 
"", 
"void <a class=\"id\" href=\"#release_evntsel_nmi\">release_evntsel_nmi</a>(unsigned int <a class=\"id\" href=\"#msr\">msr</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#counter\">counter</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#counter\">counter</a> = <a class=\"id\" href=\"#nmi_evntsel_msr_to_bit\">nmi_evntsel_msr_to_bit</a>(<a class=\"id\" href=\"#msr\">msr</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* register not managed by the allocator? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#counter\">counter</a> &gt; <a class=\"id\" href=\"#NMI_MAX_COUNTER_BITS\">NMI_MAX_COUNTER_BITS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#counter\">counter</a>, <a class=\"id\" href=\"#evntsel_nmi_owner\">evntsel_nmi_owner</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#release_evntsel_nmi\">release_evntsel_nmi</a>);", 
"", 
"void <a class=\"id\" href=\"#disable_lapic_nmi_watchdog\">disable_lapic_nmi_watchdog</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#nmi_watchdog\">nmi_watchdog</a> != <a class=\"id\" href=\"#NMI_LOCAL_APIC\">NMI_LOCAL_APIC</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#nmi_active\">nmi_active</a>) <= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#on_each_cpu\">on_each_cpu</a>(<a class=\"id\" href=\"#stop_apic_nmi_watchdog\">stop_apic_nmi_watchdog</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 1);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#wd_ops\">wd_ops</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wd_ops\">wd_ops</a>-><a class=\"id\" href=\"#unreserve\">unreserve</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#nmi_active\">nmi_active</a>) != 0);", 
"}", 
"", 
"void <a class=\"id\" href=\"#enable_lapic_nmi_watchdog\">enable_lapic_nmi_watchdog</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#nmi_watchdog\">nmi_watchdog</a> != <a class=\"id\" href=\"#NMI_LOCAL_APIC\">NMI_LOCAL_APIC</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* are we already enabled */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#nmi_active\">nmi_active</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* are we lapic aware */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#wd_ops\">wd_ops</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#wd_ops\">wd_ops</a>-><a class=\"id\" href=\"#reserve\">reserve</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"NMI watchdog: cannot reserve perfctrs\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#on_each_cpu\">on_each_cpu</a>(<a class=\"id\" href=\"#setup_apic_nmi_watchdog\">setup_apic_nmi_watchdog</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#touch_nmi_watchdog\">touch_nmi_watchdog</a>();", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Activate the NMI watchdog via the local APIC.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static unsigned int <a class=\"id\" href=\"#adjust_for_32bit_ctr\">adjust_for_32bit_ctr</a>(unsigned int <a class=\"id\" href=\"#hz\">hz</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#counter_val\">counter_val</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#hz\">hz</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * On Intel CPUs with P6/ARCH_PERFMON only 32 bits in the counter</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * are writable, with higher bits sign extending from bit 31.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * So, we can only program the counter with 31 bit values and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 32nd bit should be 1, for 33.. to be 1.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Find the appropriate nmi_hz</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#counter_val\">counter_val</a> = (<a class=\"id\" href=\"#u64\">u64</a>)<a class=\"id\" href=\"#cpu_khz\">cpu_khz</a> * 1000;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#do_div\">do_div</a>(<a class=\"id\" href=\"#counter_val\">counter_val</a>, <a class=\"id\" href=\"#retval\">retval</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#counter_val\">counter_val</a> &gt; 0x7fffffffULL) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#count\">count</a> = (<a class=\"id\" href=\"#u64\">u64</a>)<a class=\"id\" href=\"#cpu_khz\">cpu_khz</a> * 1000;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_div\">do_div</a>(<a class=\"id\" href=\"#count\">count</a>, 0x7fffffffUL);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#count\">count</a> + 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#write_watchdog_counter\">write_watchdog_counter</a>(unsigned int <a class=\"id\" href=\"#perfctr_msr\">perfctr_msr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const char *<a class=\"id\" href=\"#descr\">descr</a>, unsigned <a class=\"id\" href=\"#nmi_hz\">nmi_hz</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#count\">count</a> = (<a class=\"id\" href=\"#u64\">u64</a>)<a class=\"id\" href=\"#cpu_khz\">cpu_khz</a> * 1000;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#do_div\">do_div</a>(<a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#nmi_hz\">nmi_hz</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#descr\">descr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"setting %s to -0x%08Lx\\n\", <a class=\"id\" href=\"#descr\">descr</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wrmsrl\">wrmsrl</a>(<a class=\"id\" href=\"#perfctr_msr\">perfctr_msr</a>, 0 - <a class=\"id\" href=\"#count\">count</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#write_watchdog_counter32\">write_watchdog_counter32</a>(unsigned int <a class=\"id\" href=\"#perfctr_msr\">perfctr_msr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const char *<a class=\"id\" href=\"#descr\">descr</a>, unsigned <a class=\"id\" href=\"#nmi_hz\">nmi_hz</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#count\">count</a> = (<a class=\"id\" href=\"#u64\">u64</a>)<a class=\"id\" href=\"#cpu_khz\">cpu_khz</a> * 1000;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#do_div\">do_div</a>(<a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#nmi_hz\">nmi_hz</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#descr\">descr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"setting %s to -0x%08Lx\\n\", <a class=\"id\" href=\"#descr\">descr</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wrmsr\">wrmsr</a>(<a class=\"id\" href=\"#perfctr_msr\">perfctr_msr</a>, (<a class=\"id\" href=\"#u32\">u32</a>)(-<a class=\"id\" href=\"#count\">count</a>), 0);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * AMD K7/K8/Family10h/Family11h support.</span>", 
"<span class=\"comment\"> * AMD keeps this interface nicely stable so there is not much variety</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#K7_EVNTSEL_ENABLE\">K7_EVNTSEL_ENABLE</a><span class=\"ts\"/>(1 << 22)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#K7_EVNTSEL_INT\">K7_EVNTSEL_INT</a><span class=\"ts\"/><span class=\"ts\"/>(1 << 20)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#K7_EVNTSEL_OS\">K7_EVNTSEL_OS</a><span class=\"ts\"/><span class=\"ts\"/>(1 << 17)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#K7_EVNTSEL_USR\">K7_EVNTSEL_USR</a><span class=\"ts\"/><span class=\"ts\"/>(1 << 16)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#K7_EVENT_CYCLES_PROCESSOR_IS_RUNNING\">K7_EVENT_CYCLES_PROCESSOR_IS_RUNNING</a><span class=\"ts\"/>0x76", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#K7_NMI_EVENT\">K7_NMI_EVENT</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#K7_EVENT_CYCLES_PROCESSOR_IS_RUNNING\">K7_EVENT_CYCLES_PROCESSOR_IS_RUNNING</a>", 
"", 
"static int <a class=\"id\" href=\"#setup_k7_watchdog\">setup_k7_watchdog</a>(unsigned <a class=\"id\" href=\"#nmi_hz\">nmi_hz</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#perfctr_msr\">perfctr_msr</a>, <a class=\"id\" href=\"#evntsel_msr\">evntsel_msr</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#evntsel\">evntsel</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nmi_watchdog_ctlblk\">nmi_watchdog_ctlblk</a> *<a class=\"id\" href=\"#wd\">wd</a> = &amp;<a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#nmi_watchdog_ctlblk\">nmi_watchdog_ctlblk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#perfctr_msr\">perfctr_msr</a> = <a class=\"id\" href=\"#wd_ops\">wd_ops</a>-><a class=\"id\" href=\"#perfctr\">perfctr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evntsel_msr\">evntsel_msr</a> = <a class=\"id\" href=\"#wd_ops\">wd_ops</a>-><a class=\"id\" href=\"#evntsel\">evntsel</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wrmsrl\">wrmsrl</a>(<a class=\"id\" href=\"#perfctr_msr\">perfctr_msr</a>, 0UL);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evntsel\">evntsel</a> = <a class=\"id\" href=\"#K7_EVNTSEL_INT\">K7_EVNTSEL_INT</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>| <a class=\"id\" href=\"#K7_EVNTSEL_OS\">K7_EVNTSEL_OS</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>| <a class=\"id\" href=\"#K7_EVNTSEL_USR\">K7_EVNTSEL_USR</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>| <a class=\"id\" href=\"#K7_NMI_EVENT\">K7_NMI_EVENT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* setup the timer */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wrmsr\">wrmsr</a>(<a class=\"id\" href=\"#evntsel_msr\">evntsel_msr</a>, <a class=\"id\" href=\"#evntsel\">evntsel</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_watchdog_counter\">write_watchdog_counter</a>(<a class=\"id\" href=\"#perfctr_msr\">perfctr_msr</a>, \"K7_PERFCTR0\", <a class=\"id\" href=\"#nmi_hz\">nmi_hz</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* initialize the wd struct before enabling */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wd\">wd</a>-><a class=\"id\" href=\"#perfctr_msr\">perfctr_msr</a> = <a class=\"id\" href=\"#perfctr_msr\">perfctr_msr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wd\">wd</a>-><a class=\"id\" href=\"#evntsel_msr\">evntsel_msr</a> = <a class=\"id\" href=\"#evntsel_msr\">evntsel_msr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wd\">wd</a>-><a class=\"id\" href=\"#cccr_msr\">cccr_msr</a> = 0;  <span class=\"comment\">/* unused */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* ok, everything is initialized, announce that we're set */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpu_nmi_set_wd_enabled\">cpu_nmi_set_wd_enabled</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic_write\">apic_write</a>(<a class=\"id\" href=\"#APIC_LVTPC\">APIC_LVTPC</a>, <a class=\"id\" href=\"#APIC_DM_NMI\">APIC_DM_NMI</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evntsel\">evntsel</a> |= <a class=\"id\" href=\"#K7_EVNTSEL_ENABLE\">K7_EVNTSEL_ENABLE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wrmsr\">wrmsr</a>(<a class=\"id\" href=\"#evntsel_msr\">evntsel_msr</a>, <a class=\"id\" href=\"#evntsel\">evntsel</a>, 0);", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#single_msr_stop_watchdog\">single_msr_stop_watchdog</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nmi_watchdog_ctlblk\">nmi_watchdog_ctlblk</a> *<a class=\"id\" href=\"#wd\">wd</a> = &amp;<a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#nmi_watchdog_ctlblk\">nmi_watchdog_ctlblk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wrmsr\">wrmsr</a>(<a class=\"id\" href=\"#wd\">wd</a>-><a class=\"id\" href=\"#evntsel_msr\">evntsel_msr</a>, 0, 0);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#single_msr_reserve\">single_msr_reserve</a>(void)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#reserve_perfctr_nmi\">reserve_perfctr_nmi</a>(<a class=\"id\" href=\"#wd_ops\">wd_ops</a>-><a class=\"id\" href=\"#perfctr\">perfctr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#reserve_evntsel_nmi\">reserve_evntsel_nmi</a>(<a class=\"id\" href=\"#wd_ops\">wd_ops</a>-><a class=\"id\" href=\"#evntsel\">evntsel</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#release_perfctr_nmi\">release_perfctr_nmi</a>(<a class=\"id\" href=\"#wd_ops\">wd_ops</a>-><a class=\"id\" href=\"#perfctr\">perfctr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#single_msr_unreserve\">single_msr_unreserve</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_evntsel_nmi\">release_evntsel_nmi</a>(<a class=\"id\" href=\"#wd_ops\">wd_ops</a>-><a class=\"id\" href=\"#evntsel\">evntsel</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_perfctr_nmi\">release_perfctr_nmi</a>(<a class=\"id\" href=\"#wd_ops\">wd_ops</a>-><a class=\"id\" href=\"#perfctr\">perfctr</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__kprobes\">__kprobes</a>", 
"<a class=\"id\" href=\"#single_msr_rearm\">single_msr_rearm</a>(struct <a class=\"id\" href=\"#nmi_watchdog_ctlblk\">nmi_watchdog_ctlblk</a> *<a class=\"id\" href=\"#wd\">wd</a>, unsigned <a class=\"id\" href=\"#nmi_hz\">nmi_hz</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* start the cycle over again */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_watchdog_counter\">write_watchdog_counter</a>(<a class=\"id\" href=\"#wd\">wd</a>-><a class=\"id\" href=\"#perfctr_msr\">perfctr_msr</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#nmi_hz\">nmi_hz</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#wd_ops\">wd_ops</a> <a class=\"id\" href=\"#k7_wd_ops\">k7_wd_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#reserve\">reserve</a><span class=\"ts\"/>= <a class=\"id\" href=\"#single_msr_reserve\">single_msr_reserve</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#unreserve\">unreserve</a><span class=\"ts\"/>= <a class=\"id\" href=\"#single_msr_unreserve\">single_msr_unreserve</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#setup\">setup</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#setup_k7_watchdog\">setup_k7_watchdog</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#rearm\">rearm</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#single_msr_rearm\">single_msr_rearm</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#single_msr_stop_watchdog\">single_msr_stop_watchdog</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#perfctr\">perfctr</a><span class=\"ts\"/>= <a class=\"id\" href=\"#MSR_K7_PERFCTR0\">MSR_K7_PERFCTR0</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#evntsel\">evntsel</a><span class=\"ts\"/>= <a class=\"id\" href=\"#MSR_K7_EVNTSEL0\">MSR_K7_EVNTSEL0</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#checkbit\">checkbit</a><span class=\"ts\"/>= 1ULL << 47,", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Intel Model 6 (PPro+,P2,P3,P-M,Core1)</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#P6_EVNTSEL0_ENABLE\">P6_EVNTSEL0_ENABLE</a><span class=\"ts\"/>(1 << 22)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#P6_EVNTSEL_INT\">P6_EVNTSEL_INT</a><span class=\"ts\"/><span class=\"ts\"/>(1 << 20)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#P6_EVNTSEL_OS\">P6_EVNTSEL_OS</a><span class=\"ts\"/><span class=\"ts\"/>(1 << 17)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#P6_EVNTSEL_USR\">P6_EVNTSEL_USR</a><span class=\"ts\"/><span class=\"ts\"/>(1 << 16)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#P6_EVENT_CPU_CLOCKS_NOT_HALTED\">P6_EVENT_CPU_CLOCKS_NOT_HALTED</a><span class=\"ts\"/>0x79", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#P6_NMI_EVENT\">P6_NMI_EVENT</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#P6_EVENT_CPU_CLOCKS_NOT_HALTED\">P6_EVENT_CPU_CLOCKS_NOT_HALTED</a>", 
"", 
"static int <a class=\"id\" href=\"#setup_p6_watchdog\">setup_p6_watchdog</a>(unsigned <a class=\"id\" href=\"#nmi_hz\">nmi_hz</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#perfctr_msr\">perfctr_msr</a>, <a class=\"id\" href=\"#evntsel_msr\">evntsel_msr</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#evntsel\">evntsel</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nmi_watchdog_ctlblk\">nmi_watchdog_ctlblk</a> *<a class=\"id\" href=\"#wd\">wd</a> = &amp;<a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#nmi_watchdog_ctlblk\">nmi_watchdog_ctlblk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#perfctr_msr\">perfctr_msr</a> = <a class=\"id\" href=\"#wd_ops\">wd_ops</a>-><a class=\"id\" href=\"#perfctr\">perfctr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evntsel_msr\">evntsel_msr</a> = <a class=\"id\" href=\"#wd_ops\">wd_ops</a>-><a class=\"id\" href=\"#evntsel\">evntsel</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* KVM doesn't implement this MSR */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#wrmsr_safe\">wrmsr_safe</a>(<a class=\"id\" href=\"#perfctr_msr\">perfctr_msr</a>, 0, 0) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evntsel\">evntsel</a> = <a class=\"id\" href=\"#P6_EVNTSEL_INT\">P6_EVNTSEL_INT</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>| <a class=\"id\" href=\"#P6_EVNTSEL_OS\">P6_EVNTSEL_OS</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>| <a class=\"id\" href=\"#P6_EVNTSEL_USR\">P6_EVNTSEL_USR</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>| <a class=\"id\" href=\"#P6_NMI_EVENT\">P6_NMI_EVENT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* setup the timer */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wrmsr\">wrmsr</a>(<a class=\"id\" href=\"#evntsel_msr\">evntsel_msr</a>, <a class=\"id\" href=\"#evntsel\">evntsel</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nmi_hz\">nmi_hz</a> = <a class=\"id\" href=\"#adjust_for_32bit_ctr\">adjust_for_32bit_ctr</a>(<a class=\"id\" href=\"#nmi_hz\">nmi_hz</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_watchdog_counter32\">write_watchdog_counter32</a>(<a class=\"id\" href=\"#perfctr_msr\">perfctr_msr</a>, \"P6_PERFCTR0\", <a class=\"id\" href=\"#nmi_hz\">nmi_hz</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* initialize the wd struct before enabling */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wd\">wd</a>-><a class=\"id\" href=\"#perfctr_msr\">perfctr_msr</a> = <a class=\"id\" href=\"#perfctr_msr\">perfctr_msr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wd\">wd</a>-><a class=\"id\" href=\"#evntsel_msr\">evntsel_msr</a> = <a class=\"id\" href=\"#evntsel_msr\">evntsel_msr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wd\">wd</a>-><a class=\"id\" href=\"#cccr_msr\">cccr_msr</a> = 0;  <span class=\"comment\">/* unused */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* ok, everything is initialized, announce that we're set */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpu_nmi_set_wd_enabled\">cpu_nmi_set_wd_enabled</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic_write\">apic_write</a>(<a class=\"id\" href=\"#APIC_LVTPC\">APIC_LVTPC</a>, <a class=\"id\" href=\"#APIC_DM_NMI\">APIC_DM_NMI</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evntsel\">evntsel</a> |= <a class=\"id\" href=\"#P6_EVNTSEL0_ENABLE\">P6_EVNTSEL0_ENABLE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wrmsr\">wrmsr</a>(<a class=\"id\" href=\"#evntsel_msr\">evntsel_msr</a>, <a class=\"id\" href=\"#evntsel\">evntsel</a>, 0);", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__kprobes\">__kprobes</a> <a class=\"id\" href=\"#p6_rearm\">p6_rearm</a>(struct <a class=\"id\" href=\"#nmi_watchdog_ctlblk\">nmi_watchdog_ctlblk</a> *<a class=\"id\" href=\"#wd\">wd</a>, unsigned <a class=\"id\" href=\"#nmi_hz\">nmi_hz</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * P6 based Pentium M need to re-unmask</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the apic vector but it doesn't hurt</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * other P6 variant.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ArchPerfom/Core Duo also needs this</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic_write\">apic_write</a>(<a class=\"id\" href=\"#APIC_LVTPC\">APIC_LVTPC</a>, <a class=\"id\" href=\"#APIC_DM_NMI\">APIC_DM_NMI</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* P6/ARCH_PERFMON has 32 bit counter write */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_watchdog_counter32\">write_watchdog_counter32</a>(<a class=\"id\" href=\"#wd\">wd</a>-><a class=\"id\" href=\"#perfctr_msr\">perfctr_msr</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#nmi_hz\">nmi_hz</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#wd_ops\">wd_ops</a> <a class=\"id\" href=\"#p6_wd_ops\">p6_wd_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#reserve\">reserve</a><span class=\"ts\"/>= <a class=\"id\" href=\"#single_msr_reserve\">single_msr_reserve</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#unreserve\">unreserve</a><span class=\"ts\"/>= <a class=\"id\" href=\"#single_msr_unreserve\">single_msr_unreserve</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#setup\">setup</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#setup_p6_watchdog\">setup_p6_watchdog</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#rearm\">rearm</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#p6_rearm\">p6_rearm</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#single_msr_stop_watchdog\">single_msr_stop_watchdog</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#perfctr\">perfctr</a><span class=\"ts\"/>= <a class=\"id\" href=\"#MSR_P6_PERFCTR0\">MSR_P6_PERFCTR0</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#evntsel\">evntsel</a><span class=\"ts\"/>= <a class=\"id\" href=\"#MSR_P6_EVNTSEL0\">MSR_P6_EVNTSEL0</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#checkbit\">checkbit</a><span class=\"ts\"/>= 1ULL << 39,", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Intel P4 performance counters.</span>", 
"<span class=\"comment\"> * By far the most complicated of all.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MSR_P4_MISC_ENABLE_PERF_AVAIL\">MSR_P4_MISC_ENABLE_PERF_AVAIL</a><span class=\"ts\"/>(1 << 7)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#P4_ESCR_EVENT_SELECT\">P4_ESCR_EVENT_SELECT</a>(<a class=\"id\" href=\"#N\">N</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#N\">N</a>) << 25)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#P4_ESCR_OS\">P4_ESCR_OS</a><span class=\"ts\"/><span class=\"ts\"/>(1 << 3)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#P4_ESCR_USR\">P4_ESCR_USR</a><span class=\"ts\"/><span class=\"ts\"/>(1 << 2)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#P4_CCCR_OVF_PMI0\">P4_CCCR_OVF_PMI0</a><span class=\"ts\"/>(1 << 26)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#P4_CCCR_OVF_PMI1\">P4_CCCR_OVF_PMI1</a><span class=\"ts\"/>(1 << 27)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#P4_CCCR_THRESHOLD\">P4_CCCR_THRESHOLD</a>(<a class=\"id\" href=\"#N\">N</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#N\">N</a>) << 20)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#P4_CCCR_COMPLEMENT\">P4_CCCR_COMPLEMENT</a><span class=\"ts\"/>(1 << 19)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#P4_CCCR_COMPARE\">P4_CCCR_COMPARE</a><span class=\"ts\"/><span class=\"ts\"/>(1 << 18)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#P4_CCCR_REQUIRED\">P4_CCCR_REQUIRED</a><span class=\"ts\"/>(3 << 16)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#P4_CCCR_ESCR_SELECT\">P4_CCCR_ESCR_SELECT</a>(<a class=\"id\" href=\"#N\">N</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#N\">N</a>) << 13)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#P4_CCCR_ENABLE\">P4_CCCR_ENABLE</a><span class=\"ts\"/><span class=\"ts\"/>(1 << 12)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#P4_CCCR_OVF\">P4_CCCR_OVF</a> <span class=\"ts\"/><span class=\"ts\"/>(1 << 31)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#P4_CONTROLS\">P4_CONTROLS</a> 18", 
"static unsigned int <a class=\"id\" href=\"#p4_controls\">p4_controls</a>[18] = {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MSR_P4_BPU_CCCR0\">MSR_P4_BPU_CCCR0</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MSR_P4_BPU_CCCR1\">MSR_P4_BPU_CCCR1</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MSR_P4_BPU_CCCR2\">MSR_P4_BPU_CCCR2</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MSR_P4_BPU_CCCR3\">MSR_P4_BPU_CCCR3</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MSR_P4_MS_CCCR0\">MSR_P4_MS_CCCR0</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MSR_P4_MS_CCCR1\">MSR_P4_MS_CCCR1</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MSR_P4_MS_CCCR2\">MSR_P4_MS_CCCR2</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MSR_P4_MS_CCCR3\">MSR_P4_MS_CCCR3</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MSR_P4_FLAME_CCCR0\">MSR_P4_FLAME_CCCR0</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MSR_P4_FLAME_CCCR1\">MSR_P4_FLAME_CCCR1</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MSR_P4_FLAME_CCCR2\">MSR_P4_FLAME_CCCR2</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MSR_P4_FLAME_CCCR3\">MSR_P4_FLAME_CCCR3</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MSR_P4_IQ_CCCR0\">MSR_P4_IQ_CCCR0</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MSR_P4_IQ_CCCR1\">MSR_P4_IQ_CCCR1</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MSR_P4_IQ_CCCR2\">MSR_P4_IQ_CCCR2</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MSR_P4_IQ_CCCR3\">MSR_P4_IQ_CCCR3</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MSR_P4_IQ_CCCR4\">MSR_P4_IQ_CCCR4</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MSR_P4_IQ_CCCR5\">MSR_P4_IQ_CCCR5</a>,", 
"};", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Set up IQ_COUNTER0 to behave like a clock, by having IQ_CCCR0 filter</span>", 
"<span class=\"comment\"> * CRU_ESCR0 (with any non-null event selector) through a complemented</span>", 
"<span class=\"comment\"> * max threshold. [IA32-Vol3, Section 14.9.9]</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#setup_p4_watchdog\">setup_p4_watchdog</a>(unsigned <a class=\"id\" href=\"#nmi_hz\">nmi_hz</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#perfctr_msr\">perfctr_msr</a>, <a class=\"id\" href=\"#evntsel_msr\">evntsel_msr</a>, <a class=\"id\" href=\"#cccr_msr\">cccr_msr</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#evntsel\">evntsel</a>, <a class=\"id\" href=\"#cccr_val\">cccr_val</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#misc_enable\">misc_enable</a>, <a class=\"id\" href=\"#dummy\">dummy</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#ht_num\">ht_num</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nmi_watchdog_ctlblk\">nmi_watchdog_ctlblk</a> *<a class=\"id\" href=\"#wd\">wd</a> = &amp;<a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#nmi_watchdog_ctlblk\">nmi_watchdog_ctlblk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#MSR_IA32_MISC_ENABLE\">MSR_IA32_MISC_ENABLE</a>, <a class=\"id\" href=\"#misc_enable\">misc_enable</a>, <a class=\"id\" href=\"#dummy\">dummy</a>);", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#misc_enable\">misc_enable</a> &amp; <a class=\"id\" href=\"#MSR_P4_MISC_ENABLE_PERF_AVAIL\">MSR_P4_MISC_ENABLE_PERF_AVAIL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* detect which hyperthread we are on */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#smp_num_siblings\">smp_num_siblings</a> == 2) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#ebx\">ebx</a>, <a class=\"id\" href=\"#apicid\">apicid</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ebx\">ebx</a> = <a class=\"id\" href=\"#cpuid_ebx\">cpuid_ebx</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#apicid\">apicid</a> = (<a class=\"id\" href=\"#ebx\">ebx</a> >> 24) &amp; 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ht_num\">ht_num</a> = <a class=\"id\" href=\"#apicid\">apicid</a> &amp; 1;", 
"<span class=\"ts\"/>} else", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ht_num\">ht_num</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * performance counters are shared resources</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * assign each hyperthread its own set</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * (re-use the ESCR0 register, seems safe</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and keeps the cccr_val the same)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ht_num\">ht_num</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* logical cpu 0 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#perfctr_msr\">perfctr_msr</a> = <a class=\"id\" href=\"#MSR_P4_IQ_PERFCTR0\">MSR_P4_IQ_PERFCTR0</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#evntsel_msr\">evntsel_msr</a> = <a class=\"id\" href=\"#MSR_P4_CRU_ESCR0\">MSR_P4_CRU_ESCR0</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cccr_msr\">cccr_msr</a> = <a class=\"id\" href=\"#MSR_P4_IQ_CCCR0\">MSR_P4_IQ_CCCR0</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cccr_val\">cccr_val</a> = <a class=\"id\" href=\"#P4_CCCR_OVF_PMI0\">P4_CCCR_OVF_PMI0</a> | <a class=\"id\" href=\"#P4_CCCR_ESCR_SELECT\">P4_CCCR_ESCR_SELECT</a>(4);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If we're on the kdump kernel or other situation, we may</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * still have other performance counter registers set to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * interrupt and they'll keep interrupting forever because</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * of the P4_CCCR_OVF quirk. So we need to ACK all the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * pending interrupts and disable all the registers here,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * before reenabling the NMI delivery. Refer to p4_rearm()</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * about the P4_CCCR_OVF quirk.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#reset_devices\">reset_devices</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#low\">low</a>, <a class=\"id\" href=\"#high\">high</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#P4_CONTROLS\">P4_CONTROLS</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#p4_controls\">p4_controls</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#low\">low</a>, <a class=\"id\" href=\"#high\">high</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#low\">low</a> &= ~(<a class=\"id\" href=\"#P4_CCCR_ENABLE\">P4_CCCR_ENABLE</a> | <a class=\"id\" href=\"#P4_CCCR_OVF\">P4_CCCR_OVF</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wrmsr\">wrmsr</a>(<a class=\"id\" href=\"#p4_controls\">p4_controls</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#low\">low</a>, <a class=\"id\" href=\"#high\">high</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* logical cpu 1 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#perfctr_msr\">perfctr_msr</a> = <a class=\"id\" href=\"#MSR_P4_IQ_PERFCTR1\">MSR_P4_IQ_PERFCTR1</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#evntsel_msr\">evntsel_msr</a> = <a class=\"id\" href=\"#MSR_P4_CRU_ESCR0\">MSR_P4_CRU_ESCR0</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cccr_msr\">cccr_msr</a> = <a class=\"id\" href=\"#MSR_P4_IQ_CCCR1\">MSR_P4_IQ_CCCR1</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Pentium 4 D processors don't support P4_CCCR_OVF_PMI1 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86_model\">x86_model</a> == 4 && <a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86_mask\">x86_mask</a> == 4)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cccr_val\">cccr_val</a> = <a class=\"id\" href=\"#P4_CCCR_OVF_PMI0\">P4_CCCR_OVF_PMI0</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cccr_val\">cccr_val</a> = <a class=\"id\" href=\"#P4_CCCR_OVF_PMI1\">P4_CCCR_OVF_PMI1</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cccr_val\">cccr_val</a> |= <a class=\"id\" href=\"#P4_CCCR_ESCR_SELECT\">P4_CCCR_ESCR_SELECT</a>(4);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evntsel\">evntsel</a> = <a class=\"id\" href=\"#P4_ESCR_EVENT_SELECT\">P4_ESCR_EVENT_SELECT</a>(0x3F)", 
"<span class=\"ts\"/><span class=\"ts\"/>| <a class=\"id\" href=\"#P4_ESCR_OS\">P4_ESCR_OS</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>| <a class=\"id\" href=\"#P4_ESCR_USR\">P4_ESCR_USR</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cccr_val\">cccr_val</a> |= <a class=\"id\" href=\"#P4_CCCR_THRESHOLD\">P4_CCCR_THRESHOLD</a>(15)", 
"<span class=\"ts\"/><span class=\"ts\"/> | <a class=\"id\" href=\"#P4_CCCR_COMPLEMENT\">P4_CCCR_COMPLEMENT</a>", 
"<span class=\"ts\"/><span class=\"ts\"/> | <a class=\"id\" href=\"#P4_CCCR_COMPARE\">P4_CCCR_COMPARE</a>", 
"<span class=\"ts\"/><span class=\"ts\"/> | <a class=\"id\" href=\"#P4_CCCR_REQUIRED\">P4_CCCR_REQUIRED</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wrmsr\">wrmsr</a>(<a class=\"id\" href=\"#evntsel_msr\">evntsel_msr</a>, <a class=\"id\" href=\"#evntsel\">evntsel</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wrmsr\">wrmsr</a>(<a class=\"id\" href=\"#cccr_msr\">cccr_msr</a>, <a class=\"id\" href=\"#cccr_val\">cccr_val</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_watchdog_counter\">write_watchdog_counter</a>(<a class=\"id\" href=\"#perfctr_msr\">perfctr_msr</a>, \"P4_IQ_COUNTER0\", <a class=\"id\" href=\"#nmi_hz\">nmi_hz</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wd\">wd</a>-><a class=\"id\" href=\"#perfctr_msr\">perfctr_msr</a> = <a class=\"id\" href=\"#perfctr_msr\">perfctr_msr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wd\">wd</a>-><a class=\"id\" href=\"#evntsel_msr\">evntsel_msr</a> = <a class=\"id\" href=\"#evntsel_msr\">evntsel_msr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wd\">wd</a>-><a class=\"id\" href=\"#cccr_msr\">cccr_msr</a> = <a class=\"id\" href=\"#cccr_msr\">cccr_msr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* ok, everything is initialized, announce that we're set */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpu_nmi_set_wd_enabled\">cpu_nmi_set_wd_enabled</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic_write\">apic_write</a>(<a class=\"id\" href=\"#APIC_LVTPC\">APIC_LVTPC</a>, <a class=\"id\" href=\"#APIC_DM_NMI\">APIC_DM_NMI</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cccr_val\">cccr_val</a> |= <a class=\"id\" href=\"#P4_CCCR_ENABLE\">P4_CCCR_ENABLE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wrmsr\">wrmsr</a>(<a class=\"id\" href=\"#cccr_msr\">cccr_msr</a>, <a class=\"id\" href=\"#cccr_val\">cccr_val</a>, 0);", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#stop_p4_watchdog\">stop_p4_watchdog</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nmi_watchdog_ctlblk\">nmi_watchdog_ctlblk</a> *<a class=\"id\" href=\"#wd\">wd</a> = &amp;<a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#nmi_watchdog_ctlblk\">nmi_watchdog_ctlblk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wrmsr\">wrmsr</a>(<a class=\"id\" href=\"#wd\">wd</a>-><a class=\"id\" href=\"#cccr_msr\">cccr_msr</a>, 0, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wrmsr\">wrmsr</a>(<a class=\"id\" href=\"#wd\">wd</a>-><a class=\"id\" href=\"#evntsel_msr\">evntsel_msr</a>, 0, 0);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#p4_reserve\">p4_reserve</a>(void)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#reserve_perfctr_nmi\">reserve_perfctr_nmi</a>(<a class=\"id\" href=\"#MSR_P4_IQ_PERFCTR0\">MSR_P4_IQ_PERFCTR0</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#smp_num_siblings\">smp_num_siblings</a> &gt; 1 && !<a class=\"id\" href=\"#reserve_perfctr_nmi\">reserve_perfctr_nmi</a>(<a class=\"id\" href=\"#MSR_P4_IQ_PERFCTR1\">MSR_P4_IQ_PERFCTR1</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail1\">fail1</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#reserve_evntsel_nmi\">reserve_evntsel_nmi</a>(<a class=\"id\" href=\"#MSR_P4_CRU_ESCR0\">MSR_P4_CRU_ESCR0</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail2\">fail2</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* RED-PEN why is ESCR1 not reserved here? */</span>", 
"<span class=\"ts\"/>return 1;", 
" <a class=\"id\" href=\"#fail2\">fail2</a>:", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#smp_num_siblings\">smp_num_siblings</a> &gt; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#release_perfctr_nmi\">release_perfctr_nmi</a>(<a class=\"id\" href=\"#MSR_P4_IQ_PERFCTR1\">MSR_P4_IQ_PERFCTR1</a>);", 
" <a class=\"id\" href=\"#fail1\">fail1</a>:", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_perfctr_nmi\">release_perfctr_nmi</a>(<a class=\"id\" href=\"#MSR_P4_IQ_PERFCTR0\">MSR_P4_IQ_PERFCTR0</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#p4_unreserve\">p4_unreserve</a>(void)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#smp_num_siblings\">smp_num_siblings</a> &gt; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#release_perfctr_nmi\">release_perfctr_nmi</a>(<a class=\"id\" href=\"#MSR_P4_IQ_PERFCTR1\">MSR_P4_IQ_PERFCTR1</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_evntsel_nmi\">release_evntsel_nmi</a>(<a class=\"id\" href=\"#MSR_P4_CRU_ESCR0\">MSR_P4_CRU_ESCR0</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_perfctr_nmi\">release_perfctr_nmi</a>(<a class=\"id\" href=\"#MSR_P4_IQ_PERFCTR0\">MSR_P4_IQ_PERFCTR0</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__kprobes\">__kprobes</a> <a class=\"id\" href=\"#p4_rearm\">p4_rearm</a>(struct <a class=\"id\" href=\"#nmi_watchdog_ctlblk\">nmi_watchdog_ctlblk</a> *<a class=\"id\" href=\"#wd\">wd</a>, unsigned <a class=\"id\" href=\"#nmi_hz\">nmi_hz</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#dummy\">dummy</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * P4 quirks:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * - An overflown perfctr will assert its interrupt</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *   until the OVF flag in its CCCR is cleared.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * - LVTPC is masked on interrupt and must be</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *   unmasked by the LVTPC handler.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsrl\">rdmsrl</a>(<a class=\"id\" href=\"#wd\">wd</a>-><a class=\"id\" href=\"#cccr_msr\">cccr_msr</a>, <a class=\"id\" href=\"#dummy\">dummy</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dummy\">dummy</a> &= ~<a class=\"id\" href=\"#P4_CCCR_OVF\">P4_CCCR_OVF</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wrmsrl\">wrmsrl</a>(<a class=\"id\" href=\"#wd\">wd</a>-><a class=\"id\" href=\"#cccr_msr\">cccr_msr</a>, <a class=\"id\" href=\"#dummy\">dummy</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic_write\">apic_write</a>(<a class=\"id\" href=\"#APIC_LVTPC\">APIC_LVTPC</a>, <a class=\"id\" href=\"#APIC_DM_NMI\">APIC_DM_NMI</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* start the cycle over again */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_watchdog_counter\">write_watchdog_counter</a>(<a class=\"id\" href=\"#wd\">wd</a>-><a class=\"id\" href=\"#perfctr_msr\">perfctr_msr</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#nmi_hz\">nmi_hz</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#wd_ops\">wd_ops</a> <a class=\"id\" href=\"#p4_wd_ops\">p4_wd_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#reserve\">reserve</a><span class=\"ts\"/>= <a class=\"id\" href=\"#p4_reserve\">p4_reserve</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#unreserve\">unreserve</a><span class=\"ts\"/>= <a class=\"id\" href=\"#p4_unreserve\">p4_unreserve</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#setup\">setup</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#setup_p4_watchdog\">setup_p4_watchdog</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#rearm\">rearm</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#p4_rearm\">p4_rearm</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#stop_p4_watchdog\">stop_p4_watchdog</a>,", 
"<span class=\"ts\"/><span class=\"comment\">/* RED-PEN this is wrong for the other sibling */</span>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#perfctr\">perfctr</a><span class=\"ts\"/>= <a class=\"id\" href=\"#MSR_P4_BPU_PERFCTR0\">MSR_P4_BPU_PERFCTR0</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#evntsel\">evntsel</a><span class=\"ts\"/>= <a class=\"id\" href=\"#MSR_P4_BSU_ESCR0\">MSR_P4_BSU_ESCR0</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#checkbit\">checkbit</a><span class=\"ts\"/>= 1ULL << 39,", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Watchdog using the Intel architected PerfMon.</span>", 
"<span class=\"comment\"> * Used for Core2 and hopefully all future Intel CPUs.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARCH_PERFMON_NMI_EVENT_SEL\">ARCH_PERFMON_NMI_EVENT_SEL</a><span class=\"ts\"/><a class=\"id\" href=\"#ARCH_PERFMON_UNHALTED_CORE_CYCLES_SEL\">ARCH_PERFMON_UNHALTED_CORE_CYCLES_SEL</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARCH_PERFMON_NMI_EVENT_UMASK\">ARCH_PERFMON_NMI_EVENT_UMASK</a><span class=\"ts\"/><a class=\"id\" href=\"#ARCH_PERFMON_UNHALTED_CORE_CYCLES_UMASK\">ARCH_PERFMON_UNHALTED_CORE_CYCLES_UMASK</a>", 
"", 
"static struct <a class=\"id\" href=\"#wd_ops\">wd_ops</a> <a class=\"id\" href=\"#intel_arch_wd_ops\">intel_arch_wd_ops</a>;", 
"", 
"static int <a class=\"id\" href=\"#setup_intel_arch_watchdog\">setup_intel_arch_watchdog</a>(unsigned <a class=\"id\" href=\"#nmi_hz\">nmi_hz</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#ebx\">ebx</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#cpuid10_eax\">cpuid10_eax</a> <a class=\"id\" href=\"#eax\">eax</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#unused\">unused</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#perfctr_msr\">perfctr_msr</a>, <a class=\"id\" href=\"#evntsel_msr\">evntsel_msr</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#evntsel\">evntsel</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nmi_watchdog_ctlblk\">nmi_watchdog_ctlblk</a> *<a class=\"id\" href=\"#wd\">wd</a> = &amp;<a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#nmi_watchdog_ctlblk\">nmi_watchdog_ctlblk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Check whether the Architectural PerfMon supports</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Unhalted Core Cycles Event or not.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * NOTE: Corresponding bit = 0 in ebx indicates event present.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpuid\">cpuid</a>(10, &amp;(<a class=\"id\" href=\"#eax\">eax</a>.<a class=\"id\" href=\"#full\">full</a>), &amp;<a class=\"id\" href=\"#ebx\">ebx</a>, &amp;<a class=\"id\" href=\"#unused\">unused</a>, &amp;<a class=\"id\" href=\"#unused\">unused</a>);", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#eax\">eax</a>.<a class=\"id\" href=\"#split\">split</a>.<a class=\"id\" href=\"#mask_length\">mask_length</a> &lt;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#ARCH_PERFMON_UNHALTED_CORE_CYCLES_INDEX\">ARCH_PERFMON_UNHALTED_CORE_CYCLES_INDEX</a>+1)) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#ebx\">ebx</a> &amp; <a class=\"id\" href=\"#ARCH_PERFMON_UNHALTED_CORE_CYCLES_PRESENT\">ARCH_PERFMON_UNHALTED_CORE_CYCLES_PRESENT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#perfctr_msr\">perfctr_msr</a> = <a class=\"id\" href=\"#wd_ops\">wd_ops</a>-><a class=\"id\" href=\"#perfctr\">perfctr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evntsel_msr\">evntsel_msr</a> = <a class=\"id\" href=\"#wd_ops\">wd_ops</a>-><a class=\"id\" href=\"#evntsel\">evntsel</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wrmsrl\">wrmsrl</a>(<a class=\"id\" href=\"#perfctr_msr\">perfctr_msr</a>, 0UL);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evntsel\">evntsel</a> = <a class=\"id\" href=\"#ARCH_PERFMON_EVENTSEL_INT\">ARCH_PERFMON_EVENTSEL_INT</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>| <a class=\"id\" href=\"#ARCH_PERFMON_EVENTSEL_OS\">ARCH_PERFMON_EVENTSEL_OS</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>| <a class=\"id\" href=\"#ARCH_PERFMON_EVENTSEL_USR\">ARCH_PERFMON_EVENTSEL_USR</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>| <a class=\"id\" href=\"#ARCH_PERFMON_NMI_EVENT_SEL\">ARCH_PERFMON_NMI_EVENT_SEL</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>| <a class=\"id\" href=\"#ARCH_PERFMON_NMI_EVENT_UMASK\">ARCH_PERFMON_NMI_EVENT_UMASK</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* setup the timer */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wrmsr\">wrmsr</a>(<a class=\"id\" href=\"#evntsel_msr\">evntsel_msr</a>, <a class=\"id\" href=\"#evntsel\">evntsel</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nmi_hz\">nmi_hz</a> = <a class=\"id\" href=\"#adjust_for_32bit_ctr\">adjust_for_32bit_ctr</a>(<a class=\"id\" href=\"#nmi_hz\">nmi_hz</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_watchdog_counter32\">write_watchdog_counter32</a>(<a class=\"id\" href=\"#perfctr_msr\">perfctr_msr</a>, \"INTEL_ARCH_PERFCTR0\", <a class=\"id\" href=\"#nmi_hz\">nmi_hz</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wd\">wd</a>-><a class=\"id\" href=\"#perfctr_msr\">perfctr_msr</a> = <a class=\"id\" href=\"#perfctr_msr\">perfctr_msr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wd\">wd</a>-><a class=\"id\" href=\"#evntsel_msr\">evntsel_msr</a> = <a class=\"id\" href=\"#evntsel_msr\">evntsel_msr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wd\">wd</a>-><a class=\"id\" href=\"#cccr_msr\">cccr_msr</a> = 0;  <span class=\"comment\">/* unused */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* ok, everything is initialized, announce that we're set */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpu_nmi_set_wd_enabled\">cpu_nmi_set_wd_enabled</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic_write\">apic_write</a>(<a class=\"id\" href=\"#APIC_LVTPC\">APIC_LVTPC</a>, <a class=\"id\" href=\"#APIC_DM_NMI\">APIC_DM_NMI</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evntsel\">evntsel</a> |= <a class=\"id\" href=\"#ARCH_PERFMON_EVENTSEL_ENABLE\">ARCH_PERFMON_EVENTSEL_ENABLE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wrmsr\">wrmsr</a>(<a class=\"id\" href=\"#evntsel_msr\">evntsel_msr</a>, <a class=\"id\" href=\"#evntsel\">evntsel</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#intel_arch_wd_ops\">intel_arch_wd_ops</a>.<a class=\"id\" href=\"#checkbit\">checkbit</a> = 1ULL << (<a class=\"id\" href=\"#eax\">eax</a>.<a class=\"id\" href=\"#split\">split</a>.<a class=\"id\" href=\"#bit_width\">bit_width</a> - 1);", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#wd_ops\">wd_ops</a> <a class=\"id\" href=\"#intel_arch_wd_ops\">intel_arch_wd_ops</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#reserve\">reserve</a><span class=\"ts\"/>= <a class=\"id\" href=\"#single_msr_reserve\">single_msr_reserve</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#unreserve\">unreserve</a><span class=\"ts\"/>= <a class=\"id\" href=\"#single_msr_unreserve\">single_msr_unreserve</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#setup\">setup</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#setup_intel_arch_watchdog\">setup_intel_arch_watchdog</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#rearm\">rearm</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#p6_rearm\">p6_rearm</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#single_msr_stop_watchdog\">single_msr_stop_watchdog</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#perfctr\">perfctr</a><span class=\"ts\"/>= <a class=\"id\" href=\"#MSR_ARCH_PERFMON_PERFCTR1\">MSR_ARCH_PERFMON_PERFCTR1</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#evntsel\">evntsel</a><span class=\"ts\"/>= <a class=\"id\" href=\"#MSR_ARCH_PERFMON_EVENTSEL1\">MSR_ARCH_PERFMON_EVENTSEL1</a>,", 
"};", 
"", 
"static void <a class=\"id\" href=\"#probe_nmi_watchdog\">probe_nmi_watchdog</a>(void)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86_vendor\">x86_vendor</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#X86_VENDOR_AMD\">X86_VENDOR_AMD</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86\">x86</a> != 6 && <a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86\">x86</a> != 15 &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86\">x86</a> != 16 && <a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86\">x86</a> != 17)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wd_ops\">wd_ops</a> = &amp;<a class=\"id\" href=\"#k7_wd_ops\">k7_wd_ops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#X86_VENDOR_INTEL\">X86_VENDOR_INTEL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Work around where perfctr1 doesn't have a working enable</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * bit as described in the following errata:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * AE49 Core Duo and Intel Core Solo 65 nm</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * AN49 Intel Pentium Dual-Core</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * AF49 Dual-Core Intel Xeon Processor LV</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86\">x86</a> == 6 && <a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86_model\">x86_model</a> == 14) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    ((<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86\">x86</a> == 6 && <a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86_model\">x86_model</a> == 15 &&", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86_mask\">x86_mask</a> == 4))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#intel_arch_wd_ops\">intel_arch_wd_ops</a>.<a class=\"id\" href=\"#perfctr\">perfctr</a> = <a class=\"id\" href=\"#MSR_ARCH_PERFMON_PERFCTR0\">MSR_ARCH_PERFMON_PERFCTR0</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#intel_arch_wd_ops\">intel_arch_wd_ops</a>.<a class=\"id\" href=\"#evntsel\">evntsel</a> = <a class=\"id\" href=\"#MSR_ARCH_PERFMON_EVENTSEL0\">MSR_ARCH_PERFMON_EVENTSEL0</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_has\">cpu_has</a>(&amp;<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>, <a class=\"id\" href=\"#X86_FEATURE_ARCH_PERFMON\">X86_FEATURE_ARCH_PERFMON</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wd_ops\">wd_ops</a> = &amp;<a class=\"id\" href=\"#intel_arch_wd_ops\">intel_arch_wd_ops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86\">x86</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case 6:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86_model\">x86_model</a> &gt; 13)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wd_ops\">wd_ops</a> = &amp;<a class=\"id\" href=\"#p6_wd_ops\">p6_wd_ops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 15:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wd_ops\">wd_ops</a> = &amp;<a class=\"id\" href=\"#p4_wd_ops\">p4_wd_ops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/* Interface to nmi.c */</span>", 
"", 
"int <a class=\"id\" href=\"#lapic_watchdog_init\">lapic_watchdog_init</a>(unsigned <a class=\"id\" href=\"#nmi_hz\">nmi_hz</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#wd_ops\">wd_ops</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#probe_nmi_watchdog\">probe_nmi_watchdog</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#wd_ops\">wd_ops</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"NMI watchdog: CPU not supported\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#wd_ops\">wd_ops</a>-><a class=\"id\" href=\"#reserve\">reserve</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"NMI watchdog: cannot reserve perfctrs\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#wd_ops\">wd_ops</a>-><a class=\"id\" href=\"#setup\">setup</a>(<a class=\"id\" href=\"#nmi_hz\">nmi_hz</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"Cannot setup NMI watchdog on CPU %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#raw_smp_processor_id\">raw_smp_processor_id</a>());", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"void <a class=\"id\" href=\"#lapic_watchdog_stop\">lapic_watchdog_stop</a>(void)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#wd_ops\">wd_ops</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wd_ops\">wd_ops</a>-><a class=\"id\" href=\"#stop\">stop</a>();", 
"}", 
"", 
"unsigned <a class=\"id\" href=\"#lapic_adjust_nmi_hz\">lapic_adjust_nmi_hz</a>(unsigned <a class=\"id\" href=\"#hz\">hz</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nmi_watchdog_ctlblk\">nmi_watchdog_ctlblk</a> *<a class=\"id\" href=\"#wd\">wd</a> = &amp;<a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#nmi_watchdog_ctlblk\">nmi_watchdog_ctlblk</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#wd\">wd</a>-><a class=\"id\" href=\"#perfctr_msr\">perfctr_msr</a> == <a class=\"id\" href=\"#MSR_P6_PERFCTR0\">MSR_P6_PERFCTR0</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#wd\">wd</a>-><a class=\"id\" href=\"#perfctr_msr\">perfctr_msr</a> == <a class=\"id\" href=\"#MSR_ARCH_PERFMON_PERFCTR1\">MSR_ARCH_PERFMON_PERFCTR1</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hz\">hz</a> = <a class=\"id\" href=\"#adjust_for_32bit_ctr\">adjust_for_32bit_ctr</a>(<a class=\"id\" href=\"#hz\">hz</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#hz\">hz</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#__kprobes\">__kprobes</a> <a class=\"id\" href=\"#lapic_wd_event\">lapic_wd_event</a>(unsigned <a class=\"id\" href=\"#nmi_hz\">nmi_hz</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nmi_watchdog_ctlblk\">nmi_watchdog_ctlblk</a> *<a class=\"id\" href=\"#wd\">wd</a> = &amp;<a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#nmi_watchdog_ctlblk\">nmi_watchdog_ctlblk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#ctr\">ctr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsrl\">rdmsrl</a>(<a class=\"id\" href=\"#wd\">wd</a>-><a class=\"id\" href=\"#perfctr_msr\">perfctr_msr</a>, <a class=\"id\" href=\"#ctr\">ctr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ctr\">ctr</a> &amp; <a class=\"id\" href=\"#wd_ops\">wd_ops</a>-><a class=\"id\" href=\"#checkbit\">checkbit</a>) <span class=\"comment\">/* perfctr still running? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wd_ops\">wd_ops</a>-><a class=\"id\" href=\"#rearm\">rearm</a>(<a class=\"id\" href=\"#wd\">wd</a>, <a class=\"id\" href=\"#nmi_hz\">nmi_hz</a>);", 
"<span class=\"ts\"/>return 1;", 
"}", 
];
xr_frag_insert('l/7e/4a74ab13dfd7199694a9d160f0f67b691a0dfe.xr', __xr_tmp);
