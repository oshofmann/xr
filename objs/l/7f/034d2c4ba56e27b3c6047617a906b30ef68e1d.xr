var __xr_tmp = [
"<span class=\"comment\">/******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Name: acstruct.h - Internal structs</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *****************************************************************************/</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright (C) 2000 - 2010, Intel Corp.</span>", 
"<span class=\"comment\"> * All rights reserved.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Redistribution and use in source and binary forms, with or without</span>", 
"<span class=\"comment\"> * modification, are permitted provided that the following conditions</span>", 
"<span class=\"comment\"> * are met:</span>", 
"<span class=\"comment\"> * 1. Redistributions of source code must retain the above copyright</span>", 
"<span class=\"comment\"> *    notice, this list of conditions, and the following disclaimer,</span>", 
"<span class=\"comment\"> *    without modification.</span>", 
"<span class=\"comment\"> * 2. Redistributions in binary form must reproduce at minimum a disclaimer</span>", 
"<span class=\"comment\"> *    substantially similar to the \"NO WARRANTY\" disclaimer below</span>", 
"<span class=\"comment\"> *    (\"Disclaimer\") and any redistribution must be conditioned upon</span>", 
"<span class=\"comment\"> *    including a substantially similar Disclaimer requirement for further</span>", 
"<span class=\"comment\"> *    binary redistribution.</span>", 
"<span class=\"comment\"> * 3. Neither the names of the above-listed copyright holders nor the names</span>", 
"<span class=\"comment\"> *    of any contributors may be used to endorse or promote products derived</span>", 
"<span class=\"comment\"> *    from this software without specific prior written permission.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Alternatively, this software may be distributed under the terms of the</span>", 
"<span class=\"comment\"> * GNU General Public License (\"GPL\") version 2 as published by the Free</span>", 
"<span class=\"comment\"> * Software Foundation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NO WARRANTY</span>", 
"<span class=\"comment\"> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS</span>", 
"<span class=\"comment\"> * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT</span>", 
"<span class=\"comment\"> * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR</span>", 
"<span class=\"comment\"> * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT</span>", 
"<span class=\"comment\"> * HOLDERS OR CONTRIBUTORS BE LIABLE FOR SPECIAL, EXEMPLARY, OR CONSEQUENTIAL</span>", 
"<span class=\"comment\"> * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS</span>", 
"<span class=\"comment\"> * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)</span>", 
"<span class=\"comment\"> * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,</span>", 
"<span class=\"comment\"> * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING</span>", 
"<span class=\"comment\"> * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE</span>", 
"<span class=\"comment\"> * POSSIBILITY OF SUCH DAMAGES.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__ACSTRUCT_H__\">__ACSTRUCT_H__</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__ACSTRUCT_H__\">__ACSTRUCT_H__</a>", 
"", 
"<span class=\"comment\">/* acpisrc:struct_defs -- for acpisrc conversion */</span>", 
"", 
"<span class=\"comment\">/*****************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Tree walking typedefs and structs</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ****************************************************************************/</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Walk state - current state of a parse tree walk.  Used for both a leisurely</span>", 
"<span class=\"comment\"> * stroll through the tree (for whatever reason), and for control method</span>", 
"<span class=\"comment\"> * execution.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_NEXT_OP_DOWNWARD\">ACPI_NEXT_OP_DOWNWARD</a>       1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_NEXT_OP_UPWARD\">ACPI_NEXT_OP_UPWARD</a>         2", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Groups of definitions for walk_type used for different implementations of</span>", 
"<span class=\"comment\"> * walkers (never simultaneously) - flags for interpreter:</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_WALK_NON_METHOD\">ACPI_WALK_NON_METHOD</a>        0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_WALK_METHOD\">ACPI_WALK_METHOD</a>            0x01", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_WALK_METHOD_RESTART\">ACPI_WALK_METHOD_RESTART</a>    0x02", 
"", 
"<span class=\"comment\">/* Flags for i_aSL compiler only */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_WALK_CONST_REQUIRED\">ACPI_WALK_CONST_REQUIRED</a>    0x10", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_WALK_CONST_OPTIONAL\">ACPI_WALK_CONST_OPTIONAL</a>    0x20", 
"", 
"struct <a class=\"id\" href=\"#acpi_walk_state\">acpi_walk_state</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_walk_state\">acpi_walk_state</a> *<a class=\"id\" href=\"#next\">next</a>;<span class=\"ts\"/><span class=\"comment\">/* Next walk_state in list */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#descriptor_type\">descriptor_type</a>;<span class=\"ts\"/><span class=\"comment\">/* To differentiate various internal objs */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#walk_type\">walk_type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#opcode\">opcode</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Current AML opcode */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#next_op_info\">next_op_info</a>;<span class=\"ts\"/><span class=\"comment\">/* Info about next_op */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#num_operands\">num_operands</a>;<span class=\"ts\"/><span class=\"comment\">/* Stack pointer for Operands[] array */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#operand_index\">operand_index</a>;<span class=\"ts\"/><span class=\"comment\">/* Index into operand stack, to be used by acpi_ds_obj_stack_push */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_owner_id\">acpi_owner_id</a> <a class=\"id\" href=\"#owner_id\">owner_id</a>;<span class=\"ts\"/><span class=\"comment\">/* Owner of objects created during the walk */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#last_predicate\">last_predicate</a>;<span class=\"ts\"/><span class=\"comment\">/* Result of last predicate */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#current_result\">current_result</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#return_used\">return_used</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#scope_depth\">scope_depth</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#pass_number\">pass_number</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Parse pass during table load */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#result_size\">result_size</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Total elements for the result stack */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#result_count\">result_count</a>;<span class=\"ts\"/><span class=\"comment\">/* Current number of occupied elements of result stack */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#aml_offset\">aml_offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#arg_types\">arg_types</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#method_breakpoint\">method_breakpoint</a>;<span class=\"ts\"/><span class=\"comment\">/* For single stepping */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#user_breakpoint\">user_breakpoint</a>;<span class=\"ts\"/><span class=\"comment\">/* User AML breakpoint */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#parse_flags\">parse_flags</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_parse_state\">acpi_parse_state</a> <a class=\"id\" href=\"#parser_state\">parser_state</a>;<span class=\"ts\"/><span class=\"comment\">/* Current state of parser */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#prev_arg_types\">prev_arg_types</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#arg_count\">arg_count</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* push for fixed or var args */</span>", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_namespace_node\">acpi_namespace_node</a> <a class=\"id\" href=\"#arguments\">arguments</a>[<a class=\"id\" href=\"#ACPI_METHOD_NUM_ARGS\">ACPI_METHOD_NUM_ARGS</a>];<span class=\"ts\"/><span class=\"comment\">/* Control method arguments */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_namespace_node\">acpi_namespace_node</a> <a class=\"id\" href=\"#local_variables\">local_variables</a>[<a class=\"id\" href=\"#ACPI_METHOD_NUM_LOCALS\">ACPI_METHOD_NUM_LOCALS</a>];<span class=\"ts\"/><span class=\"comment\">/* Control method locals */</span>", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#operands\">operands</a>[<a class=\"id\" href=\"#ACPI_OBJ_NUM_OPERANDS\">ACPI_OBJ_NUM_OPERANDS</a> + 1];<span class=\"ts\"/><span class=\"comment\">/* Operands passed to the interpreter (+1 for NULL terminator) */</span>", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> **<a class=\"id\" href=\"#params\">params</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#aml_last_while\">aml_last_while</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> **<a class=\"id\" href=\"#caller_return_desc\">caller_return_desc</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_generic_state\">acpi_generic_state</a> *<a class=\"id\" href=\"#control_state\">control_state</a>;<span class=\"ts\"/><span class=\"comment\">/* List of control states (nested IFs) */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_namespace_node\">acpi_namespace_node</a> *<a class=\"id\" href=\"#deferred_node\">deferred_node</a>;<span class=\"ts\"/><span class=\"comment\">/* Used when executing deferred opcodes */</span>", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#implicit_return_obj\">implicit_return_obj</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_namespace_node\">acpi_namespace_node</a> *<a class=\"id\" href=\"#method_call_node\">method_call_node</a>;<span class=\"ts\"/><span class=\"comment\">/* Called method Node */</span>", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_parse_object\">acpi_parse_object</a> *<a class=\"id\" href=\"#method_call_op\">method_call_op</a>;<span class=\"ts\"/><span class=\"comment\">/* method_call Op if running a method */</span>", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#method_desc\">method_desc</a>;<span class=\"ts\"/><span class=\"comment\">/* Method descriptor if running a method */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_namespace_node\">acpi_namespace_node</a> *<a class=\"id\" href=\"#method_node\">method_node</a>;<span class=\"ts\"/><span class=\"comment\">/* Method node if running a method. */</span>", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_parse_object\">acpi_parse_object</a> *<a class=\"id\" href=\"#op\">op</a>;<span class=\"ts\"/><span class=\"comment\">/* Current parser op */</span>", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#acpi_opcode_info\">acpi_opcode_info</a> *<a class=\"id\" href=\"#op_info\">op_info</a>;<span class=\"ts\"/><span class=\"comment\">/* Info on current opcode */</span>", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_parse_object\">acpi_parse_object</a> *<a class=\"id\" href=\"#origin\">origin</a>;<span class=\"ts\"/><span class=\"comment\">/* Start of walk [Obsolete] */</span>", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#result_obj\">result_obj</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_generic_state\">acpi_generic_state</a> *<a class=\"id\" href=\"#results\">results</a>;<span class=\"ts\"/><span class=\"comment\">/* Stack of accumulated results */</span>", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#return_desc\">return_desc</a>;<span class=\"ts\"/><span class=\"comment\">/* Return object, if any */</span>", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_generic_state\">acpi_generic_state</a> *<a class=\"id\" href=\"#scope_info\">scope_info</a>;<span class=\"ts\"/><span class=\"comment\">/* Stack of nested scopes */</span>", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_parse_object\">acpi_parse_object</a> *<a class=\"id\" href=\"#prev_op\">prev_op</a>;<span class=\"ts\"/><span class=\"comment\">/* Last op that was processed */</span>", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_parse_object\">acpi_parse_object</a> *<a class=\"id\" href=\"#next_op\">next_op</a>;<span class=\"ts\"/><span class=\"comment\">/* next op to be processed */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_thread_state\">acpi_thread_state</a> *<a class=\"id\" href=\"#thread\">thread</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_parse_downwards\">acpi_parse_downwards</a> <a class=\"id\" href=\"#descending_callback\">descending_callback</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_parse_upwards\">acpi_parse_upwards</a> <a class=\"id\" href=\"#ascending_callback\">ascending_callback</a>;", 
"};", 
"", 
"<span class=\"comment\">/* Info used by acpi_ns_initialize_objects and acpi_ds_initialize_objects */</span>", 
"", 
"struct <a class=\"id\" href=\"#acpi_init_walk_info\">acpi_init_walk_info</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#table_index\">table_index</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#object_count\">object_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#method_count\">method_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#device_count\">device_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#op_region_count\">op_region_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#field_count\">field_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#buffer_count\">buffer_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#package_count\">package_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#op_region_init\">op_region_init</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#field_init\">field_init</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#buffer_init\">buffer_init</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#package_init\">package_init</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_owner_id\">acpi_owner_id</a> <a class=\"id\" href=\"#owner_id\">owner_id</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#acpi_get_devices_info\">acpi_get_devices_info</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_walk_callback\">acpi_walk_callback</a> <a class=\"id\" href=\"#user_function\">user_function</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#context\">context</a>;", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#hid\">hid</a>;", 
"};", 
"", 
"union <a class=\"id\" href=\"#acpi_aml_operands\">acpi_aml_operands</a> {", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#operands\">operands</a>[7];", 
"", 
"<span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_object_integer\">acpi_object_integer</a> *<a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_object_integer\">acpi_object_integer</a> *<a class=\"id\" href=\"#code\">code</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_object_integer\">acpi_object_integer</a> *<a class=\"id\" href=\"#argument\">argument</a>;", 
"", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#fatal\">fatal</a>;", 
"", 
"<span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#source\">source</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_object_integer\">acpi_object_integer</a> *<a class=\"id\" href=\"#index\">index</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#target\">target</a>;", 
"", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#index\">index</a>;", 
"", 
"<span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#source\">source</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_object_integer\">acpi_object_integer</a> *<a class=\"id\" href=\"#index\">index</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_object_integer\">acpi_object_integer</a> *<a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#target\">target</a>;", 
"", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#mid\">mid</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Structure used to pass object evaluation parameters.</span>", 
"<span class=\"comment\"> * Purpose is to reduce CPU stack use.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#acpi_evaluate_info\">acpi_evaluate_info</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_namespace_node\">acpi_namespace_node</a> *<a class=\"id\" href=\"#prefix_node\">prefix_node</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#pathname\">pathname</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#obj_desc\">obj_desc</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> **<a class=\"id\" href=\"#parameters\">parameters</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_namespace_node\">acpi_namespace_node</a> *<a class=\"id\" href=\"#resolved_node\">resolved_node</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#return_object\">return_object</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#param_count\">param_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#pass_number\">pass_number</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#return_object_type\">return_object_type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#flags\">flags</a>;", 
"};", 
"", 
"<span class=\"comment\">/* Values for Flags above */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_IGNORE_RETURN_VALUE\">ACPI_IGNORE_RETURN_VALUE</a>        1", 
"", 
"<span class=\"comment\">/* Info used by acpi_ns_initialize_devices */</span>", 
"", 
"struct <a class=\"id\" href=\"#acpi_device_walk_info\">acpi_device_walk_info</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_table_desc\">acpi_table_desc</a> *<a class=\"id\" href=\"#table_desc\">table_desc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_evaluate_info\">acpi_evaluate_info</a> *<a class=\"id\" href=\"#evaluate_info\">evaluate_info</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#device_count\">device_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#num_STA\">num_STA</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#num_INI\">num_INI</a>;", 
"};", 
"", 
"<span class=\"comment\">/* TBD: [Restructure] Merge with struct above */</span>", 
"", 
"struct <a class=\"id\" href=\"#acpi_walk_info\">acpi_walk_info</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#debug_level\">debug_level</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_owner_id\">acpi_owner_id</a> <a class=\"id\" href=\"#owner_id\">owner_id</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#display_type\">display_type</a>;", 
"};", 
"", 
"<span class=\"comment\">/* Display Types */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_DISPLAY_SUMMARY\">ACPI_DISPLAY_SUMMARY</a>        (<a class=\"id\" href=\"#u8\">u8</a>) 0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_DISPLAY_OBJECTS\">ACPI_DISPLAY_OBJECTS</a>        (<a class=\"id\" href=\"#u8\">u8</a>) 1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_DISPLAY_MASK\">ACPI_DISPLAY_MASK</a>           (<a class=\"id\" href=\"#u8\">u8</a>) 1", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_DISPLAY_SHORT\">ACPI_DISPLAY_SHORT</a>          (<a class=\"id\" href=\"#u8\">u8</a>) 2", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/7f/034d2c4ba56e27b3c6047617a906b30ef68e1d.xr', __xr_tmp);
