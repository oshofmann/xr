var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_SWAP_H\">_LINUX_SWAP_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_SWAP_H\">_LINUX_SWAP_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#linkage\">linkage</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mmzone\">mmzone</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#memcontrol\">memcontrol</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#node\">node</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#atomic\">atomic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#page\">page</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a>;", 
"", 
"struct <a class=\"id\" href=\"#bio\">bio</a>;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SWAP_FLAG_PREFER\">SWAP_FLAG_PREFER</a><span class=\"ts\"/>0x8000<span class=\"ts\"/><span class=\"comment\">/* set if swap priority specified */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SWAP_FLAG_PRIO_MASK\">SWAP_FLAG_PRIO_MASK</a><span class=\"ts\"/>0x7fff", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SWAP_FLAG_PRIO_SHIFT\">SWAP_FLAG_PRIO_SHIFT</a><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SWAP_FLAG_DISCARD\">SWAP_FLAG_DISCARD</a><span class=\"ts\"/>0x10000 <span class=\"comment\">/* discard swap cluster after use */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#current_is_kswapd\">current_is_kswapd</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#PF_KSWAPD\">PF_KSWAPD</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * MAX_SWAPFILES defines the maximum number of swaptypes: things which can</span>", 
"<span class=\"comment\"> * be swapped to.  The swap type and the offset into that swap type are</span>", 
"<span class=\"comment\"> * encoded into pte's and into pgoff_t's in the swapcache.  Using five bits</span>", 
"<span class=\"comment\"> * for the type means that the maximum number of swapcache pages is 27 bits</span>", 
"<span class=\"comment\"> * on 32-bit-pgoff_t architectures.  And that assumes that the architecture packs</span>", 
"<span class=\"comment\"> * the type/offset into the pte as 5/27 as well.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_SWAPFILES_SHIFT\">MAX_SWAPFILES_SHIFT</a><span class=\"ts\"/>5", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Use some of the swap files numbers for other purposes. This</span>", 
"<span class=\"comment\"> * is a convenient way to hook into the VM to trigger special</span>", 
"<span class=\"comment\"> * actions on faults.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * NUMA node memory migration support</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_MIGRATION\">CONFIG_MIGRATION</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SWP_MIGRATION_NUM\">SWP_MIGRATION_NUM</a> 2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SWP_MIGRATION_READ\">SWP_MIGRATION_READ</a><span class=\"ts\"/>(<a class=\"id\" href=\"#MAX_SWAPFILES\">MAX_SWAPFILES</a> + <a class=\"id\" href=\"#SWP_HWPOISON_NUM\">SWP_HWPOISON_NUM</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SWP_MIGRATION_WRITE\">SWP_MIGRATION_WRITE</a><span class=\"ts\"/>(<a class=\"id\" href=\"#MAX_SWAPFILES\">MAX_SWAPFILES</a> + <a class=\"id\" href=\"#SWP_HWPOISON_NUM\">SWP_HWPOISON_NUM</a> + 1)", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SWP_MIGRATION_NUM\">SWP_MIGRATION_NUM</a> 0", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Handling of hardware poisoned pages with memory corruption.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_MEMORY_FAILURE\">CONFIG_MEMORY_FAILURE</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SWP_HWPOISON_NUM\">SWP_HWPOISON_NUM</a> 1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SWP_HWPOISON\">SWP_HWPOISON</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#MAX_SWAPFILES\">MAX_SWAPFILES</a>", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SWP_HWPOISON_NUM\">SWP_HWPOISON_NUM</a> 0", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_SWAPFILES\">MAX_SWAPFILES</a> \\", 
"<span class=\"ts\"/>((1 << <a class=\"id\" href=\"#MAX_SWAPFILES_SHIFT\">MAX_SWAPFILES_SHIFT</a>) - <a class=\"id\" href=\"#SWP_MIGRATION_NUM\">SWP_MIGRATION_NUM</a> - <a class=\"id\" href=\"#SWP_HWPOISON_NUM\">SWP_HWPOISON_NUM</a>)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Magic header for a swap area. The first part of the union is</span>", 
"<span class=\"comment\"> * what the swap magic looks like for the old (limited to 128MB)</span>", 
"<span class=\"comment\"> * swap area format, the second part of the union adds - in the</span>", 
"<span class=\"comment\"> * old reserved area - some extra information. Note that the first</span>", 
"<span class=\"comment\"> * kilobyte is reserved for boot loader or disk label stuff...</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Having the magic at the end of the PAGE_SIZE makes detecting swap</span>", 
"<span class=\"comment\"> * areas somewhat tricky on machines that support multiple page sizes.</span>", 
"<span class=\"comment\"> * For 2.5 we'll probably want to move the magic to just beyond the</span>", 
"<span class=\"comment\"> * bootbits...</span>", 
"<span class=\"comment\"> */</span>", 
"union <a class=\"id\" href=\"#swap_header\">swap_header</a> {", 
"<span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/>char <a class=\"id\" href=\"#reserved\">reserved</a>[<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - 10];", 
"<span class=\"ts\"/><span class=\"ts\"/>char <a class=\"id\" href=\"#magic\">magic</a>[10];<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* SWAP-SPACE or SWAPSPACE2 */</span>", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#magic\">magic</a>;", 
"<span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bootbits\">bootbits</a>[1024];<span class=\"ts\"/><span class=\"comment\">/* Space for disklabel etc. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#version\">version</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_page\">last_page</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_badpages\">nr_badpages</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned char<span class=\"ts\"/><a class=\"id\" href=\"#sws_uuid\">sws_uuid</a>[16];", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned char<span class=\"ts\"/><a class=\"id\" href=\"#sws_volume\">sws_volume</a>[16];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#padding\">padding</a>[117];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#badpages\">badpages</a>[1];", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#info\">info</a>;", 
"};", 
"", 
" <span class=\"comment\">/* A swap entry has to fit into a \"unsigned long\", as</span>", 
"<span class=\"comment\">  * the entry is hidden in the \"index\" field of the</span>", 
"<span class=\"comment\">  * swapper address space.</span>", 
"<span class=\"comment\">  */</span>", 
"typedef struct {", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#val\">val</a>;", 
"} <a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * current-&gt;reclaim_state points to one of these when a task is running</span>", 
"<span class=\"comment\"> * memory reclaim</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#reclaim_state\">reclaim_state</a> {", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#reclaimed_slab\">reclaimed_slab</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"", 
"struct <a class=\"id\" href=\"#address_space\">address_space</a>;", 
"struct <a class=\"id\" href=\"#sysinfo\">sysinfo</a>;", 
"struct <a class=\"id\" href=\"#writeback_control\">writeback_control</a>;", 
"struct <a class=\"id\" href=\"#zone\">zone</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * A swap extent maps a range of a swapfile's PAGE_SIZE pages onto a range of</span>", 
"<span class=\"comment\"> * disk blocks.  A list of swap extents maps the entire swapfile.  (Where the</span>", 
"<span class=\"comment\"> * term `swapfile' refers to either a blockdevice or an IS_REG file.  Apart</span>", 
"<span class=\"comment\"> * from setup, they're handled identically.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We always assume that blocks are of size PAGE_SIZE.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#swap_extent\">swap_extent</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgoff_t\">pgoff_t</a> <a class=\"id\" href=\"#start_page\">start_page</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgoff_t\">pgoff_t</a> <a class=\"id\" href=\"#nr_pages\">nr_pages</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#start_block\">start_block</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Max bad pages in the new format..</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__swapoffset\">__swapoffset</a>(<a class=\"id\" href=\"#x\">x</a>) ((unsigned long)&amp;((union <a class=\"id\" href=\"#swap_header\">swap_header</a> *)0)-><a class=\"id\" href=\"#x\">x</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_SWAP_BADPAGES\">MAX_SWAP_BADPAGES</a> \\", 
"<span class=\"ts\"/>((<a class=\"id\" href=\"#__swapoffset\">__swapoffset</a>(<a class=\"id\" href=\"#magic\">magic</a>.<a class=\"id\" href=\"#magic\">magic</a>) - <a class=\"id\" href=\"#__swapoffset\">__swapoffset</a>(<a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#badpages\">badpages</a>)) / sizeof(int))", 
"", 
"enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SWP_USED\">SWP_USED</a><span class=\"ts\"/>= (1 << 0),<span class=\"ts\"/><span class=\"comment\">/* is slot in swap_info[] used? */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SWP_WRITEOK\">SWP_WRITEOK</a><span class=\"ts\"/>= (1 << 1),<span class=\"ts\"/><span class=\"comment\">/* ok to write to this swap?<span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SWP_DISCARDABLE\">SWP_DISCARDABLE</a> = (1 << 2),<span class=\"ts\"/><span class=\"comment\">/* swapon+blkdev support discard */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SWP_DISCARDING\">SWP_DISCARDING</a><span class=\"ts\"/>= (1 << 3),<span class=\"ts\"/><span class=\"comment\">/* now discarding a free cluster */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SWP_SOLIDSTATE\">SWP_SOLIDSTATE</a><span class=\"ts\"/>= (1 << 4),<span class=\"ts\"/><span class=\"comment\">/* blkdev seeks are cheap */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SWP_CONTINUED\">SWP_CONTINUED</a><span class=\"ts\"/>= (1 << 5),<span class=\"ts\"/><span class=\"comment\">/* swap_map has count continuation */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SWP_BLKDEV\">SWP_BLKDEV</a><span class=\"ts\"/>= (1 << 6),<span class=\"ts\"/><span class=\"comment\">/* its a block device */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* add others here before... */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SWP_SCANNING\">SWP_SCANNING</a><span class=\"ts\"/>= (1 << 8),<span class=\"ts\"/><span class=\"comment\">/* refcount in scan_swap_map */</span>", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SWAP_CLUSTER_MAX\">SWAP_CLUSTER_MAX</a> 32", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#COMPACT_CLUSTER_MAX\">COMPACT_CLUSTER_MAX</a> <a class=\"id\" href=\"#SWAP_CLUSTER_MAX\">SWAP_CLUSTER_MAX</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SWAP_MAP_MAX\">SWAP_MAP_MAX</a><span class=\"ts\"/>0x3e<span class=\"ts\"/><span class=\"comment\">/* Max duplication count, in first swap_map */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SWAP_MAP_BAD\">SWAP_MAP_BAD</a><span class=\"ts\"/>0x3f<span class=\"ts\"/><span class=\"comment\">/* Note pageblock is bad, in first swap_map */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SWAP_HAS_CACHE\">SWAP_HAS_CACHE</a><span class=\"ts\"/>0x40<span class=\"ts\"/><span class=\"comment\">/* Flag page is cached, in first swap_map */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SWAP_CONT_MAX\">SWAP_CONT_MAX</a><span class=\"ts\"/>0x7f<span class=\"ts\"/><span class=\"comment\">/* Max count, in each swap_map continuation */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#COUNT_CONTINUED\">COUNT_CONTINUED</a><span class=\"ts\"/>0x80<span class=\"ts\"/><span class=\"comment\">/* See swap_map continuation for full count */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SWAP_MAP_SHMEM\">SWAP_MAP_SHMEM</a><span class=\"ts\"/>0xbf<span class=\"ts\"/><span class=\"comment\">/* Owned by shmem/tmpfs, in first swap_map */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The in-memory structure used to track swap areas.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#swap_info_struct\">swap_info_struct</a> {", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* SWP_USED etc: see above */</span>", 
"<span class=\"ts\"/>signed short<span class=\"ts\"/><a class=\"id\" href=\"#prio\">prio</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* swap priority of this type */</span>", 
"<span class=\"ts\"/>signed char<span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* strange name for an index */</span>", 
"<span class=\"ts\"/>signed char<span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* next type on the swap list */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#max\">max</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* extent of the swap_map */</span>", 
"<span class=\"ts\"/>unsigned char *<a class=\"id\" href=\"#swap_map\">swap_map</a>;<span class=\"ts\"/><span class=\"comment\">/* vmalloc'ed array of usage counts */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#lowest_bit\">lowest_bit</a>;<span class=\"ts\"/><span class=\"comment\">/* index of first free in swap_map */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#highest_bit\">highest_bit</a>;<span class=\"ts\"/><span class=\"comment\">/* index of last free in swap_map */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#pages\">pages</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* total of usable pages of swap */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#inuse_pages\">inuse_pages</a>;<span class=\"ts\"/><span class=\"comment\">/* number of those currently in use */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cluster_next\">cluster_next</a>;<span class=\"ts\"/><span class=\"comment\">/* likely index for next allocation */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cluster_nr\">cluster_nr</a>;<span class=\"ts\"/><span class=\"comment\">/* countdown to next cluster search */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#lowest_alloc\">lowest_alloc</a>;<span class=\"ts\"/><span class=\"comment\">/* while preparing discard cluster */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#highest_alloc\">highest_alloc</a>;<span class=\"ts\"/><span class=\"comment\">/* while preparing discard cluster */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#swap_extent\">swap_extent</a> *<a class=\"id\" href=\"#curr_swap_extent\">curr_swap_extent</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#swap_extent\">swap_extent</a> <a class=\"id\" href=\"#first_swap_extent\">first_swap_extent</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>;<span class=\"ts\"/><span class=\"comment\">/* swap device or bdev of swap file */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#swap_file\">swap_file</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* seldom referenced */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#old_block_size\">old_block_size</a>;<span class=\"ts\"/><span class=\"comment\">/* seldom referenced */</span>", 
"};", 
"", 
"struct <a class=\"id\" href=\"#swap_list_t\">swap_list_t</a> {", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#head\">head</a>;<span class=\"ts\"/><span class=\"comment\">/* head of priority-ordered swapfile list */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#next\">next</a>;<span class=\"ts\"/><span class=\"comment\">/* swapfile to be used next */</span>", 
"};", 
"", 
"<span class=\"comment\">/* Swap 50% full? Release swapcache more aggressively.. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#vm_swap_full\">vm_swap_full</a>() (<a class=\"id\" href=\"#nr_swap_pages\">nr_swap_pages</a>*2 &lt; <a class=\"id\" href=\"#total_swap_pages\">total_swap_pages</a>)", 
"", 
"<span class=\"comment\">/* linux/mm/page_alloc.c */</span>", 
"extern unsigned long <a class=\"id\" href=\"#totalram_pages\">totalram_pages</a>;", 
"extern unsigned long <a class=\"id\" href=\"#totalreserve_pages\">totalreserve_pages</a>;", 
"extern unsigned int <a class=\"id\" href=\"#nr_free_buffer_pages\">nr_free_buffer_pages</a>(void);", 
"extern unsigned int <a class=\"id\" href=\"#nr_free_pagecache_pages\">nr_free_pagecache_pages</a>(void);", 
"", 
"<span class=\"comment\">/* Definition of global_page_state not available yet */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#nr_free_pages\">nr_free_pages</a>() <a class=\"id\" href=\"#global_page_state\">global_page_state</a>(<a class=\"id\" href=\"#NR_FREE_PAGES\">NR_FREE_PAGES</a>)", 
"", 
"", 
"<span class=\"comment\">/* linux/mm/swap.c */</span>", 
"extern void <a class=\"id\" href=\"#__lru_cache_add\">__lru_cache_add</a>(struct <a class=\"id\" href=\"#page\">page</a> *, enum <a class=\"id\" href=\"#lru_list\">lru_list</a> <a class=\"id\" href=\"#lru\">lru</a>);", 
"extern void <a class=\"id\" href=\"#lru_cache_add_lru\">lru_cache_add_lru</a>(struct <a class=\"id\" href=\"#page\">page</a> *, enum <a class=\"id\" href=\"#lru_list\">lru_list</a> <a class=\"id\" href=\"#lru\">lru</a>);", 
"extern void <a class=\"id\" href=\"#activate_page\">activate_page</a>(struct <a class=\"id\" href=\"#page\">page</a> *);", 
"extern void <a class=\"id\" href=\"#mark_page_accessed\">mark_page_accessed</a>(struct <a class=\"id\" href=\"#page\">page</a> *);", 
"extern void <a class=\"id\" href=\"#lru_add_drain\">lru_add_drain</a>(void);", 
"extern int <a class=\"id\" href=\"#lru_add_drain_all\">lru_add_drain_all</a>(void);", 
"extern void <a class=\"id\" href=\"#rotate_reclaimable_page\">rotate_reclaimable_page</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>);", 
"extern void <a class=\"id\" href=\"#swap_setup\">swap_setup</a>(void);", 
"", 
"extern void <a class=\"id\" href=\"#add_page_to_unevictable_list\">add_page_to_unevictable_list</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * lru_cache_add: add a page to the page lists</span>", 
"<span class=\"comment\"> * @page: the page to add</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#lru_cache_add_anon\">lru_cache_add_anon</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__lru_cache_add\">__lru_cache_add</a>(<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#LRU_INACTIVE_ANON\">LRU_INACTIVE_ANON</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#lru_cache_add_file\">lru_cache_add_file</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__lru_cache_add\">__lru_cache_add</a>(<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#LRU_INACTIVE_FILE\">LRU_INACTIVE_FILE</a>);", 
"}", 
"", 
"<span class=\"comment\">/* LRU Isolation modes. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ISOLATE_INACTIVE\">ISOLATE_INACTIVE</a> 0<span class=\"ts\"/><span class=\"comment\">/* Isolate inactive pages. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ISOLATE_ACTIVE\">ISOLATE_ACTIVE</a> 1<span class=\"ts\"/><span class=\"comment\">/* Isolate active pages. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ISOLATE_BOTH\">ISOLATE_BOTH</a> 2<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Isolate both active and inactive pages. */</span>", 
"", 
"<span class=\"comment\">/* linux/mm/vmscan.c */</span>", 
"extern unsigned long <a class=\"id\" href=\"#try_to_free_pages\">try_to_free_pages</a>(struct <a class=\"id\" href=\"#zonelist\">zonelist</a> *<a class=\"id\" href=\"#zonelist\">zonelist</a>, int <a class=\"id\" href=\"#order\">order</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>, <a class=\"id\" href=\"#nodemask_t\">nodemask_t</a> *<a class=\"id\" href=\"#mask\">mask</a>);", 
"extern unsigned long <a class=\"id\" href=\"#try_to_free_mem_cgroup_pages\">try_to_free_mem_cgroup_pages</a>(struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> *<a class=\"id\" href=\"#mem\">mem</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#noswap\">noswap</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned int <a class=\"id\" href=\"#swappiness\">swappiness</a>);", 
"extern unsigned long <a class=\"id\" href=\"#mem_cgroup_shrink_node_zone\">mem_cgroup_shrink_node_zone</a>(struct <a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> *<a class=\"id\" href=\"#mem\">mem</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#noswap\">noswap</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#swappiness\">swappiness</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#zone\">zone</a> *<a class=\"id\" href=\"#zone\">zone</a>);", 
"extern int <a class=\"id\" href=\"#__isolate_lru_page\">__isolate_lru_page</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, int <a class=\"id\" href=\"#mode\">mode</a>, int <a class=\"id\" href=\"#file\">file</a>);", 
"extern unsigned long <a class=\"id\" href=\"#shrink_all_memory\">shrink_all_memory</a>(unsigned long <a class=\"id\" href=\"#nr_pages\">nr_pages</a>);", 
"extern int <a class=\"id\" href=\"#vm_swappiness\">vm_swappiness</a>;", 
"extern int <a class=\"id\" href=\"#remove_mapping\">remove_mapping</a>(struct <a class=\"id\" href=\"#address_space\">address_space</a> *<a class=\"id\" href=\"#mapping\">mapping</a>, struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>);", 
"extern long <a class=\"id\" href=\"#vm_total_pages\">vm_total_pages</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NUMA\">CONFIG_NUMA</a>", 
"extern int <a class=\"id\" href=\"#zone_reclaim_mode\">zone_reclaim_mode</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_min_unmapped_ratio\">sysctl_min_unmapped_ratio</a>;", 
"extern int <a class=\"id\" href=\"#sysctl_min_slab_ratio\">sysctl_min_slab_ratio</a>;", 
"extern int <a class=\"id\" href=\"#zone_reclaim\">zone_reclaim</a>(struct <a class=\"id\" href=\"#zone\">zone</a> *, <a class=\"id\" href=\"#gfp_t\">gfp_t</a>, unsigned int);", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#zone_reclaim_mode\">zone_reclaim_mode</a> 0", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#zone_reclaim\">zone_reclaim</a>(struct <a class=\"id\" href=\"#zone\">zone</a> *<a class=\"id\" href=\"#z\">z</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#mask\">mask</a>, unsigned int <a class=\"id\" href=\"#order\">order</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"extern int <a class=\"id\" href=\"#page_evictable\">page_evictable</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>);", 
"extern void <a class=\"id\" href=\"#scan_mapping_unevictable_pages\">scan_mapping_unevictable_pages</a>(struct <a class=\"id\" href=\"#address_space\">address_space</a> *);", 
"", 
"extern unsigned long <a class=\"id\" href=\"#scan_unevictable_pages\">scan_unevictable_pages</a>;", 
"extern int <a class=\"id\" href=\"#scan_unevictable_handler\">scan_unevictable_handler</a>(struct <a class=\"id\" href=\"#ctl_table\">ctl_table</a> *, int,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>void <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#size_t\">size_t</a> *, <a class=\"id\" href=\"#loff_t\">loff_t</a> *);", 
"extern int <a class=\"id\" href=\"#scan_unevictable_register_node\">scan_unevictable_register_node</a>(struct <a class=\"id\" href=\"#node\">node</a> *<a class=\"id\" href=\"#node\">node</a>);", 
"extern void <a class=\"id\" href=\"#scan_unevictable_unregister_node\">scan_unevictable_unregister_node</a>(struct <a class=\"id\" href=\"#node\">node</a> *<a class=\"id\" href=\"#node\">node</a>);", 
"", 
"extern int <a class=\"id\" href=\"#kswapd_run\">kswapd_run</a>(int <a class=\"id\" href=\"#nid\">nid</a>);", 
"extern void <a class=\"id\" href=\"#kswapd_stop\">kswapd_stop</a>(int <a class=\"id\" href=\"#nid\">nid</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_MMU\">CONFIG_MMU</a>", 
"<span class=\"comment\">/* linux/mm/shmem.c */</span>", 
"extern int <a class=\"id\" href=\"#shmem_unuse\">shmem_unuse</a>(<a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a> <a class=\"id\" href=\"#entry\">entry</a>, struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_MMU */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_CGROUP_MEM_RES_CTLR\">CONFIG_CGROUP_MEM_RES_CTLR</a>", 
"extern void <a class=\"id\" href=\"#mem_cgroup_get_shmem_target\">mem_cgroup_get_shmem_target</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#pgoff_t\">pgoff_t</a> <a class=\"id\" href=\"#pgoff\">pgoff</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> **<a class=\"id\" href=\"#pagep\">pagep</a>, <a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a> *<a class=\"id\" href=\"#ent\">ent</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"extern void <a class=\"id\" href=\"#swap_unplug_io_fn\">swap_unplug_io_fn</a>(struct <a class=\"id\" href=\"#backing_dev_info\">backing_dev_info</a> *, struct <a class=\"id\" href=\"#page\">page</a> *);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SWAP\">CONFIG_SWAP</a>", 
"<span class=\"comment\">/* linux/mm/page_io.c */</span>", 
"extern int <a class=\"id\" href=\"#swap_readpage\">swap_readpage</a>(struct <a class=\"id\" href=\"#page\">page</a> *);", 
"extern int <a class=\"id\" href=\"#swap_writepage\">swap_writepage</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, struct <a class=\"id\" href=\"#writeback_control\">writeback_control</a> *<a class=\"id\" href=\"#wbc\">wbc</a>);", 
"extern void <a class=\"id\" href=\"#end_swap_bio_read\">end_swap_bio_read</a>(struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>, int <a class=\"id\" href=\"#err\">err</a>);", 
"", 
"<span class=\"comment\">/* linux/mm/swap_state.c */</span>", 
"extern struct <a class=\"id\" href=\"#address_space\">address_space</a> <a class=\"id\" href=\"#swapper_space\">swapper_space</a>;", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#total_swapcache_pages\">total_swapcache_pages</a>  <a class=\"id\" href=\"#swapper_space\">swapper_space</a>.<a class=\"id\" href=\"#nrpages\">nrpages</a>", 
"extern void <a class=\"id\" href=\"#show_swap_cache_info\">show_swap_cache_info</a>(void);", 
"extern int <a class=\"id\" href=\"#add_to_swap\">add_to_swap</a>(struct <a class=\"id\" href=\"#page\">page</a> *);", 
"extern int <a class=\"id\" href=\"#add_to_swap_cache\">add_to_swap_cache</a>(struct <a class=\"id\" href=\"#page\">page</a> *, <a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a>);", 
"extern void <a class=\"id\" href=\"#__delete_from_swap_cache\">__delete_from_swap_cache</a>(struct <a class=\"id\" href=\"#page\">page</a> *);", 
"extern void <a class=\"id\" href=\"#delete_from_swap_cache\">delete_from_swap_cache</a>(struct <a class=\"id\" href=\"#page\">page</a> *);", 
"extern void <a class=\"id\" href=\"#free_page_and_swap_cache\">free_page_and_swap_cache</a>(struct <a class=\"id\" href=\"#page\">page</a> *);", 
"extern void <a class=\"id\" href=\"#free_pages_and_swap_cache\">free_pages_and_swap_cache</a>(struct <a class=\"id\" href=\"#page\">page</a> **, int);", 
"extern struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#lookup_swap_cache\">lookup_swap_cache</a>(<a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a>);", 
"extern struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#read_swap_cache_async\">read_swap_cache_async</a>(<a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>, unsigned long <a class=\"id\" href=\"#addr\">addr</a>);", 
"extern struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#swapin_readahead\">swapin_readahead</a>(<a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>, unsigned long <a class=\"id\" href=\"#addr\">addr</a>);", 
"", 
"<span class=\"comment\">/* linux/mm/swapfile.c */</span>", 
"extern long <a class=\"id\" href=\"#nr_swap_pages\">nr_swap_pages</a>;", 
"extern long <a class=\"id\" href=\"#total_swap_pages\">total_swap_pages</a>;", 
"extern void <a class=\"id\" href=\"#si_swapinfo\">si_swapinfo</a>(struct <a class=\"id\" href=\"#sysinfo\">sysinfo</a> *);", 
"extern <a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a> <a class=\"id\" href=\"#get_swap_page\">get_swap_page</a>(void);", 
"extern <a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a> <a class=\"id\" href=\"#get_swap_page_of_type\">get_swap_page_of_type</a>(int);", 
"extern int <a class=\"id\" href=\"#valid_swaphandles\">valid_swaphandles</a>(<a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a>, unsigned long *);", 
"extern int <a class=\"id\" href=\"#add_swap_count_continuation\">add_swap_count_continuation</a>(<a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a>);", 
"extern void <a class=\"id\" href=\"#swap_shmem_alloc\">swap_shmem_alloc</a>(<a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a>);", 
"extern int <a class=\"id\" href=\"#swap_duplicate\">swap_duplicate</a>(<a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a>);", 
"extern int <a class=\"id\" href=\"#swapcache_prepare\">swapcache_prepare</a>(<a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a>);", 
"extern void <a class=\"id\" href=\"#swap_free\">swap_free</a>(<a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a>);", 
"extern void <a class=\"id\" href=\"#swapcache_free\">swapcache_free</a>(<a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a>, struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>);", 
"extern int <a class=\"id\" href=\"#free_swap_and_cache\">free_swap_and_cache</a>(<a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a>);", 
"extern int <a class=\"id\" href=\"#swap_type_of\">swap_type_of</a>(<a class=\"id\" href=\"#dev_t\">dev_t</a>, <a class=\"id\" href=\"#sector_t\">sector_t</a>, struct <a class=\"id\" href=\"#block_device\">block_device</a> **);", 
"extern unsigned int <a class=\"id\" href=\"#count_swap_pages\">count_swap_pages</a>(int, int);", 
"extern <a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#map_swap_page\">map_swap_page</a>(struct <a class=\"id\" href=\"#page\">page</a> *, struct <a class=\"id\" href=\"#block_device\">block_device</a> **);", 
"extern <a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#swapdev_block\">swapdev_block</a>(int, <a class=\"id\" href=\"#pgoff_t\">pgoff_t</a>);", 
"extern int <a class=\"id\" href=\"#reuse_swap_page\">reuse_swap_page</a>(struct <a class=\"id\" href=\"#page\">page</a> *);", 
"extern int <a class=\"id\" href=\"#try_to_free_swap\">try_to_free_swap</a>(struct <a class=\"id\" href=\"#page\">page</a> *);", 
"struct <a class=\"id\" href=\"#backing_dev_info\">backing_dev_info</a>;", 
"", 
"<span class=\"comment\">/* linux/mm/thrash.c */</span>", 
"extern struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#swap_token_mm\">swap_token_mm</a>;", 
"extern void <a class=\"id\" href=\"#grab_swap_token\">grab_swap_token</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *);", 
"extern void <a class=\"id\" href=\"#__put_swap_token\">__put_swap_token</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#has_swap_token\">has_swap_token</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#mm\">mm</a> == <a class=\"id\" href=\"#swap_token_mm\">swap_token_mm</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#put_swap_token\">put_swap_token</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#has_swap_token\">has_swap_token</a>(<a class=\"id\" href=\"#mm\">mm</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__put_swap_token\">__put_swap_token</a>(<a class=\"id\" href=\"#mm\">mm</a>);", 
"}", 
"", 
];
xr_frag_insert('l/7f/21447a02ba3c98076cc1f9d607c66e0082f558.xr', __xr_tmp);
