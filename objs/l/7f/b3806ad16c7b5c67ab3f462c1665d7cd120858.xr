var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This only handles 32bit MTRR on 32bit hosts. This is strictly wrong</span>", 
"<span class=\"comment\"> * because MTRRs can span upto 40 bits (36bits on most modern x86)</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEBUG\">DEBUG</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#io\">io</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#processor\">processor</a>-<a class=\"id\" href=\"#flags\">flags</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#cpufeature\">cpufeature</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#tlbflush\">tlbflush</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#system\">system</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#mtrr\">mtrr</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#msr\">msr</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#pat\">pat</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"mtrr.h\"", 
"", 
"struct <a class=\"id\" href=\"#fixed_range_block\">fixed_range_block</a> {", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#base_msr\">base_msr</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* start address of an MTRR block */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ranges\">ranges</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* number of MTRRs in this block  */</span>", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#fixed_range_block\">fixed_range_block</a> <a class=\"id\" href=\"#fixed_range_blocks\">fixed_range_blocks</a>[] = {", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#MSR_MTRRfix64K_00000\">MSR_MTRRfix64K_00000</a>, 1 }, <span class=\"comment\">/* one   64k MTRR  */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#MSR_MTRRfix16K_80000\">MSR_MTRRfix16K_80000</a>, 2 }, <span class=\"comment\">/* two   16k MTRRs */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#MSR_MTRRfix4K_C0000\">MSR_MTRRfix4K_C0000</a>,  8 }, <span class=\"comment\">/* eight  4k MTRRs */</span>", 
"<span class=\"ts\"/>{}", 
"};", 
"", 
"static unsigned long <a class=\"id\" href=\"#smp_changes_mask\">smp_changes_mask</a>;", 
"static int <a class=\"id\" href=\"#mtrr_state_set\">mtrr_state_set</a>;", 
"<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#mtrr_tom2\">mtrr_tom2</a>;", 
"", 
"struct <a class=\"id\" href=\"#mtrr_state_type\">mtrr_state_type</a> <a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>;", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * BIOS is expected to clear MtrrFixDramModEn bit, see for example</span>", 
"<span class=\"comment\"> * \"BIOS and Kernel Developer's Guide for the AMD Athlon 64 and AMD</span>", 
"<span class=\"comment\"> * Opteron Processors\" (26094 Rev. 3.30 February 2006), section</span>", 
"<span class=\"comment\"> * \"13.2.1.2 SYSCFG Register\": \"The MtrrFixDramModEn bit should be set</span>", 
"<span class=\"comment\"> * to 1 during BIOS initalization of the fixed MTRRs, then cleared to</span>", 
"<span class=\"comment\"> * 0 for operation.\"</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#k8_check_syscfg_dram_mod_en\">k8_check_syscfg_dram_mod_en</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>;", 
"", 
"<span class=\"ts\"/>if (!((<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86_vendor\">x86_vendor</a> == <a class=\"id\" href=\"#X86_VENDOR_AMD\">X86_VENDOR_AMD</a>) &&", 
"<span class=\"ts\"/>      (<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86\">x86</a> >= 0x0f)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#MSR_K8_SYSCFG\">MSR_K8_SYSCFG</a>, <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lo\">lo</a> &amp; <a class=\"id\" href=\"#K8_MTRRFIXRANGE_DRAM_MODIFY\">K8_MTRRFIXRANGE_DRAM_MODIFY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#FW_WARN\">FW_WARN</a> \"MTRR: CPU %u: SYSCFG[MtrrFixDramModEn]\"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \" not cleared by BIOS, clearing this bit\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>());", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a> &= ~<a class=\"id\" href=\"#K8_MTRRFIXRANGE_DRAM_MODIFY\">K8_MTRRFIXRANGE_DRAM_MODIFY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mtrr_wrmsr\">mtrr_wrmsr</a>(<a class=\"id\" href=\"#MSR_K8_SYSCFG\">MSR_K8_SYSCFG</a>, <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Returns the effective MTRR type for the region</span>", 
"<span class=\"comment\"> * Error returns:</span>", 
"<span class=\"comment\"> * - 0xFE - when the range is \"not entirely covered\" by _any_ var range MTRR</span>", 
"<span class=\"comment\"> * - 0xFF - when MTRR is not enabled</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#mtrr_type_lookup\">mtrr_type_lookup</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#end\">end</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#prev_match\">prev_match</a>, <a class=\"id\" href=\"#curr_match\">curr_match</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mtrr_state_set\">mtrr_state_set</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0xFF;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#enabled\">enabled</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0xFF;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Make end inclusive end, instead of exclusive */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a>--;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Look in fixed ranges. Just return the type as per start */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#have_fixed\">have_fixed</a> && (<a class=\"id\" href=\"#start\">start</a> &lt; 0x100000)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#idx\">idx</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#start\">start</a> &lt; 0x80000) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idx\">idx</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idx\">idx</a> += (<a class=\"id\" href=\"#start\">start</a> >> 16);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#fixed_ranges\">fixed_ranges</a>[<a class=\"id\" href=\"#idx\">idx</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#start\">start</a> &lt; 0xC0000) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idx\">idx</a> = 1 * 8;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idx\">idx</a> += ((<a class=\"id\" href=\"#start\">start</a> - 0x80000) >> 14);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#fixed_ranges\">fixed_ranges</a>[<a class=\"id\" href=\"#idx\">idx</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#start\">start</a> &lt; 0x1000000) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idx\">idx</a> = 3 * 8;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idx\">idx</a> += ((<a class=\"id\" href=\"#start\">start</a> - 0xC0000) >> 12);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#fixed_ranges\">fixed_ranges</a>[<a class=\"id\" href=\"#idx\">idx</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Look in variable ranges</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Look of multiple ranges matching this address and pick type</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * as per MTRR precedence</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#enabled\">enabled</a> &amp; 2))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#def_type\">def_type</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#prev_match\">prev_match</a> = 0xFF;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#num_var_ranges\">num_var_ranges</a>; ++<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#start_state\">start_state</a>, <a class=\"id\" href=\"#end_state\">end_state</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#var_ranges\">var_ranges</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#mask_lo\">mask_lo</a> &amp; (1 << 11)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#base\">base</a> = (((<a class=\"id\" href=\"#u64\">u64</a>)<a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#var_ranges\">var_ranges</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#base_hi\">base_hi</a>) << 32) +", 
"<span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#var_ranges\">var_ranges</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#base_lo\">base_lo</a> &amp; <a class=\"id\" href=\"#PAGE_MASK\">PAGE_MASK</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> = (((<a class=\"id\" href=\"#u64\">u64</a>)<a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#var_ranges\">var_ranges</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#mask_hi\">mask_hi</a>) << 32) +", 
"<span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#var_ranges\">var_ranges</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#mask_lo\">mask_lo</a> &amp; <a class=\"id\" href=\"#PAGE_MASK\">PAGE_MASK</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_state\">start_state</a> = ((<a class=\"id\" href=\"#start\">start</a> &amp; <a class=\"id\" href=\"#mask\">mask</a>) == (<a class=\"id\" href=\"#base\">base</a> &amp; <a class=\"id\" href=\"#mask\">mask</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end_state\">end_state</a> = ((<a class=\"id\" href=\"#end\">end</a> &amp; <a class=\"id\" href=\"#mask\">mask</a>) == (<a class=\"id\" href=\"#base\">base</a> &amp; <a class=\"id\" href=\"#mask\">mask</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#start_state\">start_state</a> != <a class=\"id\" href=\"#end_state\">end_state</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0xFE;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#start\">start</a> &amp; <a class=\"id\" href=\"#mask\">mask</a>) != (<a class=\"id\" href=\"#base\">base</a> &amp; <a class=\"id\" href=\"#mask\">mask</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#curr_match\">curr_match</a> = <a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#var_ranges\">var_ranges</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#base_lo\">base_lo</a> &amp; 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#prev_match\">prev_match</a> == 0xFF) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prev_match\">prev_match</a> = <a class=\"id\" href=\"#curr_match\">curr_match</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#prev_match\">prev_match</a> == <a class=\"id\" href=\"#MTRR_TYPE_UNCACHABLE\">MTRR_TYPE_UNCACHABLE</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#curr_match\">curr_match</a> == <a class=\"id\" href=\"#MTRR_TYPE_UNCACHABLE\">MTRR_TYPE_UNCACHABLE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#MTRR_TYPE_UNCACHABLE\">MTRR_TYPE_UNCACHABLE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#prev_match\">prev_match</a> == <a class=\"id\" href=\"#MTRR_TYPE_WRBACK\">MTRR_TYPE_WRBACK</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#curr_match\">curr_match</a> == <a class=\"id\" href=\"#MTRR_TYPE_WRTHROUGH\">MTRR_TYPE_WRTHROUGH</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#prev_match\">prev_match</a> == <a class=\"id\" href=\"#MTRR_TYPE_WRTHROUGH\">MTRR_TYPE_WRTHROUGH</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#curr_match\">curr_match</a> == <a class=\"id\" href=\"#MTRR_TYPE_WRBACK\">MTRR_TYPE_WRBACK</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prev_match\">prev_match</a> = <a class=\"id\" href=\"#MTRR_TYPE_WRTHROUGH\">MTRR_TYPE_WRTHROUGH</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#curr_match\">curr_match</a> = <a class=\"id\" href=\"#MTRR_TYPE_WRTHROUGH\">MTRR_TYPE_WRTHROUGH</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#prev_match\">prev_match</a> != <a class=\"id\" href=\"#curr_match\">curr_match</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#MTRR_TYPE_UNCACHABLE\">MTRR_TYPE_UNCACHABLE</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mtrr_tom2\">mtrr_tom2</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#start\">start</a> >= (1ULL<<32) && (<a class=\"id\" href=\"#end\">end</a> &lt; <a class=\"id\" href=\"#mtrr_tom2\">mtrr_tom2</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#MTRR_TYPE_WRBACK\">MTRR_TYPE_WRBACK</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#prev_match\">prev_match</a> != 0xFF)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#prev_match\">prev_match</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#def_type\">def_type</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Get the MSR pair relating to a var range */</span>", 
"static void", 
"<a class=\"id\" href=\"#get_mtrr_var_range\">get_mtrr_var_range</a>(unsigned int <a class=\"id\" href=\"#index\">index</a>, struct <a class=\"id\" href=\"#mtrr_var_range\">mtrr_var_range</a> *<a class=\"id\" href=\"#vr\">vr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#MTRRphysBase_MSR\">MTRRphysBase_MSR</a>(<a class=\"id\" href=\"#index\">index</a>), <a class=\"id\" href=\"#vr\">vr</a>-><a class=\"id\" href=\"#base_lo\">base_lo</a>, <a class=\"id\" href=\"#vr\">vr</a>-><a class=\"id\" href=\"#base_hi\">base_hi</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#MTRRphysMask_MSR\">MTRRphysMask_MSR</a>(<a class=\"id\" href=\"#index\">index</a>), <a class=\"id\" href=\"#vr\">vr</a>-><a class=\"id\" href=\"#mask_lo\">mask_lo</a>, <a class=\"id\" href=\"#vr\">vr</a>-><a class=\"id\" href=\"#mask_hi\">mask_hi</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Fill the MSR pair relating to a var range */</span>", 
"void <a class=\"id\" href=\"#fill_mtrr_var_range\">fill_mtrr_var_range</a>(unsigned int <a class=\"id\" href=\"#index\">index</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#base_lo\">base_lo</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#base_hi\">base_hi</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mask_lo\">mask_lo</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mask_hi\">mask_hi</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mtrr_var_range\">mtrr_var_range</a> *<a class=\"id\" href=\"#vr\">vr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vr\">vr</a> = <a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#var_ranges\">var_ranges</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vr\">vr</a>[<a class=\"id\" href=\"#index\">index</a>].<a class=\"id\" href=\"#base_lo\">base_lo</a> = <a class=\"id\" href=\"#base_lo\">base_lo</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vr\">vr</a>[<a class=\"id\" href=\"#index\">index</a>].<a class=\"id\" href=\"#base_hi\">base_hi</a> = <a class=\"id\" href=\"#base_hi\">base_hi</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vr\">vr</a>[<a class=\"id\" href=\"#index\">index</a>].<a class=\"id\" href=\"#mask_lo\">mask_lo</a> = <a class=\"id\" href=\"#mask_lo\">mask_lo</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vr\">vr</a>[<a class=\"id\" href=\"#index\">index</a>].<a class=\"id\" href=\"#mask_hi\">mask_hi</a> = <a class=\"id\" href=\"#mask_hi\">mask_hi</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#get_fixed_ranges\">get_fixed_ranges</a>(<a class=\"id\" href=\"#mtrr_type\">mtrr_type</a> *<a class=\"id\" href=\"#frs\">frs</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int *<a class=\"id\" href=\"#p\">p</a> = (unsigned int *)<a class=\"id\" href=\"#frs\">frs</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#k8_check_syscfg_dram_mod_en\">k8_check_syscfg_dram_mod_en</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#MSR_MTRRfix64K_00000\">MSR_MTRRfix64K_00000</a>, <a class=\"id\" href=\"#p\">p</a>[0], <a class=\"id\" href=\"#p\">p</a>[1]);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 2; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#MSR_MTRRfix16K_80000\">MSR_MTRRfix16K_80000</a> + <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#p\">p</a>[2 + <a class=\"id\" href=\"#i\">i</a> * 2], <a class=\"id\" href=\"#p\">p</a>[3 + <a class=\"id\" href=\"#i\">i</a> * 2]);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 8; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#MSR_MTRRfix4K_C0000\">MSR_MTRRfix4K_C0000</a> + <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#p\">p</a>[6 + <a class=\"id\" href=\"#i\">i</a> * 2], <a class=\"id\" href=\"#p\">p</a>[7 + <a class=\"id\" href=\"#i\">i</a> * 2]);", 
"}", 
"", 
"void <a class=\"id\" href=\"#mtrr_save_fixed_ranges\">mtrr_save_fixed_ranges</a>(void *<a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_has_mtrr\">cpu_has_mtrr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_fixed_ranges\">get_fixed_ranges</a>(<a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#fixed_ranges\">fixed_ranges</a>);", 
"}", 
"", 
"static unsigned <a class=\"id\" href=\"#__initdata\">__initdata</a> <a class=\"id\" href=\"#last_fixed_start\">last_fixed_start</a>;", 
"static unsigned <a class=\"id\" href=\"#__initdata\">__initdata</a> <a class=\"id\" href=\"#last_fixed_end\">last_fixed_end</a>;", 
"static <a class=\"id\" href=\"#mtrr_type\">mtrr_type</a> <a class=\"id\" href=\"#__initdata\">__initdata</a> <a class=\"id\" href=\"#last_fixed_type\">last_fixed_type</a>;", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#print_fixed_last\">print_fixed_last</a>(void)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#last_fixed_end\">last_fixed_end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"  %05X-%05X %s\\n\", <a class=\"id\" href=\"#last_fixed_start\">last_fixed_start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#last_fixed_end\">last_fixed_end</a> - 1, <a class=\"id\" href=\"#mtrr_attrib_to_str\">mtrr_attrib_to_str</a>(<a class=\"id\" href=\"#last_fixed_type\">last_fixed_type</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#last_fixed_end\">last_fixed_end</a> = 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#update_fixed_last\">update_fixed_last</a>(unsigned <a class=\"id\" href=\"#base\">base</a>, unsigned <a class=\"id\" href=\"#end\">end</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#mtrr_type\">mtrr_type</a> <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#last_fixed_start\">last_fixed_start</a> = <a class=\"id\" href=\"#base\">base</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#last_fixed_end\">last_fixed_end</a> = <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#last_fixed_type\">last_fixed_type</a> = <a class=\"id\" href=\"#type\">type</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a>", 
"<a class=\"id\" href=\"#print_fixed\">print_fixed</a>(unsigned <a class=\"id\" href=\"#base\">base</a>, unsigned <a class=\"id\" href=\"#step\">step</a>, const <a class=\"id\" href=\"#mtrr_type\">mtrr_type</a> *<a class=\"id\" href=\"#types\">types</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 8; ++<a class=\"id\" href=\"#i\">i</a>, ++<a class=\"id\" href=\"#types\">types</a>, <a class=\"id\" href=\"#base\">base</a> += <a class=\"id\" href=\"#step\">step</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#last_fixed_end\">last_fixed_end</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#update_fixed_last\">update_fixed_last</a>(<a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#base\">base</a> + <a class=\"id\" href=\"#step\">step</a>, *<a class=\"id\" href=\"#types\">types</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#last_fixed_end\">last_fixed_end</a> == <a class=\"id\" href=\"#base\">base</a> && <a class=\"id\" href=\"#last_fixed_type\">last_fixed_type</a> == *<a class=\"id\" href=\"#types\">types</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_fixed_end\">last_fixed_end</a> = <a class=\"id\" href=\"#base\">base</a> + <a class=\"id\" href=\"#step\">step</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* new segments: gap or different type */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#print_fixed_last\">print_fixed_last</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#update_fixed_last\">update_fixed_last</a>(<a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#base\">base</a> + <a class=\"id\" href=\"#step\">step</a>, *<a class=\"id\" href=\"#types\">types</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#prepare_set\">prepare_set</a>(void);", 
"static void <a class=\"id\" href=\"#post_set\">post_set</a>(void);", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#print_mtrr_state\">print_mtrr_state</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#high_width\">high_width</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"MTRR default type: %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#mtrr_attrib_to_str\">mtrr_attrib_to_str</a>(<a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#def_type\">def_type</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#have_fixed\">have_fixed</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"MTRR fixed ranges %sabled:\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#enabled\">enabled</a> &amp; 1 ? \"en\" : \"dis\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#print_fixed\">print_fixed</a>(0x00000, 0x10000, <a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#fixed_ranges\">fixed_ranges</a> + 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 2; ++<a class=\"id\" href=\"#i\">i</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#print_fixed\">print_fixed</a>(0x80000 + <a class=\"id\" href=\"#i\">i</a> * 0x20000, 0x04000,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#fixed_ranges\">fixed_ranges</a> + (<a class=\"id\" href=\"#i\">i</a> + 1) * 8);", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 8; ++<a class=\"id\" href=\"#i\">i</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#print_fixed\">print_fixed</a>(0xC0000 + <a class=\"id\" href=\"#i\">i</a> * 0x08000, 0x01000,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#fixed_ranges\">fixed_ranges</a> + (<a class=\"id\" href=\"#i\">i</a> + 3) * 8);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* tail */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#print_fixed_last\">print_fixed_last</a>();", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"MTRR variable ranges %sabled:\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#enabled\">enabled</a> &amp; 2 ? \"en\" : \"dis\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#size_or_mask\">size_or_mask</a> &amp; 0xffffffffUL)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#high_width\">high_width</a> = <a class=\"id\" href=\"#ffs\">ffs</a>(<a class=\"id\" href=\"#size_or_mask\">size_or_mask</a> &amp; 0xffffffffUL) - 1;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#high_width\">high_width</a> = <a class=\"id\" href=\"#ffs\">ffs</a>(<a class=\"id\" href=\"#size_or_mask\">size_or_mask</a>>>32) + 32 - 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#high_width\">high_width</a> = (<a class=\"id\" href=\"#high_width\">high_width</a> - (32 - <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>) + 3) / 4;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#num_var_ranges\">num_var_ranges</a>; ++<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#var_ranges\">var_ranges</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#mask_lo\">mask_lo</a> &amp; (1 << 11))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"  %u base %0*X%05X000 mask %0*X%05X000 %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#i\">i</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#high_width\">high_width</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#var_ranges\">var_ranges</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#base_hi\">base_hi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#var_ranges\">var_ranges</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#base_lo\">base_lo</a> >> 12,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#high_width\">high_width</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#var_ranges\">var_ranges</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#mask_hi\">mask_hi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#var_ranges\">var_ranges</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#mask_lo\">mask_lo</a> >> 12,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#mtrr_attrib_to_str\">mtrr_attrib_to_str</a>(<a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#var_ranges\">var_ranges</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#base_lo\">base_lo</a> &amp; 0xff));", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"  %u disabled\\n\", <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mtrr_tom2\">mtrr_tom2</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"TOM2: %016llx aka %lldM\\n\", <a class=\"id\" href=\"#mtrr_tom2\">mtrr_tom2</a>, <a class=\"id\" href=\"#mtrr_tom2\">mtrr_tom2</a>>>20);", 
"}", 
"", 
"<span class=\"comment\">/* Grab all of the MTRR state for this CPU into *state */</span>", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#get_mtrr_state\">get_mtrr_state</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mtrr_var_range\">mtrr_var_range</a> *<a class=\"id\" href=\"#vrs\">vrs</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#dummy\">dummy</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vrs\">vrs</a> = <a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#var_ranges\">var_ranges</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#MSR_MTRRcap\">MSR_MTRRcap</a>, <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#dummy\">dummy</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#have_fixed\">have_fixed</a> = (<a class=\"id\" href=\"#lo\">lo</a> >> 8) &amp; 1;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#num_var_ranges\">num_var_ranges</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_mtrr_var_range\">get_mtrr_var_range</a>(<a class=\"id\" href=\"#i\">i</a>, &amp;<a class=\"id\" href=\"#vrs\">vrs</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#have_fixed\">have_fixed</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_fixed_ranges\">get_fixed_ranges</a>(<a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#fixed_ranges\">fixed_ranges</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#MSR_MTRRdefType\">MSR_MTRRdefType</a>, <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#dummy\">dummy</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#def_type\">def_type</a> = (<a class=\"id\" href=\"#lo\">lo</a> &amp; 0xff);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#enabled\">enabled</a> = (<a class=\"id\" href=\"#lo\">lo</a> &amp; 0xc00) >> 10;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#amd_special_default_mtrr\">amd_special_default_mtrr</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned <a class=\"id\" href=\"#low\">low</a>, <a class=\"id\" href=\"#high\">high</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* TOP_MEM2 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#MSR_K8_TOP_MEM2\">MSR_K8_TOP_MEM2</a>, <a class=\"id\" href=\"#low\">low</a>, <a class=\"id\" href=\"#high\">high</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mtrr_tom2\">mtrr_tom2</a> = <a class=\"id\" href=\"#high\">high</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mtrr_tom2\">mtrr_tom2</a> <<= 32;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mtrr_tom2\">mtrr_tom2</a> |= <a class=\"id\" href=\"#low\">low</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mtrr_tom2\">mtrr_tom2</a> &= 0xffffff800000ULL;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#print_mtrr_state\">print_mtrr_state</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mtrr_state_set\">mtrr_state_set</a> = 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* PAT setup for BP. We need to go through sync steps here */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_save\">local_irq_save</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#prepare_set\">prepare_set</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pat_init\">pat_init</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#post_set\">post_set</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_restore\">local_irq_restore</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Some BIOS's are messed up and don't set all MTRRs the same! */</span>", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#mtrr_state_warn\">mtrr_state_warn</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#smp_changes_mask\">smp_changes_mask</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mask\">mask</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mask\">mask</a> &amp; <a class=\"id\" href=\"#MTRR_CHANGE_MASK_FIXED\">MTRR_CHANGE_MASK_FIXED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_warning\">pr_warning</a>(\"mtrr: your CPUs had inconsistent fixed MTRR settings\\n\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mask\">mask</a> &amp; <a class=\"id\" href=\"#MTRR_CHANGE_MASK_VARIABLE\">MTRR_CHANGE_MASK_VARIABLE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_warning\">pr_warning</a>(\"mtrr: your CPUs had inconsistent variable MTRR settings\\n\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mask\">mask</a> &amp; <a class=\"id\" href=\"#MTRR_CHANGE_MASK_DEFTYPE\">MTRR_CHANGE_MASK_DEFTYPE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_warning\">pr_warning</a>(\"mtrr: your CPUs had inconsistent MTRRdefType settings\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"mtrr: probably your BIOS does not setup all CPUs.\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"mtrr: corrected configuration.\\n\");", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Doesn't attempt to pass an error out to MTRR users</span>", 
"<span class=\"comment\"> * because it's quite complicated in some cases and probably not</span>", 
"<span class=\"comment\"> * worth it because the best error handling is to ignore it.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#mtrr_wrmsr\">mtrr_wrmsr</a>(unsigned <a class=\"id\" href=\"#msr\">msr</a>, unsigned <a class=\"id\" href=\"#a\">a</a>, unsigned <a class=\"id\" href=\"#b\">b</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#wrmsr_safe\">wrmsr_safe</a>(<a class=\"id\" href=\"#msr\">msr</a>, <a class=\"id\" href=\"#a\">a</a>, <a class=\"id\" href=\"#b\">b</a>) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"MTRR: CPU %u: Writing MSR %x to %x:%x failed\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>(), <a class=\"id\" href=\"#msr\">msr</a>, <a class=\"id\" href=\"#a\">a</a>, <a class=\"id\" href=\"#b\">b</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * set_fixed_range - checks &amp; updates a fixed-range MTRR if it</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>     differs from the value it should have</span>", 
"<span class=\"comment\"> * @msr: MSR address of the MTTR which should be checked and updated</span>", 
"<span class=\"comment\"> * @changed: pointer which indicates whether the MTRR needed to be changed</span>", 
"<span class=\"comment\"> * @msrwords: pointer to the MSR values which the MSR should have</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#set_fixed_range\">set_fixed_range</a>(int <a class=\"id\" href=\"#msr\">msr</a>, <a class=\"id\" href=\"#bool\">bool</a> *<a class=\"id\" href=\"#changed\">changed</a>, unsigned int *<a class=\"id\" href=\"#msrwords\">msrwords</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#msr\">msr</a>, <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lo\">lo</a> != <a class=\"id\" href=\"#msrwords\">msrwords</a>[0] || <a class=\"id\" href=\"#hi\">hi</a> != <a class=\"id\" href=\"#msrwords\">msrwords</a>[1]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mtrr_wrmsr\">mtrr_wrmsr</a>(<a class=\"id\" href=\"#msr\">msr</a>, <a class=\"id\" href=\"#msrwords\">msrwords</a>[0], <a class=\"id\" href=\"#msrwords\">msrwords</a>[1]);", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#changed\">changed</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * generic_get_free_region - Get a free MTRR.</span>", 
"<span class=\"comment\"> * @base: The starting (base) address of the region.</span>", 
"<span class=\"comment\"> * @size: The size (in bytes) of the region.</span>", 
"<span class=\"comment\"> * @replace_reg: mtrr index to be replaced; set to invalid value if none.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns: The index of the region on success, else negative on error.</span>", 
"<span class=\"comment\"> */</span>", 
"int", 
"<a class=\"id\" href=\"#generic_get_free_region\">generic_get_free_region</a>(unsigned long <a class=\"id\" href=\"#base\">base</a>, unsigned long <a class=\"id\" href=\"#size\">size</a>, int <a class=\"id\" href=\"#replace_reg\">replace_reg</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#lbase\">lbase</a>, <a class=\"id\" href=\"#lsize\">lsize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mtrr_type\">mtrr_type</a> <a class=\"id\" href=\"#ltype\">ltype</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#max\">max</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#max\">max</a> = <a class=\"id\" href=\"#num_var_ranges\">num_var_ranges</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#replace_reg\">replace_reg</a> >= 0 && <a class=\"id\" href=\"#replace_reg\">replace_reg</a> &lt; <a class=\"id\" href=\"#max\">max</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#replace_reg\">replace_reg</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#max\">max</a>; ++<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mtrr_if\">mtrr_if</a>-><a class=\"id\" href=\"#get\">get</a>(<a class=\"id\" href=\"#i\">i</a>, &amp;<a class=\"id\" href=\"#lbase\">lbase</a>, &amp;<a class=\"id\" href=\"#lsize\">lsize</a>, &amp;<a class=\"id\" href=\"#ltype\">ltype</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#lsize\">lsize</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#generic_get_mtrr\">generic_get_mtrr</a>(unsigned int <a class=\"id\" href=\"#reg\">reg</a>, unsigned long *<a class=\"id\" href=\"#base\">base</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned long *<a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#mtrr_type\">mtrr_type</a> *<a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#mask_lo\">mask_lo</a>, <a class=\"id\" href=\"#mask_hi\">mask_hi</a>, <a class=\"id\" href=\"#base_lo\">base_lo</a>, <a class=\"id\" href=\"#base_hi\">base_hi</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#tmp\">tmp</a>, <a class=\"id\" href=\"#hi\">hi</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * get_mtrr doesn't need to update mtrr_state, also it could be called</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * from any cpu, so try to print it out directly.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_cpu\">get_cpu</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#MTRRphysMask_MSR\">MTRRphysMask_MSR</a>(<a class=\"id\" href=\"#reg\">reg</a>), <a class=\"id\" href=\"#mask_lo\">mask_lo</a>, <a class=\"id\" href=\"#mask_hi\">mask_hi</a>);", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#mask_lo\">mask_lo</a> &amp; 0x800) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*  Invalid (i.e. free) range */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#base\">base</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#size\">size</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#type\">type</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_put_cpu\">out_put_cpu</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#MTRRphysBase_MSR\">MTRRphysBase_MSR</a>(<a class=\"id\" href=\"#reg\">reg</a>), <a class=\"id\" href=\"#base_lo\">base_lo</a>, <a class=\"id\" href=\"#base_hi\">base_hi</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Work out the shifted address mask: */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#mask_hi\">mask_hi</a> << (32 - <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>) | <a class=\"id\" href=\"#mask_lo\">mask_lo</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mask_lo\">mask_lo</a> = <a class=\"id\" href=\"#size_or_mask\">size_or_mask</a> | <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Expand tmp with high bits to all 1s: */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hi\">hi</a> = <a class=\"id\" href=\"#fls\">fls</a>(<a class=\"id\" href=\"#tmp\">tmp</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hi\">hi</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> |= ~((1<<(<a class=\"id\" href=\"#hi\">hi</a> - 1)) - 1);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tmp\">tmp</a> != <a class=\"id\" href=\"#mask_lo\">mask_lo</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"mtrr: your BIOS has configured an incorrect mask, fixing it.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask_lo\">mask_lo</a> = <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This works correctly if size is a power of two, i.e. a</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * contiguous range:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#size\">size</a> = -<a class=\"id\" href=\"#mask_lo\">mask_lo</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#base\">base</a> = <a class=\"id\" href=\"#base_hi\">base_hi</a> << (32 - <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>) | <a class=\"id\" href=\"#base_lo\">base_lo</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#base_lo\">base_lo</a> &amp; 0xff;", 
"", 
"<a class=\"id\" href=\"#out_put_cpu\">out_put_cpu</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_cpu\">put_cpu</a>();", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * set_fixed_ranges - checks &amp; updates the fixed-range MTRRs if they</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>      differ from the saved set</span>", 
"<span class=\"comment\"> * @frs: pointer to fixed-range MTRR values, saved by get_fixed_ranges()</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#set_fixed_ranges\">set_fixed_ranges</a>(<a class=\"id\" href=\"#mtrr_type\">mtrr_type</a> *<a class=\"id\" href=\"#frs\">frs</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long long *<a class=\"id\" href=\"#saved\">saved</a> = (unsigned long long *)<a class=\"id\" href=\"#frs\">frs</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#changed\">changed</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#block\">block</a> = -1, <a class=\"id\" href=\"#range\">range</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#k8_check_syscfg_dram_mod_en\">k8_check_syscfg_dram_mod_en</a>();", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#fixed_range_blocks\">fixed_range_blocks</a>[++<a class=\"id\" href=\"#block\">block</a>].<a class=\"id\" href=\"#ranges\">ranges</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#range\">range</a> = 0; <a class=\"id\" href=\"#range\">range</a> &lt; <a class=\"id\" href=\"#fixed_range_blocks\">fixed_range_blocks</a>[<a class=\"id\" href=\"#block\">block</a>].<a class=\"id\" href=\"#ranges\">ranges</a>; <a class=\"id\" href=\"#range\">range</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_fixed_range\">set_fixed_range</a>(<a class=\"id\" href=\"#fixed_range_blocks\">fixed_range_blocks</a>[<a class=\"id\" href=\"#block\">block</a>].<a class=\"id\" href=\"#base_msr\">base_msr</a> + <a class=\"id\" href=\"#range\">range</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#changed\">changed</a>, (unsigned int *)<a class=\"id\" href=\"#saved\">saved</a>++);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#changed\">changed</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Set the MSR pair relating to a var range.</span>", 
"<span class=\"comment\"> * Returns true if changes are made.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#set_mtrr_var_ranges\">set_mtrr_var_ranges</a>(unsigned int <a class=\"id\" href=\"#index\">index</a>, struct <a class=\"id\" href=\"#mtrr_var_range\">mtrr_var_range</a> *<a class=\"id\" href=\"#vr\">vr</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#changed\">changed</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#MTRRphysBase_MSR\">MTRRphysBase_MSR</a>(<a class=\"id\" href=\"#index\">index</a>), <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>);", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#vr\">vr</a>-><a class=\"id\" href=\"#base_lo\">base_lo</a> &amp; 0xfffff0ffUL) != (<a class=\"id\" href=\"#lo\">lo</a> &amp; 0xfffff0ffUL)", 
"<span class=\"ts\"/>    || (<a class=\"id\" href=\"#vr\">vr</a>-><a class=\"id\" href=\"#base_hi\">base_hi</a> &amp; (<a class=\"id\" href=\"#size_and_mask\">size_and_mask</a> >> (32 - <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>))) !=", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#hi\">hi</a> &amp; (<a class=\"id\" href=\"#size_and_mask\">size_and_mask</a> >> (32 - <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>)))) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mtrr_wrmsr\">mtrr_wrmsr</a>(<a class=\"id\" href=\"#MTRRphysBase_MSR\">MTRRphysBase_MSR</a>(<a class=\"id\" href=\"#index\">index</a>), <a class=\"id\" href=\"#vr\">vr</a>-><a class=\"id\" href=\"#base_lo\">base_lo</a>, <a class=\"id\" href=\"#vr\">vr</a>-><a class=\"id\" href=\"#base_hi\">base_hi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#changed\">changed</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#MTRRphysMask_MSR\">MTRRphysMask_MSR</a>(<a class=\"id\" href=\"#index\">index</a>), <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>);", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#vr\">vr</a>-><a class=\"id\" href=\"#mask_lo\">mask_lo</a> &amp; 0xfffff800UL) != (<a class=\"id\" href=\"#lo\">lo</a> &amp; 0xfffff800UL)", 
"<span class=\"ts\"/>    || (<a class=\"id\" href=\"#vr\">vr</a>-><a class=\"id\" href=\"#mask_hi\">mask_hi</a> &amp; (<a class=\"id\" href=\"#size_and_mask\">size_and_mask</a> >> (32 - <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>))) !=", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#hi\">hi</a> &amp; (<a class=\"id\" href=\"#size_and_mask\">size_and_mask</a> >> (32 - <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>)))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mtrr_wrmsr\">mtrr_wrmsr</a>(<a class=\"id\" href=\"#MTRRphysMask_MSR\">MTRRphysMask_MSR</a>(<a class=\"id\" href=\"#index\">index</a>), <a class=\"id\" href=\"#vr\">vr</a>-><a class=\"id\" href=\"#mask_lo\">mask_lo</a>, <a class=\"id\" href=\"#vr\">vr</a>-><a class=\"id\" href=\"#mask_hi\">mask_hi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#changed\">changed</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#changed\">changed</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#deftype_lo\">deftype_lo</a>, <a class=\"id\" href=\"#deftype_hi\">deftype_hi</a>;", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * set_mtrr_state - Set the MTRR state for this CPU.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NOTE: The CPU must already be in a safe state for MTRR changes.</span>", 
"<span class=\"comment\"> * RETURNS: 0 if no changes made, else a mask indicating what was changed.</span>", 
"<span class=\"comment\"> */</span>", 
"static unsigned long <a class=\"id\" href=\"#set_mtrr_state\">set_mtrr_state</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#change_mask\">change_mask</a> = 0;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#num_var_ranges\">num_var_ranges</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#set_mtrr_var_ranges\">set_mtrr_var_ranges</a>(<a class=\"id\" href=\"#i\">i</a>, &amp;<a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#var_ranges\">var_ranges</a>[<a class=\"id\" href=\"#i\">i</a>]))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#change_mask\">change_mask</a> |= <a class=\"id\" href=\"#MTRR_CHANGE_MASK_VARIABLE\">MTRR_CHANGE_MASK_VARIABLE</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#have_fixed\">have_fixed</a> && <a class=\"id\" href=\"#set_fixed_ranges\">set_fixed_ranges</a>(<a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#fixed_ranges\">fixed_ranges</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#change_mask\">change_mask</a> |= <a class=\"id\" href=\"#MTRR_CHANGE_MASK_FIXED\">MTRR_CHANGE_MASK_FIXED</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Set_mtrr_restore restores the old value of MTRRdefType,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so to set it we fiddle with the saved value:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#deftype_lo\">deftype_lo</a> &amp; 0xff) != <a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#def_type\">def_type</a>", 
"<span class=\"ts\"/>    || ((<a class=\"id\" href=\"#deftype_lo\">deftype_lo</a> &amp; 0xc00) >> 10) != <a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#enabled\">enabled</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#deftype_lo\">deftype_lo</a> = (<a class=\"id\" href=\"#deftype_lo\">deftype_lo</a> &amp; ~0xcff) | <a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#def_type\">def_type</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     (<a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#enabled\">enabled</a> << 10);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#change_mask\">change_mask</a> |= <a class=\"id\" href=\"#MTRR_CHANGE_MASK_DEFTYPE\">MTRR_CHANGE_MASK_DEFTYPE</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#change_mask\">change_mask</a>;", 
"}", 
"", 
"", 
"static unsigned long <a class=\"id\" href=\"#cr4\">cr4</a>;", 
"static <a class=\"id\" href=\"#DEFINE_RAW_SPINLOCK\">DEFINE_RAW_SPINLOCK</a>(<a class=\"id\" href=\"#set_atomicity_lock\">set_atomicity_lock</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Since we are disabling the cache don't allow any interrupts,</span>", 
"<span class=\"comment\"> * they would run extremely slow and would only increase the pain.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The caller must ensure that local interrupts are disabled and</span>", 
"<span class=\"comment\"> * are reenabled after post_set() has been called.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#prepare_set\">prepare_set</a>(void) <a class=\"id\" href=\"#__acquires\">__acquires</a>(<a class=\"id\" href=\"#set_atomicity_lock\">set_atomicity_lock</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#cr0\">cr0</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Note that this is not ideal</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * since the cache is only flushed/disabled for this CPU while the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * MTRRs are changed, but changing this requires more invasive</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * changes to the way the kernel boots</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock\">raw_spin_lock</a>(&amp;<a class=\"id\" href=\"#set_atomicity_lock\">set_atomicity_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Enter the no-fill (CD=1, NW=0) cache mode and flush caches. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cr0\">cr0</a> = <a class=\"id\" href=\"#read_cr0\">read_cr0</a>() | <a class=\"id\" href=\"#X86_CR0_CD\">X86_CR0_CD</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_cr0\">write_cr0</a>(<a class=\"id\" href=\"#cr0\">cr0</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wbinvd\">wbinvd</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Save value of CR4 and clear Page Global Enable (bit 7) */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_has_pge\">cpu_has_pge</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cr4\">cr4</a> = <a class=\"id\" href=\"#read_cr4\">read_cr4</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_cr4\">write_cr4</a>(<a class=\"id\" href=\"#cr4\">cr4</a> &amp; ~<a class=\"id\" href=\"#X86_CR4_PGE\">X86_CR4_PGE</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Flush all TLBs via a mov %cr3, %reg; mov %reg, %cr3 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__flush_tlb\">__flush_tlb</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Save MTRR state */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#MSR_MTRRdefType\">MSR_MTRRdefType</a>, <a class=\"id\" href=\"#deftype_lo\">deftype_lo</a>, <a class=\"id\" href=\"#deftype_hi\">deftype_hi</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Disable MTRRs, and set the default type to uncached */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mtrr_wrmsr\">mtrr_wrmsr</a>(<a class=\"id\" href=\"#MSR_MTRRdefType\">MSR_MTRRdefType</a>, <a class=\"id\" href=\"#deftype_lo\">deftype_lo</a> &amp; ~0xcff, <a class=\"id\" href=\"#deftype_hi\">deftype_hi</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#post_set\">post_set</a>(void) <a class=\"id\" href=\"#__releases\">__releases</a>(<a class=\"id\" href=\"#set_atomicity_lock\">set_atomicity_lock</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Flush TLBs (no need to flush caches - they are disabled) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__flush_tlb\">__flush_tlb</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Intel (P6) standard MTRRs */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mtrr_wrmsr\">mtrr_wrmsr</a>(<a class=\"id\" href=\"#MSR_MTRRdefType\">MSR_MTRRdefType</a>, <a class=\"id\" href=\"#deftype_lo\">deftype_lo</a>, <a class=\"id\" href=\"#deftype_hi\">deftype_hi</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Enable caches */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_cr0\">write_cr0</a>(<a class=\"id\" href=\"#read_cr0\">read_cr0</a>() &amp; 0xbfffffff);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Restore value of CR4 */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_has_pge\">cpu_has_pge</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_cr4\">write_cr4</a>(<a class=\"id\" href=\"#cr4\">cr4</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock\">raw_spin_unlock</a>(&amp;<a class=\"id\" href=\"#set_atomicity_lock\">set_atomicity_lock</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#generic_set_all\">generic_set_all</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#mask\">mask</a>, <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_save\">local_irq_save</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#prepare_set\">prepare_set</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Actually set the state */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#set_mtrr_state\">set_mtrr_state</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* also set PAT */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pat_init\">pat_init</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#post_set\">post_set</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_restore\">local_irq_restore</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Use the atomic bitops to update the global mask */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#count\">count</a> = 0; <a class=\"id\" href=\"#count\">count</a> &lt; sizeof <a class=\"id\" href=\"#mask\">mask</a> * 8; ++<a class=\"id\" href=\"#count\">count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mask\">mask</a> &amp; 0x01)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#count\">count</a>, &amp;<a class=\"id\" href=\"#smp_changes_mask\">smp_changes_mask</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> >>= 1;", 
"<span class=\"ts\"/>}", 
"", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * generic_set_mtrr - set variable MTRR register on the local CPU.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @reg: The register to set.</span>", 
"<span class=\"comment\"> * @base: The base address of the region.</span>", 
"<span class=\"comment\"> * @size: The size of the region. If this is 0 the region is disabled.</span>", 
"<span class=\"comment\"> * @type: The type of the region.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns nothing.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#generic_set_mtrr\">generic_set_mtrr</a>(unsigned int <a class=\"id\" href=\"#reg\">reg</a>, unsigned long <a class=\"id\" href=\"#base\">base</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned long <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#mtrr_type\">mtrr_type</a> <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mtrr_var_range\">mtrr_var_range</a> *<a class=\"id\" href=\"#vr\">vr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vr\">vr</a> = &amp;<a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#var_ranges\">var_ranges</a>[<a class=\"id\" href=\"#reg\">reg</a>];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_save\">local_irq_save</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#prepare_set\">prepare_set</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The invalid bit is kept in the mask, so we simply</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * clear the relevant mask register to disable a range.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mtrr_wrmsr\">mtrr_wrmsr</a>(<a class=\"id\" href=\"#MTRRphysMask_MSR\">MTRRphysMask_MSR</a>(<a class=\"id\" href=\"#reg\">reg</a>), 0, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#vr\">vr</a>, 0, sizeof(struct <a class=\"id\" href=\"#mtrr_var_range\">mtrr_var_range</a>));", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vr\">vr</a>-><a class=\"id\" href=\"#base_lo\">base_lo</a> = <a class=\"id\" href=\"#base\">base</a> << <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a> | <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vr\">vr</a>-><a class=\"id\" href=\"#base_hi\">base_hi</a> = (<a class=\"id\" href=\"#base\">base</a> &amp; <a class=\"id\" href=\"#size_and_mask\">size_and_mask</a>) >> (32 - <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vr\">vr</a>-><a class=\"id\" href=\"#mask_lo\">mask_lo</a> = -<a class=\"id\" href=\"#size\">size</a> << <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a> | 0x800;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vr\">vr</a>-><a class=\"id\" href=\"#mask_hi\">mask_hi</a> = (-<a class=\"id\" href=\"#size\">size</a> &amp; <a class=\"id\" href=\"#size_and_mask\">size_and_mask</a>) >> (32 - <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mtrr_wrmsr\">mtrr_wrmsr</a>(<a class=\"id\" href=\"#MTRRphysBase_MSR\">MTRRphysBase_MSR</a>(<a class=\"id\" href=\"#reg\">reg</a>), <a class=\"id\" href=\"#vr\">vr</a>-><a class=\"id\" href=\"#base_lo\">base_lo</a>, <a class=\"id\" href=\"#vr\">vr</a>-><a class=\"id\" href=\"#base_hi\">base_hi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mtrr_wrmsr\">mtrr_wrmsr</a>(<a class=\"id\" href=\"#MTRRphysMask_MSR\">MTRRphysMask_MSR</a>(<a class=\"id\" href=\"#reg\">reg</a>), <a class=\"id\" href=\"#vr\">vr</a>-><a class=\"id\" href=\"#mask_lo\">mask_lo</a>, <a class=\"id\" href=\"#vr\">vr</a>-><a class=\"id\" href=\"#mask_hi\">mask_hi</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#post_set\">post_set</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_restore\">local_irq_restore</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#generic_validate_add_page\">generic_validate_add_page</a>(unsigned long <a class=\"id\" href=\"#base\">base</a>, unsigned long <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      unsigned int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#lbase\">lbase</a>, <a class=\"id\" href=\"#last\">last</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * For Intel PPro stepping &lt;= 7</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * must be 4 MiB aligned and not touch 0x70000000 -&gt; 0x7003FFFF</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_cpu\">is_cpu</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>) && <a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86\">x86</a> == 6 &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86_model\">x86_model</a> == 1 &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86_mask\">x86_mask</a> <= 7) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#base\">base</a> &amp; ((1 << (22 - <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>)) - 1)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_warning\">pr_warning</a>(\"mtrr: base(0x%lx000) is not 4 MiB aligned\\n\", <a class=\"id\" href=\"#base\">base</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#base\">base</a> + <a class=\"id\" href=\"#size\">size</a> &lt; 0x70000 || <a class=\"id\" href=\"#base\">base</a> &gt; 0x7003F) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#MTRR_TYPE_WRCOMB\">MTRR_TYPE_WRCOMB</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>     || <a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#MTRR_TYPE_WRBACK\">MTRR_TYPE_WRBACK</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_warning\">pr_warning</a>(\"mtrr: writable mtrr between 0x70000000 and 0x7003FFFF may hang the CPU.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Check upper bits of base and last are equal and lower bits are 0</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * for base and 1 for last</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#base\">base</a> + <a class=\"id\" href=\"#size\">size</a> - 1;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#lbase\">lbase</a> = <a class=\"id\" href=\"#base\">base</a>; !(<a class=\"id\" href=\"#lbase\">lbase</a> &amp; 1) && (<a class=\"id\" href=\"#last\">last</a> &amp; 1);", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#lbase\">lbase</a> = <a class=\"id\" href=\"#lbase\">lbase</a> >> 1, <a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#last\">last</a> >> 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lbase\">lbase</a> != <a class=\"id\" href=\"#last\">last</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_warning\">pr_warning</a>(\"mtrr: base(0x%lx000) is not aligned on a size(0x%lx000) boundary\\n\", <a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#generic_have_wrcomb\">generic_have_wrcomb</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#config\">config</a>, <a class=\"id\" href=\"#dummy\">dummy</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#MSR_MTRRcap\">MSR_MTRRcap</a>, <a class=\"id\" href=\"#config\">config</a>, <a class=\"id\" href=\"#dummy\">dummy</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#config\">config</a> &amp; (1 << 10);", 
"}", 
"", 
"int <a class=\"id\" href=\"#positive_have_wrcomb\">positive_have_wrcomb</a>(void)", 
"{", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Generic structure...</span>", 
"<span class=\"comment\"> */</span>", 
"const struct <a class=\"id\" href=\"#mtrr_ops\">mtrr_ops</a> <a class=\"id\" href=\"#generic_mtrr_ops\">generic_mtrr_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#use_intel_if\">use_intel_if</a><span class=\"ts\"/><span class=\"ts\"/>= 1,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_all\">set_all</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_set_all\">generic_set_all</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#get\">get</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_get_mtrr\">generic_get_mtrr</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#get_free_region\">get_free_region</a><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_get_free_region\">generic_get_free_region</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set\">set</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_set_mtrr\">generic_set_mtrr</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#validate_add_page\">validate_add_page</a><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_validate_add_page\">generic_validate_add_page</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#have_wrcomb\">have_wrcomb</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_have_wrcomb\">generic_have_wrcomb</a>,", 
"};", 
];
xr_frag_insert('l/7f/b3806ad16c7b5c67ab3f462c1665d7cd120858.xr', __xr_tmp);
