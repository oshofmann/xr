var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Supplementary group IDs</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cred\">cred</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#security\">security</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#syscalls\">syscalls</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* init to 2 - one for init_task, one to ensure it is never freed */</span>", 
"struct <a class=\"id\" href=\"#group_info\">group_info</a> <a class=\"id\" href=\"#init_groups\">init_groups</a> = { .<a class=\"id\" href=\"#usage\">usage</a> = <a class=\"id\" href=\"#ATOMIC_INIT\">ATOMIC_INIT</a>(2) };", 
"", 
"struct <a class=\"id\" href=\"#group_info\">group_info</a> *<a class=\"id\" href=\"#groups_alloc\">groups_alloc</a>(int <a class=\"id\" href=\"#gidsetsize\">gidsetsize</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#group_info\">group_info</a> *<a class=\"id\" href=\"#group_info\">group_info</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nblocks\">nblocks</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nblocks\">nblocks</a> = (<a class=\"id\" href=\"#gidsetsize\">gidsetsize</a> + <a class=\"id\" href=\"#NGROUPS_PER_BLOCK\">NGROUPS_PER_BLOCK</a> - 1) / <a class=\"id\" href=\"#NGROUPS_PER_BLOCK\">NGROUPS_PER_BLOCK</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Make sure we always allocate at least one indirect block pointer */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nblocks\">nblocks</a> = <a class=\"id\" href=\"#nblocks\">nblocks</a> ? : 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#group_info\">group_info</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#group_info\">group_info</a>) + <a class=\"id\" href=\"#nblocks\">nblocks</a>*sizeof(<a class=\"id\" href=\"#gid_t\">gid_t</a> *), <a class=\"id\" href=\"#GFP_USER\">GFP_USER</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#group_info\">group_info</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#group_info\">group_info</a>-><a class=\"id\" href=\"#ngroups\">ngroups</a> = <a class=\"id\" href=\"#gidsetsize\">gidsetsize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#group_info\">group_info</a>-><a class=\"id\" href=\"#nblocks\">nblocks</a> = <a class=\"id\" href=\"#nblocks\">nblocks</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#group_info\">group_info</a>-><a class=\"id\" href=\"#usage\">usage</a>, 1);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#gidsetsize\">gidsetsize</a> <= <a class=\"id\" href=\"#NGROUPS_SMALL\">NGROUPS_SMALL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#group_info\">group_info</a>-><a class=\"id\" href=\"#blocks\">blocks</a>[0] = <a class=\"id\" href=\"#group_info\">group_info</a>-><a class=\"id\" href=\"#small_block\">small_block</a>;", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nblocks\">nblocks</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gid_t\">gid_t</a> *<a class=\"id\" href=\"#b\">b</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#b\">b</a> = (void *)<a class=\"id\" href=\"#__get_free_page\">__get_free_page</a>(<a class=\"id\" href=\"#GFP_USER\">GFP_USER</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#b\">b</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_undo_partial_alloc\">out_undo_partial_alloc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#group_info\">group_info</a>-><a class=\"id\" href=\"#blocks\">blocks</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#b\">b</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#group_info\">group_info</a>;", 
"", 
"<a class=\"id\" href=\"#out_undo_partial_alloc\">out_undo_partial_alloc</a>:", 
"<span class=\"ts\"/>while (--<a class=\"id\" href=\"#i\">i</a> >= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_page\">free_page</a>((unsigned long)<a class=\"id\" href=\"#group_info\">group_info</a>-><a class=\"id\" href=\"#blocks\">blocks</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#group_info\">group_info</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#groups_alloc\">groups_alloc</a>);", 
"", 
"void <a class=\"id\" href=\"#groups_free\">groups_free</a>(struct <a class=\"id\" href=\"#group_info\">group_info</a> *<a class=\"id\" href=\"#group_info\">group_info</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#group_info\">group_info</a>-><a class=\"id\" href=\"#blocks\">blocks</a>[0] != <a class=\"id\" href=\"#group_info\">group_info</a>-><a class=\"id\" href=\"#small_block\">small_block</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#group_info\">group_info</a>-><a class=\"id\" href=\"#nblocks\">nblocks</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_page\">free_page</a>((unsigned long)<a class=\"id\" href=\"#group_info\">group_info</a>-><a class=\"id\" href=\"#blocks\">blocks</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#group_info\">group_info</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#groups_free\">groups_free</a>);", 
"", 
"<span class=\"comment\">/* export the group_info to a user-space array */</span>", 
"static int <a class=\"id\" href=\"#groups_to_user\">groups_to_user</a>(<a class=\"id\" href=\"#gid_t\">gid_t</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#grouplist\">grouplist</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const struct <a class=\"id\" href=\"#group_info\">group_info</a> *<a class=\"id\" href=\"#group_info\">group_info</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#group_info\">group_info</a>-><a class=\"id\" href=\"#ngroups\">ngroups</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#group_info\">group_info</a>-><a class=\"id\" href=\"#nblocks\">nblocks</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cp_count\">cp_count</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#NGROUPS_PER_BLOCK\">NGROUPS_PER_BLOCK</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#cp_count\">cp_count</a> * sizeof(*<a class=\"id\" href=\"#grouplist\">grouplist</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#grouplist\">grouplist</a>, <a class=\"id\" href=\"#group_info\">group_info</a>-><a class=\"id\" href=\"#blocks\">blocks</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#len\">len</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#grouplist\">grouplist</a> += <a class=\"id\" href=\"#NGROUPS_PER_BLOCK\">NGROUPS_PER_BLOCK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> -= <a class=\"id\" href=\"#cp_count\">cp_count</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* fill a group_info from a user-space array - it must be allocated already */</span>", 
"static int <a class=\"id\" href=\"#groups_from_user\">groups_from_user</a>(struct <a class=\"id\" href=\"#group_info\">group_info</a> *<a class=\"id\" href=\"#group_info\">group_info</a>,", 
"    <a class=\"id\" href=\"#gid_t\">gid_t</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#grouplist\">grouplist</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#group_info\">group_info</a>-><a class=\"id\" href=\"#ngroups\">ngroups</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#group_info\">group_info</a>-><a class=\"id\" href=\"#nblocks\">nblocks</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cp_count\">cp_count</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#NGROUPS_PER_BLOCK\">NGROUPS_PER_BLOCK</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#cp_count\">cp_count</a> * sizeof(*<a class=\"id\" href=\"#grouplist\">grouplist</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#group_info\">group_info</a>-><a class=\"id\" href=\"#blocks\">blocks</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#grouplist\">grouplist</a>, <a class=\"id\" href=\"#len\">len</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#grouplist\">grouplist</a> += <a class=\"id\" href=\"#NGROUPS_PER_BLOCK\">NGROUPS_PER_BLOCK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> -= <a class=\"id\" href=\"#cp_count\">cp_count</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* a simple Shell sort */</span>", 
"static void <a class=\"id\" href=\"#groups_sort\">groups_sort</a>(struct <a class=\"id\" href=\"#group_info\">group_info</a> *<a class=\"id\" href=\"#group_info\">group_info</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#max\">max</a>, <a class=\"id\" href=\"#stride\">stride</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#gidsetsize\">gidsetsize</a> = <a class=\"id\" href=\"#group_info\">group_info</a>-><a class=\"id\" href=\"#ngroups\">ngroups</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#stride\">stride</a> = 1; <a class=\"id\" href=\"#stride\">stride</a> &lt; <a class=\"id\" href=\"#gidsetsize\">gidsetsize</a>; <a class=\"id\" href=\"#stride\">stride</a> = 3 * <a class=\"id\" href=\"#stride\">stride</a> + 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>; <span class=\"comment\">/* nothing */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stride\">stride</a> /= 3;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#stride\">stride</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max\">max</a> = <a class=\"id\" href=\"#gidsetsize\">gidsetsize</a> - <a class=\"id\" href=\"#stride\">stride</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#base\">base</a> = 0; <a class=\"id\" href=\"#base\">base</a> &lt; <a class=\"id\" href=\"#max\">max</a>; <a class=\"id\" href=\"#base\">base</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#left\">left</a> = <a class=\"id\" href=\"#base\">base</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#right\">right</a> = <a class=\"id\" href=\"#left\">left</a> + <a class=\"id\" href=\"#stride\">stride</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gid_t\">gid_t</a> <a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#GROUP_AT\">GROUP_AT</a>(<a class=\"id\" href=\"#group_info\">group_info</a>, <a class=\"id\" href=\"#right\">right</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#left\">left</a> >= 0 && <a class=\"id\" href=\"#GROUP_AT\">GROUP_AT</a>(<a class=\"id\" href=\"#group_info\">group_info</a>, <a class=\"id\" href=\"#left\">left</a>) &gt; <a class=\"id\" href=\"#tmp\">tmp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#GROUP_AT\">GROUP_AT</a>(<a class=\"id\" href=\"#group_info\">group_info</a>, <a class=\"id\" href=\"#right\">right</a>) =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#GROUP_AT\">GROUP_AT</a>(<a class=\"id\" href=\"#group_info\">group_info</a>, <a class=\"id\" href=\"#left\">left</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#right\">right</a> = <a class=\"id\" href=\"#left\">left</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#left\">left</a> -= <a class=\"id\" href=\"#stride\">stride</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#GROUP_AT\">GROUP_AT</a>(<a class=\"id\" href=\"#group_info\">group_info</a>, <a class=\"id\" href=\"#right\">right</a>) = <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stride\">stride</a> /= 3;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/* a simple bsearch */</span>", 
"int <a class=\"id\" href=\"#groups_search\">groups_search</a>(const struct <a class=\"id\" href=\"#group_info\">group_info</a> *<a class=\"id\" href=\"#group_info\">group_info</a>, <a class=\"id\" href=\"#gid_t\">gid_t</a> <a class=\"id\" href=\"#grp\">grp</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#left\">left</a>, <a class=\"id\" href=\"#right\">right</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#group_info\">group_info</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#left\">left</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#right\">right</a> = <a class=\"id\" href=\"#group_info\">group_info</a>-><a class=\"id\" href=\"#ngroups\">ngroups</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#left\">left</a> &lt; <a class=\"id\" href=\"#right\">right</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#mid\">mid</a> = (<a class=\"id\" href=\"#left\">left</a>+<a class=\"id\" href=\"#right\">right</a>)/2;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#grp\">grp</a> &gt; <a class=\"id\" href=\"#GROUP_AT\">GROUP_AT</a>(<a class=\"id\" href=\"#group_info\">group_info</a>, <a class=\"id\" href=\"#mid\">mid</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#left\">left</a> = <a class=\"id\" href=\"#mid\">mid</a> + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#grp\">grp</a> &lt; <a class=\"id\" href=\"#GROUP_AT\">GROUP_AT</a>(<a class=\"id\" href=\"#group_info\">group_info</a>, <a class=\"id\" href=\"#mid\">mid</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#right\">right</a> = <a class=\"id\" href=\"#mid\">mid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * set_groups - Change a group subscription in a set of credentials</span>", 
"<span class=\"comment\"> * @new: The newly prepared set of credentials to alter</span>", 
"<span class=\"comment\"> * @group_info: The group list to install</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Validate a group subscription and, if valid, insert it into a set</span>", 
"<span class=\"comment\"> * of credentials.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#set_groups\">set_groups</a>(struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#new\">new</a>, struct <a class=\"id\" href=\"#group_info\">group_info</a> *<a class=\"id\" href=\"#group_info\">group_info</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_group_info\">put_group_info</a>(<a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#group_info\">group_info</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#groups_sort\">groups_sort</a>(<a class=\"id\" href=\"#group_info\">group_info</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_group_info\">get_group_info</a>(<a class=\"id\" href=\"#group_info\">group_info</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#group_info\">group_info</a> = <a class=\"id\" href=\"#group_info\">group_info</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#set_groups\">set_groups</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * set_current_groups - Change current's group subscription</span>", 
"<span class=\"comment\"> * @group_info: The group list to impose</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Validate a group subscription and, if valid, impose it upon current's task</span>", 
"<span class=\"comment\"> * security record.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#set_current_groups\">set_current_groups</a>(struct <a class=\"id\" href=\"#group_info\">group_info</a> *<a class=\"id\" href=\"#group_info\">group_info</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#new\">new</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a> = <a class=\"id\" href=\"#prepare_creds\">prepare_creds</a>();", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#new\">new</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#set_groups\">set_groups</a>(<a class=\"id\" href=\"#new\">new</a>, <a class=\"id\" href=\"#group_info\">group_info</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#abort_creds\">abort_creds</a>(<a class=\"id\" href=\"#new\">new</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#commit_creds\">commit_creds</a>(<a class=\"id\" href=\"#new\">new</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#set_current_groups\">set_current_groups</a>);", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE2\">SYSCALL_DEFINE2</a>(<a class=\"id\" href=\"#getgroups\">getgroups</a>, int, <a class=\"id\" href=\"#gidsetsize\">gidsetsize</a>, <a class=\"id\" href=\"#gid_t\">gid_t</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#grouplist\">grouplist</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#cred\">cred</a> = <a class=\"id\" href=\"#current_cred\">current_cred</a>();", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#gidsetsize\">gidsetsize</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* no need to grab task_lock here; it cannot change */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#group_info\">group_info</a>-><a class=\"id\" href=\"#ngroups\">ngroups</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#gidsetsize\">gidsetsize</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> &gt; <a class=\"id\" href=\"#gidsetsize\">gidsetsize</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#groups_to_user\">groups_to_user</a>(<a class=\"id\" href=\"#grouplist\">grouplist</a>, <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#group_info\">group_info</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#i\">i</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>SMP: Our groups are copy-on-write. We can set them safely</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>without another task interfering.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE2\">SYSCALL_DEFINE2</a>(<a class=\"id\" href=\"#setgroups\">setgroups</a>, int, <a class=\"id\" href=\"#gidsetsize\">gidsetsize</a>, <a class=\"id\" href=\"#gid_t\">gid_t</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#grouplist\">grouplist</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#group_info\">group_info</a> *<a class=\"id\" href=\"#group_info\">group_info</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SETGID\">CAP_SETGID</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/>if ((unsigned)<a class=\"id\" href=\"#gidsetsize\">gidsetsize</a> &gt; <a class=\"id\" href=\"#NGROUPS_MAX\">NGROUPS_MAX</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#group_info\">group_info</a> = <a class=\"id\" href=\"#groups_alloc\">groups_alloc</a>(<a class=\"id\" href=\"#gidsetsize\">gidsetsize</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#group_info\">group_info</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#groups_from_user\">groups_from_user</a>(<a class=\"id\" href=\"#group_info\">group_info</a>, <a class=\"id\" href=\"#grouplist\">grouplist</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_group_info\">put_group_info</a>(<a class=\"id\" href=\"#group_info\">group_info</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#set_current_groups\">set_current_groups</a>(<a class=\"id\" href=\"#group_info\">group_info</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_group_info\">put_group_info</a>(<a class=\"id\" href=\"#group_info\">group_info</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Check whether we're fsgid/egid or in the supplemental group..</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#in_group_p\">in_group_p</a>(<a class=\"id\" href=\"#gid_t\">gid_t</a> <a class=\"id\" href=\"#grp\">grp</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#cred\">cred</a> = <a class=\"id\" href=\"#current_cred\">current_cred</a>();", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a> = 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#grp\">grp</a> != <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#fsgid\">fsgid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#groups_search\">groups_search</a>(<a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#group_info\">group_info</a>, <a class=\"id\" href=\"#grp\">grp</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#in_group_p\">in_group_p</a>);", 
"", 
"int <a class=\"id\" href=\"#in_egroup_p\">in_egroup_p</a>(<a class=\"id\" href=\"#gid_t\">gid_t</a> <a class=\"id\" href=\"#grp\">grp</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#cred\">cred</a> = <a class=\"id\" href=\"#current_cred\">current_cred</a>();", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a> = 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#grp\">grp</a> != <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#egid\">egid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#groups_search\">groups_search</a>(<a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#group_info\">group_info</a>, <a class=\"id\" href=\"#grp\">grp</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#in_egroup_p\">in_egroup_p</a>);", 
];
xr_frag_insert('l/7f/da536dc0d05ba2e99a9ac8d35d52791e41cc71.xr', __xr_tmp);
