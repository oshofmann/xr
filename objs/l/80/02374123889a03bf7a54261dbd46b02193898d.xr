var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>pci.h</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>PCI defines and function prototypes</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Copyright 1994, Drew Eckhardt</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Copyright 1997--1999 Martin Mares &lt;mj@ucw.cz&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>For more information, please consult the following manuals (look at</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>http://www.pcisig.com/ for how to get them):</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>PCI BIOS Specification</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>PCI Local Bus Specification</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>PCI to PCI Bridge Specification</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>PCI System Design Guide</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#LINUX_PCI_H\">LINUX_PCI_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#LINUX_PCI_H\">LINUX_PCI_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci_regs\">pci_regs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;<span class=\"ts\"/><span class=\"comment\">/* The pci register defines */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The PCI interface treats multi-function devices as independent</span>", 
"<span class=\"comment\"> * devices.  The slot/function address of each device is encoded</span>", 
"<span class=\"comment\"> * in a single byte as follows:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>7:3 = slot</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>2:0 = function</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCI_DEVFN\">PCI_DEVFN</a>(<a class=\"id\" href=\"#slot\">slot</a>, <a class=\"id\" href=\"#func\">func</a>)<span class=\"ts\"/>((((<a class=\"id\" href=\"#slot\">slot</a>) &amp; 0x1f) << 3) | ((<a class=\"id\" href=\"#func\">func</a>) &amp; 0x07))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCI_SLOT\">PCI_SLOT</a>(<a class=\"id\" href=\"#devfn\">devfn</a>)<span class=\"ts\"/><span class=\"ts\"/>(((<a class=\"id\" href=\"#devfn\">devfn</a>) >> 3) &amp; 0x1f)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCI_FUNC\">PCI_FUNC</a>(<a class=\"id\" href=\"#devfn\">devfn</a>)<span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#devfn\">devfn</a>) &amp; 0x07)", 
"", 
"<span class=\"comment\">/* Ioctls for /proc/bus/pci/X/Y nodes. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCIIOC_BASE\">PCIIOC_BASE</a><span class=\"ts\"/><span class=\"ts\"/>('P' << 24 | 'C' << 16 | 'I' << 8)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCIIOC_CONTROLLER\">PCIIOC_CONTROLLER</a><span class=\"ts\"/>(<a class=\"id\" href=\"#PCIIOC_BASE\">PCIIOC_BASE</a> | 0x00)<span class=\"ts\"/><span class=\"comment\">/* Get controller for PCI device. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCIIOC_MMAP_IS_IO\">PCIIOC_MMAP_IS_IO</a><span class=\"ts\"/>(<a class=\"id\" href=\"#PCIIOC_BASE\">PCIIOC_BASE</a> | 0x01)<span class=\"ts\"/><span class=\"comment\">/* Set mmap state to I/O space. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCIIOC_MMAP_IS_MEM\">PCIIOC_MMAP_IS_MEM</a><span class=\"ts\"/>(<a class=\"id\" href=\"#PCIIOC_BASE\">PCIIOC_BASE</a> | 0x02)<span class=\"ts\"/><span class=\"comment\">/* Set mmap state to MEM space. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCIIOC_WRITE_COMBINE\">PCIIOC_WRITE_COMBINE</a><span class=\"ts\"/>(<a class=\"id\" href=\"#PCIIOC_BASE\">PCIIOC_BASE</a> | 0x03)<span class=\"ts\"/><span class=\"comment\">/* Enable/disable write-combining. */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mod_devicetable\">mod_devicetable</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ioport\">ioport</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#compiler\">compiler</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kobject\">kobject</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#atomic\">atomic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#device\">device</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#io\">io</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#irqreturn\">irqreturn</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* Include the ID list */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci_ids\">pci_ids</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* pci_slot represents a physical slot */</span>", 
"struct <a class=\"id\" href=\"#pci_slot\">pci_slot</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* The bus this slot is on */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#list\">list</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* node in list of slots on this bus */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hotplug_slot\">hotplug_slot</a> *<a class=\"id\" href=\"#hotplug\">hotplug</a>;<span class=\"ts\"/><span class=\"comment\">/* Hotplug info (migrate over time) */</span>", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#number\">number</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* PCI_SLOT(pci_dev-&gt;devfn) */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kobject\">kobject</a> <a class=\"id\" href=\"#kobj\">kobj</a>;", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> const char *<a class=\"id\" href=\"#pci_slot_name\">pci_slot_name</a>(const struct <a class=\"id\" href=\"#pci_slot\">pci_slot</a> *<a class=\"id\" href=\"#slot\">slot</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#kobject_name\">kobject_name</a>(&amp;<a class=\"id\" href=\"#slot\">slot</a>-><a class=\"id\" href=\"#kobj\">kobj</a>);", 
"}", 
"", 
"<span class=\"comment\">/* File state for mmap()s on /proc/bus/pci/X/Y */</span>", 
"enum <a class=\"id\" href=\"#pci_mmap_state\">pci_mmap_state</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_mmap_io\">pci_mmap_io</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_mmap_mem\">pci_mmap_mem</a>", 
"};", 
"", 
"<span class=\"comment\">/* This defines the direction arg to the DMA mapping routines. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCI_DMA_BIDIRECTIONAL\">PCI_DMA_BIDIRECTIONAL</a><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCI_DMA_TODEVICE\">PCI_DMA_TODEVICE</a><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCI_DMA_FROMDEVICE\">PCI_DMA_FROMDEVICE</a><span class=\"ts\"/>2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCI_DMA_NONE\">PCI_DMA_NONE</a><span class=\"ts\"/><span class=\"ts\"/>3", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  For PCI devices, the region numbers are assigned this way:</span>", 
"<span class=\"comment\"> */</span>", 
"enum {", 
"<span class=\"ts\"/><span class=\"comment\">/* #0-5: standard PCI resources */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_STD_RESOURCES\">PCI_STD_RESOURCES</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_STD_RESOURCE_END\">PCI_STD_RESOURCE_END</a> = 5,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* #6: expansion ROM resource */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_ROM_RESOURCE\">PCI_ROM_RESOURCE</a>,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* device specific resources */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PCI_IOV\">CONFIG_PCI_IOV</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_IOV_RESOURCES\">PCI_IOV_RESOURCES</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_IOV_RESOURCE_END\">PCI_IOV_RESOURCE_END</a> = <a class=\"id\" href=\"#PCI_IOV_RESOURCES\">PCI_IOV_RESOURCES</a> + <a class=\"id\" href=\"#PCI_SRIOV_NUM_BARS\">PCI_SRIOV_NUM_BARS</a> - 1,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* resources assigned to buses behind the bridge */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCI_BRIDGE_RESOURCE_NUM\">PCI_BRIDGE_RESOURCE_NUM</a> 4", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_BRIDGE_RESOURCES\">PCI_BRIDGE_RESOURCES</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_BRIDGE_RESOURCE_END\">PCI_BRIDGE_RESOURCE_END</a> = <a class=\"id\" href=\"#PCI_BRIDGE_RESOURCES\">PCI_BRIDGE_RESOURCES</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#PCI_BRIDGE_RESOURCE_NUM\">PCI_BRIDGE_RESOURCE_NUM</a> - 1,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* total resources associated with a PCI device */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_NUM_RESOURCES\">PCI_NUM_RESOURCES</a>,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* preserve this for compatibility */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DEVICE_COUNT_RESOURCE\">DEVICE_COUNT_RESOURCE</a>", 
"};", 
"", 
"typedef int <a class=\"id\" href=\"#__bitwise\">__bitwise</a> <a class=\"id\" href=\"#pci_power_t\">pci_power_t</a>;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCI_D0\">PCI_D0</a><span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#pci_power_t\">pci_power_t</a> <a class=\"id\" href=\"#__force\">__force</a>) 0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCI_D1\">PCI_D1</a><span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#pci_power_t\">pci_power_t</a> <a class=\"id\" href=\"#__force\">__force</a>) 1)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCI_D2\">PCI_D2</a><span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#pci_power_t\">pci_power_t</a> <a class=\"id\" href=\"#__force\">__force</a>) 2)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCI_D3hot\">PCI_D3hot</a><span class=\"ts\"/>((<a class=\"id\" href=\"#pci_power_t\">pci_power_t</a> <a class=\"id\" href=\"#__force\">__force</a>) 3)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCI_D3cold\">PCI_D3cold</a><span class=\"ts\"/>((<a class=\"id\" href=\"#pci_power_t\">pci_power_t</a> <a class=\"id\" href=\"#__force\">__force</a>) 4)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCI_UNKNOWN\">PCI_UNKNOWN</a><span class=\"ts\"/>((<a class=\"id\" href=\"#pci_power_t\">pci_power_t</a> <a class=\"id\" href=\"#__force\">__force</a>) 5)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCI_POWER_ERROR\">PCI_POWER_ERROR</a><span class=\"ts\"/>((<a class=\"id\" href=\"#pci_power_t\">pci_power_t</a> <a class=\"id\" href=\"#__force\">__force</a>) -1)", 
"", 
"<span class=\"comment\">/* Remember to update this when the list above changes! */</span>", 
"extern const char *<a class=\"id\" href=\"#pci_power_names\">pci_power_names</a>[];", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> const char *<a class=\"id\" href=\"#pci_power_name\">pci_power_name</a>(<a class=\"id\" href=\"#pci_power_t\">pci_power_t</a> <a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pci_power_names\">pci_power_names</a>[1 + (int) <a class=\"id\" href=\"#state\">state</a>];", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCI_PM_D2_DELAY\">PCI_PM_D2_DELAY</a><span class=\"ts\"/>200", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCI_PM_D3_WAIT\">PCI_PM_D3_WAIT</a><span class=\"ts\"/>10", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCI_PM_BUS_WAIT\">PCI_PM_BUS_WAIT</a><span class=\"ts\"/>50", 
"", 
"<span class=\"comment\">/** The pci_channel state describes connectivity between the CPU and</span>", 
"<span class=\"comment\"> *  the pci device.  If some PCI bus between here and the pci device</span>", 
"<span class=\"comment\"> *  has crashed or locked up, this info is reflected here.</span>", 
"<span class=\"comment\"> */</span>", 
"typedef unsigned int <a class=\"id\" href=\"#__bitwise\">__bitwise</a> <a class=\"id\" href=\"#pci_channel_state_t\">pci_channel_state_t</a>;", 
"", 
"enum <a class=\"id\" href=\"#pci_channel_state\">pci_channel_state</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* I/O channel is in normal state */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_channel_io_normal\">pci_channel_io_normal</a> = (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#pci_channel_state_t\">pci_channel_state_t</a>) 1,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* I/O to channel is blocked */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_channel_io_frozen\">pci_channel_io_frozen</a> = (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#pci_channel_state_t\">pci_channel_state_t</a>) 2,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* PCI card is dead */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_channel_io_perm_failure\">pci_channel_io_perm_failure</a> = (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#pci_channel_state_t\">pci_channel_state_t</a>) 3,", 
"};", 
"", 
"typedef unsigned int <a class=\"id\" href=\"#__bitwise\">__bitwise</a> <a class=\"id\" href=\"#pcie_reset_state_t\">pcie_reset_state_t</a>;", 
"", 
"enum <a class=\"id\" href=\"#pcie_reset_state\">pcie_reset_state</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* Reset is NOT asserted (Use to deassert reset) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pcie_deassert_reset\">pcie_deassert_reset</a> = (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#pcie_reset_state_t\">pcie_reset_state_t</a>) 1,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Use #PERST to reset PCI-E device */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pcie_warm_reset\">pcie_warm_reset</a> = (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#pcie_reset_state_t\">pcie_reset_state_t</a>) 2,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Use PCI-E Hot Reset to reset device */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pcie_hot_reset\">pcie_hot_reset</a> = (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#pcie_reset_state_t\">pcie_reset_state_t</a>) 3", 
"};", 
"", 
"typedef unsigned short <a class=\"id\" href=\"#__bitwise\">__bitwise</a> <a class=\"id\" href=\"#pci_dev_flags_t\">pci_dev_flags_t</a>;", 
"enum <a class=\"id\" href=\"#pci_dev_flags\">pci_dev_flags</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* INTX_DISABLE in PCI_COMMAND register disables MSI</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * generation too.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEV_FLAGS_MSI_INTX_DISABLE_BUG\">PCI_DEV_FLAGS_MSI_INTX_DISABLE_BUG</a> = (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#pci_dev_flags_t\">pci_dev_flags_t</a>) 1,", 
"<span class=\"ts\"/><span class=\"comment\">/* Device configuration is irrevocably lost if disabled into D3 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DEV_FLAGS_NO_D3\">PCI_DEV_FLAGS_NO_D3</a> = (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#pci_dev_flags_t\">pci_dev_flags_t</a>) 2,", 
"};", 
"", 
"enum <a class=\"id\" href=\"#pci_irq_reroute_variant\">pci_irq_reroute_variant</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INTEL_IRQ_REROUTE_VARIANT\">INTEL_IRQ_REROUTE_VARIANT</a> = 1,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MAX_IRQ_REROUTE_VARIANTS\">MAX_IRQ_REROUTE_VARIANTS</a> = 3", 
"};", 
"", 
"typedef unsigned short <a class=\"id\" href=\"#__bitwise\">__bitwise</a> <a class=\"id\" href=\"#pci_bus_flags_t\">pci_bus_flags_t</a>;", 
"enum <a class=\"id\" href=\"#pci_bus_flags\">pci_bus_flags</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_BUS_FLAGS_NO_MSI\">PCI_BUS_FLAGS_NO_MSI</a>   = (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#pci_bus_flags_t\">pci_bus_flags_t</a>) 1,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_BUS_FLAGS_NO_MMRBC\">PCI_BUS_FLAGS_NO_MMRBC</a> = (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#pci_bus_flags_t\">pci_bus_flags_t</a>) 2,", 
"};", 
"", 
"<span class=\"comment\">/* Based on the PCI Hotplug Spec, but some values are made up by us */</span>", 
"enum <a class=\"id\" href=\"#pci_bus_speed\">pci_bus_speed</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_33MHz\">PCI_SPEED_33MHz</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= 0x00,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_66MHz\">PCI_SPEED_66MHz</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= 0x01,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_66MHz_PCIX\">PCI_SPEED_66MHz_PCIX</a><span class=\"ts\"/><span class=\"ts\"/>= 0x02,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_100MHz_PCIX\">PCI_SPEED_100MHz_PCIX</a><span class=\"ts\"/><span class=\"ts\"/>= 0x03,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_133MHz_PCIX\">PCI_SPEED_133MHz_PCIX</a><span class=\"ts\"/><span class=\"ts\"/>= 0x04,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_66MHz_PCIX_ECC\">PCI_SPEED_66MHz_PCIX_ECC</a><span class=\"ts\"/>= 0x05,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_100MHz_PCIX_ECC\">PCI_SPEED_100MHz_PCIX_ECC</a><span class=\"ts\"/>= 0x06,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_133MHz_PCIX_ECC\">PCI_SPEED_133MHz_PCIX_ECC</a><span class=\"ts\"/>= 0x07,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_66MHz_PCIX_266\">PCI_SPEED_66MHz_PCIX_266</a><span class=\"ts\"/>= 0x09,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_100MHz_PCIX_266\">PCI_SPEED_100MHz_PCIX_266</a><span class=\"ts\"/>= 0x0a,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_133MHz_PCIX_266\">PCI_SPEED_133MHz_PCIX_266</a><span class=\"ts\"/>= 0x0b,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#AGP_UNKNOWN\">AGP_UNKNOWN</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= 0x0c,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#AGP_1X\">AGP_1X</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= 0x0d,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#AGP_2X\">AGP_2X</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= 0x0e,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#AGP_4X\">AGP_4X</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= 0x0f,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#AGP_8X\">AGP_8X</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= 0x10,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_66MHz_PCIX_533\">PCI_SPEED_66MHz_PCIX_533</a><span class=\"ts\"/>= 0x11,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_100MHz_PCIX_533\">PCI_SPEED_100MHz_PCIX_533</a><span class=\"ts\"/>= 0x12,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_133MHz_PCIX_533\">PCI_SPEED_133MHz_PCIX_533</a><span class=\"ts\"/>= 0x13,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCIE_SPEED_2_5GT\">PCIE_SPEED_2_5GT</a><span class=\"ts\"/><span class=\"ts\"/>= 0x14,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCIE_SPEED_5_0GT\">PCIE_SPEED_5_0GT</a><span class=\"ts\"/><span class=\"ts\"/>= 0x15,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCIE_SPEED_8_0GT\">PCIE_SPEED_8_0GT</a><span class=\"ts\"/><span class=\"ts\"/>= 0x16,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_UNKNOWN\">PCI_SPEED_UNKNOWN</a><span class=\"ts\"/><span class=\"ts\"/>= 0xff,", 
"};", 
"", 
"struct <a class=\"id\" href=\"#pci_cap_saved_state\">pci_cap_saved_state</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> <a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#cap_nr\">cap_nr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#data\">data</a>[0];", 
"};", 
"", 
"struct <a class=\"id\" href=\"#pcie_link_state\">pcie_link_state</a>;", 
"struct <a class=\"id\" href=\"#pci_vpd\">pci_vpd</a>;", 
"struct <a class=\"id\" href=\"#pci_sriov\">pci_sriov</a>;", 
"struct <a class=\"id\" href=\"#pci_ats\">pci_ats</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The pci_dev structure is used to describe PCI devices.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#bus_list\">bus_list</a>;<span class=\"ts\"/><span class=\"comment\">/* node in per-bus list */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a><span class=\"ts\"/>*<a class=\"id\" href=\"#bus\">bus</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* bus this device is on */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a><span class=\"ts\"/>*<a class=\"id\" href=\"#subordinate\">subordinate</a>;<span class=\"ts\"/><span class=\"comment\">/* bus this device bridges to */</span>", 
"", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#sysdata\">sysdata</a>;<span class=\"ts\"/><span class=\"comment\">/* hook for sys-specific extension */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proc_dir_entry\">proc_dir_entry</a> *<a class=\"id\" href=\"#procent\">procent</a>;<span class=\"ts\"/><span class=\"comment\">/* device entry in /proc/bus/pci */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_slot\">pci_slot</a><span class=\"ts\"/>*<a class=\"id\" href=\"#slot\">slot</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Physical slot this device is in */</span>", 
"", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#devfn\">devfn</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* encoded device &amp; function index */</span>", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><a class=\"id\" href=\"#vendor\">vendor</a>;", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><a class=\"id\" href=\"#device\">device</a>;", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><a class=\"id\" href=\"#subsystem_vendor\">subsystem_vendor</a>;", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><a class=\"id\" href=\"#subsystem_device\">subsystem_device</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#class\">class</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 3 bytes: (base,sub,prog-if) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#revision\">revision</a>;<span class=\"ts\"/><span class=\"comment\">/* PCI revision, low byte of class word */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hdr_type\">hdr_type</a>;<span class=\"ts\"/><span class=\"comment\">/* PCI header type (`multi' flag masked out) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcie_cap\">pcie_cap</a>;<span class=\"ts\"/><span class=\"comment\">/* PCI-E capability offset */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcie_type\">pcie_type</a>;<span class=\"ts\"/><span class=\"comment\">/* PCI-E device/port type */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rom_base_reg\">rom_base_reg</a>;<span class=\"ts\"/><span class=\"comment\">/* which config register controls the ROM */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pin\">pin</a>;  <span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* which interrupt pin this device uses */</span>", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_driver\">pci_driver</a> *<a class=\"id\" href=\"#driver\">driver</a>;<span class=\"ts\"/><span class=\"comment\">/* which driver has allocated this device */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dma_mask\">dma_mask</a>;<span class=\"ts\"/><span class=\"comment\">/* Mask of the bits of bus address this</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   device implements.  Normally this is</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   0xffffffff.  You only need to change</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   this if your device has broken DMA</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   or supports 64-bit transfers.  */</span>", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device_dma_parameters\">device_dma_parameters</a> <a class=\"id\" href=\"#dma_parms\">dma_parms</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_power_t\">pci_power_t</a>     <a class=\"id\" href=\"#current_state\">current_state</a>;  <span class=\"comment\">/* Current operating state. In ACPI-speak,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   this is D0-D3, D0 being fully functional,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   and D3 being off. */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pm_cap\">pm_cap</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* PM capability offset in the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   configuration space */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#pme_support\">pme_support</a>:5;<span class=\"ts\"/><span class=\"comment\">/* Bitmask of states from which PME#</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   can be generated */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#pme_interrupt\">pme_interrupt</a>:1;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#d1_support\">d1_support</a>:1;<span class=\"ts\"/><span class=\"comment\">/* Low power state D1 is supported */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#d2_support\">d2_support</a>:1;<span class=\"ts\"/><span class=\"comment\">/* Low power state D2 is supported */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#no_d1d2\">no_d1d2</a>:1;<span class=\"ts\"/><span class=\"comment\">/* Only allow D0 and D3 */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#mmio_always_on\">mmio_always_on</a>:1;<span class=\"ts\"/><span class=\"comment\">/* disallow turning off io/mem</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   decoding during bar sizing */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#wakeup_prepared\">wakeup_prepared</a>:1;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#d3_delay\">d3_delay</a>;<span class=\"ts\"/><span class=\"comment\">/* D3-&gt;D0 transition time in ms */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PCIEASPM\">CONFIG_PCIEASPM</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pcie_link_state\">pcie_link_state</a><span class=\"ts\"/>*<a class=\"id\" href=\"#link_state\">link_state</a>;<span class=\"ts\"/><span class=\"comment\">/* ASPM link state. */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_channel_state_t\">pci_channel_state_t</a> <a class=\"id\" href=\"#error_state\">error_state</a>;<span class=\"ts\"/><span class=\"comment\">/* current connectivity state */</span>", 
"<span class=\"ts\"/>struct<span class=\"ts\"/><a class=\"id\" href=\"#device\">device</a><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Generic device interface */</span>", 
"", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfg_size\">cfg_size</a>;<span class=\"ts\"/><span class=\"comment\">/* Size of configuration space */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Instead of touching interrupt line and base address registers</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * directly, use the values stored here. They might be different!</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#resource\">resource</a> <a class=\"id\" href=\"#resource\">resource</a>[<a class=\"id\" href=\"#DEVICE_COUNT_RESOURCE\">DEVICE_COUNT_RESOURCE</a>]; <span class=\"comment\">/* I/O and memory regions + expansion ROMs */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#resource_size_t\">resource_size_t</a><span class=\"ts\"/><a class=\"id\" href=\"#fw_addr\">fw_addr</a>[<a class=\"id\" href=\"#DEVICE_COUNT_RESOURCE\">DEVICE_COUNT_RESOURCE</a>]; <span class=\"comment\">/* FW-assigned addr */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* These fields are used by common fixups */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#transparent\">transparent</a>:1;<span class=\"ts\"/><span class=\"comment\">/* Transparent PCI bridge */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#multifunction\">multifunction</a>:1;<span class=\"comment\">/* Part of multi-function device */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* keep track of device state */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#is_added\">is_added</a>:1;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#is_busmaster\">is_busmaster</a>:1; <span class=\"comment\">/* device is busmaster */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#no_msi\">no_msi</a>:1;<span class=\"ts\"/><span class=\"comment\">/* device may not use msi */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#block_ucfg_access\">block_ucfg_access</a>:1;<span class=\"ts\"/><span class=\"comment\">/* userspace config space access is blocked */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#broken_parity_status\">broken_parity_status</a>:1;<span class=\"ts\"/><span class=\"comment\">/* Device generates false positive parity */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#irq_reroute_variant\">irq_reroute_variant</a>:2;<span class=\"ts\"/><span class=\"comment\">/* device needs IRQ rerouting variant */</span>", 
"<span class=\"ts\"/>unsigned int <span class=\"ts\"/><a class=\"id\" href=\"#msi_enabled\">msi_enabled</a>:1;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#msix_enabled\">msix_enabled</a>:1;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#ari_enabled\">ari_enabled</a>:1;<span class=\"ts\"/><span class=\"comment\">/* ARI forwarding */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#is_managed\">is_managed</a>:1;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#is_pcie\">is_pcie</a>:1;<span class=\"ts\"/><span class=\"comment\">/* Obsolete. Will be removed.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   Use pci_is_pcie() instead */</span>", 
"<span class=\"ts\"/>unsigned int    <a class=\"id\" href=\"#needs_freset\">needs_freset</a>:1; <span class=\"comment\">/* Dev requires fundamental reset */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#state_saved\">state_saved</a>:1;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#is_physfn\">is_physfn</a>:1;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#is_virtfn\">is_virtfn</a>:1;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#reset_fn\">reset_fn</a>:1;", 
"<span class=\"ts\"/>unsigned int    <a class=\"id\" href=\"#is_hotplug_bridge\">is_hotplug_bridge</a>:1;", 
"<span class=\"ts\"/>unsigned int    <a class=\"id\" href=\"#__aer_firmware_first_valid\">__aer_firmware_first_valid</a>:1;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#__aer_firmware_first\">__aer_firmware_first</a>:1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_dev_flags_t\">pci_dev_flags_t</a> <a class=\"id\" href=\"#dev_flags\">dev_flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a><span class=\"ts\"/><a class=\"id\" href=\"#enable_cnt\">enable_cnt</a>;<span class=\"ts\"/><span class=\"comment\">/* pci_enable_device has been called */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#saved_config_space\">saved_config_space</a>[16]; <span class=\"comment\">/* config space saved at suspend time */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> <a class=\"id\" href=\"#saved_cap_space\">saved_cap_space</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bin_attribute\">bin_attribute</a> *<a class=\"id\" href=\"#rom_attr\">rom_attr</a>; <span class=\"comment\">/* attribute descriptor for sysfs ROM entry */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rom_attr_enabled\">rom_attr_enabled</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* has display of the rom attribute been enabled? */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bin_attribute\">bin_attribute</a> *<a class=\"id\" href=\"#res_attr\">res_attr</a>[<a class=\"id\" href=\"#DEVICE_COUNT_RESOURCE\">DEVICE_COUNT_RESOURCE</a>]; <span class=\"comment\">/* sysfs file for resources */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bin_attribute\">bin_attribute</a> *<a class=\"id\" href=\"#res_attr_wc\">res_attr_wc</a>[<a class=\"id\" href=\"#DEVICE_COUNT_RESOURCE\">DEVICE_COUNT_RESOURCE</a>]; <span class=\"comment\">/* sysfs file for WC mapping of resources */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PCI_MSI\">CONFIG_PCI_MSI</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#msi_list\">msi_list</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_vpd\">pci_vpd</a> *<a class=\"id\" href=\"#vpd\">vpd</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PCI_IOV\">CONFIG_PCI_IOV</a>", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_sriov\">pci_sriov</a> *<a class=\"id\" href=\"#sriov\">sriov</a>;<span class=\"ts\"/><span class=\"comment\">/* SR-IOV capability related */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#physfn\">physfn</a>;<span class=\"ts\"/><span class=\"comment\">/* the PF this VF is associated with */</span>", 
"<span class=\"ts\"/>};", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_ats\">pci_ats</a><span class=\"ts\"/>*<a class=\"id\" href=\"#ats\">ats</a>;<span class=\"ts\"/><span class=\"comment\">/* Address Translation Service */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_physfn\">pci_physfn</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PCI_IOV\">CONFIG_PCI_IOV</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#is_virtfn\">is_virtfn</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#physfn\">physfn</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dev\">dev</a>;", 
"}", 
"", 
"extern struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#alloc_pci_dev\">alloc_pci_dev</a>(void);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pci_dev_b\">pci_dev_b</a>(<a class=\"id\" href=\"#n\">n</a>) <a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#n\">n</a>, struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a>, <a class=\"id\" href=\"#bus_list\">bus_list</a>)", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#n\">n</a>) <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#n\">n</a>, struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a>, <a class=\"id\" href=\"#dev\">dev</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#for_each_pci_dev\">for_each_pci_dev</a>(<a class=\"id\" href=\"#d\">d</a>) while ((<a class=\"id\" href=\"#d\">d</a> = <a class=\"id\" href=\"#pci_get_device\">pci_get_device</a>(<a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#d\">d</a>)) != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#pci_channel_offline\">pci_channel_offline</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#error_state\">error_state</a> != <a class=\"id\" href=\"#pci_channel_io_normal\">pci_channel_io_normal</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#pci_cap_saved_state\">pci_cap_saved_state</a> *<a class=\"id\" href=\"#pci_find_saved_cap\">pci_find_saved_cap</a>(", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_dev\">pci_dev</a>, char <a class=\"id\" href=\"#cap\">cap</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_cap_saved_state\">pci_cap_saved_state</a> *<a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#pos\">pos</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_for_each_entry\">hlist_for_each_entry</a>(<a class=\"id\" href=\"#tmp\">tmp</a>, <a class=\"id\" href=\"#pos\">pos</a>, &amp;<a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#saved_cap_space\">saved_cap_space</a>, <a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#cap_nr\">cap_nr</a> == <a class=\"id\" href=\"#cap\">cap</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#pci_add_saved_cap\">pci_add_saved_cap</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_dev\">pci_dev</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_cap_saved_state\">pci_cap_saved_state</a> *<a class=\"id\" href=\"#new_cap\">new_cap</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_add_head\">hlist_add_head</a>(&amp;<a class=\"id\" href=\"#new_cap\">new_cap</a>-><a class=\"id\" href=\"#next\">next</a>, &amp;<a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#saved_cap_space\">saved_cap_space</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The first PCI_BRIDGE_RESOURCE_NUM PCI bus resources (those that correspond</span>", 
"<span class=\"comment\"> * to P2P or CardBus bridge windows) go in a table.  Additional ones (for</span>", 
"<span class=\"comment\"> * buses below host bridges or subtractive decode bridges) go in the list.</span>", 
"<span class=\"comment\"> * Use pci_bus_for_each_resource() to iterate through all the resources.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * PCI_SUBTRACTIVE_DECODE means the bridge forwards the window implicitly</span>", 
"<span class=\"comment\"> * and there's no way to program the bridge with the details of the window.</span>", 
"<span class=\"comment\"> * This does not apply to ACPI _CRS windows, even with the _DEC subtractive-</span>", 
"<span class=\"comment\"> * decode bit set, because they are explicit and can be programmed with _SRS.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCI_SUBTRACTIVE_DECODE\">PCI_SUBTRACTIVE_DECODE</a><span class=\"ts\"/>0x1", 
"", 
"struct <a class=\"id\" href=\"#pci_bus_resource\">pci_bus_resource</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#resource\">resource</a> *<a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#flags\">flags</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCI_REGION_FLAG_MASK\">PCI_REGION_FLAG_MASK</a><span class=\"ts\"/>0x0fU<span class=\"ts\"/><span class=\"comment\">/* These bits of resource flags tell us the PCI region flags */</span>", 
"", 
"struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#node\">node</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* node in list of buses */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a><span class=\"ts\"/>*<a class=\"id\" href=\"#parent\">parent</a>;<span class=\"ts\"/><span class=\"comment\">/* parent bus this bridge is on */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#children\">children</a>;<span class=\"ts\"/><span class=\"comment\">/* list of child buses */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#devices\">devices</a>;<span class=\"ts\"/><span class=\"comment\">/* list of devices on this bus */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a><span class=\"ts\"/>*<a class=\"id\" href=\"#self\">self</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* bridge device as seen by parent */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#slots\">slots</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* list of slots on this bus */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#resource\">resource</a> *<a class=\"id\" href=\"#resource\">resource</a>[<a class=\"id\" href=\"#PCI_BRIDGE_RESOURCE_NUM\">PCI_BRIDGE_RESOURCE_NUM</a>];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#resources\">resources</a>;<span class=\"ts\"/><span class=\"comment\">/* address space routed to this bus */</span>", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_ops\">pci_ops</a><span class=\"ts\"/>*<a class=\"id\" href=\"#ops\">ops</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* configuration access functions */</span>", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#sysdata\">sysdata</a>;<span class=\"ts\"/><span class=\"comment\">/* hook for sys-specific extension */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proc_dir_entry\">proc_dir_entry</a> *<a class=\"id\" href=\"#procdir\">procdir</a>;<span class=\"ts\"/><span class=\"comment\">/* directory entry in /proc/bus/pci */</span>", 
"", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><a class=\"id\" href=\"#number\">number</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* bus number */</span>", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><a class=\"id\" href=\"#primary\">primary</a>;<span class=\"ts\"/><span class=\"comment\">/* number of primary bridge */</span>", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><a class=\"id\" href=\"#secondary\">secondary</a>;<span class=\"ts\"/><span class=\"comment\">/* number of secondary bridge */</span>", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><a class=\"id\" href=\"#subordinate\">subordinate</a>;<span class=\"ts\"/><span class=\"comment\">/* max number of subordinate buses */</span>", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><a class=\"id\" href=\"#max_bus_speed\">max_bus_speed</a>;<span class=\"ts\"/><span class=\"comment\">/* enum pci_bus_speed */</span>", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><a class=\"id\" href=\"#cur_bus_speed\">cur_bus_speed</a>;<span class=\"ts\"/><span class=\"comment\">/* enum pci_bus_speed */</span>", 
"", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a>[48];", 
"", 
"<span class=\"ts\"/>unsigned short  <a class=\"id\" href=\"#bridge_ctl\">bridge_ctl</a>;<span class=\"ts\"/><span class=\"comment\">/* manage NO_ISA/FBB/et al behaviors */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_bus_flags_t\">pci_bus_flags_t</a> <a class=\"id\" href=\"#bus_flags\">bus_flags</a>;<span class=\"ts\"/><span class=\"comment\">/* Inherited by child busses */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#bridge\">bridge</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bin_attribute\">bin_attribute</a><span class=\"ts\"/>*<a class=\"id\" href=\"#legacy_io\">legacy_io</a>; <span class=\"comment\">/* legacy I/O for this bus */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bin_attribute\">bin_attribute</a><span class=\"ts\"/>*<a class=\"id\" href=\"#legacy_mem\">legacy_mem</a>; <span class=\"comment\">/* legacy mem */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#is_added\">is_added</a>:1;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pci_bus_b\">pci_bus_b</a>(<a class=\"id\" href=\"#n\">n</a>)<span class=\"ts\"/><a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#n\">n</a>, struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a>, <a class=\"id\" href=\"#node\">node</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#to_pci_bus\">to_pci_bus</a>(<a class=\"id\" href=\"#n\">n</a>)<span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#n\">n</a>, struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a>, <a class=\"id\" href=\"#dev\">dev</a>)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Returns true if the pci bus is root (behind host-pci bridge),</span>", 
"<span class=\"comment\"> * false otherwise</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#pci_is_root_bus\">pci_is_root_bus</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#pbus\">pbus</a>)", 
"{", 
"<span class=\"ts\"/>return !(<a class=\"id\" href=\"#pbus\">pbus</a>-><a class=\"id\" href=\"#parent\">parent</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PCI_MSI\">CONFIG_PCI_MSI</a>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#pci_dev_msi_enabled\">pci_dev_msi_enabled</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_dev\">pci_dev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#msi_enabled\">msi_enabled</a> || <a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#msix_enabled\">msix_enabled</a>;", 
"}", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#pci_dev_msi_enabled\">pci_dev_msi_enabled</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_dev\">pci_dev</a>) { return <a class=\"id\" href=\"#false\">false</a>; }", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Error values that may be returned by PCI functions.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCIBIOS_SUCCESSFUL\">PCIBIOS_SUCCESSFUL</a><span class=\"ts\"/><span class=\"ts\"/>0x00", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCIBIOS_FUNC_NOT_SUPPORTED\">PCIBIOS_FUNC_NOT_SUPPORTED</a><span class=\"ts\"/>0x81", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCIBIOS_BAD_VENDOR_ID\">PCIBIOS_BAD_VENDOR_ID</a><span class=\"ts\"/><span class=\"ts\"/>0x83", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCIBIOS_DEVICE_NOT_FOUND\">PCIBIOS_DEVICE_NOT_FOUND</a><span class=\"ts\"/>0x86", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCIBIOS_BAD_REGISTER_NUMBER\">PCIBIOS_BAD_REGISTER_NUMBER</a><span class=\"ts\"/>0x87", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCIBIOS_SET_FAILED\">PCIBIOS_SET_FAILED</a><span class=\"ts\"/><span class=\"ts\"/>0x88", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCIBIOS_BUFFER_TOO_SMALL\">PCIBIOS_BUFFER_TOO_SMALL</a><span class=\"ts\"/>0x89", 
"", 
"<span class=\"comment\">/* Low-level architecture-dependent routines */</span>", 
"", 
"struct <a class=\"id\" href=\"#pci_ops\">pci_ops</a> {", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#read\">read</a>)(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>, unsigned int <a class=\"id\" href=\"#devfn\">devfn</a>, int <a class=\"id\" href=\"#where\">where</a>, int <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#write\">write</a>)(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>, unsigned int <a class=\"id\" href=\"#devfn\">devfn</a>, int <a class=\"id\" href=\"#where\">where</a>, int <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#val\">val</a>);", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ACPI needs to be able to access PCI config space before we've done a</span>", 
"<span class=\"comment\"> * PCI bus scan and created pci_bus structures.</span>", 
"<span class=\"comment\"> */</span>", 
"extern int <a class=\"id\" href=\"#raw_pci_read\">raw_pci_read</a>(unsigned int <a class=\"id\" href=\"#domain\">domain</a>, unsigned int <a class=\"id\" href=\"#bus\">bus</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#devfn\">devfn</a>, int <a class=\"id\" href=\"#reg\">reg</a>, int <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#val\">val</a>);", 
"extern int <a class=\"id\" href=\"#raw_pci_write\">raw_pci_write</a>(unsigned int <a class=\"id\" href=\"#domain\">domain</a>, unsigned int <a class=\"id\" href=\"#bus\">bus</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#devfn\">devfn</a>, int <a class=\"id\" href=\"#reg\">reg</a>, int <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#val\">val</a>);", 
"", 
"struct <a class=\"id\" href=\"#pci_bus_region\">pci_bus_region</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#resource_size_t\">resource_size_t</a> <a class=\"id\" href=\"#start\">start</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#resource_size_t\">resource_size_t</a> <a class=\"id\" href=\"#end\">end</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#pci_dynids\">pci_dynids</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> <a class=\"id\" href=\"#lock\">lock</a>;            <span class=\"comment\">/* protects list, index */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#list\">list</a>;      <span class=\"comment\">/* for IDs added at runtime */</span>", 
"};", 
"", 
"<span class=\"comment\">/* ---------------------------------------------------------------- */</span>", 
"<span class=\"comment\">/** PCI Error Recovery System (PCI-ERS).  If a PCI device driver provides</span>", 
"<span class=\"comment\"> *  a set of callbacks in struct pci_error_handlers, then that device driver</span>", 
"<span class=\"comment\"> *  will be notified of PCI bus errors, and will be driven to recovery</span>", 
"<span class=\"comment\"> *  when an error occurs.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"typedef unsigned int <a class=\"id\" href=\"#__bitwise\">__bitwise</a> <a class=\"id\" href=\"#pci_ers_result_t\">pci_ers_result_t</a>;", 
"", 
"enum <a class=\"id\" href=\"#pci_ers_result\">pci_ers_result</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* no result/none/not supported in device driver */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_ERS_RESULT_NONE\">PCI_ERS_RESULT_NONE</a> = (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#pci_ers_result_t\">pci_ers_result_t</a>) 1,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Device driver can recover without slot reset */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_ERS_RESULT_CAN_RECOVER\">PCI_ERS_RESULT_CAN_RECOVER</a> = (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#pci_ers_result_t\">pci_ers_result_t</a>) 2,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Device driver wants slot to be reset. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_ERS_RESULT_NEED_RESET\">PCI_ERS_RESULT_NEED_RESET</a> = (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#pci_ers_result_t\">pci_ers_result_t</a>) 3,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Device has completely failed, is unrecoverable */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_ERS_RESULT_DISCONNECT\">PCI_ERS_RESULT_DISCONNECT</a> = (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#pci_ers_result_t\">pci_ers_result_t</a>) 4,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Device driver is fully recovered and operational */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_ERS_RESULT_RECOVERED\">PCI_ERS_RESULT_RECOVERED</a> = (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#pci_ers_result_t\">pci_ers_result_t</a>) 5,", 
"};", 
"", 
"<span class=\"comment\">/* PCI bus error event callbacks */</span>", 
"struct <a class=\"id\" href=\"#pci_error_handlers\">pci_error_handlers</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* PCI bus error detected on this device */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_ers_result_t\">pci_ers_result_t</a> (*<a class=\"id\" href=\"#error_detected\">error_detected</a>)(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   enum <a class=\"id\" href=\"#pci_channel_state\">pci_channel_state</a> <a class=\"id\" href=\"#error\">error</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* MMIO has been re-enabled, but not DMA */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_ers_result_t\">pci_ers_result_t</a> (*<a class=\"id\" href=\"#mmio_enabled\">mmio_enabled</a>)(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* PCI Express link has been reset */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_ers_result_t\">pci_ers_result_t</a> (*<a class=\"id\" href=\"#link_reset\">link_reset</a>)(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* PCI slot has been reset */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_ers_result_t\">pci_ers_result_t</a> (*<a class=\"id\" href=\"#slot_reset\">slot_reset</a>)(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Device driver may resume normal operations */</span>", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#resume\">resume</a>)(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"};", 
"", 
"<span class=\"comment\">/* ---------------------------------------------------------------- */</span>", 
"", 
"struct <a class=\"id\" href=\"#module\">module</a>;", 
"struct <a class=\"id\" href=\"#pci_driver\">pci_driver</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#pci_device_id\">pci_device_id</a> *<a class=\"id\" href=\"#id_table\">id_table</a>;<span class=\"ts\"/><span class=\"comment\">/* must be non-NULL for probe to be called */</span>", 
"<span class=\"ts\"/>int  (*<a class=\"id\" href=\"#probe\">probe</a>)  (struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, const struct <a class=\"id\" href=\"#pci_device_id\">pci_device_id</a> *<a class=\"id\" href=\"#id\">id</a>);<span class=\"ts\"/><span class=\"comment\">/* New device inserted */</span>", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#remove\">remove</a>) (struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);<span class=\"ts\"/><span class=\"comment\">/* Device removed (NULL if not a hot-plug capable driver) */</span>", 
"<span class=\"ts\"/>int  (*<a class=\"id\" href=\"#suspend\">suspend</a>) (struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pm_message_t\">pm_message_t</a> <a class=\"id\" href=\"#state\">state</a>);<span class=\"ts\"/><span class=\"comment\">/* Device suspended */</span>", 
"<span class=\"ts\"/>int  (*<a class=\"id\" href=\"#suspend_late\">suspend_late</a>) (struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pm_message_t\">pm_message_t</a> <a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/>int  (*<a class=\"id\" href=\"#resume_early\">resume_early</a>) (struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>int  (*<a class=\"id\" href=\"#resume\">resume</a>) (struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);<span class=\"ts\"/>                <span class=\"comment\">/* Device woken up */</span>", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#shutdown\">shutdown</a>) (struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_error_handlers\">pci_error_handlers</a> *<a class=\"id\" href=\"#err_handler\">err_handler</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device_driver\">device_driver</a><span class=\"ts\"/><a class=\"id\" href=\"#driver\">driver</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dynids\">pci_dynids</a> <a class=\"id\" href=\"#dynids\">dynids</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#to_pci_driver\">to_pci_driver</a>(<a class=\"id\" href=\"#drv\">drv</a>) <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#drv\">drv</a>, struct <a class=\"id\" href=\"#pci_driver\">pci_driver</a>, <a class=\"id\" href=\"#driver\">driver</a>)", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * DEFINE_PCI_DEVICE_TABLE - macro used to describe a pci device table</span>", 
"<span class=\"comment\"> * @_table: device table name</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This macro is used to create a struct pci_device_id array (a device table)</span>", 
"<span class=\"comment\"> * in a generic manner.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEFINE_PCI_DEVICE_TABLE\">DEFINE_PCI_DEVICE_TABLE</a>(<a class=\"id\" href=\"#_table\">_table</a>) \\", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#pci_device_id\">pci_device_id</a> <a class=\"id\" href=\"#_table\">_table</a>[] <a class=\"id\" href=\"#__devinitconst\">__devinitconst</a>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * PCI_DEVICE - macro used to describe a specific pci device</span>", 
"<span class=\"comment\"> * @vend: the 16 bit PCI Vendor ID</span>", 
"<span class=\"comment\"> * @dev: the 16 bit PCI Device ID</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This macro is used to create a struct pci_device_id that matches a</span>", 
"<span class=\"comment\"> * specific device.  The subvendor and subdevice fields will be set to</span>", 
"<span class=\"comment\"> * PCI_ANY_ID.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCI_DEVICE\">PCI_DEVICE</a>(<a class=\"id\" href=\"#vend\">vend</a>,<a class=\"id\" href=\"#dev\">dev</a>) \\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#vendor\">vendor</a> = (<a class=\"id\" href=\"#vend\">vend</a>), .<a class=\"id\" href=\"#device\">device</a> = (<a class=\"id\" href=\"#dev\">dev</a>), \\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#subvendor\">subvendor</a> = <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, .<a class=\"id\" href=\"#subdevice\">subdevice</a> = <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * PCI_DEVICE_CLASS - macro used to describe a specific pci device class</span>", 
"<span class=\"comment\"> * @dev_class: the class, subclass, prog-if triple for this device</span>", 
"<span class=\"comment\"> * @dev_class_mask: the class mask for this device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This macro is used to create a struct pci_device_id that matches a</span>", 
"<span class=\"comment\"> * specific PCI class.  The vendor, device, subvendor, and subdevice</span>", 
"<span class=\"comment\"> * fields will be set to PCI_ANY_ID.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCI_DEVICE_CLASS\">PCI_DEVICE_CLASS</a>(<a class=\"id\" href=\"#dev_class\">dev_class</a>,<a class=\"id\" href=\"#dev_class_mask\">dev_class_mask</a>) \\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#class\">class</a> = (<a class=\"id\" href=\"#dev_class\">dev_class</a>), .<a class=\"id\" href=\"#class_mask\">class_mask</a> = (<a class=\"id\" href=\"#dev_class_mask\">dev_class_mask</a>), \\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#vendor\">vendor</a> = <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, .<a class=\"id\" href=\"#device\">device</a> = <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, \\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#subvendor\">subvendor</a> = <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, .<a class=\"id\" href=\"#subdevice\">subdevice</a> = <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * PCI_VDEVICE - macro used to describe a specific pci device in short form</span>", 
"<span class=\"comment\"> * @vendor: the vendor name</span>", 
"<span class=\"comment\"> * @device: the 16 bit PCI Device ID</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This macro is used to create a struct pci_device_id that matches a</span>", 
"<span class=\"comment\"> * specific PCI device.  The subvendor, and subdevice fields will be set</span>", 
"<span class=\"comment\"> * to PCI_ANY_ID. The macro allows the next field to follow as the device</span>", 
"<span class=\"comment\"> * private data.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#vendor\">vendor</a>, <a class=\"id\" href=\"#device\">device</a>)<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_VENDOR_ID_\">PCI_VENDOR_ID_</a>##<a class=\"id\" href=\"#vendor\">vendor</a>, (<a class=\"id\" href=\"#device\">device</a>),<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, 0, 0", 
"", 
"<span class=\"comment\">/* these external functions are only available when PCI support is enabled */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PCI\">CONFIG_PCI</a>", 
"", 
"extern struct <a class=\"id\" href=\"#bus_type\">bus_type</a> <a class=\"id\" href=\"#pci_bus_type\">pci_bus_type</a>;", 
"", 
"<span class=\"comment\">/* Do NOT directly access these two variables, unless you are arch specific pci</span>", 
"<span class=\"comment\"> * code, or pci core code. */</span>", 
"extern struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#pci_root_buses\">pci_root_buses</a>;<span class=\"ts\"/><span class=\"comment\">/* list of all known PCI buses */</span>", 
"<span class=\"comment\">/* Some device drivers need know if pci is initiated */</span>", 
"extern int <a class=\"id\" href=\"#no_pci_devices\">no_pci_devices</a>(void);", 
"", 
"void <a class=\"id\" href=\"#pcibios_fixup_bus\">pcibios_fixup_bus</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *);", 
"int <a class=\"id\" href=\"#__must_check\">__must_check</a> <a class=\"id\" href=\"#pcibios_enable_device\">pcibios_enable_device</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *, int <a class=\"id\" href=\"#mask\">mask</a>);", 
"char *<a class=\"id\" href=\"#pcibios_setup\">pcibios_setup</a>(char *<a class=\"id\" href=\"#str\">str</a>);", 
"", 
"<span class=\"comment\">/* Used only when drivers/pci/setup.c is used */</span>", 
"<a class=\"id\" href=\"#resource_size_t\">resource_size_t</a> <a class=\"id\" href=\"#pcibios_align_resource\">pcibios_align_resource</a>(void *, const struct <a class=\"id\" href=\"#resource\">resource</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#resource_size_t\">resource_size_t</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#resource_size_t\">resource_size_t</a>);", 
"void <a class=\"id\" href=\"#pcibios_update_irq\">pcibios_update_irq</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *, int <a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"comment\">/* Weak but can be overriden by arch */</span>", 
"void <a class=\"id\" href=\"#pci_fixup_cardbus\">pci_fixup_cardbus</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *);", 
"", 
"<span class=\"comment\">/* Generic PCI functions used internally */</span>", 
"", 
"void <a class=\"id\" href=\"#pcibios_scan_specific_bus\">pcibios_scan_specific_bus</a>(int <a class=\"id\" href=\"#busn\">busn</a>);", 
"extern struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#pci_find_bus\">pci_find_bus</a>(int <a class=\"id\" href=\"#domain\">domain</a>, int <a class=\"id\" href=\"#busnr\">busnr</a>);", 
"void <a class=\"id\" href=\"#pci_bus_add_devices\">pci_bus_add_devices</a>(const struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>);", 
"struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#pci_scan_bus_parented\">pci_scan_bus_parented</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#parent\">parent</a>, int <a class=\"id\" href=\"#bus\">bus</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#pci_ops\">pci_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>, void *<a class=\"id\" href=\"#sysdata\">sysdata</a>);", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> * <a class=\"id\" href=\"#__devinit\">__devinit</a> <a class=\"id\" href=\"#pci_scan_bus\">pci_scan_bus</a>(int <a class=\"id\" href=\"#bus\">bus</a>, struct <a class=\"id\" href=\"#pci_ops\">pci_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   void *<a class=\"id\" href=\"#sysdata\">sysdata</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#root_bus\">root_bus</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#root_bus\">root_bus</a> = <a class=\"id\" href=\"#pci_scan_bus_parented\">pci_scan_bus_parented</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#ops\">ops</a>, <a class=\"id\" href=\"#sysdata\">sysdata</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#root_bus\">root_bus</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_bus_add_devices\">pci_bus_add_devices</a>(<a class=\"id\" href=\"#root_bus\">root_bus</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#root_bus\">root_bus</a>;", 
"}", 
"struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#pci_create_bus\">pci_create_bus</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#parent\">parent</a>, int <a class=\"id\" href=\"#bus\">bus</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#pci_ops\">pci_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>, void *<a class=\"id\" href=\"#sysdata\">sysdata</a>);", 
"struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#pci_add_new_bus\">pci_add_new_bus</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#parent\">parent</a>, struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#busnr\">busnr</a>);", 
"void <a class=\"id\" href=\"#pcie_update_link_speed\">pcie_update_link_speed</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#link_status\">link_status</a>);", 
"struct <a class=\"id\" href=\"#pci_slot\">pci_slot</a> *<a class=\"id\" href=\"#pci_create_slot\">pci_create_slot</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#parent\">parent</a>, int <a class=\"id\" href=\"#slot_nr\">slot_nr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const char *<a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#hotplug_slot\">hotplug_slot</a> *<a class=\"id\" href=\"#hotplug\">hotplug</a>);", 
"void <a class=\"id\" href=\"#pci_destroy_slot\">pci_destroy_slot</a>(struct <a class=\"id\" href=\"#pci_slot\">pci_slot</a> *<a class=\"id\" href=\"#slot\">slot</a>);", 
"void <a class=\"id\" href=\"#pci_renumber_slot\">pci_renumber_slot</a>(struct <a class=\"id\" href=\"#pci_slot\">pci_slot</a> *<a class=\"id\" href=\"#slot\">slot</a>, int <a class=\"id\" href=\"#slot_nr\">slot_nr</a>);", 
"int <a class=\"id\" href=\"#pci_scan_slot\">pci_scan_slot</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>, int <a class=\"id\" href=\"#devfn\">devfn</a>);", 
"struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_scan_single_device\">pci_scan_single_device</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>, int <a class=\"id\" href=\"#devfn\">devfn</a>);", 
"void <a class=\"id\" href=\"#pci_device_add\">pci_device_add</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>);", 
"unsigned int <a class=\"id\" href=\"#pci_scan_child_bus\">pci_scan_child_bus</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>);", 
"int <a class=\"id\" href=\"#__must_check\">__must_check</a> <a class=\"id\" href=\"#pci_bus_add_device\">pci_bus_add_device</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"void <a class=\"id\" href=\"#pci_read_bridge_bases\">pci_read_bridge_bases</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#child\">child</a>);", 
"struct <a class=\"id\" href=\"#resource\">resource</a> *<a class=\"id\" href=\"#pci_find_parent_resource\">pci_find_parent_resource</a>(const struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#resource\">resource</a> *<a class=\"id\" href=\"#res\">res</a>);", 
"<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#pci_swizzle_interrupt_pin\">pci_swizzle_interrupt_pin</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#pin\">pin</a>);", 
"int <a class=\"id\" href=\"#pci_get_interrupt_pin\">pci_get_interrupt_pin</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> **<a class=\"id\" href=\"#bridge\">bridge</a>);", 
"<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#pci_common_swizzle\">pci_common_swizzle</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#pinp\">pinp</a>);", 
"extern struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_dev_get\">pci_dev_get</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"extern void <a class=\"id\" href=\"#pci_dev_put\">pci_dev_put</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"extern void <a class=\"id\" href=\"#pci_remove_bus\">pci_remove_bus</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#b\">b</a>);", 
"extern void <a class=\"id\" href=\"#pci_remove_bus_device\">pci_remove_bus_device</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"extern void <a class=\"id\" href=\"#pci_stop_bus_device\">pci_stop_bus_device</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"void <a class=\"id\" href=\"#pci_setup_cardbus\">pci_setup_cardbus</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>);", 
"extern void <a class=\"id\" href=\"#pci_sort_breadthfirst\">pci_sort_breadthfirst</a>(void);", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#dev_is_pci\">dev_is_pci</a>(<a class=\"id\" href=\"#d\">d</a>) ((<a class=\"id\" href=\"#d\">d</a>)-><a class=\"id\" href=\"#bus\">bus</a> == &amp;<a class=\"id\" href=\"#pci_bus_type\">pci_bus_type</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#dev_is_pf\">dev_is_pf</a>(<a class=\"id\" href=\"#d\">d</a>) ((<a class=\"id\" href=\"#dev_is_pci\">dev_is_pci</a>(<a class=\"id\" href=\"#d\">d</a>) ? <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#d\">d</a>)-><a class=\"id\" href=\"#is_physfn\">is_physfn</a> : <a class=\"id\" href=\"#false\">false</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#dev_num_vf\">dev_num_vf</a>(<a class=\"id\" href=\"#d\">d</a>) ((<a class=\"id\" href=\"#dev_is_pci\">dev_is_pci</a>(<a class=\"id\" href=\"#d\">d</a>) ? <a class=\"id\" href=\"#pci_num_vf\">pci_num_vf</a>(<a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#d\">d</a>)) : 0))", 
"", 
"<span class=\"comment\">/* Generic PCI functions exported to card drivers */</span>", 
"", 
"enum <a class=\"id\" href=\"#pci_lost_interrupt_reason\">pci_lost_interrupt_reason</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_LOST_IRQ_NO_INFORMATION\">PCI_LOST_IRQ_NO_INFORMATION</a> = 0,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_LOST_IRQ_DISABLE_MSI\">PCI_LOST_IRQ_DISABLE_MSI</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_LOST_IRQ_DISABLE_MSIX\">PCI_LOST_IRQ_DISABLE_MSIX</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_LOST_IRQ_DISABLE_ACPI\">PCI_LOST_IRQ_DISABLE_ACPI</a>,", 
"};", 
"enum <a class=\"id\" href=\"#pci_lost_interrupt_reason\">pci_lost_interrupt_reason</a> <a class=\"id\" href=\"#pci_lost_interrupt\">pci_lost_interrupt</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"int <a class=\"id\" href=\"#pci_find_capability\">pci_find_capability</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#cap\">cap</a>);", 
"int <a class=\"id\" href=\"#pci_find_next_capability\">pci_find_next_capability</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#pos\">pos</a>, int <a class=\"id\" href=\"#cap\">cap</a>);", 
"int <a class=\"id\" href=\"#pci_find_ext_capability\">pci_find_ext_capability</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#cap\">cap</a>);", 
"int <a class=\"id\" href=\"#pci_bus_find_ext_capability\">pci_bus_find_ext_capability</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>, unsigned int <a class=\"id\" href=\"#devfn\">devfn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#cap\">cap</a>);", 
"int <a class=\"id\" href=\"#pci_find_ht_capability\">pci_find_ht_capability</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#ht_cap\">ht_cap</a>);", 
"int <a class=\"id\" href=\"#pci_find_next_ht_capability\">pci_find_next_ht_capability</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#pos\">pos</a>, int <a class=\"id\" href=\"#ht_cap\">ht_cap</a>);", 
"struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#pci_find_next_bus\">pci_find_next_bus</a>(const struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#from\">from</a>);", 
"", 
"struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_get_device\">pci_get_device</a>(unsigned int <a class=\"id\" href=\"#vendor\">vendor</a>, unsigned int <a class=\"id\" href=\"#device\">device</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#from\">from</a>);", 
"struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_get_subsys\">pci_get_subsys</a>(unsigned int <a class=\"id\" href=\"#vendor\">vendor</a>, unsigned int <a class=\"id\" href=\"#device\">device</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#ss_vendor\">ss_vendor</a>, unsigned int <a class=\"id\" href=\"#ss_device\">ss_device</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#from\">from</a>);", 
"struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_get_slot\">pci_get_slot</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>, unsigned int <a class=\"id\" href=\"#devfn\">devfn</a>);", 
"struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_get_domain_bus_and_slot\">pci_get_domain_bus_and_slot</a>(int <a class=\"id\" href=\"#domain\">domain</a>, unsigned int <a class=\"id\" href=\"#bus\">bus</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    unsigned int <a class=\"id\" href=\"#devfn\">devfn</a>);", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_get_bus_and_slot\">pci_get_bus_and_slot</a>(unsigned int <a class=\"id\" href=\"#bus\">bus</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned int <a class=\"id\" href=\"#devfn\">devfn</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pci_get_domain_bus_and_slot\">pci_get_domain_bus_and_slot</a>(0, <a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#devfn\">devfn</a>);", 
"}", 
"struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_get_class\">pci_get_class</a>(unsigned int <a class=\"id\" href=\"#class\">class</a>, struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#from\">from</a>);", 
"int <a class=\"id\" href=\"#pci_dev_present\">pci_dev_present</a>(const struct <a class=\"id\" href=\"#pci_device_id\">pci_device_id</a> *<a class=\"id\" href=\"#ids\">ids</a>);", 
"", 
"int <a class=\"id\" href=\"#pci_bus_read_config_byte\">pci_bus_read_config_byte</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>, unsigned int <a class=\"id\" href=\"#devfn\">devfn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     int <a class=\"id\" href=\"#where\">where</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#val\">val</a>);", 
"int <a class=\"id\" href=\"#pci_bus_read_config_word\">pci_bus_read_config_word</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>, unsigned int <a class=\"id\" href=\"#devfn\">devfn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     int <a class=\"id\" href=\"#where\">where</a>, <a class=\"id\" href=\"#u16\">u16</a> *<a class=\"id\" href=\"#val\">val</a>);", 
"int <a class=\"id\" href=\"#pci_bus_read_config_dword\">pci_bus_read_config_dword</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>, unsigned int <a class=\"id\" href=\"#devfn\">devfn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      int <a class=\"id\" href=\"#where\">where</a>, <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#val\">val</a>);", 
"int <a class=\"id\" href=\"#pci_bus_write_config_byte\">pci_bus_write_config_byte</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>, unsigned int <a class=\"id\" href=\"#devfn\">devfn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      int <a class=\"id\" href=\"#where\">where</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#val\">val</a>);", 
"int <a class=\"id\" href=\"#pci_bus_write_config_word\">pci_bus_write_config_word</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>, unsigned int <a class=\"id\" href=\"#devfn\">devfn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      int <a class=\"id\" href=\"#where\">where</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#val\">val</a>);", 
"int <a class=\"id\" href=\"#pci_bus_write_config_dword\">pci_bus_write_config_dword</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>, unsigned int <a class=\"id\" href=\"#devfn\">devfn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       int <a class=\"id\" href=\"#where\">where</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#val\">val</a>);", 
"struct <a class=\"id\" href=\"#pci_ops\">pci_ops</a> *<a class=\"id\" href=\"#pci_bus_set_ops\">pci_bus_set_ops</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>, struct <a class=\"id\" href=\"#pci_ops\">pci_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#pci_read_config_byte\">pci_read_config_byte</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#where\">where</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#val\">val</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pci_bus_read_config_byte\">pci_bus_read_config_byte</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devfn\">devfn</a>, <a class=\"id\" href=\"#where\">where</a>, <a class=\"id\" href=\"#val\">val</a>);", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#where\">where</a>, <a class=\"id\" href=\"#u16\">u16</a> *<a class=\"id\" href=\"#val\">val</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pci_bus_read_config_word\">pci_bus_read_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devfn\">devfn</a>, <a class=\"id\" href=\"#where\">where</a>, <a class=\"id\" href=\"#val\">val</a>);", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#where\">where</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#val\">val</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pci_bus_read_config_dword\">pci_bus_read_config_dword</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devfn\">devfn</a>, <a class=\"id\" href=\"#where\">where</a>, <a class=\"id\" href=\"#val\">val</a>);", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#pci_write_config_byte\">pci_write_config_byte</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#where\">where</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#val\">val</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pci_bus_write_config_byte\">pci_bus_write_config_byte</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devfn\">devfn</a>, <a class=\"id\" href=\"#where\">where</a>, <a class=\"id\" href=\"#val\">val</a>);", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#pci_write_config_word\">pci_write_config_word</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#where\">where</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#val\">val</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pci_bus_write_config_word\">pci_bus_write_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devfn\">devfn</a>, <a class=\"id\" href=\"#where\">where</a>, <a class=\"id\" href=\"#val\">val</a>);", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#pci_write_config_dword\">pci_write_config_dword</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#where\">where</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#val\">val</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pci_bus_write_config_dword\">pci_bus_write_config_dword</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devfn\">devfn</a>, <a class=\"id\" href=\"#where\">where</a>, <a class=\"id\" href=\"#val\">val</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#__must_check\">__must_check</a> <a class=\"id\" href=\"#pci_enable_device\">pci_enable_device</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"int <a class=\"id\" href=\"#__must_check\">__must_check</a> <a class=\"id\" href=\"#pci_enable_device_io\">pci_enable_device_io</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"int <a class=\"id\" href=\"#__must_check\">__must_check</a> <a class=\"id\" href=\"#pci_enable_device_mem\">pci_enable_device_mem</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"int <a class=\"id\" href=\"#__must_check\">__must_check</a> <a class=\"id\" href=\"#pci_reenable_device\">pci_reenable_device</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *);", 
"int <a class=\"id\" href=\"#__must_check\">__must_check</a> <a class=\"id\" href=\"#pcim_enable_device\">pcim_enable_device</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>);", 
"void <a class=\"id\" href=\"#pcim_pin_device\">pcim_pin_device</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#pci_is_enabled\">pci_is_enabled</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#enable_cnt\">enable_cnt</a>) &gt; 0);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#pci_is_managed\">pci_is_managed</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#is_managed\">is_managed</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#pci_disable_device\">pci_disable_device</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"void <a class=\"id\" href=\"#pci_set_master\">pci_set_master</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"void <a class=\"id\" href=\"#pci_clear_master\">pci_clear_master</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"int <a class=\"id\" href=\"#pci_set_pcie_reset_state\">pci_set_pcie_reset_state</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, enum <a class=\"id\" href=\"#pcie_reset_state\">pcie_reset_state</a> <a class=\"id\" href=\"#state\">state</a>);", 
"int <a class=\"id\" href=\"#pci_set_cacheline_size\">pci_set_cacheline_size</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HAVE_PCI_SET_MWI\">HAVE_PCI_SET_MWI</a>", 
"int <a class=\"id\" href=\"#__must_check\">__must_check</a> <a class=\"id\" href=\"#pci_set_mwi\">pci_set_mwi</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"int <a class=\"id\" href=\"#pci_try_set_mwi\">pci_try_set_mwi</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"void <a class=\"id\" href=\"#pci_clear_mwi\">pci_clear_mwi</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"void <a class=\"id\" href=\"#pci_intx\">pci_intx</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#enable\">enable</a>);", 
"void <a class=\"id\" href=\"#pci_msi_off\">pci_msi_off</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"int <a class=\"id\" href=\"#pci_set_dma_max_seg_size\">pci_set_dma_max_seg_size</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, unsigned int <a class=\"id\" href=\"#size\">size</a>);", 
"int <a class=\"id\" href=\"#pci_set_dma_seg_boundary\">pci_set_dma_seg_boundary</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, unsigned long <a class=\"id\" href=\"#mask\">mask</a>);", 
"int <a class=\"id\" href=\"#pcix_get_max_mmrbc\">pcix_get_max_mmrbc</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"int <a class=\"id\" href=\"#pcix_get_mmrbc\">pcix_get_mmrbc</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"int <a class=\"id\" href=\"#pcix_set_mmrbc\">pcix_set_mmrbc</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#mmrbc\">mmrbc</a>);", 
"int <a class=\"id\" href=\"#pcie_get_readrq\">pcie_get_readrq</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"int <a class=\"id\" href=\"#pcie_set_readrq\">pcie_set_readrq</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#rq\">rq</a>);", 
"int <a class=\"id\" href=\"#__pci_reset_function\">__pci_reset_function</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"int <a class=\"id\" href=\"#pci_reset_function\">pci_reset_function</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"void <a class=\"id\" href=\"#pci_update_resource\">pci_update_resource</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#resno\">resno</a>);", 
"int <a class=\"id\" href=\"#__must_check\">__must_check</a> <a class=\"id\" href=\"#pci_assign_resource\">pci_assign_resource</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#i\">i</a>);", 
"int <a class=\"id\" href=\"#pci_select_bars\">pci_select_bars</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, unsigned long <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"comment\">/* ROM control related routines */</span>", 
"int <a class=\"id\" href=\"#pci_enable_rom\">pci_enable_rom</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>);", 
"void <a class=\"id\" href=\"#pci_disable_rom\">pci_disable_rom</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>);", 
"void <a class=\"id\" href=\"#__iomem\">__iomem</a> <a class=\"id\" href=\"#__must_check\">__must_check</a> *<a class=\"id\" href=\"#pci_map_rom\">pci_map_rom</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#size_t\">size_t</a> *<a class=\"id\" href=\"#size\">size</a>);", 
"void <a class=\"id\" href=\"#pci_unmap_rom\">pci_unmap_rom</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>, void <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#rom\">rom</a>);", 
"<a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#pci_get_rom_size\">pci_get_rom_size</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>, void <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#rom\">rom</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>);", 
"", 
"<span class=\"comment\">/* Power management related routines */</span>", 
"int <a class=\"id\" href=\"#pci_save_state\">pci_save_state</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"int <a class=\"id\" href=\"#pci_restore_state\">pci_restore_state</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"int <a class=\"id\" href=\"#__pci_complete_power_transition\">__pci_complete_power_transition</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pci_power_t\">pci_power_t</a> <a class=\"id\" href=\"#state\">state</a>);", 
"int <a class=\"id\" href=\"#pci_set_power_state\">pci_set_power_state</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pci_power_t\">pci_power_t</a> <a class=\"id\" href=\"#state\">state</a>);", 
"<a class=\"id\" href=\"#pci_power_t\">pci_power_t</a> <a class=\"id\" href=\"#pci_choose_state\">pci_choose_state</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pm_message_t\">pm_message_t</a> <a class=\"id\" href=\"#state\">state</a>);", 
"<a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#pci_pme_capable\">pci_pme_capable</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pci_power_t\">pci_power_t</a> <a class=\"id\" href=\"#state\">state</a>);", 
"void <a class=\"id\" href=\"#pci_pme_active\">pci_pme_active</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#enable\">enable</a>);", 
"int <a class=\"id\" href=\"#__pci_enable_wake\">__pci_enable_wake</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pci_power_t\">pci_power_t</a> <a class=\"id\" href=\"#state\">state</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#runtime\">runtime</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#enable\">enable</a>);", 
"int <a class=\"id\" href=\"#pci_wake_from_d3\">pci_wake_from_d3</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#enable\">enable</a>);", 
"<a class=\"id\" href=\"#pci_power_t\">pci_power_t</a> <a class=\"id\" href=\"#pci_target_state\">pci_target_state</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"int <a class=\"id\" href=\"#pci_prepare_to_sleep\">pci_prepare_to_sleep</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"int <a class=\"id\" href=\"#pci_back_from_sleep\">pci_back_from_sleep</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"<a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#pci_dev_run_wake\">pci_dev_run_wake</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#pci_enable_wake\">pci_enable_wake</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pci_power_t\">pci_power_t</a> <a class=\"id\" href=\"#state\">state</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#enable\">enable</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__pci_enable_wake\">__pci_enable_wake</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#state\">state</a>, <a class=\"id\" href=\"#false\">false</a>, <a class=\"id\" href=\"#enable\">enable</a>);", 
"}", 
"", 
"<span class=\"comment\">/* For use by arch with custom probe code */</span>", 
"void <a class=\"id\" href=\"#set_pcie_port_type\">set_pcie_port_type</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>);", 
"void <a class=\"id\" href=\"#set_pcie_hotplug_bridge\">set_pcie_hotplug_bridge</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>);", 
"", 
"<span class=\"comment\">/* Functions for PCI Hotplug drivers to use */</span>", 
"int <a class=\"id\" href=\"#pci_bus_find_capability\">pci_bus_find_capability</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>, unsigned int <a class=\"id\" href=\"#devfn\">devfn</a>, int <a class=\"id\" href=\"#cap\">cap</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HOTPLUG\">CONFIG_HOTPLUG</a>", 
"unsigned int <a class=\"id\" href=\"#pci_rescan_bus\">pci_rescan_bus</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/* Vital product data routines */</span>", 
"<a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#pci_read_vpd\">pci_read_vpd</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, void *<a class=\"id\" href=\"#buf\">buf</a>);", 
"<a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#pci_write_vpd\">pci_write_vpd</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, const void *<a class=\"id\" href=\"#buf\">buf</a>);", 
"int <a class=\"id\" href=\"#pci_vpd_truncate\">pci_vpd_truncate</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>);", 
"", 
"<span class=\"comment\">/* Helper functions for low-level code (drivers/pci/setup-[bus,res].c) */</span>", 
"void <a class=\"id\" href=\"#pci_bus_assign_resources\">pci_bus_assign_resources</a>(const struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>);", 
"void <a class=\"id\" href=\"#pci_bus_size_bridges\">pci_bus_size_bridges</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>);", 
"int <a class=\"id\" href=\"#pci_claim_resource\">pci_claim_resource</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *, int);", 
"void <a class=\"id\" href=\"#pci_assign_unassigned_resources\">pci_assign_unassigned_resources</a>(void);", 
"void <a class=\"id\" href=\"#pci_assign_unassigned_bridge_resources\">pci_assign_unassigned_bridge_resources</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#bridge\">bridge</a>);", 
"void <a class=\"id\" href=\"#pdev_enable_device\">pdev_enable_device</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *);", 
"void <a class=\"id\" href=\"#pdev_sort_resources\">pdev_sort_resources</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *, struct <a class=\"id\" href=\"#resource_list\">resource_list</a> *);", 
"int <a class=\"id\" href=\"#pci_enable_resources\">pci_enable_resources</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *, int <a class=\"id\" href=\"#mask\">mask</a>);", 
"void <a class=\"id\" href=\"#pci_fixup_irqs\">pci_fixup_irqs</a>(<a class=\"id\" href=\"#u8\">u8</a> (*)(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *, <a class=\"id\" href=\"#u8\">u8</a> *),", 
"<span class=\"ts\"/><span class=\"ts\"/>    int (*)(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *, <a class=\"id\" href=\"#u8\">u8</a>, <a class=\"id\" href=\"#u8\">u8</a>));", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HAVE_PCI_REQ_REGIONS\">HAVE_PCI_REQ_REGIONS</a><span class=\"ts\"/>2", 
"int <a class=\"id\" href=\"#__must_check\">__must_check</a> <a class=\"id\" href=\"#pci_request_regions\">pci_request_regions</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *, const char *);", 
"int <a class=\"id\" href=\"#__must_check\">__must_check</a> <a class=\"id\" href=\"#pci_request_regions_exclusive\">pci_request_regions_exclusive</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *, const char *);", 
"void <a class=\"id\" href=\"#pci_release_regions\">pci_release_regions</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *);", 
"int <a class=\"id\" href=\"#__must_check\">__must_check</a> <a class=\"id\" href=\"#pci_request_region\">pci_request_region</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *, int, const char *);", 
"int <a class=\"id\" href=\"#__must_check\">__must_check</a> <a class=\"id\" href=\"#pci_request_region_exclusive\">pci_request_region_exclusive</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *, int, const char *);", 
"void <a class=\"id\" href=\"#pci_release_region\">pci_release_region</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *, int);", 
"int <a class=\"id\" href=\"#pci_request_selected_regions\">pci_request_selected_regions</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *, int, const char *);", 
"int <a class=\"id\" href=\"#pci_request_selected_regions_exclusive\">pci_request_selected_regions_exclusive</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *, int, const char *);", 
"void <a class=\"id\" href=\"#pci_release_selected_regions\">pci_release_selected_regions</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *, int);", 
"", 
"<span class=\"comment\">/* drivers/pci/bus.c */</span>", 
"void <a class=\"id\" href=\"#pci_bus_add_resource\">pci_bus_add_resource</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>, struct <a class=\"id\" href=\"#resource\">resource</a> *<a class=\"id\" href=\"#res\">res</a>, unsigned int <a class=\"id\" href=\"#flags\">flags</a>);", 
"struct <a class=\"id\" href=\"#resource\">resource</a> *<a class=\"id\" href=\"#pci_bus_resource_n\">pci_bus_resource_n</a>(const struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>, int <a class=\"id\" href=\"#n\">n</a>);", 
"void <a class=\"id\" href=\"#pci_bus_remove_resources\">pci_bus_remove_resources</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pci_bus_for_each_resource\">pci_bus_for_each_resource</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#res\">res</a>, <a class=\"id\" href=\"#i\">i</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#pci_bus_resource_n\">pci_bus_resource_n</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#i\">i</a>)) || <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#PCI_BRIDGE_RESOURCE_NUM\">PCI_BRIDGE_RESOURCE_NUM</a>; \\", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#i\">i</a>++)", 
"", 
"int <a class=\"id\" href=\"#__must_check\">__must_check</a> <a class=\"id\" href=\"#pci_bus_alloc_resource\">pci_bus_alloc_resource</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#resource\">resource</a> *<a class=\"id\" href=\"#res\">res</a>, <a class=\"id\" href=\"#resource_size_t\">resource_size_t</a> <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#resource_size_t\">resource_size_t</a> <a class=\"id\" href=\"#align\">align</a>, <a class=\"id\" href=\"#resource_size_t\">resource_size_t</a> <a class=\"id\" href=\"#min\">min</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#type_mask\">type_mask</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#resource_size_t\">resource_size_t</a> (*<a class=\"id\" href=\"#alignf\">alignf</a>)(void *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const struct <a class=\"id\" href=\"#resource\">resource</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#resource_size_t\">resource_size_t</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#resource_size_t\">resource_size_t</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#alignf_data\">alignf_data</a>);", 
"void <a class=\"id\" href=\"#pci_enable_bridges\">pci_enable_bridges</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>);", 
"", 
"<span class=\"comment\">/* Proper probing supporting hot-pluggable devices */</span>", 
"int <a class=\"id\" href=\"#__must_check\">__must_check</a> <a class=\"id\" href=\"#__pci_register_driver\">__pci_register_driver</a>(struct <a class=\"id\" href=\"#pci_driver\">pci_driver</a> *, struct <a class=\"id\" href=\"#module\">module</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       const char *<a class=\"id\" href=\"#mod_name\">mod_name</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * pci_register_driver must be a macro so that KBUILD_MODNAME can be expanded</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pci_register_driver\">pci_register_driver</a>(<a class=\"id\" href=\"#driver\">driver</a>)<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__pci_register_driver\">__pci_register_driver</a>(<a class=\"id\" href=\"#driver\">driver</a>, <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>, <a class=\"id\" href=\"#KBUILD_MODNAME\">KBUILD_MODNAME</a>)", 
"", 
"void <a class=\"id\" href=\"#pci_unregister_driver\">pci_unregister_driver</a>(struct <a class=\"id\" href=\"#pci_driver\">pci_driver</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"void <a class=\"id\" href=\"#pci_remove_behind_bridge\">pci_remove_behind_bridge</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"struct <a class=\"id\" href=\"#pci_driver\">pci_driver</a> *<a class=\"id\" href=\"#pci_dev_driver\">pci_dev_driver</a>(const struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"int <a class=\"id\" href=\"#pci_add_dynid\">pci_add_dynid</a>(struct <a class=\"id\" href=\"#pci_driver\">pci_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  unsigned int <a class=\"id\" href=\"#vendor\">vendor</a>, unsigned int <a class=\"id\" href=\"#device\">device</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  unsigned int <a class=\"id\" href=\"#subvendor\">subvendor</a>, unsigned int <a class=\"id\" href=\"#subdevice\">subdevice</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  unsigned int <a class=\"id\" href=\"#class\">class</a>, unsigned int <a class=\"id\" href=\"#class_mask\">class_mask</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  unsigned long <a class=\"id\" href=\"#driver_data\">driver_data</a>);", 
"const struct <a class=\"id\" href=\"#pci_device_id\">pci_device_id</a> *<a class=\"id\" href=\"#pci_match_id\">pci_match_id</a>(const struct <a class=\"id\" href=\"#pci_device_id\">pci_device_id</a> *<a class=\"id\" href=\"#ids\">ids</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"int <a class=\"id\" href=\"#pci_scan_bridge\">pci_scan_bridge</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>, struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#max\">max</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    int <a class=\"id\" href=\"#pass\">pass</a>);", 
"", 
"void <a class=\"id\" href=\"#pci_walk_bus\">pci_walk_bus</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#top\">top</a>, int (*<a class=\"id\" href=\"#cb\">cb</a>)(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *, void *),", 
"<span class=\"ts\"/><span class=\"ts\"/>  void *<a class=\"id\" href=\"#userdata\">userdata</a>);", 
"int <a class=\"id\" href=\"#pci_cfg_space_size_ext\">pci_cfg_space_size_ext</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"int <a class=\"id\" href=\"#pci_cfg_space_size\">pci_cfg_space_size</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"unsigned char <a class=\"id\" href=\"#pci_bus_max_busnr\">pci_bus_max_busnr</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>);", 
"", 
"int <a class=\"id\" href=\"#pci_set_vga_state\">pci_set_vga_state</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#decode\">decode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      unsigned int <a class=\"id\" href=\"#command_bits\">command_bits</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#change_bridge\">change_bridge</a>);", 
"<span class=\"comment\">/* kmem_cache style wrapper around pci_alloc_consistent() */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>-<a class=\"id\" href=\"#dma\">dma</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#dmapool\">dmapool</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#pci_pool\">pci_pool</a> <a class=\"id\" href=\"#dma_pool\">dma_pool</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pci_pool_create\">pci_pool_create</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#align\">align</a>, <a class=\"id\" href=\"#allocation\">allocation</a>) \\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dma_pool_create\">dma_pool_create</a>(<a class=\"id\" href=\"#name\">name</a>, &amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#align\">align</a>, <a class=\"id\" href=\"#allocation\">allocation</a>)", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#pci_pool_destroy\">pci_pool_destroy</a>(<a class=\"id\" href=\"#pool\">pool</a>) <a class=\"id\" href=\"#dma_pool_destroy\">dma_pool_destroy</a>(<a class=\"id\" href=\"#pool\">pool</a>)", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#pci_pool_alloc\">pci_pool_alloc</a>(<a class=\"id\" href=\"#pool\">pool</a>, <a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#handle\">handle</a>) <a class=\"id\" href=\"#dma_pool_alloc\">dma_pool_alloc</a>(<a class=\"id\" href=\"#pool\">pool</a>, <a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#handle\">handle</a>)", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#pci_pool_free\">pci_pool_free</a>(<a class=\"id\" href=\"#pool\">pool</a>, <a class=\"id\" href=\"#vaddr\">vaddr</a>, <a class=\"id\" href=\"#addr\">addr</a>) <a class=\"id\" href=\"#dma_pool_free\">dma_pool_free</a>(<a class=\"id\" href=\"#pool\">pool</a>, <a class=\"id\" href=\"#vaddr\">vaddr</a>, <a class=\"id\" href=\"#addr\">addr</a>)", 
"", 
"enum <a class=\"id\" href=\"#pci_dma_burst_strategy\">pci_dma_burst_strategy</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DMA_BURST_INFINITY\">PCI_DMA_BURST_INFINITY</a>,<span class=\"ts\"/><span class=\"comment\">/* make bursts as large as possible,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   strategy_parameter is N/A */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DMA_BURST_BOUNDARY\">PCI_DMA_BURST_BOUNDARY</a>, <span class=\"comment\">/* disconnect at every strategy_parameter</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   byte boundaries */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_DMA_BURST_MULTIPLE\">PCI_DMA_BURST_MULTIPLE</a>, <span class=\"comment\">/* disconnect at some multiple of</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   strategy_parameter byte boundaries */</span>", 
"};", 
"", 
"struct <a class=\"id\" href=\"#msix_entry\">msix_entry</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#vector\">vector</a>;<span class=\"ts\"/><span class=\"comment\">/* kernel uses to write allocated vector */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>;<span class=\"ts\"/><span class=\"comment\">/* driver uses to specify entry, OS writes */</span>", 
"};", 
"", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_PCI_MSI\">CONFIG_PCI_MSI</a>", 
];
xr_frag_insert('l/80/02374123889a03bf7a54261dbd46b02193898d.xr', __xr_tmp);
