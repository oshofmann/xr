var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * sfi.c - x86 architecture SFI support.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (c) 2009, Intel Corporation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify it</span>", 
"<span class=\"comment\"> * under the terms and conditions of the GNU General Public License,</span>", 
"<span class=\"comment\"> * version 2, as published by the Free Software Foundation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is distributed in the hope it will be useful, but WITHOUT</span>", 
"<span class=\"comment\"> * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or</span>", 
"<span class=\"comment\"> * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for</span>", 
"<span class=\"comment\"> * more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * You should have received a copy of the GNU General Public License along with</span>", 
"<span class=\"comment\"> * this program; if not, write to the Free Software Foundation, Inc.,</span>", 
"<span class=\"comment\"> * 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KMSG_COMPONENT\">KMSG_COMPONENT</a> \"SFI\"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pr_fmt\">pr_fmt</a>(<a class=\"id\" href=\"#fmt\">fmt</a>) <a class=\"id\" href=\"#KMSG_COMPONENT\">KMSG_COMPONENT</a> \": \" <a class=\"id\" href=\"#fmt\">fmt</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#acpi\">acpi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sfi\">sfi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#io\">io</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#io_apic\">io_apic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#mpspec\">mpspec</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#setup\">setup</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#apic\">apic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_LOCAL_APIC\">CONFIG_X86_LOCAL_APIC</a>", 
"static unsigned long <a class=\"id\" href=\"#sfi_lapic_addr\">sfi_lapic_addr</a> <a class=\"id\" href=\"#__initdata\">__initdata</a> = <a class=\"id\" href=\"#APIC_DEFAULT_PHYS_BASE\">APIC_DEFAULT_PHYS_BASE</a>;", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#mp_sfi_register_lapic_address\">mp_sfi_register_lapic_address</a>(unsigned long <a class=\"id\" href=\"#address\">address</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mp_lapic_addr\">mp_lapic_addr</a> = <a class=\"id\" href=\"#address\">address</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_fixmap_nocache\">set_fixmap_nocache</a>(<a class=\"id\" href=\"#FIX_APIC_BASE\">FIX_APIC_BASE</a>, <a class=\"id\" href=\"#mp_lapic_addr\">mp_lapic_addr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#boot_cpu_physical_apicid\">boot_cpu_physical_apicid</a> == -1U)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#boot_cpu_physical_apicid\">boot_cpu_physical_apicid</a> = <a class=\"id\" href=\"#read_apic_id\">read_apic_id</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_info\">pr_info</a>(\"Boot CPU = %d\\n\", <a class=\"id\" href=\"#boot_cpu_physical_apicid\">boot_cpu_physical_apicid</a>);", 
"}", 
"", 
"<span class=\"comment\">/* All CPUs enumerated by SFI must be present and enabled */</span>", 
"void <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#mp_sfi_register_lapic\">mp_sfi_register_lapic</a>(<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#MAX_APICS\">MAX_APICS</a> - <a class=\"id\" href=\"#id\">id</a> <= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_warning\">pr_warning</a>(\"Processor #%d invalid (max %d)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#MAX_APICS\">MAX_APICS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_info\">pr_info</a>(\"registering lapic[%d]\\n\", <a class=\"id\" href=\"#id\">id</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#generic_processor_info\">generic_processor_info</a>(<a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#GET_APIC_VERSION\">GET_APIC_VERSION</a>(<a class=\"id\" href=\"#apic_read\">apic_read</a>(<a class=\"id\" href=\"#APIC_LVR\">APIC_LVR</a>)));", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#sfi_parse_cpus\">sfi_parse_cpus</a>(struct <a class=\"id\" href=\"#sfi_table_header\">sfi_table_header</a> *<a class=\"id\" href=\"#table\">table</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sfi_table_simple\">sfi_table_simple</a> *<a class=\"id\" href=\"#sb\">sb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sfi_cpu_table_entry\">sfi_cpu_table_entry</a> *<a class=\"id\" href=\"#pentry\">pentry</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu_num\">cpu_num</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a> = (struct <a class=\"id\" href=\"#sfi_table_simple\">sfi_table_simple</a> *)<a class=\"id\" href=\"#table\">table</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpu_num\">cpu_num</a> = <a class=\"id\" href=\"#SFI_GET_NUM_ENTRIES\">SFI_GET_NUM_ENTRIES</a>(<a class=\"id\" href=\"#sb\">sb</a>, struct <a class=\"id\" href=\"#sfi_cpu_table_entry\">sfi_cpu_table_entry</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pentry\">pentry</a> = (struct <a class=\"id\" href=\"#sfi_cpu_table_entry\">sfi_cpu_table_entry</a> *)<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#pentry\">pentry</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#cpu_num\">cpu_num</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mp_sfi_register_lapic\">mp_sfi_register_lapic</a>(<a class=\"id\" href=\"#pentry\">pentry</a>-><a class=\"id\" href=\"#apic_id\">apic_id</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pentry\">pentry</a>++;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#smp_found_config\">smp_found_config</a> = 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_X86_LOCAL_APIC */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_IO_APIC\">CONFIG_X86_IO_APIC</a>", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#sfi_parse_ioapic\">sfi_parse_ioapic</a>(struct <a class=\"id\" href=\"#sfi_table_header\">sfi_table_header</a> *<a class=\"id\" href=\"#table\">table</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sfi_table_simple\">sfi_table_simple</a> *<a class=\"id\" href=\"#sb\">sb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sfi_apic_table_entry\">sfi_apic_table_entry</a> *<a class=\"id\" href=\"#pentry\">pentry</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#num\">num</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a> = (struct <a class=\"id\" href=\"#sfi_table_simple\">sfi_table_simple</a> *)<a class=\"id\" href=\"#table\">table</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#num\">num</a> = <a class=\"id\" href=\"#SFI_GET_NUM_ENTRIES\">SFI_GET_NUM_ENTRIES</a>(<a class=\"id\" href=\"#sb\">sb</a>, struct <a class=\"id\" href=\"#sfi_apic_table_entry\">sfi_apic_table_entry</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pentry\">pentry</a> = (struct <a class=\"id\" href=\"#sfi_apic_table_entry\">sfi_apic_table_entry</a> *)<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#pentry\">pentry</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#num\">num</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mp_register_ioapic\">mp_register_ioapic</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#pentry\">pentry</a>-><a class=\"id\" href=\"#phys_addr\">phys_addr</a>, <a class=\"id\" href=\"#gsi_top\">gsi_top</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pentry\">pentry</a>++;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN\">WARN</a>(<a class=\"id\" href=\"#pic_mode\">pic_mode</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>\"SFI: pic_mod shouldn't be 1 when IOAPIC table is present\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pic_mode\">pic_mode</a> = 0;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_X86_IO_APIC */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * sfi_platform_init(): register lapics &amp; io-apics</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#sfi_platform_init\">sfi_platform_init</a>(void)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_LOCAL_APIC\">CONFIG_X86_LOCAL_APIC</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mp_sfi_register_lapic_address\">mp_sfi_register_lapic_address</a>(<a class=\"id\" href=\"#sfi_lapic_addr\">sfi_lapic_addr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sfi_table_parse\">sfi_table_parse</a>(<a class=\"id\" href=\"#SFI_SIG_CPUS\">SFI_SIG_CPUS</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#sfi_parse_cpus\">sfi_parse_cpus</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_IO_APIC\">CONFIG_X86_IO_APIC</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sfi_table_parse\">sfi_table_parse</a>(<a class=\"id\" href=\"#SFI_SIG_APIC\">SFI_SIG_APIC</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#sfi_parse_ioapic\">sfi_parse_ioapic</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return 0;", 
"}", 
];
xr_frag_insert('l/80/1a1b025b42105d5aeac4528273402af6004592.xr', __xr_tmp);
