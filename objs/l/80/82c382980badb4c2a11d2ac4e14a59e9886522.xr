var __xr_tmp = [
"<span class=\"comment\">/* Written 2000 by Andi Kleen */</span>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_ASM_X86_DESC_DEFS_H\">_ASM_X86_DESC_DEFS_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_ASM_X86_DESC_DEFS_H\">_ASM_X86_DESC_DEFS_H</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Segment descriptor structure definitions, usable from both x86_64 and i386</span>", 
"<span class=\"comment\"> * archs.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__ASSEMBLY__\">__ASSEMBLY__</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * FIXME: Accessing the desc_struct through its fields is more elegant,</span>", 
"<span class=\"comment\"> * and should be the one valid thing to do. However, a lot of open code</span>", 
"<span class=\"comment\"> * still touches the a and b accessors, and doing this allow us to do it</span>", 
"<span class=\"comment\"> * incrementally. We keep the signature as a struct, rather than an union,</span>", 
"<span class=\"comment\"> * so we can get rid of it transparently in the future -- glommer</span>", 
"<span class=\"comment\"> */</span>", 
"<span class=\"comment\">/* 8 byte segment descriptor */</span>", 
"struct <a class=\"id\" href=\"#desc_struct\">desc_struct</a> {", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#a\">a</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#b\">b</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>};", 
"<span class=\"ts\"/><span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#limit0\">limit0</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#base0\">base0</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned <a class=\"id\" href=\"#base1\">base1</a>: 8, <a class=\"id\" href=\"#type\">type</a>: 4, <a class=\"id\" href=\"#s\">s</a>: 1, <a class=\"id\" href=\"#dpl\">dpl</a>: 2, <a class=\"id\" href=\"#p\">p</a>: 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned <a class=\"id\" href=\"#limit\">limit</a>: 4, <a class=\"id\" href=\"#avl\">avl</a>: 1, <a class=\"id\" href=\"#l\">l</a>: 1, <a class=\"id\" href=\"#d\">d</a>: 1, <a class=\"id\" href=\"#g\">g</a>: 1, <a class=\"id\" href=\"#base2\">base2</a>: 8;", 
"<span class=\"ts\"/><span class=\"ts\"/>};", 
"<span class=\"ts\"/>};", 
"} <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#packed\">packed</a>));", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#GDT_ENTRY_INIT\">GDT_ENTRY_INIT</a>(<a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#limit\">limit</a>) { { { \\", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#a\">a</a> = ((<a class=\"id\" href=\"#limit\">limit</a>) &amp; 0xffff) | (((<a class=\"id\" href=\"#base\">base</a>) &amp; 0xffff) << 16), \\", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#b\">b</a> = (((<a class=\"id\" href=\"#base\">base</a>) &amp; 0xff0000) >> 16) | (((<a class=\"id\" href=\"#flags\">flags</a>) &amp; 0xf0ff) << 8) | \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#limit\">limit</a>) &amp; 0xf0000) | ((<a class=\"id\" href=\"#base\">base</a>) &amp; 0xff000000), \\", 
"<span class=\"ts\"/>} } }", 
"", 
"enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#GATE_INTERRUPT\">GATE_INTERRUPT</a> = 0xE,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#GATE_TRAP\">GATE_TRAP</a> = 0xF,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#GATE_CALL\">GATE_CALL</a> = 0xC,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#GATE_TASK\">GATE_TASK</a> = 0x5,", 
"};", 
"", 
"<span class=\"comment\">/* 16byte gate */</span>", 
"struct <a class=\"id\" href=\"#gate_struct64\">gate_struct64</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#offset_low\">offset_low</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#segment\">segment</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#ist\">ist</a> : 3, <a class=\"id\" href=\"#zero0\">zero0</a> : 5, <a class=\"id\" href=\"#type\">type</a> : 5, <a class=\"id\" href=\"#dpl\">dpl</a> : 2, <a class=\"id\" href=\"#p\">p</a> : 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#offset_middle\">offset_middle</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#offset_high\">offset_high</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#zero1\">zero1</a>;", 
"} <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#packed\">packed</a>));", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PTR_LOW\">PTR_LOW</a>(<a class=\"id\" href=\"#x\">x</a>) ((unsigned long long)(<a class=\"id\" href=\"#x\">x</a>) &amp; 0xFFFF)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PTR_MIDDLE\">PTR_MIDDLE</a>(<a class=\"id\" href=\"#x\">x</a>) (((unsigned long long)(<a class=\"id\" href=\"#x\">x</a>) >> 16) &amp; 0xFFFF)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PTR_HIGH\">PTR_HIGH</a>(<a class=\"id\" href=\"#x\">x</a>) ((unsigned long long)(<a class=\"id\" href=\"#x\">x</a>) >> 32)", 
"", 
"enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DESC_TSS\">DESC_TSS</a> = 0x9,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DESC_LDT\">DESC_LDT</a> = 0x2,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DESCTYPE_S\">DESCTYPE_S</a> = 0x10,<span class=\"ts\"/><span class=\"comment\">/* !system */</span>", 
"};", 
"", 
"<span class=\"comment\">/* LDT or TSS descriptor in the GDT. 16 bytes. */</span>", 
"struct <a class=\"id\" href=\"#ldttss_desc64\">ldttss_desc64</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#limit0\">limit0</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#base0\">base0</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#base1\">base1</a> : 8, <a class=\"id\" href=\"#type\">type</a> : 5, <a class=\"id\" href=\"#dpl\">dpl</a> : 2, <a class=\"id\" href=\"#p\">p</a> : 1;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#limit1\">limit1</a> : 4, <a class=\"id\" href=\"#zero0\">zero0</a> : 3, <a class=\"id\" href=\"#g\">g</a> : 1, <a class=\"id\" href=\"#base2\">base2</a> : 8;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#base3\">base3</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#zero1\">zero1</a>;", 
"} <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#packed\">packed</a>));", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"typedef struct <a class=\"id\" href=\"#gate_struct64\">gate_struct64</a> <a class=\"id\" href=\"#gate_desc\">gate_desc</a>;", 
"typedef struct <a class=\"id\" href=\"#ldttss_desc64\">ldttss_desc64</a> <a class=\"id\" href=\"#ldt_desc\">ldt_desc</a>;", 
"typedef struct <a class=\"id\" href=\"#ldttss_desc64\">ldttss_desc64</a> <a class=\"id\" href=\"#tss_desc\">tss_desc</a>;", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#gate_offset\">gate_offset</a>(<a class=\"id\" href=\"#g\">g</a>) ((<a class=\"id\" href=\"#g\">g</a>).<a class=\"id\" href=\"#offset_low\">offset_low</a> | ((unsigned long)(<a class=\"id\" href=\"#g\">g</a>).<a class=\"id\" href=\"#offset_middle\">offset_middle</a> << 16) | ((unsigned long)(<a class=\"id\" href=\"#g\">g</a>).<a class=\"id\" href=\"#offset_high\">offset_high</a> << 32))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#gate_segment\">gate_segment</a>(<a class=\"id\" href=\"#g\">g</a>) ((<a class=\"id\" href=\"#g\">g</a>).<a class=\"id\" href=\"#segment\">segment</a>)", 
"#else", 
"typedef struct <a class=\"id\" href=\"#desc_struct\">desc_struct</a> <a class=\"id\" href=\"#gate_desc\">gate_desc</a>;", 
"typedef struct <a class=\"id\" href=\"#desc_struct\">desc_struct</a> <a class=\"id\" href=\"#ldt_desc\">ldt_desc</a>;", 
"typedef struct <a class=\"id\" href=\"#desc_struct\">desc_struct</a> <a class=\"id\" href=\"#tss_desc\">tss_desc</a>;", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#gate_offset\">gate_offset</a>(<a class=\"id\" href=\"#g\">g</a>)<span class=\"ts\"/><span class=\"ts\"/>(((<a class=\"id\" href=\"#g\">g</a>).<a class=\"id\" href=\"#b\">b</a> &amp; 0xffff0000) | ((<a class=\"id\" href=\"#g\">g</a>).<a class=\"id\" href=\"#a\">a</a> &amp; 0x0000ffff))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#gate_segment\">gate_segment</a>(<a class=\"id\" href=\"#g\">g</a>)<span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#g\">g</a>).<a class=\"id\" href=\"#a\">a</a> >> 16)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"struct <a class=\"id\" href=\"#desc_ptr\">desc_ptr</a> {", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#address\">address</a>;", 
"} <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#packed\">packed</a>)) ;", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* !__ASSEMBLY__ */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _ASM_X86_DESC_DEFS_H */</span>", 
];
xr_frag_insert('l/80/82c382980badb4c2a11d2ac4e14a59e9886522.xr', __xr_tmp);
