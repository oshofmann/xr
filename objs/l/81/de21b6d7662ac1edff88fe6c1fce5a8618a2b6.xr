var __xr_tmp = [
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#create_buf_file\">create_buf_file</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#create_buf_file\">create_buf_file</a> = <a class=\"id\" href=\"#create_buf_file_default_callback\">create_buf_file_default_callback</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#remove_buf_file\">remove_buf_file</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#remove_buf_file\">remove_buf_file</a> = <a class=\"id\" href=\"#remove_buf_file_default_callback\">remove_buf_file_default_callback</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#cb\">cb</a> = <a class=\"id\" href=\"#cb\">cb</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>relay_hotcpu_callback - CPU hotplug callback</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>@nb: notifier block</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>@action: hotplug action to take</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>@hcpu: CPU number</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>Returns the success/failure of the operation. (%NOTIFY_OK, %NOTIFY_BAD)</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#relay_hotcpu_callback\">relay_hotcpu_callback</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nb\">nb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#action\">action</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#hcpu\">hcpu</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#hotcpu\">hotcpu</a> = (unsigned long)<a class=\"id\" href=\"#hcpu\">hcpu</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rchan\">rchan</a> *<a class=\"id\" href=\"#chan\">chan</a>;", 
"", 
"<span class=\"ts\"/>switch(<a class=\"id\" href=\"#action\">action</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_UP_PREPARE\">CPU_UP_PREPARE</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_UP_PREPARE_FROZEN\">CPU_UP_PREPARE_FROZEN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#relay_channels_mutex\">relay_channels_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#chan\">chan</a>, &amp;<a class=\"id\" href=\"#relay_channels\">relay_channels</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#hotcpu\">hotcpu</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#hotcpu\">hotcpu</a>] = <a class=\"id\" href=\"#relay_open_buf\">relay_open_buf</a>(<a class=\"id\" href=\"#chan\">chan</a>, <a class=\"id\" href=\"#hotcpu\">hotcpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if(!<a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#hotcpu\">hotcpu</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"relay_hotcpu_callback: cpu %d buffer \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"creation failed\\n\", <a class=\"id\" href=\"#hotcpu\">hotcpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#relay_channels_mutex\">relay_channels_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#notifier_from_errno\">notifier_from_errno</a>(-<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#relay_channels_mutex\">relay_channels_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_DEAD\">CPU_DEAD</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_DEAD_FROZEN\">CPU_DEAD_FROZEN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* No need to flush the cpu : will be flushed upon</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * final relay_flush() call. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NOTIFY_OK\">NOTIFY_OK</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>relay_open - create a new relay channel</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@base_filename: base name of files to create, %NULL for buffering only</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@parent: dentry of parent directory, %NULL for root directory or buffer</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@subbuf_size: size of sub-buffers</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@n_subbufs: number of sub-buffers</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@cb: client callback functions</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@private_data: user-defined data</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Returns channel pointer if successful, %NULL otherwise.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Creates a channel buffer for each cpu using the sizes and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>attributes specified.  The created channel buffer files</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>will be named base_filename0...base_filenameN-1.  File</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>permissions will be %S_IRUSR.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#rchan\">rchan</a> *<a class=\"id\" href=\"#relay_open\">relay_open</a>(const char *<a class=\"id\" href=\"#base_filename\">base_filename</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#parent\">parent</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#subbuf_size\">subbuf_size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#n_subbufs\">n_subbufs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#rchan_callbacks\">rchan_callbacks</a> *<a class=\"id\" href=\"#cb\">cb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> void *<a class=\"id\" href=\"#private_data\">private_data</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rchan\">rchan</a> *<a class=\"id\" href=\"#chan\">chan</a>;", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#subbuf_size\">subbuf_size</a> && <a class=\"id\" href=\"#n_subbufs\">n_subbufs</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#chan\">chan</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#rchan\">rchan</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#chan\">chan</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#version\">version</a> = <a class=\"id\" href=\"#RELAYFS_CHANNEL_VERSION\">RELAYFS_CHANNEL_VERSION</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#n_subbufs\">n_subbufs</a> = <a class=\"id\" href=\"#n_subbufs\">n_subbufs</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#subbuf_size\">subbuf_size</a> = <a class=\"id\" href=\"#subbuf_size\">subbuf_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#alloc_size\">alloc_size</a> = <a class=\"id\" href=\"#FIX_SIZE\">FIX_SIZE</a>(<a class=\"id\" href=\"#subbuf_size\">subbuf_size</a> * <a class=\"id\" href=\"#n_subbufs\">n_subbufs</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#private_data\">private_data</a> = <a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#base_filename\">base_filename</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#has_base_filename\">has_base_filename</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strlcpy\">strlcpy</a>(<a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#base_filename\">base_filename</a>, <a class=\"id\" href=\"#base_filename\">base_filename</a>, <a class=\"id\" href=\"#NAME_MAX\">NAME_MAX</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#setup_callbacks\">setup_callbacks</a>(<a class=\"id\" href=\"#chan\">chan</a>, <a class=\"id\" href=\"#cb\">cb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kref_init\">kref_init</a>(&amp;<a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#kref\">kref</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#relay_channels_mutex\">relay_channels_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_online_cpu\">for_each_online_cpu</a>(<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#relay_open_buf\">relay_open_buf</a>(<a class=\"id\" href=\"#chan\">chan</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#i\">i</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#free_bufs\">free_bufs</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#relay_channels\">relay_channels</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#relay_channels_mutex\">relay_channels_mutex</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#chan\">chan</a>;", 
"", 
"<a class=\"id\" href=\"#free_bufs\">free_bufs</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_possible_cpu\">for_each_possible_cpu</a>(<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#i\">i</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#relay_close_buf\">relay_close_buf</a>(<a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kref_put\">kref_put</a>(&amp;<a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#kref\">kref</a>, <a class=\"id\" href=\"#relay_destroy_channel\">relay_destroy_channel</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#relay_channels_mutex\">relay_channels_mutex</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#relay_open\">relay_open</a>);", 
"", 
"struct <a class=\"id\" href=\"#rchan_percpu_buf_dispatcher\">rchan_percpu_buf_dispatcher</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rchan_buf\">rchan_buf</a> *<a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>;", 
"};", 
"", 
"<span class=\"comment\">/* Called in atomic context. */</span>", 
"static void <a class=\"id\" href=\"#__relay_set_buf_dentry\">__relay_set_buf_dentry</a>(void *<a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rchan_percpu_buf_dispatcher\">rchan_percpu_buf_dispatcher</a> *<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#info\">info</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#relay_set_buf_dentry\">relay_set_buf_dentry</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#dentry\">dentry</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>relay_late_setup_files - triggers file creation</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@chan: channel to operate on</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@base_filename: base name of files to create</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@parent: dentry of parent directory, %NULL for root directory</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Returns 0 if successful, non-zero otherwise.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Use to setup files for a previously buffer-only channel.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Useful to do early tracing in kernel, before VFS is up, for example.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#relay_late_setup_files\">relay_late_setup_files</a>(struct <a class=\"id\" href=\"#rchan\">rchan</a> *<a class=\"id\" href=\"#chan\">chan</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const char *<a class=\"id\" href=\"#base_filename\">base_filename</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#parent\">parent</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#curr_cpu\">curr_cpu</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rchan_percpu_buf_dispatcher\">rchan_percpu_buf_dispatcher</a> <a class=\"id\" href=\"#disp\">disp</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#chan\">chan</a> || !<a class=\"id\" href=\"#base_filename\">base_filename</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#strlcpy\">strlcpy</a>(<a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#base_filename\">base_filename</a>, <a class=\"id\" href=\"#base_filename\">base_filename</a>, <a class=\"id\" href=\"#NAME_MAX\">NAME_MAX</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#relay_channels_mutex\">relay_channels_mutex</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Is chan already set up? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#has_base_filename\">has_base_filename</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#relay_channels_mutex\">relay_channels_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EEXIST\">EEXIST</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#has_base_filename\">has_base_filename</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#curr_cpu\">curr_cpu</a> = <a class=\"id\" href=\"#get_cpu\">get_cpu</a>();", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The CPU hotplug notifier ran before us and created buffers with</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * no files associated. So it's safe to call relay_setup_buf_file()</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * on all currently online CPUs.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_online_cpu\">for_each_online_cpu</a>(<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#i\">i</a>])) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ONCE\">WARN_ONCE</a>(1, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"CPU has no buffer!\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dentry\">dentry</a> = <a class=\"id\" href=\"#relay_create_buf_file\">relay_create_buf_file</a>(<a class=\"id\" href=\"#chan\">chan</a>, <a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#dentry\">dentry</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#curr_cpu\">curr_cpu</a> == <a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#local_irq_save\">local_irq_save</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#relay_set_buf_dentry\">relay_set_buf_dentry</a>(<a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#local_irq_restore\">local_irq_restore</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#disp\">disp</a>.<a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#disp\">disp</a>.<a class=\"id\" href=\"#dentry\">dentry</a> = <a class=\"id\" href=\"#dentry\">dentry</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smp_mb\">smp_mb</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* relay_channels_mutex must be held, so wait. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#smp_call_function_single\">smp_call_function_single</a>(<a class=\"id\" href=\"#i\">i</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#__relay_set_buf_dentry\">__relay_set_buf_dentry</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#disp\">disp</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#err\">err</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_cpu\">put_cpu</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#relay_channels_mutex\">relay_channels_mutex</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>relay_switch_subbuf - switch to a new sub-buffer</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@buf: channel buffer</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@length: size of current event</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Returns either the length passed in or 0 if full.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Performs sub-buffer-switch tasks such as invoking callbacks,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>updating padding counts, waking up readers, etc.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#relay_switch_subbuf\">relay_switch_subbuf</a>(struct <a class=\"id\" href=\"#rchan_buf\">rchan_buf</a> *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#length\">length</a>)", 
"{", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#old\">old</a>, *<a class=\"id\" href=\"#new\">new</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#old_subbuf\">old_subbuf</a>, <a class=\"id\" href=\"#new_subbuf\">new_subbuf</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#length\">length</a> &gt; <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#subbuf_size\">subbuf_size</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#toobig\">toobig</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#offset\">offset</a> != <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#subbuf_size\">subbuf_size</a> + 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#prev_padding\">prev_padding</a> = <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#subbuf_size\">subbuf_size</a> - <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_subbuf\">old_subbuf</a> = <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#subbufs_produced\">subbufs_produced</a> % <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#n_subbufs\">n_subbufs</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#padding\">padding</a>[<a class=\"id\" href=\"#old_subbuf\">old_subbuf</a>] = <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#prev_padding\">prev_padding</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#subbufs_produced\">subbufs_produced</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#dentry\">dentry</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a> +=", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#subbuf_size\">subbuf_size</a> -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#padding\">padding</a>[<a class=\"id\" href=\"#old_subbuf\">old_subbuf</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#early_bytes\">early_bytes</a> += <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#subbuf_size\">subbuf_size</a> -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#padding\">padding</a>[<a class=\"id\" href=\"#old_subbuf\">old_subbuf</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smp_mb\">smp_mb</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#waitqueue_active\">waitqueue_active</a>(&amp;<a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#read_wait\">read_wait</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Calling wake_up_interruptible() from here</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * will deadlock if we happen to be logging</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * from the scheduler (trying to re-grab</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * rq-&gt;lock), so defer it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mod_timer\">mod_timer</a>(&amp;<a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#jiffies\">jiffies</a> + 1);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old\">old</a> = <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_subbuf\">new_subbuf</a> = <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#subbufs_produced\">subbufs_produced</a> % <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#n_subbufs\">n_subbufs</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a> = <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#start\">start</a> + <a class=\"id\" href=\"#new_subbuf\">new_subbuf</a> * <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#subbuf_size\">subbuf_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#subbuf_start\">subbuf_start</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#new\">new</a>, <a class=\"id\" href=\"#old\">old</a>, <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#prev_padding\">prev_padding</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#subbuf_size\">subbuf_size</a> + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#new\">new</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#padding\">padding</a>[<a class=\"id\" href=\"#new_subbuf\">new_subbuf</a>] = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#length\">length</a> + <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#offset\">offset</a> &gt; <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#subbuf_size\">subbuf_size</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#toobig\">toobig</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#length\">length</a>;", 
"", 
"<a class=\"id\" href=\"#toobig\">toobig</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#last_toobig\">last_toobig</a> = <a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#relay_switch_subbuf\">relay_switch_subbuf</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>relay_subbufs_consumed - update the buffer's sub-buffers-consumed count</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@chan: the channel</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@cpu: the cpu associated with the channel buffer to update</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@subbufs_consumed: number of sub-buffers to add to current buf's count</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Adds to the channel buffer's consumed sub-buffer count.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>subbufs_consumed should be the number of sub-buffers newly consumed,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>not the total consumed.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>NOTE. Kernel clients don't need to call this function if the channel</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>mode is 'overwrite'.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#relay_subbufs_consumed\">relay_subbufs_consumed</a>(struct <a class=\"id\" href=\"#rchan\">rchan</a> *<a class=\"id\" href=\"#chan\">chan</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#subbufs_consumed\">subbufs_consumed</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rchan_buf\">rchan_buf</a> *<a class=\"id\" href=\"#buf\">buf</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#chan\">chan</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu\">cpu</a> >= <a class=\"id\" href=\"#NR_CPUS\">NR_CPUS</a> || !<a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#cpu\">cpu</a>] ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#subbufs_consumed\">subbufs_consumed</a> &gt; <a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#n_subbufs\">n_subbufs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#cpu\">cpu</a>];", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#subbufs_consumed\">subbufs_consumed</a> &gt; <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#subbufs_produced\">subbufs_produced</a> - <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#subbufs_consumed\">subbufs_consumed</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#subbufs_consumed\">subbufs_consumed</a> = <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#subbufs_produced\">subbufs_produced</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#subbufs_consumed\">subbufs_consumed</a> += <a class=\"id\" href=\"#subbufs_consumed\">subbufs_consumed</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#relay_subbufs_consumed\">relay_subbufs_consumed</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>relay_close - close the channel</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@chan: the channel</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Closes all channel buffers and frees the channel.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#relay_close\">relay_close</a>(struct <a class=\"id\" href=\"#rchan\">rchan</a> *<a class=\"id\" href=\"#chan\">chan</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#chan\">chan</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#relay_channels_mutex\">relay_channels_mutex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#is_global\">is_global</a> && <a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#buf\">buf</a>[0])", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#relay_close_buf\">relay_close_buf</a>(<a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#buf\">buf</a>[0]);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#for_each_possible_cpu\">for_each_possible_cpu</a>(<a class=\"id\" href=\"#i\">i</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#i\">i</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#relay_close_buf\">relay_close_buf</a>(<a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#last_toobig\">last_toobig</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"relay: one or more items not logged \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"[item size (%Zd) > sub-buffer size (%Zd)]\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#last_toobig\">last_toobig</a>, <a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#subbuf_size\">subbuf_size</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kref_put\">kref_put</a>(&amp;<a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#kref\">kref</a>, <a class=\"id\" href=\"#relay_destroy_channel\">relay_destroy_channel</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#relay_channels_mutex\">relay_channels_mutex</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#relay_close\">relay_close</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>relay_flush - close the channel</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@chan: the channel</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Flushes all channel buffers, i.e. forces buffer switch.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#relay_flush\">relay_flush</a>(struct <a class=\"id\" href=\"#rchan\">rchan</a> *<a class=\"id\" href=\"#chan\">chan</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#chan\">chan</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#is_global\">is_global</a> && <a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#buf\">buf</a>[0]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#relay_switch_subbuf\">relay_switch_subbuf</a>(<a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#buf\">buf</a>[0], 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#relay_channels_mutex\">relay_channels_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_possible_cpu\">for_each_possible_cpu</a>(<a class=\"id\" href=\"#i\">i</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#i\">i</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#relay_switch_subbuf\">relay_switch_subbuf</a>(<a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#i\">i</a>], 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#relay_channels_mutex\">relay_channels_mutex</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#relay_flush\">relay_flush</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>relay_file_open - open file op for relay files</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@inode: the inode</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@filp: the file</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Increments the channel buffer refcount.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#relay_file_open\">relay_file_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rchan_buf\">rchan_buf</a> *<a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_private\">i_private</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kref_get\">kref_get</a>(&amp;<a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#kref\">kref</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a> = <a class=\"id\" href=\"#buf\">buf</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nonseekable_open\">nonseekable_open</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#filp\">filp</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>relay_file_mmap - mmap file op for relay files</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@filp: the file</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@vma: the vma describing what to map</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Calls upon relay_mmap_buf() to map the file into user space.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#relay_file_mmap\">relay_file_mmap</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rchan_buf\">rchan_buf</a> *<a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#relay_mmap_buf\">relay_mmap_buf</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#vma\">vma</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>relay_file_poll - poll file op for relay files</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@filp: the file</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@wait: poll table</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Poll implemention.</span>", 
"<span class=\"comment\"> */</span>", 
"static unsigned int <a class=\"id\" href=\"#relay_file_poll\">relay_file_poll</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#poll_table\">poll_table</a> *<a class=\"id\" href=\"#wait\">wait</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#mask\">mask</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rchan_buf\">rchan_buf</a> *<a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#finalized\">finalized</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#POLLERR\">POLLERR</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_mode\">f_mode</a> &amp; <a class=\"id\" href=\"#FMODE_READ\">FMODE_READ</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#poll_wait\">poll_wait</a>(<a class=\"id\" href=\"#filp\">filp</a>, &amp;<a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#read_wait\">read_wait</a>, <a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#relay_buf_empty\">relay_buf_empty</a>(<a class=\"id\" href=\"#buf\">buf</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> |= <a class=\"id\" href=\"#POLLIN\">POLLIN</a> | <a class=\"id\" href=\"#POLLRDNORM\">POLLRDNORM</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#mask\">mask</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>relay_file_release - release file op for relay files</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@inode: the inode</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@filp: the file</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Decrements the channel refcount, as the filesystem is</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>no longer using it.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#relay_file_release\">relay_file_release</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rchan_buf\">rchan_buf</a> *<a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kref_put\">kref_put</a>(&amp;<a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#kref\">kref</a>, <a class=\"id\" href=\"#relay_remove_buf\">relay_remove_buf</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>relay_file_read_consume - update the consumed count for the buffer</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#relay_file_read_consume\">relay_file_read_consume</a>(struct <a class=\"id\" href=\"#rchan_buf\">rchan_buf</a> *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#read_pos\">read_pos</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#bytes_consumed\">bytes_consumed</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#subbuf_size\">subbuf_size</a> = <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#subbuf_size\">subbuf_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#n_subbufs\">n_subbufs</a> = <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#n_subbufs\">n_subbufs</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#read_subbuf\">read_subbuf</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#subbufs_produced\">subbufs_produced</a> == <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#subbufs_consumed\">subbufs_consumed</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#offset\">offset</a> == <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#bytes_consumed\">bytes_consumed</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#bytes_consumed\">bytes_consumed</a> + <a class=\"id\" href=\"#bytes_consumed\">bytes_consumed</a> &gt; <a class=\"id\" href=\"#subbuf_size\">subbuf_size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#relay_subbufs_consumed\">relay_subbufs_consumed</a>(<a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#chan\">chan</a>, <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#cpu\">cpu</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#bytes_consumed\">bytes_consumed</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#bytes_consumed\">bytes_consumed</a> += <a class=\"id\" href=\"#bytes_consumed\">bytes_consumed</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#read_pos\">read_pos</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_subbuf\">read_subbuf</a> = <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#subbufs_consumed\">subbufs_consumed</a> % <a class=\"id\" href=\"#n_subbufs\">n_subbufs</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_subbuf\">read_subbuf</a> = <a class=\"id\" href=\"#read_pos\">read_pos</a> / <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#subbuf_size\">subbuf_size</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#bytes_consumed\">bytes_consumed</a> + <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#padding\">padding</a>[<a class=\"id\" href=\"#read_subbuf\">read_subbuf</a>] == <a class=\"id\" href=\"#subbuf_size\">subbuf_size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#read_subbuf\">read_subbuf</a> == <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#subbufs_produced\">subbufs_produced</a> % <a class=\"id\" href=\"#n_subbufs\">n_subbufs</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#offset\">offset</a> == <a class=\"id\" href=\"#subbuf_size\">subbuf_size</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#relay_subbufs_consumed\">relay_subbufs_consumed</a>(<a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#chan\">chan</a>, <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#cpu\">cpu</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#bytes_consumed\">bytes_consumed</a> = 0;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>relay_file_read_avail - boolean, are there unconsumed bytes available?</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#relay_file_read_avail\">relay_file_read_avail</a>(struct <a class=\"id\" href=\"#rchan_buf\">rchan_buf</a> *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#read_pos\">read_pos</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#subbuf_size\">subbuf_size</a> = <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#subbuf_size\">subbuf_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#n_subbufs\">n_subbufs</a> = <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#n_subbufs\">n_subbufs</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#produced\">produced</a> = <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#subbufs_produced\">subbufs_produced</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#consumed\">consumed</a> = <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#subbufs_consumed\">subbufs_consumed</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#relay_file_read_consume\">relay_file_read_consume</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#read_pos\">read_pos</a>, 0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#consumed\">consumed</a> = <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#subbufs_consumed\">subbufs_consumed</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#offset\">offset</a> &gt; <a class=\"id\" href=\"#subbuf_size\">subbuf_size</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#produced\">produced</a> == <a class=\"id\" href=\"#consumed\">consumed</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#produced\">produced</a> - <a class=\"id\" href=\"#consumed\">consumed</a> >= <a class=\"id\" href=\"#n_subbufs\">n_subbufs</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#consumed\">consumed</a> = <a class=\"id\" href=\"#produced\">produced</a> - <a class=\"id\" href=\"#n_subbufs\">n_subbufs</a> + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#subbufs_consumed\">subbufs_consumed</a> = <a class=\"id\" href=\"#consumed\">consumed</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#bytes_consumed\">bytes_consumed</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#produced\">produced</a> = (<a class=\"id\" href=\"#produced\">produced</a> % <a class=\"id\" href=\"#n_subbufs\">n_subbufs</a>) * <a class=\"id\" href=\"#subbuf_size\">subbuf_size</a> + <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#consumed\">consumed</a> = (<a class=\"id\" href=\"#consumed\">consumed</a> % <a class=\"id\" href=\"#n_subbufs\">n_subbufs</a>) * <a class=\"id\" href=\"#subbuf_size\">subbuf_size</a> + <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#bytes_consumed\">bytes_consumed</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#consumed\">consumed</a> &gt; <a class=\"id\" href=\"#produced\">produced</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#produced\">produced</a> += <a class=\"id\" href=\"#n_subbufs\">n_subbufs</a> * <a class=\"id\" href=\"#subbuf_size\">subbuf_size</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#consumed\">consumed</a> == <a class=\"id\" href=\"#produced\">produced</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#offset\">offset</a> == <a class=\"id\" href=\"#subbuf_size\">subbuf_size</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#subbufs_produced\">subbufs_produced</a> &gt; <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#subbufs_consumed\">subbufs_consumed</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>relay_file_read_subbuf_avail - return bytes available in sub-buffer</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@read_pos: file read position</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@buf: relay channel buffer</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#relay_file_read_subbuf_avail\">relay_file_read_subbuf_avail</a>(<a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#read_pos\">read_pos</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#rchan_buf\">rchan_buf</a> *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#padding\">padding</a>, <a class=\"id\" href=\"#avail\">avail</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#read_subbuf\">read_subbuf</a>, <a class=\"id\" href=\"#read_offset\">read_offset</a>, <a class=\"id\" href=\"#write_subbuf\">write_subbuf</a>, <a class=\"id\" href=\"#write_offset\">write_offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#subbuf_size\">subbuf_size</a> = <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#subbuf_size\">subbuf_size</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_subbuf\">write_subbuf</a> = (<a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#data\">data</a> - <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#start\">start</a>) / <a class=\"id\" href=\"#subbuf_size\">subbuf_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_offset\">write_offset</a> = <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#offset\">offset</a> &gt; <a class=\"id\" href=\"#subbuf_size\">subbuf_size</a> ? <a class=\"id\" href=\"#subbuf_size\">subbuf_size</a> : <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_subbuf\">read_subbuf</a> = <a class=\"id\" href=\"#read_pos\">read_pos</a> / <a class=\"id\" href=\"#subbuf_size\">subbuf_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_offset\">read_offset</a> = <a class=\"id\" href=\"#read_pos\">read_pos</a> % <a class=\"id\" href=\"#subbuf_size\">subbuf_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#padding\">padding</a> = <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#padding\">padding</a>[<a class=\"id\" href=\"#read_subbuf\">read_subbuf</a>];", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#read_subbuf\">read_subbuf</a> == <a class=\"id\" href=\"#write_subbuf\">write_subbuf</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#read_offset\">read_offset</a> + <a class=\"id\" href=\"#padding\">padding</a> &lt; <a class=\"id\" href=\"#write_offset\">write_offset</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#avail\">avail</a> = <a class=\"id\" href=\"#write_offset\">write_offset</a> - (<a class=\"id\" href=\"#read_offset\">read_offset</a> + <a class=\"id\" href=\"#padding\">padding</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#avail\">avail</a> = (<a class=\"id\" href=\"#subbuf_size\">subbuf_size</a> - <a class=\"id\" href=\"#padding\">padding</a>) - <a class=\"id\" href=\"#read_offset\">read_offset</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#avail\">avail</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>relay_file_read_start_pos - find the first available byte to read</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@read_pos: file read position</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@buf: relay channel buffer</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>If the @read_pos is in the middle of padding, return the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>position of the first actually available byte, otherwise</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>return the original value.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#relay_file_read_start_pos\">relay_file_read_start_pos</a>(<a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#read_pos\">read_pos</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#rchan_buf\">rchan_buf</a> *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#read_subbuf\">read_subbuf</a>, <a class=\"id\" href=\"#padding\">padding</a>, <a class=\"id\" href=\"#padding_start\">padding_start</a>, <a class=\"id\" href=\"#padding_end\">padding_end</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#subbuf_size\">subbuf_size</a> = <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#subbuf_size\">subbuf_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#n_subbufs\">n_subbufs</a> = <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#n_subbufs\">n_subbufs</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#consumed\">consumed</a> = <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#subbufs_consumed\">subbufs_consumed</a> % <a class=\"id\" href=\"#n_subbufs\">n_subbufs</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#read_pos\">read_pos</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_pos\">read_pos</a> = <a class=\"id\" href=\"#consumed\">consumed</a> * <a class=\"id\" href=\"#subbuf_size\">subbuf_size</a> + <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#bytes_consumed\">bytes_consumed</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_subbuf\">read_subbuf</a> = <a class=\"id\" href=\"#read_pos\">read_pos</a> / <a class=\"id\" href=\"#subbuf_size\">subbuf_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#padding\">padding</a> = <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#padding\">padding</a>[<a class=\"id\" href=\"#read_subbuf\">read_subbuf</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#padding_start\">padding_start</a> = (<a class=\"id\" href=\"#read_subbuf\">read_subbuf</a> + 1) * <a class=\"id\" href=\"#subbuf_size\">subbuf_size</a> - <a class=\"id\" href=\"#padding\">padding</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#padding_end\">padding_end</a> = (<a class=\"id\" href=\"#read_subbuf\">read_subbuf</a> + 1) * <a class=\"id\" href=\"#subbuf_size\">subbuf_size</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#read_pos\">read_pos</a> >= <a class=\"id\" href=\"#padding_start\">padding_start</a> && <a class=\"id\" href=\"#read_pos\">read_pos</a> &lt; <a class=\"id\" href=\"#padding_end\">padding_end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_subbuf\">read_subbuf</a> = (<a class=\"id\" href=\"#read_subbuf\">read_subbuf</a> + 1) % <a class=\"id\" href=\"#n_subbufs\">n_subbufs</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_pos\">read_pos</a> = <a class=\"id\" href=\"#read_subbuf\">read_subbuf</a> * <a class=\"id\" href=\"#subbuf_size\">subbuf_size</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#read_pos\">read_pos</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>relay_file_read_end_pos - return the new read position</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@read_pos: file read position</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@buf: relay channel buffer</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@count: number of bytes to be read</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#relay_file_read_end_pos\">relay_file_read_end_pos</a>(struct <a class=\"id\" href=\"#rchan_buf\">rchan_buf</a> *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#read_pos\">read_pos</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#read_subbuf\">read_subbuf</a>, <a class=\"id\" href=\"#padding\">padding</a>, <a class=\"id\" href=\"#end_pos\">end_pos</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#subbuf_size\">subbuf_size</a> = <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#subbuf_size\">subbuf_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#n_subbufs\">n_subbufs</a> = <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#n_subbufs\">n_subbufs</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_subbuf\">read_subbuf</a> = <a class=\"id\" href=\"#read_pos\">read_pos</a> / <a class=\"id\" href=\"#subbuf_size\">subbuf_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#padding\">padding</a> = <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#padding\">padding</a>[<a class=\"id\" href=\"#read_subbuf\">read_subbuf</a>];", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#read_pos\">read_pos</a> % <a class=\"id\" href=\"#subbuf_size\">subbuf_size</a> + <a class=\"id\" href=\"#count\">count</a> + <a class=\"id\" href=\"#padding\">padding</a> == <a class=\"id\" href=\"#subbuf_size\">subbuf_size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end_pos\">end_pos</a> = (<a class=\"id\" href=\"#read_subbuf\">read_subbuf</a> + 1) * <a class=\"id\" href=\"#subbuf_size\">subbuf_size</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end_pos\">end_pos</a> = <a class=\"id\" href=\"#read_pos\">read_pos</a> + <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#end_pos\">end_pos</a> >= <a class=\"id\" href=\"#subbuf_size\">subbuf_size</a> * <a class=\"id\" href=\"#n_subbufs\">n_subbufs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end_pos\">end_pos</a> = 0;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#end_pos\">end_pos</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>subbuf_read_actor - read up to one subbuf's worth of data</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#subbuf_read_actor\">subbuf_read_actor</a>(<a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#read_start\">read_start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#rchan_buf\">rchan_buf</a> *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#avail\">avail</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#read_descriptor_t\">read_descriptor_t</a> *<a class=\"id\" href=\"#desc\">desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#read_actor_t\">read_actor_t</a> <a class=\"id\" href=\"#actor\">actor</a>)", 
"{", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#from\">from</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#from\">from</a> = <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#start\">start</a> + <a class=\"id\" href=\"#read_start\">read_start</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#avail\">avail</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#arg\">arg</a>.<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#from\">from</a>, <a class=\"id\" href=\"#avail\">avail</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#arg\">arg</a>.<a class=\"id\" href=\"#data\">data</a> += <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#written\">written</a> += <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#count\">count</a> -= <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"typedef int (*<a class=\"id\" href=\"#subbuf_actor_t\">subbuf_actor_t</a>) (<a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#read_start\">read_start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#rchan_buf\">rchan_buf</a> *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#avail\">avail</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#read_descriptor_t\">read_descriptor_t</a> *<a class=\"id\" href=\"#desc\">desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#read_actor_t\">read_actor_t</a> <a class=\"id\" href=\"#actor\">actor</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>relay_file_read_subbufs - read count bytes, bridging subbuf boundaries</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#relay_file_read_subbufs\">relay_file_read_subbufs</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#subbuf_actor_t\">subbuf_actor_t</a> <a class=\"id\" href=\"#subbuf_actor\">subbuf_actor</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_actor_t\">read_actor_t</a> <a class=\"id\" href=\"#actor\">actor</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_descriptor_t\">read_descriptor_t</a> *<a class=\"id\" href=\"#desc\">desc</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rchan_buf\">rchan_buf</a> *<a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#read_start\">read_start</a>, <a class=\"id\" href=\"#avail\">avail</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#count\">count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#relay_file_read_avail\">relay_file_read_avail</a>(<a class=\"id\" href=\"#buf\">buf</a>, *<a class=\"id\" href=\"#ppos\">ppos</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_start\">read_start</a> = <a class=\"id\" href=\"#relay_file_read_start_pos\">relay_file_read_start_pos</a>(*<a class=\"id\" href=\"#ppos\">ppos</a>, <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#avail\">avail</a> = <a class=\"id\" href=\"#relay_file_read_subbuf_avail\">relay_file_read_subbuf_avail</a>(<a class=\"id\" href=\"#read_start\">read_start</a>, <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#avail\">avail</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#avail\">avail</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#avail\">avail</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#subbuf_actor\">subbuf_actor</a>(<a class=\"id\" href=\"#read_start\">read_start</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#avail\">avail</a>, <a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#actor\">actor</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#error\">error</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#relay_file_read_consume\">relay_file_read_consume</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#read_start\">read_start</a>, <a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#ppos\">ppos</a> = <a class=\"id\" href=\"#relay_file_read_end_pos\">relay_file_read_end_pos</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#read_start\">read_start</a>, <a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#count\">count</a> && <a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#written\">written</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#relay_file_read\">relay_file_read</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buffer\">buffer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_descriptor_t\">read_descriptor_t</a> <a class=\"id\" href=\"#desc\">desc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>.<a class=\"id\" href=\"#written\">written</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>.<a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>.<a class=\"id\" href=\"#arg\">arg</a>.<a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#buffer\">buffer</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>.<a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#relay_file_read_subbufs\">relay_file_read_subbufs</a>(<a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#ppos\">ppos</a>, <a class=\"id\" href=\"#subbuf_read_actor\">subbuf_read_actor</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#desc\">desc</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#relay_consume_bytes\">relay_consume_bytes</a>(struct <a class=\"id\" href=\"#rchan_buf\">rchan_buf</a> *<a class=\"id\" href=\"#rbuf\">rbuf</a>, int <a class=\"id\" href=\"#bytes_consumed\">bytes_consumed</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rbuf\">rbuf</a>-><a class=\"id\" href=\"#bytes_consumed\">bytes_consumed</a> += <a class=\"id\" href=\"#bytes_consumed\">bytes_consumed</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rbuf\">rbuf</a>-><a class=\"id\" href=\"#bytes_consumed\">bytes_consumed</a> >= <a class=\"id\" href=\"#rbuf\">rbuf</a>-><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#subbuf_size\">subbuf_size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#relay_subbufs_consumed\">relay_subbufs_consumed</a>(<a class=\"id\" href=\"#rbuf\">rbuf</a>-><a class=\"id\" href=\"#chan\">chan</a>, <a class=\"id\" href=\"#rbuf\">rbuf</a>-><a class=\"id\" href=\"#cpu\">cpu</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rbuf\">rbuf</a>-><a class=\"id\" href=\"#bytes_consumed\">bytes_consumed</a> %= <a class=\"id\" href=\"#rbuf\">rbuf</a>-><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#subbuf_size\">subbuf_size</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#relay_pipe_buf_release\">relay_pipe_buf_release</a>(struct <a class=\"id\" href=\"#pipe_inode_info\">pipe_inode_info</a> *<a class=\"id\" href=\"#pipe\">pipe</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#pipe_buffer\">pipe_buffer</a> *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rchan_buf\">rchan_buf</a> *<a class=\"id\" href=\"#rbuf\">rbuf</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rbuf\">rbuf</a> = (struct <a class=\"id\" href=\"#rchan_buf\">rchan_buf</a> *)<a class=\"id\" href=\"#page_private\">page_private</a>(<a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#relay_consume_bytes\">relay_consume_bytes</a>(<a class=\"id\" href=\"#rbuf\">rbuf</a>, <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#private\">private</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#pipe_buf_operations\">pipe_buf_operations</a> <a class=\"id\" href=\"#relay_pipe_buf_ops\">relay_pipe_buf_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#can_merge\">can_merge</a> = 0,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#map\">map</a> = <a class=\"id\" href=\"#generic_pipe_buf_map\">generic_pipe_buf_map</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#unmap\">unmap</a> = <a class=\"id\" href=\"#generic_pipe_buf_unmap\">generic_pipe_buf_unmap</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#confirm\">confirm</a> = <a class=\"id\" href=\"#generic_pipe_buf_confirm\">generic_pipe_buf_confirm</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a> = <a class=\"id\" href=\"#relay_pipe_buf_release\">relay_pipe_buf_release</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#steal\">steal</a> = <a class=\"id\" href=\"#generic_pipe_buf_steal\">generic_pipe_buf_steal</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#get\">get</a> = <a class=\"id\" href=\"#generic_pipe_buf_get\">generic_pipe_buf_get</a>,", 
"};", 
"", 
"static void <a class=\"id\" href=\"#relay_page_release\">relay_page_release</a>(struct <a class=\"id\" href=\"#splice_pipe_desc\">splice_pipe_desc</a> *<a class=\"id\" href=\"#spd\">spd</a>, unsigned int <a class=\"id\" href=\"#i\">i</a>)", 
"{", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>subbuf_splice_actor - splice up to one subbuf's worth of data</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#subbuf_splice_actor\">subbuf_splice_actor</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#in\">in</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#pipe_inode_info\">pipe_inode_info</a> *<a class=\"id\" href=\"#pipe\">pipe</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned int <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       int *<a class=\"id\" href=\"#nonpad_ret\">nonpad_ret</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#pidx\">pidx</a>, <a class=\"id\" href=\"#poff\">poff</a>, <a class=\"id\" href=\"#total_len\">total_len</a>, <a class=\"id\" href=\"#subbuf_pages\">subbuf_pages</a>, <a class=\"id\" href=\"#nr_pages\">nr_pages</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rchan_buf\">rchan_buf</a> *<a class=\"id\" href=\"#rbuf\">rbuf</a> = <a class=\"id\" href=\"#in\">in</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#subbuf_size\">subbuf_size</a> = <a class=\"id\" href=\"#rbuf\">rbuf</a>-><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#subbuf_size\">subbuf_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uint64_t\">uint64_t</a> <a class=\"id\" href=\"#pos\">pos</a> = (<a class=\"id\" href=\"#uint64_t\">uint64_t</a>) *<a class=\"id\" href=\"#ppos\">ppos</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uint32_t\">uint32_t</a> <a class=\"id\" href=\"#alloc_size\">alloc_size</a> = (<a class=\"id\" href=\"#uint32_t\">uint32_t</a>) <a class=\"id\" href=\"#rbuf\">rbuf</a>-><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#alloc_size\">alloc_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#read_start\">read_start</a> = (<a class=\"id\" href=\"#size_t\">size_t</a>) <a class=\"id\" href=\"#do_div\">do_div</a>(<a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#alloc_size\">alloc_size</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#read_subbuf\">read_subbuf</a> = <a class=\"id\" href=\"#read_start\">read_start</a> / <a class=\"id\" href=\"#subbuf_size\">subbuf_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#padding\">padding</a> = <a class=\"id\" href=\"#rbuf\">rbuf</a>-><a class=\"id\" href=\"#padding\">padding</a>[<a class=\"id\" href=\"#read_subbuf\">read_subbuf</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#nonpad_end\">nonpad_end</a> = <a class=\"id\" href=\"#read_subbuf\">read_subbuf</a> * <a class=\"id\" href=\"#subbuf_size\">subbuf_size</a> + <a class=\"id\" href=\"#subbuf_size\">subbuf_size</a> - <a class=\"id\" href=\"#padding\">padding</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#PIPE_DEF_BUFFERS\">PIPE_DEF_BUFFERS</a>];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#partial_page\">partial_page</a> <a class=\"id\" href=\"#partial\">partial</a>[<a class=\"id\" href=\"#PIPE_DEF_BUFFERS\">PIPE_DEF_BUFFERS</a>];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#splice_pipe_desc\">splice_pipe_desc</a> <a class=\"id\" href=\"#spd\">spd</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#pages\">pages</a> = <a class=\"id\" href=\"#pages\">pages</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#nr_pages\">nr_pages</a> = 0,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#partial\">partial</a> = <a class=\"id\" href=\"#partial\">partial</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ops\">ops</a> = &amp;<a class=\"id\" href=\"#relay_pipe_buf_ops\">relay_pipe_buf_ops</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#spd_release\">spd_release</a> = <a class=\"id\" href=\"#relay_page_release\">relay_page_release</a>,", 
"<span class=\"ts\"/>};", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rbuf\">rbuf</a>-><a class=\"id\" href=\"#subbufs_produced\">subbufs_produced</a> == <a class=\"id\" href=\"#rbuf\">rbuf</a>-><a class=\"id\" href=\"#subbufs_consumed\">subbufs_consumed</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#splice_grow_spd\">splice_grow_spd</a>(<a class=\"id\" href=\"#pipe\">pipe</a>, &amp;<a class=\"id\" href=\"#spd\">spd</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Adjust read len, if longer than what is available</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; (<a class=\"id\" href=\"#subbuf_size\">subbuf_size</a> - <a class=\"id\" href=\"#read_start\">read_start</a> % <a class=\"id\" href=\"#subbuf_size\">subbuf_size</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#subbuf_size\">subbuf_size</a> - <a class=\"id\" href=\"#read_start\">read_start</a> % <a class=\"id\" href=\"#subbuf_size\">subbuf_size</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#subbuf_pages\">subbuf_pages</a> = <a class=\"id\" href=\"#rbuf\">rbuf</a>-><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#alloc_size\">alloc_size</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pidx\">pidx</a> = (<a class=\"id\" href=\"#read_start\">read_start</a> / <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>) % <a class=\"id\" href=\"#subbuf_pages\">subbuf_pages</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#poff\">poff</a> = <a class=\"id\" href=\"#read_start\">read_start</a> &amp; ~<a class=\"id\" href=\"#PAGE_MASK\">PAGE_MASK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nr_pages\">nr_pages</a> = <a class=\"id\" href=\"#min_t\">min_t</a>(unsigned int, <a class=\"id\" href=\"#subbuf_pages\">subbuf_pages</a>, <a class=\"id\" href=\"#pipe\">pipe</a>-><a class=\"id\" href=\"#buffers\">buffers</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#total_len\">total_len</a> = 0; <a class=\"id\" href=\"#spd\">spd</a>.<a class=\"id\" href=\"#nr_pages\">nr_pages</a> &lt; <a class=\"id\" href=\"#nr_pages\">nr_pages</a>; <a class=\"id\" href=\"#spd\">spd</a>.<a class=\"id\" href=\"#nr_pages\">nr_pages</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#this_len\">this_len</a>, <a class=\"id\" href=\"#this_end\">this_end</a>, <a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cur_pos\">cur_pos</a> = <a class=\"id\" href=\"#read_start\">read_start</a> + <a class=\"id\" href=\"#total_len\">total_len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_len\">this_len</a> = <a class=\"id\" href=\"#min_t\">min_t</a>(unsigned long, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - <a class=\"id\" href=\"#poff\">poff</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#private\">private</a> = <a class=\"id\" href=\"#this_len\">this_len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spd\">spd</a>.<a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#spd\">spd</a>.<a class=\"id\" href=\"#nr_pages\">nr_pages</a>] = <a class=\"id\" href=\"#rbuf\">rbuf</a>-><a class=\"id\" href=\"#page_array\">page_array</a>[<a class=\"id\" href=\"#pidx\">pidx</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spd\">spd</a>.<a class=\"id\" href=\"#partial\">partial</a>[<a class=\"id\" href=\"#spd\">spd</a>.<a class=\"id\" href=\"#nr_pages\">nr_pages</a>].<a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#poff\">poff</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_end\">this_end</a> = <a class=\"id\" href=\"#cur_pos\">cur_pos</a> + <a class=\"id\" href=\"#this_len\">this_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#this_end\">this_end</a> >= <a class=\"id\" href=\"#nonpad_end\">nonpad_end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_len\">this_len</a> = <a class=\"id\" href=\"#nonpad_end\">nonpad_end</a> - <a class=\"id\" href=\"#cur_pos\">cur_pos</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#private\">private</a> = <a class=\"id\" href=\"#this_len\">this_len</a> + <a class=\"id\" href=\"#padding\">padding</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spd\">spd</a>.<a class=\"id\" href=\"#partial\">partial</a>[<a class=\"id\" href=\"#spd\">spd</a>.<a class=\"id\" href=\"#nr_pages\">nr_pages</a>].<a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#this_len\">this_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spd\">spd</a>.<a class=\"id\" href=\"#partial\">partial</a>[<a class=\"id\" href=\"#spd\">spd</a>.<a class=\"id\" href=\"#nr_pages\">nr_pages</a>].<a class=\"id\" href=\"#private\">private</a> = <a class=\"id\" href=\"#private\">private</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> -= <a class=\"id\" href=\"#this_len\">this_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#total_len\">total_len</a> += <a class=\"id\" href=\"#this_len\">this_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#poff\">poff</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pidx\">pidx</a> = (<a class=\"id\" href=\"#pidx\">pidx</a> + 1) % <a class=\"id\" href=\"#subbuf_pages\">subbuf_pages</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#this_end\">this_end</a> >= <a class=\"id\" href=\"#nonpad_end\">nonpad_end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spd\">spd</a>.<a class=\"id\" href=\"#nr_pages\">nr_pages</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#spd\">spd</a>.<a class=\"id\" href=\"#nr_pages\">nr_pages</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = *<a class=\"id\" href=\"#nonpad_ret\">nonpad_ret</a> = <a class=\"id\" href=\"#splice_to_pipe\">splice_to_pipe</a>(<a class=\"id\" href=\"#pipe\">pipe</a>, &amp;<a class=\"id\" href=\"#spd\">spd</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0 || <a class=\"id\" href=\"#ret\">ret</a> &lt; <a class=\"id\" href=\"#total_len\">total_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"        if (<a class=\"id\" href=\"#read_start\">read_start</a> + <a class=\"id\" href=\"#ret\">ret</a> == <a class=\"id\" href=\"#nonpad_end\">nonpad_end</a>)", 
"                <a class=\"id\" href=\"#ret\">ret</a> += <a class=\"id\" href=\"#padding\">padding</a>;", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#splice_shrink_spd\">splice_shrink_spd</a>(<a class=\"id\" href=\"#pipe\">pipe</a>, &amp;<a class=\"id\" href=\"#spd\">spd</a>);", 
"        return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#relay_file_splice_read\">relay_file_splice_read</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#in\">in</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#pipe_inode_info\">pipe_inode_info</a> *<a class=\"id\" href=\"#pipe\">pipe</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      unsigned int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#spliced\">spliced</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nonpad_ret\">nonpad_ret</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spliced\">spliced</a> = 0;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#len\">len</a> && !<a class=\"id\" href=\"#spliced\">spliced</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#subbuf_splice_actor\">subbuf_splice_actor</a>(<a class=\"id\" href=\"#in\">in</a>, <a class=\"id\" href=\"#ppos\">ppos</a>, <a class=\"id\" href=\"#pipe\">pipe</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#flags\">flags</a>, &amp;<a class=\"id\" href=\"#nonpad_ret\">nonpad_ret</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (!<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#SPLICE_F_NONBLOCK\">SPLICE_F_NONBLOCK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#ppos\">ppos</a> += <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &gt; <a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> -= <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spliced\">spliced</a> += <a class=\"id\" href=\"#nonpad_ret\">nonpad_ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nonpad_ret\">nonpad_ret</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#spliced\">spliced</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#spliced\">spliced</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#relay_file_operations\">relay_file_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#relay_file_open\">relay_file_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#poll\">poll</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#relay_file_poll\">relay_file_poll</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#mmap\">mmap</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#relay_file_mmap\">relay_file_mmap</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#relay_file_read\">relay_file_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#no_llseek\">no_llseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#relay_file_release\">relay_file_release</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#splice_read\">splice_read</a><span class=\"ts\"/>= <a class=\"id\" href=\"#relay_file_splice_read\">relay_file_splice_read</a>,", 
"};", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#relay_file_operations\">relay_file_operations</a>);", 
"", 
"static <a class=\"id\" href=\"#__init\">__init</a> int <a class=\"id\" href=\"#relay_init\">relay_init</a>(void)", 
"{", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hotcpu_notifier\">hotcpu_notifier</a>(<a class=\"id\" href=\"#relay_hotcpu_callback\">relay_hotcpu_callback</a>, 0);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<a class=\"id\" href=\"#early_initcall\">early_initcall</a>(<a class=\"id\" href=\"#relay_init\">relay_init</a>);", 
];
xr_frag_insert('l/81/de21b6d7662ac1edff88fe6c1fce5a8618a2b6.xr', __xr_tmp);
