var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  linux/fs/fifo.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  written by Paul H. Hargrove</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Fixes:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>10-06-1999, AV: fixed OOM handling in fifo_open(), moved</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>initialization there, switched to external</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>allocation of pipe_inode_info.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pipe_fs_i\">pipe_fs_i</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static void <a class=\"id\" href=\"#wait_for_partner\">wait_for_partner</a>(struct <a class=\"id\" href=\"#inode\">inode</a>* <a class=\"id\" href=\"#inode\">inode</a>, unsigned int *<a class=\"id\" href=\"#cnt\">cnt</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cur\">cur</a> = *<a class=\"id\" href=\"#cnt\">cnt</a>;<span class=\"ts\"/>", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#cur\">cur</a> == *<a class=\"id\" href=\"#cnt\">cnt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pipe_wait\">pipe_wait</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_pipe\">i_pipe</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#signal_pending\">signal_pending</a>(<a class=\"id\" href=\"#current\">current</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#wake_up_partner\">wake_up_partner</a>(struct <a class=\"id\" href=\"#inode\">inode</a>* <a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible\">wake_up_interruptible</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_pipe\">i_pipe</a>-><a class=\"id\" href=\"#wait\">wait</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#fifo_open\">fifo_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pipe_inode_info\">pipe_inode_info</a> *<a class=\"id\" href=\"#pipe\">pipe</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pipe\">pipe</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_pipe\">i_pipe</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pipe\">pipe</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pipe\">pipe</a> = <a class=\"id\" href=\"#alloc_pipe_info\">alloc_pipe_info</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pipe\">pipe</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_nocleanup\">err_nocleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_pipe\">i_pipe</a> = <a class=\"id\" href=\"#pipe\">pipe</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_version\">f_version</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We can only do regular read/write on fifos */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_mode\">f_mode</a> &= (<a class=\"id\" href=\"#FMODE_READ\">FMODE_READ</a> | <a class=\"id\" href=\"#FMODE_WRITE\">FMODE_WRITE</a>);", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_mode\">f_mode</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#FMODE_READ\">FMODE_READ</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  O_RDONLY</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  POSIX.1 says that O_NONBLOCK means return with the FIFO</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  opened, even when there is no process writing the FIFO.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_op\">f_op</a> = &amp;<a class=\"id\" href=\"#read_pipefifo_fops\">read_pipefifo_fops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pipe\">pipe</a>-><a class=\"id\" href=\"#r_counter\">r_counter</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pipe\">pipe</a>-><a class=\"id\" href=\"#readers\">readers</a>++ == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_partner\">wake_up_partner</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pipe\">pipe</a>-><a class=\"id\" href=\"#writers\">writers</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_flags\">f_flags</a> &amp; <a class=\"id\" href=\"#O_NONBLOCK\">O_NONBLOCK</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* suppress POLLHUP until we have</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * seen a writer */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_version\">f_version</a> = <a class=\"id\" href=\"#pipe\">pipe</a>-><a class=\"id\" href=\"#w_counter\">w_counter</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wait_for_partner\">wait_for_partner</a>(<a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#pipe\">pipe</a>-><a class=\"id\" href=\"#w_counter\">w_counter</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if(<a class=\"id\" href=\"#signal_pending\">signal_pending</a>(<a class=\"id\" href=\"#current\">current</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_rd\">err_rd</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#FMODE_WRITE\">FMODE_WRITE</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  O_WRONLY</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  POSIX.1 says that O_NONBLOCK means return -1 with</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  errno=ENXIO when there is no process reading the FIFO.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_flags\">f_flags</a> &amp; <a class=\"id\" href=\"#O_NONBLOCK\">O_NONBLOCK</a>) && !<a class=\"id\" href=\"#pipe\">pipe</a>-><a class=\"id\" href=\"#readers\">readers</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_op\">f_op</a> = &amp;<a class=\"id\" href=\"#write_pipefifo_fops\">write_pipefifo_fops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pipe\">pipe</a>-><a class=\"id\" href=\"#w_counter\">w_counter</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pipe\">pipe</a>-><a class=\"id\" href=\"#writers\">writers</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_partner\">wake_up_partner</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pipe\">pipe</a>-><a class=\"id\" href=\"#readers\">readers</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wait_for_partner\">wait_for_partner</a>(<a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#pipe\">pipe</a>-><a class=\"id\" href=\"#r_counter\">r_counter</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#signal_pending\">signal_pending</a>(<a class=\"id\" href=\"#current\">current</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_wr\">err_wr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#FMODE_READ\">FMODE_READ</a> | <a class=\"id\" href=\"#FMODE_WRITE\">FMODE_WRITE</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  O_RDWR</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  POSIX.1 leaves this case \"undefined\" when O_NONBLOCK is set.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  This implementation will NEVER block on a O_RDWR open, since</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  the process can at least talk to itself.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_op\">f_op</a> = &amp;<a class=\"id\" href=\"#rdwr_pipefifo_fops\">rdwr_pipefifo_fops</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pipe\">pipe</a>-><a class=\"id\" href=\"#readers\">readers</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pipe\">pipe</a>-><a class=\"id\" href=\"#writers\">writers</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pipe\">pipe</a>-><a class=\"id\" href=\"#r_counter\">r_counter</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pipe\">pipe</a>-><a class=\"id\" href=\"#w_counter\">w_counter</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pipe\">pipe</a>-><a class=\"id\" href=\"#readers\">readers</a> == 1 || <a class=\"id\" href=\"#pipe\">pipe</a>-><a class=\"id\" href=\"#writers\">writers</a> == 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_partner\">wake_up_partner</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Ok! */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#err_rd\">err_rd</a>:", 
"<span class=\"ts\"/>if (!--<a class=\"id\" href=\"#pipe\">pipe</a>-><a class=\"id\" href=\"#readers\">readers</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible\">wake_up_interruptible</a>(&amp;<a class=\"id\" href=\"#pipe\">pipe</a>-><a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ERESTARTSYS\">ERESTARTSYS</a>;", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<a class=\"id\" href=\"#err_wr\">err_wr</a>:", 
"<span class=\"ts\"/>if (!--<a class=\"id\" href=\"#pipe\">pipe</a>-><a class=\"id\" href=\"#writers\">writers</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible\">wake_up_interruptible</a>(&amp;<a class=\"id\" href=\"#pipe\">pipe</a>-><a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ERESTARTSYS\">ERESTARTSYS</a>;", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<a class=\"id\" href=\"#err\">err</a>:", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pipe\">pipe</a>-><a class=\"id\" href=\"#readers\">readers</a> && !<a class=\"id\" href=\"#pipe\">pipe</a>-><a class=\"id\" href=\"#writers\">writers</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_pipe_info\">free_pipe_info</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<a class=\"id\" href=\"#err_nocleanup\">err_nocleanup</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Dummy default file-operations: the only thing this does</span>", 
"<span class=\"comment\"> * is contain the open that then fills in the correct operations</span>", 
"<span class=\"comment\"> * depending on the access mode of the file...</span>", 
"<span class=\"comment\"> */</span>", 
"const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#def_fifo_fops\">def_fifo_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#fifo_open\">fifo_open</a>,<span class=\"ts\"/><span class=\"comment\">/* will set read_ or write_pipefifo_fops */</span>", 
"};", 
];
xr_frag_insert('l/81/e4ca85aa5d7d0ce0a85a6d21969630b537b3d8.xr', __xr_tmp);
