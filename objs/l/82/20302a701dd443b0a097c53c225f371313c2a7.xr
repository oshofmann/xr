var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_DMA_MAPPING_H\">_LINUX_DMA_MAPPING_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_DMA_MAPPING_H\">_LINUX_DMA_MAPPING_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#device\">device</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#err\">err</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#dma\">dma</a>-<a class=\"id\" href=\"#attrs\">attrs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#scatterlist\">scatterlist</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* These definitions mirror those in pci.h, so they can be used</span>", 
"<span class=\"comment\"> * interchangeably with their PCI_ counterparts */</span>", 
"enum <a class=\"id\" href=\"#dma_data_direction\">dma_data_direction</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DMA_BIDIRECTIONAL\">DMA_BIDIRECTIONAL</a> = 0,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DMA_TO_DEVICE\">DMA_TO_DEVICE</a> = 1,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DMA_FROM_DEVICE\">DMA_FROM_DEVICE</a> = 2,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DMA_NONE\">DMA_NONE</a> = 3,", 
"};", 
"", 
"struct <a class=\"id\" href=\"#dma_map_ops\">dma_map_ops</a> {", 
"<span class=\"ts\"/>void* (*<a class=\"id\" href=\"#alloc_coherent\">alloc_coherent</a>)(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dma_addr_t\">dma_addr_t</a> *<a class=\"id\" href=\"#dma_handle\">dma_handle</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp\">gfp</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#free_coherent\">free_coherent</a>)(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      void *<a class=\"id\" href=\"#vaddr\">vaddr</a>, <a class=\"id\" href=\"#dma_addr_t\">dma_addr_t</a> <a class=\"id\" href=\"#dma_handle\">dma_handle</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dma_addr_t\">dma_addr_t</a> (*<a class=\"id\" href=\"#map_page\">map_page</a>)(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned long <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       enum <a class=\"id\" href=\"#dma_data_direction\">dma_data_direction</a> <a class=\"id\" href=\"#dir\">dir</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#dma_attrs\">dma_attrs</a> *<a class=\"id\" href=\"#attrs\">attrs</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#unmap_page\">unmap_page</a>)(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#dma_addr_t\">dma_addr_t</a> <a class=\"id\" href=\"#dma_handle\">dma_handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>, enum <a class=\"id\" href=\"#dma_data_direction\">dma_data_direction</a> <a class=\"id\" href=\"#dir\">dir</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#dma_attrs\">dma_attrs</a> *<a class=\"id\" href=\"#attrs\">attrs</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#map_sg\">map_sg</a>)(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#sg\">sg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      int <a class=\"id\" href=\"#nents\">nents</a>, enum <a class=\"id\" href=\"#dma_data_direction\">dma_data_direction</a> <a class=\"id\" href=\"#dir\">dir</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#dma_attrs\">dma_attrs</a> *<a class=\"id\" href=\"#attrs\">attrs</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#unmap_sg\">unmap_sg</a>)(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#sg\">sg</a>, int <a class=\"id\" href=\"#nents\">nents</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> enum <a class=\"id\" href=\"#dma_data_direction\">dma_data_direction</a> <a class=\"id\" href=\"#dir\">dir</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#dma_attrs\">dma_attrs</a> *<a class=\"id\" href=\"#attrs\">attrs</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#sync_single_for_cpu\">sync_single_for_cpu</a>)(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#dma_addr_t\">dma_addr_t</a> <a class=\"id\" href=\"#dma_handle\">dma_handle</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    enum <a class=\"id\" href=\"#dma_data_direction\">dma_data_direction</a> <a class=\"id\" href=\"#dir\">dir</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#sync_single_for_device\">sync_single_for_device</a>)(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#dma_addr_t\">dma_addr_t</a> <a class=\"id\" href=\"#dma_handle\">dma_handle</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       enum <a class=\"id\" href=\"#dma_data_direction\">dma_data_direction</a> <a class=\"id\" href=\"#dir\">dir</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#sync_sg_for_cpu\">sync_sg_for_cpu</a>)(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#sg\">sg</a>, int <a class=\"id\" href=\"#nents\">nents</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>enum <a class=\"id\" href=\"#dma_data_direction\">dma_data_direction</a> <a class=\"id\" href=\"#dir\">dir</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#sync_sg_for_device\">sync_sg_for_device</a>)(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#sg\">sg</a>, int <a class=\"id\" href=\"#nents\">nents</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   enum <a class=\"id\" href=\"#dma_data_direction\">dma_data_direction</a> <a class=\"id\" href=\"#dir\">dir</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#mapping_error\">mapping_error</a>)(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#dma_addr_t\">dma_addr_t</a> <a class=\"id\" href=\"#dma_addr\">dma_addr</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#dma_supported\">dma_supported</a>)(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#set_dma_mask\">set_dma_mask</a>)(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#is_phys\">is_phys</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DMA_BIT_MASK\">DMA_BIT_MASK</a>(<a class=\"id\" href=\"#n\">n</a>)<span class=\"ts\"/>(((<a class=\"id\" href=\"#n\">n</a>) == 64) ? ~0ULL : ((1ULL<<(<a class=\"id\" href=\"#n\">n</a>))-1))", 
"", 
"typedef <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#DMA_nnBIT_MASK\">DMA_nnBIT_MASK</a> <a class=\"id\" href=\"#__deprecated\">__deprecated</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * NOTE: do not use the below macros in new code and do not add new definitions</span>", 
"<span class=\"comment\"> * here.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Instead, just open-code DMA_BIT_MASK(n) within your driver</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DMA_64BIT_MASK\">DMA_64BIT_MASK</a><span class=\"ts\"/>(<a class=\"id\" href=\"#DMA_nnBIT_MASK\">DMA_nnBIT_MASK</a>)<a class=\"id\" href=\"#DMA_BIT_MASK\">DMA_BIT_MASK</a>(64)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DMA_48BIT_MASK\">DMA_48BIT_MASK</a><span class=\"ts\"/>(<a class=\"id\" href=\"#DMA_nnBIT_MASK\">DMA_nnBIT_MASK</a>)<a class=\"id\" href=\"#DMA_BIT_MASK\">DMA_BIT_MASK</a>(48)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DMA_47BIT_MASK\">DMA_47BIT_MASK</a><span class=\"ts\"/>(<a class=\"id\" href=\"#DMA_nnBIT_MASK\">DMA_nnBIT_MASK</a>)<a class=\"id\" href=\"#DMA_BIT_MASK\">DMA_BIT_MASK</a>(47)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DMA_40BIT_MASK\">DMA_40BIT_MASK</a><span class=\"ts\"/>(<a class=\"id\" href=\"#DMA_nnBIT_MASK\">DMA_nnBIT_MASK</a>)<a class=\"id\" href=\"#DMA_BIT_MASK\">DMA_BIT_MASK</a>(40)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DMA_39BIT_MASK\">DMA_39BIT_MASK</a><span class=\"ts\"/>(<a class=\"id\" href=\"#DMA_nnBIT_MASK\">DMA_nnBIT_MASK</a>)<a class=\"id\" href=\"#DMA_BIT_MASK\">DMA_BIT_MASK</a>(39)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DMA_35BIT_MASK\">DMA_35BIT_MASK</a><span class=\"ts\"/>(<a class=\"id\" href=\"#DMA_nnBIT_MASK\">DMA_nnBIT_MASK</a>)<a class=\"id\" href=\"#DMA_BIT_MASK\">DMA_BIT_MASK</a>(35)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DMA_32BIT_MASK\">DMA_32BIT_MASK</a><span class=\"ts\"/>(<a class=\"id\" href=\"#DMA_nnBIT_MASK\">DMA_nnBIT_MASK</a>)<a class=\"id\" href=\"#DMA_BIT_MASK\">DMA_BIT_MASK</a>(32)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DMA_31BIT_MASK\">DMA_31BIT_MASK</a><span class=\"ts\"/>(<a class=\"id\" href=\"#DMA_nnBIT_MASK\">DMA_nnBIT_MASK</a>)<a class=\"id\" href=\"#DMA_BIT_MASK\">DMA_BIT_MASK</a>(31)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DMA_30BIT_MASK\">DMA_30BIT_MASK</a><span class=\"ts\"/>(<a class=\"id\" href=\"#DMA_nnBIT_MASK\">DMA_nnBIT_MASK</a>)<a class=\"id\" href=\"#DMA_BIT_MASK\">DMA_BIT_MASK</a>(30)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DMA_29BIT_MASK\">DMA_29BIT_MASK</a><span class=\"ts\"/>(<a class=\"id\" href=\"#DMA_nnBIT_MASK\">DMA_nnBIT_MASK</a>)<a class=\"id\" href=\"#DMA_BIT_MASK\">DMA_BIT_MASK</a>(29)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DMA_28BIT_MASK\">DMA_28BIT_MASK</a><span class=\"ts\"/>(<a class=\"id\" href=\"#DMA_nnBIT_MASK\">DMA_nnBIT_MASK</a>)<a class=\"id\" href=\"#DMA_BIT_MASK\">DMA_BIT_MASK</a>(28)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DMA_24BIT_MASK\">DMA_24BIT_MASK</a><span class=\"ts\"/>(<a class=\"id\" href=\"#DMA_nnBIT_MASK\">DMA_nnBIT_MASK</a>)<a class=\"id\" href=\"#DMA_BIT_MASK\">DMA_BIT_MASK</a>(24)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DMA_MASK_NONE\">DMA_MASK_NONE</a><span class=\"ts\"/>0x0ULL", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#valid_dma_direction\">valid_dma_direction</a>(int <a class=\"id\" href=\"#dma_direction\">dma_direction</a>)", 
"{", 
"<span class=\"ts\"/>return ((<a class=\"id\" href=\"#dma_direction\">dma_direction</a> == <a class=\"id\" href=\"#DMA_BIDIRECTIONAL\">DMA_BIDIRECTIONAL</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#dma_direction\">dma_direction</a> == <a class=\"id\" href=\"#DMA_TO_DEVICE\">DMA_TO_DEVICE</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#dma_direction\">dma_direction</a> == <a class=\"id\" href=\"#DMA_FROM_DEVICE\">DMA_FROM_DEVICE</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#is_device_dma_capable\">is_device_dma_capable</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dma_mask\">dma_mask</a> != <a class=\"id\" href=\"#NULL\">NULL</a> && *<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dma_mask\">dma_mask</a> != <a class=\"id\" href=\"#DMA_MASK_NONE\">DMA_MASK_NONE</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HAS_DMA\">CONFIG_HAS_DMA</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#dma\">dma</a>-<a class=\"id\" href=\"#mapping\">mapping</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#else", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>-<a class=\"id\" href=\"#generic\">generic</a>/<a class=\"id\" href=\"#dma\">dma</a>-<a class=\"id\" href=\"#mapping\">mapping</a>-<a class=\"id\" href=\"#broken\">broken</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#dma_get_mask\">dma_get_mask</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a> && <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dma_mask\">dma_mask</a> && *<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dma_mask\">dma_mask</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return *<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dma_mask\">dma_mask</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#DMA_BIT_MASK\">DMA_BIT_MASK</a>(32);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#ARCH_HAS_DMA_SET_COHERENT_MASK\">ARCH_HAS_DMA_SET_COHERENT_MASK</a>", 
"int <a class=\"id\" href=\"#dma_set_coherent_mask\">dma_set_coherent_mask</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#mask\">mask</a>);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#dma_set_coherent_mask\">dma_set_coherent_mask</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dma_supported\">dma_supported</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#mask\">mask</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#coherent_dma_mask\">coherent_dma_mask</a> = <a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"extern <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#dma_get_required_mask\">dma_get_required_mask</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#dma_get_max_seg_size\">dma_get_max_seg_size</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dma_parms\">dma_parms</a> ? <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dma_parms\">dma_parms</a>-><a class=\"id\" href=\"#max_segment_size\">max_segment_size</a> : 65536;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#dma_set_max_seg_size\">dma_set_max_seg_size</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dma_parms\">dma_parms</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dma_parms\">dma_parms</a>-><a class=\"id\" href=\"#max_segment_size\">max_segment_size</a> = <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long <a class=\"id\" href=\"#dma_get_seg_boundary\">dma_get_seg_boundary</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dma_parms\">dma_parms</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dma_parms\">dma_parms</a>-><a class=\"id\" href=\"#segment_boundary_mask\">segment_boundary_mask</a> : 0xffffffff;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#dma_set_seg_boundary\">dma_set_seg_boundary</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, unsigned long <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dma_parms\">dma_parms</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dma_parms\">dma_parms</a>-><a class=\"id\" href=\"#segment_boundary_mask\">segment_boundary_mask</a> = <a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HAS_DMA\">CONFIG_HAS_DMA</a>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#dma_get_cache_alignment\">dma_get_cache_alignment</a>(void)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#ARCH_DMA_MINALIGN\">ARCH_DMA_MINALIGN</a>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ARCH_DMA_MINALIGN\">ARCH_DMA_MINALIGN</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return 1;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/* flags for the coherent memory api */</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#DMA_MEMORY_MAP\">DMA_MEMORY_MAP</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0x01", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DMA_MEMORY_IO\">DMA_MEMORY_IO</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0x02", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DMA_MEMORY_INCLUDES_CHILDREN\">DMA_MEMORY_INCLUDES_CHILDREN</a><span class=\"ts\"/>0x04", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DMA_MEMORY_EXCLUSIVE\">DMA_MEMORY_EXCLUSIVE</a><span class=\"ts\"/><span class=\"ts\"/>0x08", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#ARCH_HAS_DMA_DECLARE_COHERENT_MEMORY\">ARCH_HAS_DMA_DECLARE_COHERENT_MEMORY</a>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int", 
"<a class=\"id\" href=\"#dma_declare_coherent_memory\">dma_declare_coherent_memory</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#dma_addr_t\">dma_addr_t</a> <a class=\"id\" href=\"#bus_addr\">bus_addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#dma_addr_t\">dma_addr_t</a> <a class=\"id\" href=\"#device_addr\">device_addr</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>, int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void", 
"<a class=\"id\" href=\"#dma_release_declared_memory\">dma_release_declared_memory</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"}", 
];
xr_frag_insert('l/82/20302a701dd443b0a097c53c225f371313c2a7.xr', __xr_tmp);
