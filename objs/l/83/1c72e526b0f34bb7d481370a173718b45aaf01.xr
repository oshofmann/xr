var __xr_tmp = [
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Disable interrupts from this port</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#ier\">ier</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#serial_outp\">serial_outp</a>(<a class=\"id\" href=\"#up\">up</a>, <a class=\"id\" href=\"#UART_IER\">UART_IER</a>, 0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#UPF_FOURPORT\">UPF_FOURPORT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* reset interrupts on the AST Fourport board */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inb\">inb</a>((<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#iobase\">iobase</a> &amp; 0xfe0) | 0x1f);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#mctrl\">mctrl</a> |= <a class=\"id\" href=\"#TIOCM_OUT1\">TIOCM_OUT1</a>;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#mctrl\">mctrl</a> &= ~<a class=\"id\" href=\"#TIOCM_OUT2\">TIOCM_OUT2</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#serial8250_set_mctrl\">serial8250_set_mctrl</a>(&amp;<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#mctrl\">mctrl</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Disable break condition and FIFOs</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#serial_out\">serial_out</a>(<a class=\"id\" href=\"#up\">up</a>, <a class=\"id\" href=\"#UART_LCR\">UART_LCR</a>, <a class=\"id\" href=\"#serial_inp\">serial_inp</a>(<a class=\"id\" href=\"#up\">up</a>, <a class=\"id\" href=\"#UART_LCR\">UART_LCR</a>) &amp; ~<a class=\"id\" href=\"#UART_LCR_SBC\">UART_LCR_SBC</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#serial8250_clear_fifos\">serial8250_clear_fifos</a>(<a class=\"id\" href=\"#up\">up</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SERIAL_8250_RSA\">CONFIG_SERIAL_8250_RSA</a>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Reset the RSA board back to 115kbps compat mode.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disable_rsa\">disable_rsa</a>(<a class=\"id\" href=\"#up\">up</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Read data port to reset things, and then unlink from</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the IRQ chain.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>(void) <a class=\"id\" href=\"#serial_in\">serial_in</a>(<a class=\"id\" href=\"#up\">up</a>, <a class=\"id\" href=\"#UART_RX\">UART_RX</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#del_timer_sync\">del_timer_sync</a>(&amp;<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#timer\">timer</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#function\">function</a> = <a class=\"id\" href=\"#serial8250_timeout\">serial8250_timeout</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_real_interrupt\">is_real_interrupt</a>(<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#irq\">irq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#serial_unlink_irq_chain\">serial_unlink_irq_chain</a>(<a class=\"id\" href=\"#up\">up</a>);", 
"}", 
"", 
"static unsigned int <a class=\"id\" href=\"#serial8250_get_divisor\">serial8250_get_divisor</a>(struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>, unsigned int <a class=\"id\" href=\"#baud\">baud</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#quot\">quot</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Handle magic divisors for baud rates above baud_base on</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * SMSC SuperIO chips.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#UPF_MAGIC_MULTIPLIER\">UPF_MAGIC_MULTIPLIER</a>) &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#baud\">baud</a> == (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#uartclk\">uartclk</a>/4))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#quot\">quot</a> = 0x8001;", 
"<span class=\"ts\"/>else if ((<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#UPF_MAGIC_MULTIPLIER\">UPF_MAGIC_MULTIPLIER</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#baud\">baud</a> == (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#uartclk\">uartclk</a>/8))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#quot\">quot</a> = 0x8002;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#quot\">quot</a> = <a class=\"id\" href=\"#uart_get_divisor\">uart_get_divisor</a>(<a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#baud\">baud</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#quot\">quot</a>;", 
"}", 
"", 
"void", 
"<a class=\"id\" href=\"#serial8250_do_set_termios\">serial8250_do_set_termios</a>(struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>, struct <a class=\"id\" href=\"#ktermios\">ktermios</a> *<a class=\"id\" href=\"#termios\">termios</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>          struct <a class=\"id\" href=\"#ktermios\">ktermios</a> *<a class=\"id\" href=\"#old\">old</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_8250_port\">uart_8250_port</a> *<a class=\"id\" href=\"#up\">up</a> = (struct <a class=\"id\" href=\"#uart_8250_port\">uart_8250_port</a> *)<a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#cval\">cval</a>, <a class=\"id\" href=\"#fcr\">fcr</a> = 0;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#baud\">baud</a>, <a class=\"id\" href=\"#quot\">quot</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#termios\">termios</a>-><a class=\"id\" href=\"#c_cflag\">c_cflag</a> &amp; <a class=\"id\" href=\"#CSIZE\">CSIZE</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CS5\">CS5</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cval\">cval</a> = <a class=\"id\" href=\"#UART_LCR_WLEN5\">UART_LCR_WLEN5</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CS6\">CS6</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cval\">cval</a> = <a class=\"id\" href=\"#UART_LCR_WLEN6\">UART_LCR_WLEN6</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CS7\">CS7</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cval\">cval</a> = <a class=\"id\" href=\"#UART_LCR_WLEN7\">UART_LCR_WLEN7</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CS8\">CS8</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cval\">cval</a> = <a class=\"id\" href=\"#UART_LCR_WLEN8\">UART_LCR_WLEN8</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#termios\">termios</a>-><a class=\"id\" href=\"#c_cflag\">c_cflag</a> &amp; <a class=\"id\" href=\"#CSTOPB\">CSTOPB</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cval\">cval</a> |= <a class=\"id\" href=\"#UART_LCR_STOP\">UART_LCR_STOP</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#termios\">termios</a>-><a class=\"id\" href=\"#c_cflag\">c_cflag</a> &amp; <a class=\"id\" href=\"#PARENB\">PARENB</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cval\">cval</a> |= <a class=\"id\" href=\"#UART_LCR_PARITY\">UART_LCR_PARITY</a>;", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#termios\">termios</a>-><a class=\"id\" href=\"#c_cflag\">c_cflag</a> &amp; <a class=\"id\" href=\"#PARODD\">PARODD</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cval\">cval</a> |= <a class=\"id\" href=\"#UART_LCR_EPAR\">UART_LCR_EPAR</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CMSPAR\">CMSPAR</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#termios\">termios</a>-><a class=\"id\" href=\"#c_cflag\">c_cflag</a> &amp; <a class=\"id\" href=\"#CMSPAR\">CMSPAR</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cval\">cval</a> |= <a class=\"id\" href=\"#UART_LCR_SPAR\">UART_LCR_SPAR</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Ask the core to calculate the divisor for us.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#baud\">baud</a> = <a class=\"id\" href=\"#uart_get_baud_rate\">uart_get_baud_rate</a>(<a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#termios\">termios</a>, <a class=\"id\" href=\"#old\">old</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#uartclk\">uartclk</a> / 16 / 0xffff,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#uartclk\">uartclk</a> / 16);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#quot\">quot</a> = <a class=\"id\" href=\"#serial8250_get_divisor\">serial8250_get_divisor</a>(<a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#baud\">baud</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Oxford Semi 952 rev B workaround</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#bugs\">bugs</a> &amp; <a class=\"id\" href=\"#UART_BUG_QUOT\">UART_BUG_QUOT</a> && (<a class=\"id\" href=\"#quot\">quot</a> &amp; 0xff) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#quot\">quot</a>++;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#capabilities\">capabilities</a> &amp; <a class=\"id\" href=\"#UART_CAP_FIFO\">UART_CAP_FIFO</a> && <a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#fifosize\">fifosize</a> &gt; 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#baud\">baud</a> &lt; 2400)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fcr\">fcr</a> = <a class=\"id\" href=\"#UART_FCR_ENABLE_FIFO\">UART_FCR_ENABLE_FIFO</a> | <a class=\"id\" href=\"#UART_FCR_TRIGGER_1\">UART_FCR_TRIGGER_1</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fcr\">fcr</a> = <a class=\"id\" href=\"#uart_config\">uart_config</a>[<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#type\">type</a>].<a class=\"id\" href=\"#fcr\">fcr</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * MCR-based auto flow control.  When AFE is enabled, RTS will be</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * deasserted when the receive FIFO contains more characters than</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the trigger, or the MCR RTS bit is cleared.  In the case where</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the remote UART is not using CTS auto flow control, we must</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * have sufficient FIFO entries for the latency of the remote</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * UART to respond.  IOW, at least 32 bytes of FIFO.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#capabilities\">capabilities</a> &amp; <a class=\"id\" href=\"#UART_CAP_AFE\">UART_CAP_AFE</a> && <a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#fifosize\">fifosize</a> >= 32) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#mcr\">mcr</a> &= ~<a class=\"id\" href=\"#UART_MCR_AFE\">UART_MCR_AFE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#termios\">termios</a>-><a class=\"id\" href=\"#c_cflag\">c_cflag</a> &amp; <a class=\"id\" href=\"#CRTSCTS\">CRTSCTS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#mcr\">mcr</a> |= <a class=\"id\" href=\"#UART_MCR_AFE\">UART_MCR_AFE</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Ok, we're now changing the port state.  Do it with</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * interrupts disabled.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Update the per-port timeout.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uart_update_timeout\">uart_update_timeout</a>(<a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#termios\">termios</a>-><a class=\"id\" href=\"#c_cflag\">c_cflag</a>, <a class=\"id\" href=\"#baud\">baud</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#read_status_mask\">read_status_mask</a> = <a class=\"id\" href=\"#UART_LSR_OE\">UART_LSR_OE</a> | <a class=\"id\" href=\"#UART_LSR_THRE\">UART_LSR_THRE</a> | <a class=\"id\" href=\"#UART_LSR_DR\">UART_LSR_DR</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#termios\">termios</a>-><a class=\"id\" href=\"#c_iflag\">c_iflag</a> &amp; <a class=\"id\" href=\"#INPCK\">INPCK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#read_status_mask\">read_status_mask</a> |= <a class=\"id\" href=\"#UART_LSR_FE\">UART_LSR_FE</a> | <a class=\"id\" href=\"#UART_LSR_PE\">UART_LSR_PE</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#termios\">termios</a>-><a class=\"id\" href=\"#c_iflag\">c_iflag</a> &amp; (<a class=\"id\" href=\"#BRKINT\">BRKINT</a> | <a class=\"id\" href=\"#PARMRK\">PARMRK</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#read_status_mask\">read_status_mask</a> |= <a class=\"id\" href=\"#UART_LSR_BI\">UART_LSR_BI</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Characteres to ignore</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#ignore_status_mask\">ignore_status_mask</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#termios\">termios</a>-><a class=\"id\" href=\"#c_iflag\">c_iflag</a> &amp; <a class=\"id\" href=\"#IGNPAR\">IGNPAR</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#ignore_status_mask\">ignore_status_mask</a> |= <a class=\"id\" href=\"#UART_LSR_PE\">UART_LSR_PE</a> | <a class=\"id\" href=\"#UART_LSR_FE\">UART_LSR_FE</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#termios\">termios</a>-><a class=\"id\" href=\"#c_iflag\">c_iflag</a> &amp; <a class=\"id\" href=\"#IGNBRK\">IGNBRK</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#ignore_status_mask\">ignore_status_mask</a> |= <a class=\"id\" href=\"#UART_LSR_BI\">UART_LSR_BI</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If we're ignoring parity and break indicators,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * ignore overruns too (for real raw support).</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#termios\">termios</a>-><a class=\"id\" href=\"#c_iflag\">c_iflag</a> &amp; <a class=\"id\" href=\"#IGNPAR\">IGNPAR</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#ignore_status_mask\">ignore_status_mask</a> |= <a class=\"id\" href=\"#UART_LSR_OE\">UART_LSR_OE</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ignore all characters if CREAD is not set</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#termios\">termios</a>-><a class=\"id\" href=\"#c_cflag\">c_cflag</a> &amp; <a class=\"id\" href=\"#CREAD\">CREAD</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#ignore_status_mask\">ignore_status_mask</a> |= <a class=\"id\" href=\"#UART_LSR_DR\">UART_LSR_DR</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * CTS flow control flag and modem status interrupts</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#ier\">ier</a> &= ~<a class=\"id\" href=\"#UART_IER_MSI\">UART_IER_MSI</a>;", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#bugs\">bugs</a> &amp; <a class=\"id\" href=\"#UART_BUG_NOMSR\">UART_BUG_NOMSR</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#UART_ENABLE_MS\">UART_ENABLE_MS</a>(&amp;<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#termios\">termios</a>-><a class=\"id\" href=\"#c_cflag\">c_cflag</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#ier\">ier</a> |= <a class=\"id\" href=\"#UART_IER_MSI\">UART_IER_MSI</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#capabilities\">capabilities</a> &amp; <a class=\"id\" href=\"#UART_CAP_UUE\">UART_CAP_UUE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#ier\">ier</a> |= <a class=\"id\" href=\"#UART_IER_UUE\">UART_IER_UUE</a> | <a class=\"id\" href=\"#UART_IER_RTOIE\">UART_IER_RTOIE</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#serial_out\">serial_out</a>(<a class=\"id\" href=\"#up\">up</a>, <a class=\"id\" href=\"#UART_IER\">UART_IER</a>, <a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#ier\">ier</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#capabilities\">capabilities</a> &amp; <a class=\"id\" href=\"#UART_CAP_EFR\">UART_CAP_EFR</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#efr\">efr</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * TI16C752/Startech hardware flow control.  FIXME:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * - TI16C752 requires control thresholds to be set.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * - UART_MCR_RTS is ineffective if auto-RTS mode is enabled.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#termios\">termios</a>-><a class=\"id\" href=\"#c_cflag\">c_cflag</a> &amp; <a class=\"id\" href=\"#CRTSCTS\">CRTSCTS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#efr\">efr</a> |= <a class=\"id\" href=\"#UART_EFR_CTS\">UART_EFR_CTS</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#serial_outp\">serial_outp</a>(<a class=\"id\" href=\"#up\">up</a>, <a class=\"id\" href=\"#UART_LCR\">UART_LCR</a>, 0xBF);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#serial_outp\">serial_outp</a>(<a class=\"id\" href=\"#up\">up</a>, <a class=\"id\" href=\"#UART_EFR\">UART_EFR</a>, <a class=\"id\" href=\"#efr\">efr</a>);", 
"<span class=\"ts\"/>}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_ARCH_OMAP\">CONFIG_ARCH_OMAP</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* Workaround to enable 115200 baud on OMAP1510 internal ports */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_is_omap1510\">cpu_is_omap1510</a>() && <a class=\"id\" href=\"#is_omap_port\">is_omap_port</a>(<a class=\"id\" href=\"#up\">up</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#baud\">baud</a> == 115200) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#quot\">quot</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#serial_out\">serial_out</a>(<a class=\"id\" href=\"#up\">up</a>, <a class=\"id\" href=\"#UART_OMAP_OSC_12M_SEL\">UART_OMAP_OSC_12M_SEL</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#serial_out\">serial_out</a>(<a class=\"id\" href=\"#up\">up</a>, <a class=\"id\" href=\"#UART_OMAP_OSC_12M_SEL\">UART_OMAP_OSC_12M_SEL</a>, 0);", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#capabilities\">capabilities</a> &amp; <a class=\"id\" href=\"#UART_NATSEMI\">UART_NATSEMI</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Switch to bank 2 not bank 1, to avoid resetting EXCR2 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#serial_outp\">serial_outp</a>(<a class=\"id\" href=\"#up\">up</a>, <a class=\"id\" href=\"#UART_LCR\">UART_LCR</a>, 0xe0);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#serial_outp\">serial_outp</a>(<a class=\"id\" href=\"#up\">up</a>, <a class=\"id\" href=\"#UART_LCR\">UART_LCR</a>, <a class=\"id\" href=\"#cval\">cval</a> | <a class=\"id\" href=\"#UART_LCR_DLAB\">UART_LCR_DLAB</a>);<span class=\"comment\">/* set DLAB */</span>", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#serial_dl_write\">serial_dl_write</a>(<a class=\"id\" href=\"#up\">up</a>, <a class=\"id\" href=\"#quot\">quot</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * LCR DLAB must be set to enable 64-byte FIFO mode. If the FCR</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * is written without DLAB set, this mode will be disabled.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#PORT_16750\">PORT_16750</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#serial_outp\">serial_outp</a>(<a class=\"id\" href=\"#up\">up</a>, <a class=\"id\" href=\"#UART_FCR\">UART_FCR</a>, <a class=\"id\" href=\"#fcr\">fcr</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#serial_outp\">serial_outp</a>(<a class=\"id\" href=\"#up\">up</a>, <a class=\"id\" href=\"#UART_LCR\">UART_LCR</a>, <a class=\"id\" href=\"#cval\">cval</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* reset DLAB */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#lcr\">lcr</a> = <a class=\"id\" href=\"#cval\">cval</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Save LCR */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#PORT_16750\">PORT_16750</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fcr\">fcr</a> &amp; <a class=\"id\" href=\"#UART_FCR_ENABLE_FIFO\">UART_FCR_ENABLE_FIFO</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* emulated UARTs (Lucent Venus 167x) need two steps */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#serial_outp\">serial_outp</a>(<a class=\"id\" href=\"#up\">up</a>, <a class=\"id\" href=\"#UART_FCR\">UART_FCR</a>, <a class=\"id\" href=\"#UART_FCR_ENABLE_FIFO\">UART_FCR_ENABLE_FIFO</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#serial_outp\">serial_outp</a>(<a class=\"id\" href=\"#up\">up</a>, <a class=\"id\" href=\"#UART_FCR\">UART_FCR</a>, <a class=\"id\" href=\"#fcr\">fcr</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* set fcr */</span>", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#serial8250_set_mctrl\">serial8250_set_mctrl</a>(&amp;<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#mctrl\">mctrl</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Don't rewrite B0 */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty_termios_baud_rate\">tty_termios_baud_rate</a>(<a class=\"id\" href=\"#termios\">termios</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_termios_encode_baud_rate\">tty_termios_encode_baud_rate</a>(<a class=\"id\" href=\"#termios\">termios</a>, <a class=\"id\" href=\"#baud\">baud</a>, <a class=\"id\" href=\"#baud\">baud</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#serial8250_do_set_termios\">serial8250_do_set_termios</a>);", 
"", 
"static void", 
"<a class=\"id\" href=\"#serial8250_set_termios\">serial8250_set_termios</a>(struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>, struct <a class=\"id\" href=\"#ktermios\">ktermios</a> *<a class=\"id\" href=\"#termios\">termios</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#ktermios\">ktermios</a> *<a class=\"id\" href=\"#old\">old</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#set_termios\">set_termios</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#set_termios\">set_termios</a>(<a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#termios\">termios</a>, <a class=\"id\" href=\"#old\">old</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#serial8250_do_set_termios\">serial8250_do_set_termios</a>(<a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#termios\">termios</a>, <a class=\"id\" href=\"#old\">old</a>);", 
"}", 
"", 
"static void", 
"<a class=\"id\" href=\"#serial8250_set_ldisc\">serial8250_set_ldisc</a>(struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>, int <a class=\"id\" href=\"#new\">new</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new\">new</a> == <a class=\"id\" href=\"#N_PPS\">N_PPS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#UPF_HARDPPS_CD\">UPF_HARDPPS_CD</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#serial8250_enable_ms\">serial8250_enable_ms</a>(<a class=\"id\" href=\"#port\">port</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#UPF_HARDPPS_CD\">UPF_HARDPPS_CD</a>;", 
"}", 
"", 
"static void", 
"<a class=\"id\" href=\"#serial8250_pm\">serial8250_pm</a>(struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>, unsigned int <a class=\"id\" href=\"#state\">state</a>,", 
"<span class=\"ts\"/>      unsigned int <a class=\"id\" href=\"#oldstate\">oldstate</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_8250_port\">uart_8250_port</a> *<a class=\"id\" href=\"#p\">p</a> = (struct <a class=\"id\" href=\"#uart_8250_port\">uart_8250_port</a> *)<a class=\"id\" href=\"#port\">port</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#serial8250_set_sleep\">serial8250_set_sleep</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#state\">state</a> != 0);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#pm\">pm</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#pm\">pm</a>(<a class=\"id\" href=\"#port\">port</a>, <a class=\"id\" href=\"#state\">state</a>, <a class=\"id\" href=\"#oldstate\">oldstate</a>);", 
"}", 
"", 
"static unsigned int <a class=\"id\" href=\"#serial8250_port_size\">serial8250_port_size</a>(struct <a class=\"id\" href=\"#uart_8250_port\">uart_8250_port</a> *<a class=\"id\" href=\"#pt\">pt</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pt\">pt</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#iotype\">iotype</a> == <a class=\"id\" href=\"#UPIO_AU\">UPIO_AU</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0x1000;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_ARCH_OMAP\">CONFIG_ARCH_OMAP</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_omap_port\">is_omap_port</a>(<a class=\"id\" href=\"#pt\">pt</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0x16 << <a class=\"id\" href=\"#pt\">pt</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#regshift\">regshift</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return 8 << <a class=\"id\" href=\"#pt\">pt</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#regshift\">regshift</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Resource handling.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#serial8250_request_std_resource\">serial8250_request_std_resource</a>(struct <a class=\"id\" href=\"#uart_8250_port\">uart_8250_port</a> *<a class=\"id\" href=\"#up\">up</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#serial8250_port_size\">serial8250_port_size</a>(<a class=\"id\" href=\"#up\">up</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#iotype\">iotype</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#UPIO_AU\">UPIO_AU</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#UPIO_TSI\">UPIO_TSI</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#UPIO_MEM32\">UPIO_MEM32</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#UPIO_MEM\">UPIO_MEM</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#UPIO_DWAPB\">UPIO_DWAPB</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#mapbase\">mapbase</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#request_mem_region\">request_mem_region</a>(<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#mapbase\">mapbase</a>, <a class=\"id\" href=\"#size\">size</a>, \"serial\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#UPF_IOREMAP\">UPF_IOREMAP</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#membase\">membase</a> = <a class=\"id\" href=\"#ioremap_nocache\">ioremap_nocache</a>(<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#mapbase\">mapbase</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#membase\">membase</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#release_mem_region\">release_mem_region</a>(<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#mapbase\">mapbase</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#UPIO_HUB6\">UPIO_HUB6</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#UPIO_PORT\">UPIO_PORT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#request_region\">request_region</a>(<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#iobase\">iobase</a>, <a class=\"id\" href=\"#size\">size</a>, \"serial\"))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#serial8250_release_std_resource\">serial8250_release_std_resource</a>(struct <a class=\"id\" href=\"#uart_8250_port\">uart_8250_port</a> *<a class=\"id\" href=\"#up\">up</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#serial8250_port_size\">serial8250_port_size</a>(<a class=\"id\" href=\"#up\">up</a>);", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#iotype\">iotype</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#UPIO_AU\">UPIO_AU</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#UPIO_TSI\">UPIO_TSI</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#UPIO_MEM32\">UPIO_MEM32</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#UPIO_MEM\">UPIO_MEM</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#UPIO_DWAPB\">UPIO_DWAPB</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#mapbase\">mapbase</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#UPF_IOREMAP\">UPF_IOREMAP</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iounmap\">iounmap</a>(<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#membase\">membase</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#membase\">membase</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#release_mem_region\">release_mem_region</a>(<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#mapbase\">mapbase</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#UPIO_HUB6\">UPIO_HUB6</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#UPIO_PORT\">UPIO_PORT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#release_region\">release_region</a>(<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#iobase\">iobase</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#serial8250_request_rsa_resource\">serial8250_request_rsa_resource</a>(struct <a class=\"id\" href=\"#uart_8250_port\">uart_8250_port</a> *<a class=\"id\" href=\"#up\">up</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#UART_RSA_BASE\">UART_RSA_BASE</a> << <a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#regshift\">regshift</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#size\">size</a> = 8 << <a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#regshift\">regshift</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#iotype\">iotype</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#UPIO_HUB6\">UPIO_HUB6</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#UPIO_PORT\">UPIO_PORT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> += <a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#iobase\">iobase</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#request_region\">request_region</a>(<a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#size\">size</a>, \"serial-rsa\"))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#serial8250_release_rsa_resource\">serial8250_release_rsa_resource</a>(struct <a class=\"id\" href=\"#uart_8250_port\">uart_8250_port</a> *<a class=\"id\" href=\"#up\">up</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#UART_RSA_BASE\">UART_RSA_BASE</a> << <a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#regshift\">regshift</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#size\">size</a> = 8 << <a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#regshift\">regshift</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#iotype\">iotype</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#UPIO_HUB6\">UPIO_HUB6</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#UPIO_PORT\">UPIO_PORT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#release_region\">release_region</a>(<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#iobase\">iobase</a> + <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#serial8250_release_port\">serial8250_release_port</a>(struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_8250_port\">uart_8250_port</a> *<a class=\"id\" href=\"#up\">up</a> = (struct <a class=\"id\" href=\"#uart_8250_port\">uart_8250_port</a> *)<a class=\"id\" href=\"#port\">port</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#serial8250_release_std_resource\">serial8250_release_std_resource</a>(<a class=\"id\" href=\"#up\">up</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#PORT_RSA\">PORT_RSA</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#serial8250_release_rsa_resource\">serial8250_release_rsa_resource</a>(<a class=\"id\" href=\"#up\">up</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#serial8250_request_port\">serial8250_request_port</a>(struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_8250_port\">uart_8250_port</a> *<a class=\"id\" href=\"#up\">up</a> = (struct <a class=\"id\" href=\"#uart_8250_port\">uart_8250_port</a> *)<a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#serial8250_request_std_resource\">serial8250_request_std_resource</a>(<a class=\"id\" href=\"#up\">up</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> == 0 && <a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#PORT_RSA\">PORT_RSA</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#serial8250_request_rsa_resource\">serial8250_request_rsa_resource</a>(<a class=\"id\" href=\"#up\">up</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#serial8250_release_std_resource\">serial8250_release_std_resource</a>(<a class=\"id\" href=\"#up\">up</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#serial8250_config_port\">serial8250_config_port</a>(struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>, int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#uart_8250_port\">uart_8250_port</a> *<a class=\"id\" href=\"#up\">up</a> = (struct <a class=\"id\" href=\"#uart_8250_port\">uart_8250_port</a> *)<a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#probeflags\">probeflags</a> = <a class=\"id\" href=\"#PROBE_ANY\">PROBE_ANY</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Find the region that we can probe for.  This in turn</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * tells us whether we can probe for the type of port.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#serial8250_request_std_resource\">serial8250_request_std_resource</a>(<a class=\"id\" href=\"#up\">up</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#serial8250_request_rsa_resource\">serial8250_request_rsa_resource</a>(<a class=\"id\" href=\"#up\">up</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#probeflags\">probeflags</a> &= ~<a class=\"id\" href=\"#PROBE_RSA\">PROBE_RSA</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#iotype\">iotype</a> != <a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#cur_iotype\">cur_iotype</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_io_from_upio\">set_io_from_upio</a>(<a class=\"id\" href=\"#port\">port</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#UART_CONFIG_TYPE\">UART_CONFIG_TYPE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#autoconfig\">autoconfig</a>(<a class=\"id\" href=\"#up\">up</a>, <a class=\"id\" href=\"#probeflags\">probeflags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* if access method is AU, it is a 16550 with a quirk */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#PORT_16550A\">PORT_16550A</a> && <a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#iotype\">iotype</a> == <a class=\"id\" href=\"#UPIO_AU\">UPIO_AU</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#bugs\">bugs</a> |= <a class=\"id\" href=\"#UART_BUG_NOMSR\">UART_BUG_NOMSR</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#PORT_UNKNOWN\">PORT_UNKNOWN</a> && <a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#UART_CONFIG_IRQ\">UART_CONFIG_IRQ</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#autoconfig_irq\">autoconfig_irq</a>(<a class=\"id\" href=\"#up\">up</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#PORT_RSA\">PORT_RSA</a> && <a class=\"id\" href=\"#probeflags\">probeflags</a> &amp; <a class=\"id\" href=\"#PROBE_RSA\">PROBE_RSA</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#serial8250_release_rsa_resource\">serial8250_release_rsa_resource</a>(<a class=\"id\" href=\"#up\">up</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#up\">up</a>-><a class=\"id\" href=\"#port\">port</a>.<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#PORT_UNKNOWN\">PORT_UNKNOWN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#serial8250_release_std_resource\">serial8250_release_std_resource</a>(<a class=\"id\" href=\"#up\">up</a>);", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#serial8250_verify_port\">serial8250_verify_port</a>(struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>, struct <a class=\"id\" href=\"#serial_struct\">serial_struct</a> *<a class=\"id\" href=\"#ser\">ser</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ser\">ser</a>-><a class=\"id\" href=\"#irq\">irq</a> >= <a class=\"id\" href=\"#nr_irqs\">nr_irqs</a> || <a class=\"id\" href=\"#ser\">ser</a>-><a class=\"id\" href=\"#irq\">irq</a> &lt; 0 ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#ser\">ser</a>-><a class=\"id\" href=\"#baud_base\">baud_base</a> &lt; 9600 || <a class=\"id\" href=\"#ser\">ser</a>-><a class=\"id\" href=\"#type\">type</a> &lt; <a class=\"id\" href=\"#PORT_UNKNOWN\">PORT_UNKNOWN</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#ser\">ser</a>-><a class=\"id\" href=\"#type\">type</a> >= <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#uart_config\">uart_config</a>) || <a class=\"id\" href=\"#ser\">ser</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#PORT_CIRRUS\">PORT_CIRRUS</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#ser\">ser</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#PORT_STARTECH\">PORT_STARTECH</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static const char *", 
"<a class=\"id\" href=\"#serial8250_type\">serial8250_type</a>(struct <a class=\"id\" href=\"#uart_port\">uart_port</a> *<a class=\"id\" href=\"#port\">port</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#type\">type</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> >= <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#uart_config\">uart_config</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = 0;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#uart_config\">uart_config</a>[<a class=\"id\" href=\"#type\">type</a>].<a class=\"id\" href=\"#name\">name</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#uart_ops\">uart_ops</a> <a class=\"id\" href=\"#serial8250_pops\">serial8250_pops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#tx_empty\">tx_empty</a><span class=\"ts\"/>= <a class=\"id\" href=\"#serial8250_tx_empty\">serial8250_tx_empty</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_mctrl\">set_mctrl</a><span class=\"ts\"/>= <a class=\"id\" href=\"#serial8250_set_mctrl\">serial8250_set_mctrl</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#get_mctrl\">get_mctrl</a><span class=\"ts\"/>= <a class=\"id\" href=\"#serial8250_get_mctrl\">serial8250_get_mctrl</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop_tx\">stop_tx</a><span class=\"ts\"/>= <a class=\"id\" href=\"#serial8250_stop_tx\">serial8250_stop_tx</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start_tx\">start_tx</a><span class=\"ts\"/>= <a class=\"id\" href=\"#serial8250_start_tx\">serial8250_start_tx</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop_rx\">stop_rx</a><span class=\"ts\"/>= <a class=\"id\" href=\"#serial8250_stop_rx\">serial8250_stop_rx</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#enable_ms\">enable_ms</a><span class=\"ts\"/>= <a class=\"id\" href=\"#serial8250_enable_ms\">serial8250_enable_ms</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#break_ctl\">break_ctl</a><span class=\"ts\"/>= <a class=\"id\" href=\"#serial8250_break_ctl\">serial8250_break_ctl</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#startup\">startup</a><span class=\"ts\"/>= <a class=\"id\" href=\"#serial8250_startup\">serial8250_startup</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#shutdown\">shutdown</a><span class=\"ts\"/>= <a class=\"id\" href=\"#serial8250_shutdown\">serial8250_shutdown</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_termios\">set_termios</a><span class=\"ts\"/>= <a class=\"id\" href=\"#serial8250_set_termios\">serial8250_set_termios</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_ldisc\">set_ldisc</a><span class=\"ts\"/>= <a class=\"id\" href=\"#serial8250_set_ldisc\">serial8250_set_ldisc</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#pm\">pm</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#serial8250_pm\">serial8250_pm</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#type\">type</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#serial8250_type\">serial8250_type</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release_port\">release_port</a><span class=\"ts\"/>= <a class=\"id\" href=\"#serial8250_release_port\">serial8250_release_port</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#request_port\">request_port</a><span class=\"ts\"/>= <a class=\"id\" href=\"#serial8250_request_port\">serial8250_request_port</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#config_port\">config_port</a><span class=\"ts\"/>= <a class=\"id\" href=\"#serial8250_config_port\">serial8250_config_port</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#verify_port\">verify_port</a><span class=\"ts\"/>= <a class=\"id\" href=\"#serial8250_verify_port\">serial8250_verify_port</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_CONSOLE_POLL\">CONFIG_CONSOLE_POLL</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#poll_get_char\">poll_get_char</a> = <a class=\"id\" href=\"#serial8250_get_poll_char\">serial8250_get_poll_char</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#poll_put_char\">poll_put_char</a> = <a class=\"id\" href=\"#serial8250_put_poll_char\">serial8250_put_poll_char</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
];
xr_frag_insert('l/83/1c72e526b0f34bb7d481370a173718b45aaf01.xr', __xr_tmp);
