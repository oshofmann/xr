var __xr_tmp = [
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#STATIC\">STATIC</a>", 
"<span class=\"comment\">/* Pre-boot environment: included */</span>", 
"", 
"<span class=\"comment\">/* prevent inclusion of _LINUX_KERNEL_H in pre-boot environment: lots</span>", 
"<span class=\"comment\"> * errors about console_printk etc... on ARM */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_KERNEL_H\">_LINUX_KERNEL_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"zlib_inflate/inftrees.c\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"zlib_inflate/inffast.c\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"zlib_inflate/inflate.c\"", 
"", 
"#else <span class=\"comment\">/* STATIC */</span>", 
"<span class=\"comment\">/* initramfs et al: linked */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#zutil\">zutil</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"zlib_inflate/inftrees.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"zlib_inflate/inffast.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"zlib_inflate/inflate.h\"", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"zlib_inflate/infutil.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* STATIC */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#decompress\">decompress</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#GZIP_IOBUF_SIZE\">GZIP_IOBUF_SIZE</a> (16*1024)", 
"", 
"static int <a class=\"id\" href=\"#nofill\">nofill</a>(void *<a class=\"id\" href=\"#buffer\">buffer</a>, unsigned int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>return -1;", 
"}", 
"", 
"<span class=\"comment\">/* Included from initramfs et al code */</span>", 
"<a class=\"id\" href=\"#STATIC\">STATIC</a> int <a class=\"id\" href=\"#INIT\">INIT</a> <a class=\"id\" href=\"#gunzip\">gunzip</a>(unsigned char *<a class=\"id\" href=\"#buf\">buf</a>, int <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       int(*<a class=\"id\" href=\"#fill\">fill</a>)(void*, unsigned int),", 
"<span class=\"ts\"/><span class=\"ts\"/>       int(*<a class=\"id\" href=\"#flush\">flush</a>)(void*, unsigned int),", 
"<span class=\"ts\"/><span class=\"ts\"/>       unsigned char *<a class=\"id\" href=\"#out_buf\">out_buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       int *<a class=\"id\" href=\"#pos\">pos</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       void(*<a class=\"id\" href=\"#error_fn\">error_fn</a>)(char *<a class=\"id\" href=\"#x\">x</a>)) {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#zbuf\">zbuf</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#z_stream_s\">z_stream_s</a> *<a class=\"id\" href=\"#strm\">strm</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#out_len\">out_len</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_error_fn\">set_error_fn</a>(<a class=\"id\" href=\"#error_fn\">error_fn</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flush\">flush</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#out_len\">out_len</a> = 0x8000; <span class=\"comment\">/* 32 K */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#out_buf\">out_buf</a> = <a class=\"id\" href=\"#malloc\">malloc</a>(<a class=\"id\" href=\"#out_len\">out_len</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#out_len\">out_len</a> = 0x7fffffff; <span class=\"comment\">/* no limit */</span>", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#out_buf\">out_buf</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a>(\"Out of memory while allocating output buffer\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#gunzip_nomem1\">gunzip_nomem1</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#buf\">buf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#zbuf\">zbuf</a> = <a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#zbuf\">zbuf</a> = <a class=\"id\" href=\"#malloc\">malloc</a>(<a class=\"id\" href=\"#GZIP_IOBUF_SIZE\">GZIP_IOBUF_SIZE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#zbuf\">zbuf</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a>(\"Out of memory while allocating input buffer\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#gunzip_nomem2\">gunzip_nomem2</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#strm\">strm</a> = <a class=\"id\" href=\"#malloc\">malloc</a>(sizeof(*<a class=\"id\" href=\"#strm\">strm</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#strm\">strm</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a>(\"Out of memory while allocating z_stream\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#gunzip_nomem3\">gunzip_nomem3</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#strm\">strm</a>-><a class=\"id\" href=\"#workspace\">workspace</a> = <a class=\"id\" href=\"#malloc\">malloc</a>(<a class=\"id\" href=\"#flush\">flush</a> ? <a class=\"id\" href=\"#zlib_inflate_workspacesize\">zlib_inflate_workspacesize</a>() :", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> sizeof(struct <a class=\"id\" href=\"#inflate_state\">inflate_state</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#strm\">strm</a>-><a class=\"id\" href=\"#workspace\">workspace</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a>(\"Out of memory while allocating workspace\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#gunzip_nomem4\">gunzip_nomem4</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#fill\">fill</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fill\">fill</a> = <a class=\"id\" href=\"#nofill\">nofill</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#fill\">fill</a>(<a class=\"id\" href=\"#zbuf\">zbuf</a>, <a class=\"id\" href=\"#GZIP_IOBUF_SIZE\">GZIP_IOBUF_SIZE</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* verify the gzip header */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &lt; 10 ||", 
"<span class=\"ts\"/>   <a class=\"id\" href=\"#zbuf\">zbuf</a>[0] != 0x1f || <a class=\"id\" href=\"#zbuf\">zbuf</a>[1] != 0x8b || <a class=\"id\" href=\"#zbuf\">zbuf</a>[2] != 0x08) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pos\">pos</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#pos\">pos</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a>(\"Not a gzip file\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#gunzip_5\">gunzip_5</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* skip over gzip header (1f,8b,08... 10 bytes total +</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * possible asciz filename)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#strm\">strm</a>-><a class=\"id\" href=\"#next_in\">next_in</a> = <a class=\"id\" href=\"#zbuf\">zbuf</a> + 10;", 
"<span class=\"ts\"/><span class=\"comment\">/* skip over asciz filename */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#zbuf\">zbuf</a>[3] &amp; 0x8) {", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#strm\">strm</a>-><a class=\"id\" href=\"#next_in\">next_in</a>[0])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strm\">strm</a>-><a class=\"id\" href=\"#next_in\">next_in</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strm\">strm</a>-><a class=\"id\" href=\"#next_in\">next_in</a>++;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#strm\">strm</a>-><a class=\"id\" href=\"#avail_in\">avail_in</a> = <a class=\"id\" href=\"#len\">len</a> - (<a class=\"id\" href=\"#strm\">strm</a>-><a class=\"id\" href=\"#next_in\">next_in</a> - <a class=\"id\" href=\"#zbuf\">zbuf</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#strm\">strm</a>-><a class=\"id\" href=\"#next_out\">next_out</a> = <a class=\"id\" href=\"#out_buf\">out_buf</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#strm\">strm</a>-><a class=\"id\" href=\"#avail_out\">avail_out</a> = <a class=\"id\" href=\"#out_len\">out_len</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#zlib_inflateInit2\">zlib_inflateInit2</a>(<a class=\"id\" href=\"#strm\">strm</a>, -<a class=\"id\" href=\"#MAX_WBITS\">MAX_WBITS</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#flush\">flush</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WS\">WS</a>(<a class=\"id\" href=\"#strm\">strm</a>)-><a class=\"id\" href=\"#inflate_state\">inflate_state</a>.<a class=\"id\" href=\"#wsize\">wsize</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WS\">WS</a>(<a class=\"id\" href=\"#strm\">strm</a>)-><a class=\"id\" href=\"#inflate_state\">inflate_state</a>.<a class=\"id\" href=\"#window\">window</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#rc\">rc</a> == <a class=\"id\" href=\"#Z_OK\">Z_OK</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#strm\">strm</a>-><a class=\"id\" href=\"#avail_in\">avail_in</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* TODO: handle case where both pos and fill are set */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#fill\">fill</a>(<a class=\"id\" href=\"#zbuf\">zbuf</a>, <a class=\"id\" href=\"#GZIP_IOBUF_SIZE\">GZIP_IOBUF_SIZE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a>(\"read error\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strm\">strm</a>-><a class=\"id\" href=\"#next_in\">next_in</a> = <a class=\"id\" href=\"#zbuf\">zbuf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strm\">strm</a>-><a class=\"id\" href=\"#avail_in\">avail_in</a> = <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#zlib_inflate\">zlib_inflate</a>(<a class=\"id\" href=\"#strm\">strm</a>, 0);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Write any data generated */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#flush\">flush</a> && <a class=\"id\" href=\"#strm\">strm</a>-><a class=\"id\" href=\"#next_out\">next_out</a> &gt; <a class=\"id\" href=\"#out_buf\">out_buf</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#strm\">strm</a>-><a class=\"id\" href=\"#next_out\">next_out</a> - <a class=\"id\" href=\"#out_buf\">out_buf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#l\">l</a> != <a class=\"id\" href=\"#flush\">flush</a>(<a class=\"id\" href=\"#out_buf\">out_buf</a>, <a class=\"id\" href=\"#l\">l</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a>(\"write error\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strm\">strm</a>-><a class=\"id\" href=\"#next_out\">next_out</a> = <a class=\"id\" href=\"#out_buf\">out_buf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strm\">strm</a>-><a class=\"id\" href=\"#avail_out\">avail_out</a> = <a class=\"id\" href=\"#out_len\">out_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* after Z_FINISH, only Z_STREAM_END is \"we unpacked it all\" */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> == <a class=\"id\" href=\"#Z_STREAM_END\">Z_STREAM_END</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#rc\">rc</a> != <a class=\"id\" href=\"#Z_OK\">Z_OK</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a>(\"uncompression error\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#zlib_inflateEnd\">zlib_inflateEnd</a>(<a class=\"id\" href=\"#strm\">strm</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pos\">pos</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* add + 8 to skip over trailer */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#strm\">strm</a>-><a class=\"id\" href=\"#next_in\">next_in</a> - <a class=\"id\" href=\"#zbuf\">zbuf</a>+8;", 
"", 
"<a class=\"id\" href=\"#gunzip_5\">gunzip_5</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free\">free</a>(<a class=\"id\" href=\"#strm\">strm</a>-><a class=\"id\" href=\"#workspace\">workspace</a>);", 
"<a class=\"id\" href=\"#gunzip_nomem4\">gunzip_nomem4</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free\">free</a>(<a class=\"id\" href=\"#strm\">strm</a>);", 
"<a class=\"id\" href=\"#gunzip_nomem3\">gunzip_nomem3</a>:", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#buf\">buf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free\">free</a>(<a class=\"id\" href=\"#zbuf\">zbuf</a>);", 
"<a class=\"id\" href=\"#gunzip_nomem2\">gunzip_nomem2</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flush\">flush</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free\">free</a>(<a class=\"id\" href=\"#out_buf\">out_buf</a>);", 
"<a class=\"id\" href=\"#gunzip_nomem1\">gunzip_nomem1</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>; <span class=\"comment\">/* returns Z_OK (0) if successful */</span>", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#decompress\">decompress</a> <a class=\"id\" href=\"#gunzip\">gunzip</a>", 
];
xr_frag_insert('l/83/53efb6f8d892f4c4adbe095f92aecf9220d88a.xr', __xr_tmp);
