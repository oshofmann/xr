var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#LINUX_MM_INLINE_H\">LINUX_MM_INLINE_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#LINUX_MM_INLINE_H\">LINUX_MM_INLINE_H</a>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * page_is_file_cache - should the page be on a file LRU or anon LRU?</span>", 
"<span class=\"comment\"> * @page: the page to test</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 1 if @page is page cache page backed by a regular filesystem,</span>", 
"<span class=\"comment\"> * or 0 if @page is anonymous, tmpfs or otherwise ram or swap backed.</span>", 
"<span class=\"comment\"> * Used by functions that manipulate the LRU lists, to sort a page</span>", 
"<span class=\"comment\"> * onto the right LRU list.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We would like to get this info without a page flag, but the state</span>", 
"<span class=\"comment\"> * needs to survive until the page is last deleted from the LRU, which</span>", 
"<span class=\"comment\"> * could be as far down as __page_cache_release.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#page_is_file_cache\">page_is_file_cache</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/>return !<a class=\"id\" href=\"#PageSwapBacked\">PageSwapBacked</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void", 
"<a class=\"id\" href=\"#add_page_to_lru_list\">add_page_to_lru_list</a>(struct <a class=\"id\" href=\"#zone\">zone</a> *<a class=\"id\" href=\"#zone\">zone</a>, struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, enum <a class=\"id\" href=\"#lru_list\">lru_list</a> <a class=\"id\" href=\"#l\">l</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#page\">page</a>-><a class=\"id\" href=\"#lru\">lru</a>, &amp;<a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#lru\">lru</a>[<a class=\"id\" href=\"#l\">l</a>].<a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__inc_zone_state\">__inc_zone_state</a>(<a class=\"id\" href=\"#zone\">zone</a>, <a class=\"id\" href=\"#NR_LRU_BASE\">NR_LRU_BASE</a> + <a class=\"id\" href=\"#l\">l</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mem_cgroup_add_lru_list\">mem_cgroup_add_lru_list</a>(<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#l\">l</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void", 
"<a class=\"id\" href=\"#del_page_from_lru_list\">del_page_from_lru_list</a>(struct <a class=\"id\" href=\"#zone\">zone</a> *<a class=\"id\" href=\"#zone\">zone</a>, struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, enum <a class=\"id\" href=\"#lru_list\">lru_list</a> <a class=\"id\" href=\"#l\">l</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#page\">page</a>-><a class=\"id\" href=\"#lru\">lru</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__dec_zone_state\">__dec_zone_state</a>(<a class=\"id\" href=\"#zone\">zone</a>, <a class=\"id\" href=\"#NR_LRU_BASE\">NR_LRU_BASE</a> + <a class=\"id\" href=\"#l\">l</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mem_cgroup_del_lru_list\">mem_cgroup_del_lru_list</a>(<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#l\">l</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * page_lru_base_type - which LRU list type should a page be on?</span>", 
"<span class=\"comment\"> * @page: the page to test</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Used for LRU list index arithmetic.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns the base LRU type - file or anon - @page should be on.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> enum <a class=\"id\" href=\"#lru_list\">lru_list</a> <a class=\"id\" href=\"#page_lru_base_type\">page_lru_base_type</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#page_is_file_cache\">page_is_file_cache</a>(<a class=\"id\" href=\"#page\">page</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#LRU_INACTIVE_FILE\">LRU_INACTIVE_FILE</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#LRU_INACTIVE_ANON\">LRU_INACTIVE_ANON</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void", 
"<a class=\"id\" href=\"#del_page_from_lru\">del_page_from_lru</a>(struct <a class=\"id\" href=\"#zone\">zone</a> *<a class=\"id\" href=\"#zone\">zone</a>, struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#lru_list\">lru_list</a> <a class=\"id\" href=\"#l\">l</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#page\">page</a>-><a class=\"id\" href=\"#lru\">lru</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#PageUnevictable\">PageUnevictable</a>(<a class=\"id\" href=\"#page\">page</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__ClearPageUnevictable\">__ClearPageUnevictable</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#LRU_UNEVICTABLE\">LRU_UNEVICTABLE</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#page_lru_base_type\">page_lru_base_type</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#PageActive\">PageActive</a>(<a class=\"id\" href=\"#page\">page</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__ClearPageActive\">__ClearPageActive</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> += <a class=\"id\" href=\"#LRU_ACTIVE\">LRU_ACTIVE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__dec_zone_state\">__dec_zone_state</a>(<a class=\"id\" href=\"#zone\">zone</a>, <a class=\"id\" href=\"#NR_LRU_BASE\">NR_LRU_BASE</a> + <a class=\"id\" href=\"#l\">l</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mem_cgroup_del_lru_list\">mem_cgroup_del_lru_list</a>(<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#l\">l</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * page_lru - which LRU list should a page be on?</span>", 
"<span class=\"comment\"> * @page: the page to test</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns the LRU list a page should be on, as an index</span>", 
"<span class=\"comment\"> * into the array of LRU lists.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> enum <a class=\"id\" href=\"#lru_list\">lru_list</a> <a class=\"id\" href=\"#page_lru\">page_lru</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#lru_list\">lru_list</a> <a class=\"id\" href=\"#lru\">lru</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#PageUnevictable\">PageUnevictable</a>(<a class=\"id\" href=\"#page\">page</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lru\">lru</a> = <a class=\"id\" href=\"#LRU_UNEVICTABLE\">LRU_UNEVICTABLE</a>;", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lru\">lru</a> = <a class=\"id\" href=\"#page_lru_base_type\">page_lru_base_type</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#PageActive\">PageActive</a>(<a class=\"id\" href=\"#page\">page</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lru\">lru</a> += <a class=\"id\" href=\"#LRU_ACTIVE\">LRU_ACTIVE</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#lru\">lru</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/83/7f6498deda49ba00f98519a8fe0ffa96987872.xr', __xr_tmp);
