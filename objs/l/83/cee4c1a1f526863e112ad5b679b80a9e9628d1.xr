var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_get_group_no_and_offset\">ext4_get_group_no_and_offset</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#pa_pstart\">pa_pstart</a>, &amp;<a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_mb_load_buddy\">ext4_mb_load_buddy</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#group\">group</a>, &amp;<a class=\"id\" href=\"#e4b\">e4b</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_error\">ext4_error</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"Error loading buddy information for %u\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#group\">group</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_lock_group\">ext4_lock_group</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#group\">group</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#pa_group_list\">pa_group_list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_mb_release_group_pa\">ext4_mb_release_group_pa</a>(&amp;<a class=\"id\" href=\"#e4b\">e4b</a>, <a class=\"id\" href=\"#pa\">pa</a>, <a class=\"id\" href=\"#ac\">ac</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_unlock_group\">ext4_unlock_group</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#group\">group</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_mb_unload_buddy\">ext4_mb_unload_buddy</a>(&amp;<a class=\"id\" href=\"#e4b\">e4b</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#pa_tmp_list\">pa_tmp_list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#call_rcu\">call_rcu</a>(&amp;(<a class=\"id\" href=\"#pa\">pa</a>)-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#pa_rcu\">pa_rcu</a>, <a class=\"id\" href=\"#ext4_mb_pa_callback\">ext4_mb_pa_callback</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ac\">ac</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_free\">kmem_cache_free</a>(<a class=\"id\" href=\"#ext4_ac_cachep\">ext4_ac_cachep</a>, <a class=\"id\" href=\"#ac\">ac</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * We have incremented pa_count. So it cannot be freed at this</span>", 
"<span class=\"comment\"> * point. Also we hold lg_mutex. So no parallel allocation is</span>", 
"<span class=\"comment\"> * possible from this lg. That means pa_free cannot be updated.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * A parallel ext4_mb_discard_group_preallocations is possible.</span>", 
"<span class=\"comment\"> * which can cause the lg_prealloc_list to be updated.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#ext4_mb_add_n_trim\">ext4_mb_add_n_trim</a>(struct <a class=\"id\" href=\"#ext4_allocation_context\">ext4_allocation_context</a> *<a class=\"id\" href=\"#ac\">ac</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#order\">order</a>, <a class=\"id\" href=\"#added\">added</a> = 0, <a class=\"id\" href=\"#lg_prealloc_count\">lg_prealloc_count</a> = 1;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#ac\">ac</a>-><a class=\"id\" href=\"#ac_sb\">ac_sb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_locality_group\">ext4_locality_group</a> *<a class=\"id\" href=\"#lg\">lg</a> = <a class=\"id\" href=\"#ac\">ac</a>-><a class=\"id\" href=\"#ac_lg\">ac_lg</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_prealloc_space\">ext4_prealloc_space</a> *<a class=\"id\" href=\"#tmp_pa\">tmp_pa</a>, *<a class=\"id\" href=\"#pa\">pa</a> = <a class=\"id\" href=\"#ac\">ac</a>-><a class=\"id\" href=\"#ac_pa\">ac_pa</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#order\">order</a> = <a class=\"id\" href=\"#fls\">fls</a>(<a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#pa_free\">pa_free</a>) - 1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#order\">order</a> &gt; <a class=\"id\" href=\"#PREALLOC_TB_SIZE\">PREALLOC_TB_SIZE</a> - 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* The max size of hash table is PREALLOC_TB_SIZE */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#order\">order</a> = <a class=\"id\" href=\"#PREALLOC_TB_SIZE\">PREALLOC_TB_SIZE</a> - 1;", 
"<span class=\"ts\"/><span class=\"comment\">/* Add the prealloc space to lg */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_rcu\">list_for_each_entry_rcu</a>(<a class=\"id\" href=\"#tmp_pa\">tmp_pa</a>, &amp;<a class=\"id\" href=\"#lg\">lg</a>-><a class=\"id\" href=\"#lg_prealloc_list\">lg_prealloc_list</a>[<a class=\"id\" href=\"#order\">order</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pa_inode_list\">pa_inode_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#tmp_pa\">tmp_pa</a>-><a class=\"id\" href=\"#pa_lock\">pa_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tmp_pa\">tmp_pa</a>-><a class=\"id\" href=\"#pa_deleted\">pa_deleted</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#tmp_pa\">tmp_pa</a>-><a class=\"id\" href=\"#pa_lock\">pa_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#added\">added</a> && <a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#pa_free\">pa_free</a> &lt; <a class=\"id\" href=\"#tmp_pa\">tmp_pa</a>-><a class=\"id\" href=\"#pa_free\">pa_free</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Add to the tail of the previous entry */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail_rcu\">list_add_tail_rcu</a>(&amp;<a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#pa_inode_list\">pa_inode_list</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#tmp_pa\">tmp_pa</a>-><a class=\"id\" href=\"#pa_inode_list\">pa_inode_list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#added\">added</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * we want to count the total</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * number of entries in the list</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#tmp_pa\">tmp_pa</a>-><a class=\"id\" href=\"#pa_lock\">pa_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lg_prealloc_count\">lg_prealloc_count</a>++;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#added\">added</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail_rcu\">list_add_tail_rcu</a>(&amp;<a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#pa_inode_list\">pa_inode_list</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#lg\">lg</a>-><a class=\"id\" href=\"#lg_prealloc_list\">lg_prealloc_list</a>[<a class=\"id\" href=\"#order\">order</a>]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Now trim the list to be not more than 8 elements */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lg_prealloc_count\">lg_prealloc_count</a> &gt; 8) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_mb_discard_lg_preallocations\">ext4_mb_discard_lg_preallocations</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#lg\">lg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#order\">order</a>, <a class=\"id\" href=\"#lg_prealloc_count\">lg_prealloc_count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return ;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * release all resource we used in allocation</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ext4_mb_release_context\">ext4_mb_release_context</a>(struct <a class=\"id\" href=\"#ext4_allocation_context\">ext4_allocation_context</a> *<a class=\"id\" href=\"#ac\">ac</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_prealloc_space\">ext4_prealloc_space</a> *<a class=\"id\" href=\"#pa\">pa</a> = <a class=\"id\" href=\"#ac\">ac</a>-><a class=\"id\" href=\"#ac_pa\">ac_pa</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pa\">pa</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#pa_type\">pa_type</a> == <a class=\"id\" href=\"#MB_GROUP_PA\">MB_GROUP_PA</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* see comment in ext4_mb_use_group_pa() */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#pa_lock\">pa_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#pa_pstart\">pa_pstart</a> += <a class=\"id\" href=\"#ac\">ac</a>-><a class=\"id\" href=\"#ac_b_ex\">ac_b_ex</a>.<a class=\"id\" href=\"#fe_len\">fe_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#pa_lstart\">pa_lstart</a> += <a class=\"id\" href=\"#ac\">ac</a>-><a class=\"id\" href=\"#ac_b_ex\">ac_b_ex</a>.<a class=\"id\" href=\"#fe_len\">fe_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#pa_free\">pa_free</a> -= <a class=\"id\" href=\"#ac\">ac</a>-><a class=\"id\" href=\"#ac_b_ex\">ac_b_ex</a>.<a class=\"id\" href=\"#fe_len\">fe_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#pa_len\">pa_len</a> -= <a class=\"id\" href=\"#ac\">ac</a>-><a class=\"id\" href=\"#ac_b_ex\">ac_b_ex</a>.<a class=\"id\" href=\"#fe_len\">fe_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#pa_lock\">pa_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ac\">ac</a>-><a class=\"id\" href=\"#alloc_semp\">alloc_semp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(<a class=\"id\" href=\"#ac\">ac</a>-><a class=\"id\" href=\"#alloc_semp\">alloc_semp</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pa\">pa</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We want to add the pa to the right bucket.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Remove it from the list and while adding</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * make sure the list to which we are adding</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * doesn't grow big.  We need to release</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * alloc_semp before calling ext4_mb_add_n_trim()</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#pa_type\">pa_type</a> == <a class=\"id\" href=\"#MB_GROUP_PA\">MB_GROUP_PA</a>) && <a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#pa_free\">pa_free</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(<a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#pa_obj_lock\">pa_obj_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del_rcu\">list_del_rcu</a>(&amp;<a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#pa_inode_list\">pa_inode_list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(<a class=\"id\" href=\"#pa\">pa</a>-><a class=\"id\" href=\"#pa_obj_lock\">pa_obj_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_mb_add_n_trim\">ext4_mb_add_n_trim</a>(<a class=\"id\" href=\"#ac\">ac</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_mb_put_pa\">ext4_mb_put_pa</a>(<a class=\"id\" href=\"#ac\">ac</a>, <a class=\"id\" href=\"#ac\">ac</a>-><a class=\"id\" href=\"#ac_sb\">ac_sb</a>, <a class=\"id\" href=\"#pa\">pa</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ac\">ac</a>-><a class=\"id\" href=\"#ac_bitmap_page\">ac_bitmap_page</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_cache_release\">page_cache_release</a>(<a class=\"id\" href=\"#ac\">ac</a>-><a class=\"id\" href=\"#ac_bitmap_page\">ac_bitmap_page</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ac\">ac</a>-><a class=\"id\" href=\"#ac_buddy_page\">ac_buddy_page</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_cache_release\">page_cache_release</a>(<a class=\"id\" href=\"#ac\">ac</a>-><a class=\"id\" href=\"#ac_buddy_page\">ac_buddy_page</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ac\">ac</a>-><a class=\"id\" href=\"#ac_flags\">ac_flags</a> &amp; <a class=\"id\" href=\"#EXT4_MB_HINT_GROUP_ALLOC\">EXT4_MB_HINT_GROUP_ALLOC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#ac\">ac</a>-><a class=\"id\" href=\"#ac_lg\">ac_lg</a>-><a class=\"id\" href=\"#lg_mutex\">lg_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_mb_collect_stats\">ext4_mb_collect_stats</a>(<a class=\"id\" href=\"#ac\">ac</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext4_mb_discard_preallocations\">ext4_mb_discard_preallocations</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#needed\">needed</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#ngroups\">ngroups</a> = <a class=\"id\" href=\"#ext4_get_groups_count\">ext4_get_groups_count</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#freed\">freed</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_ext4_mb_discard_preallocations\">trace_ext4_mb_discard_preallocations</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#needed\">needed</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ngroups\">ngroups</a> && <a class=\"id\" href=\"#needed\">needed</a> &gt; 0; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ext4_mb_discard_group_preallocations\">ext4_mb_discard_group_preallocations</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#needed\">needed</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#freed\">freed</a> += <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#needed\">needed</a> -= <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#freed\">freed</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Main entry point into mballoc to allocate blocks</span>", 
"<span class=\"comment\"> * it tries to use preallocation first, then falls back</span>", 
"<span class=\"comment\"> * to usual allocation</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#ext4_mb_new_blocks\">ext4_mb_new_blocks</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_allocation_request\">ext4_allocation_request</a> *<a class=\"id\" href=\"#ar\">ar</a>, int *<a class=\"id\" href=\"#errp\">errp</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#freed\">freed</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_allocation_context\">ext4_allocation_context</a> *<a class=\"id\" href=\"#ac\">ac</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#block\">block</a> = 0;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#inquota\">inquota</a> = 0;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#reserv_blks\">reserv_blks</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#ar\">ar</a>-><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_ext4_request_blocks\">trace_ext4_request_blocks</a>(<a class=\"id\" href=\"#ar\">ar</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * For delayed allocation, we could skip the ENOSPC and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * EDQUOT check, as blocks and quotas have been already</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * reserved when data being copied into pagecache.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#ar\">ar</a>-><a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_delalloc_reserved_flag\">i_delalloc_reserved_flag</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ar\">ar</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#EXT4_MB_DELALLOC_RESERVED\">EXT4_MB_DELALLOC_RESERVED</a>;", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Without delayed allocation we need to verify</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * there is enough free blocks to do block allocation</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * and verify allocation doesn't exceed the quota limits.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#ar\">ar</a>-><a class=\"id\" href=\"#len\">len</a> && <a class=\"id\" href=\"#ext4_claim_free_blocks\">ext4_claim_free_blocks</a>(<a class=\"id\" href=\"#sbi\">sbi</a>, <a class=\"id\" href=\"#ar\">ar</a>-><a class=\"id\" href=\"#len\">len</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* let others to free the space */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#yield\">yield</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ar\">ar</a>-><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#ar\">ar</a>-><a class=\"id\" href=\"#len\">len</a> >> 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ar\">ar</a>-><a class=\"id\" href=\"#len\">len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#errp\">errp</a> = -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reserv_blks\">reserv_blks</a> = <a class=\"id\" href=\"#ar\">ar</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#ar\">ar</a>-><a class=\"id\" href=\"#len\">len</a> && <a class=\"id\" href=\"#dquot_alloc_block\">dquot_alloc_block</a>(<a class=\"id\" href=\"#ar\">ar</a>-><a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#ar\">ar</a>-><a class=\"id\" href=\"#len\">len</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ar\">ar</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#EXT4_MB_HINT_NOPREALLOC\">EXT4_MB_HINT_NOPREALLOC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ar\">ar</a>-><a class=\"id\" href=\"#len\">len</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inquota\">inquota</a> = <a class=\"id\" href=\"#ar\">ar</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ar\">ar</a>-><a class=\"id\" href=\"#len\">len</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#errp\">errp</a> = -<a class=\"id\" href=\"#EDQUOT\">EDQUOT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ac\">ac</a> = <a class=\"id\" href=\"#kmem_cache_alloc\">kmem_cache_alloc</a>(<a class=\"id\" href=\"#ext4_ac_cachep\">ext4_ac_cachep</a>, <a class=\"id\" href=\"#GFP_NOFS\">GFP_NOFS</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ac\">ac</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ar\">ar</a>-><a class=\"id\" href=\"#len\">len</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#errp\">errp</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#errp\">errp</a> = <a class=\"id\" href=\"#ext4_mb_initialize_context\">ext4_mb_initialize_context</a>(<a class=\"id\" href=\"#ac\">ac</a>, <a class=\"id\" href=\"#ar\">ar</a>);", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#errp\">errp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ar\">ar</a>-><a class=\"id\" href=\"#len\">len</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ac\">ac</a>-><a class=\"id\" href=\"#ac_op\">ac_op</a> = <a class=\"id\" href=\"#EXT4_MB_HISTORY_PREALLOC\">EXT4_MB_HISTORY_PREALLOC</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ext4_mb_use_preallocated\">ext4_mb_use_preallocated</a>(<a class=\"id\" href=\"#ac\">ac</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ac\">ac</a>-><a class=\"id\" href=\"#ac_op\">ac_op</a> = <a class=\"id\" href=\"#EXT4_MB_HISTORY_ALLOC\">EXT4_MB_HISTORY_ALLOC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_mb_normalize_request\">ext4_mb_normalize_request</a>(<a class=\"id\" href=\"#ac\">ac</a>, <a class=\"id\" href=\"#ar\">ar</a>);", 
"<a class=\"id\" href=\"#repeat\">repeat</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* allocate space in core */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#errp\">errp</a> = <a class=\"id\" href=\"#ext4_mb_regular_allocator\">ext4_mb_regular_allocator</a>(<a class=\"id\" href=\"#ac\">ac</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (*<a class=\"id\" href=\"#errp\">errp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#errout\">errout</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* as we've just preallocated more space than</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * user requested orinally, we store allocated</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * space in a special descriptor */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ac\">ac</a>-><a class=\"id\" href=\"#ac_status\">ac_status</a> == <a class=\"id\" href=\"#AC_STATUS_FOUND\">AC_STATUS_FOUND</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ac\">ac</a>-><a class=\"id\" href=\"#ac_o_ex\">ac_o_ex</a>.<a class=\"id\" href=\"#fe_len\">fe_len</a> &lt; <a class=\"id\" href=\"#ac\">ac</a>-><a class=\"id\" href=\"#ac_b_ex\">ac_b_ex</a>.<a class=\"id\" href=\"#fe_len\">fe_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_mb_new_preallocation\">ext4_mb_new_preallocation</a>(<a class=\"id\" href=\"#ac\">ac</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#ac\">ac</a>-><a class=\"id\" href=\"#ac_status\">ac_status</a> == <a class=\"id\" href=\"#AC_STATUS_FOUND\">AC_STATUS_FOUND</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#errp\">errp</a> = <a class=\"id\" href=\"#ext4_mb_mark_diskspace_used\">ext4_mb_mark_diskspace_used</a>(<a class=\"id\" href=\"#ac\">ac</a>, <a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#reserv_blks\">reserv_blks</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (*<a class=\"id\" href=\"#errp\">errp</a> == -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * drop the reference that we took</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * in ext4_mb_use_best_found</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_mb_release_context\">ext4_mb_release_context</a>(<a class=\"id\" href=\"#ac\">ac</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ac\">ac</a>-><a class=\"id\" href=\"#ac_b_ex\">ac_b_ex</a>.<a class=\"id\" href=\"#fe_group\">fe_group</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ac\">ac</a>-><a class=\"id\" href=\"#ac_b_ex\">ac_b_ex</a>.<a class=\"id\" href=\"#fe_start\">fe_start</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ac\">ac</a>-><a class=\"id\" href=\"#ac_b_ex\">ac_b_ex</a>.<a class=\"id\" href=\"#fe_len\">fe_len</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ac\">ac</a>-><a class=\"id\" href=\"#ac_status\">ac_status</a> = <a class=\"id\" href=\"#AC_STATUS_CONTINUE\">AC_STATUS_CONTINUE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#repeat\">repeat</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (*<a class=\"id\" href=\"#errp\">errp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#errout\">errout</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_discard_allocated_blocks\">ext4_discard_allocated_blocks</a>(<a class=\"id\" href=\"#ac\">ac</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#block\">block</a> = <a class=\"id\" href=\"#ext4_grp_offs_to_block\">ext4_grp_offs_to_block</a>(<a class=\"id\" href=\"#sb\">sb</a>, &amp;<a class=\"id\" href=\"#ac\">ac</a>-><a class=\"id\" href=\"#ac_b_ex\">ac_b_ex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ar\">ar</a>-><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#ac\">ac</a>-><a class=\"id\" href=\"#ac_b_ex\">ac_b_ex</a>.<a class=\"id\" href=\"#fe_len\">fe_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#freed\">freed</a>  = <a class=\"id\" href=\"#ext4_mb_discard_preallocations\">ext4_mb_discard_preallocations</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#ac\">ac</a>-><a class=\"id\" href=\"#ac_o_ex\">ac_o_ex</a>.<a class=\"id\" href=\"#fe_len\">fe_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#freed\">freed</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#repeat\">repeat</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#errp\">errp</a> = -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#errp\">errp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ac\">ac</a>-><a class=\"id\" href=\"#ac_b_ex\">ac_b_ex</a>.<a class=\"id\" href=\"#fe_len\">fe_len</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ar\">ar</a>-><a class=\"id\" href=\"#len\">len</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_mb_show_ac\">ext4_mb_show_ac</a>(<a class=\"id\" href=\"#ac\">ac</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_mb_release_context\">ext4_mb_release_context</a>(<a class=\"id\" href=\"#ac\">ac</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ac\">ac</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_free\">kmem_cache_free</a>(<a class=\"id\" href=\"#ext4_ac_cachep\">ext4_ac_cachep</a>, <a class=\"id\" href=\"#ac\">ac</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inquota\">inquota</a> && <a class=\"id\" href=\"#ar\">ar</a>-><a class=\"id\" href=\"#len\">len</a> &lt; <a class=\"id\" href=\"#inquota\">inquota</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dquot_free_block\">dquot_free_block</a>(<a class=\"id\" href=\"#ar\">ar</a>-><a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#inquota\">inquota</a> - <a class=\"id\" href=\"#ar\">ar</a>-><a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ar\">ar</a>-><a class=\"id\" href=\"#len\">len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#ar\">ar</a>-><a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_delalloc_reserved_flag\">i_delalloc_reserved_flag</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* release all the reserved blocks if non delalloc */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#percpu_counter_sub\">percpu_counter_sub</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_dirtyblocks_counter\">s_dirtyblocks_counter</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reserv_blks\">reserv_blks</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_ext4_allocate_blocks\">trace_ext4_allocate_blocks</a>(<a class=\"id\" href=\"#ar\">ar</a>, (unsigned long long)<a class=\"id\" href=\"#block\">block</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#block\">block</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * We can merge two free data extents only if the physical blocks</span>", 
"<span class=\"comment\"> * are contiguous, AND the extents were freed by the same transaction,</span>", 
"<span class=\"comment\"> * AND the blocks are associated with the same group.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#can_merge\">can_merge</a>(struct <a class=\"id\" href=\"#ext4_free_data\">ext4_free_data</a> *<a class=\"id\" href=\"#entry1\">entry1</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_free_data\">ext4_free_data</a> *<a class=\"id\" href=\"#entry2\">entry2</a>)", 
"{", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#entry1\">entry1</a>-><a class=\"id\" href=\"#t_tid\">t_tid</a> == <a class=\"id\" href=\"#entry2\">entry2</a>-><a class=\"id\" href=\"#t_tid\">t_tid</a>) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#entry1\">entry1</a>-><a class=\"id\" href=\"#group\">group</a> == <a class=\"id\" href=\"#entry2\">entry2</a>-><a class=\"id\" href=\"#group\">group</a>) &&", 
"<span class=\"ts\"/>    ((<a class=\"id\" href=\"#entry1\">entry1</a>-><a class=\"id\" href=\"#start_blk\">start_blk</a> + <a class=\"id\" href=\"#entry1\">entry1</a>-><a class=\"id\" href=\"#count\">count</a>) == <a class=\"id\" href=\"#entry2\">entry2</a>-><a class=\"id\" href=\"#start_blk\">start_blk</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#noinline_for_stack\">noinline_for_stack</a> int", 
"<a class=\"id\" href=\"#ext4_mb_free_metadata\">ext4_mb_free_metadata</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#ext4_buddy\">ext4_buddy</a> *<a class=\"id\" href=\"#e4b\">e4b</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#ext4_free_data\">ext4_free_data</a> *<a class=\"id\" href=\"#new_entry\">new_entry</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#group\">group</a> = <a class=\"id\" href=\"#e4b\">e4b</a>-><a class=\"id\" href=\"#bd_group\">bd_group</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_grpblk_t\">ext4_grpblk_t</a> <a class=\"id\" href=\"#block\">block</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_free_data\">ext4_free_data</a> *<a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_group_info\">ext4_group_info</a> *<a class=\"id\" href=\"#db\">db</a> = <a class=\"id\" href=\"#e4b\">e4b</a>-><a class=\"id\" href=\"#bd_info\">bd_info</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#e4b\">e4b</a>-><a class=\"id\" href=\"#bd_sb\">bd_sb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> **<a class=\"id\" href=\"#n\">n</a> = &amp;<a class=\"id\" href=\"#db\">db</a>-><a class=\"id\" href=\"#bb_free_root\">bb_free_root</a>.<a class=\"id\" href=\"#rb_node\">rb_node</a>, *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#NULL\">NULL</a>, *<a class=\"id\" href=\"#new_node\">new_node</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#ext4_handle_valid\">ext4_handle_valid</a>(<a class=\"id\" href=\"#handle\">handle</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#e4b\">e4b</a>-><a class=\"id\" href=\"#bd_bitmap_page\">bd_bitmap_page</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#e4b\">e4b</a>-><a class=\"id\" href=\"#bd_buddy_page\">bd_buddy_page</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_node\">new_node</a> = &amp;<a class=\"id\" href=\"#new_entry\">new_entry</a>-><a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#block\">block</a> = <a class=\"id\" href=\"#new_entry\">new_entry</a>-><a class=\"id\" href=\"#start_blk\">start_blk</a>;", 
"", 
"<span class=\"ts\"/>if (!*<a class=\"id\" href=\"#n\">n</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* first free block exent. We need to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   protect buddy cache from being freed,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * otherwise we'll refresh it from</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * on-disk bitmap and lose not-yet-available</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * blocks */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_cache_get\">page_cache_get</a>(<a class=\"id\" href=\"#e4b\">e4b</a>-><a class=\"id\" href=\"#bd_buddy_page\">bd_buddy_page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_cache_get\">page_cache_get</a>(<a class=\"id\" href=\"#e4b\">e4b</a>-><a class=\"id\" href=\"#bd_bitmap_page\">bd_bitmap_page</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>while (*<a class=\"id\" href=\"#n\">n</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a> = *<a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#rb_entry\">rb_entry</a>(<a class=\"id\" href=\"#parent\">parent</a>, struct <a class=\"id\" href=\"#ext4_free_data\">ext4_free_data</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#block\">block</a> &lt; <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#start_blk\">start_blk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = &amp;(*<a class=\"id\" href=\"#n\">n</a>)-><a class=\"id\" href=\"#rb_left\">rb_left</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#block\">block</a> >= (<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#start_blk\">start_blk</a> + <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#count\">count</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = &amp;(*<a class=\"id\" href=\"#n\">n</a>)-><a class=\"id\" href=\"#rb_right\">rb_right</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_grp_locked_error\">ext4_grp_locked_error</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#group\">group</a>, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_first_block_no\">ext4_group_first_block_no</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#group\">group</a>) + <a class=\"id\" href=\"#block\">block</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"Block already on to-be-freed list\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rb_link_node\">rb_link_node</a>(<a class=\"id\" href=\"#new_node\">new_node</a>, <a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rb_insert_color\">rb_insert_color</a>(<a class=\"id\" href=\"#new_node\">new_node</a>, &amp;<a class=\"id\" href=\"#db\">db</a>-><a class=\"id\" href=\"#bb_free_root\">bb_free_root</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Now try to see the extent can be merged to left and right */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#rb_prev\">rb_prev</a>(<a class=\"id\" href=\"#new_node\">new_node</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#node\">node</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#rb_entry\">rb_entry</a>(<a class=\"id\" href=\"#node\">node</a>, struct <a class=\"id\" href=\"#ext4_free_data\">ext4_free_data</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#can_merge\">can_merge</a>(<a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#new_entry\">new_entry</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_entry\">new_entry</a>-><a class=\"id\" href=\"#start_blk\">start_blk</a> = <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#start_blk\">start_blk</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_entry\">new_entry</a>-><a class=\"id\" href=\"#count\">count</a> += <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_erase\">rb_erase</a>(<a class=\"id\" href=\"#node\">node</a>, &amp;(<a class=\"id\" href=\"#db\">db</a>-><a class=\"id\" href=\"#bb_free_root\">bb_free_root</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_md_lock\">s_md_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_md_lock\">s_md_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_free\">kmem_cache_free</a>(<a class=\"id\" href=\"#ext4_free_ext_cachep\">ext4_free_ext_cachep</a>, <a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#rb_next\">rb_next</a>(<a class=\"id\" href=\"#new_node\">new_node</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#node\">node</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#rb_entry\">rb_entry</a>(<a class=\"id\" href=\"#node\">node</a>, struct <a class=\"id\" href=\"#ext4_free_data\">ext4_free_data</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#can_merge\">can_merge</a>(<a class=\"id\" href=\"#new_entry\">new_entry</a>, <a class=\"id\" href=\"#entry\">entry</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_entry\">new_entry</a>-><a class=\"id\" href=\"#count\">count</a> += <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb_erase\">rb_erase</a>(<a class=\"id\" href=\"#node\">node</a>, &amp;(<a class=\"id\" href=\"#db\">db</a>-><a class=\"id\" href=\"#bb_free_root\">bb_free_root</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_md_lock\">s_md_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_md_lock\">s_md_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_free\">kmem_cache_free</a>(<a class=\"id\" href=\"#ext4_free_ext_cachep\">ext4_free_ext_cachep</a>, <a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* Add the extent to transaction's private list */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_md_lock\">s_md_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#new_entry\">new_entry</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#h_transaction\">h_transaction</a>-><a class=\"id\" href=\"#t_private_list\">t_private_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_md_lock\">s_md_lock</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * ext4_free_blocks() -- Free given blocks and update quota</span>", 
"<span class=\"comment\"> * @handle:<span class=\"ts\"/><span class=\"ts\"/>handle for this transaction</span>", 
"<span class=\"comment\"> * @inode:<span class=\"ts\"/><span class=\"ts\"/>inode</span>", 
"<span class=\"comment\"> * @block:<span class=\"ts\"/><span class=\"ts\"/>start physical block to free</span>", 
"<span class=\"comment\"> * @count:<span class=\"ts\"/><span class=\"ts\"/>number of blocks to count</span>", 
"<span class=\"comment\"> * @metadata: <span class=\"ts\"/><span class=\"ts\"/>Are these metadata blocks</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#ext4_free_blocks\">ext4_free_blocks</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>, <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#block\">block</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      unsigned long <a class=\"id\" href=\"#count\">count</a>, int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_allocation_context\">ext4_allocation_context</a> *<a class=\"id\" href=\"#ac\">ac</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#gdp\">gdp</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#freed\">freed</a> = 0;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#overflow\">overflow</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_grpblk_t\">ext4_grpblk_t</a> <a class=\"id\" href=\"#bit\">bit</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#gd_bh\">gd_bh</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#block_group\">block_group</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_buddy\">ext4_buddy</a> <a class=\"id\" href=\"#e4b\">e4b</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bh\">bh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#block\">block</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#block\">block</a> != <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_blocknr\">b_blocknr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#block\">block</a> = <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_blocknr\">b_blocknr</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#EXT4_FREE_BLOCKS_VALIDATED\">EXT4_FREE_BLOCKS_VALIDATED</a>) &&", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#ext4_data_block_valid\">ext4_data_block_valid</a>(<a class=\"id\" href=\"#sbi\">sbi</a>, <a class=\"id\" href=\"#block\">block</a>, <a class=\"id\" href=\"#count\">count</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_error\">ext4_error</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"Freeing blocks not in datazone - \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"block = %llu, count = %lu\", <a class=\"id\" href=\"#block\">block</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_return\">error_return</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_debug\">ext4_debug</a>(\"freeing block %llu\\n\", <a class=\"id\" href=\"#block\">block</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_ext4_free_blocks\">trace_ext4_free_blocks</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#block\">block</a>, <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#EXT4_FREE_BLOCKS_FORGET\">EXT4_FREE_BLOCKS_FORGET</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#tbh\">tbh</a> = <a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#bh\">bh</a> && (<a class=\"id\" href=\"#count\">count</a> &gt; 1));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#count\">count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tbh\">tbh</a> = <a class=\"id\" href=\"#sb_find_get_block\">sb_find_get_block</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#block\">block</a> + <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_forget\">ext4_forget</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#EXT4_FREE_BLOCKS_METADATA\">EXT4_FREE_BLOCKS_METADATA</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#tbh\">tbh</a>, <a class=\"id\" href=\"#block\">block</a> + <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We need to make sure we don't reuse the freed block until</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * after the transaction is committed, which we can do by</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * treating the block as metadata, below.  We make an</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * exception if the inode is to be written in writeback mode</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * since writeback mode has weak data consistency guarantees.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ext4_should_writeback_data\">ext4_should_writeback_data</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#EXT4_FREE_BLOCKS_METADATA\">EXT4_FREE_BLOCKS_METADATA</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ac\">ac</a> = <a class=\"id\" href=\"#kmem_cache_alloc\">kmem_cache_alloc</a>(<a class=\"id\" href=\"#ext4_ac_cachep\">ext4_ac_cachep</a>, <a class=\"id\" href=\"#GFP_NOFS\">GFP_NOFS</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ac\">ac</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ac\">ac</a>-><a class=\"id\" href=\"#ac_inode\">ac_inode</a> = <a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ac\">ac</a>-><a class=\"id\" href=\"#ac_sb\">ac_sb</a> = <a class=\"id\" href=\"#sb\">sb</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#do_more\">do_more</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#overflow\">overflow</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_get_group_no_and_offset\">ext4_get_group_no_and_offset</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#block\">block</a>, &amp;<a class=\"id\" href=\"#block_group\">block_group</a>, &amp;<a class=\"id\" href=\"#bit\">bit</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Check to see if we are freeing blocks across a group</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * boundary.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bit\">bit</a> + <a class=\"id\" href=\"#count\">count</a> &gt; <a class=\"id\" href=\"#EXT4_BLOCKS_PER_GROUP\">EXT4_BLOCKS_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#overflow\">overflow</a> = <a class=\"id\" href=\"#bit\">bit</a> + <a class=\"id\" href=\"#count\">count</a> - <a class=\"id\" href=\"#EXT4_BLOCKS_PER_GROUP\">EXT4_BLOCKS_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> -= <a class=\"id\" href=\"#overflow\">overflow</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a> = <a class=\"id\" href=\"#ext4_read_block_bitmap\">ext4_read_block_bitmap</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#block_group\">block_group</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_return\">error_return</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gdp\">gdp</a> = <a class=\"id\" href=\"#ext4_get_group_desc\">ext4_get_group_desc</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#block_group\">block_group</a>, &amp;<a class=\"id\" href=\"#gd_bh\">gd_bh</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#gdp\">gdp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_return\">error_return</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#in_range\">in_range</a>(<a class=\"id\" href=\"#ext4_block_bitmap\">ext4_block_bitmap</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#gdp\">gdp</a>), <a class=\"id\" href=\"#block\">block</a>, <a class=\"id\" href=\"#count\">count</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#in_range\">in_range</a>(<a class=\"id\" href=\"#ext4_inode_bitmap\">ext4_inode_bitmap</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#gdp\">gdp</a>), <a class=\"id\" href=\"#block\">block</a>, <a class=\"id\" href=\"#count\">count</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#in_range\">in_range</a>(<a class=\"id\" href=\"#block\">block</a>, <a class=\"id\" href=\"#ext4_inode_table\">ext4_inode_table</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#gdp\">gdp</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_itb_per_group\">s_itb_per_group</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#in_range\">in_range</a>(<a class=\"id\" href=\"#block\">block</a> + <a class=\"id\" href=\"#count\">count</a> - 1, <a class=\"id\" href=\"#ext4_inode_table\">ext4_inode_table</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#gdp\">gdp</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_itb_per_group\">s_itb_per_group</a>)) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_error\">ext4_error</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"Freeing blocks in system zone - \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"Block = %llu, count = %lu\", <a class=\"id\" href=\"#block\">block</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* err = 0. ext4_std_error should be a no op */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_return\">error_return</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUFFER_TRACE\">BUFFER_TRACE</a>(<a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>, \"getting write access\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_journal_get_write_access\">ext4_journal_get_write_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_return\">error_return</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We are about to modify some metadata.  Call the journal APIs</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to unshare -&gt;b_data if a currently-committing transaction is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * using it</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUFFER_TRACE\">BUFFER_TRACE</a>(<a class=\"id\" href=\"#gd_bh\">gd_bh</a>, \"get_write_access\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_journal_get_write_access\">ext4_journal_get_write_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#gd_bh\">gd_bh</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_return\">error_return</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#AGGRESSIVE_CHECK\">AGGRESSIVE_CHECK</a>", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#count\">count</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#mb_test_bit\">mb_test_bit</a>(<a class=\"id\" href=\"#bit\">bit</a> + <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>));", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ac\">ac</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ac\">ac</a>-><a class=\"id\" href=\"#ac_b_ex\">ac_b_ex</a>.<a class=\"id\" href=\"#fe_group\">fe_group</a> = <a class=\"id\" href=\"#block_group\">block_group</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ac\">ac</a>-><a class=\"id\" href=\"#ac_b_ex\">ac_b_ex</a>.<a class=\"id\" href=\"#fe_start\">fe_start</a> = <a class=\"id\" href=\"#bit\">bit</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ac\">ac</a>-><a class=\"id\" href=\"#ac_b_ex\">ac_b_ex</a>.<a class=\"id\" href=\"#fe_len\">fe_len</a> = <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_ext4_mballoc_free\">trace_ext4_mballoc_free</a>(<a class=\"id\" href=\"#ac\">ac</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_mb_load_buddy\">ext4_mb_load_buddy</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#block_group\">block_group</a>, &amp;<a class=\"id\" href=\"#e4b\">e4b</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_return\">error_return</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#EXT4_FREE_BLOCKS_METADATA\">EXT4_FREE_BLOCKS_METADATA</a>) && <a class=\"id\" href=\"#ext4_handle_valid\">ext4_handle_valid</a>(<a class=\"id\" href=\"#handle\">handle</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_free_data\">ext4_free_data</a> *<a class=\"id\" href=\"#new_entry\">new_entry</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * blocks being freed are metadata. these blocks shouldn't</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * be used until this transaction is committed</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_entry\">new_entry</a>  = <a class=\"id\" href=\"#kmem_cache_alloc\">kmem_cache_alloc</a>(<a class=\"id\" href=\"#ext4_free_ext_cachep\">ext4_free_ext_cachep</a>, <a class=\"id\" href=\"#GFP_NOFS\">GFP_NOFS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_entry\">new_entry</a>-><a class=\"id\" href=\"#start_blk\">start_blk</a> = <a class=\"id\" href=\"#bit\">bit</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_entry\">new_entry</a>-><a class=\"id\" href=\"#group\">group</a>  = <a class=\"id\" href=\"#block_group\">block_group</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_entry\">new_entry</a>-><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_entry\">new_entry</a>-><a class=\"id\" href=\"#t_tid\">t_tid</a> = <a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#h_transaction\">h_transaction</a>-><a class=\"id\" href=\"#t_tid\">t_tid</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_lock_group\">ext4_lock_group</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#block_group\">block_group</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mb_clear_bits\">mb_clear_bits</a>(<a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>, <a class=\"id\" href=\"#bit\">bit</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_mb_free_metadata\">ext4_mb_free_metadata</a>(<a class=\"id\" href=\"#handle\">handle</a>, &amp;<a class=\"id\" href=\"#e4b\">e4b</a>, <a class=\"id\" href=\"#new_entry\">new_entry</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* need to update group_info-&gt;bb_free and bitmap</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * with group lock held. generate_buddy look at</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * them with group lock_held</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_lock_group\">ext4_lock_group</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#block_group\">block_group</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mb_clear_bits\">mb_clear_bits</a>(<a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>, <a class=\"id\" href=\"#bit\">bit</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mb_free_blocks\">mb_free_blocks</a>(<a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#e4b\">e4b</a>, <a class=\"id\" href=\"#bit\">bit</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_mb_return_to_preallocation\">ext4_mb_return_to_preallocation</a>(<a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#e4b\">e4b</a>, <a class=\"id\" href=\"#block\">block</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#DISCARD\">DISCARD</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_issue_discard\">ext4_issue_discard</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#block_group\">block_group</a>, <a class=\"id\" href=\"#bit\">bit</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ext4_free_blks_count\">ext4_free_blks_count</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#gdp\">gdp</a>) + <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_free_blks_set\">ext4_free_blks_set</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#gdp\">gdp</a>, <a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gdp\">gdp</a>-><a class=\"id\" href=\"#bg_checksum\">bg_checksum</a> = <a class=\"id\" href=\"#ext4_group_desc_csum\">ext4_group_desc_csum</a>(<a class=\"id\" href=\"#sbi\">sbi</a>, <a class=\"id\" href=\"#block_group\">block_group</a>, <a class=\"id\" href=\"#gdp\">gdp</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_unlock_group\">ext4_unlock_group</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#block_group\">block_group</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#percpu_counter_add\">percpu_counter_add</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_freeblocks_counter\">s_freeblocks_counter</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_log_groups_per_flex\">s_log_groups_per_flex</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#flex_group\">flex_group</a> = <a class=\"id\" href=\"#ext4_flex_group\">ext4_flex_group</a>(<a class=\"id\" href=\"#sbi\">sbi</a>, <a class=\"id\" href=\"#block_group\">block_group</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_add\">atomic_add</a>(<a class=\"id\" href=\"#count\">count</a>, &amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_flex_groups\">s_flex_groups</a>[<a class=\"id\" href=\"#flex_group\">flex_group</a>].<a class=\"id\" href=\"#free_blocks\">free_blocks</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_mb_unload_buddy\">ext4_mb_unload_buddy</a>(&amp;<a class=\"id\" href=\"#e4b\">e4b</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#freed\">freed</a> += <a class=\"id\" href=\"#count\">count</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We dirtied the bitmap block */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUFFER_TRACE\">BUFFER_TRACE</a>(<a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>, \"dirtied bitmap block\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_handle_dirty_metadata\">ext4_handle_dirty_metadata</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* And the group descriptor block */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUFFER_TRACE\">BUFFER_TRACE</a>(<a class=\"id\" href=\"#gd_bh\">gd_bh</a>, \"dirtied group descriptor block\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ext4_handle_dirty_metadata\">ext4_handle_dirty_metadata</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#gd_bh\">gd_bh</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#overflow\">overflow</a> && !<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#block\">block</a> += <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#overflow\">overflow</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_bh\">put_bh</a>(<a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#do_more\">do_more</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_mark_super_dirty\">ext4_mark_super_dirty</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<a class=\"id\" href=\"#error_return\">error_return</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#freed\">freed</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dquot_free_block\">dquot_free_block</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#freed\">freed</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_std_error\">ext4_std_error</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ac\">ac</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_free\">kmem_cache_free</a>(<a class=\"id\" href=\"#ext4_ac_cachep\">ext4_ac_cachep</a>, <a class=\"id\" href=\"#ac\">ac</a>);", 
"<span class=\"ts\"/>return;", 
"}", 
];
xr_frag_insert('l/83/cee4c1a1f526863e112ad5b679b80a9e9628d1.xr', __xr_tmp);
