var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Memory preserving reboot related code.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Created by: Hariprasad Nellitheertha (hari@in.ibm.com)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Copyright (C) IBM Corporation, 2004. All rights reserved</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#crash_dump\">crash_dump</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#io\">io</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* Stores the physical address of elf header of crash image. */</span>", 
"unsigned long long <a class=\"id\" href=\"#elfcorehdr_addr\">elfcorehdr_addr</a> = <a class=\"id\" href=\"#ELFCORE_ADDR_MAX\">ELFCORE_ADDR_MAX</a>;", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * copy_oldmem_page - copy one page from \"oldmem\"</span>", 
"<span class=\"comment\"> * @pfn: page frame number to be copied</span>", 
"<span class=\"comment\"> * @buf: target memory address for the copy; this can be in kernel address</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>space or user address space (see @userbuf)</span>", 
"<span class=\"comment\"> * @csize: number of bytes to copy</span>", 
"<span class=\"comment\"> * @offset: offset in bytes into the page (based on pfn) to begin the copy</span>", 
"<span class=\"comment\"> * @userbuf: if set, @buf is in user address space, use copy_to_user(),</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>otherwise @buf is in kernel address space, use memcpy().</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copy a page from \"oldmem\". For this page, there is no pte mapped</span>", 
"<span class=\"comment\"> * in the current kernel. We stitch up a pte, similar to kmap_atomic.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#copy_oldmem_page\">copy_oldmem_page</a>(unsigned long <a class=\"id\" href=\"#pfn\">pfn</a>, char *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#csize\">csize</a>, unsigned long <a class=\"id\" href=\"#offset\">offset</a>, int <a class=\"id\" href=\"#userbuf\">userbuf</a>)", 
"{", 
"<span class=\"ts\"/>void  *<a class=\"id\" href=\"#vaddr\">vaddr</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#csize\">csize</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vaddr\">vaddr</a> = <a class=\"id\" href=\"#ioremap\">ioremap</a>(<a class=\"id\" href=\"#pfn\">pfn</a> << <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#vaddr\">vaddr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#userbuf\">userbuf</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#vaddr\">vaddr</a> + <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#csize\">csize</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iounmap\">iounmap</a>(<a class=\"id\" href=\"#vaddr\">vaddr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#vaddr\">vaddr</a> + <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#csize\">csize</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iounmap\">iounmap</a>(<a class=\"id\" href=\"#vaddr\">vaddr</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#csize\">csize</a>;", 
"}", 
];
xr_frag_insert('l/83/f03fb1a43e89acfc9129bc515ed0edfecdea87.xr', __xr_tmp);
