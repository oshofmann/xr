var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  NSA Security-Enhanced Linux (SELinux) security module</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This file contains the SELinux hook function implementations.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Authors:  Stephen Smalley, &lt;sds@epoch.ncsc.mil&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>      Chris Vance, &lt;cvance@nai.com&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>      Wayne Salamon, &lt;wsalamon@nai.com&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>      James Morris &lt;jmorris@redhat.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 2001,2002 Networks Associates Technology, Inc.</span>", 
"<span class=\"comment\"> *  Copyright (C) 2003-2008 Red Hat, Inc., James Morris &lt;jmorris@redhat.com&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   Eric Paris &lt;eparis@redhat.com&gt;</span>", 
"<span class=\"comment\"> *  Copyright (C) 2004-2005 Trusted Computer Solutions, Inc.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    &lt;dgoeddel@trustedcs.com&gt;</span>", 
"<span class=\"comment\"> *  Copyright (C) 2006, 2007, 2009 Hewlett-Packard Development Company, L.P.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Paul Moore &lt;paul.moore@hp.com&gt;</span>", 
"<span class=\"comment\"> *  Copyright (C) 2007 Hitachi Software Engineering Co., Ltd.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>       Yuichi Nakamura &lt;ynakam@hitachisoft.jp&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>it under the terms of the GNU General Public License version 2,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>as published by the Free Software Foundation.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#tracehook\">tracehook</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#security\">security</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#xattr\">xattr</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#capability\">capability</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#unistd\">unistd</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mman\">mman</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pagemap\">pagemap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#swap\">swap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#syscalls\">syscalls</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#file\">file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fdtable\">fdtable</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#namei\">namei</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mount\">mount</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netfilter_ipv4\">netfilter_ipv4</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netfilter_ipv6\">netfilter_ipv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#tty\">tty</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#icmp\">icmp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip\">ip</a>.<a class=\"id\" href=\"#h\">h</a>&gt;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* for local_port_range[] */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#tcp\">tcp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* struct or_callable used in sock_rcv_skb */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#net_namespace\">net_namespace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#netlabel\">netlabel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#ioctls\">ioctls</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#atomic\">atomic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bitops\">bitops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netdevice\">netdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;<span class=\"ts\"/><span class=\"comment\">/* for network interface checks */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netlink\">netlink</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#tcp\">tcp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#udp\">udp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#dccp\">dccp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#quota\">quota</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#un\">un</a>.<a class=\"id\" href=\"#h\">h</a>&gt;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* for Unix socket types */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#af_unix\">af_unix</a>.<a class=\"id\" href=\"#h\">h</a>&gt;<span class=\"ts\"/><span class=\"comment\">/* for Unix socket types */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#parser\">parser</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#nfs_mount\">nfs_mount</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#hugetlb\">hugetlb</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#personality\">personality</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sysctl\">sysctl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#audit\">audit</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#selinux\">selinux</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mutex\">mutex</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#posix\">posix</a>-<a class=\"id\" href=\"#timers\">timers</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#syslog\">syslog</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"avc.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"objsec.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"netif.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"netnode.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"netport.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"xfrm.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"netlabel.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"audit.h\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NUM_SEL_MNT_OPTS\">NUM_SEL_MNT_OPTS</a> 5", 
"", 
"extern int <a class=\"id\" href=\"#selinux_nlmsg_lookup\">selinux_nlmsg_lookup</a>(<a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#sclass\">sclass</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#nlmsg_type\">nlmsg_type</a>, <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#perm\">perm</a>);", 
"extern struct <a class=\"id\" href=\"#security_operations\">security_operations</a> *<a class=\"id\" href=\"#security_ops\">security_ops</a>;", 
"", 
"<span class=\"comment\">/* SECMARK reference count */</span>", 
"<a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#selinux_secmark_refcount\">selinux_secmark_refcount</a> = <a class=\"id\" href=\"#ATOMIC_INIT\">ATOMIC_INIT</a>(0);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SECURITY_SELINUX_DEVELOP\">CONFIG_SECURITY_SELINUX_DEVELOP</a>", 
"int <a class=\"id\" href=\"#selinux_enforcing\">selinux_enforcing</a>;", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#enforcing_setup\">enforcing_setup</a>(char *<a class=\"id\" href=\"#str\">str</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#enforcing\">enforcing</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#strict_strtoul\">strict_strtoul</a>(<a class=\"id\" href=\"#str\">str</a>, 0, &amp;<a class=\"id\" href=\"#enforcing\">enforcing</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#selinux_enforcing\">selinux_enforcing</a> = <a class=\"id\" href=\"#enforcing\">enforcing</a> ? 1 : 0;", 
"<span class=\"ts\"/>return 1;", 
"}", 
"<a class=\"id\" href=\"#__setup\">__setup</a>(\"enforcing=\", <a class=\"id\" href=\"#enforcing_setup\">enforcing_setup</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SECURITY_SELINUX_BOOTPARAM\">CONFIG_SECURITY_SELINUX_BOOTPARAM</a>", 
"int <a class=\"id\" href=\"#selinux_enabled\">selinux_enabled</a> = <a class=\"id\" href=\"#CONFIG_SECURITY_SELINUX_BOOTPARAM_VALUE\">CONFIG_SECURITY_SELINUX_BOOTPARAM_VALUE</a>;", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#selinux_enabled_setup\">selinux_enabled_setup</a>(char *<a class=\"id\" href=\"#str\">str</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#enabled\">enabled</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#strict_strtoul\">strict_strtoul</a>(<a class=\"id\" href=\"#str\">str</a>, 0, &amp;<a class=\"id\" href=\"#enabled\">enabled</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#selinux_enabled\">selinux_enabled</a> = <a class=\"id\" href=\"#enabled\">enabled</a> ? 1 : 0;", 
"<span class=\"ts\"/>return 1;", 
"}", 
"<a class=\"id\" href=\"#__setup\">__setup</a>(\"selinux=\", <a class=\"id\" href=\"#selinux_enabled_setup\">selinux_enabled_setup</a>);", 
"#else", 
"int <a class=\"id\" href=\"#selinux_enabled\">selinux_enabled</a> = 1;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static struct <a class=\"id\" href=\"#kmem_cache\">kmem_cache</a> *<a class=\"id\" href=\"#sel_inode_cache\">sel_inode_cache</a>;", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * selinux_secmark_enabled - Check to see if SECMARK is currently enabled</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * This function checks the SECMARK reference counter to see if any SECMARK</span>", 
"<span class=\"comment\"> * targets are currently configured, if the reference counter is greater than</span>", 
"<span class=\"comment\"> * zero SECMARK is considered to be enabled.  Returns true (1) if SECMARK is</span>", 
"<span class=\"comment\"> * enabled, false (0) if SECMARK is disabled.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#selinux_secmark_enabled\">selinux_secmark_enabled</a>(void)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#selinux_secmark_refcount\">selinux_secmark_refcount</a>) &gt; 0);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * initialise the security for the init task</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#cred_init_security\">cred_init_security</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#cred\">cred</a> = (struct <a class=\"id\" href=\"#cred\">cred</a> *) <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#real_cred\">real_cred</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_security_struct\">task_security_struct</a> *<a class=\"id\" href=\"#tsec\">tsec</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tsec\">tsec</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#task_security_struct\">task_security_struct</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tsec\">tsec</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"SELinux:  Failed to initialize initial task.\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tsec\">tsec</a>-><a class=\"id\" href=\"#osid\">osid</a> = <a class=\"id\" href=\"#tsec\">tsec</a>-><a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#SECINITSID_KERNEL\">SECINITSID_KERNEL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#security\">security</a> = <a class=\"id\" href=\"#tsec\">tsec</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * get the security ID of a set of credentials</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#cred_sid\">cred_sid</a>(const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#cred\">cred</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#task_security_struct\">task_security_struct</a> *<a class=\"id\" href=\"#tsec\">tsec</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tsec\">tsec</a> = <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#security\">security</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tsec\">tsec</a>-><a class=\"id\" href=\"#sid\">sid</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * get the objective security ID of a task</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#task_sid\">task_sid</a>(const struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#sid\">sid</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#cred_sid\">cred_sid</a>(<a class=\"id\" href=\"#__task_cred\">__task_cred</a>(<a class=\"id\" href=\"#task\">task</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sid\">sid</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * get the subjective security ID of the current task</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#current_sid\">current_sid</a>(void)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#task_security_struct\">task_security_struct</a> *<a class=\"id\" href=\"#tsec\">tsec</a> = <a class=\"id\" href=\"#current_security\">current_security</a>();", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tsec\">tsec</a>-><a class=\"id\" href=\"#sid\">sid</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Allocate and free functions for each kind of security blob. */</span>", 
"", 
"static int <a class=\"id\" href=\"#inode_alloc_security\">inode_alloc_security</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode_security_struct\">inode_security_struct</a> *<a class=\"id\" href=\"#isec\">isec</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#current_sid\">current_sid</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#isec\">isec</a> = <a class=\"id\" href=\"#kmem_cache_zalloc\">kmem_cache_zalloc</a>(<a class=\"id\" href=\"#sel_inode_cache\">sel_inode_cache</a>, <a class=\"id\" href=\"#GFP_NOFS\">GFP_NOFS</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#isec\">isec</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_init\">mutex_init</a>(&amp;<a class=\"id\" href=\"#isec\">isec</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#isec\">isec</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#isec\">isec</a>-><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#isec\">isec</a>-><a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#SECINITSID_UNLABELED\">SECINITSID_UNLABELED</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#isec\">isec</a>-><a class=\"id\" href=\"#sclass\">sclass</a> = <a class=\"id\" href=\"#SECCLASS_FILE\">SECCLASS_FILE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#isec\">isec</a>-><a class=\"id\" href=\"#task_sid\">task_sid</a> = <a class=\"id\" href=\"#sid\">sid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_security\">i_security</a> = <a class=\"id\" href=\"#isec\">isec</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#inode_free_security\">inode_free_security</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode_security_struct\">inode_security_struct</a> *<a class=\"id\" href=\"#isec\">isec</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_security\">i_security</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#superblock_security_struct\">superblock_security_struct</a> *<a class=\"id\" href=\"#sbsec\">sbsec</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_security\">s_security</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#isec_lock\">isec_lock</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#isec\">isec</a>-><a class=\"id\" href=\"#list\">list</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del_init\">list_del_init</a>(&amp;<a class=\"id\" href=\"#isec\">isec</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#isec_lock\">isec_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_security\">i_security</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_free\">kmem_cache_free</a>(<a class=\"id\" href=\"#sel_inode_cache\">sel_inode_cache</a>, <a class=\"id\" href=\"#isec\">isec</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#file_alloc_security\">file_alloc_security</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file_security_struct\">file_security_struct</a> *<a class=\"id\" href=\"#fsec\">fsec</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#current_sid\">current_sid</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fsec\">fsec</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#file_security_struct\">file_security_struct</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#fsec\">fsec</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fsec\">fsec</a>-><a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#sid\">sid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fsec\">fsec</a>-><a class=\"id\" href=\"#fown_sid\">fown_sid</a> = <a class=\"id\" href=\"#sid\">sid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_security\">f_security</a> = <a class=\"id\" href=\"#fsec\">fsec</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#file_free_security\">file_free_security</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file_security_struct\">file_security_struct</a> *<a class=\"id\" href=\"#fsec\">fsec</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_security\">f_security</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_security\">f_security</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#fsec\">fsec</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#superblock_alloc_security\">superblock_alloc_security</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#superblock_security_struct\">superblock_security_struct</a> *<a class=\"id\" href=\"#sbsec\">sbsec</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbsec\">sbsec</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#superblock_security_struct\">superblock_security_struct</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sbsec\">sbsec</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_init\">mutex_init</a>(&amp;<a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#isec_head\">isec_head</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#isec_lock\">isec_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#sb\">sb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#SECINITSID_UNLABELED\">SECINITSID_UNLABELED</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#def_sid\">def_sid</a> = <a class=\"id\" href=\"#SECINITSID_FILE\">SECINITSID_FILE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#mntpoint_sid\">mntpoint_sid</a> = <a class=\"id\" href=\"#SECINITSID_UNLABELED\">SECINITSID_UNLABELED</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_security\">s_security</a> = <a class=\"id\" href=\"#sbsec\">sbsec</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#superblock_free_security\">superblock_free_security</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#superblock_security_struct\">superblock_security_struct</a> *<a class=\"id\" href=\"#sbsec\">sbsec</a> = <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_security\">s_security</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_security\">s_security</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sbsec\">sbsec</a>);", 
"}", 
"", 
"<span class=\"comment\">/* The security server must be initialized before</span>", 
"<span class=\"comment\">   any labeling or access decisions can be provided. */</span>", 
"extern int <a class=\"id\" href=\"#ss_initialized\">ss_initialized</a>;", 
"", 
"<span class=\"comment\">/* The file system's label must be initialized prior to use. */</span>", 
"", 
"static const char *<a class=\"id\" href=\"#labeling_behaviors\">labeling_behaviors</a>[6] = {", 
"<span class=\"ts\"/>\"uses xattr\",", 
"<span class=\"ts\"/>\"uses transition SIDs\",", 
"<span class=\"ts\"/>\"uses task SIDs\",", 
"<span class=\"ts\"/>\"uses genfs_contexts\",", 
"<span class=\"ts\"/>\"not configured for labeling\",", 
"<span class=\"ts\"/>\"uses mountpoint labeling\",", 
"};", 
"", 
"static int <a class=\"id\" href=\"#inode_doinit_with_dentry\">inode_doinit_with_dentry</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#opt_dentry\">opt_dentry</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#inode_doinit\">inode_doinit</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#inode_doinit_with_dentry\">inode_doinit_with_dentry</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"}", 
"", 
"enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_error\">Opt_error</a> = -1,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_context\">Opt_context</a> = 1,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_fscontext\">Opt_fscontext</a> = 2,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_defcontext\">Opt_defcontext</a> = 3,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_rootcontext\">Opt_rootcontext</a> = 4,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_labelsupport\">Opt_labelsupport</a> = 5,", 
"};", 
"", 
"static const <a class=\"id\" href=\"#match_table_t\">match_table_t</a> <a class=\"id\" href=\"#tokens\">tokens</a> = {", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_context\">Opt_context</a>, <a class=\"id\" href=\"#CONTEXT_STR\">CONTEXT_STR</a> \"%s\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_fscontext\">Opt_fscontext</a>, <a class=\"id\" href=\"#FSCONTEXT_STR\">FSCONTEXT_STR</a> \"%s\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_defcontext\">Opt_defcontext</a>, <a class=\"id\" href=\"#DEFCONTEXT_STR\">DEFCONTEXT_STR</a> \"%s\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_rootcontext\">Opt_rootcontext</a>, <a class=\"id\" href=\"#ROOTCONTEXT_STR\">ROOTCONTEXT_STR</a> \"%s\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_labelsupport\">Opt_labelsupport</a>, <a class=\"id\" href=\"#LABELSUPP_STR\">LABELSUPP_STR</a>},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_error\">Opt_error</a>, <a class=\"id\" href=\"#NULL\">NULL</a>},", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SEL_MOUNT_FAIL_MSG\">SEL_MOUNT_FAIL_MSG</a> \"SELinux:  duplicate or incompatible mount options\\n\"", 
"", 
"static int <a class=\"id\" href=\"#may_context_mount_sb_relabel\">may_context_mount_sb_relabel</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#sid\">sid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#superblock_security_struct\">superblock_security_struct</a> *<a class=\"id\" href=\"#sbsec\">sbsec</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#cred\">cred</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#task_security_struct\">task_security_struct</a> *<a class=\"id\" href=\"#tsec\">tsec</a> = <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#security\">security</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#avc_has_perm\">avc_has_perm</a>(<a class=\"id\" href=\"#tsec\">tsec</a>-><a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#SECCLASS_FILESYSTEM\">SECCLASS_FILESYSTEM</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#FILESYSTEM__RELABELFROM\">FILESYSTEM__RELABELFROM</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#avc_has_perm\">avc_has_perm</a>(<a class=\"id\" href=\"#tsec\">tsec</a>-><a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#SECCLASS_FILESYSTEM\">SECCLASS_FILESYSTEM</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#FILESYSTEM__RELABELTO\">FILESYSTEM__RELABELTO</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#may_context_mount_inode_relabel\">may_context_mount_inode_relabel</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#sid\">sid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#superblock_security_struct\">superblock_security_struct</a> *<a class=\"id\" href=\"#sbsec\">sbsec</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#cred\">cred</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#task_security_struct\">task_security_struct</a> *<a class=\"id\" href=\"#tsec\">tsec</a> = <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#security\">security</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#avc_has_perm\">avc_has_perm</a>(<a class=\"id\" href=\"#tsec\">tsec</a>-><a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#SECCLASS_FILESYSTEM\">SECCLASS_FILESYSTEM</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#FILESYSTEM__RELABELFROM\">FILESYSTEM__RELABELFROM</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#avc_has_perm\">avc_has_perm</a>(<a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#SECCLASS_FILESYSTEM\">SECCLASS_FILESYSTEM</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#FILESYSTEM__ASSOCIATE\">FILESYSTEM__ASSOCIATE</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#sb_finish_set_opts\">sb_finish_set_opts</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#superblock_security_struct\">superblock_security_struct</a> *<a class=\"id\" href=\"#sbsec\">sbsec</a> = <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_security\">s_security</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#root\">root</a> = <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_root\">s_root</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#root_inode\">root_inode</a> = <a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#behavior\">behavior</a> == <a class=\"id\" href=\"#SECURITY_FS_USE_XATTR\">SECURITY_FS_USE_XATTR</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Make sure that the xattr handler exists and that no</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   error other than -ENODATA is returned by getxattr on</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   the root directory.  -ENODATA is ok, as this may be</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   the first boot of the SELinux kernel before we have</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   assigned xattr values to the filesystem. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#root_inode\">root_inode</a>-><a class=\"id\" href=\"#i_op\">i_op</a>-><a class=\"id\" href=\"#getxattr\">getxattr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"SELinux: (dev %s, type %s) has no \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"xattr support\\n\", <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_id\">s_id</a>, <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_type\">s_type</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EOPNOTSUPP\">EOPNOTSUPP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#root_inode\">root_inode</a>-><a class=\"id\" href=\"#i_op\">i_op</a>-><a class=\"id\" href=\"#getxattr\">getxattr</a>(<a class=\"id\" href=\"#root\">root</a>, <a class=\"id\" href=\"#XATTR_NAME_SELINUX\">XATTR_NAME_SELINUX</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0 && <a class=\"id\" href=\"#rc\">rc</a> != -<a class=\"id\" href=\"#ENODATA\">ENODATA</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> == -<a class=\"id\" href=\"#EOPNOTSUPP\">EOPNOTSUPP</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"SELinux: (dev %s, type \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"%s) has no security xattr handler\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_id\">s_id</a>, <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_type\">s_type</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"SELinux: (dev %s, type \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"%s) getxattr errno %d\\n\", <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_id\">s_id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_type\">s_type</a>-><a class=\"id\" href=\"#name\">name</a>, -<a class=\"id\" href=\"#rc\">rc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#flags\">flags</a> |= (<a class=\"id\" href=\"#SE_SBINITIALIZED\">SE_SBINITIALIZED</a> | <a class=\"id\" href=\"#SE_SBLABELSUPP\">SE_SBLABELSUPP</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#behavior\">behavior</a> &gt; <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#labeling_behaviors\">labeling_behaviors</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: initialized (dev %s, type %s), unknown behavior\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_id\">s_id</a>, <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_type\">s_type</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"SELinux: initialized (dev %s, type %s), %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_id\">s_id</a>, <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_type\">s_type</a>-><a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#labeling_behaviors\">labeling_behaviors</a>[<a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#behavior\">behavior</a>-1]);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#behavior\">behavior</a> == <a class=\"id\" href=\"#SECURITY_FS_USE_GENFS\">SECURITY_FS_USE_GENFS</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#behavior\">behavior</a> == <a class=\"id\" href=\"#SECURITY_FS_USE_MNTPOINT\">SECURITY_FS_USE_MNTPOINT</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#behavior\">behavior</a> == <a class=\"id\" href=\"#SECURITY_FS_USE_NONE\">SECURITY_FS_USE_NONE</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#behavior\">behavior</a> &gt; <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#labeling_behaviors\">labeling_behaviors</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#SE_SBLABELSUPP\">SE_SBLABELSUPP</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Special handling for sysfs. Is genfs but also has setxattr handler*/</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#strncmp\">strncmp</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_type\">s_type</a>-><a class=\"id\" href=\"#name\">name</a>, \"sysfs\", sizeof(\"sysfs\")) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#SE_SBLABELSUPP\">SE_SBLABELSUPP</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Initialize the root inode. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#inode_doinit_with_dentry\">inode_doinit_with_dentry</a>(<a class=\"id\" href=\"#root_inode\">root_inode</a>, <a class=\"id\" href=\"#root\">root</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Initialize any other inodes associated with the superblock, e.g.</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   inodes created prior to initial policy load or inodes created</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   during get_sb by a pseudo filesystem that directly</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   populates itself. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#isec_lock\">isec_lock</a>);", 
"<a class=\"id\" href=\"#next_inode\">next_inode</a>:", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#isec_head\">isec_head</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inode_security_struct\">inode_security_struct</a> *<a class=\"id\" href=\"#isec\">isec</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#isec_head\">isec_head</a>.<a class=\"id\" href=\"#next\">next</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#inode_security_struct\">inode_security_struct</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#isec\">isec</a>-><a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#isec_lock\">isec_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#igrab\">igrab</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inode\">inode</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_PRIVATE\">IS_PRIVATE</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode_doinit\">inode_doinit</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#isec_lock\">isec_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del_init\">list_del_init</a>(&amp;<a class=\"id\" href=\"#isec\">isec</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#next_inode\">next_inode</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#isec_lock\">isec_lock</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This function should allow an FS to ask what it's mount security</span>", 
"<span class=\"comment\"> * options were so it can use those later for submounts, displaying</span>", 
"<span class=\"comment\"> * mount options, or whatever.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#selinux_get_mnt_opts\">selinux_get_mnt_opts</a>(const struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#security_mnt_opts\">security_mnt_opts</a> *<a class=\"id\" href=\"#opts\">opts</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = 0, <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#superblock_security_struct\">superblock_security_struct</a> *<a class=\"id\" href=\"#sbsec\">sbsec</a> = <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_security\">s_security</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#context\">context</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#security_init_mnt_opts\">security_init_mnt_opts</a>(<a class=\"id\" href=\"#opts\">opts</a>);", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#SE_SBINITIALIZED\">SE_SBINITIALIZED</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ss_initialized\">ss_initialized</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#SE_MNTMASK\">SE_MNTMASK</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* count the number of mount options for this sb */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 8; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tmp\">tmp</a> &amp; 0x01)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#num_mnt_opts\">num_mnt_opts</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> >>= 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* Check if the Label support flag is set */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#SE_SBLABELSUPP\">SE_SBLABELSUPP</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#num_mnt_opts\">num_mnt_opts</a>++;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#mnt_opts\">mnt_opts</a> = <a class=\"id\" href=\"#kcalloc\">kcalloc</a>(<a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#num_mnt_opts\">num_mnt_opts</a>, sizeof(char *), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#mnt_opts\">mnt_opts</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free\">out_free</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#mnt_opts_flags\">mnt_opts_flags</a> = <a class=\"id\" href=\"#kcalloc\">kcalloc</a>(<a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#num_mnt_opts\">num_mnt_opts</a>, sizeof(int), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#mnt_opts_flags\">mnt_opts_flags</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free\">out_free</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#FSCONTEXT_MNT\">FSCONTEXT_MNT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#security_sid_to_context\">security_sid_to_context</a>(<a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#sid\">sid</a>, &amp;<a class=\"id\" href=\"#context\">context</a>, &amp;<a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free\">out_free</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#mnt_opts\">mnt_opts</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#context\">context</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#mnt_opts_flags\">mnt_opts_flags</a>[<a class=\"id\" href=\"#i\">i</a>++] = <a class=\"id\" href=\"#FSCONTEXT_MNT\">FSCONTEXT_MNT</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#CONTEXT_MNT\">CONTEXT_MNT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#security_sid_to_context\">security_sid_to_context</a>(<a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#mntpoint_sid\">mntpoint_sid</a>, &amp;<a class=\"id\" href=\"#context\">context</a>, &amp;<a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free\">out_free</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#mnt_opts\">mnt_opts</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#context\">context</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#mnt_opts_flags\">mnt_opts_flags</a>[<a class=\"id\" href=\"#i\">i</a>++] = <a class=\"id\" href=\"#CONTEXT_MNT\">CONTEXT_MNT</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#DEFCONTEXT_MNT\">DEFCONTEXT_MNT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#security_sid_to_context\">security_sid_to_context</a>(<a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#def_sid\">def_sid</a>, &amp;<a class=\"id\" href=\"#context\">context</a>, &amp;<a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free\">out_free</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#mnt_opts\">mnt_opts</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#context\">context</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#mnt_opts_flags\">mnt_opts_flags</a>[<a class=\"id\" href=\"#i\">i</a>++] = <a class=\"id\" href=\"#DEFCONTEXT_MNT\">DEFCONTEXT_MNT</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ROOTCONTEXT_MNT\">ROOTCONTEXT_MNT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#root\">root</a> = <a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_root\">s_root</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inode_security_struct\">inode_security_struct</a> *<a class=\"id\" href=\"#isec\">isec</a> = <a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#i_security\">i_security</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#security_sid_to_context\">security_sid_to_context</a>(<a class=\"id\" href=\"#isec\">isec</a>-><a class=\"id\" href=\"#sid\">sid</a>, &amp;<a class=\"id\" href=\"#context\">context</a>, &amp;<a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free\">out_free</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#mnt_opts\">mnt_opts</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#context\">context</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#mnt_opts_flags\">mnt_opts_flags</a>[<a class=\"id\" href=\"#i\">i</a>++] = <a class=\"id\" href=\"#ROOTCONTEXT_MNT\">ROOTCONTEXT_MNT</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#SE_SBLABELSUPP\">SE_SBLABELSUPP</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#mnt_opts\">mnt_opts</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#mnt_opts_flags\">mnt_opts_flags</a>[<a class=\"id\" href=\"#i\">i</a>++] = <a class=\"id\" href=\"#SE_SBLABELSUPP\">SE_SBLABELSUPP</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#i\">i</a> != <a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#num_mnt_opts\">num_mnt_opts</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#out_free\">out_free</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#security_free_mnt_opts\">security_free_mnt_opts</a>(<a class=\"id\" href=\"#opts\">opts</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#bad_option\">bad_option</a>(struct <a class=\"id\" href=\"#superblock_security_struct\">superblock_security_struct</a> *<a class=\"id\" href=\"#sbsec\">sbsec</a>, char <a class=\"id\" href=\"#flag\">flag</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#old_sid\">old_sid</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#new_sid\">new_sid</a>)", 
"{", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#mnt_flags\">mnt_flags</a> = <a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#SE_MNTMASK\">SE_MNTMASK</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* check if the old mount command had the same options */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#SE_SBINITIALIZED\">SE_SBINITIALIZED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#flag\">flag</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#old_sid\">old_sid</a> != <a class=\"id\" href=\"#new_sid\">new_sid</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* check if we were passed the same options twice,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * aka someone passed context=a,context=b</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#SE_SBINITIALIZED\">SE_SBINITIALIZED</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mnt_flags\">mnt_flags</a> &amp; <a class=\"id\" href=\"#flag\">flag</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Allow filesystems with binary mount data to explicitly set mount point</span>", 
"<span class=\"comment\"> * labeling information.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#selinux_set_mnt_opts\">selinux_set_mnt_opts</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#security_mnt_opts\">security_mnt_opts</a> *<a class=\"id\" href=\"#opts\">opts</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#cred\">cred</a> = <a class=\"id\" href=\"#current_cred\">current_cred</a>();", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = 0, <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#superblock_security_struct\">superblock_security_struct</a> *<a class=\"id\" href=\"#sbsec\">sbsec</a> = <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_security\">s_security</a>;", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_type\">s_type</a>-><a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_root\">s_root</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode_security_struct\">inode_security_struct</a> *<a class=\"id\" href=\"#root_isec\">root_isec</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_security\">i_security</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#fscontext_sid\">fscontext_sid</a> = 0, <a class=\"id\" href=\"#context_sid\">context_sid</a> = 0, <a class=\"id\" href=\"#rootcontext_sid\">rootcontext_sid</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#defcontext_sid\">defcontext_sid</a> = 0;", 
"<span class=\"ts\"/>char **<a class=\"id\" href=\"#mount_options\">mount_options</a> = <a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#mnt_opts\">mnt_opts</a>;", 
"<span class=\"ts\"/>int *<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#mnt_opts_flags\">mnt_opts_flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#num_opts\">num_opts</a> = <a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#num_mnt_opts\">num_mnt_opts</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ss_initialized\">ss_initialized</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#num_opts\">num_opts</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Defer initialization until selinux_complete_init,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   after the initial policy is loaded and the security</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   server is ready to handle calls. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"SELinux: Unable to set superblock options \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"before the security server is initialized\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Binary mount data FS will come through this function twice.  Once</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * from an explicit call and once from the generic calls from the vfs.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Since the generic VFS calls will not contain any security mount data</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we need to skip the double mount verification.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This does open a hole in which we will not notice if the first</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * mount using this sb set explict options and a second mount using</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * this sb does not set any security options.  (The first options</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * will be used for both mounts)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#SE_SBINITIALIZED\">SE_SBINITIALIZED</a>) && (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_type\">s_type</a>-><a class=\"id\" href=\"#fs_flags\">fs_flags</a> &amp; <a class=\"id\" href=\"#FS_BINARY_MOUNTDATA\">FS_BINARY_MOUNTDATA</a>)", 
"<span class=\"ts\"/>    && (<a class=\"id\" href=\"#num_opts\">num_opts</a> == 0))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * parse the mount options, check if they are valid sids.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * also check if someone is trying to mount the same sb more</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * than once with different security options.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#num_opts\">num_opts</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#sid\">sid</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a>[<a class=\"id\" href=\"#i\">i</a>] == <a class=\"id\" href=\"#SE_SBLABELSUPP\">SE_SBLABELSUPP</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#security_context_to_sid\">security_context_to_sid</a>(<a class=\"id\" href=\"#mount_options\">mount_options</a>[<a class=\"id\" href=\"#i\">i</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#mount_options\">mount_options</a>[<a class=\"id\" href=\"#i\">i</a>]), &amp;<a class=\"id\" href=\"#sid\">sid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"SELinux: security_context_to_sid\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"(%s) failed for (dev %s, type %s) errno=%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#mount_options\">mount_options</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_id\">s_id</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#rc\">rc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#flags\">flags</a>[<a class=\"id\" href=\"#i\">i</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#FSCONTEXT_MNT\">FSCONTEXT_MNT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fscontext_sid\">fscontext_sid</a> = <a class=\"id\" href=\"#sid\">sid</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#bad_option\">bad_option</a>(<a class=\"id\" href=\"#sbsec\">sbsec</a>, <a class=\"id\" href=\"#FSCONTEXT_MNT\">FSCONTEXT_MNT</a>, <a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#sid\">sid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fscontext_sid\">fscontext_sid</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_double_mount\">out_double_mount</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#FSCONTEXT_MNT\">FSCONTEXT_MNT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CONTEXT_MNT\">CONTEXT_MNT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context_sid\">context_sid</a> = <a class=\"id\" href=\"#sid\">sid</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#bad_option\">bad_option</a>(<a class=\"id\" href=\"#sbsec\">sbsec</a>, <a class=\"id\" href=\"#CONTEXT_MNT\">CONTEXT_MNT</a>, <a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#mntpoint_sid\">mntpoint_sid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context_sid\">context_sid</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_double_mount\">out_double_mount</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbsec\">sbsec</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#CONTEXT_MNT\">CONTEXT_MNT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ROOTCONTEXT_MNT\">ROOTCONTEXT_MNT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rootcontext_sid\">rootcontext_sid</a> = <a class=\"id\" href=\"#sid\">sid</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#bad_option\">bad_option</a>(<a class=\"id\" href=\"#sbsec\">sbsec</a>, <a class=\"id\" href=\"#ROOTCONTEXT_MNT\">ROOTCONTEXT_MNT</a>, <a class=\"id\" href=\"#root_isec\">root_isec</a>-><a class=\"id\" href=\"#sid\">sid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rootcontext_sid\">rootcontext_sid</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_double_mount\">out_double_mount</a>;", 
];
xr_frag_insert('l/84/0993e4e9cd0b994e593686d177a0cbd1872e9a.xr', __xr_tmp);
