var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtc_time\">rtc_time</a> <a class=\"id\" href=\"#tm\">tm</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#rtc_read_time\">rtc_read_time</a>(<a class=\"id\" href=\"#to_rtc_device\">to_rtc_device</a>(<a class=\"id\" href=\"#dev\">dev</a>), &amp;<a class=\"id\" href=\"#tm\">tm</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%02d:%02d:%02d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tm\">tm</a>.<a class=\"id\" href=\"#tm_hour\">tm_hour</a>, <a class=\"id\" href=\"#tm\">tm</a>.<a class=\"id\" href=\"#tm_min\">tm_min</a>, <a class=\"id\" href=\"#tm\">tm</a>.<a class=\"id\" href=\"#tm_sec\">tm_sec</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#rtc_sysfs_show_since_epoch\">rtc_sysfs_show_since_epoch</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtc_time\">rtc_time</a> <a class=\"id\" href=\"#tm\">tm</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#rtc_read_time\">rtc_read_time</a>(<a class=\"id\" href=\"#to_rtc_device\">to_rtc_device</a>(<a class=\"id\" href=\"#dev\">dev</a>), &amp;<a class=\"id\" href=\"#tm\">tm</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#time\">time</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtc_tm_to_time\">rtc_tm_to_time</a>(&amp;<a class=\"id\" href=\"#tm\">tm</a>, &amp;<a class=\"id\" href=\"#time\">time</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%lu\\n\", <a class=\"id\" href=\"#time\">time</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#rtc_sysfs_show_max_user_freq\">rtc_sysfs_show_max_user_freq</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%d\\n\", <a class=\"id\" href=\"#to_rtc_device\">to_rtc_device</a>(<a class=\"id\" href=\"#dev\">dev</a>)-><a class=\"id\" href=\"#max_user_freq\">max_user_freq</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#rtc_sysfs_set_max_user_freq\">rtc_sysfs_set_max_user_freq</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#n\">n</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtc_device\">rtc_device</a> *<a class=\"id\" href=\"#rtc\">rtc</a> = <a class=\"id\" href=\"#to_rtc_device\">to_rtc_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#simple_strtoul\">simple_strtoul</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#val\">val</a> >= 4096 || <a class=\"id\" href=\"#val\">val</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#max_user_freq\">max_user_freq</a> = (int)<a class=\"id\" href=\"#val\">val</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#n\">n</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#rtc_sysfs_show_hctosys\">rtc_sysfs_show_hctosys</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_RTC_HCTOSYS_DEVICE\">CONFIG_RTC_HCTOSYS_DEVICE</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rtc_hctosys_ret\">rtc_hctosys_ret</a> == 0 &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#dev_name\">dev_name</a>(&amp;<a class=\"id\" href=\"#to_rtc_device\">to_rtc_device</a>(<a class=\"id\" href=\"#dev\">dev</a>)-><a class=\"id\" href=\"#dev\">dev</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#CONFIG_RTC_HCTOSYS_DEVICE\">CONFIG_RTC_HCTOSYS_DEVICE</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"1\\n\");", 
"<span class=\"ts\"/>else", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"0\\n\");", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> <a class=\"id\" href=\"#rtc_attrs\">rtc_attrs</a>[] = {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ATTR\">__ATTR</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#rtc_sysfs_show_name\">rtc_sysfs_show_name</a>, <a class=\"id\" href=\"#NULL\">NULL</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ATTR\">__ATTR</a>(<a class=\"id\" href=\"#date\">date</a>, <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#rtc_sysfs_show_date\">rtc_sysfs_show_date</a>, <a class=\"id\" href=\"#NULL\">NULL</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ATTR\">__ATTR</a>(<a class=\"id\" href=\"#time\">time</a>, <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#rtc_sysfs_show_time\">rtc_sysfs_show_time</a>, <a class=\"id\" href=\"#NULL\">NULL</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ATTR\">__ATTR</a>(<a class=\"id\" href=\"#since_epoch\">since_epoch</a>, <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#rtc_sysfs_show_since_epoch\">rtc_sysfs_show_since_epoch</a>, <a class=\"id\" href=\"#NULL\">NULL</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ATTR\">__ATTR</a>(<a class=\"id\" href=\"#max_user_freq\">max_user_freq</a>, <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a> | <a class=\"id\" href=\"#S_IWUSR\">S_IWUSR</a>, <a class=\"id\" href=\"#rtc_sysfs_show_max_user_freq\">rtc_sysfs_show_max_user_freq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtc_sysfs_set_max_user_freq\">rtc_sysfs_set_max_user_freq</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ATTR\">__ATTR</a>(<a class=\"id\" href=\"#hctosys\">hctosys</a>, <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#rtc_sysfs_show_hctosys\">rtc_sysfs_show_hctosys</a>, <a class=\"id\" href=\"#NULL\">NULL</a>),", 
"<span class=\"ts\"/>{ },", 
"};", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#rtc_sysfs_show_wakealarm\">rtc_sysfs_show_wakealarm</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#alarm\">alarm</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtc_wkalrm\">rtc_wkalrm</a> <a class=\"id\" href=\"#alm\">alm</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Don't show disabled alarms.  For uniformity, RTC alarms are</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * conceptually one-shot, even though some common RTCs (on PCs)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * don't actually work that way.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * NOTE: RTC implementations where the alarm doesn't match an</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * exact YYYY-MM-DD HH:MM[:SS] date *must* disable their RTC</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * alarms after they trigger, to ensure one-shot semantics.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#rtc_read_alarm\">rtc_read_alarm</a>(<a class=\"id\" href=\"#to_rtc_device\">to_rtc_device</a>(<a class=\"id\" href=\"#dev\">dev</a>), &amp;<a class=\"id\" href=\"#alm\">alm</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> == 0 && <a class=\"id\" href=\"#alm\">alm</a>.<a class=\"id\" href=\"#enabled\">enabled</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtc_tm_to_time\">rtc_tm_to_time</a>(&amp;<a class=\"id\" href=\"#alm\">alm</a>.<a class=\"id\" href=\"#time\">time</a>, &amp;<a class=\"id\" href=\"#alarm\">alarm</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%lu\\n\", <a class=\"id\" href=\"#alarm\">alarm</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#rtc_sysfs_set_wakealarm\">rtc_sysfs_set_wakealarm</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#n\">n</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#now\">now</a>, <a class=\"id\" href=\"#alarm\">alarm</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtc_wkalrm\">rtc_wkalrm</a> <a class=\"id\" href=\"#alm\">alm</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtc_device\">rtc_device</a> *<a class=\"id\" href=\"#rtc\">rtc</a> = <a class=\"id\" href=\"#to_rtc_device\">to_rtc_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#buf_ptr\">buf_ptr</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#adjust\">adjust</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Only request alarms that trigger in the future.  Disable them</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * by writing another time, e.g. 0 meaning Jan 1 1970 UTC.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#rtc_read_time\">rtc_read_time</a>(<a class=\"id\" href=\"#rtc\">rtc</a>, &amp;<a class=\"id\" href=\"#alm\">alm</a>.<a class=\"id\" href=\"#time\">time</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtc_tm_to_time\">rtc_tm_to_time</a>(&amp;<a class=\"id\" href=\"#alm\">alm</a>.<a class=\"id\" href=\"#time\">time</a>, &amp;<a class=\"id\" href=\"#now\">now</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf_ptr\">buf_ptr</a> = (char *)<a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#buf_ptr\">buf_ptr</a> == '+') {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf_ptr\">buf_ptr</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#adjust\">adjust</a> = 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#alarm\">alarm</a> = <a class=\"id\" href=\"#simple_strtoul\">simple_strtoul</a>(<a class=\"id\" href=\"#buf_ptr\">buf_ptr</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#adjust\">adjust</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alarm\">alarm</a> += <a class=\"id\" href=\"#now\">now</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#alarm\">alarm</a> &gt; <a class=\"id\" href=\"#now\">now</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Avoid accidentally clobbering active alarms; we can't</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * entirely prevent that here, without even the minimal</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * locking from the /dev/rtcN api.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#rtc_read_alarm\">rtc_read_alarm</a>(<a class=\"id\" href=\"#rtc\">rtc</a>, &amp;<a class=\"id\" href=\"#alm\">alm</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#alm\">alm</a>.<a class=\"id\" href=\"#enabled\">enabled</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alm\">alm</a>.<a class=\"id\" href=\"#enabled\">enabled</a> = 1;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alm\">alm</a>.<a class=\"id\" href=\"#enabled\">enabled</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Provide a valid future alarm time.  Linux isn't EFI,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * this time won't be ignored when disabling the alarm.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alarm\">alarm</a> = <a class=\"id\" href=\"#now\">now</a> + 300;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtc_time_to_tm\">rtc_time_to_tm</a>(<a class=\"id\" href=\"#alarm\">alarm</a>, &amp;<a class=\"id\" href=\"#alm\">alm</a>.<a class=\"id\" href=\"#time\">time</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#rtc_set_alarm\">rtc_set_alarm</a>(<a class=\"id\" href=\"#rtc\">rtc</a>, &amp;<a class=\"id\" href=\"#alm\">alm</a>);", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#retval\">retval</a> &lt; 0) ? <a class=\"id\" href=\"#retval\">retval</a> : <a class=\"id\" href=\"#n\">n</a>;", 
"}", 
"static <a class=\"id\" href=\"#DEVICE_ATTR\">DEVICE_ATTR</a>(<a class=\"id\" href=\"#wakealarm\">wakealarm</a>, <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a> | <a class=\"id\" href=\"#S_IWUSR\">S_IWUSR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtc_sysfs_show_wakealarm\">rtc_sysfs_show_wakealarm</a>, <a class=\"id\" href=\"#rtc_sysfs_set_wakealarm\">rtc_sysfs_set_wakealarm</a>);", 
"", 
"", 
"<span class=\"comment\">/* The reason to trigger an alarm with no process watching it (via sysfs)</span>", 
"<span class=\"comment\"> * is its side effect:  waking from a system state like suspend-to-RAM or</span>", 
"<span class=\"comment\"> * suspend-to-disk.  So: no attribute unless that side effect is possible.</span>", 
"<span class=\"comment\"> * (Userspace may disable that mechanism later.)</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#rtc_does_wakealarm\">rtc_does_wakealarm</a>(struct <a class=\"id\" href=\"#rtc_device\">rtc_device</a> *<a class=\"id\" href=\"#rtc\">rtc</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#device_can_wakeup\">device_can_wakeup</a>(<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#parent\">parent</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#set_alarm\">set_alarm</a> != <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"", 
"void <a class=\"id\" href=\"#rtc_sysfs_add_device\">rtc_sysfs_add_device</a>(struct <a class=\"id\" href=\"#rtc_device\">rtc_device</a> *<a class=\"id\" href=\"#rtc\">rtc</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* not all RTCs support both alarms and wakeup */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rtc_does_wakealarm\">rtc_does_wakealarm</a>(<a class=\"id\" href=\"#rtc\">rtc</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#device_create_file\">device_create_file</a>(&amp;<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#dev_attr_wakealarm\">dev_attr_wakealarm</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_err\">dev_err</a>(<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#parent\">parent</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"failed to create alarm attribute, %d\\n\", <a class=\"id\" href=\"#err\">err</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#rtc_sysfs_del_device\">rtc_sysfs_del_device</a>(struct <a class=\"id\" href=\"#rtc_device\">rtc_device</a> *<a class=\"id\" href=\"#rtc\">rtc</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* REVISIT did we add it successfully? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rtc_does_wakealarm\">rtc_does_wakealarm</a>(<a class=\"id\" href=\"#rtc\">rtc</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device_remove_file\">device_remove_file</a>(&amp;<a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#dev_attr_wakealarm\">dev_attr_wakealarm</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#rtc_sysfs_init\">rtc_sysfs_init</a>(struct <a class=\"id\" href=\"#class\">class</a> *<a class=\"id\" href=\"#rtc_class\">rtc_class</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtc_class\">rtc_class</a>-><a class=\"id\" href=\"#dev_attrs\">dev_attrs</a> = <a class=\"id\" href=\"#rtc_attrs\">rtc_attrs</a>;", 
"}", 
];
xr_frag_insert('l/85/5ddf9d9c4d38b14712fe2ee4aaa09b84b9e4ad.xr', __xr_tmp);
