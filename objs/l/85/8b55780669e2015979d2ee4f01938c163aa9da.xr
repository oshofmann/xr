var __xr_tmp = [
"<span class=\"ts\"/><a class=\"id\" href=\"#hrtimer_set_expires\">hrtimer_set_expires</a>(&amp;<a class=\"id\" href=\"#ts\">ts</a>-><a class=\"id\" href=\"#sched_timer\">sched_timer</a>, <a class=\"id\" href=\"#tick_init_jiffy_update\">tick_init_jiffy_update</a>());", 
"", 
"<span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hrtimer_forward\">hrtimer_forward</a>(&amp;<a class=\"id\" href=\"#ts\">ts</a>-><a class=\"id\" href=\"#sched_timer\">sched_timer</a>, <a class=\"id\" href=\"#now\">now</a>, <a class=\"id\" href=\"#tick_period\">tick_period</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hrtimer_start_expires\">hrtimer_start_expires</a>(&amp;<a class=\"id\" href=\"#ts\">ts</a>-><a class=\"id\" href=\"#sched_timer\">sched_timer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#HRTIMER_MODE_ABS_PINNED\">HRTIMER_MODE_ABS_PINNED</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Check, if the timer was already in the past */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#hrtimer_active\">hrtimer_active</a>(&amp;<a class=\"id\" href=\"#ts\">ts</a>-><a class=\"id\" href=\"#sched_timer\">sched_timer</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#now\">now</a> = <a class=\"id\" href=\"#ktime_get\">ktime_get</a>();", 
"<span class=\"ts\"/>}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NO_HZ\">CONFIG_NO_HZ</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tick_nohz_enabled\">tick_nohz_enabled</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ts\">ts</a>-><a class=\"id\" href=\"#nohz_mode\">nohz_mode</a> = <a class=\"id\" href=\"#NOHZ_MODE_HIGHRES\">NOHZ_MODE_HIGHRES</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* HIGH_RES_TIMERS */</span>", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a> <a class=\"id\" href=\"#CONFIG_NO_HZ\">CONFIG_NO_HZ</a> || <a class=\"id\" href=\"#defined\">defined</a> <a class=\"id\" href=\"#CONFIG_HIGH_RES_TIMERS\">CONFIG_HIGH_RES_TIMERS</a>", 
"void <a class=\"id\" href=\"#tick_cancel_sched_timer\">tick_cancel_sched_timer</a>(int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tick_sched\">tick_sched</a> *<a class=\"id\" href=\"#ts\">ts</a> = &amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#tick_cpu_sched\">tick_cpu_sched</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"# <a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HIGH_RES_TIMERS\">CONFIG_HIGH_RES_TIMERS</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ts\">ts</a>-><a class=\"id\" href=\"#sched_timer\">sched_timer</a>.<a class=\"id\" href=\"#base\">base</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hrtimer_cancel\">hrtimer_cancel</a>(&amp;<a class=\"id\" href=\"#ts\">ts</a>-><a class=\"id\" href=\"#sched_timer\">sched_timer</a>);", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ts\">ts</a>-><a class=\"id\" href=\"#nohz_mode\">nohz_mode</a> = <a class=\"id\" href=\"#NOHZ_MODE_INACTIVE\">NOHZ_MODE_INACTIVE</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * Async notification about clocksource changes</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#tick_clock_notify\">tick_clock_notify</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_possible_cpu\">for_each_possible_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(0, &amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#tick_cpu_sched\">tick_cpu_sched</a>, <a class=\"id\" href=\"#cpu\">cpu</a>).<a class=\"id\" href=\"#check_clocks\">check_clocks</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Async notification about clock event changes</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#tick_oneshot_notify\">tick_oneshot_notify</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tick_sched\">tick_sched</a> *<a class=\"id\" href=\"#ts\">ts</a> = &amp;<a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#tick_cpu_sched\">tick_cpu_sched</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(0, &amp;<a class=\"id\" href=\"#ts\">ts</a>-><a class=\"id\" href=\"#check_clocks\">check_clocks</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * Check, if a change happened, which makes oneshot possible.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Called cyclic from the hrtimer softirq (driven by the timer</span>", 
"<span class=\"comment\"> * softirq) allow_nohz signals, that we can switch into low-res nohz</span>", 
"<span class=\"comment\"> * mode, because high resolution timers are disabled (either compile</span>", 
"<span class=\"comment\"> * or runtime).</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#tick_check_oneshot_change\">tick_check_oneshot_change</a>(int <a class=\"id\" href=\"#allow_nohz\">allow_nohz</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tick_sched\">tick_sched</a> *<a class=\"id\" href=\"#ts\">ts</a> = &amp;<a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#tick_cpu_sched\">tick_cpu_sched</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_and_clear_bit\">test_and_clear_bit</a>(0, &amp;<a class=\"id\" href=\"#ts\">ts</a>-><a class=\"id\" href=\"#check_clocks\">check_clocks</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ts\">ts</a>-><a class=\"id\" href=\"#nohz_mode\">nohz_mode</a> != <a class=\"id\" href=\"#NOHZ_MODE_INACTIVE\">NOHZ_MODE_INACTIVE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#timekeeping_valid_for_hres\">timekeeping_valid_for_hres</a>() || !<a class=\"id\" href=\"#tick_is_oneshot_available\">tick_is_oneshot_available</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#allow_nohz\">allow_nohz</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tick_nohz_switch_to_nohz\">tick_nohz_switch_to_nohz</a>();", 
"<span class=\"ts\"/>return 0;", 
"}", 
];
xr_frag_insert('l/85/8b55780669e2015979d2ee4f01938c163aa9da.xr', __xr_tmp);
