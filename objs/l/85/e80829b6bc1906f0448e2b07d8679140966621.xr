var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Infrastructure for statistic tracing (histogram output).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2008-2009 Frederic Weisbecker &lt;fweisbec@gmail.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Based on the code from trace_branch.c which is</span>", 
"<span class=\"comment\"> * Copyright (C) 2008 Steven Rostedt &lt;srostedt@redhat.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rbtree\">rbtree</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#debugfs\">debugfs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"trace_stat.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"trace.h\"", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * List of stat red-black nodes from a tracer</span>", 
"<span class=\"comment\"> * We use a such tree to sort quickly the stat</span>", 
"<span class=\"comment\"> * entries from the tracer.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#stat_node\">stat_node</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#stat\">stat</a>;", 
"};", 
"", 
"<span class=\"comment\">/* A stat session is the stats output in one file */</span>", 
"struct <a class=\"id\" href=\"#stat_session\">stat_session</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#session_list\">session_list</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tracer_stat\">tracer_stat</a><span class=\"ts\"/>*<a class=\"id\" href=\"#ts\">ts</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_root\">rb_root</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stat_root\">stat_root</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mutex\">mutex</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stat_mutex\">stat_mutex</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#file\">file</a>;", 
"};", 
"", 
"<span class=\"comment\">/* All of the sessions currently in use. Each stat file embed one session */</span>", 
"static <a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#all_stat_sessions\">all_stat_sessions</a>);", 
"static <a class=\"id\" href=\"#DEFINE_MUTEX\">DEFINE_MUTEX</a>(<a class=\"id\" href=\"#all_stat_sessions_mutex\">all_stat_sessions_mutex</a>);", 
"", 
"<span class=\"comment\">/* The root directory for all stat files */</span>", 
"static struct <a class=\"id\" href=\"#dentry\">dentry</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#stat_dir\">stat_dir</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Iterate through the rbtree using a post order traversal path</span>", 
"<span class=\"comment\"> * to release the next node.</span>", 
"<span class=\"comment\"> * It won't necessary release one at each iteration</span>", 
"<span class=\"comment\"> * but it will at least advance closer to the next one</span>", 
"<span class=\"comment\"> * to be released.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#release_next\">release_next</a>(struct <a class=\"id\" href=\"#tracer_stat\">tracer_stat</a> *<a class=\"id\" href=\"#ts\">ts</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#node\">node</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#stat_node\">stat_node</a> *<a class=\"id\" href=\"#snode\">snode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#rb_parent\">rb_parent</a>(<a class=\"id\" href=\"#node\">node</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>;", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#parent\">parent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a> == <a class=\"id\" href=\"#node\">node</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#snode\">snode</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#node\">node</a>, struct <a class=\"id\" href=\"#stat_node\">stat_node</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ts\">ts</a>-><a class=\"id\" href=\"#stat_release\">stat_release</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ts\">ts</a>-><a class=\"id\" href=\"#stat_release\">stat_release</a>(<a class=\"id\" href=\"#snode\">snode</a>-><a class=\"id\" href=\"#stat\">stat</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#snode\">snode</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__reset_stat_session\">__reset_stat_session</a>(struct <a class=\"id\" href=\"#stat_session\">stat_session</a> *<a class=\"id\" href=\"#session\">session</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#session\">session</a>-><a class=\"id\" href=\"#stat_root\">stat_root</a>.<a class=\"id\" href=\"#rb_node\">rb_node</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#node\">node</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#release_next\">release_next</a>(<a class=\"id\" href=\"#session\">session</a>-><a class=\"id\" href=\"#ts\">ts</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#session\">session</a>-><a class=\"id\" href=\"#stat_root\">stat_root</a> = <a class=\"id\" href=\"#RB_ROOT\">RB_ROOT</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#reset_stat_session\">reset_stat_session</a>(struct <a class=\"id\" href=\"#stat_session\">stat_session</a> *<a class=\"id\" href=\"#session\">session</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#session\">session</a>-><a class=\"id\" href=\"#stat_mutex\">stat_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__reset_stat_session\">__reset_stat_session</a>(<a class=\"id\" href=\"#session\">session</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#session\">session</a>-><a class=\"id\" href=\"#stat_mutex\">stat_mutex</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#destroy_session\">destroy_session</a>(struct <a class=\"id\" href=\"#stat_session\">stat_session</a> *<a class=\"id\" href=\"#session\">session</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#debugfs_remove\">debugfs_remove</a>(<a class=\"id\" href=\"#session\">session</a>-><a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__reset_stat_session\">__reset_stat_session</a>(<a class=\"id\" href=\"#session\">session</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_destroy\">mutex_destroy</a>(&amp;<a class=\"id\" href=\"#session\">session</a>-><a class=\"id\" href=\"#stat_mutex\">stat_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#session\">session</a>);", 
"}", 
"", 
"typedef int (*<a class=\"id\" href=\"#cmp_stat_t\">cmp_stat_t</a>)(void *, void *);", 
"", 
"static int <a class=\"id\" href=\"#insert_stat\">insert_stat</a>(struct <a class=\"id\" href=\"#rb_root\">rb_root</a> *<a class=\"id\" href=\"#root\">root</a>, void *<a class=\"id\" href=\"#stat\">stat</a>, <a class=\"id\" href=\"#cmp_stat_t\">cmp_stat_t</a> <a class=\"id\" href=\"#cmp\">cmp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> **<a class=\"id\" href=\"#new\">new</a> = &amp;(<a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>), *<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#stat_node\">stat_node</a> *<a class=\"id\" href=\"#data\">data</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#data\">data</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#data\">data</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#stat\">stat</a> = <a class=\"id\" href=\"#stat\">stat</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Figure out where to put new node</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This is a descendent sorting</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>while (*<a class=\"id\" href=\"#new\">new</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#stat_node\">stat_node</a> *<a class=\"id\" href=\"#this\">this</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this\">this</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(*<a class=\"id\" href=\"#new\">new</a>, struct <a class=\"id\" href=\"#stat_node\">stat_node</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#cmp\">cmp</a>(<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#stat\">stat</a>, <a class=\"id\" href=\"#this\">this</a>-><a class=\"id\" href=\"#stat\">stat</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a> = *<a class=\"id\" href=\"#new\">new</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#result\">result</a> >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a> = &amp;((*<a class=\"id\" href=\"#new\">new</a>)-><a class=\"id\" href=\"#rb_left\">rb_left</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a> = &amp;((*<a class=\"id\" href=\"#new\">new</a>)-><a class=\"id\" href=\"#rb_right\">rb_right</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rb_link_node\">rb_link_node</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#new\">new</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rb_insert_color\">rb_insert_color</a>(&amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * For tracers that don't provide a stat_cmp callback.</span>", 
"<span class=\"comment\"> * This one will force an insertion as right-most node</span>", 
"<span class=\"comment\"> * in the rbtree.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#dummy_cmp\">dummy_cmp</a>(void *<a class=\"id\" href=\"#p1\">p1</a>, void *<a class=\"id\" href=\"#p2\">p2</a>)", 
"{", 
"<span class=\"ts\"/>return -1;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Initialize the stat rbtree at each trace_stat file opening.</span>", 
"<span class=\"comment\"> * All of these copies and sorting are required on all opening</span>", 
"<span class=\"comment\"> * since the stats could have changed between two file sessions.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#stat_seq_init\">stat_seq_init</a>(struct <a class=\"id\" href=\"#stat_session\">stat_session</a> *<a class=\"id\" href=\"#session\">session</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tracer_stat\">tracer_stat</a> *<a class=\"id\" href=\"#ts\">ts</a> = <a class=\"id\" href=\"#session\">session</a>-><a class=\"id\" href=\"#ts\">ts</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_root\">rb_root</a> *<a class=\"id\" href=\"#root\">root</a> = &amp;<a class=\"id\" href=\"#session\">session</a>-><a class=\"id\" href=\"#stat_root\">stat_root</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#stat\">stat</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#session\">session</a>-><a class=\"id\" href=\"#stat_mutex\">stat_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__reset_stat_session\">__reset_stat_session</a>(<a class=\"id\" href=\"#session\">session</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ts\">ts</a>-><a class=\"id\" href=\"#stat_cmp\">stat_cmp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ts\">ts</a>-><a class=\"id\" href=\"#stat_cmp\">stat_cmp</a> = <a class=\"id\" href=\"#dummy_cmp\">dummy_cmp</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stat\">stat</a> = <a class=\"id\" href=\"#ts\">ts</a>-><a class=\"id\" href=\"#stat_start\">stat_start</a>(<a class=\"id\" href=\"#ts\">ts</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#stat\">stat</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit\">exit</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#insert_stat\">insert_stat</a>(<a class=\"id\" href=\"#root\">root</a>, <a class=\"id\" href=\"#stat\">stat</a>, <a class=\"id\" href=\"#ts\">ts</a>-><a class=\"id\" href=\"#stat_cmp\">stat_cmp</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit\">exit</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Iterate over the tracer stat entries and store them in an rbtree.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 1; ; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stat\">stat</a> = <a class=\"id\" href=\"#ts\">ts</a>-><a class=\"id\" href=\"#stat_next\">stat_next</a>(<a class=\"id\" href=\"#stat\">stat</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* End of insertion */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#stat\">stat</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#insert_stat\">insert_stat</a>(<a class=\"id\" href=\"#root\">root</a>, <a class=\"id\" href=\"#stat\">stat</a>, <a class=\"id\" href=\"#ts\">ts</a>-><a class=\"id\" href=\"#stat_cmp\">stat_cmp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_free_rbtree\">exit_free_rbtree</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#exit\">exit</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#session\">session</a>-><a class=\"id\" href=\"#stat_mutex\">stat_mutex</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<a class=\"id\" href=\"#exit_free_rbtree\">exit_free_rbtree</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__reset_stat_session\">__reset_stat_session</a>(<a class=\"id\" href=\"#session\">session</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#session\">session</a>-><a class=\"id\" href=\"#stat_mutex\">stat_mutex</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"", 
"static void *<a class=\"id\" href=\"#stat_seq_start\">stat_seq_start</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#stat_session\">stat_session</a> *<a class=\"id\" href=\"#session\">session</a> = <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#n\">n</a> = *<a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Prevent from tracer switch or rbtree modification */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#session\">session</a>-><a class=\"id\" href=\"#stat_mutex\">stat_mutex</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If we are in the beginning of the file, print the headers */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#session\">session</a>-><a class=\"id\" href=\"#ts\">ts</a>-><a class=\"id\" href=\"#stat_headers\">stat_headers</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#SEQ_START_TOKEN\">SEQ_START_TOKEN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a>--;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#rb_first\">rb_first</a>(&amp;<a class=\"id\" href=\"#session\">session</a>-><a class=\"id\" href=\"#stat_root\">stat_root</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#node\">node</a> && <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#n\">n</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#rb_next\">rb_next</a>(<a class=\"id\" href=\"#node\">node</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#node\">node</a>;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#stat_seq_next\">stat_seq_next</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#s\">s</a>, void *<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#stat_session\">stat_session</a> *<a class=\"id\" href=\"#session\">session</a> = <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/>(*<a class=\"id\" href=\"#pos\">pos</a>)++;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a> == <a class=\"id\" href=\"#SEQ_START_TOKEN\">SEQ_START_TOKEN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rb_first\">rb_first</a>(&amp;<a class=\"id\" href=\"#session\">session</a>-><a class=\"id\" href=\"#stat_root\">stat_root</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rb_next\">rb_next</a>(<a class=\"id\" href=\"#node\">node</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#stat_seq_stop\">stat_seq_stop</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#s\">s</a>, void *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#stat_session\">stat_session</a> *<a class=\"id\" href=\"#session\">session</a> = <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#session\">session</a>-><a class=\"id\" href=\"#stat_mutex\">stat_mutex</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#stat_seq_show\">stat_seq_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#s\">s</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#stat_session\">stat_session</a> *<a class=\"id\" href=\"#session\">session</a> = <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#stat_node\">stat_node</a> *<a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#v\">v</a>, struct <a class=\"id\" href=\"#stat_node\">stat_node</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#v\">v</a> == <a class=\"id\" href=\"#SEQ_START_TOKEN\">SEQ_START_TOKEN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#session\">session</a>-><a class=\"id\" href=\"#ts\">ts</a>-><a class=\"id\" href=\"#stat_headers\">stat_headers</a>(<a class=\"id\" href=\"#s\">s</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#session\">session</a>-><a class=\"id\" href=\"#ts\">ts</a>-><a class=\"id\" href=\"#stat_show\">stat_show</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#l\">l</a>-><a class=\"id\" href=\"#stat\">stat</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> <a class=\"id\" href=\"#trace_stat_seq_ops\">trace_stat_seq_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#stat_seq_start\">stat_seq_start</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#next\">next</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#stat_seq_next\">stat_seq_next</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#stat_seq_stop\">stat_seq_stop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#stat_seq_show\">stat_seq_show</a>", 
"};", 
"", 
"<span class=\"comment\">/* The session stat is refilled and resorted at each stat file opening */</span>", 
"static int <a class=\"id\" href=\"#tracing_stat_open\">tracing_stat_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#stat_session\">stat_session</a> *<a class=\"id\" href=\"#session\">session</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_private\">i_private</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#stat_seq_init\">stat_seq_init</a>(<a class=\"id\" href=\"#session\">session</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#seq_open\">seq_open</a>(<a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#trace_stat_seq_ops\">trace_stat_seq_ops</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reset_stat_session\">reset_stat_session</a>(<a class=\"id\" href=\"#session\">session</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#private\">private</a> = <a class=\"id\" href=\"#session\">session</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Avoid consuming memory with our now useless rbtree.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#tracing_stat_release\">tracing_stat_release</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#i\">i</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#f\">f</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#stat_session\">stat_session</a> *<a class=\"id\" href=\"#session\">session</a> = <a class=\"id\" href=\"#i\">i</a>-><a class=\"id\" href=\"#i_private\">i_private</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reset_stat_session\">reset_stat_session</a>(<a class=\"id\" href=\"#session\">session</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#seq_release\">seq_release</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#f\">f</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#tracing_stat_fops\">tracing_stat_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#tracing_stat_open\">tracing_stat_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#tracing_stat_release\">tracing_stat_release</a>", 
"};", 
"", 
"static int <a class=\"id\" href=\"#tracing_stat_init\">tracing_stat_init</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#d_tracing\">d_tracing</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#d_tracing\">d_tracing</a> = <a class=\"id\" href=\"#tracing_init_dentry\">tracing_init_dentry</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stat_dir\">stat_dir</a> = <a class=\"id\" href=\"#debugfs_create_dir\">debugfs_create_dir</a>(\"trace_stat\", <a class=\"id\" href=\"#d_tracing\">d_tracing</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#stat_dir\">stat_dir</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_warning\">pr_warning</a>(\"Could not create debugfs \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"'trace_stat' entry\\n\");", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#init_stat_file\">init_stat_file</a>(struct <a class=\"id\" href=\"#stat_session\">stat_session</a> *<a class=\"id\" href=\"#session\">session</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#stat_dir\">stat_dir</a> && <a class=\"id\" href=\"#tracing_stat_init\">tracing_stat_init</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#session\">session</a>-><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#debugfs_create_file\">debugfs_create_file</a>(<a class=\"id\" href=\"#session\">session</a>-><a class=\"id\" href=\"#ts\">ts</a>-><a class=\"id\" href=\"#name\">name</a>, 0644,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#stat_dir\">stat_dir</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#session\">session</a>, &amp;<a class=\"id\" href=\"#tracing_stat_fops\">tracing_stat_fops</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#session\">session</a>-><a class=\"id\" href=\"#file\">file</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#register_stat_tracer\">register_stat_tracer</a>(struct <a class=\"id\" href=\"#tracer_stat\">tracer_stat</a> *<a class=\"id\" href=\"#trace\">trace</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#stat_session\">stat_session</a> *<a class=\"id\" href=\"#session\">session</a>, *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#trace\">trace</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#trace\">trace</a>-><a class=\"id\" href=\"#stat_start\">stat_start</a> || !<a class=\"id\" href=\"#trace\">trace</a>-><a class=\"id\" href=\"#stat_next\">stat_next</a> || !<a class=\"id\" href=\"#trace\">trace</a>-><a class=\"id\" href=\"#stat_show\">stat_show</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Already registered? */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#all_stat_sessions_mutex\">all_stat_sessions_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#node\">node</a>, &amp;<a class=\"id\" href=\"#all_stat_sessions\">all_stat_sessions</a>, <a class=\"id\" href=\"#session_list\">session_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#ts\">ts</a> == <a class=\"id\" href=\"#trace\">trace</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#all_stat_sessions_mutex\">all_stat_sessions_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#all_stat_sessions_mutex\">all_stat_sessions_mutex</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Init the session */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#session\">session</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#session\">session</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#session\">session</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#session\">session</a>-><a class=\"id\" href=\"#ts\">ts</a> = <a class=\"id\" href=\"#trace\">trace</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#session\">session</a>-><a class=\"id\" href=\"#session_list\">session_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_init\">mutex_init</a>(&amp;<a class=\"id\" href=\"#session\">session</a>-><a class=\"id\" href=\"#stat_mutex\">stat_mutex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#init_stat_file\">init_stat_file</a>(<a class=\"id\" href=\"#session\">session</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#destroy_session\">destroy_session</a>(<a class=\"id\" href=\"#session\">session</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Register */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#all_stat_sessions_mutex\">all_stat_sessions_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#session\">session</a>-><a class=\"id\" href=\"#session_list\">session_list</a>, &amp;<a class=\"id\" href=\"#all_stat_sessions\">all_stat_sessions</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#all_stat_sessions_mutex\">all_stat_sessions_mutex</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"void <a class=\"id\" href=\"#unregister_stat_tracer\">unregister_stat_tracer</a>(struct <a class=\"id\" href=\"#tracer_stat\">tracer_stat</a> *<a class=\"id\" href=\"#trace\">trace</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#stat_session\">stat_session</a> *<a class=\"id\" href=\"#node\">node</a>, *<a class=\"id\" href=\"#tmp\">tmp</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#all_stat_sessions_mutex\">all_stat_sessions_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#tmp\">tmp</a>, &amp;<a class=\"id\" href=\"#all_stat_sessions\">all_stat_sessions</a>, <a class=\"id\" href=\"#session_list\">session_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#ts\">ts</a> == <a class=\"id\" href=\"#trace\">trace</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#session_list\">session_list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#destroy_session\">destroy_session</a>(<a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#all_stat_sessions_mutex\">all_stat_sessions_mutex</a>);", 
"}", 
];
xr_frag_insert('l/85/e80829b6bc1906f0448e2b07d8679140966621.xr', __xr_tmp);
