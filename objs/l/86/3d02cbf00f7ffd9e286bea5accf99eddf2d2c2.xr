var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>IP multicast routing support for mrouted 3.6/3.8</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>(c) 1995 Alan Cox, &lt;alan@lxorguk.ukuu.org.uk&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>  Linux Consultancy and Custom Driver Development</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Fixes:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Michael Chastain<span class=\"ts\"/>:<span class=\"ts\"/>Incorrect size of copying.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Alan Cox<span class=\"ts\"/><span class=\"ts\"/>:<span class=\"ts\"/>Added the cache manager code</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Alan Cox<span class=\"ts\"/><span class=\"ts\"/>:<span class=\"ts\"/>Fixed the clone/copy bug and device race.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Mike McLagan<span class=\"ts\"/><span class=\"ts\"/>:<span class=\"ts\"/>Routing by source</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Malcolm Beattie<span class=\"ts\"/><span class=\"ts\"/>:<span class=\"ts\"/>Buffer handling fixes.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Alexey Kuznetsov<span class=\"ts\"/>:<span class=\"ts\"/>Double buffer free and other fixes.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>SVR Anand<span class=\"ts\"/><span class=\"ts\"/>:<span class=\"ts\"/>Fixed several multicast bugs and problems.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Alexey Kuznetsov<span class=\"ts\"/>:<span class=\"ts\"/>Status, optimisations and more.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Brad Parker<span class=\"ts\"/><span class=\"ts\"/>:<span class=\"ts\"/>Better behaviour on mrouted upcall</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>overflow.</span>", 
"<span class=\"comment\"> *      Carlos Picoto           :       PIMv1 Support</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Pavlin Ivanov Radoslavov:<span class=\"ts\"/>PIMv2 Registers must checksum only PIM header</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>Relax this requirement to work with older peers.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#system\">system</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#capability\">capability</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fcntl\">fcntl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#stat\">stat</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#in\">in</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#inet\">inet</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netdevice\">netdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#inetdevice\">inetdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#igmp\">igmp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mroute\">mroute</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#if_ether\">if_ether</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#net_namespace\">net_namespace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip\">ip</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#protocol\">protocol</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#skbuff\">skbuff</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#route\">route</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#sock\">sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#icmp\">icmp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#udp\">udp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#raw\">raw</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#notifier\">notifier</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#if_arp\">if_arp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netfilter_ipv4\">netfilter_ipv4</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ipip\">ipip</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#checksum\">checksum</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#netlink\">netlink</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#fib_rules\">fib_rules</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IP_PIMSM_V1\">CONFIG_IP_PIMSM_V1</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IP_PIMSM_V2\">CONFIG_IP_PIMSM_V2</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CONFIG_IP_PIMSM\">CONFIG_IP_PIMSM</a><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"struct <a class=\"id\" href=\"#mr_table\">mr_table</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#list\">list</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET_NS\">CONFIG_NET_NS</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#net\">net</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#mroute_sk\">mroute_sk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timer_list\">timer_list</a><span class=\"ts\"/><a class=\"id\" href=\"#ipmr_expire_timer\">ipmr_expire_timer</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#mfc_unres_queue\">mfc_unres_queue</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#mfc_cache_array\">mfc_cache_array</a>[<a class=\"id\" href=\"#MFC_LINES\">MFC_LINES</a>];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vif_device\">vif_device</a><span class=\"ts\"/><a class=\"id\" href=\"#vif_table\">vif_table</a>[<a class=\"id\" href=\"#MAXVIFS\">MAXVIFS</a>];", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#maxvif\">maxvif</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cache_resolve_queue_len\">cache_resolve_queue_len</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mroute_do_assert\">mroute_do_assert</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mroute_do_pim\">mroute_do_pim</a>;", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IP_PIMSM_V1\">CONFIG_IP_PIMSM_V1</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IP_PIMSM_V2\">CONFIG_IP_PIMSM_V2</a>)", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mroute_reg_vif_num\">mroute_reg_vif_num</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"struct <a class=\"id\" href=\"#ipmr_rule\">ipmr_rule</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_rule\">fib_rule</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#common\">common</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#ipmr_result\">ipmr_result</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mr_table\">mr_table</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#mrt\">mrt</a>;", 
"};", 
"", 
"<span class=\"comment\">/* Big lock, protecting vif table, mrt cache and mroute socket state.</span>", 
"<span class=\"comment\">   Note that the changes are semaphored via rtnl_lock.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static <a class=\"id\" href=\"#DEFINE_RWLOCK\">DEFINE_RWLOCK</a>(<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Multicast router control variables</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VIF_EXISTS\">VIF_EXISTS</a>(<a class=\"id\" href=\"#_mrt\">_mrt</a>, <a class=\"id\" href=\"#_idx\">_idx</a>) ((<a class=\"id\" href=\"#_mrt\">_mrt</a>)-><a class=\"id\" href=\"#vif_table\">vif_table</a>[<a class=\"id\" href=\"#_idx\">_idx</a>].<a class=\"id\" href=\"#dev\">dev</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"", 
"<span class=\"comment\">/* Special spinlock for queue of unresolved entries */</span>", 
"static <a class=\"id\" href=\"#DEFINE_SPINLOCK\">DEFINE_SPINLOCK</a>(<a class=\"id\" href=\"#mfc_unres_lock\">mfc_unres_lock</a>);", 
"", 
"<span class=\"comment\">/* We return to original Alan's scheme. Hash table of resolved</span>", 
"<span class=\"comment\">   entries is changed only in process context and protected</span>", 
"<span class=\"comment\">   with weak lock mrt_lock. Queue of unresolved entries is protected</span>", 
"<span class=\"comment\">   with strong spinlock mfc_unres_lock.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   In this case data path is free of exclusive locks at all.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static struct <a class=\"id\" href=\"#kmem_cache\">kmem_cache</a> *<a class=\"id\" href=\"#mrt_cachep\">mrt_cachep</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a>;", 
"", 
"static struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#ipmr_new_table\">ipmr_new_table</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#id\">id</a>);", 
"static int <a class=\"id\" href=\"#ip_mr_forward\">ip_mr_forward</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#mfc_cache\">mfc_cache</a> *<a class=\"id\" href=\"#cache\">cache</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> int <a class=\"id\" href=\"#local\">local</a>);", 
"static int <a class=\"id\" href=\"#ipmr_cache_report\">ipmr_cache_report</a>(struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#pkt\">pkt</a>, <a class=\"id\" href=\"#vifi_t\">vifi_t</a> <a class=\"id\" href=\"#vifi\">vifi</a>, int <a class=\"id\" href=\"#assert\">assert</a>);", 
"static int <a class=\"id\" href=\"#__ipmr_fill_mroute\">__ipmr_fill_mroute</a>(struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#mfc_cache\">mfc_cache</a> *<a class=\"id\" href=\"#c\">c</a>, struct <a class=\"id\" href=\"#rtmsg\">rtmsg</a> *<a class=\"id\" href=\"#rtm\">rtm</a>);", 
"static void <a class=\"id\" href=\"#ipmr_expire_process\">ipmr_expire_process</a>(unsigned long <a class=\"id\" href=\"#arg\">arg</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_MROUTE_MULTIPLE_TABLES\">CONFIG_IP_MROUTE_MULTIPLE_TABLES</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ipmr_for_each_table\">ipmr_for_each_table</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#net\">net</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_rcu\">list_for_each_entry_rcu</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, &amp;<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv4\">ipv4</a>.<a class=\"id\" href=\"#mr_tables\">mr_tables</a>, <a class=\"id\" href=\"#list\">list</a>)", 
"", 
"static struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#ipmr_get_table\">ipmr_get_table</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipmr_for_each_table\">ipmr_for_each_table</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#net\">net</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#id\">id</a> == <a class=\"id\" href=\"#id\">id</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#mrt\">mrt</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ipmr_fib_lookup\">ipmr_fib_lookup</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#flp\">flp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#mr_table\">mr_table</a> **<a class=\"id\" href=\"#mrt\">mrt</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipmr_result\">ipmr_result</a> <a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_lookup_arg\">fib_lookup_arg</a> <a class=\"id\" href=\"#arg\">arg</a> = { .<a class=\"id\" href=\"#result\">result</a> = &amp;<a class=\"id\" href=\"#res\">res</a>, };", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#fib_rules_lookup\">fib_rules_lookup</a>(<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv4\">ipv4</a>.<a class=\"id\" href=\"#mr_rules_ops\">mr_rules_ops</a>, <a class=\"id\" href=\"#flp\">flp</a>, 0, &amp;<a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#mrt\">mrt</a> = <a class=\"id\" href=\"#res\">res</a>.<a class=\"id\" href=\"#mrt\">mrt</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ipmr_rule_action\">ipmr_rule_action</a>(struct <a class=\"id\" href=\"#fib_rule\">fib_rule</a> *<a class=\"id\" href=\"#rule\">rule</a>, struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#flp\">flp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    int <a class=\"id\" href=\"#flags\">flags</a>, struct <a class=\"id\" href=\"#fib_lookup_arg\">fib_lookup_arg</a> *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipmr_result\">ipmr_result</a> *<a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#rule\">rule</a>-><a class=\"id\" href=\"#action\">action</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#FR_ACT_TO_TBL\">FR_ACT_TO_TBL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#FR_ACT_UNREACHABLE\">FR_ACT_UNREACHABLE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENETUNREACH\">ENETUNREACH</a>;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#FR_ACT_PROHIBIT\">FR_ACT_PROHIBIT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#FR_ACT_BLACKHOLE\">FR_ACT_BLACKHOLE</a>:", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mrt\">mrt</a> = <a class=\"id\" href=\"#ipmr_get_table\">ipmr_get_table</a>(<a class=\"id\" href=\"#rule\">rule</a>-><a class=\"id\" href=\"#fr_net\">fr_net</a>, <a class=\"id\" href=\"#rule\">rule</a>-><a class=\"id\" href=\"#table\">table</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mrt\">mrt</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#mrt\">mrt</a> = <a class=\"id\" href=\"#mrt\">mrt</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ipmr_rule_match\">ipmr_rule_match</a>(struct <a class=\"id\" href=\"#fib_rule\">fib_rule</a> *<a class=\"id\" href=\"#rule\">rule</a>, struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#fl\">fl</a>, int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#nla_policy\">nla_policy</a> <a class=\"id\" href=\"#ipmr_rule_policy\">ipmr_rule_policy</a>[<a class=\"id\" href=\"#FRA_MAX\">FRA_MAX</a> + 1] = {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#FRA_GENERIC_POLICY\">FRA_GENERIC_POLICY</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#ipmr_rule_configure\">ipmr_rule_configure</a>(struct <a class=\"id\" href=\"#fib_rule\">fib_rule</a> *<a class=\"id\" href=\"#rule\">rule</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#fib_rule_hdr\">fib_rule_hdr</a> *<a class=\"id\" href=\"#frh\">frh</a>, struct <a class=\"id\" href=\"#nlattr\">nlattr</a> **<a class=\"id\" href=\"#tb\">tb</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ipmr_rule_compare\">ipmr_rule_compare</a>(struct <a class=\"id\" href=\"#fib_rule\">fib_rule</a> *<a class=\"id\" href=\"#rule\">rule</a>, struct <a class=\"id\" href=\"#fib_rule_hdr\">fib_rule_hdr</a> *<a class=\"id\" href=\"#frh\">frh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#nlattr\">nlattr</a> **<a class=\"id\" href=\"#tb\">tb</a>)", 
"{", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ipmr_rule_fill\">ipmr_rule_fill</a>(struct <a class=\"id\" href=\"#fib_rule\">fib_rule</a> *<a class=\"id\" href=\"#rule\">rule</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#fib_rule_hdr\">fib_rule_hdr</a> *<a class=\"id\" href=\"#frh\">frh</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#frh\">frh</a>-><a class=\"id\" href=\"#dst_len\">dst_len</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#frh\">frh</a>-><a class=\"id\" href=\"#src_len\">src_len</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#frh\">frh</a>-><a class=\"id\" href=\"#tos\">tos</a>     = 0;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#fib_rules_ops\">fib_rules_ops</a> <a class=\"id\" href=\"#__net_initdata\">__net_initdata</a> <a class=\"id\" href=\"#ipmr_rules_ops_template\">ipmr_rules_ops_template</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#family\">family</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#RTNL_FAMILY_IPMR\">RTNL_FAMILY_IPMR</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#rule_size\">rule_size</a><span class=\"ts\"/>= sizeof(struct <a class=\"id\" href=\"#ipmr_rule\">ipmr_rule</a>),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#addr_size\">addr_size</a><span class=\"ts\"/>= sizeof(<a class=\"id\" href=\"#u32\">u32</a>),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#action\">action</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ipmr_rule_action\">ipmr_rule_action</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#match\">match</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ipmr_rule_match\">ipmr_rule_match</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#configure\">configure</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ipmr_rule_configure\">ipmr_rule_configure</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#compare\">compare</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ipmr_rule_compare\">ipmr_rule_compare</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#default_pref\">default_pref</a><span class=\"ts\"/>= <a class=\"id\" href=\"#fib_default_rule_pref\">fib_default_rule_pref</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#fill\">fill</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ipmr_rule_fill\">ipmr_rule_fill</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#nlgroup\">nlgroup</a><span class=\"ts\"/>= <a class=\"id\" href=\"#RTNLGRP_IPV4_RULE\">RTNLGRP_IPV4_RULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#policy\">policy</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ipmr_rule_policy\">ipmr_rule_policy</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__net_init\">__net_init</a> <a class=\"id\" href=\"#ipmr_rules_init\">ipmr_rules_init</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_rules_ops\">fib_rules_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#fib_rules_register\">fib_rules_register</a>(&amp;<a class=\"id\" href=\"#ipmr_rules_ops_template\">ipmr_rules_ops_template</a>, <a class=\"id\" href=\"#net\">net</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#ops\">ops</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#ops\">ops</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv4\">ipv4</a>.<a class=\"id\" href=\"#mr_tables\">mr_tables</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mrt\">mrt</a> = <a class=\"id\" href=\"#ipmr_new_table\">ipmr_new_table</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#RT_TABLE_DEFAULT\">RT_TABLE_DEFAULT</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mrt\">mrt</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err1\">err1</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#fib_default_rule_add\">fib_default_rule_add</a>(<a class=\"id\" href=\"#ops\">ops</a>, 0x7fff, <a class=\"id\" href=\"#RT_TABLE_DEFAULT\">RT_TABLE_DEFAULT</a>, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err2\">err2</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv4\">ipv4</a>.<a class=\"id\" href=\"#mr_rules_ops\">mr_rules_ops</a> = <a class=\"id\" href=\"#ops\">ops</a>;", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#err2\">err2</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#mrt\">mrt</a>);", 
"<a class=\"id\" href=\"#err1\">err1</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fib_rules_unregister\">fib_rules_unregister</a>(<a class=\"id\" href=\"#ops\">ops</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__net_exit\">__net_exit</a> <a class=\"id\" href=\"#ipmr_rules_exit\">ipmr_rules_exit</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>, *<a class=\"id\" href=\"#next\">next</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#next\">next</a>, &amp;<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv4\">ipv4</a>.<a class=\"id\" href=\"#mr_tables\">mr_tables</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#mrt\">mrt</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fib_rules_unregister\">fib_rules_unregister</a>(<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv4\">ipv4</a>.<a class=\"id\" href=\"#mr_rules_ops\">mr_rules_ops</a>);", 
"}", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ipmr_for_each_table\">ipmr_for_each_table</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#net\">net</a>) \\", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#mrt\">mrt</a> = <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv4\">ipv4</a>.<a class=\"id\" href=\"#mrt\">mrt</a>; <a class=\"id\" href=\"#mrt\">mrt</a>; <a class=\"id\" href=\"#mrt\">mrt</a> = <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"", 
"static struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#ipmr_get_table\">ipmr_get_table</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv4\">ipv4</a>.<a class=\"id\" href=\"#mrt\">mrt</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ipmr_fib_lookup\">ipmr_fib_lookup</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#flp\">flp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#mr_table\">mr_table</a> **<a class=\"id\" href=\"#mrt\">mrt</a>)", 
"{", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#mrt\">mrt</a> = <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv4\">ipv4</a>.<a class=\"id\" href=\"#mrt\">mrt</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__net_init\">__net_init</a> <a class=\"id\" href=\"#ipmr_rules_init\">ipmr_rules_init</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv4\">ipv4</a>.<a class=\"id\" href=\"#mrt\">mrt</a> = <a class=\"id\" href=\"#ipmr_new_table\">ipmr_new_table</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#RT_TABLE_DEFAULT\">RT_TABLE_DEFAULT</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv4\">ipv4</a>.<a class=\"id\" href=\"#mrt\">mrt</a> ? 0 : -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__net_exit\">__net_exit</a> <a class=\"id\" href=\"#ipmr_rules_exit\">ipmr_rules_exit</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv4\">ipv4</a>.<a class=\"id\" href=\"#mrt\">mrt</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#ipmr_new_table\">ipmr_new_table</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mrt\">mrt</a> = <a class=\"id\" href=\"#ipmr_get_table\">ipmr_get_table</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#id\">id</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mrt\">mrt</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#mrt\">mrt</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mrt\">mrt</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#mrt\">mrt</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mrt\">mrt</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_pnet\">write_pnet</a>(&amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#net\">net</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#id\">id</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Forwarding cache */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#MFC_LINES\">MFC_LINES</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mfc_cache_array\">mfc_cache_array</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mfc_unres_queue\">mfc_unres_queue</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#setup_timer\">setup_timer</a>(&amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#ipmr_expire_timer\">ipmr_expire_timer</a>, <a class=\"id\" href=\"#ipmr_expire_process\">ipmr_expire_process</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    (unsigned long)<a class=\"id\" href=\"#mrt\">mrt</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_PIMSM\">CONFIG_IP_PIMSM</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mroute_reg_vif_num\">mroute_reg_vif_num</a> = -1;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_MROUTE_MULTIPLE_TABLES\">CONFIG_IP_MROUTE_MULTIPLE_TABLES</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail_rcu\">list_add_tail_rcu</a>(&amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv4\">ipv4</a>.<a class=\"id\" href=\"#mr_tables\">mr_tables</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#mrt\">mrt</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Service routines creating virtual interfaces: DVMRP tunnels and PIMREG */</span>", 
"", 
"static void <a class=\"id\" href=\"#ipmr_del_tunnel\">ipmr_del_tunnel</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#vifctl\">vifctl</a> *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_close\">dev_close</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#__dev_get_by_name\">__dev_get_by_name</a>(<a class=\"id\" href=\"#net\">net</a>, \"tunl0\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#net_device_ops\">net_device_ops</a> *<a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#netdev_ops\">netdev_ops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ifreq\">ifreq</a> <a class=\"id\" href=\"#ifr\">ifr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ip_tunnel_parm\">ip_tunnel_parm</a> <a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#p\">p</a>, 0, sizeof(<a class=\"id\" href=\"#p\">p</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>.<a class=\"id\" href=\"#iph\">iph</a>.<a class=\"id\" href=\"#daddr\">daddr</a> = <a class=\"id\" href=\"#v\">v</a>-><a class=\"id\" href=\"#vifc_rmt_addr\">vifc_rmt_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>.<a class=\"id\" href=\"#iph\">iph</a>.<a class=\"id\" href=\"#saddr\">saddr</a> = <a class=\"id\" href=\"#v\">v</a>-><a class=\"id\" href=\"#vifc_lcl_addr\">vifc_lcl_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>.<a class=\"id\" href=\"#iph\">iph</a>.<a class=\"id\" href=\"#version\">version</a> = 4;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>.<a class=\"id\" href=\"#iph\">iph</a>.<a class=\"id\" href=\"#ihl\">ihl</a> = 5;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>.<a class=\"id\" href=\"#iph\">iph</a>.<a class=\"id\" href=\"#protocol\">protocol</a> = <a class=\"id\" href=\"#IPPROTO_IPIP\">IPPROTO_IPIP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#p\">p</a>.<a class=\"id\" href=\"#name\">name</a>, \"dvmrp%d\", <a class=\"id\" href=\"#v\">v</a>-><a class=\"id\" href=\"#vifc_vifi\">vifc_vifi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifr\">ifr</a>.<a class=\"id\" href=\"#ifr_ifru\">ifr_ifru</a>.<a class=\"id\" href=\"#ifru_data\">ifru_data</a> = (<a class=\"id\" href=\"#__force\">__force</a> void <a class=\"id\" href=\"#__user\">__user</a> *)&amp;<a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#ndo_do_ioctl\">ndo_do_ioctl</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mm_segment_t\">mm_segment_t</a> <a class=\"id\" href=\"#oldfs\">oldfs</a> = <a class=\"id\" href=\"#get_fs\">get_fs</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_fs\">set_fs</a>(<a class=\"id\" href=\"#KERNEL_DS\">KERNEL_DS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#ndo_do_ioctl\">ndo_do_ioctl</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#ifr\">ifr</a>, <a class=\"id\" href=\"#SIOCDELTUNNEL\">SIOCDELTUNNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_fs\">set_fs</a>(<a class=\"id\" href=\"#oldfs\">oldfs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static", 
"struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#ipmr_new_tunnel\">ipmr_new_tunnel</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#vifctl\">vifctl</a> *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a>  *<a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#__dev_get_by_name\">__dev_get_by_name</a>(<a class=\"id\" href=\"#net\">net</a>, \"tunl0\");", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#net_device_ops\">net_device_ops</a> *<a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#netdev_ops\">netdev_ops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ifreq\">ifreq</a> <a class=\"id\" href=\"#ifr\">ifr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ip_tunnel_parm\">ip_tunnel_parm</a> <a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#in_device\">in_device</a>  *<a class=\"id\" href=\"#in_dev\">in_dev</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#p\">p</a>, 0, sizeof(<a class=\"id\" href=\"#p\">p</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>.<a class=\"id\" href=\"#iph\">iph</a>.<a class=\"id\" href=\"#daddr\">daddr</a> = <a class=\"id\" href=\"#v\">v</a>-><a class=\"id\" href=\"#vifc_rmt_addr\">vifc_rmt_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>.<a class=\"id\" href=\"#iph\">iph</a>.<a class=\"id\" href=\"#saddr\">saddr</a> = <a class=\"id\" href=\"#v\">v</a>-><a class=\"id\" href=\"#vifc_lcl_addr\">vifc_lcl_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>.<a class=\"id\" href=\"#iph\">iph</a>.<a class=\"id\" href=\"#version\">version</a> = 4;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>.<a class=\"id\" href=\"#iph\">iph</a>.<a class=\"id\" href=\"#ihl\">ihl</a> = 5;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>.<a class=\"id\" href=\"#iph\">iph</a>.<a class=\"id\" href=\"#protocol\">protocol</a> = <a class=\"id\" href=\"#IPPROTO_IPIP\">IPPROTO_IPIP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#p\">p</a>.<a class=\"id\" href=\"#name\">name</a>, \"dvmrp%d\", <a class=\"id\" href=\"#v\">v</a>-><a class=\"id\" href=\"#vifc_vifi\">vifc_vifi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifr\">ifr</a>.<a class=\"id\" href=\"#ifr_ifru\">ifr_ifru</a>.<a class=\"id\" href=\"#ifru_data\">ifru_data</a> = (<a class=\"id\" href=\"#__force\">__force</a> void <a class=\"id\" href=\"#__user\">__user</a> *)&amp;<a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#ndo_do_ioctl\">ndo_do_ioctl</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mm_segment_t\">mm_segment_t</a> <a class=\"id\" href=\"#oldfs\">oldfs</a> = <a class=\"id\" href=\"#get_fs\">get_fs</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_fs\">set_fs</a>(<a class=\"id\" href=\"#KERNEL_DS\">KERNEL_DS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#ndo_do_ioctl\">ndo_do_ioctl</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#ifr\">ifr</a>, <a class=\"id\" href=\"#SIOCADDTUNNEL\">SIOCADDTUNNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_fs\">set_fs</a>(<a class=\"id\" href=\"#oldfs\">oldfs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EOPNOTSUPP\">EOPNOTSUPP</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == 0 &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#__dev_get_by_name\">__dev_get_by_name</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#p\">p</a>.<a class=\"id\" href=\"#name\">name</a>)) != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#IFF_MULTICAST\">IFF_MULTICAST</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in_dev\">in_dev</a> = <a class=\"id\" href=\"#__in_dev_get_rtnl\">__in_dev_get_rtnl</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#in_dev\">in_dev</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failure\">failure</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv4_devconf_setall\">ipv4_devconf_setall</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IPV4_DEVCONF\">IPV4_DEVCONF</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>, <a class=\"id\" href=\"#RP_FILTER\">RP_FILTER</a>) = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev_open\">dev_open</a>(<a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failure\">failure</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_hold\">dev_hold</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<a class=\"id\" href=\"#failure\">failure</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/* allow the register to be completed before unregistering. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_unlock\">rtnl_unlock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_lock\">rtnl_lock</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_netdevice\">unregister_netdevice</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_PIMSM\">CONFIG_IP_PIMSM</a>", 
"", 
"static <a class=\"id\" href=\"#netdev_tx_t\">netdev_tx_t</a> <a class=\"id\" href=\"#reg_vif_xmit\">reg_vif_xmit</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#flowi\">flowi</a> <a class=\"id\" href=\"#fl\">fl</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#oif\">oif</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#iif\">iif</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#skb_iif\">skb_iif</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#mark\">mark</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#mark\">mark</a>,", 
"<span class=\"ts\"/>};", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ipmr_fib_lookup\">ipmr_fib_lookup</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>, &amp;<a class=\"id\" href=\"#mrt\">mrt</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#tx_bytes\">tx_bytes</a> += <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#tx_packets\">tx_packets</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipmr_cache_report\">ipmr_cache_report</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mroute_reg_vif_num\">mroute_reg_vif_num</a>, <a class=\"id\" href=\"#IGMPMSG_WHOLEPKT\">IGMPMSG_WHOLEPKT</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NETDEV_TX_OK\">NETDEV_TX_OK</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#net_device_ops\">net_device_ops</a> <a class=\"id\" href=\"#reg_vif_netdev_ops\">reg_vif_netdev_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ndo_start_xmit\">ndo_start_xmit</a><span class=\"ts\"/>= <a class=\"id\" href=\"#reg_vif_xmit\">reg_vif_xmit</a>,", 
"};", 
"", 
"static void <a class=\"id\" href=\"#reg_vif_setup\">reg_vif_setup</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ARPHRD_PIMREG\">ARPHRD_PIMREG</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mtu\">mtu</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ETH_DATA_LEN\">ETH_DATA_LEN</a> - sizeof(struct <a class=\"id\" href=\"#iphdr\">iphdr</a>) - 8;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#IFF_NOARP\">IFF_NOARP</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#netdev_ops\">netdev_ops</a><span class=\"ts\"/><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#reg_vif_netdev_ops\">reg_vif_netdev_ops</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#destructor\">destructor</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#free_netdev\">free_netdev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#features\">features</a><span class=\"ts\"/><span class=\"ts\"/>|= <a class=\"id\" href=\"#NETIF_F_NETNS_LOCAL\">NETIF_F_NETNS_LOCAL</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#ipmr_reg_vif\">ipmr_reg_vif</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#in_dev\">in_dev</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#name\">name</a>[<a class=\"id\" href=\"#IFNAMSIZ\">IFNAMSIZ</a>];", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#id\">id</a> == <a class=\"id\" href=\"#RT_TABLE_DEFAULT\">RT_TABLE_DEFAULT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#name\">name</a>, \"pimreg\");", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#name\">name</a>, \"pimreg%u\", <a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#id\">id</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#alloc_netdev\">alloc_netdev</a>(0, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#reg_vif_setup\">reg_vif_setup</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_net_set\">dev_net_set</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#net\">net</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#register_netdevice\">register_netdevice</a>(<a class=\"id\" href=\"#dev\">dev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_netdev\">free_netdev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#iflink\">iflink</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#in_dev\">in_dev</a> = <a class=\"id\" href=\"#__in_dev_get_rcu\">__in_dev_get_rcu</a>(<a class=\"id\" href=\"#dev\">dev</a>)) == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failure\">failure</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv4_devconf_setall\">ipv4_devconf_setall</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IPV4_DEVCONF\">IPV4_DEVCONF</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>, <a class=\"id\" href=\"#RP_FILTER\">RP_FILTER</a>) = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev_open\">dev_open</a>(<a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failure\">failure</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_hold\">dev_hold</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<a class=\"id\" href=\"#failure\">failure</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/* allow the register to be completed before unregistering. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_unlock\">rtnl_unlock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_lock\">rtnl_lock</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_netdevice\">unregister_netdevice</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Delete a VIF entry</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@notify: Set to 1, if the caller is a notifier_call</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#vif_delete\">vif_delete</a>(struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>, int <a class=\"id\" href=\"#vifi\">vifi</a>, int <a class=\"id\" href=\"#notify\">notify</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#head\">head</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vif_device\">vif_device</a> *<a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#in_dev\">in_dev</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vifi\">vifi</a> &lt; 0 || <a class=\"id\" href=\"#vifi\">vifi</a> >= <a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#maxvif\">maxvif</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EADDRNOTAVAIL\">EADDRNOTAVAIL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a> = &amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#vif_table\">vif_table</a>[<a class=\"id\" href=\"#vifi\">vifi</a>];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#v\">v</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EADDRNOTAVAIL\">EADDRNOTAVAIL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_PIMSM\">CONFIG_IP_PIMSM</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vifi\">vifi</a> == <a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mroute_reg_vif_num\">mroute_reg_vif_num</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mroute_reg_vif_num\">mroute_reg_vif_num</a> = -1;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vifi\">vifi</a>+1 == <a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#maxvif\">maxvif</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#tmp\">tmp</a>=<a class=\"id\" href=\"#vifi\">vifi</a>-1; <a class=\"id\" href=\"#tmp\">tmp</a>>=0; <a class=\"id\" href=\"#tmp\">tmp</a>--) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#VIF_EXISTS\">VIF_EXISTS</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#tmp\">tmp</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#maxvif\">maxvif</a> = <a class=\"id\" href=\"#tmp\">tmp</a>+1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_set_allmulti\">dev_set_allmulti</a>(<a class=\"id\" href=\"#dev\">dev</a>, -1);", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#in_dev\">in_dev</a> = <a class=\"id\" href=\"#__in_dev_get_rtnl\">__in_dev_get_rtnl</a>(<a class=\"id\" href=\"#dev\">dev</a>)) != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IPV4_DEVCONF\">IPV4_DEVCONF</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>, <a class=\"id\" href=\"#MC_FORWARDING\">MC_FORWARDING</a>)--;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip_rt_multicast_event\">ip_rt_multicast_event</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#v\">v</a>-><a class=\"id\" href=\"#flags\">flags</a>&amp;(<a class=\"id\" href=\"#VIFF_TUNNEL\">VIFF_TUNNEL</a>|<a class=\"id\" href=\"#VIFF_REGISTER\">VIFF_REGISTER</a>) && !<a class=\"id\" href=\"#notify\">notify</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unregister_netdevice_queue\">unregister_netdevice_queue</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#head\">head</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_put\">dev_put</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ipmr_cache_free\">ipmr_cache_free</a>(struct <a class=\"id\" href=\"#mfc_cache\">mfc_cache</a> *<a class=\"id\" href=\"#c\">c</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_free\">kmem_cache_free</a>(<a class=\"id\" href=\"#mrt_cachep\">mrt_cachep</a>, <a class=\"id\" href=\"#c\">c</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Destroy an unresolved cache entry, killing queued skbs</span>", 
"<span class=\"comment\">   and reporting error to netlink readers.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#ipmr_destroy_unres\">ipmr_destroy_unres</a>(struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>, struct <a class=\"id\" href=\"#mfc_cache\">mfc_cache</a> *<a class=\"id\" href=\"#c\">c</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#read_pnet\">read_pnet</a>(&amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#net\">net</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nlmsgerr\">nlmsgerr</a> *<a class=\"id\" href=\"#e\">e</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_dec\">atomic_dec</a>(&amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#cache_resolve_queue_len\">cache_resolve_queue_len</a>);", 
"", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#skb_dequeue\">skb_dequeue</a>(&amp;<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#unres\">unres</a>.<a class=\"id\" href=\"#unresolved\">unresolved</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#version\">version</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *<a class=\"id\" href=\"#nlh\">nlh</a> = (struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *)<a class=\"id\" href=\"#skb_pull\">skb_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(struct <a class=\"id\" href=\"#iphdr\">iphdr</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nlh\">nlh</a>-><a class=\"id\" href=\"#nlmsg_type\">nlmsg_type</a> = <a class=\"id\" href=\"#NLMSG_ERROR\">NLMSG_ERROR</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nlh\">nlh</a>-><a class=\"id\" href=\"#nlmsg_len\">nlmsg_len</a> = <a class=\"id\" href=\"#NLMSG_LENGTH\">NLMSG_LENGTH</a>(sizeof(struct <a class=\"id\" href=\"#nlmsgerr\">nlmsgerr</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_trim\">skb_trim</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#nlh\">nlh</a>-><a class=\"id\" href=\"#nlmsg_len\">nlmsg_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#NLMSG_DATA\">NLMSG_DATA</a>(<a class=\"id\" href=\"#nlh\">nlh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ETIMEDOUT\">ETIMEDOUT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#msg\">msg</a>, 0, sizeof(<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#msg\">msg</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtnl_unicast\">rtnl_unicast</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#NETLINK_CB\">NETLINK_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>).<a class=\"id\" href=\"#pid\">pid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipmr_cache_free\">ipmr_cache_free</a>(<a class=\"id\" href=\"#c\">c</a>);", 
"}", 
"", 
"", 
"<span class=\"comment\">/* Timer process for the unresolved queue. */</span>", 
"", 
"static void <a class=\"id\" href=\"#ipmr_expire_process\">ipmr_expire_process</a>(unsigned long <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a> = (struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *)<a class=\"id\" href=\"#arg\">arg</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#now\">now</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#expires\">expires</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mfc_cache\">mfc_cache</a> *<a class=\"id\" href=\"#c\">c</a>, *<a class=\"id\" href=\"#next\">next</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#spin_trylock\">spin_trylock</a>(&amp;<a class=\"id\" href=\"#mfc_unres_lock\">mfc_unres_lock</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mod_timer\">mod_timer</a>(&amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#ipmr_expire_timer\">ipmr_expire_timer</a>, <a class=\"id\" href=\"#jiffies\">jiffies</a>+<a class=\"id\" href=\"#HZ\">HZ</a>/10);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mfc_unres_queue\">mfc_unres_queue</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#now\">now</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#expires\">expires</a> = 10*<a class=\"id\" href=\"#HZ\">HZ</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#next\">next</a>, &amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mfc_unres_queue\">mfc_unres_queue</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#time_after\">time_after</a>(<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#unres\">unres</a>.<a class=\"id\" href=\"#expires\">expires</a>, <a class=\"id\" href=\"#now\">now</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#interval\">interval</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#unres\">unres</a>.<a class=\"id\" href=\"#expires\">expires</a> - <a class=\"id\" href=\"#now\">now</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#interval\">interval</a> &lt; <a class=\"id\" href=\"#expires\">expires</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#expires\">expires</a> = <a class=\"id\" href=\"#interval\">interval</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipmr_destroy_unres\">ipmr_destroy_unres</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#c\">c</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mfc_unres_queue\">mfc_unres_queue</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mod_timer\">mod_timer</a>(&amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#ipmr_expire_timer\">ipmr_expire_timer</a>, <a class=\"id\" href=\"#jiffies\">jiffies</a> + <a class=\"id\" href=\"#expires\">expires</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#mfc_unres_lock\">mfc_unres_lock</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Fill oifs list. It is called under write locked mrt_lock. */</span>", 
"", 
"static void <a class=\"id\" href=\"#ipmr_update_thresholds\">ipmr_update_thresholds</a>(struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>, struct <a class=\"id\" href=\"#mfc_cache\">mfc_cache</a> *<a class=\"id\" href=\"#cache\">cache</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned char *<a class=\"id\" href=\"#ttls\">ttls</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#vifi\">vifi</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cache\">cache</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#res\">res</a>.<a class=\"id\" href=\"#minvif\">minvif</a> = <a class=\"id\" href=\"#MAXVIFS\">MAXVIFS</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cache\">cache</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#res\">res</a>.<a class=\"id\" href=\"#maxvif\">maxvif</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#cache\">cache</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#res\">res</a>.<a class=\"id\" href=\"#ttls\">ttls</a>, 255, <a class=\"id\" href=\"#MAXVIFS\">MAXVIFS</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#vifi\">vifi</a> = 0; <a class=\"id\" href=\"#vifi\">vifi</a> &lt; <a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#maxvif\">maxvif</a>; <a class=\"id\" href=\"#vifi\">vifi</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#VIF_EXISTS\">VIF_EXISTS</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#vifi\">vifi</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ttls\">ttls</a>[<a class=\"id\" href=\"#vifi\">vifi</a>] && <a class=\"id\" href=\"#ttls\">ttls</a>[<a class=\"id\" href=\"#vifi\">vifi</a>] &lt; 255) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cache\">cache</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#res\">res</a>.<a class=\"id\" href=\"#ttls\">ttls</a>[<a class=\"id\" href=\"#vifi\">vifi</a>] = <a class=\"id\" href=\"#ttls\">ttls</a>[<a class=\"id\" href=\"#vifi\">vifi</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cache\">cache</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#res\">res</a>.<a class=\"id\" href=\"#minvif\">minvif</a> &gt; <a class=\"id\" href=\"#vifi\">vifi</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cache\">cache</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#res\">res</a>.<a class=\"id\" href=\"#minvif\">minvif</a> = <a class=\"id\" href=\"#vifi\">vifi</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cache\">cache</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#res\">res</a>.<a class=\"id\" href=\"#maxvif\">maxvif</a> <= <a class=\"id\" href=\"#vifi\">vifi</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cache\">cache</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#res\">res</a>.<a class=\"id\" href=\"#maxvif\">maxvif</a> = <a class=\"id\" href=\"#vifi\">vifi</a> + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#vif_add\">vif_add</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#vifctl\">vifctl</a> *<a class=\"id\" href=\"#vifc\">vifc</a>, int <a class=\"id\" href=\"#mrtsock\">mrtsock</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#vifi\">vifi</a> = <a class=\"id\" href=\"#vifc\">vifc</a>-><a class=\"id\" href=\"#vifc_vifi\">vifc_vifi</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vif_device\">vif_device</a> *<a class=\"id\" href=\"#v\">v</a> = &amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#vif_table\">vif_table</a>[<a class=\"id\" href=\"#vifi\">vifi</a>];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#in_dev\">in_dev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Is vif busy ? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#VIF_EXISTS\">VIF_EXISTS</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#vifi\">vifi</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EADDRINUSE\">EADDRINUSE</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#vifc\">vifc</a>-><a class=\"id\" href=\"#vifc_flags\">vifc_flags</a>) {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_PIMSM\">CONFIG_IP_PIMSM</a>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#VIFF_REGISTER\">VIFF_REGISTER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Special Purpose VIF in PIM</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * All the packets will be sent to the daemon</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mroute_reg_vif_num\">mroute_reg_vif_num</a> >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EADDRINUSE\">EADDRINUSE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#ipmr_reg_vif\">ipmr_reg_vif</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#mrt\">mrt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#dev_set_allmulti\">dev_set_allmulti</a>(<a class=\"id\" href=\"#dev\">dev</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unregister_netdevice\">unregister_netdevice</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_put\">dev_put</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#VIFF_TUNNEL\">VIFF_TUNNEL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#ipmr_new_tunnel\">ipmr_new_tunnel</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#vifc\">vifc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#dev_set_allmulti\">dev_set_allmulti</a>(<a class=\"id\" href=\"#dev\">dev</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipmr_del_tunnel\">ipmr_del_tunnel</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#vifc\">vifc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_put\">dev_put</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#VIFF_USE_IFINDEX\">VIFF_USE_IFINDEX</a>:", 
"<span class=\"ts\"/>case 0:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#vifc\">vifc</a>-><a class=\"id\" href=\"#vifc_flags\">vifc_flags</a> == <a class=\"id\" href=\"#VIFF_USE_IFINDEX\">VIFF_USE_IFINDEX</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev_get_by_index\">dev_get_by_index</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#vifc\">vifc</a>-><a class=\"id\" href=\"#vifc_lcl_ifindex\">vifc_lcl_ifindex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a> && <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ip_ptr\">ip_ptr</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_put\">dev_put</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EADDRNOTAVAIL\">EADDRNOTAVAIL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#ip_dev_find\">ip_dev_find</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#vifc\">vifc</a>-><a class=\"id\" href=\"#vifc_lcl_addr\">vifc_lcl_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EADDRNOTAVAIL\">EADDRNOTAVAIL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#dev_set_allmulti\">dev_set_allmulti</a>(<a class=\"id\" href=\"#dev\">dev</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_put\">dev_put</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#in_dev\">in_dev</a> = <a class=\"id\" href=\"#__in_dev_get_rtnl\">__in_dev_get_rtnl</a>(<a class=\"id\" href=\"#dev\">dev</a>)) == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_put\">dev_put</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EADDRNOTAVAIL\">EADDRNOTAVAIL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IPV4_DEVCONF\">IPV4_DEVCONF</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>, <a class=\"id\" href=\"#MC_FORWARDING\">MC_FORWARDING</a>)++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip_rt_multicast_event\">ip_rt_multicast_event</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Fill in the VIF structures</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>-><a class=\"id\" href=\"#rate_limit\">rate_limit</a> = <a class=\"id\" href=\"#vifc\">vifc</a>-><a class=\"id\" href=\"#vifc_rate_limit\">vifc_rate_limit</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>-><a class=\"id\" href=\"#local\">local</a> = <a class=\"id\" href=\"#vifc\">vifc</a>-><a class=\"id\" href=\"#vifc_lcl_addr\">vifc_lcl_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>-><a class=\"id\" href=\"#remote\">remote</a> = <a class=\"id\" href=\"#vifc\">vifc</a>-><a class=\"id\" href=\"#vifc_rmt_addr\">vifc_rmt_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#vifc\">vifc</a>-><a class=\"id\" href=\"#vifc_flags\">vifc_flags</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mrtsock\">mrtsock</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#VIFF_STATIC\">VIFF_STATIC</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>-><a class=\"id\" href=\"#threshold\">threshold</a> = <a class=\"id\" href=\"#vifc\">vifc</a>-><a class=\"id\" href=\"#vifc_threshold\">vifc_threshold</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>-><a class=\"id\" href=\"#bytes_in\">bytes_in</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>-><a class=\"id\" href=\"#bytes_out\">bytes_out</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>-><a class=\"id\" href=\"#pkt_in\">pkt_in</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>-><a class=\"id\" href=\"#pkt_out\">pkt_out</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>-><a class=\"id\" href=\"#link\">link</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#v\">v</a>-><a class=\"id\" href=\"#flags\">flags</a>&amp;(<a class=\"id\" href=\"#VIFF_TUNNEL\">VIFF_TUNNEL</a>|<a class=\"id\" href=\"#VIFF_REGISTER\">VIFF_REGISTER</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>-><a class=\"id\" href=\"#link\">link</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#iflink\">iflink</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* And finish update writing critical data */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev\">dev</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_PIMSM\">CONFIG_IP_PIMSM</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#v\">v</a>-><a class=\"id\" href=\"#flags\">flags</a>&amp;<a class=\"id\" href=\"#VIFF_REGISTER\">VIFF_REGISTER</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mroute_reg_vif_num\">mroute_reg_vif_num</a> = <a class=\"id\" href=\"#vifi\">vifi</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vifi\">vifi</a>+1 &gt; <a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#maxvif\">maxvif</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#maxvif\">maxvif</a> = <a class=\"id\" href=\"#vifi\">vifi</a>+1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#mfc_cache\">mfc_cache</a> *<a class=\"id\" href=\"#ipmr_cache_find\">ipmr_cache_find</a>(struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#origin\">origin</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#mcastgrp\">mcastgrp</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#line\">line</a> = <a class=\"id\" href=\"#MFC_HASH\">MFC_HASH</a>(<a class=\"id\" href=\"#mcastgrp\">mcastgrp</a>, <a class=\"id\" href=\"#origin\">origin</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mfc_cache\">mfc_cache</a> *<a class=\"id\" href=\"#c\">c</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#c\">c</a>, &amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mfc_cache_array\">mfc_cache_array</a>[<a class=\"id\" href=\"#line\">line</a>], <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_origin\">mfc_origin</a> == <a class=\"id\" href=\"#origin\">origin</a> && <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_mcastgrp\">mfc_mcastgrp</a> == <a class=\"id\" href=\"#mcastgrp\">mcastgrp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#c\">c</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Allocate a multicast cache entry</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#mfc_cache\">mfc_cache</a> *<a class=\"id\" href=\"#ipmr_cache_alloc\">ipmr_cache_alloc</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mfc_cache\">mfc_cache</a> *<a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#kmem_cache_zalloc\">kmem_cache_zalloc</a>(<a class=\"id\" href=\"#mrt_cachep\">mrt_cachep</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#res\">res</a>.<a class=\"id\" href=\"#minvif\">minvif</a> = <a class=\"id\" href=\"#MAXVIFS\">MAXVIFS</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#c\">c</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#mfc_cache\">mfc_cache</a> *<a class=\"id\" href=\"#ipmr_cache_alloc_unres\">ipmr_cache_alloc_unres</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mfc_cache\">mfc_cache</a> *<a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#kmem_cache_zalloc\">kmem_cache_zalloc</a>(<a class=\"id\" href=\"#mrt_cachep\">mrt_cachep</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_queue_head_init\">skb_queue_head_init</a>(&amp;<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#unres\">unres</a>.<a class=\"id\" href=\"#unresolved\">unresolved</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#unres\">unres</a>.<a class=\"id\" href=\"#expires\">expires</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a> + 10*<a class=\"id\" href=\"#HZ\">HZ</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#c\">c</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>A cache entry has gone into a resolved state from queued</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#ipmr_cache_resolve\">ipmr_cache_resolve</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#mfc_cache\">mfc_cache</a> *<a class=\"id\" href=\"#uc\">uc</a>, struct <a class=\"id\" href=\"#mfc_cache\">mfc_cache</a> *<a class=\"id\" href=\"#c\">c</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nlmsgerr\">nlmsgerr</a> *<a class=\"id\" href=\"#e\">e</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Play the pending entries through our router</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#__skb_dequeue\">__skb_dequeue</a>(&amp;<a class=\"id\" href=\"#uc\">uc</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#unres\">unres</a>.<a class=\"id\" href=\"#unresolved\">unresolved</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#version\">version</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *<a class=\"id\" href=\"#nlh\">nlh</a> = (struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *)<a class=\"id\" href=\"#skb_pull\">skb_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(struct <a class=\"id\" href=\"#iphdr\">iphdr</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#__ipmr_fill_mroute\">__ipmr_fill_mroute</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#NLMSG_DATA\">NLMSG_DATA</a>(<a class=\"id\" href=\"#nlh\">nlh</a>)) &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nlh\">nlh</a>-><a class=\"id\" href=\"#nlmsg_len\">nlmsg_len</a> = (<a class=\"id\" href=\"#skb_tail_pointer\">skb_tail_pointer</a>(<a class=\"id\" href=\"#skb\">skb</a>) -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (<a class=\"id\" href=\"#u8\">u8</a> *)<a class=\"id\" href=\"#nlh\">nlh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nlh\">nlh</a>-><a class=\"id\" href=\"#nlmsg_type\">nlmsg_type</a> = <a class=\"id\" href=\"#NLMSG_ERROR\">NLMSG_ERROR</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nlh\">nlh</a>-><a class=\"id\" href=\"#nlmsg_len\">nlmsg_len</a> = <a class=\"id\" href=\"#NLMSG_LENGTH\">NLMSG_LENGTH</a>(sizeof(struct <a class=\"id\" href=\"#nlmsgerr\">nlmsgerr</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_trim\">skb_trim</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#nlh\">nlh</a>-><a class=\"id\" href=\"#nlmsg_len\">nlmsg_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#NLMSG_DATA\">NLMSG_DATA</a>(<a class=\"id\" href=\"#nlh\">nlh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EMSGSIZE\">EMSGSIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#msg\">msg</a>, 0, sizeof(<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#msg\">msg</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtnl_unicast\">rtnl_unicast</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#NETLINK_CB\">NETLINK_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>).<a class=\"id\" href=\"#pid\">pid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip_mr_forward\">ip_mr_forward</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#c\">c</a>, 0);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Bounce a cache query up to mrouted. We could use netlink for this but mrouted</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>expects the following bizarre scheme.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Called under mrt_lock.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#ipmr_cache_report\">ipmr_cache_report</a>(struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#pkt\">pkt</a>, <a class=\"id\" href=\"#vifi_t\">vifi_t</a> <a class=\"id\" href=\"#vifi\">vifi</a>, int <a class=\"id\" href=\"#assert\">assert</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/>const int <a class=\"id\" href=\"#ihl\">ihl</a> = <a class=\"id\" href=\"#ip_hdrlen\">ip_hdrlen</a>(<a class=\"id\" href=\"#pkt\">pkt</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#igmphdr\">igmphdr</a> *<a class=\"id\" href=\"#igmp\">igmp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#igmpmsg\">igmpmsg</a> *<a class=\"id\" href=\"#msg\">msg</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_PIMSM\">CONFIG_IP_PIMSM</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#assert\">assert</a> == <a class=\"id\" href=\"#IGMPMSG_WHOLEPKT\">IGMPMSG_WHOLEPKT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#skb_realloc_headroom\">skb_realloc_headroom</a>(<a class=\"id\" href=\"#pkt\">pkt</a>, sizeof(struct <a class=\"id\" href=\"#iphdr\">iphdr</a>));", 
"<span class=\"ts\"/>else", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#alloc_skb\">alloc_skb</a>(128, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb\">skb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_PIMSM\">CONFIG_IP_PIMSM</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#assert\">assert</a> == <a class=\"id\" href=\"#IGMPMSG_WHOLEPKT\">IGMPMSG_WHOLEPKT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Ugly, but we have no choice with this interface.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   Duplicate old header, fix ihl, length etc.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   And all this only to mangle msg-&gt;im_msgtype and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   to set msg-&gt;im_mbz to \"mbz\" :-)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_push\">skb_push</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(struct <a class=\"id\" href=\"#iphdr\">iphdr</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_reset_network_header\">skb_reset_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_reset_transport_header\">skb_reset_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a> = (struct <a class=\"id\" href=\"#igmpmsg\">igmpmsg</a> *)<a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#msg\">msg</a>, <a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#pkt\">pkt</a>), sizeof(struct <a class=\"id\" href=\"#iphdr\">iphdr</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#im_msgtype\">im_msgtype</a> = <a class=\"id\" href=\"#IGMPMSG_WHOLEPKT\">IGMPMSG_WHOLEPKT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#im_mbz\">im_mbz</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#im_vif\">im_vif</a> = <a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mroute_reg_vif_num\">mroute_reg_vif_num</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#ihl\">ihl</a> = sizeof(struct <a class=\"id\" href=\"#iphdr\">iphdr</a>) >> 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#tot_len\">tot_len</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#pkt\">pkt</a>)-><a class=\"id\" href=\"#tot_len\">tot_len</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     sizeof(struct <a class=\"id\" href=\"#iphdr\">iphdr</a>));", 
"<span class=\"ts\"/>} else", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>{", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Copy the IP header</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#network_header\">network_header</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#tail\">tail</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_put\">skb_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#ihl\">ihl</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_copy_to_linear_data\">skb_copy_to_linear_data</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#ihl\">ihl</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#protocol\">protocol</a> = 0;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Flag to the kernel this is a route add */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a> = (struct <a class=\"id\" href=\"#igmpmsg\">igmpmsg</a> *)<a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#im_vif\">im_vif</a> = <a class=\"id\" href=\"#vifi\">vifi</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_dst_set\">skb_dst_set</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#dst_clone\">dst_clone</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#pkt\">pkt</a>)));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Add our header</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#igmp\">igmp</a>=(struct <a class=\"id\" href=\"#igmphdr\">igmphdr</a> *)<a class=\"id\" href=\"#skb_put\">skb_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(struct <a class=\"id\" href=\"#igmphdr\">igmphdr</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#igmp\">igmp</a>-><a class=\"id\" href=\"#type\">type</a><span class=\"ts\"/>=", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#im_msgtype\">im_msgtype</a> = <a class=\"id\" href=\"#assert\">assert</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#igmp\">igmp</a>-><a class=\"id\" href=\"#code\">code</a> <span class=\"ts\"/>=<span class=\"ts\"/>0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#tot_len\">tot_len</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Fix the length */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#transport_header\">transport_header</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#network_header\">network_header</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mroute_sk\">mroute_sk</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Deliver to mrouted</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#sock_queue_rcv_skb\">sock_queue_rcv_skb</a>(<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mroute_sk\">mroute_sk</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#net_ratelimit\">net_ratelimit</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"mroute: pending queue full, dropping entries.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Queue a packet for resolution. It gets locked cache entry!</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int", 
"<a class=\"id\" href=\"#ipmr_cache_unresolved\">ipmr_cache_unresolved</a>(struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#vifi_t\">vifi_t</a> <a class=\"id\" href=\"#vifi\">vifi</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#found\">found</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mfc_cache\">mfc_cache</a> *<a class=\"id\" href=\"#c\">c</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#iphdr\">iphdr</a> *<a class=\"id\" href=\"#iph\">iph</a> = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#mfc_unres_lock\">mfc_unres_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#c\">c</a>, &amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mfc_unres_queue\">mfc_unres_queue</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_mcastgrp\">mfc_mcastgrp</a> == <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#daddr\">daddr</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_origin\">mfc_origin</a> == <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#saddr\">saddr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#found\">found</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>Create a new entry if allowable</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#cache_resolve_queue_len\">cache_resolve_queue_len</a>) >= 10 ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#ipmr_cache_alloc_unres\">ipmr_cache_alloc_unres</a>()) == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#mfc_unres_lock\">mfc_unres_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>Fill in the new cache entry</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_parent\">mfc_parent</a><span class=\"ts\"/>= -1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_origin\">mfc_origin</a><span class=\"ts\"/>= <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#saddr\">saddr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_mcastgrp\">mfc_mcastgrp</a><span class=\"ts\"/>= <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#daddr\">daddr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>Reflect first query at mrouted.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ipmr_cache_report\">ipmr_cache_report</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#vifi\">vifi</a>, <a class=\"id\" href=\"#IGMPMSG_NOCACHE\">IGMPMSG_NOCACHE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If the report failed throw the cache entry</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   out - Brad Parker</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#mfc_unres_lock\">mfc_unres_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipmr_cache_free\">ipmr_cache_free</a>(<a class=\"id\" href=\"#c\">c</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#cache_resolve_queue_len\">cache_resolve_queue_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mfc_unres_queue\">mfc_unres_queue</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#cache_resolve_queue_len\">cache_resolve_queue_len</a>) == 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mod_timer\">mod_timer</a>(&amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#ipmr_expire_timer\">ipmr_expire_timer</a>, <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#unres\">unres</a>.<a class=\"id\" href=\"#expires\">expires</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>See if we can append the packet</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#unres\">unres</a>.<a class=\"id\" href=\"#unresolved\">unresolved</a>.<a class=\"id\" href=\"#qlen\">qlen</a>&gt;3) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_queue_tail\">skb_queue_tail</a>(&amp;<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#unres\">unres</a>.<a class=\"id\" href=\"#unresolved\">unresolved</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#mfc_unres_lock\">mfc_unres_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>MFC cache manipulation by user space mroute daemon</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#ipmr_mfc_delete\">ipmr_mfc_delete</a>(struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>, struct <a class=\"id\" href=\"#mfcctl\">mfcctl</a> *<a class=\"id\" href=\"#mfc\">mfc</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#line\">line</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mfc_cache\">mfc_cache</a> *<a class=\"id\" href=\"#c\">c</a>, *<a class=\"id\" href=\"#next\">next</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#line\">line</a> = <a class=\"id\" href=\"#MFC_HASH\">MFC_HASH</a>(<a class=\"id\" href=\"#mfc\">mfc</a>-><a class=\"id\" href=\"#mfcc_mcastgrp\">mfcc_mcastgrp</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>, <a class=\"id\" href=\"#mfc\">mfc</a>-><a class=\"id\" href=\"#mfcc_origin\">mfcc_origin</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#next\">next</a>, &amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mfc_cache_array\">mfc_cache_array</a>[<a class=\"id\" href=\"#line\">line</a>], <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_origin\">mfc_origin</a> == <a class=\"id\" href=\"#mfc\">mfc</a>-><a class=\"id\" href=\"#mfcc_origin\">mfcc_origin</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_mcastgrp\">mfc_mcastgrp</a> == <a class=\"id\" href=\"#mfc\">mfc</a>-><a class=\"id\" href=\"#mfcc_mcastgrp\">mfcc_mcastgrp</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipmr_cache_free\">ipmr_cache_free</a>(<a class=\"id\" href=\"#c\">c</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ipmr_mfc_add\">ipmr_mfc_add</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#mfcctl\">mfcctl</a> *<a class=\"id\" href=\"#mfc\">mfc</a>, int <a class=\"id\" href=\"#mrtsock\">mrtsock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#found\">found</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#line\">line</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mfc_cache\">mfc_cache</a> *<a class=\"id\" href=\"#uc\">uc</a>, *<a class=\"id\" href=\"#c\">c</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mfc\">mfc</a>-><a class=\"id\" href=\"#mfcc_parent\">mfcc_parent</a> >= <a class=\"id\" href=\"#MAXVIFS\">MAXVIFS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENFILE\">ENFILE</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#line\">line</a> = <a class=\"id\" href=\"#MFC_HASH\">MFC_HASH</a>(<a class=\"id\" href=\"#mfc\">mfc</a>-><a class=\"id\" href=\"#mfcc_mcastgrp\">mfcc_mcastgrp</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>, <a class=\"id\" href=\"#mfc\">mfc</a>-><a class=\"id\" href=\"#mfcc_origin\">mfcc_origin</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#c\">c</a>, &amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mfc_cache_array\">mfc_cache_array</a>[<a class=\"id\" href=\"#line\">line</a>], <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_origin\">mfc_origin</a> == <a class=\"id\" href=\"#mfc\">mfc</a>-><a class=\"id\" href=\"#mfcc_origin\">mfcc_origin</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_mcastgrp\">mfc_mcastgrp</a> == <a class=\"id\" href=\"#mfc\">mfc</a>-><a class=\"id\" href=\"#mfcc_mcastgrp\">mfcc_mcastgrp</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#found\">found</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_parent\">mfc_parent</a> = <a class=\"id\" href=\"#mfc\">mfc</a>-><a class=\"id\" href=\"#mfcc_parent\">mfcc_parent</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipmr_update_thresholds\">ipmr_update_thresholds</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#mfc\">mfc</a>-><a class=\"id\" href=\"#mfcc_ttls\">mfcc_ttls</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#mrtsock\">mrtsock</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_flags\">mfc_flags</a> |= <a class=\"id\" href=\"#MFC_STATIC\">MFC_STATIC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ipv4_is_multicast\">ipv4_is_multicast</a>(<a class=\"id\" href=\"#mfc\">mfc</a>-><a class=\"id\" href=\"#mfcc_mcastgrp\">mfcc_mcastgrp</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#ipmr_cache_alloc\">ipmr_cache_alloc</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_origin\">mfc_origin</a> = <a class=\"id\" href=\"#mfc\">mfc</a>-><a class=\"id\" href=\"#mfcc_origin\">mfcc_origin</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_mcastgrp\">mfc_mcastgrp</a> = <a class=\"id\" href=\"#mfc\">mfc</a>-><a class=\"id\" href=\"#mfcc_mcastgrp\">mfcc_mcastgrp</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_parent\">mfc_parent</a> = <a class=\"id\" href=\"#mfc\">mfc</a>-><a class=\"id\" href=\"#mfcc_parent\">mfcc_parent</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipmr_update_thresholds\">ipmr_update_thresholds</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#mfc\">mfc</a>-><a class=\"id\" href=\"#mfcc_ttls\">mfcc_ttls</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mrtsock\">mrtsock</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_flags\">mfc_flags</a> |= <a class=\"id\" href=\"#MFC_STATIC\">MFC_STATIC</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mfc_cache_array\">mfc_cache_array</a>[<a class=\"id\" href=\"#line\">line</a>]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Check to see if we resolved a queued list. If so we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>need to send on the frames and tidy up.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#mfc_unres_lock\">mfc_unres_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#uc\">uc</a>, &amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mfc_unres_queue\">mfc_unres_queue</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#uc\">uc</a>-><a class=\"id\" href=\"#mfc_origin\">mfc_origin</a> == <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_origin\">mfc_origin</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#uc\">uc</a>-><a class=\"id\" href=\"#mfc_mcastgrp\">mfc_mcastgrp</a> == <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_mcastgrp\">mfc_mcastgrp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#uc\">uc</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_dec\">atomic_dec</a>(&amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#cache_resolve_queue_len\">cache_resolve_queue_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mfc_unres_queue\">mfc_unres_queue</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#del_timer\">del_timer</a>(&amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#ipmr_expire_timer\">ipmr_expire_timer</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#mfc_unres_lock\">mfc_unres_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#found\">found</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipmr_cache_resolve\">ipmr_cache_resolve</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#uc\">uc</a>, <a class=\"id\" href=\"#c\">c</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipmr_cache_free\">ipmr_cache_free</a>(<a class=\"id\" href=\"#uc\">uc</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Close the multicast socket, and clear the vif tables etc</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#mroute_clean_tables\">mroute_clean_tables</a>(struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mfc_cache\">mfc_cache</a> *<a class=\"id\" href=\"#c\">c</a>, *<a class=\"id\" href=\"#next\">next</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Shut down all active vif entries</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#maxvif\">maxvif</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#vif_table\">vif_table</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#flags\">flags</a>&amp;<a class=\"id\" href=\"#VIFF_STATIC\">VIFF_STATIC</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vif_delete\">vif_delete</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#i\">i</a>, 0, &amp;<a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_netdevice_many\">unregister_netdevice_many</a>(&amp;<a class=\"id\" href=\"#list\">list</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Wipe the cache</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#MFC_LINES\">MFC_LINES</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#next\">next</a>, &amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mfc_cache_array\">mfc_cache_array</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_flags\">mfc_flags</a>&amp;<a class=\"id\" href=\"#MFC_STATIC\">MFC_STATIC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipmr_cache_free\">ipmr_cache_free</a>(<a class=\"id\" href=\"#c\">c</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#cache_resolve_queue_len\">cache_resolve_queue_len</a>) != 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#mfc_unres_lock\">mfc_unres_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#next\">next</a>, &amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mfc_unres_queue\">mfc_unres_queue</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipmr_destroy_unres\">ipmr_destroy_unres</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#c\">c</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#mfc_unres_lock\">mfc_unres_lock</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#mrtsock_destruct\">mrtsock_destruct</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_lock\">rtnl_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipmr_for_each_table\">ipmr_for_each_table</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#net\">net</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a> == <a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mroute_sk\">mroute_sk</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IPV4_DEVCONF_ALL\">IPV4_DEVCONF_ALL</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#MC_FORWARDING\">MC_FORWARDING</a>)--;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mroute_sk\">mroute_sk</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mroute_clean_tables\">mroute_clean_tables</a>(<a class=\"id\" href=\"#mrt\">mrt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_unlock\">rtnl_unlock</a>();", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Socket options and virtual interface manipulation. The whole</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>virtual interface system is a complete heap, but unfortunately</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>that's how BSD mrouted happens to think. Maybe one day with a proper</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>MOSPF/PIM router set up we can clean this up.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#ip_mroute_setsockopt\">ip_mroute_setsockopt</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#optname\">optname</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optval\">optval</a>, unsigned int <a class=\"id\" href=\"#optlen\">optlen</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vifctl\">vifctl</a> <a class=\"id\" href=\"#vif\">vif</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mfcctl\">mfcctl</a> <a class=\"id\" href=\"#mfc\">mfc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mrt\">mrt</a> = <a class=\"id\" href=\"#ipmr_get_table\">ipmr_get_table</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#raw_sk\">raw_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#ipmr_table\">ipmr_table</a> ? : <a class=\"id\" href=\"#RT_TABLE_DEFAULT\">RT_TABLE_DEFAULT</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mrt\">mrt</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#optname\">optname</a> != <a class=\"id\" href=\"#MRT_INIT\">MRT_INIT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a> != <a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mroute_sk\">mroute_sk</a> && !<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_NET_ADMIN\">CAP_NET_ADMIN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#optname\">optname</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MRT_INIT\">MRT_INIT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_type\">sk_type</a> != <a class=\"id\" href=\"#SOCK_RAW\">SOCK_RAW</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#inet_num\">inet_num</a> != <a class=\"id\" href=\"#IPPROTO_IGMP\">IPPROTO_IGMP</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EOPNOTSUPP\">EOPNOTSUPP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#optlen\">optlen</a> != sizeof(int))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOPROTOOPT\">ENOPROTOOPT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtnl_lock\">rtnl_lock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mroute_sk\">mroute_sk</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtnl_unlock\">rtnl_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EADDRINUSE\">EADDRINUSE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ip_ra_control\">ip_ra_control</a>(<a class=\"id\" href=\"#sk\">sk</a>, 1, <a class=\"id\" href=\"#mrtsock_destruct\">mrtsock_destruct</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mroute_sk\">mroute_sk</a> = <a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IPV4_DEVCONF_ALL\">IPV4_DEVCONF_ALL</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#MC_FORWARDING\">MC_FORWARDING</a>)++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtnl_unlock\">rtnl_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MRT_DONE\">MRT_DONE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a> != <a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mroute_sk\">mroute_sk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ip_ra_control\">ip_ra_control</a>(<a class=\"id\" href=\"#sk\">sk</a>, 0, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MRT_ADD_VIF\">MRT_ADD_VIF</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MRT_DEL_VIF\">MRT_DEL_VIF</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#optlen\">optlen</a> != sizeof(<a class=\"id\" href=\"#vif\">vif</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#vif\">vif</a>, <a class=\"id\" href=\"#optval\">optval</a>, sizeof(<a class=\"id\" href=\"#vif\">vif</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#vif\">vif</a>.<a class=\"id\" href=\"#vifc_vifi\">vifc_vifi</a> >= <a class=\"id\" href=\"#MAXVIFS\">MAXVIFS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENFILE\">ENFILE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtnl_lock\">rtnl_lock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#optname\">optname</a> == <a class=\"id\" href=\"#MRT_ADD_VIF\">MRT_ADD_VIF</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#vif_add\">vif_add</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#mrt\">mrt</a>, &amp;<a class=\"id\" href=\"#vif\">vif</a>, <a class=\"id\" href=\"#sk\">sk</a> == <a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mroute_sk\">mroute_sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#vif_delete\">vif_delete</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#vif\">vif</a>.<a class=\"id\" href=\"#vifc_vifi\">vifc_vifi</a>, 0, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtnl_unlock\">rtnl_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>Manipulate the forwarding caches. These live</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>in a sort of kernel/user symbiosis.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MRT_ADD_MFC\">MRT_ADD_MFC</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MRT_DEL_MFC\">MRT_DEL_MFC</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#optlen\">optlen</a> != sizeof(<a class=\"id\" href=\"#mfc\">mfc</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#mfc\">mfc</a>, <a class=\"id\" href=\"#optval\">optval</a>, sizeof(<a class=\"id\" href=\"#mfc\">mfc</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtnl_lock\">rtnl_lock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#optname\">optname</a> == <a class=\"id\" href=\"#MRT_DEL_MFC\">MRT_DEL_MFC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ipmr_mfc_delete\">ipmr_mfc_delete</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, &amp;<a class=\"id\" href=\"#mfc\">mfc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ipmr_mfc_add\">ipmr_mfc_add</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#mrt\">mrt</a>, &amp;<a class=\"id\" href=\"#mfc\">mfc</a>, <a class=\"id\" href=\"#sk\">sk</a> == <a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mroute_sk\">mroute_sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtnl_unlock\">rtnl_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>Control PIM assert.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MRT_ASSERT\">MRT_ASSERT</a>:", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#v\">v</a>,(int <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#optval\">optval</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mroute_do_assert\">mroute_do_assert</a> = (<a class=\"id\" href=\"#v\">v</a>) ? 1 : 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_PIMSM\">CONFIG_IP_PIMSM</a>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MRT_PIM\">MRT_PIM</a>:", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#v\">v</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#v\">v</a>,(int <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#optval\">optval</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a> = (<a class=\"id\" href=\"#v\">v</a>) ? 1 : 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtnl_lock\">rtnl_lock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#v\">v</a> != <a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mroute_do_pim\">mroute_do_pim</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mroute_do_pim\">mroute_do_pim</a> = <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mroute_do_assert\">mroute_do_assert</a> = <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtnl_unlock\">rtnl_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_MROUTE_MULTIPLE_TABLES\">CONFIG_IP_MROUTE_MULTIPLE_TABLES</a>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MRT_TABLE\">MRT_TABLE</a>:", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#v\">v</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#optlen\">optlen</a> != sizeof(<a class=\"id\" href=\"#u32\">u32</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#v\">v</a>, (<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#optval\">optval</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a> == <a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mroute_sk\">mroute_sk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtnl_lock\">rtnl_lock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ipmr_new_table\">ipmr_new_table</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#v\">v</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_sk\">raw_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#ipmr_table\">ipmr_table</a> = <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtnl_unlock\">rtnl_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Spurious command, or MRT_VERSION which you cannot</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>set.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOPROTOOPT\">ENOPROTOOPT</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Getsock opt support for the multicast routing system.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#ip_mroute_getsockopt\">ip_mroute_getsockopt</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#optname\">optname</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optval\">optval</a>, int <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optlen\">optlen</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#olr\">olr</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mrt\">mrt</a> = <a class=\"id\" href=\"#ipmr_get_table\">ipmr_get_table</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#raw_sk\">raw_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#ipmr_table\">ipmr_table</a> ? : <a class=\"id\" href=\"#RT_TABLE_DEFAULT\">RT_TABLE_DEFAULT</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mrt\">mrt</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#optname\">optname</a> != <a class=\"id\" href=\"#MRT_VERSION\">MRT_VERSION</a> &&", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_PIMSM\">CONFIG_IP_PIMSM</a>", 
"<span class=\"ts\"/>   <a class=\"id\" href=\"#optname\">optname</a>!=<a class=\"id\" href=\"#MRT_PIM\">MRT_PIM</a> &&", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>   <a class=\"id\" href=\"#optname\">optname</a>!=<a class=\"id\" href=\"#MRT_ASSERT\">MRT_ASSERT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOPROTOOPT\">ENOPROTOOPT</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#olr\">olr</a>, <a class=\"id\" href=\"#optlen\">optlen</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#olr\">olr</a> = <a class=\"id\" href=\"#min_t\">min_t</a>(unsigned int, <a class=\"id\" href=\"#olr\">olr</a>, sizeof(int));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#olr\">olr</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#olr\">olr</a>, <a class=\"id\" href=\"#optlen\">optlen</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#optname\">optname</a> == <a class=\"id\" href=\"#MRT_VERSION\">MRT_VERSION</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = 0x0305;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_PIMSM\">CONFIG_IP_PIMSM</a>", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#optname\">optname</a> == <a class=\"id\" href=\"#MRT_PIM\">MRT_PIM</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mroute_do_pim\">mroute_do_pim</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mroute_do_assert\">mroute_do_assert</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#optval\">optval</a>, &amp;<a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#olr\">olr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>The IP multicast ioctl support routines.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#ipmr_ioctl\">ipmr_ioctl</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#cmd\">cmd</a>, void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sioc_sg_req\">sioc_sg_req</a> <a class=\"id\" href=\"#sr\">sr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sioc_vif_req\">sioc_vif_req</a> <a class=\"id\" href=\"#vr\">vr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vif_device\">vif_device</a> *<a class=\"id\" href=\"#vif\">vif</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mfc_cache\">mfc_cache</a> *<a class=\"id\" href=\"#c\">c</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mrt\">mrt</a> = <a class=\"id\" href=\"#ipmr_get_table\">ipmr_get_table</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#raw_sk\">raw_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#ipmr_table\">ipmr_table</a> ? : <a class=\"id\" href=\"#RT_TABLE_DEFAULT\">RT_TABLE_DEFAULT</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mrt\">mrt</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#cmd\">cmd</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGETVIFCNT\">SIOCGETVIFCNT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#vr\">vr</a>, <a class=\"id\" href=\"#arg\">arg</a>, sizeof(<a class=\"id\" href=\"#vr\">vr</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#vr\">vr</a>.<a class=\"id\" href=\"#vifi\">vifi</a> >= <a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#maxvif\">maxvif</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vif\">vif</a> = &amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#vif_table\">vif_table</a>[<a class=\"id\" href=\"#vr\">vr</a>.<a class=\"id\" href=\"#vifi\">vifi</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#VIF_EXISTS\">VIF_EXISTS</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#vr\">vr</a>.<a class=\"id\" href=\"#vifi\">vifi</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vr\">vr</a>.<a class=\"id\" href=\"#icount\">icount</a> = <a class=\"id\" href=\"#vif\">vif</a>-><a class=\"id\" href=\"#pkt_in\">pkt_in</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vr\">vr</a>.<a class=\"id\" href=\"#ocount\">ocount</a> = <a class=\"id\" href=\"#vif\">vif</a>-><a class=\"id\" href=\"#pkt_out\">pkt_out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vr\">vr</a>.<a class=\"id\" href=\"#ibytes\">ibytes</a> = <a class=\"id\" href=\"#vif\">vif</a>-><a class=\"id\" href=\"#bytes_in\">bytes_in</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vr\">vr</a>.<a class=\"id\" href=\"#obytes\">obytes</a> = <a class=\"id\" href=\"#vif\">vif</a>-><a class=\"id\" href=\"#bytes_out\">bytes_out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#arg\">arg</a>, &amp;<a class=\"id\" href=\"#vr\">vr</a>, sizeof(<a class=\"id\" href=\"#vr\">vr</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EADDRNOTAVAIL\">EADDRNOTAVAIL</a>;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGETSGCNT\">SIOCGETSGCNT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#sr\">sr</a>, <a class=\"id\" href=\"#arg\">arg</a>, sizeof(<a class=\"id\" href=\"#sr\">sr</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#ipmr_cache_find\">ipmr_cache_find</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#sr\">sr</a>.<a class=\"id\" href=\"#src\">src</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>, <a class=\"id\" href=\"#sr\">sr</a>.<a class=\"id\" href=\"#grp\">grp</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sr\">sr</a>.<a class=\"id\" href=\"#pktcnt\">pktcnt</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#res\">res</a>.<a class=\"id\" href=\"#pkt\">pkt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sr\">sr</a>.<a class=\"id\" href=\"#bytecnt\">bytecnt</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#res\">res</a>.<a class=\"id\" href=\"#bytes\">bytes</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sr\">sr</a>.<a class=\"id\" href=\"#wrong_if\">wrong_if</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#res\">res</a>.<a class=\"id\" href=\"#wrong_if\">wrong_if</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#arg\">arg</a>, &amp;<a class=\"id\" href=\"#sr\">sr</a>, sizeof(<a class=\"id\" href=\"#sr\">sr</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EADDRNOTAVAIL\">EADDRNOTAVAIL</a>;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOIOCTLCMD\">ENOIOCTLCMD</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"", 
"static int <a class=\"id\" href=\"#ipmr_device_event\">ipmr_device_event</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#this\">this</a>, unsigned long <a class=\"id\" href=\"#event\">event</a>, void *<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#ptr\">ptr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vif_device\">vif_device</a> *<a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ct\">ct</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#list\">list</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#event\">event</a> != <a class=\"id\" href=\"#NETDEV_UNREGISTER\">NETDEV_UNREGISTER</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NOTIFY_DONE\">NOTIFY_DONE</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipmr_for_each_table\">ipmr_for_each_table</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#net\">net</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a> = &amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#vif_table\">vif_table</a>[0];", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#ct\">ct</a> = 0; <a class=\"id\" href=\"#ct\">ct</a> &lt; <a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#maxvif\">maxvif</a>; <a class=\"id\" href=\"#ct\">ct</a>++, <a class=\"id\" href=\"#v\">v</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#v\">v</a>-><a class=\"id\" href=\"#dev\">dev</a> == <a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vif_delete\">vif_delete</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#ct\">ct</a>, 1, &amp;<a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_netdevice_many\">unregister_netdevice_many</a>(&amp;<a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NOTIFY_DONE\">NOTIFY_DONE</a>;", 
"}", 
"", 
"", 
"static struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> <a class=\"id\" href=\"#ip_mr_notifier\">ip_mr_notifier</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#notifier_call\">notifier_call</a> = <a class=\"id\" href=\"#ipmr_device_event\">ipmr_device_event</a>,", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>Encapsulate a packet by attaching a valid IPIP header to it.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This avoids tunnel drivers and other mess and gives us the speed so</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>important for multicast video.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#ip_encap\">ip_encap</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#daddr\">daddr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iphdr\">iphdr</a> *<a class=\"id\" href=\"#iph\">iph</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iphdr\">iphdr</a> *<a class=\"id\" href=\"#old_iph\">old_iph</a> = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_push\">skb_push</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(struct <a class=\"id\" href=\"#iphdr\">iphdr</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#transport_header\">transport_header</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#network_header\">network_header</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_reset_network_header\">skb_reset_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a> = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#version\">version</a><span class=\"ts\"/>= <span class=\"ts\"/>4;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#tos\">tos</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#old_iph\">old_iph</a>-><a class=\"id\" href=\"#tos\">tos</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#ttl\">ttl</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#old_iph\">old_iph</a>-><a class=\"id\" href=\"#ttl\">ttl</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#frag_off\">frag_off</a><span class=\"ts\"/>=<span class=\"ts\"/>0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#daddr\">daddr</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#daddr\">daddr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#saddr\">saddr</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#saddr\">saddr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#protocol\">protocol</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#IPPROTO_IPIP\">IPPROTO_IPIP</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#ihl\">ihl</a><span class=\"ts\"/>=<span class=\"ts\"/>5;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#tot_len\">tot_len</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip_select_ident\">ip_select_ident</a>(<a class=\"id\" href=\"#iph\">iph</a>, <a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>), <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip_send_check\">ip_send_check</a>(<a class=\"id\" href=\"#iph\">iph</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;(<a class=\"id\" href=\"#IPCB\">IPCB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#opt\">opt</a>), 0, sizeof(<a class=\"id\" href=\"#IPCB\">IPCB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#opt\">opt</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nf_reset\">nf_reset</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ipmr_forward_finish\">ipmr_forward_finish</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ip_options\">ip_options</a> * <a class=\"id\" href=\"#opt\">opt</a><span class=\"ts\"/>= &amp;(<a class=\"id\" href=\"#IPCB\">IPCB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#opt\">opt</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IP_INC_STATS_BH\">IP_INC_STATS_BH</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#IPSTATS_MIB_OUTFORWDATAGRAMS\">IPSTATS_MIB_OUTFORWDATAGRAMS</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#optlen\">optlen</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip_forward_options\">ip_forward_options</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dst_output\">dst_output</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Processing handlers for ipmr_forward</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#ipmr_queue_xmit\">ipmr_queue_xmit</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#mfc_cache\">mfc_cache</a> *<a class=\"id\" href=\"#c\">c</a>, int <a class=\"id\" href=\"#vifi\">vifi</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#iphdr\">iphdr</a> *<a class=\"id\" href=\"#iph\">iph</a> = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vif_device\">vif_device</a> *<a class=\"id\" href=\"#vif\">vif</a> = &amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#vif_table\">vif_table</a>[<a class=\"id\" href=\"#vifi\">vifi</a>];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtable\">rtable</a> *<a class=\"id\" href=\"#rt\">rt</a>;", 
"<span class=\"ts\"/>int    <a class=\"id\" href=\"#encap\">encap</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vif\">vif</a>-><a class=\"id\" href=\"#dev\">dev</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free\">out_free</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_PIMSM\">CONFIG_IP_PIMSM</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vif\">vif</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#VIFF_REGISTER\">VIFF_REGISTER</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vif\">vif</a>-><a class=\"id\" href=\"#pkt_out\">pkt_out</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vif\">vif</a>-><a class=\"id\" href=\"#bytes_out\">bytes_out</a> += <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vif\">vif</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#tx_bytes\">tx_bytes</a> += <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vif\">vif</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#tx_packets\">tx_packets</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipmr_cache_report\">ipmr_cache_report</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#vifi\">vifi</a>, <a class=\"id\" href=\"#IGMPMSG_WHOLEPKT\">IGMPMSG_WHOLEPKT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free\">out_free</a>;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vif\">vif</a>-><a class=\"id\" href=\"#flags\">flags</a>&amp;<a class=\"id\" href=\"#VIFF_TUNNEL\">VIFF_TUNNEL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#flowi\">flowi</a> <a class=\"id\" href=\"#fl\">fl</a> = { .<a class=\"id\" href=\"#oif\">oif</a> = <a class=\"id\" href=\"#vif\">vif</a>-><a class=\"id\" href=\"#link\">link</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    .<a class=\"id\" href=\"#nl_u\">nl_u</a> = { .<a class=\"id\" href=\"#ip4_u\">ip4_u</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      { .<a class=\"id\" href=\"#daddr\">daddr</a> = <a class=\"id\" href=\"#vif\">vif</a>-><a class=\"id\" href=\"#remote\">remote</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#saddr\">saddr</a> = <a class=\"id\" href=\"#vif\">vif</a>-><a class=\"id\" href=\"#local\">local</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#tos\">tos</a> = <a class=\"id\" href=\"#RT_TOS\">RT_TOS</a>(<a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#tos\">tos</a>) } },", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    .<a class=\"id\" href=\"#proto\">proto</a> = <a class=\"id\" href=\"#IPPROTO_IPIP\">IPPROTO_IPIP</a> };", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ip_route_output_key\">ip_route_output_key</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#rt\">rt</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free\">out_free</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#encap\">encap</a> = sizeof(struct <a class=\"id\" href=\"#iphdr\">iphdr</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#flowi\">flowi</a> <a class=\"id\" href=\"#fl\">fl</a> = { .<a class=\"id\" href=\"#oif\">oif</a> = <a class=\"id\" href=\"#vif\">vif</a>-><a class=\"id\" href=\"#link\">link</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    .<a class=\"id\" href=\"#nl_u\">nl_u</a> = { .<a class=\"id\" href=\"#ip4_u\">ip4_u</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      { .<a class=\"id\" href=\"#daddr\">daddr</a> = <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#daddr\">daddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#tos\">tos</a> = <a class=\"id\" href=\"#RT_TOS\">RT_TOS</a>(<a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#tos\">tos</a>) } },", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    .<a class=\"id\" href=\"#proto\">proto</a> = <a class=\"id\" href=\"#IPPROTO_IPIP\">IPPROTO_IPIP</a> };", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ip_route_output_key\">ip_route_output_key</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#rt\">rt</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free\">out_free</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>+<a class=\"id\" href=\"#encap\">encap</a> &gt; <a class=\"id\" href=\"#dst_mtu\">dst_mtu</a>(&amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>) && (<a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#frag_off\">frag_off</a>) &amp; <a class=\"id\" href=\"#IP_DF\">IP_DF</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Do not fragment multicasts. Alas, IPv4 does not</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   allow to send ICMP, so that packets will disappear</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   to blackhole.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP_INC_STATS_BH\">IP_INC_STATS_BH</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#IPSTATS_MIB_FRAGFAILS\">IPSTATS_MIB_FRAGFAILS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip_rt_put\">ip_rt_put</a>(<a class=\"id\" href=\"#rt\">rt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free\">out_free</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#encap\">encap</a> += <a class=\"id\" href=\"#LL_RESERVED_SPACE\">LL_RESERVED_SPACE</a>(<a class=\"id\" href=\"#dev\">dev</a>) + <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#header_len\">header_len</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_cow\">skb_cow</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#encap\">encap</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip_rt_put\">ip_rt_put</a>(<a class=\"id\" href=\"#rt\">rt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free\">out_free</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vif\">vif</a>-><a class=\"id\" href=\"#pkt_out\">pkt_out</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vif\">vif</a>-><a class=\"id\" href=\"#bytes_out\">bytes_out</a> += <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_dst_drop\">skb_dst_drop</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_dst_set\">skb_dst_set</a>(<a class=\"id\" href=\"#skb\">skb</a>, &amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip_decrease_ttl\">ip_decrease_ttl</a>(<a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* FIXME: forward and output firewalls used to be called here.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * What do we do with netfilter? -- RR */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vif\">vif</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#VIFF_TUNNEL\">VIFF_TUNNEL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip_encap\">ip_encap</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#vif\">vif</a>-><a class=\"id\" href=\"#local\">local</a>, <a class=\"id\" href=\"#vif\">vif</a>-><a class=\"id\" href=\"#remote\">remote</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* FIXME: extra output firewall step used to be here. --RR */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vif\">vif</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#tx_packets\">tx_packets</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vif\">vif</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#tx_bytes\">tx_bytes</a> += <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IPCB\">IPCB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#IPSKB_FORWARDED\">IPSKB_FORWARDED</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * RFC1584 teaches, that DVMRP/PIM router must deliver packets locally</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * not only before forwarding, but after forwarding on all output</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * interfaces. It is clear, if mrouter runs a multicasting</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * program, it should receive packets not depending to what interface</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * program is joined.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If we will not make it, the program will have to join on all</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * interfaces. On the other hand, multihoming host (or router, but</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * not mrouter) cannot join to more than one interface - it will</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * result in receiving multiple packets.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NF_HOOK\">NF_HOOK</a>(<a class=\"id\" href=\"#NFPROTO_IPV4\">NFPROTO_IPV4</a>, <a class=\"id\" href=\"#NF_INET_FORWARD\">NF_INET_FORWARD</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipmr_forward_finish\">ipmr_forward_finish</a>);", 
"<span class=\"ts\"/>return;", 
"", 
"<a class=\"id\" href=\"#out_free\">out_free</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ipmr_find_vif\">ipmr_find_vif</a>(struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ct\">ct</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#ct\">ct</a> = <a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#maxvif\">maxvif</a>-1; <a class=\"id\" href=\"#ct\">ct</a> >= 0; <a class=\"id\" href=\"#ct\">ct</a>--) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#vif_table\">vif_table</a>[<a class=\"id\" href=\"#ct\">ct</a>].<a class=\"id\" href=\"#dev\">dev</a> == <a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ct\">ct</a>;", 
"}", 
"", 
"<span class=\"comment\">/* \"local\" means that we should preserve one skb (for local delivery) */</span>", 
"", 
"static int <a class=\"id\" href=\"#ip_mr_forward\">ip_mr_forward</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#mfc_cache\">mfc_cache</a> *<a class=\"id\" href=\"#cache\">cache</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> int <a class=\"id\" href=\"#local\">local</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#psend\">psend</a> = -1;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#vif\">vif</a>, <a class=\"id\" href=\"#ct\">ct</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vif\">vif</a> = <a class=\"id\" href=\"#cache\">cache</a>-><a class=\"id\" href=\"#mfc_parent\">mfc_parent</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cache\">cache</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#res\">res</a>.<a class=\"id\" href=\"#pkt\">pkt</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cache\">cache</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#res\">res</a>.<a class=\"id\" href=\"#bytes\">bytes</a> += <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Wrong interface: drop packet and (maybe) send PIM assert.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#vif_table\">vif_table</a>[<a class=\"id\" href=\"#vif\">vif</a>].<a class=\"id\" href=\"#dev\">dev</a> != <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#true_vifi\">true_vifi</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_rtable\">skb_rtable</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#fl\">fl</a>.<a class=\"id\" href=\"#iif\">iif</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* It is our own packet, looped back.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   Very complicated situation...</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   The best workaround until routing daemons will be</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   fixed is not to redistribute packet, if it was</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   send through wrong interface. It means, that</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   multicast applications WILL NOT work for</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (S,G), which have default multicast route pointing</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   to wrong oif. In any case, it is not a good</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   idea to use multicasting applications on router.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#dont_forward\">dont_forward</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cache\">cache</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#res\">res</a>.<a class=\"id\" href=\"#wrong_if\">wrong_if</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#true_vifi\">true_vifi</a> = <a class=\"id\" href=\"#ipmr_find_vif\">ipmr_find_vif</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#true_vifi\">true_vifi</a> >= 0 && <a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mroute_do_assert\">mroute_do_assert</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <span class=\"comment\">/* pimsm uses asserts, when switching from RPT to SPT,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>       so that we cannot check that packet arrived on an oif.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>       It is bad, but otherwise we would need to move pretty</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>       large chunk of pimd to kernel. Ough... --ANK</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>     */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mroute_do_pim\">mroute_do_pim</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#cache\">cache</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#res\">res</a>.<a class=\"id\" href=\"#ttls\">ttls</a>[<a class=\"id\" href=\"#true_vifi\">true_vifi</a>] &lt; 255) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#time_after\">time_after</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#cache\">cache</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#res\">res</a>.<a class=\"id\" href=\"#last_assert\">last_assert</a> + <a class=\"id\" href=\"#MFC_ASSERT_THRESH\">MFC_ASSERT_THRESH</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cache\">cache</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#res\">res</a>.<a class=\"id\" href=\"#last_assert\">last_assert</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipmr_cache_report\">ipmr_cache_report</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#true_vifi\">true_vifi</a>, <a class=\"id\" href=\"#IGMPMSG_WRONGVIF\">IGMPMSG_WRONGVIF</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#dont_forward\">dont_forward</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#vif_table\">vif_table</a>[<a class=\"id\" href=\"#vif\">vif</a>].<a class=\"id\" href=\"#pkt_in\">pkt_in</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#vif_table\">vif_table</a>[<a class=\"id\" href=\"#vif\">vif</a>].<a class=\"id\" href=\"#bytes_in\">bytes_in</a> += <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Forward the frame</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#ct\">ct</a> = <a class=\"id\" href=\"#cache\">cache</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#res\">res</a>.<a class=\"id\" href=\"#maxvif\">maxvif</a>-1; <a class=\"id\" href=\"#ct\">ct</a> >= <a class=\"id\" href=\"#cache\">cache</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#res\">res</a>.<a class=\"id\" href=\"#minvif\">minvif</a>; <a class=\"id\" href=\"#ct\">ct</a>--) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#ttl\">ttl</a> &gt; <a class=\"id\" href=\"#cache\">cache</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#res\">res</a>.<a class=\"id\" href=\"#ttls\">ttls</a>[<a class=\"id\" href=\"#ct\">ct</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#psend\">psend</a> != -1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb2\">skb2</a> = <a class=\"id\" href=\"#skb_clone\">skb_clone</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb2\">skb2</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipmr_queue_xmit\">ipmr_queue_xmit</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#skb2\">skb2</a>, <a class=\"id\" href=\"#cache\">cache</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psend\">psend</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#psend\">psend</a> = <a class=\"id\" href=\"#ct\">ct</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#psend\">psend</a> != -1) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#local\">local</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb2\">skb2</a> = <a class=\"id\" href=\"#skb_clone\">skb_clone</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb2\">skb2</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipmr_queue_xmit\">ipmr_queue_xmit</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#skb2\">skb2</a>, <a class=\"id\" href=\"#cache\">cache</a>, <a class=\"id\" href=\"#psend\">psend</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipmr_queue_xmit\">ipmr_queue_xmit</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#cache\">cache</a>, <a class=\"id\" href=\"#psend\">psend</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#dont_forward\">dont_forward</a>:", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#local\">local</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Multicast packets for forwarding arrive here</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#ip_mr_input\">ip_mr_input</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mfc_cache\">mfc_cache</a> *<a class=\"id\" href=\"#cache\">cache</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#local\">local</a> = <a class=\"id\" href=\"#skb_rtable\">skb_rtable</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#rt_flags\">rt_flags</a> &amp; <a class=\"id\" href=\"#RTCF_LOCAL\">RTCF_LOCAL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Packet is looped back after forward, it should not be</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   forwarded second time, but still can be delivered locally.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IPCB\">IPCB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#flags\">flags</a>&amp;<a class=\"id\" href=\"#IPSKB_FORWARDED\">IPSKB_FORWARDED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#dont_forward\">dont_forward</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ipmr_fib_lookup\">ipmr_fib_lookup</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#skb_rtable\">skb_rtable</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#fl\">fl</a>, &amp;<a class=\"id\" href=\"#mrt\">mrt</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#local\">local</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>    if (<a class=\"id\" href=\"#IPCB\">IPCB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#opt\">opt</a>.<a class=\"id\" href=\"#router_alert\">router_alert</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    if (<a class=\"id\" href=\"#ip_call_ra_chain\">ip_call_ra_chain</a>(<a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>    } else if (<a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#protocol\">protocol</a> == <a class=\"id\" href=\"#IPPROTO_IGMP\">IPPROTO_IGMP</a>){", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <span class=\"comment\">/* IGMPv1 (and broken IGMPv2 implementations sort of</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       Cisco IOS &lt;= 11.2(8)) do not put router alert</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       option to IGMP packets destined to routable</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       groups. It is very bad, because it means</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       that we can forward NO IGMP messages.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    if (<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mroute_sk\">mroute_sk</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#nf_reset\">nf_reset</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#raw_rcv\">raw_rcv</a>(<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mroute_sk\">mroute_sk</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    }", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>    }", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cache\">cache</a> = <a class=\"id\" href=\"#ipmr_cache_find\">ipmr_cache_find</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#daddr\">daddr</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>No usable cache entry</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cache\">cache</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#vif\">vif</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#local\">local</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb2\">skb2</a> = <a class=\"id\" href=\"#skb_clone\">skb_clone</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip_local_deliver\">ip_local_deliver</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb2\">skb2</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#skb2\">skb2</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vif\">vif</a> = <a class=\"id\" href=\"#ipmr_find_vif\">ipmr_find_vif</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#vif\">vif</a> >= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#err2\">err2</a> = <a class=\"id\" href=\"#ipmr_cache_unresolved\">ipmr_cache_unresolved</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#vif\">vif</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err2\">err2</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip_mr_forward\">ip_mr_forward</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#cache\">cache</a>, <a class=\"id\" href=\"#local\">local</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#local\">local</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ip_local_deliver\">ip_local_deliver</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#dont_forward\">dont_forward</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#local\">local</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ip_local_deliver\">ip_local_deliver</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_PIMSM\">CONFIG_IP_PIMSM</a>", 
"static int <a class=\"id\" href=\"#__pim_rcv\">__pim_rcv</a>(struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     unsigned int <a class=\"id\" href=\"#pimlen\">pimlen</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#reg_dev\">reg_dev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iphdr\">iphdr</a> *<a class=\"id\" href=\"#encap\">encap</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#encap\">encap</a> = (struct <a class=\"id\" href=\"#iphdr\">iphdr</a> *)(<a class=\"id\" href=\"#skb_transport_header\">skb_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>) + <a class=\"id\" href=\"#pimlen\">pimlen</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   Check that:</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   a. packet is really destinted to a multicast group</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   b. packet is not a NULL-REGISTER</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   c. packet is not truncated</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ipv4_is_multicast\">ipv4_is_multicast</a>(<a class=\"id\" href=\"#encap\">encap</a>-><a class=\"id\" href=\"#daddr\">daddr</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#encap\">encap</a>-><a class=\"id\" href=\"#tot_len\">tot_len</a> == 0 ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#encap\">encap</a>-><a class=\"id\" href=\"#tot_len\">tot_len</a>) + <a class=\"id\" href=\"#pimlen\">pimlen</a> &gt; <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mroute_reg_vif_num\">mroute_reg_vif_num</a> >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reg_dev\">reg_dev</a> = <a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#vif_table\">vif_table</a>[<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mroute_reg_vif_num\">mroute_reg_vif_num</a>].<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#reg_dev\">reg_dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_hold\">dev_hold</a>(<a class=\"id\" href=\"#reg_dev\">reg_dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#reg_dev\">reg_dev</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#mac_header\">mac_header</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#network_header\">network_header</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_pull\">skb_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, (<a class=\"id\" href=\"#u8\">u8</a>*)<a class=\"id\" href=\"#encap\">encap</a> - <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_reset_network_header\">skb_reset_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#protocol\">protocol</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ETH_P_IP\">ETH_P_IP</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#pkt_type\">pkt_type</a> = <a class=\"id\" href=\"#PACKET_HOST\">PACKET_HOST</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_tunnel_rx\">skb_tunnel_rx</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#reg_dev\">reg_dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netif_rx\">netif_rx</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_put\">dev_put</a>(<a class=\"id\" href=\"#reg_dev\">reg_dev</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_PIMSM_V1\">CONFIG_IP_PIMSM_V1</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Handle IGMP messages of PIMv1</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#pim_rcv_v1\">pim_rcv_v1</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> * <a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#igmphdr\">igmphdr</a> *<a class=\"id\" href=\"#pim\">pim</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pskb_may_pull\">pskb_may_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(*<a class=\"id\" href=\"#pim\">pim</a>) + sizeof(struct <a class=\"id\" href=\"#iphdr\">iphdr</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pim\">pim</a> = <a class=\"id\" href=\"#igmp_hdr\">igmp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ipmr_fib_lookup\">ipmr_fib_lookup</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#skb_rtable\">skb_rtable</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#fl\">fl</a>, &amp;<a class=\"id\" href=\"#mrt\">mrt</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mroute_do_pim\">mroute_do_pim</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#pim\">pim</a>-><a class=\"id\" href=\"#group\">group</a> != <a class=\"id\" href=\"#PIM_V1_VERSION\">PIM_V1_VERSION</a> || <a class=\"id\" href=\"#pim\">pim</a>-><a class=\"id\" href=\"#code\">code</a> != <a class=\"id\" href=\"#PIM_V1_REGISTER\">PIM_V1_REGISTER</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#__pim_rcv\">__pim_rcv</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#skb\">skb</a>, sizeof(*<a class=\"id\" href=\"#pim\">pim</a>))) {", 
"<a class=\"id\" href=\"#drop\">drop</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_PIMSM_V2\">CONFIG_IP_PIMSM_V2</a>", 
"static int <a class=\"id\" href=\"#pim_rcv\">pim_rcv</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> * <a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pimreghdr\">pimreghdr</a> *<a class=\"id\" href=\"#pim\">pim</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pskb_may_pull\">pskb_may_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(*<a class=\"id\" href=\"#pim\">pim</a>) + sizeof(struct <a class=\"id\" href=\"#iphdr\">iphdr</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pim\">pim</a> = (struct <a class=\"id\" href=\"#pimreghdr\">pimreghdr</a> *)<a class=\"id\" href=\"#skb_transport_header\">skb_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pim\">pim</a>-><a class=\"id\" href=\"#type\">type</a> != ((<a class=\"id\" href=\"#PIM_VERSION\">PIM_VERSION</a><<4)|(<a class=\"id\" href=\"#PIM_REGISTER\">PIM_REGISTER</a>)) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#pim\">pim</a>-><a class=\"id\" href=\"#flags\">flags</a>&amp;<a class=\"id\" href=\"#PIM_NULL_REGISTER\">PIM_NULL_REGISTER</a>) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#ip_compute_csum\">ip_compute_csum</a>((void *)<a class=\"id\" href=\"#pim\">pim</a>, sizeof(*<a class=\"id\" href=\"#pim\">pim</a>)) != 0 &&", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#csum_fold\">csum_fold</a>(<a class=\"id\" href=\"#skb_checksum\">skb_checksum</a>(<a class=\"id\" href=\"#skb\">skb</a>, 0, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>, 0))))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ipmr_fib_lookup\">ipmr_fib_lookup</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#skb_rtable\">skb_rtable</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#fl\">fl</a>, &amp;<a class=\"id\" href=\"#mrt\">mrt</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#__pim_rcv\">__pim_rcv</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#skb\">skb</a>, sizeof(*<a class=\"id\" href=\"#pim\">pim</a>))) {", 
"<a class=\"id\" href=\"#drop\">drop</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static int <a class=\"id\" href=\"#__ipmr_fill_mroute\">__ipmr_fill_mroute</a>(struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#mfc_cache\">mfc_cache</a> *<a class=\"id\" href=\"#c\">c</a>, struct <a class=\"id\" href=\"#rtmsg\">rtmsg</a> *<a class=\"id\" href=\"#rtm\">rtm</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ct\">ct</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtnexthop\">rtnexthop</a> *<a class=\"id\" href=\"#nhp\">nhp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#b\">b</a> = <a class=\"id\" href=\"#skb_tail_pointer\">skb_tail_pointer</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtattr\">rtattr</a> *<a class=\"id\" href=\"#mp_head\">mp_head</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If cache is unresolved, don't try to parse IIF and OIF */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_parent\">mfc_parent</a> >= <a class=\"id\" href=\"#MAXVIFS\">MAXVIFS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#VIF_EXISTS\">VIF_EXISTS</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_parent\">mfc_parent</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#RTA_PUT\">RTA_PUT</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#RTA_IIF\">RTA_IIF</a>, 4, &amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#vif_table\">vif_table</a>[<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_parent\">mfc_parent</a>].<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mp_head\">mp_head</a> = (struct <a class=\"id\" href=\"#rtattr\">rtattr</a> *)<a class=\"id\" href=\"#skb_put\">skb_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#RTA_LENGTH\">RTA_LENGTH</a>(0));", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#ct\">ct</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#res\">res</a>.<a class=\"id\" href=\"#minvif\">minvif</a>; <a class=\"id\" href=\"#ct\">ct</a> &lt; <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#res\">res</a>.<a class=\"id\" href=\"#maxvif\">maxvif</a>; <a class=\"id\" href=\"#ct\">ct</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#VIF_EXISTS\">VIF_EXISTS</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#ct\">ct</a>) && <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#res\">res</a>.<a class=\"id\" href=\"#ttls\">ttls</a>[<a class=\"id\" href=\"#ct\">ct</a>] &lt; 255) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_tailroom\">skb_tailroom</a>(<a class=\"id\" href=\"#skb\">skb</a>) &lt; <a class=\"id\" href=\"#RTA_ALIGN\">RTA_ALIGN</a>(<a class=\"id\" href=\"#RTA_ALIGN\">RTA_ALIGN</a>(sizeof(*<a class=\"id\" href=\"#nhp\">nhp</a>)) + 4))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#rtattr_failure\">rtattr_failure</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nhp\">nhp</a> = (struct <a class=\"id\" href=\"#rtnexthop\">rtnexthop</a> *)<a class=\"id\" href=\"#skb_put\">skb_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#RTA_ALIGN\">RTA_ALIGN</a>(sizeof(*<a class=\"id\" href=\"#nhp\">nhp</a>)));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nhp\">nhp</a>-><a class=\"id\" href=\"#rtnh_flags\">rtnh_flags</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nhp\">nhp</a>-><a class=\"id\" href=\"#rtnh_hops\">rtnh_hops</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#res\">res</a>.<a class=\"id\" href=\"#ttls\">ttls</a>[<a class=\"id\" href=\"#ct\">ct</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nhp\">nhp</a>-><a class=\"id\" href=\"#rtnh_ifindex\">rtnh_ifindex</a> = <a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#vif_table\">vif_table</a>[<a class=\"id\" href=\"#ct\">ct</a>].<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nhp\">nhp</a>-><a class=\"id\" href=\"#rtnh_len\">rtnh_len</a> = sizeof(*<a class=\"id\" href=\"#nhp\">nhp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mp_head\">mp_head</a>-><a class=\"id\" href=\"#rta_type\">rta_type</a> = <a class=\"id\" href=\"#RTA_MULTIPATH\">RTA_MULTIPATH</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mp_head\">mp_head</a>-><a class=\"id\" href=\"#rta_len\">rta_len</a> = <a class=\"id\" href=\"#skb_tail_pointer\">skb_tail_pointer</a>(<a class=\"id\" href=\"#skb\">skb</a>) - (<a class=\"id\" href=\"#u8\">u8</a> *)<a class=\"id\" href=\"#mp_head\">mp_head</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtm\">rtm</a>-><a class=\"id\" href=\"#rtm_type\">rtm_type</a> = <a class=\"id\" href=\"#RTN_MULTICAST\">RTN_MULTICAST</a>;", 
"<span class=\"ts\"/>return 1;", 
"", 
"<a class=\"id\" href=\"#rtattr_failure\">rtattr_failure</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlmsg_trim\">nlmsg_trim</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#b\">b</a>);", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EMSGSIZE\">EMSGSIZE</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#ipmr_get_route\">ipmr_get_route</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#rtmsg\">rtmsg</a> *<a class=\"id\" href=\"#rtm\">rtm</a>, int <a class=\"id\" href=\"#nowait\">nowait</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mfc_cache\">mfc_cache</a> *<a class=\"id\" href=\"#cache\">cache</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtable\">rtable</a> *<a class=\"id\" href=\"#rt\">rt</a> = <a class=\"id\" href=\"#skb_rtable\">skb_rtable</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mrt\">mrt</a> = <a class=\"id\" href=\"#ipmr_get_table\">ipmr_get_table</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#RT_TABLE_DEFAULT\">RT_TABLE_DEFAULT</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mrt\">mrt</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cache\">cache</a> = <a class=\"id\" href=\"#ipmr_cache_find\">ipmr_cache_find</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt_src\">rt_src</a>, <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt_dst\">rt_dst</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cache\">cache</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb2\">skb2</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#iphdr\">iphdr</a> *<a class=\"id\" href=\"#iph\">iph</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#vif\">vif</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nowait\">nowait</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a> == <a class=\"id\" href=\"#NULL\">NULL</a> || (<a class=\"id\" href=\"#vif\">vif</a> = <a class=\"id\" href=\"#ipmr_find_vif\">ipmr_find_vif</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#dev\">dev</a>)) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb2\">skb2</a> = <a class=\"id\" href=\"#skb_clone\">skb_clone</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb2\">skb2</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_push\">skb_push</a>(<a class=\"id\" href=\"#skb2\">skb2</a>, sizeof(struct <a class=\"id\" href=\"#iphdr\">iphdr</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_reset_network_header\">skb_reset_network_header</a>(<a class=\"id\" href=\"#skb2\">skb2</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a> = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb2\">skb2</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#ihl\">ihl</a> = sizeof(struct <a class=\"id\" href=\"#iphdr\">iphdr</a>) >> 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#saddr\">saddr</a> = <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt_src\">rt_src</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#daddr\">daddr</a> = <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt_dst\">rt_dst</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#version\">version</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ipmr_cache_unresolved\">ipmr_cache_unresolved</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#vif\">vif</a>, <a class=\"id\" href=\"#skb2\">skb2</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#nowait\">nowait</a> && (<a class=\"id\" href=\"#rtm\">rtm</a>-><a class=\"id\" href=\"#rtm_flags\">rtm_flags</a>&amp;<a class=\"id\" href=\"#RTM_F_NOTIFY\">RTM_F_NOTIFY</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cache\">cache</a>-><a class=\"id\" href=\"#mfc_flags\">mfc_flags</a> |= <a class=\"id\" href=\"#MFC_NOTIFY\">MFC_NOTIFY</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#__ipmr_fill_mroute\">__ipmr_fill_mroute</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#cache\">cache</a>, <a class=\"id\" href=\"#rtm\">rtm</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ipmr_fill_mroute\">ipmr_fill_mroute</a>(struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#seq\">seq</a>, struct <a class=\"id\" href=\"#mfc_cache\">mfc_cache</a> *<a class=\"id\" href=\"#c\">c</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *<a class=\"id\" href=\"#nlh\">nlh</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtmsg\">rtmsg</a> *<a class=\"id\" href=\"#rtm\">rtm</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlh\">nlh</a> = <a class=\"id\" href=\"#nlmsg_put\">nlmsg_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#RTM_NEWROUTE\">RTM_NEWROUTE</a>, sizeof(*<a class=\"id\" href=\"#rtm\">rtm</a>), <a class=\"id\" href=\"#NLM_F_MULTI\">NLM_F_MULTI</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nlh\">nlh</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EMSGSIZE\">EMSGSIZE</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtm\">rtm</a> = <a class=\"id\" href=\"#nlmsg_data\">nlmsg_data</a>(<a class=\"id\" href=\"#nlh\">nlh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtm\">rtm</a>-><a class=\"id\" href=\"#rtm_family\">rtm_family</a>   = <a class=\"id\" href=\"#RTNL_FAMILY_IPMR\">RTNL_FAMILY_IPMR</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtm\">rtm</a>-><a class=\"id\" href=\"#rtm_dst_len\">rtm_dst_len</a>  = 32;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtm\">rtm</a>-><a class=\"id\" href=\"#rtm_src_len\">rtm_src_len</a>  = 32;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtm\">rtm</a>-><a class=\"id\" href=\"#rtm_tos\">rtm_tos</a>      = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtm\">rtm</a>-><a class=\"id\" href=\"#rtm_table\">rtm_table</a>    = <a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NLA_PUT_U32\">NLA_PUT_U32</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#RTA_TABLE\">RTA_TABLE</a>, <a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#id\">id</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtm\">rtm</a>-><a class=\"id\" href=\"#rtm_type\">rtm_type</a>     = <a class=\"id\" href=\"#RTN_MULTICAST\">RTN_MULTICAST</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtm\">rtm</a>-><a class=\"id\" href=\"#rtm_scope\">rtm_scope</a>    = <a class=\"id\" href=\"#RT_SCOPE_UNIVERSE\">RT_SCOPE_UNIVERSE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtm\">rtm</a>-><a class=\"id\" href=\"#rtm_protocol\">rtm_protocol</a> = <a class=\"id\" href=\"#RTPROT_UNSPEC\">RTPROT_UNSPEC</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtm\">rtm</a>-><a class=\"id\" href=\"#rtm_flags\">rtm_flags</a>    = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NLA_PUT_BE32\">NLA_PUT_BE32</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#RTA_SRC\">RTA_SRC</a>, <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_origin\">mfc_origin</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NLA_PUT_BE32\">NLA_PUT_BE32</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#RTA_DST\">RTA_DST</a>, <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#mfc_mcastgrp\">mfc_mcastgrp</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#__ipmr_fill_mroute\">__ipmr_fill_mroute</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#rtm\">rtm</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#nla_put_failure\">nla_put_failure</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nlmsg_end\">nlmsg_end</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#nlh\">nlh</a>);", 
"", 
"<a class=\"id\" href=\"#nla_put_failure\">nla_put_failure</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlmsg_cancel\">nlmsg_cancel</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#nlh\">nlh</a>);", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EMSGSIZE\">EMSGSIZE</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ipmr_rtm_dumproute\">ipmr_rtm_dumproute</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#netlink_callback\">netlink_callback</a> *<a class=\"id\" href=\"#cb\">cb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mfc_cache\">mfc_cache</a> *<a class=\"id\" href=\"#mfc\">mfc</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#t\">t</a> = 0, <a class=\"id\" href=\"#s_t\">s_t</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#h\">h</a> = 0, <a class=\"id\" href=\"#s_h\">s_h</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#e\">e</a> = 0, <a class=\"id\" href=\"#s_e\">s_e</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s_t\">s_t</a> = <a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[0];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s_h\">s_h</a> = <a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[1];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s_e\">s_e</a> = <a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[2];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipmr_for_each_table\">ipmr_for_each_table</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#net\">net</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#t\">t</a> &lt; <a class=\"id\" href=\"#s_t\">s_t</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#next_table\">next_table</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#t\">t</a> &gt; <a class=\"id\" href=\"#s_t\">s_t</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s_h\">s_h</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#h\">h</a> = <a class=\"id\" href=\"#s_h\">s_h</a>; <a class=\"id\" href=\"#h\">h</a> &lt; <a class=\"id\" href=\"#MFC_LINES\">MFC_LINES</a>; <a class=\"id\" href=\"#h\">h</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#mfc\">mfc</a>, &amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mfc_cache_array\">mfc_cache_array</a>[<a class=\"id\" href=\"#h\">h</a>], <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#e\">e</a> &lt; <a class=\"id\" href=\"#s_e\">s_e</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#next_entry\">next_entry</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipmr_fill_mroute\">ipmr_fill_mroute</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#NETLINK_CB\">NETLINK_CB</a>(<a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#skb\">skb</a>).<a class=\"id\" href=\"#pid\">pid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#nlh\">nlh</a>-><a class=\"id\" href=\"#nlmsg_seq\">nlmsg_seq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#mfc\">mfc</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<a class=\"id\" href=\"#next_entry\">next_entry</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#s_e\">s_e</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s_h\">s_h</a> = 0;", 
"<a class=\"id\" href=\"#next_table\">next_table</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>++;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#done\">done</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[2] = <a class=\"id\" href=\"#e\">e</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[1] = <a class=\"id\" href=\"#h\">h</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[0] = <a class=\"id\" href=\"#t\">t</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROC_FS\">CONFIG_PROC_FS</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>The /proc interfaces to multicast routing /proc/ip_mr_cache /proc/ip_mr_vif</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#ipmr_vif_iter\">ipmr_vif_iter</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#seq_net_private\">seq_net_private</a> <a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ct\">ct</a>;", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#vif_device\">vif_device</a> *<a class=\"id\" href=\"#ipmr_vif_seq_idx\">ipmr_vif_seq_idx</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#ipmr_vif_iter\">ipmr_vif_iter</a> *<a class=\"id\" href=\"#iter\">iter</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a> = <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#mrt\">mrt</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#ct\">ct</a> = 0; <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#ct\">ct</a> &lt; <a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#maxvif\">maxvif</a>; ++<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#ct\">ct</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#VIF_EXISTS\">VIF_EXISTS</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#ct\">ct</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pos\">pos</a>-- == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#vif_table\">vif_table</a>[<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#ct\">ct</a>];", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#ipmr_vif_seq_start\">ipmr_vif_seq_start</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__acquires\">__acquires</a>(<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipmr_vif_iter\">ipmr_vif_iter</a> *<a class=\"id\" href=\"#iter\">iter</a> = <a class=\"id\" href=\"#seq\">seq</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#seq_file_net\">seq_file_net</a>(<a class=\"id\" href=\"#seq\">seq</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mrt\">mrt</a> = <a class=\"id\" href=\"#ipmr_get_table\">ipmr_get_table</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#RT_TABLE_DEFAULT\">RT_TABLE_DEFAULT</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mrt\">mrt</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOENT\">ENOENT</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#mrt\">mrt</a> = <a class=\"id\" href=\"#mrt\">mrt</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"<span class=\"ts\"/>return *<a class=\"id\" href=\"#pos\">pos</a> ? <a class=\"id\" href=\"#ipmr_vif_seq_idx\">ipmr_vif_seq_idx</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#seq\">seq</a>-><a class=\"id\" href=\"#private\">private</a>, *<a class=\"id\" href=\"#pos\">pos</a> - 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>: <a class=\"id\" href=\"#SEQ_START_TOKEN\">SEQ_START_TOKEN</a>;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#ipmr_vif_seq_next\">ipmr_vif_seq_next</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipmr_vif_iter\">ipmr_vif_iter</a> *<a class=\"id\" href=\"#iter\">iter</a> = <a class=\"id\" href=\"#seq\">seq</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#seq_file_net\">seq_file_net</a>(<a class=\"id\" href=\"#seq\">seq</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a> = <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#mrt\">mrt</a>;", 
"", 
"<span class=\"ts\"/>++*<a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#v\">v</a> == <a class=\"id\" href=\"#SEQ_START_TOKEN\">SEQ_START_TOKEN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ipmr_vif_seq_idx\">ipmr_vif_seq_idx</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#iter\">iter</a>, 0);", 
"", 
"<span class=\"ts\"/>while (++<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#ct\">ct</a> &lt; <a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#maxvif\">maxvif</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#VIF_EXISTS\">VIF_EXISTS</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#ct\">ct</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#vif_table\">vif_table</a>[<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#ct\">ct</a>];", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ipmr_vif_seq_stop\">ipmr_vif_seq_stop</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__releases\">__releases</a>(<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ipmr_vif_seq_show\">ipmr_vif_seq_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipmr_vif_iter\">ipmr_vif_iter</a> *<a class=\"id\" href=\"#iter\">iter</a> = <a class=\"id\" href=\"#seq\">seq</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a> = <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#mrt\">mrt</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#v\">v</a> == <a class=\"id\" href=\"#SEQ_START_TOKEN\">SEQ_START_TOKEN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"Interface      BytesIn  PktsIn  BytesOut PktsOut Flags Local    Remote\\n\");", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#vif_device\">vif_device</a> *<a class=\"id\" href=\"#vif\">vif</a> = <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>const char *<a class=\"id\" href=\"#name\">name</a> =  <a class=\"id\" href=\"#vif\">vif</a>-><a class=\"id\" href=\"#dev\">dev</a> ? <a class=\"id\" href=\"#vif\">vif</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a> : \"none\";", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"%2Zd %-10s %8ld %7ld  %8ld %7ld %05X %08X %08X\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#vif\">vif</a> - <a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#vif_table\">vif_table</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#vif\">vif</a>-><a class=\"id\" href=\"#bytes_in\">bytes_in</a>, <a class=\"id\" href=\"#vif\">vif</a>-><a class=\"id\" href=\"#pkt_in\">pkt_in</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#vif\">vif</a>-><a class=\"id\" href=\"#bytes_out\">bytes_out</a>, <a class=\"id\" href=\"#vif\">vif</a>-><a class=\"id\" href=\"#pkt_out\">pkt_out</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#vif\">vif</a>-><a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#vif\">vif</a>-><a class=\"id\" href=\"#local\">local</a>, <a class=\"id\" href=\"#vif\">vif</a>-><a class=\"id\" href=\"#remote\">remote</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> <a class=\"id\" href=\"#ipmr_vif_seq_ops\">ipmr_vif_seq_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#ipmr_vif_seq_start\">ipmr_vif_seq_start</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#next\">next</a>  = <a class=\"id\" href=\"#ipmr_vif_seq_next\">ipmr_vif_seq_next</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a>  = <a class=\"id\" href=\"#ipmr_vif_seq_stop\">ipmr_vif_seq_stop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a>  = <a class=\"id\" href=\"#ipmr_vif_seq_show\">ipmr_vif_seq_show</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#ipmr_vif_open\">ipmr_vif_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#seq_open_net\">seq_open_net</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#ipmr_vif_seq_ops\">ipmr_vif_seq_ops</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    sizeof(struct <a class=\"id\" href=\"#ipmr_vif_iter\">ipmr_vif_iter</a>));", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#ipmr_vif_fops\">ipmr_vif_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/> = <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a>    = <a class=\"id\" href=\"#ipmr_vif_open\">ipmr_vif_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a>    = <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a>  = <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a> = <a class=\"id\" href=\"#seq_release_net\">seq_release_net</a>,", 
"};", 
"", 
"struct <a class=\"id\" href=\"#ipmr_mfc_iter\">ipmr_mfc_iter</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#seq_net_private\">seq_net_private</a> <a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#cache\">cache</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ct\">ct</a>;", 
"};", 
"", 
"", 
"static struct <a class=\"id\" href=\"#mfc_cache\">mfc_cache</a> *<a class=\"id\" href=\"#ipmr_mfc_seq_idx\">ipmr_mfc_seq_idx</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#ipmr_mfc_iter\">ipmr_mfc_iter</a> *<a class=\"id\" href=\"#it\">it</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a> = <a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#mrt\">mrt</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mfc_cache\">mfc_cache</a> *<a class=\"id\" href=\"#mfc\">mfc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#ct\">ct</a> = 0; <a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#ct\">ct</a> &lt; <a class=\"id\" href=\"#MFC_LINES\">MFC_LINES</a>; <a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#ct\">ct</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#cache\">cache</a> = &amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mfc_cache_array\">mfc_cache_array</a>[<a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#ct\">ct</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#mfc\">mfc</a>, <a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#cache\">cache</a>, <a class=\"id\" href=\"#list\">list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pos\">pos</a>-- == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#mfc\">mfc</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#mfc_unres_lock\">mfc_unres_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#cache\">cache</a> = &amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mfc_unres_queue\">mfc_unres_queue</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#mfc\">mfc</a>, <a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#cache\">cache</a>, <a class=\"id\" href=\"#list\">list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pos\">pos</a>-- == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#mfc\">mfc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#mfc_unres_lock\">mfc_unres_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#cache\">cache</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"", 
"static void *<a class=\"id\" href=\"#ipmr_mfc_seq_start\">ipmr_mfc_seq_start</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipmr_mfc_iter\">ipmr_mfc_iter</a> *<a class=\"id\" href=\"#it\">it</a> = <a class=\"id\" href=\"#seq\">seq</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#seq_file_net\">seq_file_net</a>(<a class=\"id\" href=\"#seq\">seq</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mrt\">mrt</a> = <a class=\"id\" href=\"#ipmr_get_table\">ipmr_get_table</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#RT_TABLE_DEFAULT\">RT_TABLE_DEFAULT</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mrt\">mrt</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOENT\">ENOENT</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#mrt\">mrt</a> = <a class=\"id\" href=\"#mrt\">mrt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#cache\">cache</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#ct\">ct</a> = 0;", 
"<span class=\"ts\"/>return *<a class=\"id\" href=\"#pos\">pos</a> ? <a class=\"id\" href=\"#ipmr_mfc_seq_idx\">ipmr_mfc_seq_idx</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#seq\">seq</a>-><a class=\"id\" href=\"#private\">private</a>, *<a class=\"id\" href=\"#pos\">pos</a> - 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>: <a class=\"id\" href=\"#SEQ_START_TOKEN\">SEQ_START_TOKEN</a>;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#ipmr_mfc_seq_next\">ipmr_mfc_seq_next</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mfc_cache\">mfc_cache</a> *<a class=\"id\" href=\"#mfc\">mfc</a> = <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipmr_mfc_iter\">ipmr_mfc_iter</a> *<a class=\"id\" href=\"#it\">it</a> = <a class=\"id\" href=\"#seq\">seq</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#seq_file_net\">seq_file_net</a>(<a class=\"id\" href=\"#seq\">seq</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a> = <a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#mrt\">mrt</a>;", 
"", 
"<span class=\"ts\"/>++*<a class=\"id\" href=\"#pos\">pos</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#v\">v</a> == <a class=\"id\" href=\"#SEQ_START_TOKEN\">SEQ_START_TOKEN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ipmr_mfc_seq_idx\">ipmr_mfc_seq_idx</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#seq\">seq</a>-><a class=\"id\" href=\"#private\">private</a>, 0);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mfc\">mfc</a>-><a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#next\">next</a> != <a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#cache\">cache</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#mfc\">mfc</a>-><a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#next\">next</a>, struct <a class=\"id\" href=\"#mfc_cache\">mfc_cache</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#cache\">cache</a> == &amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mfc_unres_queue\">mfc_unres_queue</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end_of_list\">end_of_list</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#cache\">cache</a> != &amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mfc_cache_array\">mfc_cache_array</a>[<a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#ct\">ct</a>]);", 
"", 
"<span class=\"ts\"/>while (++<a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#ct\">ct</a> &lt; <a class=\"id\" href=\"#MFC_LINES\">MFC_LINES</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#cache\">cache</a> = &amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mfc_cache_array\">mfc_cache_array</a>[<a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#ct\">ct</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#list_empty\">list_empty</a>(<a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#cache\">cache</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#list_first_entry\">list_first_entry</a>(<a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#cache\">cache</a>, struct <a class=\"id\" href=\"#mfc_cache\">mfc_cache</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* exhausted cache_array, show unresolved */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#cache\">cache</a> = &amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mfc_unres_queue\">mfc_unres_queue</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#ct\">ct</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#mfc_unres_lock\">mfc_unres_lock</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#list_empty\">list_empty</a>(<a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#cache\">cache</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#list_first_entry\">list_first_entry</a>(<a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#cache\">cache</a>, struct <a class=\"id\" href=\"#mfc_cache\">mfc_cache</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"", 
" <a class=\"id\" href=\"#end_of_list\">end_of_list</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#mfc_unres_lock\">mfc_unres_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#cache\">cache</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ipmr_mfc_seq_stop\">ipmr_mfc_seq_stop</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipmr_mfc_iter\">ipmr_mfc_iter</a> *<a class=\"id\" href=\"#it\">it</a> = <a class=\"id\" href=\"#seq\">seq</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a> = <a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#mrt\">mrt</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#cache\">cache</a> == &amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mfc_unres_queue\">mfc_unres_queue</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#mfc_unres_lock\">mfc_unres_lock</a>);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#cache\">cache</a> == &amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mfc_cache_array\">mfc_cache_array</a>[<a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#ct\">ct</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#mrt_lock\">mrt_lock</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ipmr_mfc_seq_show\">ipmr_mfc_seq_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#n\">n</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#v\">v</a> == <a class=\"id\" href=\"#SEQ_START_TOKEN\">SEQ_START_TOKEN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> \"Group    Origin   Iif     Pkts    Bytes    Wrong Oifs\\n\");", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#mfc_cache\">mfc_cache</a> *<a class=\"id\" href=\"#mfc\">mfc</a> = <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#ipmr_mfc_iter\">ipmr_mfc_iter</a> *<a class=\"id\" href=\"#it\">it</a> = <a class=\"id\" href=\"#seq\">seq</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#mr_table\">mr_table</a> *<a class=\"id\" href=\"#mrt\">mrt</a> = <a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#mrt\">mrt</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"%08X %08X %-3hd\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>) <a class=\"id\" href=\"#mfc\">mfc</a>-><a class=\"id\" href=\"#mfc_mcastgrp\">mfc_mcastgrp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>) <a class=\"id\" href=\"#mfc\">mfc</a>-><a class=\"id\" href=\"#mfc_origin\">mfc_origin</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#mfc\">mfc</a>-><a class=\"id\" href=\"#mfc_parent\">mfc_parent</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#cache\">cache</a> != &amp;<a class=\"id\" href=\"#mrt\">mrt</a>-><a class=\"id\" href=\"#mfc_unres_queue\">mfc_unres_queue</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \" %8lu %8lu %8lu\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#mfc\">mfc</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#res\">res</a>.<a class=\"id\" href=\"#pkt\">pkt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#mfc\">mfc</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#res\">res</a>.<a class=\"id\" href=\"#bytes\">bytes</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#mfc\">mfc</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#res\">res</a>.<a class=\"id\" href=\"#wrong_if\">wrong_if</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#mfc\">mfc</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#res\">res</a>.<a class=\"id\" href=\"#minvif\">minvif</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#n\">n</a> &lt; <a class=\"id\" href=\"#mfc\">mfc</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#res\">res</a>.<a class=\"id\" href=\"#maxvif\">maxvif</a>; <a class=\"id\" href=\"#n\">n</a>++ ) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#VIF_EXISTS\">VIF_EXISTS</a>(<a class=\"id\" href=\"#mrt\">mrt</a>, <a class=\"id\" href=\"#n\">n</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#mfc\">mfc</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#res\">res</a>.<a class=\"id\" href=\"#ttls\">ttls</a>[<a class=\"id\" href=\"#n\">n</a>] &lt; 255)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \" %2d:%-3d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#mfc\">mfc</a>-><a class=\"id\" href=\"#mfc_un\">mfc_un</a>.<a class=\"id\" href=\"#res\">res</a>.<a class=\"id\" href=\"#ttls\">ttls</a>[<a class=\"id\" href=\"#n\">n</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* unresolved mfc_caches don't contain</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * pkt, bytes and wrong_if values</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \" %8lu %8lu %8lu\", 0ul, 0ul, 0ul);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_putc\">seq_putc</a>(<a class=\"id\" href=\"#seq\">seq</a>, '\\n');", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> <a class=\"id\" href=\"#ipmr_mfc_seq_ops\">ipmr_mfc_seq_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#ipmr_mfc_seq_start\">ipmr_mfc_seq_start</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#next\">next</a>  = <a class=\"id\" href=\"#ipmr_mfc_seq_next\">ipmr_mfc_seq_next</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a>  = <a class=\"id\" href=\"#ipmr_mfc_seq_stop\">ipmr_mfc_seq_stop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a>  = <a class=\"id\" href=\"#ipmr_mfc_seq_show\">ipmr_mfc_seq_show</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#ipmr_mfc_open\">ipmr_mfc_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#seq_open_net\">seq_open_net</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#ipmr_mfc_seq_ops\">ipmr_mfc_seq_ops</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    sizeof(struct <a class=\"id\" href=\"#ipmr_mfc_iter\">ipmr_mfc_iter</a>));", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#ipmr_mfc_fops\">ipmr_mfc_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/> = <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a>    = <a class=\"id\" href=\"#ipmr_mfc_open\">ipmr_mfc_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a>    = <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a>  = <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a> = <a class=\"id\" href=\"#seq_release_net\">seq_release_net</a>,", 
"};", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_PIMSM_V2\">CONFIG_IP_PIMSM_V2</a>", 
"static const struct <a class=\"id\" href=\"#net_protocol\">net_protocol</a> <a class=\"id\" href=\"#pim_protocol\">pim_protocol</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#handler\">handler</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#pim_rcv\">pim_rcv</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#netns_ok\">netns_ok</a><span class=\"ts\"/>=<span class=\"ts\"/>1,", 
"};", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Setup for IP multicast routing</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__net_init\">__net_init</a> <a class=\"id\" href=\"#ipmr_net_init\">ipmr_net_init</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ipmr_rules_init\">ipmr_rules_init</a>(<a class=\"id\" href=\"#net\">net</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROC_FS\">CONFIG_PROC_FS</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#proc_net_fops_create\">proc_net_fops_create</a>(<a class=\"id\" href=\"#net\">net</a>, \"ip_mr_vif\", 0, &amp;<a class=\"id\" href=\"#ipmr_vif_fops\">ipmr_vif_fops</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#proc_vif_fail\">proc_vif_fail</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#proc_net_fops_create\">proc_net_fops_create</a>(<a class=\"id\" href=\"#net\">net</a>, \"ip_mr_cache\", 0, &amp;<a class=\"id\" href=\"#ipmr_mfc_fops\">ipmr_mfc_fops</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#proc_cache_fail\">proc_cache_fail</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return 0;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROC_FS\">CONFIG_PROC_FS</a>", 
"<a class=\"id\" href=\"#proc_cache_fail\">proc_cache_fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proc_net_remove\">proc_net_remove</a>(<a class=\"id\" href=\"#net\">net</a>, \"ip_mr_vif\");", 
"<a class=\"id\" href=\"#proc_vif_fail\">proc_vif_fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipmr_rules_exit\">ipmr_rules_exit</a>(<a class=\"id\" href=\"#net\">net</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<a class=\"id\" href=\"#fail\">fail</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__net_exit\">__net_exit</a> <a class=\"id\" href=\"#ipmr_net_exit\">ipmr_net_exit</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROC_FS\">CONFIG_PROC_FS</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proc_net_remove\">proc_net_remove</a>(<a class=\"id\" href=\"#net\">net</a>, \"ip_mr_cache\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proc_net_remove\">proc_net_remove</a>(<a class=\"id\" href=\"#net\">net</a>, \"ip_mr_vif\");", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipmr_rules_exit\">ipmr_rules_exit</a>(<a class=\"id\" href=\"#net\">net</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#pernet_operations\">pernet_operations</a> <a class=\"id\" href=\"#ipmr_net_ops\">ipmr_net_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#init\">init</a> = <a class=\"id\" href=\"#ipmr_net_init\">ipmr_net_init</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#exit\">exit</a> = <a class=\"id\" href=\"#ipmr_net_exit\">ipmr_net_exit</a>,", 
"};", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#ip_mr_init\">ip_mr_init</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mrt_cachep\">mrt_cachep</a> = <a class=\"id\" href=\"#kmem_cache_create\">kmem_cache_create</a>(\"ip_mrt_cache\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       sizeof(struct <a class=\"id\" href=\"#mfc_cache\">mfc_cache</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       0, <a class=\"id\" href=\"#SLAB_HWCACHE_ALIGN\">SLAB_HWCACHE_ALIGN</a>|<a class=\"id\" href=\"#SLAB_PANIC\">SLAB_PANIC</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mrt_cachep\">mrt_cachep</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#register_pernet_subsys\">register_pernet_subsys</a>(&amp;<a class=\"id\" href=\"#ipmr_net_ops\">ipmr_net_ops</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#reg_pernet_fail\">reg_pernet_fail</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#register_netdevice_notifier\">register_netdevice_notifier</a>(&amp;<a class=\"id\" href=\"#ip_mr_notifier\">ip_mr_notifier</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#reg_notif_fail\">reg_notif_fail</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_PIMSM_V2\">CONFIG_IP_PIMSM_V2</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inet_add_protocol\">inet_add_protocol</a>(&amp;<a class=\"id\" href=\"#pim_protocol\">pim_protocol</a>, <a class=\"id\" href=\"#IPPROTO_PIM\">IPPROTO_PIM</a>) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"ip_mr_init: can't add PIM protocol\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#add_proto_fail\">add_proto_fail</a>;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_register\">rtnl_register</a>(<a class=\"id\" href=\"#RTNL_FAMILY_IPMR\">RTNL_FAMILY_IPMR</a>, <a class=\"id\" href=\"#RTM_GETROUTE\">RTM_GETROUTE</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#ipmr_rtm_dumproute\">ipmr_rtm_dumproute</a>);", 
"<span class=\"ts\"/>return 0;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_PIMSM_V2\">CONFIG_IP_PIMSM_V2</a>", 
"<a class=\"id\" href=\"#add_proto_fail\">add_proto_fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_netdevice_notifier\">unregister_netdevice_notifier</a>(&amp;<a class=\"id\" href=\"#ip_mr_notifier\">ip_mr_notifier</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<a class=\"id\" href=\"#reg_notif_fail\">reg_notif_fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_pernet_subsys\">unregister_pernet_subsys</a>(&amp;<a class=\"id\" href=\"#ipmr_net_ops\">ipmr_net_ops</a>);", 
"<a class=\"id\" href=\"#reg_pernet_fail\">reg_pernet_fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_destroy\">kmem_cache_destroy</a>(<a class=\"id\" href=\"#mrt_cachep\">mrt_cachep</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
];
xr_frag_insert('l/86/3d02cbf00f7ffd9e286bea5accf99eddf2d2c2.xr', __xr_tmp);
