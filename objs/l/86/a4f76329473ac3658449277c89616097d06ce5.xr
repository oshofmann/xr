var __xr_tmp = [
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 1992, 1993, 1994, 1995</span>", 
"<span class=\"comment\"> * Remy Card (card@masi.ibp.fr)</span>", 
"<span class=\"comment\"> * Laboratoire MASI - Institut Blaise Pascal</span>", 
"<span class=\"comment\"> * Universite Pierre et Marie Curie (Paris VI)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  from</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  linux/fs/minix/dir.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 1991, 1992  Linus Torvalds</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  ext4 directory handling functions</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Big-endian to little-endian byte-swapping/bitmaps by</span>", 
"<span class=\"comment\"> *        David S. Miller (davem@caip.rutgers.edu), 1995</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Hash Tree Directory indexing (c) 2001  Daniel Phillips</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jbd2\">jbd2</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#buffer_head\">buffer_head</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rbtree\">rbtree</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"ext4.h\"", 
"", 
"static unsigned char <a class=\"id\" href=\"#ext4_filetype_table\">ext4_filetype_table</a>[] = {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DT_UNKNOWN\">DT_UNKNOWN</a>, <a class=\"id\" href=\"#DT_REG\">DT_REG</a>, <a class=\"id\" href=\"#DT_DIR\">DT_DIR</a>, <a class=\"id\" href=\"#DT_CHR\">DT_CHR</a>, <a class=\"id\" href=\"#DT_BLK\">DT_BLK</a>, <a class=\"id\" href=\"#DT_FIFO\">DT_FIFO</a>, <a class=\"id\" href=\"#DT_SOCK\">DT_SOCK</a>, <a class=\"id\" href=\"#DT_LNK\">DT_LNK</a>", 
"};", 
"", 
"static int <a class=\"id\" href=\"#ext4_readdir\">ext4_readdir</a>(struct <a class=\"id\" href=\"#file\">file</a> *, void *, <a class=\"id\" href=\"#filldir_t\">filldir_t</a>);", 
"static int <a class=\"id\" href=\"#ext4_dx_readdir\">ext4_dx_readdir</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   void *<a class=\"id\" href=\"#dirent\">dirent</a>, <a class=\"id\" href=\"#filldir_t\">filldir_t</a> <a class=\"id\" href=\"#filldir\">filldir</a>);", 
"static int <a class=\"id\" href=\"#ext4_release_dir\">ext4_release_dir</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>);", 
"", 
"const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#ext4_dir_operations\">ext4_dir_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_file_llseek\">generic_file_llseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_read_dir\">generic_read_dir</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#readdir\">readdir</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_readdir\">ext4_readdir</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* we take BKL. needed?*/</span>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#unlocked_ioctl\">unlocked_ioctl</a> = <a class=\"id\" href=\"#ext4_ioctl\">ext4_ioctl</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#compat_ioctl\">compat_ioctl</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_compat_ioctl\">ext4_compat_ioctl</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#fsync\">fsync</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_sync_file\">ext4_sync_file</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_release_dir\">ext4_release_dir</a>,", 
"};", 
"", 
"", 
"static unsigned char <a class=\"id\" href=\"#get_dtype\">get_dtype</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#filetype\">filetype</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#EXT4_HAS_INCOMPAT_FEATURE\">EXT4_HAS_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_FILETYPE\">EXT4_FEATURE_INCOMPAT_FILETYPE</a>) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#filetype\">filetype</a> >= <a class=\"id\" href=\"#EXT4_FT_MAX\">EXT4_FT_MAX</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#DT_UNKNOWN\">DT_UNKNOWN</a>;", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#ext4_filetype_table\">ext4_filetype_table</a>[<a class=\"id\" href=\"#filetype\">filetype</a>]);", 
"}", 
"", 
"", 
"int <a class=\"id\" href=\"#__ext4_check_dir_entry\">__ext4_check_dir_entry</a>(const char *<a class=\"id\" href=\"#function\">function</a>, unsigned int <a class=\"id\" href=\"#line\">line</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#ext4_dir_entry_2\">ext4_dir_entry_2</a> *<a class=\"id\" href=\"#de\">de</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned int <a class=\"id\" href=\"#offset\">offset</a>)", 
"{", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#error_msg\">error_msg</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>const int <a class=\"id\" href=\"#rlen\">rlen</a> = <a class=\"id\" href=\"#ext4_rec_len_from_disk\">ext4_rec_len_from_disk</a>(<a class=\"id\" href=\"#de\">de</a>-><a class=\"id\" href=\"#rec_len\">rec_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rlen\">rlen</a> &lt; <a class=\"id\" href=\"#EXT4_DIR_REC_LEN\">EXT4_DIR_REC_LEN</a>(1))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error_msg\">error_msg</a> = \"rec_len is smaller than minimal\";", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#rlen\">rlen</a> % 4 != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error_msg\">error_msg</a> = \"rec_len % 4 != 0\";", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#rlen\">rlen</a> &lt; <a class=\"id\" href=\"#EXT4_DIR_REC_LEN\">EXT4_DIR_REC_LEN</a>(<a class=\"id\" href=\"#de\">de</a>-><a class=\"id\" href=\"#name_len\">name_len</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error_msg\">error_msg</a> = \"rec_len is too small for name_len\";", 
"<span class=\"ts\"/>else if (((char *) <a class=\"id\" href=\"#de\">de</a> - <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>) + <a class=\"id\" href=\"#rlen\">rlen</a> &gt; <a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error_msg\">error_msg</a> = \"directory entry across blocks\";", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#de\">de</a>-><a class=\"id\" href=\"#inode\">inode</a>) &gt;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_inodes_count\">s_inodes_count</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error_msg\">error_msg</a> = \"inode out of bounds\";", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error_msg\">error_msg</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_error_inode\">ext4_error_inode</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#function\">function</a>, <a class=\"id\" href=\"#line\">line</a>, <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_blocknr\">b_blocknr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"bad entry in directory: %s - \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"offset=%u(%u), inode=%u, rec_len=%d, name_len=%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error_msg\">error_msg</a>, (unsigned) (<a class=\"id\" href=\"#offset\">offset</a>%<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_size\">b_size</a>), <a class=\"id\" href=\"#offset\">offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#de\">de</a>-><a class=\"id\" href=\"#inode\">inode</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rlen\">rlen</a>, <a class=\"id\" href=\"#de\">de</a>-><a class=\"id\" href=\"#name_len\">name_len</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error_msg\">error_msg</a> == <a class=\"id\" href=\"#NULL\">NULL</a> ? 1 : 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext4_readdir\">ext4_readdir</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> void *<a class=\"id\" href=\"#dirent\">dirent</a>, <a class=\"id\" href=\"#filldir_t\">filldir_t</a> <a class=\"id\" href=\"#filldir\">filldir</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#stored\">stored</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_dir_entry_2\">ext4_dir_entry_2</a> *<a class=\"id\" href=\"#de\">de</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#dir_has_error\">dir_has_error</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_HAS_COMPAT_FEATURE\">EXT4_HAS_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#EXT4_FEATURE_COMPAT_DIR_INDEX\">EXT4_FEATURE_COMPAT_DIR_INDEX</a>) &&", 
"<span class=\"ts\"/>    ((<a class=\"id\" href=\"#ext4_test_inode_flag\">ext4_test_inode_flag</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT4_INODE_INDEX\">EXT4_INODE_INDEX</a>)) ||", 
"<span class=\"ts\"/>     ((<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a> >> <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize_bits\">s_blocksize_bits</a>) == 1))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_dx_readdir\">ext4_dx_readdir</a>(<a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#dirent\">dirent</a>, <a class=\"id\" href=\"#filldir\">filldir</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> != <a class=\"id\" href=\"#ERR_BAD_DX_DIR\">ERR_BAD_DX_DIR</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We don't set the inode dirty flag since it's not</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * critical that it get flushed back to the disk.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_clear_inode_flag\">ext4_clear_inode_flag</a>(<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#EXT4_INODE_INDEX\">EXT4_INODE_INDEX</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stored\">stored</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a> &amp; (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> - 1);", 
"", 
"<span class=\"ts\"/>while (!<a class=\"id\" href=\"#error\">error</a> && !<a class=\"id\" href=\"#stored\">stored</a> && <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a> &lt; <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_map_blocks\">ext4_map_blocks</a> <a class=\"id\" href=\"#map\">map</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#map\">map</a>.<a class=\"id\" href=\"#m_lblk\">m_lblk</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a> >> <a class=\"id\" href=\"#EXT4_BLOCK_SIZE_BITS\">EXT4_BLOCK_SIZE_BITS</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#map\">map</a>.<a class=\"id\" href=\"#m_len\">m_len</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_map_blocks\">ext4_map_blocks</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#map\">map</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pgoff_t\">pgoff_t</a> <a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#map\">map</a>.<a class=\"id\" href=\"#m_pblk\">m_pblk</a> >>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a> - <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_blkbits\">i_blkbits</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ra_has_index\">ra_has_index</a>(&amp;<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_ra\">f_ra</a>, <a class=\"id\" href=\"#index\">index</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_cache_sync_readahead\">page_cache_sync_readahead</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>-><a class=\"id\" href=\"#bd_inode\">bd_inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_ra\">f_ra</a>, <a class=\"id\" href=\"#filp\">filp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_ra\">f_ra</a>.<a class=\"id\" href=\"#prev_pos\">prev_pos</a> = (<a class=\"id\" href=\"#loff_t\">loff_t</a>)<a class=\"id\" href=\"#index\">index</a> << <a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#ext4_bread\">ext4_bread</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#map\">map</a>.<a class=\"id\" href=\"#m_lblk\">m_lblk</a>, 0, &amp;<a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We ignore I/O errors on directories so users have a chance</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * of recovering data when there's a bad sector</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dir_has_error\">dir_has_error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ERROR_INODE\">EXT4_ERROR_INODE</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"directory \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"contains a hole at offset %Lu\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (unsigned long long) <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dir_has_error\">dir_has_error</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* corrupt size?  Maybe no more blocks to read */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a> &gt; <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_blocks\">i_blocks</a> << 9)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a> += <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> - <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#revalidate\">revalidate</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If the dir block has changed since the last call to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * readdir(2), then we might be pointing to an invalid</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * dirent right now.  Scan from the start of the block</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * to make sure. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_version\">f_version</a> != <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_version\">i_version</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> && <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#offset\">offset</a>; ) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#de\">de</a> = (struct <a class=\"id\" href=\"#ext4_dir_entry_2\">ext4_dir_entry_2</a> *)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a> + <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* It's too expensive to do a full</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * dirent test each time round this</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * loop, but we do have to test at</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * least that it is non-zero.  A</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * failure will be detected in the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * dirent test below. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_rec_len_from_disk\">ext4_rec_len_from_disk</a>(<a class=\"id\" href=\"#de\">de</a>-><a class=\"id\" href=\"#rec_len\">rec_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>) &lt; <a class=\"id\" href=\"#EXT4_DIR_REC_LEN\">EXT4_DIR_REC_LEN</a>(1))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> += <a class=\"id\" href=\"#ext4_rec_len_from_disk\">ext4_rec_len_from_disk</a>(<a class=\"id\" href=\"#de\">de</a>-><a class=\"id\" href=\"#rec_len\">rec_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a> = (<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a> &amp; ~(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> - 1))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>| <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_version\">f_version</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_version\">i_version</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>while (!<a class=\"id\" href=\"#error\">error</a> && <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a> &lt; <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       && <a class=\"id\" href=\"#offset\">offset</a> &lt; <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#de\">de</a> = (struct <a class=\"id\" href=\"#ext4_dir_entry_2\">ext4_dir_entry_2</a> *) (<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a> + <a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ext4_check_dir_entry\">ext4_check_dir_entry</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#de\">de</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#bh\">bh</a>, <a class=\"id\" href=\"#offset\">offset</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * On error, skip the f_pos to the next block</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a> = (<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> - 1)) + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#stored\">stored</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += <a class=\"id\" href=\"#ext4_rec_len_from_disk\">ext4_rec_len_from_disk</a>(<a class=\"id\" href=\"#de\">de</a>-><a class=\"id\" href=\"#rec_len\">rec_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#de\">de</a>-><a class=\"id\" href=\"#inode\">inode</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We might block in the next section</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * if the data destination is</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * currently swapped out.  So, use a</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * version stamp to detect whether or</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * not the directory has been modified</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * during the copy operation.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#version\">version</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_version\">f_version</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#filldir\">filldir</a>(<a class=\"id\" href=\"#dirent\">dirent</a>, <a class=\"id\" href=\"#de\">de</a>-><a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#de\">de</a>-><a class=\"id\" href=\"#name_len\">name_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#de\">de</a>-><a class=\"id\" href=\"#inode\">inode</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_dtype\">get_dtype</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#de\">de</a>-><a class=\"id\" href=\"#file_type\">file_type</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#version\">version</a> != <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_version\">f_version</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#revalidate\">revalidate</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stored\">stored</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a> += <a class=\"id\" href=\"#ext4_rec_len_from_disk\">ext4_rec_len_from_disk</a>(<a class=\"id\" href=\"#de\">de</a>-><a class=\"id\" href=\"#rec_len\">rec_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * These functions convert from the major/minor hash to an f_pos</span>", 
"<span class=\"comment\"> * value.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Currently we only use major hash numer.  This is unfortunate, but</span>", 
"<span class=\"comment\"> * on 32-bit machines, the same VFS interface is used for lseek and</span>", 
"<span class=\"comment\"> * llseek, so if we use the 64 bit offset, then the 32-bit versions of</span>", 
"<span class=\"comment\"> * lseek/telldir/seekdir will blow out spectacularly, and from within</span>", 
"<span class=\"comment\"> * the ext2 low-level routine, we don't know if we're being called by</span>", 
"<span class=\"comment\"> * a 64-bit version of the system call or the 32-bit version of the</span>", 
"<span class=\"comment\"> * system call.  Worse yet, NFSv2 only allows for a 32-bit readdir</span>", 
"<span class=\"comment\"> * cookie.  Sigh.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#hash2pos\">hash2pos</a>(<a class=\"id\" href=\"#major\">major</a>, <a class=\"id\" href=\"#minor\">minor</a>)<span class=\"ts\"/>(<a class=\"id\" href=\"#major\">major</a> >> 1)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pos2maj_hash\">pos2maj_hash</a>(<a class=\"id\" href=\"#pos\">pos</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#pos\">pos</a> << 1) &amp; 0xffffffff)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pos2min_hash\">pos2min_hash</a>(<a class=\"id\" href=\"#pos\">pos</a>)<span class=\"ts\"/>(0)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This structure holds the nodes of the red-black tree used to store</span>", 
"<span class=\"comment\"> * the directory entry in hash order.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#fname\">fname</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#minor_hash\">minor_hash</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a><span class=\"ts\"/><a class=\"id\" href=\"#rb_hash\">rb_hash</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fname\">fname</a><span class=\"ts\"/>*<a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#name_len\">name_len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#file_type\">file_type</a>;", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a>[0];", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This functoin implements a non-recursive way of freeing all of the</span>", 
"<span class=\"comment\"> * nodes in the red-black tree.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#free_rb_tree_fname\">free_rb_tree_fname</a>(struct <a class=\"id\" href=\"#rb_root\">rb_root</a> *<a class=\"id\" href=\"#root\">root</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a><span class=\"ts\"/>*<a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#rb_node\">rb_node</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a><span class=\"ts\"/>*<a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fname\">fname</a><span class=\"ts\"/>*<a class=\"id\" href=\"#fname\">fname</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#n\">n</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Do the node's children first */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The node has no children; free it, and then zero</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * out parent's link to it.  Finally go to the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * beginning of the loop and try to free the parent</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * node.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#rb_parent\">rb_parent</a>(<a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fname\">fname</a> = <a class=\"id\" href=\"#rb_entry\">rb_entry</a>(<a class=\"id\" href=\"#n\">n</a>, struct <a class=\"id\" href=\"#fname\">fname</a>, <a class=\"id\" href=\"#rb_hash\">rb_hash</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#fname\">fname</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#fname\">fname</a> *<a class=\"id\" href=\"#old\">old</a> = <a class=\"id\" href=\"#fname\">fname</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fname\">fname</a> = <a class=\"id\" href=\"#fname\">fname</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#old\">old</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#parent\">parent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#root\">root</a> = <a class=\"id\" href=\"#RB_ROOT\">RB_ROOT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a> == <a class=\"id\" href=\"#n\">n</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a> == <a class=\"id\" href=\"#n\">n</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"", 
"static struct <a class=\"id\" href=\"#dir_private_info\">dir_private_info</a> *<a class=\"id\" href=\"#ext4_htree_create_dir_info\">ext4_htree_create_dir_info</a>(<a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dir_private_info\">dir_private_info</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#dir_private_info\">dir_private_info</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#curr_hash\">curr_hash</a> = <a class=\"id\" href=\"#pos2maj_hash\">pos2maj_hash</a>(<a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#curr_minor_hash\">curr_minor_hash</a> = <a class=\"id\" href=\"#pos2min_hash\">pos2min_hash</a>(<a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#p\">p</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#ext4_htree_free_dir_info\">ext4_htree_free_dir_info</a>(struct <a class=\"id\" href=\"#dir_private_info\">dir_private_info</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_rb_tree_fname\">free_rb_tree_fname</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Given a directory entry, enter it into the fname rb tree.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ext4_htree_store_dirent\">ext4_htree_store_dirent</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#dir_file\">dir_file</a>, <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#hash\">hash</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#minor_hash\">minor_hash</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#ext4_dir_entry_2\">ext4_dir_entry_2</a> *<a class=\"id\" href=\"#dirent\">dirent</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> **<a class=\"id\" href=\"#p\">p</a>, *<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fname\">fname</a> *<a class=\"id\" href=\"#fname\">fname</a>, *<a class=\"id\" href=\"#new_fn\">new_fn</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dir_private_info\">dir_private_info</a> *<a class=\"id\" href=\"#info\">info</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#dir_file\">dir_file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = &amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#root\">root</a>.<a class=\"id\" href=\"#rb_node\">rb_node</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Create and allocate the fname structure */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = sizeof(struct <a class=\"id\" href=\"#fname\">fname</a>) + <a class=\"id\" href=\"#dirent\">dirent</a>-><a class=\"id\" href=\"#name_len\">name_len</a> + 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_fn\">new_fn</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(<a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#new_fn\">new_fn</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_fn\">new_fn</a>-><a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#hash\">hash</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_fn\">new_fn</a>-><a class=\"id\" href=\"#minor_hash\">minor_hash</a> = <a class=\"id\" href=\"#minor_hash\">minor_hash</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_fn\">new_fn</a>-><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#dirent\">dirent</a>-><a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_fn\">new_fn</a>-><a class=\"id\" href=\"#name_len\">name_len</a> = <a class=\"id\" href=\"#dirent\">dirent</a>-><a class=\"id\" href=\"#name_len\">name_len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_fn\">new_fn</a>-><a class=\"id\" href=\"#file_type\">file_type</a> = <a class=\"id\" href=\"#dirent\">dirent</a>-><a class=\"id\" href=\"#file_type\">file_type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#new_fn\">new_fn</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#dirent\">dirent</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#dirent\">dirent</a>-><a class=\"id\" href=\"#name_len\">name_len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_fn\">new_fn</a>-><a class=\"id\" href=\"#name\">name</a>[<a class=\"id\" href=\"#dirent\">dirent</a>-><a class=\"id\" href=\"#name_len\">name_len</a>] = 0;", 
"", 
"<span class=\"ts\"/>while (*<a class=\"id\" href=\"#p\">p</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a> = *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fname\">fname</a> = <a class=\"id\" href=\"#rb_entry\">rb_entry</a>(<a class=\"id\" href=\"#parent\">parent</a>, struct <a class=\"id\" href=\"#fname\">fname</a>, <a class=\"id\" href=\"#rb_hash\">rb_hash</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If the hash and minor hash match up, then we put</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * them on a linked list.  This rarely happens...</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#new_fn\">new_fn</a>-><a class=\"id\" href=\"#hash\">hash</a> == <a class=\"id\" href=\"#fname\">fname</a>-><a class=\"id\" href=\"#hash\">hash</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#new_fn\">new_fn</a>-><a class=\"id\" href=\"#minor_hash\">minor_hash</a> == <a class=\"id\" href=\"#fname\">fname</a>-><a class=\"id\" href=\"#minor_hash\">minor_hash</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_fn\">new_fn</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#fname\">fname</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fname\">fname</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#new_fn\">new_fn</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#new_fn\">new_fn</a>-><a class=\"id\" href=\"#hash\">hash</a> &lt; <a class=\"id\" href=\"#fname\">fname</a>-><a class=\"id\" href=\"#hash\">hash</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = &amp;(*<a class=\"id\" href=\"#p\">p</a>)-><a class=\"id\" href=\"#rb_left\">rb_left</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#new_fn\">new_fn</a>-><a class=\"id\" href=\"#hash\">hash</a> &gt; <a class=\"id\" href=\"#fname\">fname</a>-><a class=\"id\" href=\"#hash\">hash</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = &amp;(*<a class=\"id\" href=\"#p\">p</a>)-><a class=\"id\" href=\"#rb_right\">rb_right</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#new_fn\">new_fn</a>-><a class=\"id\" href=\"#minor_hash\">minor_hash</a> &lt; <a class=\"id\" href=\"#fname\">fname</a>-><a class=\"id\" href=\"#minor_hash\">minor_hash</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = &amp;(*<a class=\"id\" href=\"#p\">p</a>)-><a class=\"id\" href=\"#rb_left\">rb_left</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else <span class=\"comment\">/* if (new_fn-&gt;minor_hash &gt; fname-&gt;minor_hash) */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = &amp;(*<a class=\"id\" href=\"#p\">p</a>)-><a class=\"id\" href=\"#rb_right\">rb_right</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rb_link_node\">rb_link_node</a>(&amp;<a class=\"id\" href=\"#new_fn\">new_fn</a>-><a class=\"id\" href=\"#rb_hash\">rb_hash</a>, <a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rb_insert_color\">rb_insert_color</a>(&amp;<a class=\"id\" href=\"#new_fn\">new_fn</a>-><a class=\"id\" href=\"#rb_hash\">rb_hash</a>, &amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This is a helper function for ext4_dx_readdir.  It calls filldir</span>", 
"<span class=\"comment\"> * for all entres on the fname linked list.  (Normally there is only</span>", 
"<span class=\"comment\"> * one entry on the linked list, unless there are 62 bit hash collisions.)</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#call_filldir\">call_filldir</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, void *<a class=\"id\" href=\"#dirent\">dirent</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filldir_t\">filldir_t</a> <a class=\"id\" href=\"#filldir\">filldir</a>, struct <a class=\"id\" href=\"#fname\">fname</a> *<a class=\"id\" href=\"#fname\">fname</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dir_private_info\">dir_private_info</a> *<a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a><span class=\"ts\"/><a class=\"id\" href=\"#curr_pos\">curr_pos</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#fname\">fname</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"EXT4-fs: call_filldir: called with \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"null fname?!?\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#curr_pos\">curr_pos</a> = <a class=\"id\" href=\"#hash2pos\">hash2pos</a>(<a class=\"id\" href=\"#fname\">fname</a>-><a class=\"id\" href=\"#hash\">hash</a>, <a class=\"id\" href=\"#fname\">fname</a>-><a class=\"id\" href=\"#minor_hash\">minor_hash</a>);", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#fname\">fname</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#filldir\">filldir</a>(<a class=\"id\" href=\"#dirent\">dirent</a>, <a class=\"id\" href=\"#fname\">fname</a>-><a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fname\">fname</a>-><a class=\"id\" href=\"#name_len\">name_len</a>, <a class=\"id\" href=\"#curr_pos\">curr_pos</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fname\">fname</a>-><a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_dtype\">get_dtype</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#fname\">fname</a>-><a class=\"id\" href=\"#file_type\">file_type</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a> = <a class=\"id\" href=\"#curr_pos\">curr_pos</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#extra_fname\">extra_fname</a> = <a class=\"id\" href=\"#fname\">fname</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fname\">fname</a> = <a class=\"id\" href=\"#fname\">fname</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext4_dx_readdir\">ext4_dx_readdir</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> void *<a class=\"id\" href=\"#dirent\">dirent</a>, <a class=\"id\" href=\"#filldir_t\">filldir_t</a> <a class=\"id\" href=\"#filldir\">filldir</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dir_private_info\">dir_private_info</a> *<a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fname\">fname</a> *<a class=\"id\" href=\"#fname\">fname</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#info\">info</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#ext4_htree_create_dir_info\">ext4_htree_create_dir_info</a>(<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#info\">info</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a> = <a class=\"id\" href=\"#info\">info</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a> == <a class=\"id\" href=\"#EXT4_HTREE_EOF\">EXT4_HTREE_EOF</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;<span class=\"ts\"/><span class=\"comment\">/* EOF */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Some one has messed with f_pos; reset the world */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#last_pos\">last_pos</a> != <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_rb_tree_fname\">free_rb_tree_fname</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#curr_node\">curr_node</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#extra_fname\">extra_fname</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#curr_hash\">curr_hash</a> = <a class=\"id\" href=\"#pos2maj_hash\">pos2maj_hash</a>(<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#curr_minor_hash\">curr_minor_hash</a> = <a class=\"id\" href=\"#pos2min_hash\">pos2min_hash</a>(<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If there are any leftover names on the hash collision</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * chain, return them first.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#extra_fname\">extra_fname</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#call_filldir\">call_filldir</a>(<a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#dirent\">dirent</a>, <a class=\"id\" href=\"#filldir\">filldir</a>, <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#extra_fname\">extra_fname</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#finished\">finished</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#extra_fname\">extra_fname</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#next_node\">next_node</a>;", 
"<span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#curr_node\">curr_node</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#curr_node\">curr_node</a> = <a class=\"id\" href=\"#rb_first\">rb_first</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#root\">root</a>);", 
"", 
"<span class=\"ts\"/>while (1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Fill the rbtree if we have no more entries,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * or the inode has changed since we last read in the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * cached entries.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((!<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#curr_node\">curr_node</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_version\">f_version</a> != <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_version\">i_version</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#curr_node\">curr_node</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_rb_tree_fname\">free_rb_tree_fname</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_version\">f_version</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_version\">i_version</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ext4_htree_fill_tree\">ext4_htree_fill_tree</a>(<a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#curr_hash\">curr_hash</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#curr_minor_hash\">curr_minor_hash</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#next_hash\">next_hash</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a> = <a class=\"id\" href=\"#EXT4_HTREE_EOF\">EXT4_HTREE_EOF</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#curr_node\">curr_node</a> = <a class=\"id\" href=\"#rb_first\">rb_first</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fname\">fname</a> = <a class=\"id\" href=\"#rb_entry\">rb_entry</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#curr_node\">curr_node</a>, struct <a class=\"id\" href=\"#fname\">fname</a>, <a class=\"id\" href=\"#rb_hash\">rb_hash</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#curr_hash\">curr_hash</a> = <a class=\"id\" href=\"#fname\">fname</a>-><a class=\"id\" href=\"#hash\">hash</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#curr_minor_hash\">curr_minor_hash</a> = <a class=\"id\" href=\"#fname\">fname</a>-><a class=\"id\" href=\"#minor_hash\">minor_hash</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#call_filldir\">call_filldir</a>(<a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#dirent\">dirent</a>, <a class=\"id\" href=\"#filldir\">filldir</a>, <a class=\"id\" href=\"#fname\">fname</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#next_node\">next_node</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#curr_node\">curr_node</a> = <a class=\"id\" href=\"#rb_next\">rb_next</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#curr_node\">curr_node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#curr_node\">curr_node</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fname\">fname</a> = <a class=\"id\" href=\"#rb_entry\">rb_entry</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#curr_node\">curr_node</a>, struct <a class=\"id\" href=\"#fname\">fname</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#rb_hash\">rb_hash</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#curr_hash\">curr_hash</a> = <a class=\"id\" href=\"#fname\">fname</a>-><a class=\"id\" href=\"#hash\">hash</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#curr_minor_hash\">curr_minor_hash</a> = <a class=\"id\" href=\"#fname\">fname</a>-><a class=\"id\" href=\"#minor_hash\">minor_hash</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#next_hash\">next_hash</a> == ~0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a> = <a class=\"id\" href=\"#EXT4_HTREE_EOF\">EXT4_HTREE_EOF</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#curr_hash\">curr_hash</a> = <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#next_hash\">next_hash</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#curr_minor_hash\">curr_minor_hash</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#finished\">finished</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#last_pos\">last_pos</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext4_release_dir\">ext4_release_dir</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_htree_free_dir_info\">ext4_htree_free_dir_info</a>(<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
];
xr_frag_insert('l/86/a4f76329473ac3658449277c89616097d06ce5.xr', __xr_tmp);
