var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright (C) 2007-2009 Advanced Micro Devices, Inc.</span>", 
"<span class=\"comment\"> * Author: Joerg Roedel &lt;joerg.roedel@amd.com&gt;</span>", 
"<span class=\"comment\"> *         Leo Duran &lt;leo.duran@amd.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify it</span>", 
"<span class=\"comment\"> * under the terms of the GNU General Public License version 2 as published</span>", 
"<span class=\"comment\"> * by the Free Software Foundation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>", 
"<span class=\"comment\"> * GNU General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\"> * along with this program; if not, write to the Free Software</span>", 
"<span class=\"comment\"> * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bitmap\">bitmap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#debugfs\">debugfs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#scatterlist\">scatterlist</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#dma\">dma</a>-<a class=\"id\" href=\"#mapping\">mapping</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#iommu\">iommu</a>-<a class=\"id\" href=\"#helper\">helper</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#iommu\">iommu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#proto\">proto</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#iommu\">iommu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#gart\">gart</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#amd_iommu_proto\">amd_iommu_proto</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#amd_iommu_types\">amd_iommu_types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#amd_iommu\">amd_iommu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CMD_SET_TYPE\">CMD_SET_TYPE</a>(<a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#t\">t</a>) ((<a class=\"id\" href=\"#cmd\">cmd</a>)-><a class=\"id\" href=\"#data\">data</a>[1] |= ((<a class=\"id\" href=\"#t\">t</a>) << 28))", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXIT_LOOP_COUNT\">EXIT_LOOP_COUNT</a> 10000000", 
"", 
"static <a class=\"id\" href=\"#DEFINE_RWLOCK\">DEFINE_RWLOCK</a>(<a class=\"id\" href=\"#amd_iommu_devtable_lock\">amd_iommu_devtable_lock</a>);", 
"", 
"<span class=\"comment\">/* A list of preallocated protection domains */</span>", 
"static <a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#iommu_pd_list\">iommu_pd_list</a>);", 
"static <a class=\"id\" href=\"#DEFINE_SPINLOCK\">DEFINE_SPINLOCK</a>(<a class=\"id\" href=\"#iommu_pd_list_lock\">iommu_pd_list_lock</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Domain for untranslated devices - only allocated</span>", 
"<span class=\"comment\"> * if iommu=pt passed on kernel cmd line.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#protection_domain\">protection_domain</a> *<a class=\"id\" href=\"#pt_domain\">pt_domain</a>;", 
"", 
"static struct <a class=\"id\" href=\"#iommu_ops\">iommu_ops</a> <a class=\"id\" href=\"#amd_iommu_ops\">amd_iommu_ops</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * general struct to manage commands send to an IOMMU</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#iommu_cmd\">iommu_cmd</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#data\">data</a>[4];", 
"};", 
"", 
"static void <a class=\"id\" href=\"#reset_iommu_command_buffer\">reset_iommu_command_buffer</a>(struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a> *<a class=\"id\" href=\"#iommu\">iommu</a>);", 
"static void <a class=\"id\" href=\"#update_domain\">update_domain</a>(struct <a class=\"id\" href=\"#protection_domain\">protection_domain</a> *<a class=\"id\" href=\"#domain\">domain</a>);", 
"", 
"<span class=\"comment\">/****************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Helper functions</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ****************************************************************************/</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#get_device_id\">get_device_id</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a> = <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#calc_devid\">calc_devid</a>(<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#number\">number</a>, <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#devfn\">devfn</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#iommu_dev_data\">iommu_dev_data</a> *<a class=\"id\" href=\"#get_dev_data\">get_dev_data</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#archdata\">archdata</a>.<a class=\"id\" href=\"#iommu\">iommu</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * In this function the list of preallocated protection domains is traversed to</span>", 
"<span class=\"comment\"> * find the domain for a specific device</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#dma_ops_domain\">dma_ops_domain</a> *<a class=\"id\" href=\"#find_protection_domain\">find_protection_domain</a>(<a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#devid\">devid</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dma_ops_domain\">dma_ops_domain</a> *<a class=\"id\" href=\"#entry\">entry</a>, *<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#alias\">alias</a> = <a class=\"id\" href=\"#amd_iommu_alias_table\">amd_iommu_alias_table</a>[<a class=\"id\" href=\"#devid\">devid</a>];", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#iommu_pd_list\">iommu_pd_list</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#iommu_pd_list_lock\">iommu_pd_list_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#entry\">entry</a>, &amp;<a class=\"id\" href=\"#iommu_pd_list\">iommu_pd_list</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#target_dev\">target_dev</a> == <a class=\"id\" href=\"#devid\">devid</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#target_dev\">target_dev</a> == <a class=\"id\" href=\"#alias\">alias</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#iommu_pd_list_lock\">iommu_pd_list_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This function checks if the driver got a valid device from the caller to</span>", 
"<span class=\"comment\"> * avoid dereferencing invalid pointers.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#check_device\">check_device</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#devid\">devid</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a> || !<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dma_mask\">dma_mask</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* No device or no PCI device */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a> != &amp;<a class=\"id\" href=\"#pci_bus_type\">pci_bus_type</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#devid\">devid</a> = <a class=\"id\" href=\"#get_device_id\">get_device_id</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Out of our scope? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#devid\">devid</a> &gt; <a class=\"id\" href=\"#amd_iommu_last_bdf\">amd_iommu_last_bdf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#amd_iommu_rlookup_table\">amd_iommu_rlookup_table</a>[<a class=\"id\" href=\"#devid\">devid</a>] == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#true\">true</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#iommu_init_device\">iommu_init_device</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iommu_dev_data\">iommu_dev_data</a> *<a class=\"id\" href=\"#dev_data\">dev_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#devid\">devid</a>, <a class=\"id\" href=\"#alias\">alias</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#archdata\">archdata</a>.<a class=\"id\" href=\"#iommu\">iommu</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_data\">dev_data</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#dev_data\">dev_data</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev_data\">dev_data</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_data\">dev_data</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#devid\">devid</a> = <a class=\"id\" href=\"#get_device_id\">get_device_id</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#alias\">alias</a> = <a class=\"id\" href=\"#amd_iommu_alias_table\">amd_iommu_alias_table</a>[<a class=\"id\" href=\"#devid\">devid</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pdev\">pdev</a> = <a class=\"id\" href=\"#pci_get_bus_and_slot\">pci_get_bus_and_slot</a>(<a class=\"id\" href=\"#PCI_BUS\">PCI_BUS</a>(<a class=\"id\" href=\"#alias\">alias</a>), <a class=\"id\" href=\"#alias\">alias</a> &amp; 0xff);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pdev\">pdev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_data\">dev_data</a>-><a class=\"id\" href=\"#alias\">alias</a> = &amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#dev_data\">dev_data</a>-><a class=\"id\" href=\"#bind\">bind</a>, 0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#archdata\">archdata</a>.<a class=\"id\" href=\"#iommu\">iommu</a> = <a class=\"id\" href=\"#dev_data\">dev_data</a>;", 
"", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#iommu_uninit_device\">iommu_uninit_device</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#archdata\">archdata</a>.<a class=\"id\" href=\"#iommu\">iommu</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#amd_iommu_uninit_devices\">amd_iommu_uninit_devices</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_pci_dev\">for_each_pci_dev</a>(<a class=\"id\" href=\"#pdev\">pdev</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#check_device\">check_device</a>(&amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iommu_uninit_device\">iommu_uninit_device</a>(&amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#amd_iommu_init_devices\">amd_iommu_init_devices</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_pci_dev\">for_each_pci_dev</a>(<a class=\"id\" href=\"#pdev\">pdev</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#check_device\">check_device</a>(&amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#iommu_init_device\">iommu_init_device</a>(&amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free\">out_free</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#out_free\">out_free</a>:", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#amd_iommu_uninit_devices\">amd_iommu_uninit_devices</a>();", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_AMD_IOMMU_STATS\">CONFIG_AMD_IOMMU_STATS</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Initialization code for statistics collection</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<a class=\"id\" href=\"#DECLARE_STATS_COUNTER\">DECLARE_STATS_COUNTER</a>(<a class=\"id\" href=\"#compl_wait\">compl_wait</a>);", 
"<a class=\"id\" href=\"#DECLARE_STATS_COUNTER\">DECLARE_STATS_COUNTER</a>(<a class=\"id\" href=\"#cnt_map_single\">cnt_map_single</a>);", 
"<a class=\"id\" href=\"#DECLARE_STATS_COUNTER\">DECLARE_STATS_COUNTER</a>(<a class=\"id\" href=\"#cnt_unmap_single\">cnt_unmap_single</a>);", 
"<a class=\"id\" href=\"#DECLARE_STATS_COUNTER\">DECLARE_STATS_COUNTER</a>(<a class=\"id\" href=\"#cnt_map_sg\">cnt_map_sg</a>);", 
"<a class=\"id\" href=\"#DECLARE_STATS_COUNTER\">DECLARE_STATS_COUNTER</a>(<a class=\"id\" href=\"#cnt_unmap_sg\">cnt_unmap_sg</a>);", 
"<a class=\"id\" href=\"#DECLARE_STATS_COUNTER\">DECLARE_STATS_COUNTER</a>(<a class=\"id\" href=\"#cnt_alloc_coherent\">cnt_alloc_coherent</a>);", 
"<a class=\"id\" href=\"#DECLARE_STATS_COUNTER\">DECLARE_STATS_COUNTER</a>(<a class=\"id\" href=\"#cnt_free_coherent\">cnt_free_coherent</a>);", 
"<a class=\"id\" href=\"#DECLARE_STATS_COUNTER\">DECLARE_STATS_COUNTER</a>(<a class=\"id\" href=\"#cross_page\">cross_page</a>);", 
"<a class=\"id\" href=\"#DECLARE_STATS_COUNTER\">DECLARE_STATS_COUNTER</a>(<a class=\"id\" href=\"#domain_flush_single\">domain_flush_single</a>);", 
"<a class=\"id\" href=\"#DECLARE_STATS_COUNTER\">DECLARE_STATS_COUNTER</a>(<a class=\"id\" href=\"#domain_flush_all\">domain_flush_all</a>);", 
"<a class=\"id\" href=\"#DECLARE_STATS_COUNTER\">DECLARE_STATS_COUNTER</a>(<a class=\"id\" href=\"#alloced_io_mem\">alloced_io_mem</a>);", 
"<a class=\"id\" href=\"#DECLARE_STATS_COUNTER\">DECLARE_STATS_COUNTER</a>(<a class=\"id\" href=\"#total_map_requests\">total_map_requests</a>);", 
"", 
"static struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#stats_dir\">stats_dir</a>;", 
"static struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#de_fflush\">de_fflush</a>;", 
"", 
"static void <a class=\"id\" href=\"#amd_iommu_stats_add\">amd_iommu_stats_add</a>(struct <a class=\"id\" href=\"#__iommu_counter\">__iommu_counter</a> *<a class=\"id\" href=\"#cnt\">cnt</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#stats_dir\">stats_dir</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cnt\">cnt</a>-><a class=\"id\" href=\"#dent\">dent</a> = <a class=\"id\" href=\"#debugfs_create_u64\">debugfs_create_u64</a>(<a class=\"id\" href=\"#cnt\">cnt</a>-><a class=\"id\" href=\"#name\">name</a>, 0444, <a class=\"id\" href=\"#stats_dir\">stats_dir</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#cnt\">cnt</a>-><a class=\"id\" href=\"#value\">value</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#amd_iommu_stats_init\">amd_iommu_stats_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stats_dir\">stats_dir</a> = <a class=\"id\" href=\"#debugfs_create_dir\">debugfs_create_dir</a>(\"amd-iommu\", <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#stats_dir\">stats_dir</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#de_fflush\">de_fflush</a>  = <a class=\"id\" href=\"#debugfs_create_bool\">debugfs_create_bool</a>(\"fullflush\", 0444, <a class=\"id\" href=\"#stats_dir\">stats_dir</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (<a class=\"id\" href=\"#u32\">u32</a> *)&amp;<a class=\"id\" href=\"#amd_iommu_unmap_flush\">amd_iommu_unmap_flush</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#amd_iommu_stats_add\">amd_iommu_stats_add</a>(&amp;<a class=\"id\" href=\"#compl_wait\">compl_wait</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#amd_iommu_stats_add\">amd_iommu_stats_add</a>(&amp;<a class=\"id\" href=\"#cnt_map_single\">cnt_map_single</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#amd_iommu_stats_add\">amd_iommu_stats_add</a>(&amp;<a class=\"id\" href=\"#cnt_unmap_single\">cnt_unmap_single</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#amd_iommu_stats_add\">amd_iommu_stats_add</a>(&amp;<a class=\"id\" href=\"#cnt_map_sg\">cnt_map_sg</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#amd_iommu_stats_add\">amd_iommu_stats_add</a>(&amp;<a class=\"id\" href=\"#cnt_unmap_sg\">cnt_unmap_sg</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#amd_iommu_stats_add\">amd_iommu_stats_add</a>(&amp;<a class=\"id\" href=\"#cnt_alloc_coherent\">cnt_alloc_coherent</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#amd_iommu_stats_add\">amd_iommu_stats_add</a>(&amp;<a class=\"id\" href=\"#cnt_free_coherent\">cnt_free_coherent</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#amd_iommu_stats_add\">amd_iommu_stats_add</a>(&amp;<a class=\"id\" href=\"#cross_page\">cross_page</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#amd_iommu_stats_add\">amd_iommu_stats_add</a>(&amp;<a class=\"id\" href=\"#domain_flush_single\">domain_flush_single</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#amd_iommu_stats_add\">amd_iommu_stats_add</a>(&amp;<a class=\"id\" href=\"#domain_flush_all\">domain_flush_all</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#amd_iommu_stats_add\">amd_iommu_stats_add</a>(&amp;<a class=\"id\" href=\"#alloced_io_mem\">alloced_io_mem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#amd_iommu_stats_add\">amd_iommu_stats_add</a>(&amp;<a class=\"id\" href=\"#total_map_requests\">total_map_requests</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/****************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Interrupt handling functions</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ****************************************************************************/</span>", 
"", 
"static void <a class=\"id\" href=\"#dump_dte_entry\">dump_dte_entry</a>(<a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#devid\">devid</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 8; ++<a class=\"id\" href=\"#i\">i</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(\"AMD-Vi: DTE[%d]: %08x\\n\", <a class=\"id\" href=\"#i\">i</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#amd_iommu_dev_table\">amd_iommu_dev_table</a>[<a class=\"id\" href=\"#devid\">devid</a>].<a class=\"id\" href=\"#data\">data</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#dump_command\">dump_command</a>(unsigned long <a class=\"id\" href=\"#phys_addr\">phys_addr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iommu_cmd\">iommu_cmd</a> *<a class=\"id\" href=\"#cmd\">cmd</a> = <a class=\"id\" href=\"#phys_to_virt\">phys_to_virt</a>(<a class=\"id\" href=\"#phys_addr\">phys_addr</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 4; ++<a class=\"id\" href=\"#i\">i</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(\"AMD-Vi: CMD[%d]: %08x\\n\", <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#cmd\">cmd</a>-><a class=\"id\" href=\"#data\">data</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#iommu_print_event\">iommu_print_event</a>(struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a> *<a class=\"id\" href=\"#iommu\">iommu</a>, void *<a class=\"id\" href=\"#__evt\">__evt</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#event\">event</a> = <a class=\"id\" href=\"#__evt\">__evt</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#type\">type</a>  = (<a class=\"id\" href=\"#event\">event</a>[1] >> <a class=\"id\" href=\"#EVENT_TYPE_SHIFT\">EVENT_TYPE_SHIFT</a>)  &amp; <a class=\"id\" href=\"#EVENT_TYPE_MASK\">EVENT_TYPE_MASK</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#devid\">devid</a> = (<a class=\"id\" href=\"#event\">event</a>[0] >> <a class=\"id\" href=\"#EVENT_DEVID_SHIFT\">EVENT_DEVID_SHIFT</a>) &amp; <a class=\"id\" href=\"#EVENT_DEVID_MASK\">EVENT_DEVID_MASK</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#domid\">domid</a> = (<a class=\"id\" href=\"#event\">event</a>[1] >> <a class=\"id\" href=\"#EVENT_DOMID_SHIFT\">EVENT_DOMID_SHIFT</a>) &amp; <a class=\"id\" href=\"#EVENT_DOMID_MASK\">EVENT_DOMID_MASK</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#flags\">flags</a> = (<a class=\"id\" href=\"#event\">event</a>[1] >> <a class=\"id\" href=\"#EVENT_FLAGS_SHIFT\">EVENT_FLAGS_SHIFT</a>) &amp; <a class=\"id\" href=\"#EVENT_FLAGS_MASK\">EVENT_FLAGS_MASK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#address\">address</a> = (<a class=\"id\" href=\"#u64\">u64</a>)(((<a class=\"id\" href=\"#u64\">u64</a>)<a class=\"id\" href=\"#event\">event</a>[3]) << 32) | <a class=\"id\" href=\"#event\">event</a>[2];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"AMD-Vi: Event logged [\");", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#EVENT_TYPE_ILL_DEV\">EVENT_TYPE_ILL_DEV</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"ILLEGAL_DEV_TABLE_ENTRY device=%02x:%02x.%x \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"address=0x%016llx flags=0x%04x]\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#PCI_BUS\">PCI_BUS</a>(<a class=\"id\" href=\"#devid\">devid</a>), <a class=\"id\" href=\"#PCI_SLOT\">PCI_SLOT</a>(<a class=\"id\" href=\"#devid\">devid</a>), <a class=\"id\" href=\"#PCI_FUNC\">PCI_FUNC</a>(<a class=\"id\" href=\"#devid\">devid</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dump_dte_entry\">dump_dte_entry</a>(<a class=\"id\" href=\"#devid\">devid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#EVENT_TYPE_IO_FAULT\">EVENT_TYPE_IO_FAULT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"IO_PAGE_FAULT device=%02x:%02x.%x \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"domain=0x%04x address=0x%016llx flags=0x%04x]\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#PCI_BUS\">PCI_BUS</a>(<a class=\"id\" href=\"#devid\">devid</a>), <a class=\"id\" href=\"#PCI_SLOT\">PCI_SLOT</a>(<a class=\"id\" href=\"#devid\">devid</a>), <a class=\"id\" href=\"#PCI_FUNC\">PCI_FUNC</a>(<a class=\"id\" href=\"#devid\">devid</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#domid\">domid</a>, <a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#EVENT_TYPE_DEV_TAB_ERR\">EVENT_TYPE_DEV_TAB_ERR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"DEV_TAB_HARDWARE_ERROR device=%02x:%02x.%x \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"address=0x%016llx flags=0x%04x]\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#PCI_BUS\">PCI_BUS</a>(<a class=\"id\" href=\"#devid\">devid</a>), <a class=\"id\" href=\"#PCI_SLOT\">PCI_SLOT</a>(<a class=\"id\" href=\"#devid\">devid</a>), <a class=\"id\" href=\"#PCI_FUNC\">PCI_FUNC</a>(<a class=\"id\" href=\"#devid\">devid</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#EVENT_TYPE_PAGE_TAB_ERR\">EVENT_TYPE_PAGE_TAB_ERR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"PAGE_TAB_HARDWARE_ERROR device=%02x:%02x.%x \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"domain=0x%04x address=0x%016llx flags=0x%04x]\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#PCI_BUS\">PCI_BUS</a>(<a class=\"id\" href=\"#devid\">devid</a>), <a class=\"id\" href=\"#PCI_SLOT\">PCI_SLOT</a>(<a class=\"id\" href=\"#devid\">devid</a>), <a class=\"id\" href=\"#PCI_FUNC\">PCI_FUNC</a>(<a class=\"id\" href=\"#devid\">devid</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#domid\">domid</a>, <a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#EVENT_TYPE_ILL_CMD\">EVENT_TYPE_ILL_CMD</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"ILLEGAL_COMMAND_ERROR address=0x%016llx]\\n\", <a class=\"id\" href=\"#address\">address</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#reset_in_progress\">reset_in_progress</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reset_iommu_command_buffer\">reset_iommu_command_buffer</a>(<a class=\"id\" href=\"#iommu\">iommu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dump_command\">dump_command</a>(<a class=\"id\" href=\"#address\">address</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#EVENT_TYPE_CMD_HARD_ERR\">EVENT_TYPE_CMD_HARD_ERR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"COMMAND_HARDWARE_ERROR address=0x%016llx \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"flags=0x%04x]\\n\", <a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#EVENT_TYPE_IOTLB_INV_TO\">EVENT_TYPE_IOTLB_INV_TO</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"IOTLB_INV_TIMEOUT device=%02x:%02x.%x \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"address=0x%016llx]\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#PCI_BUS\">PCI_BUS</a>(<a class=\"id\" href=\"#devid\">devid</a>), <a class=\"id\" href=\"#PCI_SLOT\">PCI_SLOT</a>(<a class=\"id\" href=\"#devid\">devid</a>), <a class=\"id\" href=\"#PCI_FUNC\">PCI_FUNC</a>(<a class=\"id\" href=\"#devid\">devid</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#address\">address</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#EVENT_TYPE_INV_DEV_REQ\">EVENT_TYPE_INV_DEV_REQ</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"INVALID_DEVICE_REQUEST device=%02x:%02x.%x \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"address=0x%016llx flags=0x%04x]\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#PCI_BUS\">PCI_BUS</a>(<a class=\"id\" href=\"#devid\">devid</a>), <a class=\"id\" href=\"#PCI_SLOT\">PCI_SLOT</a>(<a class=\"id\" href=\"#devid\">devid</a>), <a class=\"id\" href=\"#PCI_FUNC\">PCI_FUNC</a>(<a class=\"id\" href=\"#devid\">devid</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"UNKNOWN type=0x%02x]\\n\", <a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#iommu_poll_events\">iommu_poll_events</a>(struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a> *<a class=\"id\" href=\"#iommu\">iommu</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#head\">head</a>, <a class=\"id\" href=\"#tail\">tail</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#readl\">readl</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#mmio_base\">mmio_base</a> + <a class=\"id\" href=\"#MMIO_EVT_HEAD_OFFSET\">MMIO_EVT_HEAD_OFFSET</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tail\">tail</a> = <a class=\"id\" href=\"#readl\">readl</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#mmio_base\">mmio_base</a> + <a class=\"id\" href=\"#MMIO_EVT_TAIL_OFFSET\">MMIO_EVT_TAIL_OFFSET</a>);", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#head\">head</a> != <a class=\"id\" href=\"#tail\">tail</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iommu_print_event\">iommu_print_event</a>(<a class=\"id\" href=\"#iommu\">iommu</a>, <a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#evt_buf\">evt_buf</a> + <a class=\"id\" href=\"#head\">head</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = (<a class=\"id\" href=\"#head\">head</a> + <a class=\"id\" href=\"#EVENT_ENTRY_SIZE\">EVENT_ENTRY_SIZE</a>) % <a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#evt_buf_size\">evt_buf_size</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#writel\">writel</a>(<a class=\"id\" href=\"#head\">head</a>, <a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#mmio_base\">mmio_base</a> + <a class=\"id\" href=\"#MMIO_EVT_HEAD_OFFSET\">MMIO_EVT_HEAD_OFFSET</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#irqreturn_t\">irqreturn_t</a> <a class=\"id\" href=\"#amd_iommu_int_handler\">amd_iommu_int_handler</a>(int <a class=\"id\" href=\"#irq\">irq</a>, void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a> *<a class=\"id\" href=\"#iommu\">iommu</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_iommu\">for_each_iommu</a>(<a class=\"id\" href=\"#iommu\">iommu</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iommu_poll_events\">iommu_poll_events</a>(<a class=\"id\" href=\"#iommu\">iommu</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#IRQ_HANDLED\">IRQ_HANDLED</a>;", 
"}", 
"", 
"<span class=\"comment\">/****************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * IOMMU command queuing functions</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ****************************************************************************/</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Writes the command to the IOMMUs command buffer and informs the</span>", 
"<span class=\"comment\"> * hardware about the new command. Must be called with iommu-&gt;lock held.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__iommu_queue_command\">__iommu_queue_command</a>(struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a> *<a class=\"id\" href=\"#iommu\">iommu</a>, struct <a class=\"id\" href=\"#iommu_cmd\">iommu_cmd</a> *<a class=\"id\" href=\"#cmd\">cmd</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#tail\">tail</a>, <a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#target\">target</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#cmd_buf_size\">cmd_buf_size</a> &amp; <a class=\"id\" href=\"#CMD_BUFFER_UNINITIALIZED\">CMD_BUFFER_UNINITIALIZED</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tail\">tail</a> = <a class=\"id\" href=\"#readl\">readl</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#mmio_base\">mmio_base</a> + <a class=\"id\" href=\"#MMIO_CMD_TAIL_OFFSET\">MMIO_CMD_TAIL_OFFSET</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#target\">target</a> = <a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#cmd_buf\">cmd_buf</a> + <a class=\"id\" href=\"#tail\">tail</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy_toio\">memcpy_toio</a>(<a class=\"id\" href=\"#target\">target</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, sizeof(*<a class=\"id\" href=\"#cmd\">cmd</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tail\">tail</a> = (<a class=\"id\" href=\"#tail\">tail</a> + sizeof(*<a class=\"id\" href=\"#cmd\">cmd</a>)) % <a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#cmd_buf_size\">cmd_buf_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#readl\">readl</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#mmio_base\">mmio_base</a> + <a class=\"id\" href=\"#MMIO_CMD_HEAD_OFFSET\">MMIO_CMD_HEAD_OFFSET</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tail\">tail</a> == <a class=\"id\" href=\"#head\">head</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#writel\">writel</a>(<a class=\"id\" href=\"#tail\">tail</a>, <a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#mmio_base\">mmio_base</a> + <a class=\"id\" href=\"#MMIO_CMD_TAIL_OFFSET\">MMIO_CMD_TAIL_OFFSET</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * General queuing function for commands. Takes iommu-&gt;lock and calls</span>", 
"<span class=\"comment\"> * __iommu_queue_command().</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#iommu_queue_command\">iommu_queue_command</a>(struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a> *<a class=\"id\" href=\"#iommu\">iommu</a>, struct <a class=\"id\" href=\"#iommu_cmd\">iommu_cmd</a> *<a class=\"id\" href=\"#cmd\">cmd</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#__iommu_queue_command\">__iommu_queue_command</a>(<a class=\"id\" href=\"#iommu\">iommu</a>, <a class=\"id\" href=\"#cmd\">cmd</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#need_sync\">need_sync</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This function waits until an IOMMU has completed a completion</span>", 
"<span class=\"comment\"> * wait command</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#__iommu_wait_for_completion\">__iommu_wait_for_completion</a>(struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a> *<a class=\"id\" href=\"#iommu\">iommu</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ready\">ready</a> = 0;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#status\">status</a> = 0;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#i\">i</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INC_STATS_COUNTER\">INC_STATS_COUNTER</a>(<a class=\"id\" href=\"#compl_wait\">compl_wait</a>);", 
"", 
"<span class=\"ts\"/>while (!<a class=\"id\" href=\"#ready\">ready</a> && (<a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#EXIT_LOOP_COUNT\">EXIT_LOOP_COUNT</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>++<a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* wait for the bit to become one */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#readl\">readl</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#mmio_base\">mmio_base</a> + <a class=\"id\" href=\"#MMIO_STATUS_OFFSET\">MMIO_STATUS_OFFSET</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ready\">ready</a> = <a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#MMIO_STATUS_COM_WAIT_INT_MASK\">MMIO_STATUS_COM_WAIT_INT_MASK</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* set bit back to zero */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> &= ~<a class=\"id\" href=\"#MMIO_STATUS_COM_WAIT_INT_MASK\">MMIO_STATUS_COM_WAIT_INT_MASK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#writel\">writel</a>(<a class=\"id\" href=\"#status\">status</a>, <a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#mmio_base\">mmio_base</a> + <a class=\"id\" href=\"#MMIO_STATUS_OFFSET\">MMIO_STATUS_OFFSET</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#i\">i</a> == <a class=\"id\" href=\"#EXIT_LOOP_COUNT\">EXIT_LOOP_COUNT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#reset_in_progress\">reset_in_progress</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This function queues a completion wait command into the command</span>", 
"<span class=\"comment\"> * buffer of an IOMMU</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__iommu_completion_wait\">__iommu_completion_wait</a>(struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a> *<a class=\"id\" href=\"#iommu\">iommu</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iommu_cmd\">iommu_cmd</a> <a class=\"id\" href=\"#cmd\">cmd</a>;", 
"", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#cmd\">cmd</a>, 0, sizeof(<a class=\"id\" href=\"#cmd\">cmd</a>));", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#cmd\">cmd</a>.<a class=\"id\" href=\"#data\">data</a>[0] = <a class=\"id\" href=\"#CMD_COMPL_WAIT_INT_MASK\">CMD_COMPL_WAIT_INT_MASK</a>;", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#CMD_SET_TYPE\">CMD_SET_TYPE</a>(&amp;<a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#CMD_COMPL_WAIT\">CMD_COMPL_WAIT</a>);", 
"", 
"<span class=\"ts\"/> return <a class=\"id\" href=\"#__iommu_queue_command\">__iommu_queue_command</a>(<a class=\"id\" href=\"#iommu\">iommu</a>, &amp;<a class=\"id\" href=\"#cmd\">cmd</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This function is called whenever we need to ensure that the IOMMU has</span>", 
"<span class=\"comment\"> * completed execution of all commands we sent. It sends a</span>", 
"<span class=\"comment\"> * COMPLETION_WAIT command and waits for it to finish. The IOMMU informs</span>", 
"<span class=\"comment\"> * us about that by writing a value to a physical address we pass with</span>", 
"<span class=\"comment\"> * the command.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#iommu_completion_wait\">iommu_completion_wait</a>(struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a> *<a class=\"id\" href=\"#iommu\">iommu</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#need_sync\">need_sync</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#__iommu_completion_wait\">__iommu_completion_wait</a>(<a class=\"id\" href=\"#iommu\">iommu</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#need_sync\">need_sync</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__iommu_wait_for_completion\">__iommu_wait_for_completion</a>(<a class=\"id\" href=\"#iommu\">iommu</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#reset_in_progress\">reset_in_progress</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reset_iommu_command_buffer\">reset_iommu_command_buffer</a>(<a class=\"id\" href=\"#iommu\">iommu</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#iommu_flush_complete\">iommu_flush_complete</a>(struct <a class=\"id\" href=\"#protection_domain\">protection_domain</a> *<a class=\"id\" href=\"#domain\">domain</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#amd_iommus_present\">amd_iommus_present</a>; ++<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#domain\">domain</a>-><a class=\"id\" href=\"#dev_iommu\">dev_iommu</a>[<a class=\"id\" href=\"#i\">i</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Devices of this domain are behind this IOMMU</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We need to wait for completion of all commands.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iommu_completion_wait\">iommu_completion_wait</a>(<a class=\"id\" href=\"#amd_iommus\">amd_iommus</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Command send function for invalidating a device table entry</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#iommu_flush_device\">iommu_flush_device</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a> *<a class=\"id\" href=\"#iommu\">iommu</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iommu_cmd\">iommu_cmd</a> <a class=\"id\" href=\"#cmd\">cmd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#devid\">devid</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#devid\">devid</a> = <a class=\"id\" href=\"#get_device_id\">get_device_id</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iommu\">iommu</a> = <a class=\"id\" href=\"#amd_iommu_rlookup_table\">amd_iommu_rlookup_table</a>[<a class=\"id\" href=\"#devid\">devid</a>];", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Build command */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#cmd\">cmd</a>, 0, sizeof(<a class=\"id\" href=\"#cmd\">cmd</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CMD_SET_TYPE\">CMD_SET_TYPE</a>(&amp;<a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#CMD_INV_DEV_ENTRY\">CMD_INV_DEV_ENTRY</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cmd\">cmd</a>.<a class=\"id\" href=\"#data\">data</a>[0] = <a class=\"id\" href=\"#devid\">devid</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#iommu_queue_command\">iommu_queue_command</a>(<a class=\"id\" href=\"#iommu\">iommu</a>, &amp;<a class=\"id\" href=\"#cmd\">cmd</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__iommu_build_inv_iommu_pages\">__iommu_build_inv_iommu_pages</a>(struct <a class=\"id\" href=\"#iommu_cmd\">iommu_cmd</a> *<a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#address\">address</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#domid\">domid</a>, int <a class=\"id\" href=\"#pde\">pde</a>, int <a class=\"id\" href=\"#s\">s</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#cmd\">cmd</a>, 0, sizeof(*<a class=\"id\" href=\"#cmd\">cmd</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#address\">address</a> &= <a class=\"id\" href=\"#PAGE_MASK\">PAGE_MASK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CMD_SET_TYPE\">CMD_SET_TYPE</a>(<a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#CMD_INV_IOMMU_PAGES\">CMD_INV_IOMMU_PAGES</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cmd\">cmd</a>-><a class=\"id\" href=\"#data\">data</a>[1] |= <a class=\"id\" href=\"#domid\">domid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cmd\">cmd</a>-><a class=\"id\" href=\"#data\">data</a>[2] = <a class=\"id\" href=\"#lower_32_bits\">lower_32_bits</a>(<a class=\"id\" href=\"#address\">address</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cmd\">cmd</a>-><a class=\"id\" href=\"#data\">data</a>[3] = <a class=\"id\" href=\"#upper_32_bits\">upper_32_bits</a>(<a class=\"id\" href=\"#address\">address</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#s\">s</a>) <span class=\"comment\">/* size bit - we flush more than one 4kb page */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmd\">cmd</a>-><a class=\"id\" href=\"#data\">data</a>[2] |= <a class=\"id\" href=\"#CMD_INV_IOMMU_PAGES_SIZE_MASK\">CMD_INV_IOMMU_PAGES_SIZE_MASK</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pde\">pde</a>) <span class=\"comment\">/* PDE bit - we wan't flush everything not only the PTEs */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmd\">cmd</a>-><a class=\"id\" href=\"#data\">data</a>[2] |= <a class=\"id\" href=\"#CMD_INV_IOMMU_PAGES_PDE_MASK\">CMD_INV_IOMMU_PAGES_PDE_MASK</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Generic command send function for invalidaing TLB entries</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#iommu_queue_inv_iommu_pages\">iommu_queue_inv_iommu_pages</a>(struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a> *<a class=\"id\" href=\"#iommu\">iommu</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#domid\">domid</a>, int <a class=\"id\" href=\"#pde\">pde</a>, int <a class=\"id\" href=\"#s\">s</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iommu_cmd\">iommu_cmd</a> <a class=\"id\" href=\"#cmd\">cmd</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__iommu_build_inv_iommu_pages\">__iommu_build_inv_iommu_pages</a>(&amp;<a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#domid\">domid</a>, <a class=\"id\" href=\"#pde\">pde</a>, <a class=\"id\" href=\"#s\">s</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#iommu_queue_command\">iommu_queue_command</a>(<a class=\"id\" href=\"#iommu\">iommu</a>, &amp;<a class=\"id\" href=\"#cmd\">cmd</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * TLB invalidation function which is called from the mapping functions.</span>", 
"<span class=\"comment\"> * It invalidates a single PTE if the range to flush is within a single</span>", 
"<span class=\"comment\"> * page. Otherwise it flushes the whole TLB of the IOMMU.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#__iommu_flush_pages\">__iommu_flush_pages</a>(struct <a class=\"id\" href=\"#protection_domain\">protection_domain</a> *<a class=\"id\" href=\"#domain\">domain</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>, int <a class=\"id\" href=\"#pde\">pde</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#s\">s</a> = 0, <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#pages\">pages</a> = <a class=\"id\" href=\"#iommu_num_pages\">iommu_num_pages</a>(<a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#address\">address</a> &= <a class=\"id\" href=\"#PAGE_MASK\">PAGE_MASK</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pages\">pages</a> &gt; 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If we have to flush more than one page, flush all</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * TLB entries for this domain</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#address\">address</a> = <a class=\"id\" href=\"#CMD_INV_IOMMU_ALL_PAGES_ADDRESS\">CMD_INV_IOMMU_ALL_PAGES_ADDRESS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a> = 1;", 
"<span class=\"ts\"/>}", 
"", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#amd_iommus_present\">amd_iommus_present</a>; ++<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#domain\">domain</a>-><a class=\"id\" href=\"#dev_iommu\">dev_iommu</a>[<a class=\"id\" href=\"#i\">i</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Devices of this domain are behind this IOMMU</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We need a TLB flush</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iommu_queue_inv_iommu_pages\">iommu_queue_inv_iommu_pages</a>(<a class=\"id\" href=\"#amd_iommus\">amd_iommus</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#address\">address</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#domain\">domain</a>-><a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#pde\">pde</a>, <a class=\"id\" href=\"#s\">s</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#iommu_flush_pages\">iommu_flush_pages</a>(struct <a class=\"id\" href=\"#protection_domain\">protection_domain</a> *<a class=\"id\" href=\"#domain\">domain</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__iommu_flush_pages\">__iommu_flush_pages</a>(<a class=\"id\" href=\"#domain\">domain</a>, <a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#size\">size</a>, 0);", 
"}", 
"", 
"<span class=\"comment\">/* Flush the whole IO/TLB for a given protection domain */</span>", 
"static void <a class=\"id\" href=\"#iommu_flush_tlb\">iommu_flush_tlb</a>(struct <a class=\"id\" href=\"#protection_domain\">protection_domain</a> *<a class=\"id\" href=\"#domain\">domain</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__iommu_flush_pages\">__iommu_flush_pages</a>(<a class=\"id\" href=\"#domain\">domain</a>, 0, <a class=\"id\" href=\"#CMD_INV_IOMMU_ALL_PAGES_ADDRESS\">CMD_INV_IOMMU_ALL_PAGES_ADDRESS</a>, 0);", 
"}", 
"", 
"<span class=\"comment\">/* Flush the whole IO/TLB for a given protection domain - including PDE */</span>", 
"static void <a class=\"id\" href=\"#iommu_flush_tlb_pde\">iommu_flush_tlb_pde</a>(struct <a class=\"id\" href=\"#protection_domain\">protection_domain</a> *<a class=\"id\" href=\"#domain\">domain</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__iommu_flush_pages\">__iommu_flush_pages</a>(<a class=\"id\" href=\"#domain\">domain</a>, 0, <a class=\"id\" href=\"#CMD_INV_IOMMU_ALL_PAGES_ADDRESS\">CMD_INV_IOMMU_ALL_PAGES_ADDRESS</a>, 1);", 
"}", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This function flushes the DTEs for all devices in domain</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#iommu_flush_domain_devices\">iommu_flush_domain_devices</a>(struct <a class=\"id\" href=\"#protection_domain\">protection_domain</a> *<a class=\"id\" href=\"#domain\">domain</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iommu_dev_data\">iommu_dev_data</a> *<a class=\"id\" href=\"#dev_data\">dev_data</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#domain\">domain</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#dev_data\">dev_data</a>, &amp;<a class=\"id\" href=\"#domain\">domain</a>-><a class=\"id\" href=\"#dev_list\">dev_list</a>, <a class=\"id\" href=\"#list\">list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iommu_flush_device\">iommu_flush_device</a>(<a class=\"id\" href=\"#dev_data\">dev_data</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#domain\">domain</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#iommu_flush_all_domain_devices\">iommu_flush_all_domain_devices</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#protection_domain\">protection_domain</a> *<a class=\"id\" href=\"#domain\">domain</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#amd_iommu_pd_lock\">amd_iommu_pd_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#domain\">domain</a>, &amp;<a class=\"id\" href=\"#amd_iommu_pd_list\">amd_iommu_pd_list</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iommu_flush_domain_devices\">iommu_flush_domain_devices</a>(<a class=\"id\" href=\"#domain\">domain</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iommu_flush_complete\">iommu_flush_complete</a>(<a class=\"id\" href=\"#domain\">domain</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#amd_iommu_pd_lock\">amd_iommu_pd_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#amd_iommu_flush_all_devices\">amd_iommu_flush_all_devices</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iommu_flush_all_domain_devices\">iommu_flush_all_domain_devices</a>();", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This function uses heavy locking and may disable irqs for some time. But</span>", 
"<span class=\"comment\"> * this is no issue because it is only called during resume.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#amd_iommu_flush_all_domains\">amd_iommu_flush_all_domains</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#protection_domain\">protection_domain</a> *<a class=\"id\" href=\"#domain\">domain</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#amd_iommu_pd_lock\">amd_iommu_pd_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#domain\">domain</a>, &amp;<a class=\"id\" href=\"#amd_iommu_pd_list\">amd_iommu_pd_list</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#domain\">domain</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iommu_flush_tlb_pde\">iommu_flush_tlb_pde</a>(<a class=\"id\" href=\"#domain\">domain</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iommu_flush_complete\">iommu_flush_complete</a>(<a class=\"id\" href=\"#domain\">domain</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#domain\">domain</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#amd_iommu_pd_lock\">amd_iommu_pd_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#reset_iommu_command_buffer\">reset_iommu_command_buffer</a>(struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a> *<a class=\"id\" href=\"#iommu\">iommu</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(\"AMD-Vi: Resetting IOMMU command buffer\\n\");", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#reset_in_progress\">reset_in_progress</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"AMD-Vi: ILLEGAL_COMMAND_ERROR while resetting command buffer\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#amd_iommu_reset_cmd_buffer\">amd_iommu_reset_cmd_buffer</a>(<a class=\"id\" href=\"#iommu\">iommu</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#amd_iommu_flush_all_devices\">amd_iommu_flush_all_devices</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#amd_iommu_flush_all_domains\">amd_iommu_flush_all_domains</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#reset_in_progress\">reset_in_progress</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"}", 
"", 
"<span class=\"comment\">/****************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The functions below are used the create the page table mappings for</span>", 
"<span class=\"comment\"> * unity mapped regions.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ****************************************************************************/</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This function is used to add another level to an IO page table. Adding</span>", 
"<span class=\"comment\"> * another level increases the size of the address space by 9 bits to a size up</span>", 
"<span class=\"comment\"> * to 64 bits.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#increase_address_space\">increase_address_space</a>(struct <a class=\"id\" href=\"#protection_domain\">protection_domain</a> *<a class=\"id\" href=\"#domain\">domain</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp\">gfp</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> *<a class=\"id\" href=\"#pte\">pte</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#domain\">domain</a>-><a class=\"id\" href=\"#mode\">mode</a> == <a class=\"id\" href=\"#PAGE_MODE_6_LEVEL\">PAGE_MODE_6_LEVEL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* address space already 64 bit large */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte\">pte</a> = (void *)<a class=\"id\" href=\"#get_zeroed_page\">get_zeroed_page</a>(<a class=\"id\" href=\"#gfp\">gfp</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pte\">pte</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#pte\">pte</a>             = <a class=\"id\" href=\"#PM_LEVEL_PDE\">PM_LEVEL_PDE</a>(<a class=\"id\" href=\"#domain\">domain</a>-><a class=\"id\" href=\"#mode\">mode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#virt_to_phys\">virt_to_phys</a>(<a class=\"id\" href=\"#domain\">domain</a>-><a class=\"id\" href=\"#pt_root\">pt_root</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#domain\">domain</a>-><a class=\"id\" href=\"#pt_root\">pt_root</a>  = <a class=\"id\" href=\"#pte\">pte</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#domain\">domain</a>-><a class=\"id\" href=\"#mode\">mode</a>    += 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#domain\">domain</a>-><a class=\"id\" href=\"#updated\">updated</a>  = <a class=\"id\" href=\"#true\">true</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#true\">true</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#u64\">u64</a> *<a class=\"id\" href=\"#alloc_pte\">alloc_pte</a>(struct <a class=\"id\" href=\"#protection_domain\">protection_domain</a> *<a class=\"id\" href=\"#domain\">domain</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      unsigned long <a class=\"id\" href=\"#address\">address</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      unsigned long <a class=\"id\" href=\"#page_size\">page_size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#u64\">u64</a> **<a class=\"id\" href=\"#pte_page\">pte_page</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp\">gfp</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#level\">level</a>, <a class=\"id\" href=\"#end_lvl\">end_lvl</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> *<a class=\"id\" href=\"#pte\">pte</a>, *<a class=\"id\" href=\"#page\">page</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#is_power_of_2\">is_power_of_2</a>(<a class=\"id\" href=\"#page_size\">page_size</a>));", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#address\">address</a> &gt; <a class=\"id\" href=\"#PM_LEVEL_SIZE\">PM_LEVEL_SIZE</a>(<a class=\"id\" href=\"#domain\">domain</a>-><a class=\"id\" href=\"#mode\">mode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#increase_address_space\">increase_address_space</a>(<a class=\"id\" href=\"#domain\">domain</a>, <a class=\"id\" href=\"#gfp\">gfp</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#level\">level</a>   = <a class=\"id\" href=\"#domain\">domain</a>-><a class=\"id\" href=\"#mode\">mode</a> - 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte\">pte</a>     = &amp;<a class=\"id\" href=\"#domain\">domain</a>-><a class=\"id\" href=\"#pt_root\">pt_root</a>[<a class=\"id\" href=\"#PM_LEVEL_INDEX\">PM_LEVEL_INDEX</a>(<a class=\"id\" href=\"#level\">level</a>, <a class=\"id\" href=\"#address\">address</a>)];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#address\">address</a> = <a class=\"id\" href=\"#PAGE_SIZE_ALIGN\">PAGE_SIZE_ALIGN</a>(<a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#page_size\">page_size</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end_lvl\">end_lvl</a> = <a class=\"id\" href=\"#PAGE_SIZE_LEVEL\">PAGE_SIZE_LEVEL</a>(<a class=\"id\" href=\"#page_size\">page_size</a>);", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#level\">level</a> &gt; <a class=\"id\" href=\"#end_lvl\">end_lvl</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#IOMMU_PTE_PRESENT\">IOMMU_PTE_PRESENT</a>(*<a class=\"id\" href=\"#pte\">pte</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = (<a class=\"id\" href=\"#u64\">u64</a> *)<a class=\"id\" href=\"#get_zeroed_page\">get_zeroed_page</a>(<a class=\"id\" href=\"#gfp\">gfp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#page\">page</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#pte\">pte</a> = <a class=\"id\" href=\"#PM_LEVEL_PDE\">PM_LEVEL_PDE</a>(<a class=\"id\" href=\"#level\">level</a>, <a class=\"id\" href=\"#virt_to_phys\">virt_to_phys</a>(<a class=\"id\" href=\"#page\">page</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* No level skipping support yet */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#PM_PTE_LEVEL\">PM_PTE_LEVEL</a>(*<a class=\"id\" href=\"#pte\">pte</a>) != <a class=\"id\" href=\"#level\">level</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#level\">level</a> -= 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pte\">pte</a> = <a class=\"id\" href=\"#IOMMU_PTE_PAGE\">IOMMU_PTE_PAGE</a>(*<a class=\"id\" href=\"#pte\">pte</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pte_page\">pte_page</a> && <a class=\"id\" href=\"#level\">level</a> == <a class=\"id\" href=\"#end_lvl\">end_lvl</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#pte_page\">pte_page</a> = <a class=\"id\" href=\"#pte\">pte</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pte\">pte</a> = &amp;<a class=\"id\" href=\"#pte\">pte</a>[<a class=\"id\" href=\"#PM_LEVEL_INDEX\">PM_LEVEL_INDEX</a>(<a class=\"id\" href=\"#level\">level</a>, <a class=\"id\" href=\"#address\">address</a>)];", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pte\">pte</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This function checks if there is a PTE for a given dma address. If</span>", 
"<span class=\"comment\"> * there is one, it returns the pointer to it.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#u64\">u64</a> *<a class=\"id\" href=\"#fetch_pte\">fetch_pte</a>(struct <a class=\"id\" href=\"#protection_domain\">protection_domain</a> *<a class=\"id\" href=\"#domain\">domain</a>, unsigned long <a class=\"id\" href=\"#address\">address</a>)", 
"{", 
];
xr_frag_insert('l/86/b0ee6b378e49929d7f03f0ab5537e5c245f00b.xr', __xr_tmp);
