var __xr_tmp = [
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#confused\">confused</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The page has no buffers: map it to disk</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#PageUptodate\">PageUptodate</a>(<a class=\"id\" href=\"#page\">page</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#block_in_file\">block_in_file</a> = (<a class=\"id\" href=\"#sector_t\">sector_t</a>)<a class=\"id\" href=\"#page\">page</a>-><a class=\"id\" href=\"#index\">index</a> << (<a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a> - <a class=\"id\" href=\"#blkbits\">blkbits</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#last_block\">last_block</a> = (<a class=\"id\" href=\"#i_size\">i_size</a> - 1) >> <a class=\"id\" href=\"#blkbits\">blkbits</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#map_bh\">map_bh</a>.<a class=\"id\" href=\"#b_page\">b_page</a> = <a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#page_block\">page_block</a> = 0; <a class=\"id\" href=\"#page_block\">page_block</a> &lt; <a class=\"id\" href=\"#blocks_per_page\">blocks_per_page</a>; ) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#map_bh\">map_bh</a>.<a class=\"id\" href=\"#b_state\">b_state</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#map_bh\">map_bh</a>.<a class=\"id\" href=\"#b_size\">b_size</a> = 1 << <a class=\"id\" href=\"#blkbits\">blkbits</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#get_block\">get_block</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#block_in_file\">block_in_file</a>, &amp;<a class=\"id\" href=\"#map_bh\">map_bh</a>, 1))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#confused\">confused</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#buffer_new\">buffer_new</a>(&amp;<a class=\"id\" href=\"#map_bh\">map_bh</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unmap_underlying_metadata\">unmap_underlying_metadata</a>(<a class=\"id\" href=\"#map_bh\">map_bh</a>.<a class=\"id\" href=\"#b_bdev\">b_bdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#map_bh\">map_bh</a>.<a class=\"id\" href=\"#b_blocknr\">b_blocknr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#buffer_boundary\">buffer_boundary</a>(&amp;<a class=\"id\" href=\"#map_bh\">map_bh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#boundary_block\">boundary_block</a> = <a class=\"id\" href=\"#map_bh\">map_bh</a>.<a class=\"id\" href=\"#b_blocknr\">b_blocknr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#boundary_bdev\">boundary_bdev</a> = <a class=\"id\" href=\"#map_bh\">map_bh</a>.<a class=\"id\" href=\"#b_bdev\">b_bdev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#page_block\">page_block</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#map_bh\">map_bh</a>.<a class=\"id\" href=\"#b_blocknr\">b_blocknr</a> != <a class=\"id\" href=\"#blocks\">blocks</a>[<a class=\"id\" href=\"#page_block\">page_block</a>-1] + 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#confused\">confused</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blocks\">blocks</a>[<a class=\"id\" href=\"#page_block\">page_block</a>++] = <a class=\"id\" href=\"#map_bh\">map_bh</a>.<a class=\"id\" href=\"#b_blocknr\">b_blocknr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#boundary\">boundary</a> = <a class=\"id\" href=\"#buffer_boundary\">buffer_boundary</a>(&amp;<a class=\"id\" href=\"#map_bh\">map_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bdev\">bdev</a> = <a class=\"id\" href=\"#map_bh\">map_bh</a>.<a class=\"id\" href=\"#b_bdev\">b_bdev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#block_in_file\">block_in_file</a> == <a class=\"id\" href=\"#last_block\">last_block</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#block_in_file\">block_in_file</a>++;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#page_block\">page_block</a> == 0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#first_unmapped\">first_unmapped</a> = <a class=\"id\" href=\"#page_block\">page_block</a>;", 
"", 
"<a class=\"id\" href=\"#page_is_mapped\">page_is_mapped</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end_index\">end_index</a> = <a class=\"id\" href=\"#i_size\">i_size</a> >> <a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#page\">page</a>-><a class=\"id\" href=\"#index\">index</a> >= <a class=\"id\" href=\"#end_index\">end_index</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The page straddles i_size.  It must be zeroed out on each</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * and every writepage invocation because it may be mmapped.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * \"A file is mapped in multiples of the page size.  For a file</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * that is not a multiple of the page size, the remaining memory</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * is zeroed when mapped, and writes to that region are not</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * written out to the file.\"</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned <a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#i_size\">i_size</a> &amp; (<a class=\"id\" href=\"#PAGE_CACHE_SIZE\">PAGE_CACHE_SIZE</a> - 1);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#page\">page</a>-><a class=\"id\" href=\"#index\">index</a> &gt; <a class=\"id\" href=\"#end_index\">end_index</a> || !<a class=\"id\" href=\"#offset\">offset</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#confused\">confused</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#zero_user_segment\">zero_user_segment</a>(<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#PAGE_CACHE_SIZE\">PAGE_CACHE_SIZE</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This page will go to BIO.  Do we need to send this BIO off first?</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bio\">bio</a> && <a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#last_block_in_bio\">last_block_in_bio</a> != <a class=\"id\" href=\"#blocks\">blocks</a>[0] - 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#mpage_bio_submit\">mpage_bio_submit</a>(<a class=\"id\" href=\"#WRITE\">WRITE</a>, <a class=\"id\" href=\"#bio\">bio</a>);", 
"", 
"<a class=\"id\" href=\"#alloc_new\">alloc_new</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bio\">bio</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#mpage_alloc\">mpage_alloc</a>(<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#blocks\">blocks</a>[0] << (<a class=\"id\" href=\"#blkbits\">blkbits</a> - 9),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio_get_nr_vecs\">bio_get_nr_vecs</a>(<a class=\"id\" href=\"#bdev\">bdev</a>), <a class=\"id\" href=\"#GFP_NOFS\">GFP_NOFS</a>|<a class=\"id\" href=\"#__GFP_HIGH\">__GFP_HIGH</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#bio\">bio</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#confused\">confused</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Must try to add the page before marking the buffer clean or</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the confused fail path above (OOM) will be very confused when</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * it finds all bh marked clean (i.e. it will not write anything)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#first_unmapped\">first_unmapped</a> << <a class=\"id\" href=\"#blkbits\">blkbits</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bio_add_page\">bio_add_page</a>(<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#length\">length</a>, 0) &lt; <a class=\"id\" href=\"#length\">length</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#mpage_bio_submit\">mpage_bio_submit</a>(<a class=\"id\" href=\"#WRITE\">WRITE</a>, <a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#alloc_new\">alloc_new</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * OK, we have our BIO, so we can now mark the buffers clean.  Make</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * sure to only clean buffers which we know we'll be writing.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#page_has_buffers\">page_has_buffers</a>(<a class=\"id\" href=\"#page\">page</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#page_buffers\">page_buffers</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned <a class=\"id\" href=\"#buffer_counter\">buffer_counter</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#buffer_counter\">buffer_counter</a>++ == <a class=\"id\" href=\"#first_unmapped\">first_unmapped</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_buffer_dirty\">clear_buffer_dirty</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_this_page\">b_this_page</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} while (<a class=\"id\" href=\"#bh\">bh</a> != <a class=\"id\" href=\"#head\">head</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * we cannot drop the bh if the page is not uptodate</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * or a concurrent readpage would fail to serialize with the bh</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * and it would read from disk before we reach the platter.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#buffer_heads_over_limit\">buffer_heads_over_limit</a> && <a class=\"id\" href=\"#PageUptodate\">PageUptodate</a>(<a class=\"id\" href=\"#page\">page</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#try_to_free_buffers\">try_to_free_buffers</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#PageWriteback\">PageWriteback</a>(<a class=\"id\" href=\"#page\">page</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_page_writeback\">set_page_writeback</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_page\">unlock_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#boundary\">boundary</a> || (<a class=\"id\" href=\"#first_unmapped\">first_unmapped</a> != <a class=\"id\" href=\"#blocks_per_page\">blocks_per_page</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#mpage_bio_submit\">mpage_bio_submit</a>(<a class=\"id\" href=\"#WRITE\">WRITE</a>, <a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#boundary_block\">boundary_block</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_boundary_block\">write_boundary_block</a>(<a class=\"id\" href=\"#boundary_bdev\">boundary_bdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#boundary_block\">boundary_block</a>, 1 << <a class=\"id\" href=\"#blkbits\">blkbits</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#last_block_in_bio\">last_block_in_bio</a> = <a class=\"id\" href=\"#blocks\">blocks</a>[<a class=\"id\" href=\"#blocks_per_page\">blocks_per_page</a> - 1];", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<a class=\"id\" href=\"#confused\">confused</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bio\">bio</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#mpage_bio_submit\">mpage_bio_submit</a>(<a class=\"id\" href=\"#WRITE\">WRITE</a>, <a class=\"id\" href=\"#bio\">bio</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#use_writepage\">use_writepage</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#mapping\">mapping</a>-><a class=\"id\" href=\"#a_ops\">a_ops</a>-><a class=\"id\" href=\"#writepage\">writepage</a>(<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#wbc\">wbc</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The caller has a ref on the inode, so *mapping is stable</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mapping_set_error\">mapping_set_error</a>(<a class=\"id\" href=\"#mapping\">mapping</a>, <a class=\"id\" href=\"#ret\">ret</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mpd\">mpd</a>-><a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#bio\">bio</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * mpage_writepages - walk the list of dirty pages of the given address space &amp; writepage() all of them</span>", 
"<span class=\"comment\"> * @mapping: address space structure to write</span>", 
"<span class=\"comment\"> * @wbc: subtract the number of written pages from *@wbc-&gt;nr_to_write</span>", 
"<span class=\"comment\"> * @get_block: the filesystem's block mapper function.</span>", 
"<span class=\"comment\"> *             If this is NULL then use a_ops-&gt;writepage.  Otherwise, go</span>", 
"<span class=\"comment\"> *             direct-to-BIO.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is a library function, which implements the writepages()</span>", 
"<span class=\"comment\"> * address_space_operation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If a page is already under I/O, generic_writepages() skips it, even</span>", 
"<span class=\"comment\"> * if it's dirty.  This is desirable behaviour for memory-cleaning writeback,</span>", 
"<span class=\"comment\"> * but it is INCORRECT for data-integrity system calls such as fsync().  fsync()</span>", 
"<span class=\"comment\"> * and msync() need to guarantee that all the data which was dirty at the time</span>", 
"<span class=\"comment\"> * the call was made get new I/O started against them.  If wbc-&gt;sync_mode is</span>", 
"<span class=\"comment\"> * WB_SYNC_ALL then we were called for data integrity and we must wait for</span>", 
"<span class=\"comment\"> * existing IO to complete.</span>", 
"<span class=\"comment\"> */</span>", 
"int", 
"<a class=\"id\" href=\"#mpage_writepages\">mpage_writepages</a>(struct <a class=\"id\" href=\"#address_space\">address_space</a> *<a class=\"id\" href=\"#mapping\">mapping</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#writeback_control\">writeback_control</a> *<a class=\"id\" href=\"#wbc\">wbc</a>, <a class=\"id\" href=\"#get_block_t\">get_block_t</a> <a class=\"id\" href=\"#get_block\">get_block</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#get_block\">get_block</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#generic_writepages\">generic_writepages</a>(<a class=\"id\" href=\"#mapping\">mapping</a>, <a class=\"id\" href=\"#wbc\">wbc</a>);", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#mpage_data\">mpage_data</a> <a class=\"id\" href=\"#mpd\">mpd</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#last_block_in_bio\">last_block_in_bio</a> = 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#get_block\">get_block</a> = <a class=\"id\" href=\"#get_block\">get_block</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#use_writepage\">use_writepage</a> = 1,", 
"<span class=\"ts\"/><span class=\"ts\"/>};", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#write_cache_pages\">write_cache_pages</a>(<a class=\"id\" href=\"#mapping\">mapping</a>, <a class=\"id\" href=\"#wbc\">wbc</a>, <a class=\"id\" href=\"#__mpage_writepage\">__mpage_writepage</a>, &amp;<a class=\"id\" href=\"#mpd\">mpd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mpd\">mpd</a>.<a class=\"id\" href=\"#bio\">bio</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mpage_bio_submit\">mpage_bio_submit</a>(<a class=\"id\" href=\"#WRITE\">WRITE</a>, <a class=\"id\" href=\"#mpd\">mpd</a>.<a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#mpage_writepages\">mpage_writepages</a>);", 
"", 
"int <a class=\"id\" href=\"#mpage_writepage\">mpage_writepage</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#get_block_t\">get_block_t</a> <a class=\"id\" href=\"#get_block\">get_block</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#writeback_control\">writeback_control</a> *<a class=\"id\" href=\"#wbc\">wbc</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mpage_data\">mpage_data</a> <a class=\"id\" href=\"#mpd\">mpd</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#last_block_in_bio\">last_block_in_bio</a> = 0,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#get_block\">get_block</a> = <a class=\"id\" href=\"#get_block\">get_block</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#use_writepage\">use_writepage</a> = 0,", 
"<span class=\"ts\"/>};", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#__mpage_writepage\">__mpage_writepage</a>(<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#wbc\">wbc</a>, &amp;<a class=\"id\" href=\"#mpd\">mpd</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mpd\">mpd</a>.<a class=\"id\" href=\"#bio\">bio</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mpage_bio_submit\">mpage_bio_submit</a>(<a class=\"id\" href=\"#WRITE\">WRITE</a>, <a class=\"id\" href=\"#mpd\">mpd</a>.<a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#mpage_writepage\">mpage_writepage</a>);", 
];
xr_frag_insert('l/86/f55e5db2cbc2cc0ddcbfd925595f0f4c0041c7.xr', __xr_tmp);
