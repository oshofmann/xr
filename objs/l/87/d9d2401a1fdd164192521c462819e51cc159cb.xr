var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_SCSI_SCSI_CMND_H\">_SCSI_SCSI_CMND_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_SCSI_SCSI_CMND_H\">_SCSI_SCSI_CMND_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#dma\">dma</a>-<a class=\"id\" href=\"#mapping\">mapping</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blkdev\">blkdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#scatterlist\">scatterlist</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#Scsi_Host\">Scsi_Host</a>;", 
"struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * MAX_COMMAND_SIZE is:</span>", 
"<span class=\"comment\"> * The longest fixed-length SCSI CDB as per the SCSI standard.</span>", 
"<span class=\"comment\"> * fixed-length means: commands that their size can be determined</span>", 
"<span class=\"comment\"> * by their opcode and the CDB does not carry a length specifier, (unlike</span>", 
"<span class=\"comment\"> * the VARIABLE_LENGTH_CMD(0x7f) command). This is actually not exactly</span>", 
"<span class=\"comment\"> * true and the SCSI standard also defines extended commands and</span>", 
"<span class=\"comment\"> * vendor specific commands that can be bigger than 16 bytes. The kernel</span>", 
"<span class=\"comment\"> * will support these using the same infrastructure used for VARLEN CDB's.</span>", 
"<span class=\"comment\"> * So in effect MAX_COMMAND_SIZE means the maximum size command scsi-ml</span>", 
"<span class=\"comment\"> * supports without specifying a cmd_len by ULD's</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_COMMAND_SIZE\">MAX_COMMAND_SIZE</a> 16", 
"#if (<a class=\"id\" href=\"#MAX_COMMAND_SIZE\">MAX_COMMAND_SIZE</a> &gt; <a class=\"id\" href=\"#BLK_MAX_CDB\">BLK_MAX_CDB</a>)", 
"# <a class=\"id\" href=\"#error\">error</a> <a class=\"id\" href=\"#MAX_COMMAND_SIZE\">MAX_COMMAND_SIZE</a> <a class=\"id\" href=\"#can\">can</a> <a class=\"id\" href=\"#not\">not</a> <a class=\"id\" href=\"#be\">be</a> <a class=\"id\" href=\"#bigger\">bigger</a> <a class=\"id\" href=\"#than\">than</a> <a class=\"id\" href=\"#BLK_MAX_CDB\">BLK_MAX_CDB</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"struct <a class=\"id\" href=\"#scsi_data_buffer\">scsi_data_buffer</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sg_table\">sg_table</a> <a class=\"id\" href=\"#table\">table</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#resid\">resid</a>;", 
"};", 
"", 
"<span class=\"comment\">/* embedded in scsi_cmnd */</span>", 
"struct <a class=\"id\" href=\"#scsi_pointer\">scsi_pointer</a> {", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#ptr\">ptr</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* data pointer */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#this_residual\">this_residual</a>;<span class=\"ts\"/><span class=\"comment\">/* left in this buffer */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#buffer\">buffer</a>;<span class=\"ts\"/><span class=\"comment\">/* which buffer */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#buffers_residual\">buffers_residual</a>;<span class=\"ts\"/><span class=\"comment\">/* how many buffers left */</span>", 
"", 
"        <a class=\"id\" href=\"#dma_addr_t\">dma_addr_t</a> <a class=\"id\" href=\"#dma_handle\">dma_handle</a>;", 
"", 
"<span class=\"ts\"/>volatile int <a class=\"id\" href=\"#Status\">Status</a>;", 
"<span class=\"ts\"/>volatile int <a class=\"id\" href=\"#Message\">Message</a>;", 
"<span class=\"ts\"/>volatile int <a class=\"id\" href=\"#have_data_in\">have_data_in</a>;", 
"<span class=\"ts\"/>volatile int <a class=\"id\" href=\"#sent_command\">sent_command</a>;", 
"<span class=\"ts\"/>volatile int <a class=\"id\" href=\"#phase\">phase</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#device\">device</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#list\">list</a>;  <span class=\"comment\">/* scsi_cmnd participates in queue lists */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#eh_entry\">eh_entry</a>; <span class=\"comment\">/* entry for the host eh_cmd_q */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#eh_eflags\">eh_eflags</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Used by error handlr */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * A SCSI Command is assigned a nonzero serial_number before passed</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to the driver's queue command function.  The serial_number is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * cleared when scsi_done is entered indicating that the command</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * has been completed.  It is a bug for LLDDs to use this number</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * for purposes other than printk (and even that is only useful</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * for debugging).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#serial_number\">serial_number</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This is set to jiffies as it was when the command was first</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * allocated.  It is used to time how long the command has</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * been outstanding</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#jiffies_at_alloc\">jiffies_at_alloc</a>;", 
"", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retries\">retries</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#allowed\">allowed</a>;", 
"", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#prot_op\">prot_op</a>;", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#prot_type\">prot_type</a>;", 
"", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#cmd_len\">cmd_len</a>;", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#dma_data_direction\">dma_data_direction</a> <a class=\"id\" href=\"#sc_data_direction\">sc_data_direction</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* These elements define the operation we are about to perform */</span>", 
"<span class=\"ts\"/>unsigned char *<a class=\"id\" href=\"#cmnd\">cmnd</a>;", 
"", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* These elements define the operation we ultimately want to perform */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_data_buffer\">scsi_data_buffer</a> <a class=\"id\" href=\"#sdb\">sdb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_data_buffer\">scsi_data_buffer</a> *<a class=\"id\" href=\"#prot_sdb\">prot_sdb</a>;", 
"", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#underflow\">underflow</a>;<span class=\"ts\"/><span class=\"comment\">/* Return error if less than</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   this amount is transferred */</span>", 
"", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#transfersize\">transfersize</a>;<span class=\"ts\"/><span class=\"comment\">/* How much we are guaranteed to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   transfer with each SCSI transfer</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (ie, between disconnect / </span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   reconnects.   Probably == sector</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   size */</span>", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#request\">request</a>;<span class=\"ts\"/><span class=\"comment\">/* The command we are</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <span class=\"ts\"/>   working on */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SCSI_SENSE_BUFFERSIZE\">SCSI_SENSE_BUFFERSIZE</a> <span class=\"ts\"/>96", 
"<span class=\"ts\"/>unsigned char *<a class=\"id\" href=\"#sense_buffer\">sense_buffer</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* obtained by REQUEST SENSE when</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * CHECK CONDITION is received on original</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * command (auto-sense) */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Low-level done function - can be used by low-level driver to point</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *        to completion function.  Not used by mid/upper level code. */</span>", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#scsi_done\">scsi_done</a>) (struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The following fields can be written to by the host specific code. </span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Everything else should be left alone. </span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_pointer\">scsi_pointer</a> <a class=\"id\" href=\"#SCp\">SCp</a>;<span class=\"ts\"/><span class=\"comment\">/* Scratchpad used by some host adapters */</span>", 
"", 
"<span class=\"ts\"/>unsigned char *<a class=\"id\" href=\"#host_scribble\">host_scribble</a>;<span class=\"ts\"/><span class=\"comment\">/* The host adapter is allowed to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * call scsi_malloc and get some memory</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * and hang it here.  The host adapter</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * is also expected to call scsi_free</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * to release this memory.  (The memory</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * obtained by scsi_malloc is guaranteed</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * to be at an address &lt; 16Mb). */</span>", 
"", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Status code from lower level driver */</span>", 
"", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#tag\">tag</a>;<span class=\"ts\"/><span class=\"comment\">/* SCSI-II queued command tag */</span>", 
"};", 
"", 
"extern struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#scsi_get_command\">scsi_get_command</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *, <a class=\"id\" href=\"#gfp_t\">gfp_t</a>);", 
"extern struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#__scsi_get_command\">__scsi_get_command</a>(struct <a class=\"id\" href=\"#Scsi_Host\">Scsi_Host</a> *, <a class=\"id\" href=\"#gfp_t\">gfp_t</a>);", 
"extern void <a class=\"id\" href=\"#scsi_put_command\">scsi_put_command</a>(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *);", 
"extern void <a class=\"id\" href=\"#__scsi_put_command\">__scsi_put_command</a>(struct <a class=\"id\" href=\"#Scsi_Host\">Scsi_Host</a> *, struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#device\">device</a> *);", 
"extern void <a class=\"id\" href=\"#scsi_finish_command\">scsi_finish_command</a>(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#cmd\">cmd</a>);", 
"", 
"extern void *<a class=\"id\" href=\"#scsi_kmap_atomic_sg\">scsi_kmap_atomic_sg</a>(struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#sg\">sg</a>, int <a class=\"id\" href=\"#sg_count\">sg_count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#size_t\">size_t</a> *<a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#size_t\">size_t</a> *<a class=\"id\" href=\"#len\">len</a>);", 
"extern void <a class=\"id\" href=\"#scsi_kunmap_atomic_sg\">scsi_kunmap_atomic_sg</a>(void *<a class=\"id\" href=\"#virt\">virt</a>);", 
"", 
"extern int <a class=\"id\" href=\"#scsi_init_io\">scsi_init_io</a>(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>);", 
"extern void <a class=\"id\" href=\"#scsi_release_buffers\">scsi_release_buffers</a>(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#cmd\">cmd</a>);", 
"", 
"extern int <a class=\"id\" href=\"#scsi_dma_map\">scsi_dma_map</a>(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#cmd\">cmd</a>);", 
"extern void <a class=\"id\" href=\"#scsi_dma_unmap\">scsi_dma_unmap</a>(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#cmd\">cmd</a>);", 
"", 
"struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#scsi_allocate_command\">scsi_allocate_command</a>(<a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>);", 
"void <a class=\"id\" href=\"#scsi_free_command\">scsi_free_command</a>(<a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>, struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#cmd\">cmd</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned <a class=\"id\" href=\"#scsi_sg_count\">scsi_sg_count</a>(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#cmd\">cmd</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cmd\">cmd</a>-><a class=\"id\" href=\"#sdb\">sdb</a>.<a class=\"id\" href=\"#table\">table</a>.<a class=\"id\" href=\"#nents\">nents</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#scsi_sglist\">scsi_sglist</a>(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#cmd\">cmd</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cmd\">cmd</a>-><a class=\"id\" href=\"#sdb\">sdb</a>.<a class=\"id\" href=\"#table\">table</a>.<a class=\"id\" href=\"#sgl\">sgl</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned <a class=\"id\" href=\"#scsi_bufflen\">scsi_bufflen</a>(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#cmd\">cmd</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cmd\">cmd</a>-><a class=\"id\" href=\"#sdb\">sdb</a>.<a class=\"id\" href=\"#length\">length</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#scsi_set_resid\">scsi_set_resid</a>(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#cmd\">cmd</a>, int <a class=\"id\" href=\"#resid\">resid</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cmd\">cmd</a>-><a class=\"id\" href=\"#sdb\">sdb</a>.<a class=\"id\" href=\"#resid\">resid</a> = <a class=\"id\" href=\"#resid\">resid</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#scsi_get_resid\">scsi_get_resid</a>(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#cmd\">cmd</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cmd\">cmd</a>-><a class=\"id\" href=\"#sdb\">sdb</a>.<a class=\"id\" href=\"#resid\">resid</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#scsi_for_each_sg\">scsi_for_each_sg</a>(<a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#sg\">sg</a>, <a class=\"id\" href=\"#nseg\">nseg</a>, <a class=\"id\" href=\"#__i\">__i</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_sg\">for_each_sg</a>(<a class=\"id\" href=\"#scsi_sglist\">scsi_sglist</a>(<a class=\"id\" href=\"#cmd\">cmd</a>), <a class=\"id\" href=\"#sg\">sg</a>, <a class=\"id\" href=\"#nseg\">nseg</a>, <a class=\"id\" href=\"#__i\">__i</a>)", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#scsi_bidi_cmnd\">scsi_bidi_cmnd</a>(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#cmd\">cmd</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#blk_bidi_rq\">blk_bidi_rq</a>(<a class=\"id\" href=\"#cmd\">cmd</a>-><a class=\"id\" href=\"#request\">request</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#cmd\">cmd</a>-><a class=\"id\" href=\"#request\">request</a>-><a class=\"id\" href=\"#next_rq\">next_rq</a>-><a class=\"id\" href=\"#special\">special</a> != <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#scsi_data_buffer\">scsi_data_buffer</a> *<a class=\"id\" href=\"#scsi_in\">scsi_in</a>(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#cmd\">cmd</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#scsi_bidi_cmnd\">scsi_bidi_cmnd</a>(<a class=\"id\" href=\"#cmd\">cmd</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmd\">cmd</a>-><a class=\"id\" href=\"#request\">request</a>-><a class=\"id\" href=\"#next_rq\">next_rq</a>-><a class=\"id\" href=\"#special\">special</a> : &amp;<a class=\"id\" href=\"#cmd\">cmd</a>-><a class=\"id\" href=\"#sdb\">sdb</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#scsi_data_buffer\">scsi_data_buffer</a> *<a class=\"id\" href=\"#scsi_out\">scsi_out</a>(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#cmd\">cmd</a>)", 
"{", 
"<span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#cmd\">cmd</a>-><a class=\"id\" href=\"#sdb\">sdb</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#scsi_sg_copy_from_buffer\">scsi_sg_copy_from_buffer</a>(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#cmd\">cmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   void *<a class=\"id\" href=\"#buf\">buf</a>, int <a class=\"id\" href=\"#buflen\">buflen</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sg_copy_from_buffer\">sg_copy_from_buffer</a>(<a class=\"id\" href=\"#scsi_sglist\">scsi_sglist</a>(<a class=\"id\" href=\"#cmd\">cmd</a>), <a class=\"id\" href=\"#scsi_sg_count\">scsi_sg_count</a>(<a class=\"id\" href=\"#cmd\">cmd</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#buflen\">buflen</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#scsi_sg_copy_to_buffer\">scsi_sg_copy_to_buffer</a>(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#cmd\">cmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> void *<a class=\"id\" href=\"#buf\">buf</a>, int <a class=\"id\" href=\"#buflen\">buflen</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sg_copy_to_buffer\">sg_copy_to_buffer</a>(<a class=\"id\" href=\"#scsi_sglist\">scsi_sglist</a>(<a class=\"id\" href=\"#cmd\">cmd</a>), <a class=\"id\" href=\"#scsi_sg_count\">scsi_sg_count</a>(<a class=\"id\" href=\"#cmd\">cmd</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#buflen\">buflen</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The operations below are hints that tell the controller driver how</span>", 
"<span class=\"comment\"> * to handle I/Os with DIF or similar types of protection information.</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#scsi_prot_operations\">scsi_prot_operations</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* Normal I/O */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_PROT_NORMAL\">SCSI_PROT_NORMAL</a> = 0,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* OS-HBA: Protected, HBA-Target: Unprotected */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_PROT_READ_INSERT\">SCSI_PROT_READ_INSERT</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_PROT_WRITE_STRIP\">SCSI_PROT_WRITE_STRIP</a>,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* OS-HBA: Unprotected, HBA-Target: Protected */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_PROT_READ_STRIP\">SCSI_PROT_READ_STRIP</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_PROT_WRITE_INSERT\">SCSI_PROT_WRITE_INSERT</a>,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* OS-HBA: Protected, HBA-Target: Protected */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_PROT_READ_PASS\">SCSI_PROT_READ_PASS</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_PROT_WRITE_PASS\">SCSI_PROT_WRITE_PASS</a>,", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#scsi_set_prot_op\">scsi_set_prot_op</a>(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#scmd\">scmd</a>, unsigned char <a class=\"id\" href=\"#op\">op</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scmd\">scmd</a>-><a class=\"id\" href=\"#prot_op\">prot_op</a> = <a class=\"id\" href=\"#op\">op</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned char <a class=\"id\" href=\"#scsi_get_prot_op\">scsi_get_prot_op</a>(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#scmd\">scmd</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#scmd\">scmd</a>-><a class=\"id\" href=\"#prot_op\">prot_op</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The controller usually does not know anything about the target it</span>", 
"<span class=\"comment\"> * is communicating with.  However, when DIX is enabled the controller</span>", 
"<span class=\"comment\"> * must be know target type so it can verify the protection</span>", 
"<span class=\"comment\"> * information passed along with the I/O.</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#scsi_prot_target_type\">scsi_prot_target_type</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_PROT_DIF_TYPE0\">SCSI_PROT_DIF_TYPE0</a> = 0,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_PROT_DIF_TYPE1\">SCSI_PROT_DIF_TYPE1</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_PROT_DIF_TYPE2\">SCSI_PROT_DIF_TYPE2</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCSI_PROT_DIF_TYPE3\">SCSI_PROT_DIF_TYPE3</a>,", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#scsi_set_prot_type\">scsi_set_prot_type</a>(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#scmd\">scmd</a>, unsigned char <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scmd\">scmd</a>-><a class=\"id\" href=\"#prot_type\">prot_type</a> = <a class=\"id\" href=\"#type\">type</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned char <a class=\"id\" href=\"#scsi_get_prot_type\">scsi_get_prot_type</a>(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#scmd\">scmd</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#scmd\">scmd</a>-><a class=\"id\" href=\"#prot_type\">prot_type</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#scsi_get_lba\">scsi_get_lba</a>(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#scmd\">scmd</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#blk_rq_pos\">blk_rq_pos</a>(<a class=\"id\" href=\"#scmd\">scmd</a>-><a class=\"id\" href=\"#request\">request</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned <a class=\"id\" href=\"#scsi_prot_sg_count\">scsi_prot_sg_count</a>(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#cmd\">cmd</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cmd\">cmd</a>-><a class=\"id\" href=\"#prot_sdb\">prot_sdb</a> ? <a class=\"id\" href=\"#cmd\">cmd</a>-><a class=\"id\" href=\"#prot_sdb\">prot_sdb</a>-><a class=\"id\" href=\"#table\">table</a>.<a class=\"id\" href=\"#nents\">nents</a> : 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#scsi_prot_sglist\">scsi_prot_sglist</a>(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#cmd\">cmd</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cmd\">cmd</a>-><a class=\"id\" href=\"#prot_sdb\">prot_sdb</a> ? <a class=\"id\" href=\"#cmd\">cmd</a>-><a class=\"id\" href=\"#prot_sdb\">prot_sdb</a>-><a class=\"id\" href=\"#table\">table</a>.<a class=\"id\" href=\"#sgl\">sgl</a> : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#scsi_data_buffer\">scsi_data_buffer</a> *<a class=\"id\" href=\"#scsi_prot\">scsi_prot</a>(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#cmd\">cmd</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cmd\">cmd</a>-><a class=\"id\" href=\"#prot_sdb\">prot_sdb</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#scsi_for_each_prot_sg\">scsi_for_each_prot_sg</a>(<a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#sg\">sg</a>, <a class=\"id\" href=\"#nseg\">nseg</a>, <a class=\"id\" href=\"#__i\">__i</a>)<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_sg\">for_each_sg</a>(<a class=\"id\" href=\"#scsi_prot_sglist\">scsi_prot_sglist</a>(<a class=\"id\" href=\"#cmd\">cmd</a>), <a class=\"id\" href=\"#sg\">sg</a>, <a class=\"id\" href=\"#nseg\">nseg</a>, <a class=\"id\" href=\"#__i\">__i</a>)", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#set_msg_byte\">set_msg_byte</a>(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#cmd\">cmd</a>, char <a class=\"id\" href=\"#status\">status</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cmd\">cmd</a>-><a class=\"id\" href=\"#result\">result</a> |= <a class=\"id\" href=\"#status\">status</a> << 8;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#set_host_byte\">set_host_byte</a>(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#cmd\">cmd</a>, char <a class=\"id\" href=\"#status\">status</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cmd\">cmd</a>-><a class=\"id\" href=\"#result\">result</a> |= <a class=\"id\" href=\"#status\">status</a> << 16;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#set_driver_byte\">set_driver_byte</a>(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#cmd\">cmd</a>, char <a class=\"id\" href=\"#status\">status</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cmd\">cmd</a>-><a class=\"id\" href=\"#result\">result</a> |= <a class=\"id\" href=\"#status\">status</a> << 24;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _SCSI_SCSI_CMND_H */</span>", 
];
xr_frag_insert('l/87/d9d2401a1fdd164192521c462819e51cc159cb.xr', __xr_tmp);
