var __xr_tmp = [
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bootmem\">bootmem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#compiler\">compiler</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ksm\">ksm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mmzone\">mmzone</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#hugetlb\">hugetlb</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>-<a class=\"id\" href=\"#page\">page</a>-<a class=\"id\" href=\"#flags\">flags</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"internal.h\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KPMSIZE\">KPMSIZE</a> sizeof(<a class=\"id\" href=\"#u64\">u64</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KPMMASK\">KPMMASK</a> (<a class=\"id\" href=\"#KPMSIZE\">KPMSIZE</a> - 1)", 
"", 
"<span class=\"comment\">/* /proc/kpagecount - an array exposing page counts</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Each entry is a u64 representing the corresponding</span>", 
"<span class=\"comment\"> * physical page count.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#kpagecount_read\">kpagecount_read</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#out\">out</a> = (<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#ppage\">ppage</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#src\">src</a> = *<a class=\"id\" href=\"#ppos\">ppos</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#pfn\">pfn</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#pcount\">pcount</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pfn\">pfn</a> = <a class=\"id\" href=\"#src\">src</a> / <a class=\"id\" href=\"#KPMSIZE\">KPMSIZE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#min_t\">min_t</a>(<a class=\"id\" href=\"#size_t\">size_t</a>, <a class=\"id\" href=\"#count\">count</a>, (<a class=\"id\" href=\"#max_pfn\">max_pfn</a> * <a class=\"id\" href=\"#KPMSIZE\">KPMSIZE</a>) - <a class=\"id\" href=\"#src\">src</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#src\">src</a> &amp; <a class=\"id\" href=\"#KPMMASK\">KPMMASK</a> || <a class=\"id\" href=\"#count\">count</a> &amp; <a class=\"id\" href=\"#KPMMASK\">KPMMASK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#count\">count</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pfn_valid\">pfn_valid</a>(<a class=\"id\" href=\"#pfn\">pfn</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ppage\">ppage</a> = <a class=\"id\" href=\"#pfn_to_page\">pfn_to_page</a>(<a class=\"id\" href=\"#pfn\">pfn</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ppage\">ppage</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ppage\">ppage</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcount\">pcount</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcount\">pcount</a> = <a class=\"id\" href=\"#page_mapcount\">page_mapcount</a>(<a class=\"id\" href=\"#ppage\">ppage</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#pcount\">pcount</a>, <a class=\"id\" href=\"#out\">out</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pfn\">pfn</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#out\">out</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> -= <a class=\"id\" href=\"#KPMSIZE\">KPMSIZE</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#ppos\">ppos</a> += (char <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#out\">out</a> - <a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = (char <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#out\">out</a> - <a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#proc_kpagecount_operations\">proc_kpagecount_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a> = <a class=\"id\" href=\"#mem_lseek\">mem_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a> = <a class=\"id\" href=\"#kpagecount_read\">kpagecount_read</a>,", 
"};", 
"", 
"<span class=\"comment\">/* /proc/kpageflags - an array exposing page flags</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Each entry is a u64 representing the corresponding</span>", 
"<span class=\"comment\"> * physical page flags.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#kpf_copy_bit\">kpf_copy_bit</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#kflags\">kflags</a>, int <a class=\"id\" href=\"#ubit\">ubit</a>, int <a class=\"id\" href=\"#kbit\">kbit</a>)", 
"{", 
"<span class=\"ts\"/>return ((<a class=\"id\" href=\"#kflags\">kflags</a> >> <a class=\"id\" href=\"#kbit\">kbit</a>) &amp; 1) << <a class=\"id\" href=\"#ubit\">ubit</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#stable_page_flags\">stable_page_flags</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#k\">k</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#u\">u</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * pseudo flag: KPF_NOPAGE</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * it differentiates a memory hole from a page with no flags</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#page\">page</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1 << <a class=\"id\" href=\"#KPF_NOPAGE\">KPF_NOPAGE</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#k\">k</a> = <a class=\"id\" href=\"#page\">page</a>-><a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * pseudo flags for the well known (anonymous) memory mapped pages</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Note that page-&gt;_mapcount is overloaded in SLOB/SLUB/SLQB, so the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * simple test in page_mapped() is not enough.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#PageSlab\">PageSlab</a>(<a class=\"id\" href=\"#page\">page</a>) && <a class=\"id\" href=\"#page_mapped\">page_mapped</a>(<a class=\"id\" href=\"#page\">page</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a> |= 1 << <a class=\"id\" href=\"#KPF_MMAP\">KPF_MMAP</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#PageAnon\">PageAnon</a>(<a class=\"id\" href=\"#page\">page</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a> |= 1 << <a class=\"id\" href=\"#KPF_ANON\">KPF_ANON</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#PageKsm\">PageKsm</a>(<a class=\"id\" href=\"#page\">page</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a> |= 1 << <a class=\"id\" href=\"#KPF_KSM\">KPF_KSM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * compound pages: export both head/tail info</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * they together define a compound page's start/end pos and order</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#PageHead\">PageHead</a>(<a class=\"id\" href=\"#page\">page</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a> |= 1 << <a class=\"id\" href=\"#KPF_COMPOUND_HEAD\">KPF_COMPOUND_HEAD</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#PageTail\">PageTail</a>(<a class=\"id\" href=\"#page\">page</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a> |= 1 << <a class=\"id\" href=\"#KPF_COMPOUND_TAIL\">KPF_COMPOUND_TAIL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#PageHuge\">PageHuge</a>(<a class=\"id\" href=\"#page\">page</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a> |= 1 << <a class=\"id\" href=\"#KPF_HUGE\">KPF_HUGE</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a> |= <a class=\"id\" href=\"#kpf_copy_bit\">kpf_copy_bit</a>(<a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#KPF_LOCKED\">KPF_LOCKED</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PG_locked\">PG_locked</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Caveats on high order pages:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * PG_buddy will only be set on the head page; SLUB/SLQB do the same</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * for PG_slab; SLOB won't set PG_slab at all on compound pages.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a> |= <a class=\"id\" href=\"#kpf_copy_bit\">kpf_copy_bit</a>(<a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#KPF_SLAB\">KPF_SLAB</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#PG_slab\">PG_slab</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a> |= <a class=\"id\" href=\"#kpf_copy_bit\">kpf_copy_bit</a>(<a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#KPF_BUDDY\">KPF_BUDDY</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#PG_buddy\">PG_buddy</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a> |= <a class=\"id\" href=\"#kpf_copy_bit\">kpf_copy_bit</a>(<a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#KPF_ERROR\">KPF_ERROR</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#PG_error\">PG_error</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a> |= <a class=\"id\" href=\"#kpf_copy_bit\">kpf_copy_bit</a>(<a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#KPF_DIRTY\">KPF_DIRTY</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#PG_dirty\">PG_dirty</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a> |= <a class=\"id\" href=\"#kpf_copy_bit\">kpf_copy_bit</a>(<a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#KPF_UPTODATE\">KPF_UPTODATE</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PG_uptodate\">PG_uptodate</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a> |= <a class=\"id\" href=\"#kpf_copy_bit\">kpf_copy_bit</a>(<a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#KPF_WRITEBACK\">KPF_WRITEBACK</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PG_writeback\">PG_writeback</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a> |= <a class=\"id\" href=\"#kpf_copy_bit\">kpf_copy_bit</a>(<a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#KPF_LRU\">KPF_LRU</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#PG_lru\">PG_lru</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a> |= <a class=\"id\" href=\"#kpf_copy_bit\">kpf_copy_bit</a>(<a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#KPF_REFERENCED\">KPF_REFERENCED</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PG_referenced\">PG_referenced</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a> |= <a class=\"id\" href=\"#kpf_copy_bit\">kpf_copy_bit</a>(<a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#KPF_ACTIVE\">KPF_ACTIVE</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PG_active\">PG_active</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a> |= <a class=\"id\" href=\"#kpf_copy_bit\">kpf_copy_bit</a>(<a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#KPF_RECLAIM\">KPF_RECLAIM</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PG_reclaim\">PG_reclaim</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a> |= <a class=\"id\" href=\"#kpf_copy_bit\">kpf_copy_bit</a>(<a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#KPF_SWAPCACHE\">KPF_SWAPCACHE</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PG_swapcache\">PG_swapcache</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a> |= <a class=\"id\" href=\"#kpf_copy_bit\">kpf_copy_bit</a>(<a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#KPF_SWAPBACKED\">KPF_SWAPBACKED</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PG_swapbacked\">PG_swapbacked</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a> |= <a class=\"id\" href=\"#kpf_copy_bit\">kpf_copy_bit</a>(<a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#KPF_UNEVICTABLE\">KPF_UNEVICTABLE</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PG_unevictable\">PG_unevictable</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a> |= <a class=\"id\" href=\"#kpf_copy_bit\">kpf_copy_bit</a>(<a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#KPF_MLOCKED\">KPF_MLOCKED</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PG_mlocked\">PG_mlocked</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_MEMORY_FAILURE\">CONFIG_MEMORY_FAILURE</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a> |= <a class=\"id\" href=\"#kpf_copy_bit\">kpf_copy_bit</a>(<a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#KPF_HWPOISON\">KPF_HWPOISON</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PG_hwpoison\">PG_hwpoison</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_ARCH_USES_PG_UNCACHED\">CONFIG_ARCH_USES_PG_UNCACHED</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a> |= <a class=\"id\" href=\"#kpf_copy_bit\">kpf_copy_bit</a>(<a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#KPF_UNCACHED\">KPF_UNCACHED</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PG_uncached\">PG_uncached</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a> |= <a class=\"id\" href=\"#kpf_copy_bit\">kpf_copy_bit</a>(<a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#KPF_RESERVED\">KPF_RESERVED</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PG_reserved\">PG_reserved</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a> |= <a class=\"id\" href=\"#kpf_copy_bit\">kpf_copy_bit</a>(<a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#KPF_MAPPEDTODISK\">KPF_MAPPEDTODISK</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PG_mappedtodisk\">PG_mappedtodisk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a> |= <a class=\"id\" href=\"#kpf_copy_bit\">kpf_copy_bit</a>(<a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#KPF_PRIVATE\">KPF_PRIVATE</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PG_private\">PG_private</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a> |= <a class=\"id\" href=\"#kpf_copy_bit\">kpf_copy_bit</a>(<a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#KPF_PRIVATE_2\">KPF_PRIVATE_2</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PG_private_2\">PG_private_2</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a> |= <a class=\"id\" href=\"#kpf_copy_bit\">kpf_copy_bit</a>(<a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#KPF_OWNER_PRIVATE\">KPF_OWNER_PRIVATE</a>,<span class=\"ts\"/><a class=\"id\" href=\"#PG_owner_priv_1\">PG_owner_priv_1</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a> |= <a class=\"id\" href=\"#kpf_copy_bit\">kpf_copy_bit</a>(<a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#KPF_ARCH\">KPF_ARCH</a>,<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#PG_arch_1\">PG_arch_1</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#u\">u</a>;", 
"};", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#kpageflags_read\">kpageflags_read</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#out\">out</a> = (<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#ppage\">ppage</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#src\">src</a> = *<a class=\"id\" href=\"#ppos\">ppos</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#pfn\">pfn</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pfn\">pfn</a> = <a class=\"id\" href=\"#src\">src</a> / <a class=\"id\" href=\"#KPMSIZE\">KPMSIZE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#min_t\">min_t</a>(unsigned long, <a class=\"id\" href=\"#count\">count</a>, (<a class=\"id\" href=\"#max_pfn\">max_pfn</a> * <a class=\"id\" href=\"#KPMSIZE\">KPMSIZE</a>) - <a class=\"id\" href=\"#src\">src</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#src\">src</a> &amp; <a class=\"id\" href=\"#KPMMASK\">KPMMASK</a> || <a class=\"id\" href=\"#count\">count</a> &amp; <a class=\"id\" href=\"#KPMMASK\">KPMMASK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#count\">count</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pfn_valid\">pfn_valid</a>(<a class=\"id\" href=\"#pfn\">pfn</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ppage\">ppage</a> = <a class=\"id\" href=\"#pfn_to_page\">pfn_to_page</a>(<a class=\"id\" href=\"#pfn\">pfn</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ppage\">ppage</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#stable_page_flags\">stable_page_flags</a>(<a class=\"id\" href=\"#ppage\">ppage</a>), <a class=\"id\" href=\"#out\">out</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pfn\">pfn</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#out\">out</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> -= <a class=\"id\" href=\"#KPMSIZE\">KPMSIZE</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#ppos\">ppos</a> += (char <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#out\">out</a> - <a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = (char <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#out\">out</a> - <a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#proc_kpageflags_operations\">proc_kpageflags_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a> = <a class=\"id\" href=\"#mem_lseek\">mem_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a> = <a class=\"id\" href=\"#kpageflags_read\">kpageflags_read</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#proc_page_init\">proc_page_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proc_create\">proc_create</a>(\"kpagecount\", <a class=\"id\" href=\"#S_IRUSR\">S_IRUSR</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#proc_kpagecount_operations\">proc_kpagecount_operations</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proc_create\">proc_create</a>(\"kpageflags\", <a class=\"id\" href=\"#S_IRUSR\">S_IRUSR</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#proc_kpageflags_operations\">proc_kpageflags_operations</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#proc_page_init\">proc_page_init</a>);", 
];
xr_frag_insert('l/88/9815c969c4af6afe5f335e36d4c69234a751e2.xr', __xr_tmp);
