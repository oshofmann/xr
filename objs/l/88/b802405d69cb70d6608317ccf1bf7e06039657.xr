var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  Copyright (C) 1994 Linus Torvalds</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Pentium III FXSR, SSE support</span>", 
"<span class=\"comment\"> *  General FPU state handling cleanups</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Gareth Hughes &lt;gareth@valinux.com&gt;, May 2000</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#regset\">regset</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#sigcontext\">sigcontext</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#processor\">processor</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#math_emu\">math_emu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#ptrace\">ptrace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#i387\">i387</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#user\">user</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"# <a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#sigcontext32\">sigcontext32</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"# <a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#user32\">user32</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#else", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#save_i387_xstate_ia32\">save_i387_xstate_ia32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#save_i387_xstate\">save_i387_xstate</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#restore_i387_xstate_ia32\">restore_i387_xstate_ia32</a><span class=\"ts\"/><a class=\"id\" href=\"#restore_i387_xstate\">restore_i387_xstate</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_fpstate_ia32\">_fpstate_ia32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#_fpstate\">_fpstate</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_xstate_ia32\">_xstate_ia32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#_xstate\">_xstate</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#sig_xstate_ia32_size\">sig_xstate_ia32_size</a>   <a class=\"id\" href=\"#sig_xstate_size\">sig_xstate_size</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#fx_sw_reserved_ia32\">fx_sw_reserved_ia32</a><span class=\"ts\"/><a class=\"id\" href=\"#fx_sw_reserved\">fx_sw_reserved</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#user_i387_ia32_struct\">user_i387_ia32_struct</a><span class=\"ts\"/><a class=\"id\" href=\"#user_i387_struct\">user_i387_struct</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#user32_fxsr_struct\">user32_fxsr_struct</a><span class=\"ts\"/><a class=\"id\" href=\"#user_fxsr_struct\">user_fxsr_struct</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_MATH_EMULATION\">CONFIG_MATH_EMULATION</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HAVE_HWFP\">HAVE_HWFP</a><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#hard_math\">hard_math</a>)", 
"#else", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HAVE_HWFP\">HAVE_HWFP</a><span class=\"ts\"/><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mxcsr_feature_mask\">mxcsr_feature_mask</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = 0xffffffffu;", 
"unsigned int <a class=\"id\" href=\"#xstate_size\">xstate_size</a>;", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#xstate_size\">xstate_size</a>);", 
"unsigned int <a class=\"id\" href=\"#sig_xstate_ia32_size\">sig_xstate_ia32_size</a> = sizeof(struct <a class=\"id\" href=\"#_fpstate_ia32\">_fpstate_ia32</a>);", 
"static struct <a class=\"id\" href=\"#i387_fxsave_struct\">i387_fxsave_struct</a> <a class=\"id\" href=\"#fx_scratch\">fx_scratch</a> <a class=\"id\" href=\"#__cpuinitdata\">__cpuinitdata</a>;", 
"", 
"void <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#mxcsr_feature_mask_init\">mxcsr_feature_mask_init</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#mask\">mask</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clts\">clts</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_has_fxsr\">cpu_has_fxsr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#fx_scratch\">fx_scratch</a>, 0, sizeof(struct <a class=\"id\" href=\"#i387_fxsave_struct\">i387_fxsave_struct</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"fxsave %0\" : : \"m\" (<a class=\"id\" href=\"#fx_scratch\">fx_scratch</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#fx_scratch\">fx_scratch</a>.<a class=\"id\" href=\"#mxcsr_mask\">mxcsr_mask</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mask\">mask</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> = 0x0000ffbf;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mxcsr_feature_mask\">mxcsr_feature_mask</a> &= <a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stts\">stts</a>();", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#init_thread_xstate\">init_thread_xstate</a>(void)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Note that xstate_size might be overwriten later during</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * xsave_init().</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#HAVE_HWFP\">HAVE_HWFP</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xstate_size\">xstate_size</a> = sizeof(struct <a class=\"id\" href=\"#i387_soft_struct\">i387_soft_struct</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_has_fxsr\">cpu_has_fxsr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xstate_size\">xstate_size</a> = sizeof(struct <a class=\"id\" href=\"#i387_fxsave_struct\">i387_fxsave_struct</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xstate_size\">xstate_size</a> = sizeof(struct <a class=\"id\" href=\"#i387_fsave_struct\">i387_fsave_struct</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Called at bootup to set up the initial FPU state that is later cloned</span>", 
"<span class=\"comment\"> * into all processes.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#fpu_init\">fpu_init</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#oldcr0\">oldcr0</a> = <a class=\"id\" href=\"#read_cr0\">read_cr0</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_in_cr4\">set_in_cr4</a>(<a class=\"id\" href=\"#X86_CR4_OSFXSR\">X86_CR4_OSFXSR</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_in_cr4\">set_in_cr4</a>(<a class=\"id\" href=\"#X86_CR4_OSXMMEXCPT\">X86_CR4_OSXMMEXCPT</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_cr0\">write_cr0</a>(<a class=\"id\" href=\"#oldcr0\">oldcr0</a> &amp; ~(<a class=\"id\" href=\"#X86_CR0_TS\">X86_CR0_TS</a>|<a class=\"id\" href=\"#X86_CR0_EM\">X86_CR0_EM</a>)); <span class=\"comment\">/* clear TS and EM */</span>", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#init_thread_xstate\">init_thread_xstate</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mxcsr_feature_mask_init\">mxcsr_feature_mask_init</a>();", 
"<span class=\"ts\"/><span class=\"comment\">/* clean state in init */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current_thread_info\">current_thread_info</a>()-><a class=\"id\" href=\"#status\">status</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_used_math\">clear_used_math</a>();", 
"}", 
"", 
"#else<span class=\"ts\"/><span class=\"comment\">/* CONFIG_X86_64 */</span>", 
"", 
"void <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#fpu_init\">fpu_init</a>(void)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#init_thread_xstate\">init_thread_xstate</a>();", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* CONFIG_X86_32 */</span>", 
"", 
"void <a class=\"id\" href=\"#fpu_finit\">fpu_finit</a>(struct <a class=\"id\" href=\"#fpu\">fpu</a> *<a class=\"id\" href=\"#fpu\">fpu</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#HAVE_HWFP\">HAVE_HWFP</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#finit_soft_fpu\">finit_soft_fpu</a>(&amp;<a class=\"id\" href=\"#fpu\">fpu</a>-><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#soft\">soft</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_has_fxsr\">cpu_has_fxsr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#i387_fxsave_struct\">i387_fxsave_struct</a> *<a class=\"id\" href=\"#fx\">fx</a> = &amp;<a class=\"id\" href=\"#fpu\">fpu</a>-><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#fxsave\">fxsave</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#fx\">fx</a>, 0, <a class=\"id\" href=\"#xstate_size\">xstate_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fx\">fx</a>-><a class=\"id\" href=\"#cwd\">cwd</a> = 0x37f;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_has_xmm\">cpu_has_xmm</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fx\">fx</a>-><a class=\"id\" href=\"#mxcsr\">mxcsr</a> = <a class=\"id\" href=\"#MXCSR_DEFAULT\">MXCSR_DEFAULT</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#i387_fsave_struct\">i387_fsave_struct</a> *<a class=\"id\" href=\"#fp\">fp</a> = &amp;<a class=\"id\" href=\"#fpu\">fpu</a>-><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#fsave\">fsave</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#fp\">fp</a>, 0, <a class=\"id\" href=\"#xstate_size\">xstate_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fp\">fp</a>-><a class=\"id\" href=\"#cwd\">cwd</a> = 0xffff037fu;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fp\">fp</a>-><a class=\"id\" href=\"#swd\">swd</a> = 0xffff0000u;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fp\">fp</a>-><a class=\"id\" href=\"#twd\">twd</a> = 0xffffffffu;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fp\">fp</a>-><a class=\"id\" href=\"#fos\">fos</a> = 0xffff0000u;", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#fpu_finit\">fpu_finit</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The _current_ task is using the FPU for the first time</span>", 
"<span class=\"comment\"> * so initialize it and set the mxcsr to its default</span>", 
"<span class=\"comment\"> * value at reset if we support XMM instructions and then</span>", 
"<span class=\"comment\"> * remeber the current task has used the FPU.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#init_fpu\">init_fpu</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
];
xr_frag_insert('l/88/b802405d69cb70d6608317ccf1bf7e06039657.xr', __xr_tmp);
