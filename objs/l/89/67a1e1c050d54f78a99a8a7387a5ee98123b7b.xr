var __xr_tmp = [
"<span class=\"ts\"/><a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_default_mount_opts\">s_default_mount_opts</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_sb_block\">s_sb_block</a> != 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",sb=%lu\", <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_sb_block\">s_sb_block</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#MINIX_DF\">MINIX_DF</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",minixdf\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#GRPID\">GRPID</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",grpid\");", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#GRPID\">GRPID</a>) && (<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT2_DEFM_BSDGROUPS\">EXT2_DEFM_BSDGROUPS</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",nogrpid\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resuid\">s_resuid</a> != <a class=\"id\" href=\"#EXT2_DEF_RESUID\">EXT2_DEF_RESUID</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_def_resuid\">s_def_resuid</a>) != <a class=\"id\" href=\"#EXT2_DEF_RESUID\">EXT2_DEF_RESUID</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",resuid=%u\", <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resuid\">s_resuid</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resgid\">s_resgid</a> != <a class=\"id\" href=\"#EXT2_DEF_RESGID\">EXT2_DEF_RESGID</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_def_resgid\">s_def_resgid</a>) != <a class=\"id\" href=\"#EXT2_DEF_RESGID\">EXT2_DEF_RESGID</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",resgid=%u\", <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resgid\">s_resgid</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#ERRORS_RO\">ERRORS_RO</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#def_errors\">def_errors</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_errors\">s_errors</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#def_errors\">def_errors</a> == <a class=\"id\" href=\"#EXT2_ERRORS_PANIC\">EXT2_ERRORS_PANIC</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#def_errors\">def_errors</a> == <a class=\"id\" href=\"#EXT2_ERRORS_CONTINUE\">EXT2_ERRORS_CONTINUE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",errors=remount-ro\");", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#ERRORS_CONT\">ERRORS_CONT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",errors=continue\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#ERRORS_PANIC\">ERRORS_PANIC</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",errors=panic\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#NO_UID32\">NO_UID32</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",nouid32\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#DEBUG\">DEBUG</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",debug\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#OLDALLOC\">OLDALLOC</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",oldalloc\");", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EXT2_FS_XATTR\">CONFIG_EXT2_FS_XATTR</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#XATTR_USER\">XATTR_USER</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",user_xattr\");", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#XATTR_USER\">XATTR_USER</a>) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT2_DEFM_XATTR_USER\">EXT2_DEFM_XATTR_USER</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",nouser_xattr\");", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EXT2_FS_POSIX_ACL\">CONFIG_EXT2_FS_POSIX_ACL</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#POSIX_ACL\">POSIX_ACL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",acl\");", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#POSIX_ACL\">POSIX_ACL</a>) && (<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT2_DEFM_ACL\">EXT2_DEFM_ACL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",noacl\");", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#NOBH\">NOBH</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",nobh\");", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>)", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a> &amp; <a class=\"id\" href=\"#EXT2_MOUNT_USRQUOTA\">EXT2_MOUNT_USRQUOTA</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",usrquota\");", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a> &amp; <a class=\"id\" href=\"#EXT2_MOUNT_GRPQUOTA\">EXT2_MOUNT_GRPQUOTA</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",grpquota\");", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_EXT2_FS_XIP\">CONFIG_EXT2_FS_XIP</a>)", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a> &amp; <a class=\"id\" href=\"#EXT2_MOUNT_XIP\">EXT2_MOUNT_XIP</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",xip\");", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#RESERVATION\">RESERVATION</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",noreservation\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_lock\">s_lock</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ext2_quota_read\">ext2_quota_read</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>, char *<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#off\">off</a>);", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ext2_quota_write\">ext2_quota_write</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>, const char *<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#off\">off</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static const struct <a class=\"id\" href=\"#super_operations\">super_operations</a> <a class=\"id\" href=\"#ext2_sops\">ext2_sops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#alloc_inode\">alloc_inode</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext2_alloc_inode\">ext2_alloc_inode</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#destroy_inode\">destroy_inode</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext2_destroy_inode\">ext2_destroy_inode</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write_inode\">write_inode</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext2_write_inode\">ext2_write_inode</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#evict_inode\">evict_inode</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext2_evict_inode\">ext2_evict_inode</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#put_super\">put_super</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext2_put_super\">ext2_put_super</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write_super\">write_super</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext2_write_super\">ext2_write_super</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sync_fs\">sync_fs</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext2_sync_fs\">ext2_sync_fs</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#statfs\">statfs</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ext2_statfs\">ext2_statfs</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#remount_fs\">remount_fs</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext2_remount\">ext2_remount</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show_options\">show_options</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext2_show_options\">ext2_show_options</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#quota_read\">quota_read</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext2_quota_read\">ext2_quota_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#quota_write\">quota_write</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext2_quota_write\">ext2_quota_write</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#ext2_nfs_get_inode\">ext2_nfs_get_inode</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#ino\">ino</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#generation\">generation</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ino\">ino</a> &lt; <a class=\"id\" href=\"#EXT2_FIRST_INO\">EXT2_FIRST_INO</a>(<a class=\"id\" href=\"#sb\">sb</a>) && <a class=\"id\" href=\"#ino\">ino</a> != <a class=\"id\" href=\"#EXT2_ROOT_INO\">EXT2_ROOT_INO</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ESTALE\">ESTALE</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ino\">ino</a> &gt; <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#EXT2_SB\">EXT2_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_inodes_count\">s_inodes_count</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ESTALE\">ESTALE</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* iget isn't really right if the inode is currently unallocated!!</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ext2_read_inode currently does appropriate checks, but</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * it might be \"neater\" to call ext2_get_inode first and check</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * if the inode is valid.....</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#ext2_iget\">ext2_iget</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#ino\">ino</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_CAST\">ERR_CAST</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#generation\">generation</a> && <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_generation\">i_generation</a> != <a class=\"id\" href=\"#generation\">generation</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* we didn't find the right inode.. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ESTALE\">ESTALE</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#inode\">inode</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#ext2_fh_to_dentry\">ext2_fh_to_dentry</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, struct <a class=\"id\" href=\"#fid\">fid</a> *<a class=\"id\" href=\"#fid\">fid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#fh_len\">fh_len</a>, int <a class=\"id\" href=\"#fh_type\">fh_type</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#generic_fh_to_dentry\">generic_fh_to_dentry</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#fid\">fid</a>, <a class=\"id\" href=\"#fh_len\">fh_len</a>, <a class=\"id\" href=\"#fh_type\">fh_type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ext2_nfs_get_inode\">ext2_nfs_get_inode</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#ext2_fh_to_parent\">ext2_fh_to_parent</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, struct <a class=\"id\" href=\"#fid\">fid</a> *<a class=\"id\" href=\"#fid\">fid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#fh_len\">fh_len</a>, int <a class=\"id\" href=\"#fh_type\">fh_type</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#generic_fh_to_parent\">generic_fh_to_parent</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#fid\">fid</a>, <a class=\"id\" href=\"#fh_len\">fh_len</a>, <a class=\"id\" href=\"#fh_type\">fh_type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ext2_nfs_get_inode\">ext2_nfs_get_inode</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Yes, most of these are left as NULL!!</span>", 
"<span class=\"comment\"> * A NULL value implies the default, which works with ext2-like file</span>", 
"<span class=\"comment\"> * systems, but can be improved upon.</span>", 
"<span class=\"comment\"> * Currently only get_parent is required.</span>", 
"<span class=\"comment\"> */</span>", 
"static const struct <a class=\"id\" href=\"#export_operations\">export_operations</a> <a class=\"id\" href=\"#ext2_export_ops\">ext2_export_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#fh_to_dentry\">fh_to_dentry</a> = <a class=\"id\" href=\"#ext2_fh_to_dentry\">ext2_fh_to_dentry</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#fh_to_parent\">fh_to_parent</a> = <a class=\"id\" href=\"#ext2_fh_to_parent\">ext2_fh_to_parent</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#get_parent\">get_parent</a> = <a class=\"id\" href=\"#ext2_get_parent\">ext2_get_parent</a>,", 
"};", 
"", 
"static unsigned long <a class=\"id\" href=\"#get_sb_block\">get_sb_block</a>(void **<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <span class=\"ts\"/><a class=\"id\" href=\"#sb_block\">sb_block</a>;", 
"<span class=\"ts\"/>char <span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#options\">options</a> = (char *) *<a class=\"id\" href=\"#data\">data</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#options\">options</a> || <a class=\"id\" href=\"#strncmp\">strncmp</a>(<a class=\"id\" href=\"#options\">options</a>, \"sb=\", 3) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;<span class=\"ts\"/><span class=\"comment\">/* Default location */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#options\">options</a> += 3;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb_block\">sb_block</a> = <a class=\"id\" href=\"#simple_strtoul\">simple_strtoul</a>(<a class=\"id\" href=\"#options\">options</a>, &amp;<a class=\"id\" href=\"#options\">options</a>, 0);", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#options\">options</a> && *<a class=\"id\" href=\"#options\">options</a> != ',') {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"EXT2-fs: Invalid sb specification: %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       (char *) *<a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#options\">options</a> == ',')", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#options\">options</a>++;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#data\">data</a> = (void *) <a class=\"id\" href=\"#options\">options</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sb_block\">sb_block</a>;", 
"}", 
"", 
"enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_bsd_df\">Opt_bsd_df</a>, <a class=\"id\" href=\"#Opt_minix_df\">Opt_minix_df</a>, <a class=\"id\" href=\"#Opt_grpid\">Opt_grpid</a>, <a class=\"id\" href=\"#Opt_nogrpid\">Opt_nogrpid</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_resgid\">Opt_resgid</a>, <a class=\"id\" href=\"#Opt_resuid\">Opt_resuid</a>, <a class=\"id\" href=\"#Opt_sb\">Opt_sb</a>, <a class=\"id\" href=\"#Opt_err_cont\">Opt_err_cont</a>, <a class=\"id\" href=\"#Opt_err_panic\">Opt_err_panic</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_err_ro\">Opt_err_ro</a>, <a class=\"id\" href=\"#Opt_nouid32\">Opt_nouid32</a>, <a class=\"id\" href=\"#Opt_nocheck\">Opt_nocheck</a>, <a class=\"id\" href=\"#Opt_debug\">Opt_debug</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_oldalloc\">Opt_oldalloc</a>, <a class=\"id\" href=\"#Opt_orlov\">Opt_orlov</a>, <a class=\"id\" href=\"#Opt_nobh\">Opt_nobh</a>, <a class=\"id\" href=\"#Opt_user_xattr\">Opt_user_xattr</a>, <a class=\"id\" href=\"#Opt_nouser_xattr\">Opt_nouser_xattr</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_acl\">Opt_acl</a>, <a class=\"id\" href=\"#Opt_noacl\">Opt_noacl</a>, <a class=\"id\" href=\"#Opt_xip\">Opt_xip</a>, <a class=\"id\" href=\"#Opt_ignore\">Opt_ignore</a>, <a class=\"id\" href=\"#Opt_err\">Opt_err</a>, <a class=\"id\" href=\"#Opt_quota\">Opt_quota</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_usrquota\">Opt_usrquota</a>, <a class=\"id\" href=\"#Opt_grpquota\">Opt_grpquota</a>, <a class=\"id\" href=\"#Opt_reservation\">Opt_reservation</a>, <a class=\"id\" href=\"#Opt_noreservation\">Opt_noreservation</a>", 
"};", 
"", 
"static const <a class=\"id\" href=\"#match_table_t\">match_table_t</a> <a class=\"id\" href=\"#tokens\">tokens</a> = {", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_bsd_df\">Opt_bsd_df</a>, \"bsddf\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_minix_df\">Opt_minix_df</a>, \"minixdf\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_grpid\">Opt_grpid</a>, \"grpid\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_grpid\">Opt_grpid</a>, \"bsdgroups\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_nogrpid\">Opt_nogrpid</a>, \"nogrpid\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_nogrpid\">Opt_nogrpid</a>, \"sysvgroups\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_resgid\">Opt_resgid</a>, \"resgid=%u\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_resuid\">Opt_resuid</a>, \"resuid=%u\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_sb\">Opt_sb</a>, \"sb=%u\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_err_cont\">Opt_err_cont</a>, \"errors=continue\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_err_panic\">Opt_err_panic</a>, \"errors=panic\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_err_ro\">Opt_err_ro</a>, \"errors=remount-ro\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_nouid32\">Opt_nouid32</a>, \"nouid32\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_nocheck\">Opt_nocheck</a>, \"check=none\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_nocheck\">Opt_nocheck</a>, \"nocheck\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_debug\">Opt_debug</a>, \"debug\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_oldalloc\">Opt_oldalloc</a>, \"oldalloc\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_orlov\">Opt_orlov</a>, \"orlov\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_nobh\">Opt_nobh</a>, \"nobh\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_user_xattr\">Opt_user_xattr</a>, \"user_xattr\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_nouser_xattr\">Opt_nouser_xattr</a>, \"nouser_xattr\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_acl\">Opt_acl</a>, \"acl\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_noacl\">Opt_noacl</a>, \"noacl\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_xip\">Opt_xip</a>, \"xip\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_grpquota\">Opt_grpquota</a>, \"grpquota\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_ignore\">Opt_ignore</a>, \"noquota\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_quota\">Opt_quota</a>, \"quota\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_usrquota\">Opt_usrquota</a>, \"usrquota\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_reservation\">Opt_reservation</a>, \"reservation\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_noreservation\">Opt_noreservation</a>, \"noreservation\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_err\">Opt_err</a>, <a class=\"id\" href=\"#NULL\">NULL</a>}", 
"};", 
"", 
"static int <a class=\"id\" href=\"#parse_options\">parse_options</a>(char *<a class=\"id\" href=\"#options\">options</a>, struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext2_sb_info\">ext2_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT2_SB\">EXT2_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#substring_t\">substring_t</a> <a class=\"id\" href=\"#args\">args</a>[<a class=\"id\" href=\"#MAX_OPT_ARGS\">MAX_OPT_ARGS</a>];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#option\">option</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#options\">options</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#strsep\">strsep</a> (&amp;<a class=\"id\" href=\"#options\">options</a>, \",\")) != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#token\">token</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!*<a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#token\">token</a> = <a class=\"id\" href=\"#match_token\">match_token</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#tokens\">tokens</a>, <a class=\"id\" href=\"#args\">args</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#token\">token</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_bsd_df\">Opt_bsd_df</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#MINIX_DF\">MINIX_DF</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_minix_df\">Opt_minix_df</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#MINIX_DF\">MINIX_DF</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_grpid\">Opt_grpid</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#GRPID\">GRPID</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_nogrpid\">Opt_nogrpid</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#GRPID\">GRPID</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_resuid\">Opt_resuid</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#match_int\">match_int</a>(&amp;<a class=\"id\" href=\"#args\">args</a>[0], &amp;<a class=\"id\" href=\"#option\">option</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resuid\">s_resuid</a> = <a class=\"id\" href=\"#option\">option</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_resgid\">Opt_resgid</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#match_int\">match_int</a>(&amp;<a class=\"id\" href=\"#args\">args</a>[0], &amp;<a class=\"id\" href=\"#option\">option</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resgid\">s_resgid</a> = <a class=\"id\" href=\"#option\">option</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_sb\">Opt_sb</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* handled by get_sb_block() instead of here */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* *sb_block = match_int(&amp;args[0]); */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_err_panic\">Opt_err_panic</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ERRORS_CONT\">ERRORS_CONT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ERRORS_RO\">ERRORS_RO</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ERRORS_PANIC\">ERRORS_PANIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_err_ro\">Opt_err_ro</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ERRORS_CONT\">ERRORS_CONT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ERRORS_PANIC\">ERRORS_PANIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ERRORS_RO\">ERRORS_RO</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_err_cont\">Opt_err_cont</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ERRORS_RO\">ERRORS_RO</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ERRORS_PANIC\">ERRORS_PANIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ERRORS_CONT\">ERRORS_CONT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_nouid32\">Opt_nouid32</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#NO_UID32\">NO_UID32</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_nocheck\">Opt_nocheck</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#CHECK\">CHECK</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_debug\">Opt_debug</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#DEBUG\">DEBUG</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_oldalloc\">Opt_oldalloc</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#OLDALLOC\">OLDALLOC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_orlov\">Opt_orlov</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#OLDALLOC\">OLDALLOC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_nobh\">Opt_nobh</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#NOBH\">NOBH</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EXT2_FS_XATTR\">CONFIG_EXT2_FS_XATTR</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_user_xattr\">Opt_user_xattr</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#XATTR_USER\">XATTR_USER</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_nouser_xattr\">Opt_nouser_xattr</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#XATTR_USER\">XATTR_USER</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"#else", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_user_xattr\">Opt_user_xattr</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_nouser_xattr\">Opt_nouser_xattr</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, \"(no)user_xattr options\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"not supported\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EXT2_FS_POSIX_ACL\">CONFIG_EXT2_FS_POSIX_ACL</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_acl\">Opt_acl</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#POSIX_ACL\">POSIX_ACL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_noacl\">Opt_noacl</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#POSIX_ACL\">POSIX_ACL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"#else", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_acl\">Opt_acl</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_noacl\">Opt_noacl</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"(no)acl options not supported\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_xip\">Opt_xip</a>:", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EXT2_FS_XIP\">CONFIG_EXT2_FS_XIP</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#XIP\">XIP</a>);", 
"#else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, \"xip option not supported\");", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_quota\">Opt_quota</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_usrquota\">Opt_usrquota</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#USRQUOTA\">USRQUOTA</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_grpquota\">Opt_grpquota</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#GRPQUOTA\">GRPQUOTA</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"#else", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_quota\">Opt_quota</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_usrquota\">Opt_usrquota</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_grpquota\">Opt_grpquota</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"quota operations not supported\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_reservation\">Opt_reservation</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#RESERVATION\">RESERVATION</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, \"reservations ON\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_noreservation\">Opt_noreservation</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#RESERVATION\">RESERVATION</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, \"reservations OFF\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_ignore\">Opt_ignore</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext2_setup_super\">ext2_setup_super</a> (struct <a class=\"id\" href=\"#super_block\">super_block</a> * <a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#ext2_super_block\">ext2_super_block</a> * <a class=\"id\" href=\"#es\">es</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      int <a class=\"id\" href=\"#read_only\">read_only</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#res\">res</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext2_sb_info\">ext2_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT2_SB\">EXT2_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_rev_level\">s_rev_level</a>) &gt; <a class=\"id\" href=\"#EXT2_MAX_SUPP_REV\">EXT2_MAX_SUPP_REV</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"error: revision level too high, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"forcing read-only mode\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#read_only\">read_only</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_state\">s_mount_state</a> &amp; <a class=\"id\" href=\"#EXT2_VALID_FS\">EXT2_VALID_FS</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"warning: mounting unchecked fs, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"running e2fsck is recommended\");", 
"<span class=\"ts\"/>else if ((<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_state\">s_mount_state</a> &amp; <a class=\"id\" href=\"#EXT2_ERROR_FS\">EXT2_ERROR_FS</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"warning: mounting fs with errors, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"running e2fsck is recommended\");", 
"<span class=\"ts\"/>else if ((<a class=\"id\" href=\"#__s16\">__s16</a>) <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_max_mnt_count\">s_max_mnt_count</a>) >= 0 &&", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_mnt_count\">s_mnt_count</a>) >=", 
"<span class=\"ts\"/><span class=\"ts\"/> (unsigned short) (<a class=\"id\" href=\"#__s16\">__s16</a>) <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_max_mnt_count\">s_max_mnt_count</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"warning: maximal mount count reached, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"running e2fsck is recommended\");", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_checkinterval\">s_checkinterval</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_lastcheck\">s_lastcheck</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_checkinterval\">s_checkinterval</a>) <= <a class=\"id\" href=\"#get_seconds\">get_seconds</a>()))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"warning: checktime reached, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"running e2fsck is recommended\");", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_max_mnt_count\">s_max_mnt_count</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_max_mnt_count\">s_max_mnt_count</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#EXT2_DFL_MAX_MNT_COUNT\">EXT2_DFL_MAX_MNT_COUNT</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#le16_add_cpu\">le16_add_cpu</a>(&amp;<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_mnt_count\">s_mnt_count</a>, 1);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a> (<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#DEBUG\">DEBUG</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, \"%s, %s, bs=%lu, fs=%lu, gc=%lu, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"bpg=%lu, ipg=%lu, mo=%04lx]\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT2FS_VERSION\">EXT2FS_VERSION</a>, <a class=\"id\" href=\"#EXT2FS_DATE\">EXT2FS_DATE</a>, <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_frag_size\">s_frag_size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_groups_count\">s_groups_count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT2_BLOCKS_PER_GROUP\">EXT2_BLOCKS_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT2_INODES_PER_GROUP\">EXT2_INODES_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext2_check_descriptors\">ext2_check_descriptors</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext2_sb_info\">ext2_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT2_SB\">EXT2_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext2_debug\">ext2_debug</a> (\"Checking group descriptors\");", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_groups_count\">s_groups_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext2_group_desc\">ext2_group_desc</a> *<a class=\"id\" href=\"#gdp\">gdp</a> = <a class=\"id\" href=\"#ext2_get_group_desc\">ext2_get_group_desc</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_fsblk_t\">ext2_fsblk_t</a> <a class=\"id\" href=\"#first_block\">first_block</a> = <a class=\"id\" href=\"#ext2_group_first_block_no\">ext2_group_first_block_no</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_fsblk_t\">ext2_fsblk_t</a> <a class=\"id\" href=\"#last_block\">last_block</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> == <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_groups_count\">s_groups_count</a> - 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_block\">last_block</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_blocks_count\">s_blocks_count</a>) - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_block\">last_block</a> = <a class=\"id\" href=\"#first_block\">first_block</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#EXT2_BLOCKS_PER_GROUP\">EXT2_BLOCKS_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>) - 1);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#gdp\">gdp</a>-><a class=\"id\" href=\"#bg_block_bitmap\">bg_block_bitmap</a>) &lt; <a class=\"id\" href=\"#first_block\">first_block</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#gdp\">gdp</a>-><a class=\"id\" href=\"#bg_block_bitmap\">bg_block_bitmap</a>) &gt; <a class=\"id\" href=\"#last_block\">last_block</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_error\">ext2_error</a> (<a class=\"id\" href=\"#sb\">sb</a>, \"ext2_check_descriptors\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"Block bitmap for group %d\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \" not in group (block %lu)!\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#i\">i</a>, (unsigned long) <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#gdp\">gdp</a>-><a class=\"id\" href=\"#bg_block_bitmap\">bg_block_bitmap</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#gdp\">gdp</a>-><a class=\"id\" href=\"#bg_inode_bitmap\">bg_inode_bitmap</a>) &lt; <a class=\"id\" href=\"#first_block\">first_block</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#gdp\">gdp</a>-><a class=\"id\" href=\"#bg_inode_bitmap\">bg_inode_bitmap</a>) &gt; <a class=\"id\" href=\"#last_block\">last_block</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_error\">ext2_error</a> (<a class=\"id\" href=\"#sb\">sb</a>, \"ext2_check_descriptors\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"Inode bitmap for group %d\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \" not in group (block %lu)!\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#i\">i</a>, (unsigned long) <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#gdp\">gdp</a>-><a class=\"id\" href=\"#bg_inode_bitmap\">bg_inode_bitmap</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#gdp\">gdp</a>-><a class=\"id\" href=\"#bg_inode_table\">bg_inode_table</a>) &lt; <a class=\"id\" href=\"#first_block\">first_block</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#gdp\">gdp</a>-><a class=\"id\" href=\"#bg_inode_table\">bg_inode_table</a>) + <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_itb_per_group\">s_itb_per_group</a> - 1 &gt;", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#last_block\">last_block</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_error\">ext2_error</a> (<a class=\"id\" href=\"#sb\">sb</a>, \"ext2_check_descriptors\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"Inode table for group %d\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \" not in group (block %lu)!\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#i\">i</a>, (unsigned long) <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#gdp\">gdp</a>-><a class=\"id\" href=\"#bg_inode_table\">bg_inode_table</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Maximal file size.  There is a direct, and {,double-,triple-}indirect</span>", 
"<span class=\"comment\"> * block limit, and also a limit of (2^32 - 1) 512-byte sectors in i_blocks.</span>", 
"<span class=\"comment\"> * We need to be 1 filesystem block less than the 2^32 sector limit.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#ext2_max_size\">ext2_max_size</a>(int <a class=\"id\" href=\"#bits\">bits</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#EXT2_NDIR_BLOCKS\">EXT2_NDIR_BLOCKS</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#meta_blocks\">meta_blocks</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#upper_limit\">upper_limit</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* This is calculated to be the largest file size for a</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * dense, file such that the total number of</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * sectors in the file, including data and all indirect blocks,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * does not exceed 2^32 -1</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * __u32 i_blocks representing the total number of</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 512 bytes blocks of the file</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#upper_limit\">upper_limit</a> = (1LL << 32) - 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* total blocks in file system block size */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#upper_limit\">upper_limit</a> >>= (<a class=\"id\" href=\"#bits\">bits</a> - 9);", 
"", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* indirect blocks */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#meta_blocks\">meta_blocks</a> = 1;", 
"<span class=\"ts\"/><span class=\"comment\">/* double indirect blocks */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#meta_blocks\">meta_blocks</a> += 1 + (1LL << (<a class=\"id\" href=\"#bits\">bits</a>-2));", 
"<span class=\"ts\"/><span class=\"comment\">/* tripple indirect blocks */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#meta_blocks\">meta_blocks</a> += 1 + (1LL << (<a class=\"id\" href=\"#bits\">bits</a>-2)) + (1LL << (2*(<a class=\"id\" href=\"#bits\">bits</a>-2)));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#upper_limit\">upper_limit</a> -= <a class=\"id\" href=\"#meta_blocks\">meta_blocks</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#upper_limit\">upper_limit</a> <<= <a class=\"id\" href=\"#bits\">bits</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> += 1LL << (<a class=\"id\" href=\"#bits\">bits</a>-2);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> += 1LL << (2*(<a class=\"id\" href=\"#bits\">bits</a>-2));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> += 1LL << (3*(<a class=\"id\" href=\"#bits\">bits</a>-2));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> <<= <a class=\"id\" href=\"#bits\">bits</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a> &gt; <a class=\"id\" href=\"#upper_limit\">upper_limit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#upper_limit\">upper_limit</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a> &gt; <a class=\"id\" href=\"#MAX_LFS_FILESIZE\">MAX_LFS_FILESIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#MAX_LFS_FILESIZE\">MAX_LFS_FILESIZE</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"}", 
"", 
"static unsigned long <a class=\"id\" href=\"#descriptor_loc\">descriptor_loc</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    unsigned long <a class=\"id\" href=\"#logic_sb_block\">logic_sb_block</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    int <a class=\"id\" href=\"#nr\">nr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext2_sb_info\">ext2_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT2_SB\">EXT2_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#bg\">bg</a>, <a class=\"id\" href=\"#first_meta_bg\">first_meta_bg</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#has_super\">has_super</a> = 0;", 
"<span class=\"ts\"/>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#first_meta_bg\">first_meta_bg</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_first_meta_bg\">s_first_meta_bg</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#EXT2_HAS_INCOMPAT_FEATURE\">EXT2_HAS_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT2_FEATURE_INCOMPAT_META_BG\">EXT2_FEATURE_INCOMPAT_META_BG</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#nr\">nr</a> &lt; <a class=\"id\" href=\"#first_meta_bg\">first_meta_bg</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#logic_sb_block\">logic_sb_block</a> + <a class=\"id\" href=\"#nr\">nr</a> + 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bg\">bg</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_desc_per_block\">s_desc_per_block</a> * <a class=\"id\" href=\"#nr\">nr</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext2_bg_has_super\">ext2_bg_has_super</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#bg\">bg</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#has_super\">has_super</a> = 1;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ext2_group_first_block_no\">ext2_group_first_block_no</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#bg\">bg</a>) + <a class=\"id\" href=\"#has_super\">has_super</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext2_fill_super\">ext2_fill_super</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, void *<a class=\"id\" href=\"#data\">data</a>, int <a class=\"id\" href=\"#silent\">silent</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> * <a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext2_sb_info\">ext2_sb_info</a> * <a class=\"id\" href=\"#sbi\">sbi</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext2_super_block\">ext2_super_block</a> * <a class=\"id\" href=\"#es\">es</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#root\">root</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#block\">block</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#sb_block\">sb_block</a> = <a class=\"id\" href=\"#get_sb_block\">get_sb_block</a>(&amp;<a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#logic_sb_block\">logic_sb_block</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a>;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#blocksize\">blocksize</a> = <a class=\"id\" href=\"#BLOCK_SIZE\">BLOCK_SIZE</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#db_count\">db_count</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#j\">j</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> <a class=\"id\" href=\"#features\">features</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#sbi\">sbi</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sbi\">sbi</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_blockgroup_lock\">s_blockgroup_lock</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#blockgroup_lock\">blockgroup_lock</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_blockgroup_lock\">s_blockgroup_lock</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sbi\">sbi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_fs_info\">s_fs_info</a> = <a class=\"id\" href=\"#sbi\">sbi</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_sb_block\">s_sb_block</a> = <a class=\"id\" href=\"#sb_block\">sb_block</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_lock\">s_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * See what the current blocksize for the device is, and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * use that as the blocksize.  Otherwise (or if the blocksize</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * is smaller than the default) use the default.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This is important for devices that have a hardware</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * sectorsize that is larger than the default.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blocksize\">blocksize</a> = <a class=\"id\" href=\"#sb_min_blocksize\">sb_min_blocksize</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#BLOCK_SIZE\">BLOCK_SIZE</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#blocksize\">blocksize</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error: unable to set blocksize\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_sbi\">failed_sbi</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the superblock doesn't start on a hardware sector boundary,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * calculate the offset.  </span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#blocksize\">blocksize</a> != <a class=\"id\" href=\"#BLOCK_SIZE\">BLOCK_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#logic_sb_block\">logic_sb_block</a> = (<a class=\"id\" href=\"#sb_block\">sb_block</a>*<a class=\"id\" href=\"#BLOCK_SIZE\">BLOCK_SIZE</a>) / <a class=\"id\" href=\"#blocksize\">blocksize</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = (<a class=\"id\" href=\"#sb_block\">sb_block</a>*<a class=\"id\" href=\"#BLOCK_SIZE\">BLOCK_SIZE</a>) % <a class=\"id\" href=\"#blocksize\">blocksize</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#logic_sb_block\">logic_sb_block</a> = <a class=\"id\" href=\"#sb_block\">sb_block</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#logic_sb_block\">logic_sb_block</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error: unable to read superblock\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_sbi\">failed_sbi</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Note: s_es must be initialized as soon as possible because</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *       some ext2 macro-instructions depend on its value</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a> = (struct <a class=\"id\" href=\"#ext2_super_block\">ext2_super_block</a> *) (((char *)<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>) + <a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a> = <a class=\"id\" href=\"#es\">es</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_magic\">s_magic</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_magic\">s_magic</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_magic\">s_magic</a> != <a class=\"id\" href=\"#EXT2_SUPER_MAGIC\">EXT2_SUPER_MAGIC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cantfind_ext2\">cantfind_ext2</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Set defaults before we parse the mount options */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_default_mount_opts\">s_default_mount_opts</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT2_DEFM_DEBUG\">EXT2_DEFM_DEBUG</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#DEBUG\">DEBUG</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT2_DEFM_BSDGROUPS\">EXT2_DEFM_BSDGROUPS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#GRPID\">GRPID</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT2_DEFM_UID16\">EXT2_DEFM_UID16</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#NO_UID32\">NO_UID32</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EXT2_FS_XATTR\">CONFIG_EXT2_FS_XATTR</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT2_DEFM_XATTR_USER\">EXT2_DEFM_XATTR_USER</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#XATTR_USER\">XATTR_USER</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EXT2_FS_POSIX_ACL\">CONFIG_EXT2_FS_POSIX_ACL</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT2_DEFM_ACL\">EXT2_DEFM_ACL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#POSIX_ACL\">POSIX_ACL</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_errors\">s_errors</a>) == <a class=\"id\" href=\"#EXT2_ERRORS_PANIC\">EXT2_ERRORS_PANIC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ERRORS_PANIC\">ERRORS_PANIC</a>);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_errors\">s_errors</a>) == <a class=\"id\" href=\"#EXT2_ERRORS_CONTINUE\">EXT2_ERRORS_CONTINUE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ERRORS_CONT\">ERRORS_CONT</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ERRORS_RO\">ERRORS_RO</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resuid\">s_resuid</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_def_resuid\">s_def_resuid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resgid\">s_resgid</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_def_resgid\">s_def_resgid</a>);", 
"<span class=\"ts\"/>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#RESERVATION\">RESERVATION</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#parse_options\">parse_options</a>((char *) <a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#sb\">sb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> = (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; ~<a class=\"id\" href=\"#MS_POSIXACL\">MS_POSIXACL</a>) |", 
"<span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#EXT2_SB\">EXT2_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a> &amp; <a class=\"id\" href=\"#EXT2_MOUNT_POSIX_ACL\">EXT2_MOUNT_POSIX_ACL</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#MS_POSIXACL\">MS_POSIXACL</a> : 0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext2_xip_verify_sb\">ext2_xip_verify_sb</a>(<a class=\"id\" href=\"#sb\">sb</a>); <span class=\"comment\">/* see if bdev supports xip, unset</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    EXT2_MOUNT_XIP if not */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_rev_level\">s_rev_level</a>) == <a class=\"id\" href=\"#EXT2_GOOD_OLD_REV\">EXT2_GOOD_OLD_REV</a> &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#EXT2_HAS_COMPAT_FEATURE\">EXT2_HAS_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, ~0U) ||", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#EXT2_HAS_RO_COMPAT_FEATURE\">EXT2_HAS_RO_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, ~0U) ||", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#EXT2_HAS_INCOMPAT_FEATURE\">EXT2_HAS_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, ~0U)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"warning: feature flags set on rev 0 fs, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"running e2fsck is recommended\");", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Check feature flags regardless of the revision level, since we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * previously didn't change the revision level when setting the flags,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so there is a chance incompat flags are set on a rev 0 filesystem.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#features\">features</a> = <a class=\"id\" href=\"#EXT2_HAS_INCOMPAT_FEATURE\">EXT2_HAS_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, ~<a class=\"id\" href=\"#EXT2_FEATURE_INCOMPAT_SUPP\">EXT2_FEATURE_INCOMPAT_SUPP</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#features\">features</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,<span class=\"ts\"/>\"error: couldn't mount because of \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"unsupported optional features (%x)\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#features\">features</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#features\">features</a> = <a class=\"id\" href=\"#EXT2_HAS_RO_COMPAT_FEATURE\">EXT2_HAS_RO_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, ~<a class=\"id\" href=\"#EXT2_FEATURE_RO_COMPAT_SUPP\">EXT2_FEATURE_RO_COMPAT_SUPP</a>))){", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error: couldn't mount RDWR because of \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"unsupported optional features (%x)\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#features\">features</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blocksize\">blocksize</a> = <a class=\"id\" href=\"#BLOCK_SIZE\">BLOCK_SIZE</a> << <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_log_block_size\">s_log_block_size</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext2_use_xip\">ext2_use_xip</a>(<a class=\"id\" href=\"#sb\">sb</a>) && <a class=\"id\" href=\"#blocksize\">blocksize</a> != <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#silent\">silent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"error: unsupported blocksize for xip\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If the blocksize doesn't match, re-read the thing.. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> != <a class=\"id\" href=\"#blocksize\">blocksize</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#sb_set_blocksize\">sb_set_blocksize</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#blocksize\">blocksize</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error: blocksize is too small\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_sbi\">failed_sbi</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#logic_sb_block\">logic_sb_block</a> = (<a class=\"id\" href=\"#sb_block\">sb_block</a>*<a class=\"id\" href=\"#BLOCK_SIZE\">BLOCK_SIZE</a>) / <a class=\"id\" href=\"#blocksize\">blocksize</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = (<a class=\"id\" href=\"#sb_block\">sb_block</a>*<a class=\"id\" href=\"#BLOCK_SIZE\">BLOCK_SIZE</a>) % <a class=\"id\" href=\"#blocksize\">blocksize</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#logic_sb_block\">logic_sb_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if(!<a class=\"id\" href=\"#bh\">bh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error: couldn't read\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"superblock on 2nd try\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_sbi\">failed_sbi</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a> = (struct <a class=\"id\" href=\"#ext2_super_block\">ext2_super_block</a> *) (((char *)<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>) + <a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a> = <a class=\"id\" href=\"#es\">es</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_magic\">s_magic</a> != <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#EXT2_SUPER_MAGIC\">EXT2_SUPER_MAGIC</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error: magic mismatch\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_maxbytes\">s_maxbytes</a> = <a class=\"id\" href=\"#ext2_max_size\">ext2_max_size</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize_bits\">s_blocksize_bits</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_rev_level\">s_rev_level</a>) == <a class=\"id\" href=\"#EXT2_GOOD_OLD_REV\">EXT2_GOOD_OLD_REV</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inode_size\">s_inode_size</a> = <a class=\"id\" href=\"#EXT2_GOOD_OLD_INODE_SIZE\">EXT2_GOOD_OLD_INODE_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_first_ino\">s_first_ino</a> = <a class=\"id\" href=\"#EXT2_GOOD_OLD_FIRST_INO\">EXT2_GOOD_OLD_FIRST_INO</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inode_size\">s_inode_size</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_inode_size\">s_inode_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_first_ino\">s_first_ino</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_first_ino\">s_first_ino</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inode_size\">s_inode_size</a> &lt; <a class=\"id\" href=\"#EXT2_GOOD_OLD_INODE_SIZE\">EXT2_GOOD_OLD_INODE_SIZE</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#is_power_of_2\">is_power_of_2</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inode_size\">s_inode_size</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inode_size\">s_inode_size</a> &gt; <a class=\"id\" href=\"#blocksize\">blocksize</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"error: unsupported inode size: %d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inode_size\">s_inode_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_frag_size\">s_frag_size</a> = <a class=\"id\" href=\"#EXT2_MIN_FRAG_SIZE\">EXT2_MIN_FRAG_SIZE</a> <<", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_log_frag_size\">s_log_frag_size</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_frag_size\">s_frag_size</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cantfind_ext2\">cantfind_ext2</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_frags_per_block\">s_frags_per_block</a> = <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> / <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_frag_size\">s_frag_size</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_blocks_per_group\">s_blocks_per_group</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_blocks_per_group\">s_blocks_per_group</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_frags_per_group\">s_frags_per_group</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_frags_per_group\">s_frags_per_group</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inodes_per_group\">s_inodes_per_group</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_inodes_per_group\">s_inodes_per_group</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT2_INODE_SIZE\">EXT2_INODE_SIZE</a>(<a class=\"id\" href=\"#sb\">sb</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cantfind_ext2\">cantfind_ext2</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inodes_per_block\">s_inodes_per_block</a> = <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> / <a class=\"id\" href=\"#EXT2_INODE_SIZE\">EXT2_INODE_SIZE</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inodes_per_block\">s_inodes_per_block</a> == 0 || <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inodes_per_group\">s_inodes_per_group</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cantfind_ext2\">cantfind_ext2</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_itb_per_group\">s_itb_per_group</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inodes_per_group\">s_inodes_per_group</a> /", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inodes_per_block\">s_inodes_per_block</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_desc_per_block\">s_desc_per_block</a> = <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> /", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sizeof (struct <a class=\"id\" href=\"#ext2_group_desc\">ext2_group_desc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_sbh\">s_sbh</a> = <a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_state\">s_mount_state</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_state\">s_state</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_addr_per_block_bits\">s_addr_per_block_bits</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ilog2\">ilog2</a> (<a class=\"id\" href=\"#EXT2_ADDR_PER_BLOCK\">EXT2_ADDR_PER_BLOCK</a>(<a class=\"id\" href=\"#sb\">sb</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_desc_per_block_bits\">s_desc_per_block_bits</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ilog2\">ilog2</a> (<a class=\"id\" href=\"#EXT2_DESC_PER_BLOCK\">EXT2_DESC_PER_BLOCK</a>(<a class=\"id\" href=\"#sb\">sb</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_magic\">s_magic</a> != <a class=\"id\" href=\"#EXT2_SUPER_MAGIC\">EXT2_SUPER_MAGIC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cantfind_ext2\">cantfind_ext2</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> != <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_size\">b_size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#silent\">silent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error: unsupported blocksize\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> != <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_frag_size\">s_frag_size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"error: fragsize %lu != blocksize %lu\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"(not supported yet)\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_frag_size\">s_frag_size</a>, <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_blocks_per_group\">s_blocks_per_group</a> &gt; <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> * 8) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"error: #blocks per group too big: %lu\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_blocks_per_group\">s_blocks_per_group</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_frags_per_group\">s_frags_per_group</a> &gt; <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> * 8) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"error: #fragments per group too big: %lu\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_frags_per_group\">s_frags_per_group</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inodes_per_group\">s_inodes_per_group</a> &gt; <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> * 8) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"error: #inodes per group too big: %lu\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inodes_per_group\">s_inodes_per_group</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT2_BLOCKS_PER_GROUP\">EXT2_BLOCKS_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cantfind_ext2\">cantfind_ext2</a>;", 
" <span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_groups_count\">s_groups_count</a> = ((<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_blocks_count\">s_blocks_count</a>) -", 
" <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_first_data_block\">s_first_data_block</a>) - 1)", 
" <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>/ <a class=\"id\" href=\"#EXT2_BLOCKS_PER_GROUP\">EXT2_BLOCKS_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>)) + 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#db_count\">db_count</a> = (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_groups_count\">s_groups_count</a> + <a class=\"id\" href=\"#EXT2_DESC_PER_BLOCK\">EXT2_DESC_PER_BLOCK</a>(<a class=\"id\" href=\"#sb\">sb</a>) - 1) /", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#EXT2_DESC_PER_BLOCK\">EXT2_DESC_PER_BLOCK</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_group_desc\">s_group_desc</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a> (<a class=\"id\" href=\"#db_count\">db_count</a> * sizeof (struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_group_desc\">s_group_desc</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error: not enough memory\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bgl_lock_init\">bgl_lock_init</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_blockgroup_lock\">s_blockgroup_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_debts\">s_debts</a> = <a class=\"id\" href=\"#kcalloc\">kcalloc</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_groups_count\">s_groups_count</a>, sizeof(*<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_debts\">s_debts</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_debts\">s_debts</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error: not enough memory\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount_group_desc\">failed_mount_group_desc</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#db_count\">db_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#block\">block</a> = <a class=\"id\" href=\"#descriptor_loc\">descriptor_loc</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#logic_sb_block\">logic_sb_block</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_group_desc\">s_group_desc</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#block\">block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_group_desc\">s_group_desc</a>[<a class=\"id\" href=\"#i\">i</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#i\">i</a>; <a class=\"id\" href=\"#j\">j</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_group_desc\">s_group_desc</a>[<a class=\"id\" href=\"#j\">j</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"error: unable to read group descriptors\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount_group_desc\">failed_mount_group_desc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ext2_check_descriptors\">ext2_check_descriptors</a> (<a class=\"id\" href=\"#sb\">sb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"group descriptors corrupted\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount2\">failed_mount2</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_gdb_count\">s_gdb_count</a> = <a class=\"id\" href=\"#db_count\">db_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_random_bytes\">get_random_bytes</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_next_generation\">s_next_generation</a>, sizeof(<a class=\"id\" href=\"#u32\">u32</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_next_gen_lock\">s_next_gen_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* per fileystem reservation list head &amp; lock */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_rsv_window_lock\">s_rsv_window_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_rsv_window_root\">s_rsv_window_root</a> = <a class=\"id\" href=\"#RB_ROOT\">RB_ROOT</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Add a single, static dummy reservation to the start of the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * reservation window list --- it gives us a placeholder for</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * append-at-start-of-list which makes the allocation logic</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * _much_ simpler.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_rsv_window_head\">s_rsv_window_head</a>.<a class=\"id\" href=\"#rsv_start\">rsv_start</a> = <a class=\"id\" href=\"#EXT2_RESERVE_WINDOW_NOT_ALLOCATED\">EXT2_RESERVE_WINDOW_NOT_ALLOCATED</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_rsv_window_head\">s_rsv_window_head</a>.<a class=\"id\" href=\"#rsv_end\">rsv_end</a> = <a class=\"id\" href=\"#EXT2_RESERVE_WINDOW_NOT_ALLOCATED\">EXT2_RESERVE_WINDOW_NOT_ALLOCATED</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_rsv_window_head\">s_rsv_window_head</a>.<a class=\"id\" href=\"#rsv_alloc_hit\">rsv_alloc_hit</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_rsv_window_head\">s_rsv_window_head</a>.<a class=\"id\" href=\"#rsv_goal_size\">rsv_goal_size</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext2_rsv_window_add\">ext2_rsv_window_add</a>(<a class=\"id\" href=\"#sb\">sb</a>, &amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_rsv_window_head\">s_rsv_window_head</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#percpu_counter_init\">percpu_counter_init</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_freeblocks_counter\">s_freeblocks_counter</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_count_free_blocks\">ext2_count_free_blocks</a>(<a class=\"id\" href=\"#sb\">sb</a>));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#percpu_counter_init\">percpu_counter_init</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_freeinodes_counter\">s_freeinodes_counter</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_count_free_inodes\">ext2_count_free_inodes</a>(<a class=\"id\" href=\"#sb\">sb</a>));", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#percpu_counter_init\">percpu_counter_init</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_dirs_counter\">s_dirs_counter</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_count_dirs\">ext2_count_dirs</a>(<a class=\"id\" href=\"#sb\">sb</a>));", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error: insufficient memory\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount3\">failed_mount3</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * set up enough so that it can read an inode</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_op\">s_op</a> = &amp;<a class=\"id\" href=\"#ext2_sops\">ext2_sops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_export_op\">s_export_op</a> = &amp;<a class=\"id\" href=\"#ext2_export_ops\">ext2_export_ops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_xattr\">s_xattr</a> = <a class=\"id\" href=\"#ext2_xattr_handlers\">ext2_xattr_handlers</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#dq_op\">dq_op</a> = &amp;<a class=\"id\" href=\"#dquot_operations\">dquot_operations</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_qcop\">s_qcop</a> = &amp;<a class=\"id\" href=\"#dquot_quotactl_ops\">dquot_quotactl_ops</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#root\">root</a> = <a class=\"id\" href=\"#ext2_iget\">ext2_iget</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT2_ROOT_INO\">EXT2_ROOT_INO</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#root\">root</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount3\">failed_mount3</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#S_ISDIR\">S_ISDIR</a>(<a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>) || !<a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#i_blocks\">i_blocks</a> || !<a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#i_size\">i_size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error: corrupt root inode, run e2fsck\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount3\">failed_mount3</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_root\">s_root</a> = <a class=\"id\" href=\"#d_alloc_root\">d_alloc_root</a>(<a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_root\">s_root</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error: get root inode failed\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount3\">failed_mount3</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT2_HAS_COMPAT_FEATURE\">EXT2_HAS_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT3_FEATURE_COMPAT_HAS_JOURNAL\">EXT3_FEATURE_COMPAT_HAS_JOURNAL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"warning: mounting ext3 filesystem as ext2\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext2_setup_super\">ext2_setup_super</a> (<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#es\">es</a>, <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> |= <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext2_write_super\">ext2_write_super</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#cantfind_ext2\">cantfind_ext2</a>:", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#silent\">silent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"error: can't find an ext2 filesystem on dev %s.\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_id\">s_id</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"<a class=\"id\" href=\"#failed_mount3\">failed_mount3</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#percpu_counter_destroy\">percpu_counter_destroy</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_freeblocks_counter\">s_freeblocks_counter</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#percpu_counter_destroy\">percpu_counter_destroy</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_freeinodes_counter\">s_freeinodes_counter</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#percpu_counter_destroy\">percpu_counter_destroy</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_dirs_counter\">s_dirs_counter</a>);", 
"<a class=\"id\" href=\"#failed_mount2\">failed_mount2</a>:", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#db_count\">db_count</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_group_desc\">s_group_desc</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<a class=\"id\" href=\"#failed_mount_group_desc\">failed_mount_group_desc</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_group_desc\">s_group_desc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_debts\">s_debts</a>);", 
"<a class=\"id\" href=\"#failed_mount\">failed_mount</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<a class=\"id\" href=\"#failed_sbi\">failed_sbi</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_fs_info\">s_fs_info</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_blockgroup_lock\">s_blockgroup_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sbi\">sbi</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ext2_clear_super_error\">ext2_clear_super_error</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#sbh\">sbh</a> = <a class=\"id\" href=\"#EXT2_SB\">EXT2_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_sbh\">s_sbh</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#buffer_write_io_error\">buffer_write_io_error</a>(<a class=\"id\" href=\"#sbh\">sbh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Oh, dear.  A previous attempt to write the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * superblock failed.  This could happen because the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * USB device was yanked out.  Or it could happen to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * be a transient write error and maybe the block will</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * be remapped.  Nothing we can do but to retry the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * write and hope for the best.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"previous I/O error to superblock detected\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_buffer_write_io_error\">clear_buffer_write_io_error</a>(<a class=\"id\" href=\"#sbh\">sbh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_buffer_uptodate\">set_buffer_uptodate</a>(<a class=\"id\" href=\"#sbh\">sbh</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ext2_sync_super\">ext2_sync_super</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, struct <a class=\"id\" href=\"#ext2_super_block\">ext2_super_block</a> *<a class=\"id\" href=\"#es\">es</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    int <a class=\"id\" href=\"#wait\">wait</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext2_clear_super_error\">ext2_clear_super_error</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#EXT2_SB\">EXT2_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_lock\">s_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_free_blocks_count\">s_free_blocks_count</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#ext2_count_free_blocks\">ext2_count_free_blocks</a>(<a class=\"id\" href=\"#sb\">sb</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_free_inodes_count\">s_free_inodes_count</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#ext2_count_free_inodes\">ext2_count_free_inodes</a>(<a class=\"id\" href=\"#sb\">sb</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_wtime\">s_wtime</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#get_seconds\">get_seconds</a>());", 
"<span class=\"ts\"/><span class=\"comment\">/* unlock before we do IO */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#EXT2_SB\">EXT2_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_lock\">s_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mark_buffer_dirty\">mark_buffer_dirty</a>(<a class=\"id\" href=\"#EXT2_SB\">EXT2_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_sbh\">s_sbh</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#wait\">wait</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sync_dirty_buffer\">sync_dirty_buffer</a>(<a class=\"id\" href=\"#EXT2_SB\">EXT2_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_sbh\">s_sbh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_dirt\">s_dirt</a> = 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * In the second extended file system, it is not necessary to</span>", 
"<span class=\"comment\"> * write the super block since we use a mapping of the</span>", 
"<span class=\"comment\"> * disk super block in a buffer.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * However, this function is still used to set the fs valid</span>", 
"<span class=\"comment\"> * flags to 0.  We need to set this flag to 0 since the fs</span>", 
"<span class=\"comment\"> * may have been checked while mounted and e2fsck may have</span>", 
"<span class=\"comment\"> * set s_state to EXT2_VALID_FS after some corrections.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ext2_sync_fs\">ext2_sync_fs</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#wait\">wait</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext2_sb_info\">ext2_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT2_SB\">EXT2_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext2_super_block\">ext2_super_block</a> *<a class=\"id\" href=\"#es\">es</a> = <a class=\"id\" href=\"#EXT2_SB\">EXT2_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_lock\">s_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_state\">s_state</a> &amp; <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#EXT2_VALID_FS\">EXT2_VALID_FS</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_debug\">ext2_debug</a>(\"setting valid to 0\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_state\">s_state</a> &= <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(~<a class=\"id\" href=\"#EXT2_VALID_FS\">EXT2_VALID_FS</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_lock\">s_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext2_sync_super\">ext2_sync_super</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#es\">es</a>, <a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"", 
"void <a class=\"id\" href=\"#ext2_write_super\">ext2_write_super</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_sync_fs\">ext2_sync_fs</a>(<a class=\"id\" href=\"#sb\">sb</a>, 1);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_dirt\">s_dirt</a> = 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext2_remount\">ext2_remount</a> (struct <a class=\"id\" href=\"#super_block\">super_block</a> * <a class=\"id\" href=\"#sb\">sb</a>, int * <a class=\"id\" href=\"#flags\">flags</a>, char * <a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext2_sb_info\">ext2_sb_info</a> * <a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT2_SB\">EXT2_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext2_super_block\">ext2_super_block</a> * <a class=\"id\" href=\"#es\">es</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#old_mount_opt\">old_mount_opt</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext2_mount_options\">ext2_mount_options</a> <a class=\"id\" href=\"#old_opts\">old_opts</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#old_sb_flags\">old_sb_flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_lock\">s_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Store the old options */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_sb_flags\">old_sb_flags</a> = <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_resuid\">s_resuid</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resuid\">s_resuid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_resgid\">s_resgid</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resgid\">s_resgid</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Allow the \"check\" option to be passed as a remount option.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#parse_options\">parse_options</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#sb\">sb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#restore_opts\">restore_opts</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> = (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; ~<a class=\"id\" href=\"#MS_POSIXACL\">MS_POSIXACL</a>) |", 
"<span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a> &amp; <a class=\"id\" href=\"#EXT2_MOUNT_POSIX_ACL\">EXT2_MOUNT_POSIX_ACL</a>) ? <a class=\"id\" href=\"#MS_POSIXACL\">MS_POSIXACL</a> : 0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext2_xip_verify_sb\">ext2_xip_verify_sb</a>(<a class=\"id\" href=\"#sb\">sb</a>); <span class=\"comment\">/* see if bdev supports xip, unset</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    EXT2_MOUNT_XIP if not */</span>", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ext2_use_xip\">ext2_use_xip</a>(<a class=\"id\" href=\"#sb\">sb</a>)) && (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> != <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"warning: unsupported blocksize for xip\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#restore_opts\">restore_opts</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>;", 
"<span class=\"ts\"/>if (((<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a> &amp; <a class=\"id\" href=\"#EXT2_MOUNT_XIP\">EXT2_MOUNT_XIP</a>) !=", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#old_mount_opt\">old_mount_opt</a> &amp; <a class=\"id\" href=\"#EXT2_MOUNT_XIP\">EXT2_MOUNT_XIP</a>)) &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#invalidate_inodes\">invalidate_inodes</a>(<a class=\"id\" href=\"#sb\">sb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>, \"warning: refusing change of \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"xip flag with busy inodes while remounting\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a> &= ~<a class=\"id\" href=\"#EXT2_MOUNT_XIP\">EXT2_MOUNT_XIP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a> |= <a class=\"id\" href=\"#old_mount_opt\">old_mount_opt</a> &amp; <a class=\"id\" href=\"#EXT2_MOUNT_XIP\">EXT2_MOUNT_XIP</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if ((*<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>) == (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_lock\">s_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_state\">s_state</a>) &amp; <a class=\"id\" href=\"#EXT2_VALID_FS\">EXT2_VALID_FS</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    !(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_state\">s_mount_state</a> &amp; <a class=\"id\" href=\"#EXT2_VALID_FS\">EXT2_VALID_FS</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_lock\">s_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * OK, we are remounting a valid rw partition rdonly, so set</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the rdonly flag and then mark the partition as valid again.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_state\">s_state</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_state\">s_mount_state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_mtime\">s_mtime</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#get_seconds\">get_seconds</a>());", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_lock\">s_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#dquot_suspend\">dquot_suspend</a>(<a class=\"id\" href=\"#sb\">sb</a>, -1);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_lock\">s_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#restore_opts\">restore_opts</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_sync_super\">ext2_sync_super</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#es\">es</a>, 1);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> <a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#EXT2_HAS_RO_COMPAT_FEATURE\">EXT2_HAS_RO_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       ~<a class=\"id\" href=\"#EXT2_FEATURE_RO_COMPAT_SUPP\">EXT2_FEATURE_RO_COMPAT_SUPP</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"warning: couldn't remount RDWR because of \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"unsupported optional features (%x).\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ret\">ret</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EROFS\">EROFS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#restore_opts\">restore_opts</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Mounting a RDONLY partition read-write, so reread and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * store the current valid flag.  (It may have been changed</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * by e2fsck since we originally mounted the partition.)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_state\">s_mount_state</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_state\">s_state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ext2_setup_super\">ext2_setup_super</a> (<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#es\">es</a>, 0))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &= ~<a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_lock\">s_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_write_super\">ext2_write_super</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dquot_resume\">dquot_resume</a>(<a class=\"id\" href=\"#sb\">sb</a>, -1);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"<a class=\"id\" href=\"#restore_opts\">restore_opts</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a> = <a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resuid\">s_resuid</a> = <a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_resuid\">s_resuid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resgid\">s_resgid</a> = <a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_resgid\">s_resgid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> = <a class=\"id\" href=\"#old_sb_flags\">old_sb_flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_lock\">s_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext2_statfs\">ext2_statfs</a> (struct <a class=\"id\" href=\"#dentry\">dentry</a> * <a class=\"id\" href=\"#dentry\">dentry</a>, struct <a class=\"id\" href=\"#kstatfs\">kstatfs</a> * <a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_sb\">d_sb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext2_sb_info\">ext2_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT2_SB\">EXT2_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext2_super_block\">ext2_super_block</a> *<a class=\"id\" href=\"#es\">es</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#fsid\">fsid</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_lock\">s_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a> (<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#MINIX_DF\">MINIX_DF</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_overhead_last\">s_overhead_last</a> = 0;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_blocks_last\">s_blocks_last</a> != <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_blocks_count\">s_blocks_count</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#overhead\">overhead</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smp_rmb\">smp_rmb</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Compute the overhead (FS structures). This is constant</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * for a given filesystem unless the number of block groups</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * changes so we cache the previous value until it does.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * All of the blocks before first_data_block are</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * overhead</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#overhead\">overhead</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_first_data_block\">s_first_data_block</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Add the overhead attributed to the superblock and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * block group descriptors.  If the sparse superblocks</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * feature is turned on, then not all groups have this.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_groups_count\">s_groups_count</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#overhead\">overhead</a> += <a class=\"id\" href=\"#ext2_bg_has_super\">ext2_bg_has_super</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#i\">i</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_bg_num_gdb\">ext2_bg_num_gdb</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Every block group has an inode bitmap, a block</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * bitmap, and an inode table.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#overhead\">overhead</a> += (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_groups_count\">s_groups_count</a> *", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     (2 + <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_itb_per_group\">s_itb_per_group</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_overhead_last\">s_overhead_last</a> = <a class=\"id\" href=\"#overhead\">overhead</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smp_wmb\">smp_wmb</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_blocks_last\">s_blocks_last</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_blocks_count\">s_blocks_count</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_type\">f_type</a> = <a class=\"id\" href=\"#EXT2_SUPER_MAGIC\">EXT2_SUPER_MAGIC</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_bsize\">f_bsize</a> = <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_blocks\">f_blocks</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_blocks_count\">s_blocks_count</a>) - <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_overhead_last\">s_overhead_last</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_bfree\">f_bfree</a> = <a class=\"id\" href=\"#ext2_count_free_blocks\">ext2_count_free_blocks</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_free_blocks_count\">s_free_blocks_count</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_bfree\">f_bfree</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_bavail\">f_bavail</a> = <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_bfree\">f_bfree</a> - <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_r_blocks_count\">s_r_blocks_count</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_bfree\">f_bfree</a> &lt; <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_r_blocks_count\">s_r_blocks_count</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_bavail\">f_bavail</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_files\">f_files</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_inodes_count\">s_inodes_count</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_ffree\">f_ffree</a> = <a class=\"id\" href=\"#ext2_count_free_inodes\">ext2_count_free_inodes</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_free_inodes_count\">s_free_inodes_count</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_ffree\">f_ffree</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_namelen\">f_namelen</a> = <a class=\"id\" href=\"#EXT2_NAME_LEN\">EXT2_NAME_LEN</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fsid\">fsid</a> = <a class=\"id\" href=\"#le64_to_cpup\">le64_to_cpup</a>((void *)<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_uuid\">s_uuid</a>) ^", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#le64_to_cpup\">le64_to_cpup</a>((void *)<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_uuid\">s_uuid</a> + sizeof(<a class=\"id\" href=\"#u64\">u64</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_fsid\">f_fsid</a>.<a class=\"id\" href=\"#val\">val</a>[0] = <a class=\"id\" href=\"#fsid\">fsid</a> &amp; 0xFFFFFFFFUL;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_fsid\">f_fsid</a>.<a class=\"id\" href=\"#val\">val</a>[1] = (<a class=\"id\" href=\"#fsid\">fsid</a> >> 32) &amp; 0xFFFFFFFFUL;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_lock\">s_lock</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext2_get_sb\">ext2_get_sb</a>(struct <a class=\"id\" href=\"#file_system_type\">file_system_type</a> *<a class=\"id\" href=\"#fs_type\">fs_type</a>,", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#flags\">flags</a>, const char *<a class=\"id\" href=\"#dev_name\">dev_name</a>, void *<a class=\"id\" href=\"#data\">data</a>, struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#mnt\">mnt</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#get_sb_bdev\">get_sb_bdev</a>(<a class=\"id\" href=\"#fs_type\">fs_type</a>, <a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#dev_name\">dev_name</a>, <a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#ext2_fill_super\">ext2_fill_super</a>, <a class=\"id\" href=\"#mnt\">mnt</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"", 
"<span class=\"comment\">/* Read data from quotafile - avoid pagecache and such because we cannot afford</span>", 
"<span class=\"comment\"> * acquiring the locks... As quota files are never truncated and quota code</span>", 
"<span class=\"comment\"> * itself serializes the operations (and noone else should touch the files)</span>", 
"<span class=\"comment\"> * we don't have to be afraid of races */</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ext2_quota_read\">ext2_quota_read</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>, char *<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#off\">off</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#sb_dqopt\">sb_dqopt</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#files\">files</a>[<a class=\"id\" href=\"#type\">type</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#blk\">blk</a> = <a class=\"id\" href=\"#off\">off</a> >> <a class=\"id\" href=\"#EXT2_BLOCK_SIZE_BITS\">EXT2_BLOCK_SIZE_BITS</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#off\">off</a> &amp; (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> - 1);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#tocopy\">tocopy</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#toread\">toread</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> <a class=\"id\" href=\"#tmp_bh\">tmp_bh</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#i_size\">i_size</a> = <a class=\"id\" href=\"#i_size_read\">i_size_read</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#off\">off</a> &gt; <a class=\"id\" href=\"#i_size\">i_size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#off\">off</a>+<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#i_size\">i_size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#i_size\">i_size</a>-<a class=\"id\" href=\"#off\">off</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#toread\">toread</a> = <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#toread\">toread</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tocopy\">tocopy</a> = <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> - <a class=\"id\" href=\"#offset\">offset</a> &lt; <a class=\"id\" href=\"#toread\">toread</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> - <a class=\"id\" href=\"#offset\">offset</a> : <a class=\"id\" href=\"#toread\">toread</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp_bh\">tmp_bh</a>.<a class=\"id\" href=\"#b_state\">b_state</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp_bh\">tmp_bh</a>.<a class=\"id\" href=\"#b_size\">b_size</a> = <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext2_get_block\">ext2_get_block</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#blk\">blk</a>, &amp;<a class=\"id\" href=\"#tmp_bh\">tmp_bh</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#buffer_mapped\">buffer_mapped</a>(&amp;<a class=\"id\" href=\"#tmp_bh\">tmp_bh</a>))<span class=\"ts\"/><span class=\"comment\">/* A hole? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#data\">data</a>, 0, <a class=\"id\" href=\"#tocopy\">tocopy</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#tmp_bh\">tmp_bh</a>.<a class=\"id\" href=\"#b_blocknr\">b_blocknr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>+<a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#tocopy\">tocopy</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#toread\">toread</a> -= <a class=\"id\" href=\"#tocopy\">tocopy</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> += <a class=\"id\" href=\"#tocopy\">tocopy</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk\">blk</a>++;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Write to quotafile */</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ext2_quota_write\">ext2_quota_write</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const char *<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#off\">off</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#sb_dqopt\">sb_dqopt</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#files\">files</a>[<a class=\"id\" href=\"#type\">type</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#blk\">blk</a> = <a class=\"id\" href=\"#off\">off</a> >> <a class=\"id\" href=\"#EXT2_BLOCK_SIZE_BITS\">EXT2_BLOCK_SIZE_BITS</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#off\">off</a> &amp; (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> - 1);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#tocopy\">tocopy</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#towrite\">towrite</a> = <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> <a class=\"id\" href=\"#tmp_bh\">tmp_bh</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock_nested\">mutex_lock_nested</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>, <a class=\"id\" href=\"#I_MUTEX_QUOTA\">I_MUTEX_QUOTA</a>);", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#towrite\">towrite</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tocopy\">tocopy</a> = <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> - <a class=\"id\" href=\"#offset\">offset</a> &lt; <a class=\"id\" href=\"#towrite\">towrite</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> - <a class=\"id\" href=\"#offset\">offset</a> : <a class=\"id\" href=\"#towrite\">towrite</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp_bh\">tmp_bh</a>.<a class=\"id\" href=\"#b_state\">b_state</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext2_get_block\">ext2_get_block</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#blk\">blk</a>, &amp;<a class=\"id\" href=\"#tmp_bh\">tmp_bh</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#offset\">offset</a> || <a class=\"id\" href=\"#tocopy\">tocopy</a> != <a class=\"id\" href=\"#EXT2_BLOCK_SIZE\">EXT2_BLOCK_SIZE</a>(<a class=\"id\" href=\"#sb\">sb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#tmp_bh\">tmp_bh</a>.<a class=\"id\" href=\"#b_blocknr\">b_blocknr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sb_getblk\">sb_getblk</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#tmp_bh\">tmp_bh</a>.<a class=\"id\" href=\"#b_blocknr\">b_blocknr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lock_buffer\">lock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>+<a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#tocopy\">tocopy</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flush_dcache_page\">flush_dcache_page</a>(<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_page\">b_page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_buffer_uptodate\">set_buffer_uptodate</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mark_buffer_dirty\">mark_buffer_dirty</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_buffer\">unlock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#towrite\">towrite</a> -= <a class=\"id\" href=\"#tocopy\">tocopy</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> += <a class=\"id\" href=\"#tocopy\">tocopy</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk\">blk</a>++;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> == <a class=\"id\" href=\"#towrite\">towrite</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a> &lt; <a class=\"id\" href=\"#off\">off</a>+<a class=\"id\" href=\"#len\">len</a>-<a class=\"id\" href=\"#towrite\">towrite</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i_size_write\">i_size_write</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#off\">off</a>+<a class=\"id\" href=\"#len\">len</a>-<a class=\"id\" href=\"#towrite\">towrite</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_version\">i_version</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mtime\">i_mtime</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ctime\">i_ctime</a> = <a class=\"id\" href=\"#CURRENT_TIME\">CURRENT_TIME</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mark_inode_dirty\">mark_inode_dirty</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a> - <a class=\"id\" href=\"#towrite\">towrite</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static struct <a class=\"id\" href=\"#file_system_type\">file_system_type</a> <a class=\"id\" href=\"#ext2_fs_type\">ext2_fs_type</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= \"ext2\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#get_sb\">get_sb</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ext2_get_sb\">ext2_get_sb</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#kill_sb\">kill_sb</a><span class=\"ts\"/>= <a class=\"id\" href=\"#kill_block_super\">kill_block_super</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#fs_flags\">fs_flags</a><span class=\"ts\"/>= <a class=\"id\" href=\"#FS_REQUIRES_DEV\">FS_REQUIRES_DEV</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#init_ext2_fs\">init_ext2_fs</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#init_ext2_xattr\">init_ext2_xattr</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#init_inodecache\">init_inodecache</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out1\">out1</a>;", 
"        <a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#register_filesystem\">register_filesystem</a>(&amp;<a class=\"id\" href=\"#ext2_fs_type\">ext2_fs_type</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>return 0;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#destroy_inodecache\">destroy_inodecache</a>();", 
"<a class=\"id\" href=\"#out1\">out1</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#exit_ext2_xattr\">exit_ext2_xattr</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__exit\">__exit</a> <a class=\"id\" href=\"#exit_ext2_fs\">exit_ext2_fs</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_filesystem\">unregister_filesystem</a>(&amp;<a class=\"id\" href=\"#ext2_fs_type\">ext2_fs_type</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#destroy_inodecache\">destroy_inodecache</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#exit_ext2_xattr\">exit_ext2_xattr</a>();", 
"}", 
"", 
"<a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#init_ext2_fs\">init_ext2_fs</a>)", 
"<a class=\"id\" href=\"#module_exit\">module_exit</a>(<a class=\"id\" href=\"#exit_ext2_fs\">exit_ext2_fs</a>)", 
];
xr_frag_insert('l/89/67a1e1c050d54f78a99a8a7387a5ee98123b7b.xr', __xr_tmp);
