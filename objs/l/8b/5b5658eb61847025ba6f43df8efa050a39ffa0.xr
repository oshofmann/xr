var __xr_tmp = [
"static unsigned int <a class=\"id\" href=\"#debug\">debug</a>;", 
"", 
"<span class=\"comment\">/* is the debug output ratelimit'ed using printk_ratelimit? User can</span>", 
"<span class=\"comment\"> * set or modify this value.</span>", 
"<span class=\"comment\"> */</span>", 
"static unsigned int <a class=\"id\" href=\"#debug_ratelimit\">debug_ratelimit</a> = 1;", 
"", 
"<span class=\"comment\">/* is the printk_ratelimit'ing enabled? It's enabled after a successful</span>", 
"<span class=\"comment\"> * loading of a cpufreq driver, temporarily disabled when a new policy</span>", 
"<span class=\"comment\"> * is set, and disabled upon cpufreq driver removal</span>", 
"<span class=\"comment\"> */</span>", 
"static unsigned int <a class=\"id\" href=\"#disable_ratelimit\">disable_ratelimit</a> = 1;", 
"static <a class=\"id\" href=\"#DEFINE_SPINLOCK\">DEFINE_SPINLOCK</a>(<a class=\"id\" href=\"#disable_ratelimit_lock\">disable_ratelimit_lock</a>);", 
"", 
"static void <a class=\"id\" href=\"#cpufreq_debug_enable_ratelimit\">cpufreq_debug_enable_ratelimit</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#disable_ratelimit_lock\">disable_ratelimit_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#disable_ratelimit\">disable_ratelimit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#disable_ratelimit\">disable_ratelimit</a>--;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#disable_ratelimit_lock\">disable_ratelimit_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#cpufreq_debug_disable_ratelimit\">cpufreq_debug_disable_ratelimit</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#disable_ratelimit_lock\">disable_ratelimit_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disable_ratelimit\">disable_ratelimit</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#disable_ratelimit_lock\">disable_ratelimit_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#cpufreq_debug_printk\">cpufreq_debug_printk</a>(unsigned int <a class=\"id\" href=\"#type\">type</a>, const char *<a class=\"id\" href=\"#prefix\">prefix</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const char *<a class=\"id\" href=\"#fmt\">fmt</a>, ...)", 
"{", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#s\">s</a>[256];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_list\">va_list</a> <a class=\"id\" href=\"#args\">args</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#prefix\">prefix</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> &amp; <a class=\"id\" href=\"#debug\">debug</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#disable_ratelimit_lock\">disable_ratelimit_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#disable_ratelimit\">disable_ratelimit</a> && <a class=\"id\" href=\"#debug_ratelimit\">debug_ratelimit</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&& !<a class=\"id\" href=\"#printk_ratelimit\">printk_ratelimit</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#disable_ratelimit_lock\">disable_ratelimit_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#disable_ratelimit_lock\">disable_ratelimit_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#s\">s</a>, 256, <a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"%s: \", <a class=\"id\" href=\"#prefix\">prefix</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#va_start\">va_start</a>(<a class=\"id\" href=\"#args\">args</a>, <a class=\"id\" href=\"#fmt\">fmt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#vsnprintf\">vsnprintf</a>(&amp;<a class=\"id\" href=\"#s\">s</a>[<a class=\"id\" href=\"#len\">len</a>], (256 - <a class=\"id\" href=\"#len\">len</a>), <a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#args\">args</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#va_end\">va_end</a>(<a class=\"id\" href=\"#args\">args</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#s\">s</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#len\">len</a> &lt; 5);", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#cpufreq_debug_printk\">cpufreq_debug_printk</a>);", 
"", 
"", 
"<a class=\"id\" href=\"#module_param\">module_param</a>(<a class=\"id\" href=\"#debug\">debug</a>, <a class=\"id\" href=\"#uint\">uint</a>, 0644);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#debug\">debug</a>, \"CPUfreq debugging: add 1 to debug core,\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\" 2 to debug drivers, and 4 to debug governors.\");", 
"", 
"<a class=\"id\" href=\"#module_param\">module_param</a>(<a class=\"id\" href=\"#debug_ratelimit\">debug_ratelimit</a>, <a class=\"id\" href=\"#uint\">uint</a>, 0644);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#debug_ratelimit\">debug_ratelimit</a>, \"CPUfreq debugging:\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\" set to 0 to disable ratelimiting.\");", 
"", 
"#else <span class=\"comment\">/* !CONFIG_CPU_FREQ_DEBUG */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#cpufreq_debug_enable_ratelimit\">cpufreq_debug_enable_ratelimit</a>(void) { return; }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#cpufreq_debug_disable_ratelimit\">cpufreq_debug_disable_ratelimit</a>(void) { return; }", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_CPU_FREQ_DEBUG */</span>", 
"", 
"", 
"<span class=\"comment\">/*********************************************************************</span>", 
"<span class=\"comment\"> *            EXTERNALLY AFFECTING FREQUENCY CHANGES                 *</span>", 
"<span class=\"comment\"> *********************************************************************/</span>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * adjust_jiffies - adjust the system \"loops_per_jiffy\"</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This function alters the system \"loops_per_jiffy\" for the clock</span>", 
"<span class=\"comment\"> * speed change. Note that loops_per_jiffy cannot be updated on SMP</span>", 
"<span class=\"comment\"> * systems as each CPU might be scaled differently. So, use the arch</span>", 
"<span class=\"comment\"> * per-CPU loops_per_jiffy value wherever possible.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"static unsigned long <a class=\"id\" href=\"#l_p_j_ref\">l_p_j_ref</a>;", 
"static unsigned int  <a class=\"id\" href=\"#l_p_j_ref_freq\">l_p_j_ref_freq</a>;", 
"", 
"static void <a class=\"id\" href=\"#adjust_jiffies\">adjust_jiffies</a>(unsigned long <a class=\"id\" href=\"#val\">val</a>, struct <a class=\"id\" href=\"#cpufreq_freqs\">cpufreq_freqs</a> *<a class=\"id\" href=\"#ci\">ci</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ci\">ci</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#CPUFREQ_CONST_LOOPS\">CPUFREQ_CONST_LOOPS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#l_p_j_ref_freq\">l_p_j_ref_freq</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l_p_j_ref\">l_p_j_ref</a> = <a class=\"id\" href=\"#loops_per_jiffy\">loops_per_jiffy</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l_p_j_ref_freq\">l_p_j_ref_freq</a> = <a class=\"id\" href=\"#ci\">ci</a>-><a class=\"id\" href=\"#old\">old</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"saving %lu as reference value for loops_per_jiffy; \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"freq is %u kHz\\n\", <a class=\"id\" href=\"#l_p_j_ref\">l_p_j_ref</a>, <a class=\"id\" href=\"#l_p_j_ref_freq\">l_p_j_ref_freq</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#val\">val</a> == <a class=\"id\" href=\"#CPUFREQ_PRECHANGE\">CPUFREQ_PRECHANGE</a>  && <a class=\"id\" href=\"#ci\">ci</a>-><a class=\"id\" href=\"#old\">old</a> &lt; <a class=\"id\" href=\"#ci\">ci</a>-><a class=\"id\" href=\"#new\">new</a>) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#val\">val</a> == <a class=\"id\" href=\"#CPUFREQ_POSTCHANGE\">CPUFREQ_POSTCHANGE</a> && <a class=\"id\" href=\"#ci\">ci</a>-><a class=\"id\" href=\"#old\">old</a> &gt; <a class=\"id\" href=\"#ci\">ci</a>-><a class=\"id\" href=\"#new\">new</a>) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#val\">val</a> == <a class=\"id\" href=\"#CPUFREQ_RESUMECHANGE\">CPUFREQ_RESUMECHANGE</a> || <a class=\"id\" href=\"#val\">val</a> == <a class=\"id\" href=\"#CPUFREQ_SUSPENDCHANGE\">CPUFREQ_SUSPENDCHANGE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#loops_per_jiffy\">loops_per_jiffy</a> = <a class=\"id\" href=\"#cpufreq_scale\">cpufreq_scale</a>(<a class=\"id\" href=\"#l_p_j_ref\">l_p_j_ref</a>, <a class=\"id\" href=\"#l_p_j_ref_freq\">l_p_j_ref_freq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ci\">ci</a>-><a class=\"id\" href=\"#new\">new</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"scaling loops_per_jiffy to %lu \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"for frequency %u kHz\\n\", <a class=\"id\" href=\"#loops_per_jiffy\">loops_per_jiffy</a>, <a class=\"id\" href=\"#ci\">ci</a>-><a class=\"id\" href=\"#new\">new</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#adjust_jiffies\">adjust_jiffies</a>(unsigned long <a class=\"id\" href=\"#val\">val</a>, struct <a class=\"id\" href=\"#cpufreq_freqs\">cpufreq_freqs</a> *<a class=\"id\" href=\"#ci\">ci</a>)", 
"{", 
"<span class=\"ts\"/>return;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * cpufreq_notify_transition - call notifier chain and adjust_jiffies</span>", 
"<span class=\"comment\"> * on frequency transition.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This function calls the transition notifiers and the \"adjust_jiffies\"</span>", 
"<span class=\"comment\"> * function. It is called twice on all CPU frequency changes that have</span>", 
"<span class=\"comment\"> * external effects.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#cpufreq_notify_transition\">cpufreq_notify_transition</a>(struct <a class=\"id\" href=\"#cpufreq_freqs\">cpufreq_freqs</a> *<a class=\"id\" href=\"#freqs\">freqs</a>, unsigned int <a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#irqs_disabled\">irqs_disabled</a>());", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#freqs\">freqs</a>-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"notification %u of frequency transition to %u kHz\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>, <a class=\"id\" href=\"#freqs\">freqs</a>-><a class=\"id\" href=\"#new\">new</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a> = <a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#cpufreq_cpu_data\">cpufreq_cpu_data</a>, <a class=\"id\" href=\"#freqs\">freqs</a>-><a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#state\">state</a>) {", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPUFREQ_PRECHANGE\">CPUFREQ_PRECHANGE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* detect if the driver reported a value as \"old frequency\"</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * which is not equal to what the cpufreq core thinks is</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * \"old frequency\".</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#CPUFREQ_CONST_LOOPS\">CPUFREQ_CONST_LOOPS</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#policy\">policy</a>) && (<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a> == <a class=\"id\" href=\"#freqs\">freqs</a>-><a class=\"id\" href=\"#cpu\">cpu</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cur\">cur</a>) && (<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cur\">cur</a> != <a class=\"id\" href=\"#freqs\">freqs</a>-><a class=\"id\" href=\"#old\">old</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"Warning: CPU frequency is\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\" %u, cpufreq assumed %u kHz.\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#freqs\">freqs</a>-><a class=\"id\" href=\"#old\">old</a>, <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cur\">cur</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#freqs\">freqs</a>-><a class=\"id\" href=\"#old\">old</a> = <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cur\">cur</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#srcu_notifier_call_chain\">srcu_notifier_call_chain</a>(&amp;<a class=\"id\" href=\"#cpufreq_transition_notifier_list\">cpufreq_transition_notifier_list</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#CPUFREQ_PRECHANGE\">CPUFREQ_PRECHANGE</a>, <a class=\"id\" href=\"#freqs\">freqs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#adjust_jiffies\">adjust_jiffies</a>(<a class=\"id\" href=\"#CPUFREQ_PRECHANGE\">CPUFREQ_PRECHANGE</a>, <a class=\"id\" href=\"#freqs\">freqs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPUFREQ_POSTCHANGE\">CPUFREQ_POSTCHANGE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#adjust_jiffies\">adjust_jiffies</a>(<a class=\"id\" href=\"#CPUFREQ_POSTCHANGE\">CPUFREQ_POSTCHANGE</a>, <a class=\"id\" href=\"#freqs\">freqs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"FREQ: %lu - CPU: %lu\", (unsigned long)<a class=\"id\" href=\"#freqs\">freqs</a>-><a class=\"id\" href=\"#new\">new</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long)<a class=\"id\" href=\"#freqs\">freqs</a>-><a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_power_frequency\">trace_power_frequency</a>(<a class=\"id\" href=\"#POWER_PSTATE\">POWER_PSTATE</a>, <a class=\"id\" href=\"#freqs\">freqs</a>-><a class=\"id\" href=\"#new\">new</a>, <a class=\"id\" href=\"#freqs\">freqs</a>-><a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#srcu_notifier_call_chain\">srcu_notifier_call_chain</a>(&amp;<a class=\"id\" href=\"#cpufreq_transition_notifier_list\">cpufreq_transition_notifier_list</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#CPUFREQ_POSTCHANGE\">CPUFREQ_POSTCHANGE</a>, <a class=\"id\" href=\"#freqs\">freqs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#policy\">policy</a>) && <a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a> == <a class=\"id\" href=\"#freqs\">freqs</a>-><a class=\"id\" href=\"#cpu\">cpu</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#freqs\">freqs</a>-><a class=\"id\" href=\"#new\">new</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#cpufreq_notify_transition\">cpufreq_notify_transition</a>);", 
"", 
"", 
"", 
"<span class=\"comment\">/*********************************************************************</span>", 
"<span class=\"comment\"> *                          SYSFS INTERFACE                          *</span>", 
"<span class=\"comment\"> *********************************************************************/</span>", 
"", 
"static struct <a class=\"id\" href=\"#cpufreq_governor\">cpufreq_governor</a> *<a class=\"id\" href=\"#__find_governor\">__find_governor</a>(const char *<a class=\"id\" href=\"#str_governor\">str_governor</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_governor\">cpufreq_governor</a> *<a class=\"id\" href=\"#t\">t</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#t\">t</a>, &amp;<a class=\"id\" href=\"#cpufreq_governor_list\">cpufreq_governor_list</a>, <a class=\"id\" href=\"#governor_list\">governor_list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#strnicmp\">strnicmp</a>(<a class=\"id\" href=\"#str_governor\">str_governor</a>, <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#CPUFREQ_NAME_LEN\">CPUFREQ_NAME_LEN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#t\">t</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * cpufreq_parse_governor - parse a governor string</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#cpufreq_parse_governor\">cpufreq_parse_governor</a>(char *<a class=\"id\" href=\"#str_governor\">str_governor</a>, unsigned int *<a class=\"id\" href=\"#policy\">policy</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_governor\">cpufreq_governor</a> **<a class=\"id\" href=\"#governor\">governor</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#setpolicy\">setpolicy</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#strnicmp\">strnicmp</a>(<a class=\"id\" href=\"#str_governor\">str_governor</a>, \"performance\", <a class=\"id\" href=\"#CPUFREQ_NAME_LEN\">CPUFREQ_NAME_LEN</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#policy\">policy</a> = <a class=\"id\" href=\"#CPUFREQ_POLICY_PERFORMANCE\">CPUFREQ_POLICY_PERFORMANCE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#strnicmp\">strnicmp</a>(<a class=\"id\" href=\"#str_governor\">str_governor</a>, \"powersave\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#CPUFREQ_NAME_LEN\">CPUFREQ_NAME_LEN</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#policy\">policy</a> = <a class=\"id\" href=\"#CPUFREQ_POLICY_POWERSAVE\">CPUFREQ_POLICY_POWERSAVE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#target\">target</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_governor\">cpufreq_governor</a> *<a class=\"id\" href=\"#t\">t</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#cpufreq_governor_mutex\">cpufreq_governor_mutex</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a> = <a class=\"id\" href=\"#__find_governor\">__find_governor</a>(<a class=\"id\" href=\"#str_governor\">str_governor</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#t\">t</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#kasprintf\">kasprintf</a>(<a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>, \"cpufreq_%s\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#str_governor\">str_governor</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#name\">name</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#cpufreq_governor_mutex\">cpufreq_governor_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#request_module\">request_module</a>(\"%s\", <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#cpufreq_governor_mutex\">cpufreq_governor_mutex</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a> = <a class=\"id\" href=\"#__find_governor\">__find_governor</a>(<a class=\"id\" href=\"#str_governor\">str_governor</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#t\">t</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#governor\">governor</a> = <a class=\"id\" href=\"#t\">t</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#cpufreq_governor_mutex\">cpufreq_governor_mutex</a>);", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * cpufreq_per_cpu_attr_read() / show_##file_name() -</span>", 
"<span class=\"comment\"> * print out cpufreq information</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Write out information from cpufreq_driver-&gt;policy[cpu]; object must be</span>", 
"<span class=\"comment\"> * \"unsigned int\".</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#show_one\">show_one</a>(<a class=\"id\" href=\"#file_name\">file_name</a>, <a class=\"id\" href=\"#object\">object</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#show_\">show_</a>##<a class=\"id\" href=\"#file_name\">file_name</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"(struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)<span class=\"ts\"/><span class=\"ts\"/>\\", 
"{<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%u\\n\", <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#object\">object</a>);<span class=\"ts\"/>\\", 
"}", 
"", 
"<a class=\"id\" href=\"#show_one\">show_one</a>(<a class=\"id\" href=\"#cpuinfo_min_freq\">cpuinfo_min_freq</a>, <a class=\"id\" href=\"#cpuinfo\">cpuinfo</a>.<a class=\"id\" href=\"#min_freq\">min_freq</a>);", 
"<a class=\"id\" href=\"#show_one\">show_one</a>(<a class=\"id\" href=\"#cpuinfo_max_freq\">cpuinfo_max_freq</a>, <a class=\"id\" href=\"#cpuinfo\">cpuinfo</a>.<a class=\"id\" href=\"#max_freq\">max_freq</a>);", 
"<a class=\"id\" href=\"#show_one\">show_one</a>(<a class=\"id\" href=\"#cpuinfo_transition_latency\">cpuinfo_transition_latency</a>, <a class=\"id\" href=\"#cpuinfo\">cpuinfo</a>.<a class=\"id\" href=\"#transition_latency\">transition_latency</a>);", 
"<a class=\"id\" href=\"#show_one\">show_one</a>(<a class=\"id\" href=\"#scaling_min_freq\">scaling_min_freq</a>, <a class=\"id\" href=\"#min\">min</a>);", 
"<a class=\"id\" href=\"#show_one\">show_one</a>(<a class=\"id\" href=\"#scaling_max_freq\">scaling_max_freq</a>, <a class=\"id\" href=\"#max\">max</a>);", 
"<a class=\"id\" href=\"#show_one\">show_one</a>(<a class=\"id\" href=\"#scaling_cur_freq\">scaling_cur_freq</a>, <a class=\"id\" href=\"#cur\">cur</a>);", 
"", 
"static int <a class=\"id\" href=\"#__cpufreq_set_policy\">__cpufreq_set_policy</a>(struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * cpufreq_per_cpu_attr_write() / store_##file_name() - sysfs write access</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#store_one\">store_one</a>(<a class=\"id\" href=\"#file_name\">file_name</a>, <a class=\"id\" href=\"#object\">object</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#store_\">store_</a>##<a class=\"id\" href=\"#file_name\">file_name</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"(struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a>, const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)<span class=\"ts\"/><span class=\"ts\"/>\\", 
"{<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> <a class=\"id\" href=\"#new_policy\">new_policy</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cpufreq_get_policy\">cpufreq_get_policy</a>(&amp;<a class=\"id\" href=\"#new_policy\">new_policy</a>, <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a>);<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#sscanf\">sscanf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%u\", &amp;<a class=\"id\" href=\"#new_policy\">new_policy</a>.<a class=\"id\" href=\"#object\">object</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != 1)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#__cpufreq_set_policy\">__cpufreq_set_policy</a>(<a class=\"id\" href=\"#policy\">policy</a>, &amp;<a class=\"id\" href=\"#new_policy\">new_policy</a>);<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#user_policy\">user_policy</a>.<a class=\"id\" href=\"#object\">object</a> = <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#object\">object</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a> ? <a class=\"id\" href=\"#ret\">ret</a> : <a class=\"id\" href=\"#count\">count</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"}", 
"", 
"<a class=\"id\" href=\"#store_one\">store_one</a>(<a class=\"id\" href=\"#scaling_min_freq\">scaling_min_freq</a>, <a class=\"id\" href=\"#min\">min</a>);", 
"<a class=\"id\" href=\"#store_one\">store_one</a>(<a class=\"id\" href=\"#scaling_max_freq\">scaling_max_freq</a>, <a class=\"id\" href=\"#max\">max</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * show_cpuinfo_cur_freq - current CPU frequency as detected by hardware</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#show_cpuinfo_cur_freq\">show_cpuinfo_cur_freq</a>(struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cur_freq\">cur_freq</a> = <a class=\"id\" href=\"#__cpufreq_get\">__cpufreq_get</a>(<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cur_freq\">cur_freq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"<unknown>\");", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%u\\n\", <a class=\"id\" href=\"#cur_freq\">cur_freq</a>);", 
"}", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * show_scaling_governor - show the current policy for the specified CPU</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#show_scaling_governor\">show_scaling_governor</a>(struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#policy\">policy</a> == <a class=\"id\" href=\"#CPUFREQ_POLICY_POWERSAVE\">CPUFREQ_POLICY_POWERSAVE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"powersave\\n\");", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#policy\">policy</a> == <a class=\"id\" href=\"#CPUFREQ_POLICY_PERFORMANCE\">CPUFREQ_POLICY_PERFORMANCE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"performance\\n\");", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#governor\">governor</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#scnprintf\">scnprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#CPUFREQ_NAME_LEN\">CPUFREQ_NAME_LEN</a>, \"%s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#governor\">governor</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"}", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * store_scaling_governor - store policy for the specified CPU</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#store_scaling_governor\">store_scaling_governor</a>(struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>char<span class=\"ts\"/><a class=\"id\" href=\"#str_governor\">str_governor</a>[16];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> <a class=\"id\" href=\"#new_policy\">new_policy</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cpufreq_get_policy\">cpufreq_get_policy</a>(&amp;<a class=\"id\" href=\"#new_policy\">new_policy</a>, <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#sscanf\">sscanf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%15s\", <a class=\"id\" href=\"#str_governor\">str_governor</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpufreq_parse_governor\">cpufreq_parse_governor</a>(<a class=\"id\" href=\"#str_governor\">str_governor</a>, &amp;<a class=\"id\" href=\"#new_policy\">new_policy</a>.<a class=\"id\" href=\"#policy\">policy</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#new_policy\">new_policy</a>.<a class=\"id\" href=\"#governor\">governor</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Do not use cpufreq_set_policy here or the user_policy.max</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   will be wrongly overridden */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#__cpufreq_set_policy\">__cpufreq_set_policy</a>(<a class=\"id\" href=\"#policy\">policy</a>, &amp;<a class=\"id\" href=\"#new_policy\">new_policy</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#user_policy\">user_policy</a>.<a class=\"id\" href=\"#policy\">policy</a> = <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#policy\">policy</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#user_policy\">user_policy</a>.<a class=\"id\" href=\"#governor\">governor</a> = <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#governor\">governor</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * show_scaling_driver - show the cpufreq driver currently loaded</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#show_scaling_driver\">show_scaling_driver</a>(struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#scnprintf\">scnprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#CPUFREQ_NAME_LEN\">CPUFREQ_NAME_LEN</a>, \"%s\\n\", <a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * show_scaling_available_governors - show the available CPUfreq governors</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#show_scaling_available_governors\">show_scaling_available_governors</a>(struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#i\">i</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_governor\">cpufreq_governor</a> *<a class=\"id\" href=\"#t\">t</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#target\">target</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> += <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"performance powersave\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#t\">t</a>, &amp;<a class=\"id\" href=\"#cpufreq_governor_list\">cpufreq_governor_list</a>, <a class=\"id\" href=\"#governor_list\">governor_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> >= (<a class=\"id\" href=\"#ssize_t\">ssize_t</a>) ((<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> / sizeof(char))", 
"<span class=\"ts\"/><span class=\"ts\"/>    - (<a class=\"id\" href=\"#CPUFREQ_NAME_LEN\">CPUFREQ_NAME_LEN</a> + 2)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> += <a class=\"id\" href=\"#scnprintf\">scnprintf</a>(&amp;<a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#CPUFREQ_NAME_LEN\">CPUFREQ_NAME_LEN</a>, \"%s \", <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> += <a class=\"id\" href=\"#sprintf\">sprintf</a>(&amp;<a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#i\">i</a>], \"\\n\");", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#i\">i</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#show_cpus\">show_cpus</a>(const struct <a class=\"id\" href=\"#cpumask\">cpumask</a> *<a class=\"id\" href=\"#mask\">mask</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#i\">i</a> = 0;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_cpu\">for_each_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#mask\">mask</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> += <a class=\"id\" href=\"#scnprintf\">scnprintf</a>(&amp;<a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#i\">i</a>], (<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - <a class=\"id\" href=\"#i\">i</a> - 2), \" \");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> += <a class=\"id\" href=\"#scnprintf\">scnprintf</a>(&amp;<a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#i\">i</a>], (<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - <a class=\"id\" href=\"#i\">i</a> - 2), \"%u\", <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> >= (<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - 5))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> += <a class=\"id\" href=\"#sprintf\">sprintf</a>(&amp;<a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#i\">i</a>], \"\\n\");", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#i\">i</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * show_related_cpus - show the CPUs affected by each transition even if</span>", 
"<span class=\"comment\"> * hw coordination is in use</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#show_related_cpus\">show_related_cpus</a>(struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpumask_empty\">cpumask_empty</a>(<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#related_cpus\">related_cpus</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#show_cpus\">show_cpus</a>(<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpus\">cpus</a>, <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#show_cpus\">show_cpus</a>(<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#related_cpus\">related_cpus</a>, <a class=\"id\" href=\"#buf\">buf</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * show_affected_cpus - show the CPUs affected by each transition</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#show_affected_cpus\">show_affected_cpus</a>(struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#show_cpus\">show_cpus</a>(<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpus\">cpus</a>, <a class=\"id\" href=\"#buf\">buf</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#store_scaling_setspeed\">store_scaling_setspeed</a>(struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#freq\">freq</a> = 0;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#governor\">governor</a> || !<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#governor\">governor</a>-><a class=\"id\" href=\"#store_setspeed\">store_setspeed</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#sscanf\">sscanf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%u\", &amp;<a class=\"id\" href=\"#freq\">freq</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#governor\">governor</a>-><a class=\"id\" href=\"#store_setspeed\">store_setspeed</a>(<a class=\"id\" href=\"#policy\">policy</a>, <a class=\"id\" href=\"#freq\">freq</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#show_scaling_setspeed\">show_scaling_setspeed</a>(struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#governor\">governor</a> || !<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#governor\">governor</a>-><a class=\"id\" href=\"#show_setspeed\">show_setspeed</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"<unsupported>\\n\");", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#governor\">governor</a>-><a class=\"id\" href=\"#show_setspeed\">show_setspeed</a>(<a class=\"id\" href=\"#policy\">policy</a>, <a class=\"id\" href=\"#buf\">buf</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * show_scaling_driver - show the current cpufreq HW/BIOS limitation</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#show_bios_limit\">show_bios_limit</a>(struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#limit\">limit</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#bios_limit\">bios_limit</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#bios_limit\">bios_limit</a>(<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a>, &amp;<a class=\"id\" href=\"#limit\">limit</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%u\\n\", <a class=\"id\" href=\"#limit\">limit</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%u\\n\", <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpuinfo\">cpuinfo</a>.<a class=\"id\" href=\"#max_freq\">max_freq</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#cpufreq_freq_attr_ro_perm\">cpufreq_freq_attr_ro_perm</a>(<a class=\"id\" href=\"#cpuinfo_cur_freq\">cpuinfo_cur_freq</a>, 0400);", 
"<a class=\"id\" href=\"#cpufreq_freq_attr_ro\">cpufreq_freq_attr_ro</a>(<a class=\"id\" href=\"#cpuinfo_min_freq\">cpuinfo_min_freq</a>);", 
"<a class=\"id\" href=\"#cpufreq_freq_attr_ro\">cpufreq_freq_attr_ro</a>(<a class=\"id\" href=\"#cpuinfo_max_freq\">cpuinfo_max_freq</a>);", 
"<a class=\"id\" href=\"#cpufreq_freq_attr_ro\">cpufreq_freq_attr_ro</a>(<a class=\"id\" href=\"#cpuinfo_transition_latency\">cpuinfo_transition_latency</a>);", 
"<a class=\"id\" href=\"#cpufreq_freq_attr_ro\">cpufreq_freq_attr_ro</a>(<a class=\"id\" href=\"#scaling_available_governors\">scaling_available_governors</a>);", 
"<a class=\"id\" href=\"#cpufreq_freq_attr_ro\">cpufreq_freq_attr_ro</a>(<a class=\"id\" href=\"#scaling_driver\">scaling_driver</a>);", 
"<a class=\"id\" href=\"#cpufreq_freq_attr_ro\">cpufreq_freq_attr_ro</a>(<a class=\"id\" href=\"#scaling_cur_freq\">scaling_cur_freq</a>);", 
"<a class=\"id\" href=\"#cpufreq_freq_attr_ro\">cpufreq_freq_attr_ro</a>(<a class=\"id\" href=\"#bios_limit\">bios_limit</a>);", 
"<a class=\"id\" href=\"#cpufreq_freq_attr_ro\">cpufreq_freq_attr_ro</a>(<a class=\"id\" href=\"#related_cpus\">related_cpus</a>);", 
"<a class=\"id\" href=\"#cpufreq_freq_attr_ro\">cpufreq_freq_attr_ro</a>(<a class=\"id\" href=\"#affected_cpus\">affected_cpus</a>);", 
"<a class=\"id\" href=\"#cpufreq_freq_attr_rw\">cpufreq_freq_attr_rw</a>(<a class=\"id\" href=\"#scaling_min_freq\">scaling_min_freq</a>);", 
"<a class=\"id\" href=\"#cpufreq_freq_attr_rw\">cpufreq_freq_attr_rw</a>(<a class=\"id\" href=\"#scaling_max_freq\">scaling_max_freq</a>);", 
"<a class=\"id\" href=\"#cpufreq_freq_attr_rw\">cpufreq_freq_attr_rw</a>(<a class=\"id\" href=\"#scaling_governor\">scaling_governor</a>);", 
"<a class=\"id\" href=\"#cpufreq_freq_attr_rw\">cpufreq_freq_attr_rw</a>(<a class=\"id\" href=\"#scaling_setspeed\">scaling_setspeed</a>);", 
"", 
"static struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#default_attrs\">default_attrs</a>[] = {", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#cpuinfo_min_freq\">cpuinfo_min_freq</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#cpuinfo_max_freq\">cpuinfo_max_freq</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#cpuinfo_transition_latency\">cpuinfo_transition_latency</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#scaling_min_freq\">scaling_min_freq</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#scaling_max_freq\">scaling_max_freq</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#affected_cpus\">affected_cpus</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#related_cpus\">related_cpus</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#scaling_governor\">scaling_governor</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#scaling_driver\">scaling_driver</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#scaling_available_governors\">scaling_available_governors</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#scaling_setspeed\">scaling_setspeed</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>", 
"};", 
"", 
"struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#cpufreq_global_kobject\">cpufreq_global_kobject</a>;", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#cpufreq_global_kobject\">cpufreq_global_kobject</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#to_policy\">to_policy</a>(<a class=\"id\" href=\"#k\">k</a>) <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#k\">k</a>, struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a>, <a class=\"id\" href=\"#kobj\">kobj</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#to_attr\">to_attr</a>(<a class=\"id\" href=\"#a\">a</a>) <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#a\">a</a>, struct <a class=\"id\" href=\"#freq_attr\">freq_attr</a>, <a class=\"id\" href=\"#attr\">attr</a>)", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#show\">show</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>, struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a> = <a class=\"id\" href=\"#to_policy\">to_policy</a>(<a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#freq_attr\">freq_attr</a> *<a class=\"id\" href=\"#fattr\">fattr</a> = <a class=\"id\" href=\"#to_attr\">to_attr</a>(<a class=\"id\" href=\"#attr\">attr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a> = <a class=\"id\" href=\"#cpufreq_cpu_get\">cpufreq_cpu_get</a>(<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#policy\">policy</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#no_policy\">no_policy</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lock_policy_rwsem_read\">lock_policy_rwsem_read</a>(<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fattr\">fattr</a>-><a class=\"id\" href=\"#show\">show</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#fattr\">fattr</a>-><a class=\"id\" href=\"#show\">show</a>(<a class=\"id\" href=\"#policy\">policy</a>, <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_policy_rwsem_read\">unlock_policy_rwsem_read</a>(<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<a class=\"id\" href=\"#fail\">fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_cpu_put\">cpufreq_cpu_put</a>(<a class=\"id\" href=\"#policy\">policy</a>);", 
"<a class=\"id\" href=\"#no_policy\">no_policy</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#store\">store</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>, struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a> = <a class=\"id\" href=\"#to_policy\">to_policy</a>(<a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#freq_attr\">freq_attr</a> *<a class=\"id\" href=\"#fattr\">fattr</a> = <a class=\"id\" href=\"#to_attr\">to_attr</a>(<a class=\"id\" href=\"#attr\">attr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a> = <a class=\"id\" href=\"#cpufreq_cpu_get\">cpufreq_cpu_get</a>(<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#policy\">policy</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#no_policy\">no_policy</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lock_policy_rwsem_write\">lock_policy_rwsem_write</a>(<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fattr\">fattr</a>-><a class=\"id\" href=\"#store\">store</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#fattr\">fattr</a>-><a class=\"id\" href=\"#store\">store</a>(<a class=\"id\" href=\"#policy\">policy</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_policy_rwsem_write\">unlock_policy_rwsem_write</a>(<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<a class=\"id\" href=\"#fail\">fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_cpu_put\">cpufreq_cpu_put</a>(<a class=\"id\" href=\"#policy\">policy</a>);", 
"<a class=\"id\" href=\"#no_policy\">no_policy</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#cpufreq_sysfs_release\">cpufreq_sysfs_release</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a> = <a class=\"id\" href=\"#to_policy\">to_policy</a>(<a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"last reference is dropped\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#complete\">complete</a>(&amp;<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#kobj_unregister\">kobj_unregister</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#sysfs_ops\">sysfs_ops</a> <a class=\"id\" href=\"#sysfs_ops\">sysfs_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a><span class=\"ts\"/>= <a class=\"id\" href=\"#show\">show</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#store\">store</a><span class=\"ts\"/>= <a class=\"id\" href=\"#store\">store</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#kobj_type\">kobj_type</a> <a class=\"id\" href=\"#ktype_cpufreq\">ktype_cpufreq</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sysfs_ops\">sysfs_ops</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#sysfs_ops\">sysfs_ops</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#default_attrs\">default_attrs</a><span class=\"ts\"/>= <a class=\"id\" href=\"#default_attrs\">default_attrs</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#cpufreq_sysfs_release\">cpufreq_sysfs_release</a>,", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Returns:</span>", 
"<span class=\"comment\"> *   Negative: Failure</span>", 
"<span class=\"comment\"> *   0:        Success</span>", 
"<span class=\"comment\"> *   Positive: When we have a managed CPU and the sysfs got symlinked</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#cpufreq_add_dev_policy\">cpufreq_add_dev_policy</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#sys_device\">sys_device</a> *<a class=\"id\" href=\"#sys_dev\">sys_dev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#j\">j</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HOTPLUG_CPU\">CONFIG_HOTPLUG_CPU</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_governor\">cpufreq_governor</a> *<a class=\"id\" href=\"#gov\">gov</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gov\">gov</a> = <a class=\"id\" href=\"#__find_governor\">__find_governor</a>(<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#cpufreq_cpu_governor\">cpufreq_cpu_governor</a>, <a class=\"id\" href=\"#cpu\">cpu</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#gov\">gov</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#governor\">governor</a> = <a class=\"id\" href=\"#gov\">gov</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"Restoring governor %s for cpu %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#governor\">governor</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_cpu\">for_each_cpu</a>(<a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpus\">cpus</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#managed_policy\">managed_policy</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu\">cpu</a> == <a class=\"id\" href=\"#j\">j</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Check for existing affected CPUs.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * They may not be aware of it due to CPU Hotplug.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * cpufreq_cpu_put is called when the device is removed</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * in __cpufreq_remove_dev()</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#managed_policy\">managed_policy</a> = <a class=\"id\" href=\"#cpufreq_cpu_get\">cpufreq_cpu_get</a>(<a class=\"id\" href=\"#j\">j</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#managed_policy\">managed_policy</a>)) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Set proper policy_cpu */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_policy_rwsem_write\">unlock_policy_rwsem_write</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#cpufreq_policy_cpu\">cpufreq_policy_cpu</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) = <a class=\"id\" href=\"#managed_policy\">managed_policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#lock_policy_rwsem_write\">lock_policy_rwsem_write</a>(<a class=\"id\" href=\"#cpu\">cpu</a>) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Should not go through policy unlock path */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#exit\">exit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#exit\">exit</a>(<a class=\"id\" href=\"#policy\">policy</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_cpu_put\">cpufreq_cpu_put</a>(<a class=\"id\" href=\"#managed_policy\">managed_policy</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#cpufreq_driver_lock\">cpufreq_driver_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpumask_copy\">cpumask_copy</a>(<a class=\"id\" href=\"#managed_policy\">managed_policy</a>-><a class=\"id\" href=\"#cpus\">cpus</a>, <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpus\">cpus</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#cpufreq_cpu_data\">cpufreq_cpu_data</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) = <a class=\"id\" href=\"#managed_policy\">managed_policy</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#cpufreq_driver_lock\">cpufreq_driver_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"CPU already managed, adding link\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#sysfs_create_link\">sysfs_create_link</a>(&amp;<a class=\"id\" href=\"#sys_dev\">sys_dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#managed_policy\">managed_policy</a>-><a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"cpufreq\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_cpu_put\">cpufreq_cpu_put</a>(<a class=\"id\" href=\"#managed_policy\">managed_policy</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Success. We only needed to be added to the mask.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Call driver-&gt;exit() because only the cpu parent of</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * the kobj needed to call init().</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#exit\">exit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#exit\">exit</a>(<a class=\"id\" href=\"#policy\">policy</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"", 
"<span class=\"comment\">/* symlink affected CPUs */</span>", 
"static int <a class=\"id\" href=\"#cpufreq_add_dev_symlink\">cpufreq_add_dev_symlink</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#j\">j</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_cpu\">for_each_cpu</a>(<a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpus\">cpus</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#managed_policy\">managed_policy</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sys_device\">sys_device</a> *<a class=\"id\" href=\"#cpu_sys_dev\">cpu_sys_dev</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#j\">j</a> == <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#cpu_online\">cpu_online</a>(<a class=\"id\" href=\"#j\">j</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"CPU %u already managed, adding link\\n\", <a class=\"id\" href=\"#j\">j</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#managed_policy\">managed_policy</a> = <a class=\"id\" href=\"#cpufreq_cpu_get\">cpufreq_cpu_get</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu_sys_dev\">cpu_sys_dev</a> = <a class=\"id\" href=\"#get_cpu_sysdev\">get_cpu_sysdev</a>(<a class=\"id\" href=\"#j\">j</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#sysfs_create_link\">sysfs_create_link</a>(&amp;<a class=\"id\" href=\"#cpu_sys_dev\">cpu_sys_dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, &amp;<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"cpufreq\");", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_cpu_put\">cpufreq_cpu_put</a>(<a class=\"id\" href=\"#managed_policy\">managed_policy</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cpufreq_add_dev_interface\">cpufreq_add_dev_interface</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#sys_device\">sys_device</a> *<a class=\"id\" href=\"#sys_dev\">sys_dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> <a class=\"id\" href=\"#new_policy\">new_policy</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#freq_attr\">freq_attr</a> **<a class=\"id\" href=\"#drv_attr\">drv_attr</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#j\">j</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* prepare interface data */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#kobject_init_and_add\">kobject_init_and_add</a>(&amp;<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, &amp;<a class=\"id\" href=\"#ktype_cpufreq\">ktype_cpufreq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#sys_dev\">sys_dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, \"cpufreq\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* set up files for this cpu device */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#drv_attr\">drv_attr</a> = <a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#attr\">attr</a>;", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#drv_attr\">drv_attr</a>) && (*<a class=\"id\" href=\"#drv_attr\">drv_attr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#sysfs_create_file\">sysfs_create_file</a>(&amp;<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, &amp;((*<a class=\"id\" href=\"#drv_attr\">drv_attr</a>)-><a class=\"id\" href=\"#attr\">attr</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_out_kobj_put\">err_out_kobj_put</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drv_attr\">drv_attr</a>++;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#get\">get</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#sysfs_create_file\">sysfs_create_file</a>(&amp;<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, &amp;<a class=\"id\" href=\"#cpuinfo_cur_freq\">cpuinfo_cur_freq</a>.<a class=\"id\" href=\"#attr\">attr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_out_kobj_put\">err_out_kobj_put</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#target\">target</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#sysfs_create_file\">sysfs_create_file</a>(&amp;<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, &amp;<a class=\"id\" href=\"#scaling_cur_freq\">scaling_cur_freq</a>.<a class=\"id\" href=\"#attr\">attr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_out_kobj_put\">err_out_kobj_put</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#bios_limit\">bios_limit</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#sysfs_create_file\">sysfs_create_file</a>(&amp;<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, &amp;<a class=\"id\" href=\"#bios_limit\">bios_limit</a>.<a class=\"id\" href=\"#attr\">attr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_out_kobj_put\">err_out_kobj_put</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#cpufreq_driver_lock\">cpufreq_driver_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_cpu\">for_each_cpu</a>(<a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpus\">cpus</a>) {", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cpu_online\">cpu_online</a>(<a class=\"id\" href=\"#j\">j</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#cpufreq_cpu_data\">cpufreq_cpu_data</a>, <a class=\"id\" href=\"#j\">j</a>) = <a class=\"id\" href=\"#policy\">policy</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#cpufreq_policy_cpu\">cpufreq_policy_cpu</a>, <a class=\"id\" href=\"#j\">j</a>) = <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#cpufreq_driver_lock\">cpufreq_driver_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cpufreq_add_dev_symlink\">cpufreq_add_dev_symlink</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#policy\">policy</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_out_kobj_put\">err_out_kobj_put</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#new_policy\">new_policy</a>, <a class=\"id\" href=\"#policy\">policy</a>, sizeof(struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a>));", 
"<span class=\"ts\"/><span class=\"comment\">/* assure that the starting sequence is run in __cpufreq_set_policy */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#governor\">governor</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* set default policy */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#__cpufreq_set_policy\">__cpufreq_set_policy</a>(<a class=\"id\" href=\"#policy\">policy</a>, &amp;<a class=\"id\" href=\"#new_policy\">new_policy</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#user_policy\">user_policy</a>.<a class=\"id\" href=\"#policy\">policy</a> = <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#policy\">policy</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#user_policy\">user_policy</a>.<a class=\"id\" href=\"#governor\">governor</a> = <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#governor\">governor</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"setting policy failed\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#exit\">exit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#exit\">exit</a>(<a class=\"id\" href=\"#policy\">policy</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<a class=\"id\" href=\"#err_out_kobj_put\">err_out_kobj_put</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobject_put\">kobject_put</a>(&amp;<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wait_for_completion\">wait_for_completion</a>(&amp;<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#kobj_unregister\">kobj_unregister</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * cpufreq_add_dev - add a CPU device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Adds the cpufreq interface for a CPU device.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The Oracle says: try running cpufreq registration/unregistration concurrently</span>", 
"<span class=\"comment\"> * with with cpu hotplugging and all hell will break loose. Tried to clean this</span>", 
"<span class=\"comment\"> * mess up, but more thorough testing is needed. - Mathieu</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#cpufreq_add_dev\">cpufreq_add_dev</a>(struct <a class=\"id\" href=\"#sys_device\">sys_device</a> *<a class=\"id\" href=\"#sys_dev\">sys_dev</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#sys_dev\">sys_dev</a>-><a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0, <a class=\"id\" href=\"#found\">found</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#j\">j</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HOTPLUG_CPU\">CONFIG_HOTPLUG_CPU</a>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#sibling\">sibling</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_is_offline\">cpu_is_offline</a>(<a class=\"id\" href=\"#cpu\">cpu</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_debug_disable_ratelimit\">cpufreq_debug_disable_ratelimit</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"adding CPU %u\\n\", <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* check whether a different CPU already registered this</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * CPU because it is in the same boat. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a> = <a class=\"id\" href=\"#cpufreq_cpu_get\">cpufreq_cpu_get</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#policy\">policy</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_cpu_put\">cpufreq_cpu_put</a>(<a class=\"id\" href=\"#policy\">policy</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_debug_enable_ratelimit\">cpufreq_debug_enable_ratelimit</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#try_module_get\">try_module_get</a>(<a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#owner\">owner</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#module_out\">module_out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#policy\">policy</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#nomem_out\">nomem_out</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#alloc_cpumask_var\">alloc_cpumask_var</a>(&amp;<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpus\">cpus</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_free_policy\">err_free_policy</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#zalloc_cpumask_var\">zalloc_cpumask_var</a>(&amp;<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#related_cpus\">related_cpus</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_free_cpumask\">err_free_cpumask</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpumask_copy\">cpumask_copy</a>(<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpus\">cpus</a>, <a class=\"id\" href=\"#cpumask_of\">cpumask_of</a>(<a class=\"id\" href=\"#cpu\">cpu</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Initially set CPU itself as the policy_cpu */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#cpufreq_policy_cpu\">cpufreq_policy_cpu</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) = <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = (<a class=\"id\" href=\"#lock_policy_rwsem_write\">lock_policy_rwsem_write</a>(<a class=\"id\" href=\"#cpu\">cpu</a>) &lt; 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#ret\">ret</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_completion\">init_completion</a>(&amp;<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#kobj_unregister\">kobj_unregister</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_WORK\">INIT_WORK</a>(&amp;<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#update\">update</a>, <a class=\"id\" href=\"#handle_update\">handle_update</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Set governor before -&gt;init, so that driver could check it */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HOTPLUG_CPU\">CONFIG_HOTPLUG_CPU</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_online_cpu\">for_each_online_cpu</a>(<a class=\"id\" href=\"#sibling\">sibling</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#cp\">cp</a> = <a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#cpufreq_cpu_data\">cpufreq_cpu_data</a>, <a class=\"id\" href=\"#sibling\">sibling</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cp\">cp</a> && <a class=\"id\" href=\"#cp\">cp</a>-><a class=\"id\" href=\"#governor\">governor</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#cpumask_test_cpu\">cpumask_test_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#cp\">cp</a>-><a class=\"id\" href=\"#related_cpus\">related_cpus</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#governor\">governor</a> = <a class=\"id\" href=\"#cp\">cp</a>-><a class=\"id\" href=\"#governor\">governor</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#found\">found</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#governor\">governor</a> = <a class=\"id\" href=\"#CPUFREQ_DEFAULT_GOVERNOR\">CPUFREQ_DEFAULT_GOVERNOR</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* call driver. From then on the cpufreq must be able</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to accept all calls to -&gt;verify and -&gt;setpolicy for this CPU</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#init\">init</a>(<a class=\"id\" href=\"#policy\">policy</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"initialization failed\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_unlock_policy\">err_unlock_policy</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#user_policy\">user_policy</a>.<a class=\"id\" href=\"#min\">min</a> = <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#min\">min</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#user_policy\">user_policy</a>.<a class=\"id\" href=\"#max\">max</a> = <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#max\">max</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blocking_notifier_call_chain\">blocking_notifier_call_chain</a>(&amp;<a class=\"id\" href=\"#cpufreq_policy_notifier_list\">cpufreq_policy_notifier_list</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#CPUFREQ_START\">CPUFREQ_START</a>, <a class=\"id\" href=\"#policy\">policy</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cpufreq_add_dev_policy\">cpufreq_add_dev_policy</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#policy\">policy</a>, <a class=\"id\" href=\"#sys_dev\">sys_dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* This is a managed cpu, symlink created,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   exit with 0 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_unlock_policy\">err_unlock_policy</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cpufreq_add_dev_interface\">cpufreq_add_dev_interface</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#policy\">policy</a>, <a class=\"id\" href=\"#sys_dev\">sys_dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_out_unregister\">err_out_unregister</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_policy_rwsem_write\">unlock_policy_rwsem_write</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobject_uevent\">kobject_uevent</a>(&amp;<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#KOBJ_ADD\">KOBJ_ADD</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#owner\">owner</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"initialization complete\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_debug_enable_ratelimit\">cpufreq_debug_enable_ratelimit</a>();", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"", 
"<a class=\"id\" href=\"#err_out_unregister\">err_out_unregister</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#cpufreq_driver_lock\">cpufreq_driver_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_cpu\">for_each_cpu</a>(<a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpus\">cpus</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#cpufreq_cpu_data\">cpufreq_cpu_data</a>, <a class=\"id\" href=\"#j\">j</a>) = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#cpufreq_driver_lock\">cpufreq_driver_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobject_put\">kobject_put</a>(&amp;<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wait_for_completion\">wait_for_completion</a>(&amp;<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#kobj_unregister\">kobj_unregister</a>);", 
"", 
"<a class=\"id\" href=\"#err_unlock_policy\">err_unlock_policy</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_policy_rwsem_write\">unlock_policy_rwsem_write</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_cpumask_var\">free_cpumask_var</a>(<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#related_cpus\">related_cpus</a>);", 
"<a class=\"id\" href=\"#err_free_cpumask\">err_free_cpumask</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_cpumask_var\">free_cpumask_var</a>(<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpus\">cpus</a>);", 
"<a class=\"id\" href=\"#err_free_policy\">err_free_policy</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#policy\">policy</a>);", 
"<a class=\"id\" href=\"#nomem_out\">nomem_out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#owner\">owner</a>);", 
"<a class=\"id\" href=\"#module_out\">module_out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_debug_enable_ratelimit\">cpufreq_debug_enable_ratelimit</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * __cpufreq_remove_dev - remove a CPU device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Removes the cpufreq interface for a CPU device.</span>", 
"<span class=\"comment\"> * Caller should already have policy_rwsem in write mode for this CPU.</span>", 
"<span class=\"comment\"> * This routine frees the rwsem before returning.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__cpufreq_remove_dev\">__cpufreq_remove_dev</a>(struct <a class=\"id\" href=\"#sys_device\">sys_device</a> *<a class=\"id\" href=\"#sys_dev\">sys_dev</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#sys_dev\">sys_dev</a>-><a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#completion\">completion</a> *<a class=\"id\" href=\"#cmp\">cmp</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sys_device\">sys_device</a> *<a class=\"id\" href=\"#cpu_sys_dev\">cpu_sys_dev</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#j\">j</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_debug_disable_ratelimit\">cpufreq_debug_disable_ratelimit</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"unregistering CPU %u\\n\", <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#cpufreq_driver_lock\">cpufreq_driver_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#cpufreq_cpu_data\">cpufreq_cpu_data</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#data\">data</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#cpufreq_driver_lock\">cpufreq_driver_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_debug_enable_ratelimit\">cpufreq_debug_enable_ratelimit</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_policy_rwsem_write\">unlock_policy_rwsem_write</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#cpufreq_cpu_data\">cpufreq_cpu_data</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* if this isn't the CPU which is the parent of the kobj, we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * only need to unlink, put and exit</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#cpu\">cpu</a> != <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#cpu\">cpu</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"removing link\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpumask_clear_cpu\">cpumask_clear_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#cpus\">cpus</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#cpufreq_driver_lock\">cpufreq_driver_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kobj\">kobj</a> = &amp;<a class=\"id\" href=\"#sys_dev\">sys_dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_cpu_put\">cpufreq_cpu_put</a>(<a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_debug_enable_ratelimit\">cpufreq_debug_enable_ratelimit</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_policy_rwsem_write\">unlock_policy_rwsem_write</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_link\">sysfs_remove_link</a>(<a class=\"id\" href=\"#kobj\">kobj</a>, \"cpufreq\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HOTPLUG_CPU\">CONFIG_HOTPLUG_CPU</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#strncpy\">strncpy</a>(<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#cpufreq_cpu_governor\">cpufreq_cpu_governor</a>, <a class=\"id\" href=\"#cpu\">cpu</a>), <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#governor\">governor</a>-><a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#CPUFREQ_NAME_LEN\">CPUFREQ_NAME_LEN</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* if we have other CPUs still registered, we need to unlink them,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * or else wait_for_completion below will lock up. Clean the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * per_cpu(cpufreq_cpu_data) while holding the lock, and remove</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the sysfs links afterwards.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#cpumask_weight\">cpumask_weight</a>(<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#cpus\">cpus</a>) &gt; 1)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#for_each_cpu\">for_each_cpu</a>(<a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#cpus\">cpus</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#j\">j</a> == <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#cpufreq_cpu_data\">cpufreq_cpu_data</a>, <a class=\"id\" href=\"#j\">j</a>) = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#cpufreq_driver_lock\">cpufreq_driver_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#cpumask_weight\">cpumask_weight</a>(<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#cpus\">cpus</a>) &gt; 1)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#for_each_cpu\">for_each_cpu</a>(<a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#cpus\">cpus</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#j\">j</a> == <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"removing link for cpu %u\\n\", <a class=\"id\" href=\"#j\">j</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HOTPLUG_CPU\">CONFIG_HOTPLUG_CPU</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strncpy\">strncpy</a>(<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#cpufreq_cpu_governor\">cpufreq_cpu_governor</a>, <a class=\"id\" href=\"#j\">j</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#governor\">governor</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#CPUFREQ_NAME_LEN\">CPUFREQ_NAME_LEN</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu_sys_dev\">cpu_sys_dev</a> = <a class=\"id\" href=\"#get_cpu_sysdev\">get_cpu_sysdev</a>(<a class=\"id\" href=\"#j\">j</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kobj\">kobj</a> = &amp;<a class=\"id\" href=\"#cpu_sys_dev\">cpu_sys_dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_policy_rwsem_write\">unlock_policy_rwsem_write</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_link\">sysfs_remove_link</a>(<a class=\"id\" href=\"#kobj\">kobj</a>, \"cpufreq\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lock_policy_rwsem_write\">lock_policy_rwsem_write</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_cpu_put\">cpufreq_cpu_put</a>(<a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"#else", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#cpufreq_driver_lock\">cpufreq_driver_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#target\">target</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__cpufreq_governor\">__cpufreq_governor</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#CPUFREQ_GOV_STOP\">CPUFREQ_GOV_STOP</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobj\">kobj</a> = &amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#kobj\">kobj</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cmp\">cmp</a> = &amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#kobj_unregister\">kobj_unregister</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_policy_rwsem_write\">unlock_policy_rwsem_write</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobject_put\">kobject_put</a>(<a class=\"id\" href=\"#kobj\">kobj</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* we need to make sure that the underlying kobj is actually</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * not referenced anymore by anybody before we proceed with</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * unloading.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"waiting for dropping of refcount\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wait_for_completion\">wait_for_completion</a>(<a class=\"id\" href=\"#cmp\">cmp</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"wait complete\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_policy_rwsem_write\">lock_policy_rwsem_write</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#exit\">exit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#exit\">exit</a>(<a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_policy_rwsem_write\">unlock_policy_rwsem_write</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_cpumask_var\">free_cpumask_var</a>(<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#related_cpus\">related_cpus</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_cpumask_var\">free_cpumask_var</a>(<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#cpus\">cpus</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#cpufreq_cpu_data\">cpufreq_cpu_data</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_debug_enable_ratelimit\">cpufreq_debug_enable_ratelimit</a>();", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"", 
"static int <a class=\"id\" href=\"#cpufreq_remove_dev\">cpufreq_remove_dev</a>(struct <a class=\"id\" href=\"#sys_device\">sys_device</a> *<a class=\"id\" href=\"#sys_dev\">sys_dev</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#sys_dev\">sys_dev</a>-><a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_is_offline\">cpu_is_offline</a>(<a class=\"id\" href=\"#cpu\">cpu</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#lock_policy_rwsem_write\">lock_policy_rwsem_write</a>(<a class=\"id\" href=\"#cpu\">cpu</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#__cpufreq_remove_dev\">__cpufreq_remove_dev</a>(<a class=\"id\" href=\"#sys_dev\">sys_dev</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"", 
"static void <a class=\"id\" href=\"#handle_update\">handle_update</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#work\">work</a>, struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a>, <a class=\"id\" href=\"#update\">update</a>);", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"handle_update for cpu %u called\\n\", <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_update_policy\">cpufreq_update_policy</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>cpufreq_out_of_sync - If actual and saved CPU frequency differs, we're in deep trouble.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@cpu: cpu number</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@old_freq: CPU frequency the kernel thinks the CPU runs at</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@new_freq: CPU frequency the CPU actually runs at</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>We adjust to current frequency first, and need to clean up later.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>So either call to cpufreq_update_policy() or schedule handle_update()).</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#cpufreq_out_of_sync\">cpufreq_out_of_sync</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>, unsigned int <a class=\"id\" href=\"#old_freq\">old_freq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#new_freq\">new_freq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_freqs\">cpufreq_freqs</a> <a class=\"id\" href=\"#freqs\">freqs</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"Warning: CPU frequency out of sync: cpufreq and timing \"", 
"<span class=\"ts\"/>       \"core thinks of %u, is %u kHz.\\n\", <a class=\"id\" href=\"#old_freq\">old_freq</a>, <a class=\"id\" href=\"#new_freq\">new_freq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#freqs\">freqs</a>.<a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#freqs\">freqs</a>.<a class=\"id\" href=\"#old\">old</a> = <a class=\"id\" href=\"#old_freq\">old_freq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#freqs\">freqs</a>.<a class=\"id\" href=\"#new\">new</a> = <a class=\"id\" href=\"#new_freq\">new_freq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_notify_transition\">cpufreq_notify_transition</a>(&amp;<a class=\"id\" href=\"#freqs\">freqs</a>, <a class=\"id\" href=\"#CPUFREQ_PRECHANGE\">CPUFREQ_PRECHANGE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_notify_transition\">cpufreq_notify_transition</a>(&amp;<a class=\"id\" href=\"#freqs\">freqs</a>, <a class=\"id\" href=\"#CPUFREQ_POSTCHANGE\">CPUFREQ_POSTCHANGE</a>);", 
"}", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * cpufreq_quick_get - get the CPU frequency (in kHz) from policy-&gt;cur</span>", 
"<span class=\"comment\"> * @cpu: CPU number</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is the last known freq, without actually getting it from the driver.</span>", 
"<span class=\"comment\"> * Return value will be same as what is shown in scaling_cur_freq in sysfs.</span>", 
"<span class=\"comment\"> */</span>", 
"unsigned int <a class=\"id\" href=\"#cpufreq_quick_get\">cpufreq_quick_get</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a> = <a class=\"id\" href=\"#cpufreq_cpu_get\">cpufreq_cpu_get</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#ret_freq\">ret_freq</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#policy\">policy</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret_freq\">ret_freq</a> = <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cur\">cur</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_cpu_put\">cpufreq_cpu_put</a>(<a class=\"id\" href=\"#policy\">policy</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret_freq\">ret_freq</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#cpufreq_quick_get\">cpufreq_quick_get</a>);", 
"", 
"", 
"static unsigned int <a class=\"id\" href=\"#__cpufreq_get\">__cpufreq_get</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a> = <a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#cpufreq_cpu_data\">cpufreq_cpu_data</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#ret_freq\">ret_freq</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#get\">get</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret_freq\">ret_freq</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret_freq\">ret_freq</a> = <a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#get\">get</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret_freq\">ret_freq</a> && <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cur\">cur</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>!(<a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#CPUFREQ_CONST_LOOPS\">CPUFREQ_CONST_LOOPS</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* verify no discrepancy between actual and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>saved value exists */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#ret_freq\">ret_freq</a> != <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cur\">cur</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_out_of_sync\">cpufreq_out_of_sync</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cur\">cur</a>, <a class=\"id\" href=\"#ret_freq\">ret_freq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule_work\">schedule_work</a>(&amp;<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#update\">update</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret_freq\">ret_freq</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * cpufreq_get - get the current CPU frequency (in kHz)</span>", 
"<span class=\"comment\"> * @cpu: CPU number</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Get the CPU current (static) CPU frequency</span>", 
"<span class=\"comment\"> */</span>", 
"unsigned int <a class=\"id\" href=\"#cpufreq_get\">cpufreq_get</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#ret_freq\">ret_freq</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a> = <a class=\"id\" href=\"#cpufreq_cpu_get\">cpufreq_cpu_get</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#policy\">policy</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#lock_policy_rwsem_read\">lock_policy_rwsem_read</a>(<a class=\"id\" href=\"#cpu\">cpu</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_policy\">out_policy</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret_freq\">ret_freq</a> = <a class=\"id\" href=\"#__cpufreq_get\">__cpufreq_get</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_policy_rwsem_read\">unlock_policy_rwsem_read</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<a class=\"id\" href=\"#out_policy\">out_policy</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_cpu_put\">cpufreq_cpu_put</a>(<a class=\"id\" href=\"#policy\">policy</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret_freq\">ret_freq</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#cpufreq_get\">cpufreq_get</a>);", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>cpufreq_suspend - let the low level driver prepare for suspend</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#cpufreq_suspend\">cpufreq_suspend</a>(struct <a class=\"id\" href=\"#sys_device\">sys_device</a> *<a class=\"id\" href=\"#sysdev\">sysdev</a>, <a class=\"id\" href=\"#pm_message_t\">pm_message_t</a> <a class=\"id\" href=\"#pmsg\">pmsg</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#sysdev\">sysdev</a>-><a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#cpu_policy\">cpu_policy</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"suspending cpu %u\\n\", <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cpu_online\">cpu_online</a>(<a class=\"id\" href=\"#cpu\">cpu</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* we may be lax here as interrupts are off. Nonetheless</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we need to grab the correct cpu policy, as to check</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * whether we really run on this CPU.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpu_policy\">cpu_policy</a> = <a class=\"id\" href=\"#cpufreq_cpu_get\">cpufreq_cpu_get</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cpu_policy\">cpu_policy</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* only handle each CPU group once */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#cpu_policy\">cpu_policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a> != <a class=\"id\" href=\"#cpu\">cpu</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#suspend\">suspend</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#suspend\">suspend</a>(<a class=\"id\" href=\"#cpu_policy\">cpu_policy</a>, <a class=\"id\" href=\"#pmsg\">pmsg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"cpufreq: suspend failed in ->suspend \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"step on CPU %u\\n\", <a class=\"id\" href=\"#cpu_policy\">cpu_policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_cpu_put\">cpufreq_cpu_put</a>(<a class=\"id\" href=\"#cpu_policy\">cpu_policy</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>cpufreq_resume -  restore proper CPU frequency handling after resume</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>1.) resume CPUfreq hardware support (cpufreq_driver-&gt;resume())</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>2.) schedule call cpufreq_update_policy() ASAP as interrupts are</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>    restored. It will verify that the current freq is in sync with</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>    what we believe it to be. This is a bit later than when it</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>    should be, but nonethteless it's better than calling</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>    cpufreq_driver-&gt;get() here which might re-enable interrupts...</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#cpufreq_resume\">cpufreq_resume</a>(struct <a class=\"id\" href=\"#sys_device\">sys_device</a> *<a class=\"id\" href=\"#sysdev\">sysdev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#sysdev\">sysdev</a>-><a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#cpu_policy\">cpu_policy</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"resuming cpu %u\\n\", <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cpu_online\">cpu_online</a>(<a class=\"id\" href=\"#cpu\">cpu</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* we may be lax here as interrupts are off. Nonetheless</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we need to grab the correct cpu policy, as to check</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * whether we really run on this CPU.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpu_policy\">cpu_policy</a> = <a class=\"id\" href=\"#cpufreq_cpu_get\">cpufreq_cpu_get</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cpu_policy\">cpu_policy</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* only handle each CPU group once */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#cpu_policy\">cpu_policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a> != <a class=\"id\" href=\"#cpu\">cpu</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#resume\">resume</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#resume\">resume</a>(<a class=\"id\" href=\"#cpu_policy\">cpu_policy</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"cpufreq: resume failed in ->resume \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"step on CPU %u\\n\", <a class=\"id\" href=\"#cpu_policy\">cpu_policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#schedule_work\">schedule_work</a>(&amp;<a class=\"id\" href=\"#cpu_policy\">cpu_policy</a>-><a class=\"id\" href=\"#update\">update</a>);", 
"", 
"<a class=\"id\" href=\"#fail\">fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_cpu_put\">cpufreq_cpu_put</a>(<a class=\"id\" href=\"#cpu_policy\">cpu_policy</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#sysdev_driver\">sysdev_driver</a> <a class=\"id\" href=\"#cpufreq_sysdev_driver\">cpufreq_sysdev_driver</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#add\">add</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#cpufreq_add_dev\">cpufreq_add_dev</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#remove\">remove</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#cpufreq_remove_dev\">cpufreq_remove_dev</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#suspend\">suspend</a><span class=\"ts\"/>= <a class=\"id\" href=\"#cpufreq_suspend\">cpufreq_suspend</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#resume\">resume</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#cpufreq_resume\">cpufreq_resume</a>,", 
"};", 
"", 
"", 
"<span class=\"comment\">/*********************************************************************</span>", 
"<span class=\"comment\"> *                     NOTIFIER LISTS INTERFACE                      *</span>", 
"<span class=\"comment\"> *********************************************************************/</span>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>cpufreq_register_notifier - register a driver with cpufreq</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@nb: notifier function to register</span>", 
"<span class=\"comment\"> *      @list: CPUFREQ_TRANSITION_NOTIFIER or CPUFREQ_POLICY_NOTIFIER</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Add a driver to one of two lists: either a list of drivers that</span>", 
"<span class=\"comment\"> *      are notified about clock rate changes (once before and once after</span>", 
"<span class=\"comment\"> *      the transition), or a list of drivers that are notified about</span>", 
"<span class=\"comment\"> *      changes in cpufreq policy.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This function may sleep, and has the same return conditions as</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>blocking_notifier_chain_register.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#cpufreq_register_notifier\">cpufreq_register_notifier</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nb\">nb</a>, unsigned int <a class=\"id\" href=\"#list\">list</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#init_cpufreq_transition_notifier_list_called\">init_cpufreq_transition_notifier_list_called</a>);", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPUFREQ_TRANSITION_NOTIFIER\">CPUFREQ_TRANSITION_NOTIFIER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#srcu_notifier_chain_register\">srcu_notifier_chain_register</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#cpufreq_transition_notifier_list\">cpufreq_transition_notifier_list</a>, <a class=\"id\" href=\"#nb\">nb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPUFREQ_POLICY_NOTIFIER\">CPUFREQ_POLICY_NOTIFIER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#blocking_notifier_chain_register\">blocking_notifier_chain_register</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#cpufreq_policy_notifier_list\">cpufreq_policy_notifier_list</a>, <a class=\"id\" href=\"#nb\">nb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#cpufreq_register_notifier\">cpufreq_register_notifier</a>);", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>cpufreq_unregister_notifier - unregister a driver with cpufreq</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@nb: notifier block to be unregistered</span>", 
"<span class=\"comment\"> *      @list: CPUFREQ_TRANSITION_NOTIFIER or CPUFREQ_POLICY_NOTIFIER</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Remove a driver from the CPU frequency notifier list.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This function may sleep, and has the same return conditions as</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>blocking_notifier_chain_unregister.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#cpufreq_unregister_notifier\">cpufreq_unregister_notifier</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nb\">nb</a>, unsigned int <a class=\"id\" href=\"#list\">list</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPUFREQ_TRANSITION_NOTIFIER\">CPUFREQ_TRANSITION_NOTIFIER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#srcu_notifier_chain_unregister\">srcu_notifier_chain_unregister</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#cpufreq_transition_notifier_list\">cpufreq_transition_notifier_list</a>, <a class=\"id\" href=\"#nb\">nb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPUFREQ_POLICY_NOTIFIER\">CPUFREQ_POLICY_NOTIFIER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#blocking_notifier_chain_unregister\">blocking_notifier_chain_unregister</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#cpufreq_policy_notifier_list\">cpufreq_policy_notifier_list</a>, <a class=\"id\" href=\"#nb\">nb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#cpufreq_unregister_notifier\">cpufreq_unregister_notifier</a>);", 
"", 
"", 
"<span class=\"comment\">/*********************************************************************</span>", 
"<span class=\"comment\"> *                              GOVERNORS                            *</span>", 
"<span class=\"comment\"> *********************************************************************/</span>", 
"", 
"", 
"int <a class=\"id\" href=\"#__cpufreq_driver_target\">__cpufreq_driver_target</a>(struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    unsigned int <a class=\"id\" href=\"#target_freq\">target_freq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    unsigned int <a class=\"id\" href=\"#relation\">relation</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"target for CPU %u: %u kHz, relation %u\\n\", <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#target_freq\">target_freq</a>, <a class=\"id\" href=\"#relation\">relation</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_online\">cpu_online</a>(<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a>) && <a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#target\">target</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#target\">target</a>(<a class=\"id\" href=\"#policy\">policy</a>, <a class=\"id\" href=\"#target_freq\">target_freq</a>, <a class=\"id\" href=\"#relation\">relation</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#__cpufreq_driver_target\">__cpufreq_driver_target</a>);", 
"", 
"int <a class=\"id\" href=\"#cpufreq_driver_target\">cpufreq_driver_target</a>(struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned int <a class=\"id\" href=\"#target_freq\">target_freq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned int <a class=\"id\" href=\"#relation\">relation</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a> = <a class=\"id\" href=\"#cpufreq_cpu_get\">cpufreq_cpu_get</a>(<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#policy\">policy</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#no_policy\">no_policy</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#lock_policy_rwsem_write\">lock_policy_rwsem_write</a>(<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#__cpufreq_driver_target\">__cpufreq_driver_target</a>(<a class=\"id\" href=\"#policy\">policy</a>, <a class=\"id\" href=\"#target_freq\">target_freq</a>, <a class=\"id\" href=\"#relation\">relation</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_policy_rwsem_write\">unlock_policy_rwsem_write</a>(<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<a class=\"id\" href=\"#fail\">fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_cpu_put\">cpufreq_cpu_put</a>(<a class=\"id\" href=\"#policy\">policy</a>);", 
"<a class=\"id\" href=\"#no_policy\">no_policy</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#cpufreq_driver_target\">cpufreq_driver_target</a>);", 
"", 
"int <a class=\"id\" href=\"#__cpufreq_driver_getavg\">__cpufreq_driver_getavg</a>(struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a>, unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a> = <a class=\"id\" href=\"#cpufreq_cpu_get\">cpufreq_cpu_get</a>(<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#policy\">policy</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_online\">cpu_online</a>(<a class=\"id\" href=\"#cpu\">cpu</a>) && <a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#getavg\">getavg</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#getavg\">getavg</a>(<a class=\"id\" href=\"#policy\">policy</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_cpu_put\">cpufreq_cpu_put</a>(<a class=\"id\" href=\"#policy\">policy</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#__cpufreq_driver_getavg\">__cpufreq_driver_getavg</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * when \"event\" is CPUFREQ_GOV_LIMITS</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#__cpufreq_governor\">__cpufreq_governor</a>(struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#event\">event</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Only must be defined when default governor is known to have latency</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   restrictions, like e.g. conservative or ondemand.</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   That this is the case is already ensured in Kconfig</span>", 
"<span class=\"comment\"><span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_CPU_FREQ_GOV_PERFORMANCE\">CONFIG_CPU_FREQ_GOV_PERFORMANCE</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_governor\">cpufreq_governor</a> *<a class=\"id\" href=\"#gov\">gov</a> = &amp;<a class=\"id\" href=\"#cpufreq_gov_performance\">cpufreq_gov_performance</a>;", 
"#else", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_governor\">cpufreq_governor</a> *<a class=\"id\" href=\"#gov\">gov</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#governor\">governor</a>-><a class=\"id\" href=\"#max_transition_latency\">max_transition_latency</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpuinfo\">cpuinfo</a>.<a class=\"id\" href=\"#transition_latency\">transition_latency</a> &gt;", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#governor\">governor</a>-><a class=\"id\" href=\"#max_transition_latency\">max_transition_latency</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#gov\">gov</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"%s governor failed, too long\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \" transition latency of HW, fallback\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \" to %s governor\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#governor\">governor</a>-><a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#gov\">gov</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#governor\">governor</a> = <a class=\"id\" href=\"#gov\">gov</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#try_module_get\">try_module_get</a>(<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#governor\">governor</a>-><a class=\"id\" href=\"#owner\">owner</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"__cpufreq_governor for CPU %u, event %u\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#event\">event</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#governor\">governor</a>-><a class=\"id\" href=\"#governor\">governor</a>(<a class=\"id\" href=\"#policy\">policy</a>, <a class=\"id\" href=\"#event\">event</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* we keep one module reference alive for</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>each CPU governed by this CPU */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#event\">event</a> != <a class=\"id\" href=\"#CPUFREQ_GOV_START\">CPUFREQ_GOV_START</a>) || <a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#governor\">governor</a>-><a class=\"id\" href=\"#owner\">owner</a>);", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#event\">event</a> == <a class=\"id\" href=\"#CPUFREQ_GOV_STOP\">CPUFREQ_GOV_STOP</a>) && !<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#governor\">governor</a>-><a class=\"id\" href=\"#owner\">owner</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"", 
"int <a class=\"id\" href=\"#cpufreq_register_governor\">cpufreq_register_governor</a>(struct <a class=\"id\" href=\"#cpufreq_governor\">cpufreq_governor</a> *<a class=\"id\" href=\"#governor\">governor</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#governor\">governor</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#cpufreq_governor_mutex\">cpufreq_governor_mutex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#__find_governor\">__find_governor</a>(<a class=\"id\" href=\"#governor\">governor</a>-><a class=\"id\" href=\"#name\">name</a>) == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#governor\">governor</a>-><a class=\"id\" href=\"#governor_list\">governor_list</a>, &amp;<a class=\"id\" href=\"#cpufreq_governor_list\">cpufreq_governor_list</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#cpufreq_governor_mutex\">cpufreq_governor_mutex</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#cpufreq_register_governor\">cpufreq_register_governor</a>);", 
"", 
"", 
"void <a class=\"id\" href=\"#cpufreq_unregister_governor\">cpufreq_unregister_governor</a>(struct <a class=\"id\" href=\"#cpufreq_governor\">cpufreq_governor</a> *<a class=\"id\" href=\"#governor\">governor</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HOTPLUG_CPU\">CONFIG_HOTPLUG_CPU</a>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#governor\">governor</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HOTPLUG_CPU\">CONFIG_HOTPLUG_CPU</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_present_cpu\">for_each_present_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_online\">cpu_online</a>(<a class=\"id\" href=\"#cpu\">cpu</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#cpufreq_cpu_governor\">cpufreq_cpu_governor</a>, <a class=\"id\" href=\"#cpu\">cpu</a>), <a class=\"id\" href=\"#governor\">governor</a>-><a class=\"id\" href=\"#name\">name</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strcpy\">strcpy</a>(<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#cpufreq_cpu_governor\">cpufreq_cpu_governor</a>, <a class=\"id\" href=\"#cpu\">cpu</a>), \"\\0\");", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#cpufreq_governor_mutex\">cpufreq_governor_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#governor\">governor</a>-><a class=\"id\" href=\"#governor_list\">governor_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#cpufreq_governor_mutex\">cpufreq_governor_mutex</a>);", 
"<span class=\"ts\"/>return;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#cpufreq_unregister_governor\">cpufreq_unregister_governor</a>);", 
"", 
"", 
"", 
"<span class=\"comment\">/*********************************************************************</span>", 
"<span class=\"comment\"> *                          POLICY INTERFACE                         *</span>", 
"<span class=\"comment\"> *********************************************************************/</span>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * cpufreq_get_policy - get the current cpufreq_policy</span>", 
"<span class=\"comment\"> * @policy: struct cpufreq_policy into which the current cpufreq_policy</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>is written</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Reads the current cpufreq policy.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#cpufreq_get_policy\">cpufreq_get_policy</a>(struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a>, unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#cpu_policy\">cpu_policy</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#policy\">policy</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpu_policy\">cpu_policy</a> = <a class=\"id\" href=\"#cpufreq_cpu_get\">cpufreq_cpu_get</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cpu_policy\">cpu_policy</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#policy\">policy</a>, <a class=\"id\" href=\"#cpu_policy\">cpu_policy</a>, sizeof(struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_cpu_put\">cpufreq_cpu_put</a>(<a class=\"id\" href=\"#cpu_policy\">cpu_policy</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#cpufreq_get_policy\">cpufreq_get_policy</a>);", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * data   : current policy.</span>", 
"<span class=\"comment\"> * policy : policy to be set.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__cpufreq_set_policy\">__cpufreq_set_policy</a>(struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_debug_disable_ratelimit\">cpufreq_debug_disable_ratelimit</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"setting new policy for CPU %u: %u - %u kHz\\n\", <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#min\">min</a>, <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#max\">max</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpuinfo\">cpuinfo</a>, &amp;<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#cpuinfo\">cpuinfo</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sizeof(struct <a class=\"id\" href=\"#cpufreq_cpuinfo\">cpufreq_cpuinfo</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#min\">min</a> &gt; <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#max\">max</a> || <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#max\">max</a> &lt; <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#min\">min</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_out\">error_out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* verify the cpu speed can be set within this limit */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#verify\">verify</a>(<a class=\"id\" href=\"#policy\">policy</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_out\">error_out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* adjust if necessary - all reasons */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blocking_notifier_call_chain\">blocking_notifier_call_chain</a>(&amp;<a class=\"id\" href=\"#cpufreq_policy_notifier_list\">cpufreq_policy_notifier_list</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#CPUFREQ_ADJUST\">CPUFREQ_ADJUST</a>, <a class=\"id\" href=\"#policy\">policy</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* adjust if necessary - hardware incompatibility*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blocking_notifier_call_chain\">blocking_notifier_call_chain</a>(&amp;<a class=\"id\" href=\"#cpufreq_policy_notifier_list\">cpufreq_policy_notifier_list</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#CPUFREQ_INCOMPATIBLE\">CPUFREQ_INCOMPATIBLE</a>, <a class=\"id\" href=\"#policy\">policy</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* verify the cpu speed can be set within this limit,</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   which might be different to the first one */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#verify\">verify</a>(<a class=\"id\" href=\"#policy\">policy</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_out\">error_out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* notification of the new policy */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blocking_notifier_call_chain\">blocking_notifier_call_chain</a>(&amp;<a class=\"id\" href=\"#cpufreq_policy_notifier_list\">cpufreq_policy_notifier_list</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#CPUFREQ_NOTIFY\">CPUFREQ_NOTIFY</a>, <a class=\"id\" href=\"#policy\">policy</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#min\">min</a> = <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#min\">min</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#max\">max</a> = <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#max\">max</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"new min and max freqs are %u - %u kHz\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#min\">min</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#max\">max</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#setpolicy\">setpolicy</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#policy\">policy</a> = <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#policy\">policy</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"setting range\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#setpolicy\">setpolicy</a>(<a class=\"id\" href=\"#policy\">policy</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#governor\">governor</a> != <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#governor\">governor</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* save old, working values */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_governor\">cpufreq_governor</a> *<a class=\"id\" href=\"#old_gov\">old_gov</a> = <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#governor\">governor</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"governor switch\\n\");", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* end old governor */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#governor\">governor</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__cpufreq_governor\">__cpufreq_governor</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#CPUFREQ_GOV_STOP\">CPUFREQ_GOV_STOP</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* start new governor */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#governor\">governor</a> = <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#governor\">governor</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#__cpufreq_governor\">__cpufreq_governor</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#CPUFREQ_GOV_START\">CPUFREQ_GOV_START</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* new governor failed, so re-start old one */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"starting governor %s failed\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#governor\">governor</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#old_gov\">old_gov</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#governor\">governor</a> = <a class=\"id\" href=\"#old_gov\">old_gov</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__cpufreq_governor\">__cpufreq_governor</a>(<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#CPUFREQ_GOV_START\">CPUFREQ_GOV_START</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_out\">error_out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* might be a policy change, too, so fall through */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"governor: change or update limits\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__cpufreq_governor\">__cpufreq_governor</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#CPUFREQ_GOV_LIMITS\">CPUFREQ_GOV_LIMITS</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#error_out\">error_out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_debug_enable_ratelimit\">cpufreq_debug_enable_ratelimit</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>cpufreq_update_policy - re-evaluate an existing cpufreq policy</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@cpu: CPU which shall be re-evaluated</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Usefull for policy notifiers which have different necessities</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>at different times.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#cpufreq_update_policy\">cpufreq_update_policy</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#cpufreq_cpu_get\">cpufreq_cpu_get</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> <a class=\"id\" href=\"#policy\">policy</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#data\">data</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#no_policy\">no_policy</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#lock_policy_rwsem_write\">lock_policy_rwsem_write</a>(<a class=\"id\" href=\"#cpu\">cpu</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"updating policy for CPU %u\\n\", <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#policy\">policy</a>, <a class=\"id\" href=\"#data\">data</a>, sizeof(struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a>.<a class=\"id\" href=\"#min\">min</a> = <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#user_policy\">user_policy</a>.<a class=\"id\" href=\"#min\">min</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a>.<a class=\"id\" href=\"#max\">max</a> = <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#user_policy\">user_policy</a>.<a class=\"id\" href=\"#max\">max</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a>.<a class=\"id\" href=\"#policy\">policy</a> = <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#user_policy\">user_policy</a>.<a class=\"id\" href=\"#policy\">policy</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a>.<a class=\"id\" href=\"#governor\">governor</a> = <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#user_policy\">user_policy</a>.<a class=\"id\" href=\"#governor\">governor</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* BIOS might change freq behind our back</span>", 
"<span class=\"comment\"><span class=\"ts\"/>  -&gt; ask driver for current freq and notify governors about a change */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#get\">get</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a>.<a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#get\">get</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#cur\">cur</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"Driver did not initialize current freq\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#policy\">policy</a>.<a class=\"id\" href=\"#cur\">cur</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#cur\">cur</a> != <a class=\"id\" href=\"#policy\">policy</a>.<a class=\"id\" href=\"#cur\">cur</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_out_of_sync\">cpufreq_out_of_sync</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#cur\">cur</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a>.<a class=\"id\" href=\"#cur\">cur</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#__cpufreq_set_policy\">__cpufreq_set_policy</a>(<a class=\"id\" href=\"#data\">data</a>, &amp;<a class=\"id\" href=\"#policy\">policy</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_policy_rwsem_write\">unlock_policy_rwsem_write</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<a class=\"id\" href=\"#fail\">fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_cpu_put\">cpufreq_cpu_put</a>(<a class=\"id\" href=\"#data\">data</a>);", 
"<a class=\"id\" href=\"#no_policy\">no_policy</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#cpufreq_update_policy\">cpufreq_update_policy</a>);", 
"", 
"static int <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#cpufreq_cpu_callback\">cpufreq_cpu_callback</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nfb\">nfb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#action\">action</a>, void *<a class=\"id\" href=\"#hcpu\">hcpu</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cpu\">cpu</a> = (unsigned long)<a class=\"id\" href=\"#hcpu\">hcpu</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sys_device\">sys_device</a> *<a class=\"id\" href=\"#sys_dev\">sys_dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sys_dev\">sys_dev</a> = <a class=\"id\" href=\"#get_cpu_sysdev\">get_cpu_sysdev</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sys_dev\">sys_dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#action\">action</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_ONLINE\">CPU_ONLINE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_ONLINE_FROZEN\">CPU_ONLINE_FROZEN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_add_dev\">cpufreq_add_dev</a>(<a class=\"id\" href=\"#sys_dev\">sys_dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_DOWN_PREPARE\">CPU_DOWN_PREPARE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_DOWN_PREPARE_FROZEN\">CPU_DOWN_PREPARE_FROZEN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#lock_policy_rwsem_write\">lock_policy_rwsem_write</a>(<a class=\"id\" href=\"#cpu\">cpu</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__cpufreq_remove_dev\">__cpufreq_remove_dev</a>(<a class=\"id\" href=\"#sys_dev\">sys_dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_DOWN_FAILED\">CPU_DOWN_FAILED</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_DOWN_FAILED_FROZEN\">CPU_DOWN_FAILED_FROZEN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_add_dev\">cpufreq_add_dev</a>(<a class=\"id\" href=\"#sys_dev\">sys_dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NOTIFY_OK\">NOTIFY_OK</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> <a class=\"id\" href=\"#__refdata\">__refdata</a> <a class=\"id\" href=\"#cpufreq_cpu_notifier\">cpufreq_cpu_notifier</a> = {", 
"    .<a class=\"id\" href=\"#notifier_call\">notifier_call</a> = <a class=\"id\" href=\"#cpufreq_cpu_callback\">cpufreq_cpu_callback</a>,", 
"};", 
"", 
"<span class=\"comment\">/*********************************************************************</span>", 
"<span class=\"comment\"> *               REGISTER / UNREGISTER CPUFREQ DRIVER                *</span>", 
"<span class=\"comment\"> *********************************************************************/</span>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * cpufreq_register_driver - register a CPU Frequency driver</span>", 
"<span class=\"comment\"> * @driver_data: A struct cpufreq_driver containing the values#</span>", 
"<span class=\"comment\"> * submitted by the CPU Frequency driver.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *   Registers a CPU Frequency driver to this core code. This code</span>", 
"<span class=\"comment\"> * returns zero on success, -EBUSY when another driver got here first</span>", 
"<span class=\"comment\"> * (and isn't unregistered in the meantime).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#cpufreq_register_driver\">cpufreq_register_driver</a>(struct <a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a> *<a class=\"id\" href=\"#driver_data\">driver_data</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#driver_data\">driver_data</a> || !<a class=\"id\" href=\"#driver_data\">driver_data</a>-><a class=\"id\" href=\"#verify\">verify</a> || !<a class=\"id\" href=\"#driver_data\">driver_data</a>-><a class=\"id\" href=\"#init\">init</a> ||", 
"<span class=\"ts\"/>    ((!<a class=\"id\" href=\"#driver_data\">driver_data</a>-><a class=\"id\" href=\"#setpolicy\">setpolicy</a>) && (!<a class=\"id\" href=\"#driver_data\">driver_data</a>-><a class=\"id\" href=\"#target\">target</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"trying to register driver %s\\n\", <a class=\"id\" href=\"#driver_data\">driver_data</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#driver_data\">driver_data</a>-><a class=\"id\" href=\"#setpolicy\">setpolicy</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#driver_data\">driver_data</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#CPUFREQ_CONST_LOOPS\">CPUFREQ_CONST_LOOPS</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#cpufreq_driver_lock\">cpufreq_driver_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#cpufreq_driver_lock\">cpufreq_driver_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a> = <a class=\"id\" href=\"#driver_data\">driver_data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#cpufreq_driver_lock\">cpufreq_driver_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#sysdev_driver_register\">sysdev_driver_register</a>(&amp;<a class=\"id\" href=\"#cpu_sysdev_class\">cpu_sysdev_class</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#cpufreq_sysdev_driver\">cpufreq_sysdev_driver</a>);", 
"", 
"<span class=\"ts\"/>if ((!<a class=\"id\" href=\"#ret\">ret</a>) && !(<a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#CPUFREQ_STICKY\">CPUFREQ_STICKY</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* check for at least one working CPU */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nr_cpu_ids\">nr_cpu_ids</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_possible\">cpu_possible</a>(<a class=\"id\" href=\"#i\">i</a>) && <a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#cpufreq_cpu_data\">cpufreq_cpu_data</a>, <a class=\"id\" href=\"#i\">i</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* if all -&gt;init() calls failed, unregister */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"no CPU initialized for driver %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#driver_data\">driver_data</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysdev_driver_unregister\">sysdev_driver_unregister</a>(&amp;<a class=\"id\" href=\"#cpu_sysdev_class\">cpu_sysdev_class</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#cpufreq_sysdev_driver\">cpufreq_sysdev_driver</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#cpufreq_driver_lock\">cpufreq_driver_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#cpufreq_driver_lock\">cpufreq_driver_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#register_hotcpu_notifier\">register_hotcpu_notifier</a>(&amp;<a class=\"id\" href=\"#cpufreq_cpu_notifier\">cpufreq_cpu_notifier</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"driver %s up and running\\n\", <a class=\"id\" href=\"#driver_data\">driver_data</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_debug_enable_ratelimit\">cpufreq_debug_enable_ratelimit</a>();", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#cpufreq_register_driver\">cpufreq_register_driver</a>);", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * cpufreq_unregister_driver - unregister the current CPUFreq driver</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *    Unregister the current CPUFreq driver. Only call this if you have</span>", 
"<span class=\"comment\"> * the right to do so, i.e. if you have succeeded in initialising before!</span>", 
"<span class=\"comment\"> * Returns zero if successful, and -EINVAL if the cpufreq_driver is</span>", 
"<span class=\"comment\"> * currently not initialised.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#cpufreq_unregister_driver\">cpufreq_unregister_driver</a>(struct <a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a> *<a class=\"id\" href=\"#driver\">driver</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_debug_disable_ratelimit\">cpufreq_debug_disable_ratelimit</a>();", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a> || (<a class=\"id\" href=\"#driver\">driver</a> != <a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_debug_enable_ratelimit\">cpufreq_debug_enable_ratelimit</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"unregistering driver %s\\n\", <a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sysdev_driver_unregister\">sysdev_driver_unregister</a>(&amp;<a class=\"id\" href=\"#cpu_sysdev_class\">cpu_sysdev_class</a>, &amp;<a class=\"id\" href=\"#cpufreq_sysdev_driver\">cpufreq_sysdev_driver</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_hotcpu_notifier\">unregister_hotcpu_notifier</a>(&amp;<a class=\"id\" href=\"#cpufreq_cpu_notifier\">cpufreq_cpu_notifier</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#cpufreq_driver_lock\">cpufreq_driver_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#cpufreq_driver_lock\">cpufreq_driver_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#cpufreq_unregister_driver\">cpufreq_unregister_driver</a>);", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#cpufreq_core_init\">cpufreq_core_init</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_possible_cpu\">for_each_possible_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#cpufreq_policy_cpu\">cpufreq_policy_cpu</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) = -1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#init_rwsem\">init_rwsem</a>(&amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#cpu_policy_rwsem\">cpu_policy_rwsem</a>, <a class=\"id\" href=\"#cpu\">cpu</a>));", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_global_kobject\">cpufreq_global_kobject</a> = <a class=\"id\" href=\"#kobject_create_and_add\">kobject_create_and_add</a>(\"cpufreq\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#cpu_sysdev_class\">cpu_sysdev_class</a>.<a class=\"id\" href=\"#kset\">kset</a>.<a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#cpufreq_global_kobject\">cpufreq_global_kobject</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#core_initcall\">core_initcall</a>(<a class=\"id\" href=\"#cpufreq_core_init\">cpufreq_core_init</a>);", 
];
xr_frag_insert('l/8b/5b5658eb61847025ba6f43df8efa050a39ffa0.xr', __xr_tmp);
