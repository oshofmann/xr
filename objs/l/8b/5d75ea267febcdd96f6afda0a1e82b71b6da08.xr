var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Block data types and constants.  Directly include this file only to</span>", 
"<span class=\"comment\"> * break include dependency loop.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__LINUX_BLK_TYPES_H\">__LINUX_BLK_TYPES_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__LINUX_BLK_TYPES_H\">__LINUX_BLK_TYPES_H</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_BLOCK\">CONFIG_BLOCK</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#bio_set\">bio_set</a>;", 
"struct <a class=\"id\" href=\"#bio\">bio</a>;", 
"struct <a class=\"id\" href=\"#bio_integrity_payload\">bio_integrity_payload</a>;", 
"struct <a class=\"id\" href=\"#page\">page</a>;", 
"struct <a class=\"id\" href=\"#block_device\">block_device</a>;", 
"typedef void (<a class=\"id\" href=\"#bio_end_io_t\">bio_end_io_t</a>) (struct <a class=\"id\" href=\"#bio\">bio</a> *, int);", 
"typedef void (<a class=\"id\" href=\"#bio_destructor_t\">bio_destructor_t</a>) (struct <a class=\"id\" href=\"#bio\">bio</a> *);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * was unsigned short, but we might as well be ready for &gt; 64kB I/O pages</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a><span class=\"ts\"/>*<a class=\"id\" href=\"#bv_page\">bv_page</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#bv_len\">bv_len</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#bv_offset\">bv_offset</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * main unit of I/O for the block layer and lower layers (ie drivers and</span>", 
"<span class=\"comment\"> * stacking drivers)</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#bio\">bio</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bi_sector\">bi_sector</a>;<span class=\"ts\"/><span class=\"comment\">/* device address in 512 byte</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   sectors */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#bi_next\">bi_next</a>;<span class=\"ts\"/><span class=\"comment\">/* request queue link */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#block_device\">block_device</a><span class=\"ts\"/>*<a class=\"id\" href=\"#bi_bdev\">bi_bdev</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bi_flags\">bi_flags</a>;<span class=\"ts\"/><span class=\"comment\">/* status, command, etc */</span>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bi_rw\">bi_rw</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* bottom bits READ/WRITE,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * top bits priority</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bi_vcnt\">bi_vcnt</a>;<span class=\"ts\"/><span class=\"comment\">/* how many bio_vec's */</span>", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bi_idx\">bi_idx</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* current index into bvl_vec */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Number of segments in this BIO after</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * physical address coalescing is performed.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bi_phys_segments\">bi_phys_segments</a>;", 
"", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bi_size\">bi_size</a>;<span class=\"ts\"/><span class=\"comment\">/* residual I/O count */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * To keep track of the max segment size, we account for the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * sizes of the first and last mergeable segments in this bio.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bi_seg_front_size\">bi_seg_front_size</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bi_seg_back_size\">bi_seg_back_size</a>;", 
"", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bi_max_vecs\">bi_max_vecs</a>;<span class=\"ts\"/><span class=\"comment\">/* max bvl_vecs we can hold */</span>", 
"", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bi_comp_cpu\">bi_comp_cpu</a>;<span class=\"ts\"/><span class=\"comment\">/* completion CPU */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bi_cnt\">bi_cnt</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* pin count */</span>", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#bi_io_vec\">bi_io_vec</a>;<span class=\"ts\"/><span class=\"comment\">/* the actual vec list */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio_end_io_t\">bio_end_io_t</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#bi_end_io\">bi_end_io</a>;", 
"", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#bi_private\">bi_private</a>;", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_BLK_DEV_INTEGRITY\">CONFIG_BLK_DEV_INTEGRITY</a>)", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_integrity_payload\">bio_integrity_payload</a> *<a class=\"id\" href=\"#bi_integrity\">bi_integrity</a>;  <span class=\"comment\">/* data integrity */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio_destructor_t\">bio_destructor_t</a><span class=\"ts\"/>*<a class=\"id\" href=\"#bi_destructor\">bi_destructor</a>;<span class=\"ts\"/><span class=\"comment\">/* destructor */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We can inline a number of vecs at the end of the bio, to avoid</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * double allocations for a small number of bio_vecs. This member</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * MUST obviously be kept at the very end of the bio.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bi_inline_vecs\">bi_inline_vecs</a>[0];", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * bio flags</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BIO_UPTODATE\">BIO_UPTODATE</a><span class=\"ts\"/>0<span class=\"ts\"/><span class=\"comment\">/* ok after I/O completion */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BIO_RW_BLOCK\">BIO_RW_BLOCK</a><span class=\"ts\"/>1<span class=\"ts\"/><span class=\"comment\">/* RW_AHEAD set, and read/write would block */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BIO_EOF\">BIO_EOF</a><span class=\"ts\"/><span class=\"ts\"/>2<span class=\"ts\"/><span class=\"comment\">/* out-out-bounds error */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BIO_SEG_VALID\">BIO_SEG_VALID</a><span class=\"ts\"/>3<span class=\"ts\"/><span class=\"comment\">/* bi_phys_segments valid */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BIO_CLONED\">BIO_CLONED</a><span class=\"ts\"/>4<span class=\"ts\"/><span class=\"comment\">/* doesn't own data */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BIO_BOUNCED\">BIO_BOUNCED</a><span class=\"ts\"/>5<span class=\"ts\"/><span class=\"comment\">/* bio is a bounce bio */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BIO_USER_MAPPED\">BIO_USER_MAPPED</a> 6<span class=\"ts\"/><span class=\"comment\">/* contains user pages */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BIO_EOPNOTSUPP\">BIO_EOPNOTSUPP</a><span class=\"ts\"/>7<span class=\"ts\"/><span class=\"comment\">/* not supported */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BIO_CPU_AFFINE\">BIO_CPU_AFFINE</a><span class=\"ts\"/>8<span class=\"ts\"/><span class=\"comment\">/* complete bio on same CPU as submitted */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BIO_NULL_MAPPED\">BIO_NULL_MAPPED</a> 9<span class=\"ts\"/><span class=\"comment\">/* contains invalid user pages */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BIO_FS_INTEGRITY\">BIO_FS_INTEGRITY</a> 10<span class=\"ts\"/><span class=\"comment\">/* fs owns integrity data, not block layer */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BIO_QUIET\">BIO_QUIET</a><span class=\"ts\"/>11<span class=\"ts\"/><span class=\"comment\">/* Make BIO Quiet */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#bio_flagged\">bio_flagged</a>(<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#flag\">flag</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#bio\">bio</a>)-><a class=\"id\" href=\"#bi_flags\">bi_flags</a> &amp; (1 << (<a class=\"id\" href=\"#flag\">flag</a>)))", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * top 4 bits of bio flags indicate the pool this bio came from</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BIO_POOL_BITS\">BIO_POOL_BITS</a><span class=\"ts\"/><span class=\"ts\"/>(4)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BIO_POOL_NONE\">BIO_POOL_NONE</a><span class=\"ts\"/><span class=\"ts\"/>((1UL << <a class=\"id\" href=\"#BIO_POOL_BITS\">BIO_POOL_BITS</a>) - 1)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BIO_POOL_OFFSET\">BIO_POOL_OFFSET</a><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a> - <a class=\"id\" href=\"#BIO_POOL_BITS\">BIO_POOL_BITS</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BIO_POOL_MASK\">BIO_POOL_MASK</a><span class=\"ts\"/><span class=\"ts\"/>(1UL << <a class=\"id\" href=\"#BIO_POOL_OFFSET\">BIO_POOL_OFFSET</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BIO_POOL_IDX\">BIO_POOL_IDX</a>(<a class=\"id\" href=\"#bio\">bio</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#bio\">bio</a>)-><a class=\"id\" href=\"#bi_flags\">bi_flags</a> >> <a class=\"id\" href=\"#BIO_POOL_OFFSET\">BIO_POOL_OFFSET</a>)", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_BLOCK */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Request flags.  For use in the cmd_flags field of struct request, and in</span>", 
"<span class=\"comment\"> * bi_rw of struct bio.  Note that some flags are only valid in either one.</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#rq_flag_bits\">rq_flag_bits</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* common flags */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__REQ_WRITE\">__REQ_WRITE</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* not set, read. set, write */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__REQ_FAILFAST_DEV\">__REQ_FAILFAST_DEV</a>,<span class=\"ts\"/><span class=\"comment\">/* no driver retries of device errors */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__REQ_FAILFAST_TRANSPORT\">__REQ_FAILFAST_TRANSPORT</a>, <span class=\"comment\">/* no driver retries of transport errors */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__REQ_FAILFAST_DRIVER\">__REQ_FAILFAST_DRIVER</a>,<span class=\"ts\"/><span class=\"comment\">/* no driver retries of driver errors */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__REQ_HARDBARRIER\">__REQ_HARDBARRIER</a>,<span class=\"ts\"/><span class=\"comment\">/* may not be passed by drive either */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__REQ_SYNC\">__REQ_SYNC</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* request is sync (sync write or read) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__REQ_META\">__REQ_META</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* metadata io request */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__REQ_DISCARD\">__REQ_DISCARD</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* request to discard sectors */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__REQ_NOIDLE\">__REQ_NOIDLE</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* don't anticipate more IO after this one */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* bio only flags */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__REQ_UNPLUG\">__REQ_UNPLUG</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* unplug the immediately after submission */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__REQ_RAHEAD\">__REQ_RAHEAD</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* read ahead, can fail anytime */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* request only flags */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__REQ_SORTED\">__REQ_SORTED</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* elevator knows about this request */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__REQ_SOFTBARRIER\">__REQ_SOFTBARRIER</a>,<span class=\"ts\"/><span class=\"comment\">/* may not be passed by ioscheduler */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__REQ_FUA\">__REQ_FUA</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* forced unit access */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__REQ_NOMERGE\">__REQ_NOMERGE</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* don't touch this for merging */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__REQ_STARTED\">__REQ_STARTED</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* drive already may have started this one */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__REQ_DONTPREP\">__REQ_DONTPREP</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* don't call prep for this one */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__REQ_QUEUED\">__REQ_QUEUED</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* uses queueing */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__REQ_ELVPRIV\">__REQ_ELVPRIV</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* elevator private data attached */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__REQ_FAILED\">__REQ_FAILED</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* set if the request failed */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__REQ_QUIET\">__REQ_QUIET</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* don't worry about errors */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__REQ_PREEMPT\">__REQ_PREEMPT</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* set for \"ide_preempt\" requests */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__REQ_ORDERED_COLOR\">__REQ_ORDERED_COLOR</a>,<span class=\"ts\"/><span class=\"comment\">/* is before or after barrier */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__REQ_ALLOCED\">__REQ_ALLOCED</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* request came from our alloc pool */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__REQ_COPY_USER\">__REQ_COPY_USER</a>,<span class=\"ts\"/><span class=\"comment\">/* contains copies of user pages */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__REQ_INTEGRITY\">__REQ_INTEGRITY</a>,<span class=\"ts\"/><span class=\"comment\">/* integrity metadata has been remapped */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__REQ_FLUSH\">__REQ_FLUSH</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* request for cache flush */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__REQ_IO_STAT\">__REQ_IO_STAT</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* account I/O stat */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__REQ_MIXED_MERGE\">__REQ_MIXED_MERGE</a>,<span class=\"ts\"/><span class=\"comment\">/* merge of different types, fail separately */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__REQ_SECURE\">__REQ_SECURE</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* secure discard (used with __REQ_DISCARD) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__REQ_NR_BITS\">__REQ_NR_BITS</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* stops here */</span>", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REQ_WRITE\">REQ_WRITE</a><span class=\"ts\"/><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#__REQ_WRITE\">__REQ_WRITE</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REQ_FAILFAST_DEV\">REQ_FAILFAST_DEV</a><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#__REQ_FAILFAST_DEV\">__REQ_FAILFAST_DEV</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REQ_FAILFAST_TRANSPORT\">REQ_FAILFAST_TRANSPORT</a><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#__REQ_FAILFAST_TRANSPORT\">__REQ_FAILFAST_TRANSPORT</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REQ_FAILFAST_DRIVER\">REQ_FAILFAST_DRIVER</a><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#__REQ_FAILFAST_DRIVER\">__REQ_FAILFAST_DRIVER</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REQ_HARDBARRIER\">REQ_HARDBARRIER</a><span class=\"ts\"/><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#__REQ_HARDBARRIER\">__REQ_HARDBARRIER</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REQ_SYNC\">REQ_SYNC</a><span class=\"ts\"/><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#__REQ_SYNC\">__REQ_SYNC</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REQ_META\">REQ_META</a><span class=\"ts\"/><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#__REQ_META\">__REQ_META</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REQ_DISCARD\">REQ_DISCARD</a><span class=\"ts\"/><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#__REQ_DISCARD\">__REQ_DISCARD</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REQ_NOIDLE\">REQ_NOIDLE</a><span class=\"ts\"/><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#__REQ_NOIDLE\">__REQ_NOIDLE</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REQ_FAILFAST_MASK\">REQ_FAILFAST_MASK</a> \\", 
"<span class=\"ts\"/>(<a class=\"id\" href=\"#REQ_FAILFAST_DEV\">REQ_FAILFAST_DEV</a> | <a class=\"id\" href=\"#REQ_FAILFAST_TRANSPORT\">REQ_FAILFAST_TRANSPORT</a> | <a class=\"id\" href=\"#REQ_FAILFAST_DRIVER\">REQ_FAILFAST_DRIVER</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REQ_COMMON_MASK\">REQ_COMMON_MASK</a> \\", 
"<span class=\"ts\"/>(<a class=\"id\" href=\"#REQ_WRITE\">REQ_WRITE</a> | <a class=\"id\" href=\"#REQ_FAILFAST_MASK\">REQ_FAILFAST_MASK</a> | <a class=\"id\" href=\"#REQ_HARDBARRIER\">REQ_HARDBARRIER</a> | <a class=\"id\" href=\"#REQ_SYNC\">REQ_SYNC</a> | \\", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#REQ_META\">REQ_META</a>| <a class=\"id\" href=\"#REQ_DISCARD\">REQ_DISCARD</a> | <a class=\"id\" href=\"#REQ_NOIDLE\">REQ_NOIDLE</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REQ_UNPLUG\">REQ_UNPLUG</a><span class=\"ts\"/><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#__REQ_UNPLUG\">__REQ_UNPLUG</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REQ_RAHEAD\">REQ_RAHEAD</a><span class=\"ts\"/><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#__REQ_RAHEAD\">__REQ_RAHEAD</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REQ_SORTED\">REQ_SORTED</a><span class=\"ts\"/><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#__REQ_SORTED\">__REQ_SORTED</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REQ_SOFTBARRIER\">REQ_SOFTBARRIER</a><span class=\"ts\"/><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#__REQ_SOFTBARRIER\">__REQ_SOFTBARRIER</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REQ_FUA\">REQ_FUA</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#__REQ_FUA\">__REQ_FUA</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REQ_NOMERGE\">REQ_NOMERGE</a><span class=\"ts\"/><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#__REQ_NOMERGE\">__REQ_NOMERGE</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REQ_STARTED\">REQ_STARTED</a><span class=\"ts\"/><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#__REQ_STARTED\">__REQ_STARTED</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REQ_DONTPREP\">REQ_DONTPREP</a><span class=\"ts\"/><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#__REQ_DONTPREP\">__REQ_DONTPREP</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REQ_QUEUED\">REQ_QUEUED</a><span class=\"ts\"/><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#__REQ_QUEUED\">__REQ_QUEUED</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REQ_ELVPRIV\">REQ_ELVPRIV</a><span class=\"ts\"/><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#__REQ_ELVPRIV\">__REQ_ELVPRIV</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REQ_FAILED\">REQ_FAILED</a><span class=\"ts\"/><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#__REQ_FAILED\">__REQ_FAILED</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REQ_QUIET\">REQ_QUIET</a><span class=\"ts\"/><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#__REQ_QUIET\">__REQ_QUIET</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REQ_PREEMPT\">REQ_PREEMPT</a><span class=\"ts\"/><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#__REQ_PREEMPT\">__REQ_PREEMPT</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REQ_ORDERED_COLOR\">REQ_ORDERED_COLOR</a><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#__REQ_ORDERED_COLOR\">__REQ_ORDERED_COLOR</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REQ_ALLOCED\">REQ_ALLOCED</a><span class=\"ts\"/><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#__REQ_ALLOCED\">__REQ_ALLOCED</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REQ_COPY_USER\">REQ_COPY_USER</a><span class=\"ts\"/><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#__REQ_COPY_USER\">__REQ_COPY_USER</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REQ_INTEGRITY\">REQ_INTEGRITY</a><span class=\"ts\"/><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#__REQ_INTEGRITY\">__REQ_INTEGRITY</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REQ_FLUSH\">REQ_FLUSH</a><span class=\"ts\"/><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#__REQ_FLUSH\">__REQ_FLUSH</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REQ_IO_STAT\">REQ_IO_STAT</a><span class=\"ts\"/><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#__REQ_IO_STAT\">__REQ_IO_STAT</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REQ_MIXED_MERGE\">REQ_MIXED_MERGE</a><span class=\"ts\"/><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#__REQ_MIXED_MERGE\">__REQ_MIXED_MERGE</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REQ_SECURE\">REQ_SECURE</a><span class=\"ts\"/><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#__REQ_SECURE\">__REQ_SECURE</a>)", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __LINUX_BLK_TYPES_H */</span>", 
];
xr_frag_insert('l/8b/5d75ea267febcdd96f6afda0a1e82b71b6da08.xr', __xr_tmp);
