var __xr_tmp = [
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#journal_finish_inode_data_buffers\">journal_finish_inode_data_buffers</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transaction_t\">transaction_t</a> *<a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#jbd2_inode\">jbd2_inode</a> *<a class=\"id\" href=\"#jinode\">jinode</a>, *<a class=\"id\" href=\"#next_i\">next_i</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>, <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* For locking, see the comment in journal_submit_data_buffers() */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#jinode\">jinode</a>, &amp;<a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>-><a class=\"id\" href=\"#t_inode_list\">t_inode_list</a>, <a class=\"id\" href=\"#i_list\">i_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jinode\">jinode</a>-><a class=\"id\" href=\"#i_flags\">i_flags</a> |= <a class=\"id\" href=\"#JI_COMMIT_RUNNING\">JI_COMMIT_RUNNING</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#filemap_fdatawait\">filemap_fdatawait</a>(<a class=\"id\" href=\"#jinode\">jinode</a>-><a class=\"id\" href=\"#i_vfs_inode\">i_vfs_inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Because AS_EIO is cleared by</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * filemap_fdatawait_range(), set it again so</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * that user process can get -EIO from fsync().</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#AS_EIO\">AS_EIO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#jinode\">jinode</a>-><a class=\"id\" href=\"#i_vfs_inode\">i_vfs_inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jinode\">jinode</a>-><a class=\"id\" href=\"#i_flags\">i_flags</a> &= ~<a class=\"id\" href=\"#JI_COMMIT_RUNNING\">JI_COMMIT_RUNNING</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_bit\">wake_up_bit</a>(&amp;<a class=\"id\" href=\"#jinode\">jinode</a>-><a class=\"id\" href=\"#i_flags\">i_flags</a>, <a class=\"id\" href=\"#__JI_COMMIT_RUNNING\">__JI_COMMIT_RUNNING</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Now refile inode to proper lists */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#jinode\">jinode</a>, <a class=\"id\" href=\"#next_i\">next_i</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> &amp;<a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>-><a class=\"id\" href=\"#t_inode_list\">t_inode_list</a>, <a class=\"id\" href=\"#i_list\">i_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#jinode\">jinode</a>-><a class=\"id\" href=\"#i_list\">i_list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#jinode\">jinode</a>-><a class=\"id\" href=\"#i_next_transaction\">i_next_transaction</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jinode\">jinode</a>-><a class=\"id\" href=\"#i_transaction\">i_transaction</a> = <a class=\"id\" href=\"#jinode\">jinode</a>-><a class=\"id\" href=\"#i_next_transaction\">i_next_transaction</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jinode\">jinode</a>-><a class=\"id\" href=\"#i_next_transaction\">i_next_transaction</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#jinode\">jinode</a>-><a class=\"id\" href=\"#i_list\">i_list</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#jinode\">jinode</a>-><a class=\"id\" href=\"#i_transaction\">i_transaction</a>-><a class=\"id\" href=\"#t_inode_list\">t_inode_list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jinode\">jinode</a>-><a class=\"id\" href=\"#i_transaction\">i_transaction</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#jbd2_checksum_data\">jbd2_checksum_data</a>(<a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#crc32_sum\">crc32_sum</a>, struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_page\">b_page</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#checksum\">checksum</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#kmap_atomic\">kmap_atomic</a>(<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#KM_USER0\">KM_USER0</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#checksum\">checksum</a> = <a class=\"id\" href=\"#crc32_be\">crc32_be</a>(<a class=\"id\" href=\"#crc32_sum\">crc32_sum</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>(void *)(<a class=\"id\" href=\"#addr\">addr</a> + <a class=\"id\" href=\"#offset_in_page\">offset_in_page</a>(<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>)), <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_size\">b_size</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kunmap_atomic\">kunmap_atomic</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#KM_USER0\">KM_USER0</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#checksum\">checksum</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#write_tag_block\">write_tag_block</a>(int <a class=\"id\" href=\"#tag_bytes\">tag_bytes</a>, <a class=\"id\" href=\"#journal_block_tag_t\">journal_block_tag_t</a> *<a class=\"id\" href=\"#tag\">tag</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned long long <a class=\"id\" href=\"#block\">block</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tag\">tag</a>-><a class=\"id\" href=\"#t_blocknr\">t_blocknr</a> = <a class=\"id\" href=\"#cpu_to_be32\">cpu_to_be32</a>(<a class=\"id\" href=\"#block\">block</a> &amp; (<a class=\"id\" href=\"#u32\">u32</a>)~0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tag_bytes\">tag_bytes</a> &gt; <a class=\"id\" href=\"#JBD2_TAG_SIZE32\">JBD2_TAG_SIZE32</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tag\">tag</a>-><a class=\"id\" href=\"#t_blocknr_high\">t_blocknr_high</a> = <a class=\"id\" href=\"#cpu_to_be32\">cpu_to_be32</a>((<a class=\"id\" href=\"#block\">block</a> >> 31) >> 1);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * jbd2_journal_commit_transaction</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The primary function for committing a transaction to the log.  This</span>", 
"<span class=\"comment\"> * function is called by the journal thread to begin a complete commit.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#jbd2_journal_commit_transaction\">jbd2_journal_commit_transaction</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#transaction_stats_s\">transaction_stats_s</a> <a class=\"id\" href=\"#stats\">stats</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#transaction_t\">transaction_t</a> *<a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *<a class=\"id\" href=\"#jh\">jh</a>, *<a class=\"id\" href=\"#new_jh\">new_jh</a>, *<a class=\"id\" href=\"#descriptor\">descriptor</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> **<a class=\"id\" href=\"#wbuf\">wbuf</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_wbuf\">j_wbuf</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#bufs\">bufs</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#blocknr\">blocknr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#start_time\">start_time</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#commit_time\">commit_time</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#tagp\">tagp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_header_t\">journal_header_t</a> *<a class=\"id\" href=\"#header\">header</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_block_tag_t\">journal_block_tag_t</a> *<a class=\"id\" href=\"#tag\">tag</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#space_left\">space_left</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#first_tag\">first_tag</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#tag_flag\">tag_flag</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#to_free\">to_free</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#tag_bytes\">tag_bytes</a> = <a class=\"id\" href=\"#journal_tag_bytes\">journal_tag_bytes</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#cbh\">cbh</a> = <a class=\"id\" href=\"#NULL\">NULL</a>; <span class=\"comment\">/* For transactional checksums */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#crc32_sum\">crc32_sum</a> = ~0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#write_op\">write_op</a> = <a class=\"id\" href=\"#WRITE\">WRITE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * First job: lock down the current transaction and wait for</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * all outstanding updates to complete.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#COMMIT_STATS\">COMMIT_STATS</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#summarise_journal_usage\">summarise_journal_usage</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Do we need to erase the effects of a prior jbd2_journal_flush? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_flags\">j_flags</a> &amp; <a class=\"id\" href=\"#JBD2_FLUSHED\">JBD2_FLUSHED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(3, \"super block updated\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_update_superblock\">jbd2_journal_update_superblock</a>(<a class=\"id\" href=\"#journal\">journal</a>, 1);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(3, \"superblock not updated\\n\");", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT\">J_ASSERT</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_running_transaction\">j_running_transaction</a> != <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT\">J_ASSERT</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_committing_transaction\">j_committing_transaction</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#commit_transaction\">commit_transaction</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_running_transaction\">j_running_transaction</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT\">J_ASSERT</a>(<a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>-><a class=\"id\" href=\"#t_state\">t_state</a> == <a class=\"id\" href=\"#T_RUNNING\">T_RUNNING</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_jbd2_start_commit\">trace_jbd2_start_commit</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(1, \"JBD: starting commit of transaction %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>-><a class=\"id\" href=\"#t_tid\">t_tid</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock\">write_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>-><a class=\"id\" href=\"#t_state\">t_state</a> = <a class=\"id\" href=\"#T_LOCKED\">T_LOCKED</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Use plugged writes here, since we want to submit several before</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we unplug the device. We don't do explicit unplugging in here,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * instead we rely on sync_buffer() doing the unplug for us.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>-><a class=\"id\" href=\"#t_synchronous_commit\">t_synchronous_commit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_op\">write_op</a> = <a class=\"id\" href=\"#WRITE_SYNC_PLUG\">WRITE_SYNC_PLUG</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_jbd2_commit_locking\">trace_jbd2_commit_locking</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#run\">run</a>.<a class=\"id\" href=\"#rs_wait\">rs_wait</a> = <a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>-><a class=\"id\" href=\"#t_max_wait\">t_max_wait</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#run\">run</a>.<a class=\"id\" href=\"#rs_locked\">rs_locked</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#run\">run</a>.<a class=\"id\" href=\"#rs_running\">rs_running</a> = <a class=\"id\" href=\"#jbd2_time_diff\">jbd2_time_diff</a>(<a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>-><a class=\"id\" href=\"#t_start\">t_start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#run\">run</a>.<a class=\"id\" href=\"#rs_locked\">rs_locked</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>-><a class=\"id\" href=\"#t_handle_lock\">t_handle_lock</a>);", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>-><a class=\"id\" href=\"#t_updates\">t_updates</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DEFINE_WAIT\">DEFINE_WAIT</a>(<a class=\"id\" href=\"#wait\">wait</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prepare_to_wait\">prepare_to_wait</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_wait_updates\">j_wait_updates</a>, &amp;<a class=\"id\" href=\"#wait\">wait</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#TASK_UNINTERRUPTIBLE\">TASK_UNINTERRUPTIBLE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>-><a class=\"id\" href=\"#t_updates\">t_updates</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>-><a class=\"id\" href=\"#t_handle_lock\">t_handle_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock\">write_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule\">schedule</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_lock\">write_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>-><a class=\"id\" href=\"#t_handle_lock\">t_handle_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#finish_wait\">finish_wait</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_wait_updates\">j_wait_updates</a>, &amp;<a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>-><a class=\"id\" href=\"#t_handle_lock\">t_handle_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT\">J_ASSERT</a> (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>-><a class=\"id\" href=\"#t_outstanding_credits\">t_outstanding_credits</a>) <=", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_max_transaction_buffers\">j_max_transaction_buffers</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * First thing we are allowed to do is to discard any remaining</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * BJ_Reserved buffers.  Note, it is _not_ permissible to assume</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * that there are no such buffers: if a large filesystem</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * operation like a truncate needs to split itself over multiple</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * transactions, then it may try to do a jbd2_journal_restart() while</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * there are still BJ_Reserved buffers outstanding.  These must</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * be released cleanly from the current transaction.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * In this case, the filesystem must still reserve write access</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * again before modifying the buffer in the new transaction, but</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we do not require it to remember exactly which old buffers it</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * has reserved.  This is consistent with the existing behaviour</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * that multiple jbd2_journal_get_write_access() calls to the same</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * buffer are perfectly permissable.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>-><a class=\"id\" href=\"#t_reserved_list\">t_reserved_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jh\">jh</a> = <a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>-><a class=\"id\" href=\"#t_reserved_list\">t_reserved_list</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#JBUFFER_TRACE\">JBUFFER_TRACE</a>(<a class=\"id\" href=\"#jh\">jh</a>, \"reserved, unused: refile\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * A jbd2_journal_get_undo_access()+jbd2_journal_release_buffer() may</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * leave undo-committed data.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_committed_data\">b_committed_data</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#jh2bh\">jh2bh</a>(<a class=\"id\" href=\"#jh\">jh</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_lock_bh_state\">jbd_lock_bh_state</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_free\">jbd2_free</a>(<a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_committed_data\">b_committed_data</a>, <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_size\">b_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_committed_data\">b_committed_data</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_unlock_bh_state\">jbd_unlock_bh_state</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_refile_buffer\">jbd2_journal_refile_buffer</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#jh\">jh</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Now try to drop any written-back buffers from the journal's</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * checkpoint lists.  We do this *before* commit because it potentially</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * frees some memory</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__jbd2_journal_clean_checkpoint_list\">__jbd2_journal_clean_checkpoint_list</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a> (3, \"JBD: commit phase 1\\n\");", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Switch to a new revoke table.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_switch_revoke_table\">jbd2_journal_switch_revoke_table</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_jbd2_commit_flushing\">trace_jbd2_commit_flushing</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#run\">run</a>.<a class=\"id\" href=\"#rs_flushing\">rs_flushing</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#run\">run</a>.<a class=\"id\" href=\"#rs_locked\">rs_locked</a> = <a class=\"id\" href=\"#jbd2_time_diff\">jbd2_time_diff</a>(<a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#run\">run</a>.<a class=\"id\" href=\"#rs_locked\">rs_locked</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#run\">run</a>.<a class=\"id\" href=\"#rs_flushing\">rs_flushing</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>-><a class=\"id\" href=\"#t_state\">t_state</a> = <a class=\"id\" href=\"#T_FLUSH\">T_FLUSH</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_committing_transaction\">j_committing_transaction</a> = <a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_running_transaction\">j_running_transaction</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#start_time\">start_time</a> = <a class=\"id\" href=\"#ktime_get\">ktime_get</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>-><a class=\"id\" href=\"#t_log_start\">t_log_start</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_head\">j_head</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wake_up\">wake_up</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_wait_transaction_locked\">j_wait_transaction_locked</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock\">write_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a> (3, \"JBD: commit phase 2\\n\");", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Now start flushing things to disk, in the order they appear</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * on the transaction lists.  Data blocks go first.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#journal_submit_data_buffers\">journal_submit_data_buffers</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_abort\">jbd2_journal_abort</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#err\">err</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_write_revoke_records\">jbd2_journal_write_revoke_records</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#write_op\">write_op</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(3, \"JBD: commit phase 2\\n\");", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Way to go: we have now written out all of the data for a</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * transaction!  Now comes the tricky part: we need to write out</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * metadata.  Loop over the transaction's entire buffer list:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock\">write_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>-><a class=\"id\" href=\"#t_state\">t_state</a> = <a class=\"id\" href=\"#T_COMMIT\">T_COMMIT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock\">write_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_jbd2_commit_logging\">trace_jbd2_commit_logging</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#run\">run</a>.<a class=\"id\" href=\"#rs_logging\">rs_logging</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#run\">run</a>.<a class=\"id\" href=\"#rs_flushing\">rs_flushing</a> = <a class=\"id\" href=\"#jbd2_time_diff\">jbd2_time_diff</a>(<a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#run\">run</a>.<a class=\"id\" href=\"#rs_flushing\">rs_flushing</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#run\">run</a>.<a class=\"id\" href=\"#rs_logging\">rs_logging</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#run\">run</a>.<a class=\"id\" href=\"#rs_blocks\">rs_blocks</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>-><a class=\"id\" href=\"#t_outstanding_credits\">t_outstanding_credits</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#run\">run</a>.<a class=\"id\" href=\"#rs_blocks_logged\">rs_blocks_logged</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT\">J_ASSERT</a>(<a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>-><a class=\"id\" href=\"#t_nr_buffers\">t_nr_buffers</a> <=", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>-><a class=\"id\" href=\"#t_outstanding_credits\">t_outstanding_credits</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#descriptor\">descriptor</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bufs\">bufs</a> = 0;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>-><a class=\"id\" href=\"#t_buffers\">t_buffers</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Find the next buffer to be journaled... */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jh\">jh</a> = <a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>-><a class=\"id\" href=\"#t_buffers\">t_buffers</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If we're in abort mode, we just un-journal the buffer and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   release it. */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#is_journal_aborted\">is_journal_aborted</a>(<a class=\"id\" href=\"#journal\">journal</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_buffer_jbddirty\">clear_buffer_jbddirty</a>(<a class=\"id\" href=\"#jh2bh\">jh2bh</a>(<a class=\"id\" href=\"#jh\">jh</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#JBUFFER_TRACE\">JBUFFER_TRACE</a>(<a class=\"id\" href=\"#jh\">jh</a>, \"journal is aborting: refile\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_buffer_abort_trigger\">jbd2_buffer_abort_trigger</a>(<a class=\"id\" href=\"#jh\">jh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_frozen_data\">b_frozen_data</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_frozen_triggers\">b_frozen_triggers</a> :", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_triggers\">b_triggers</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_refile_buffer\">jbd2_journal_refile_buffer</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#jh\">jh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If that was the last one, we need to clean up</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * any descriptor buffers which may have been</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * already allocated, even if we are now</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * aborting. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>-><a class=\"id\" href=\"#t_buffers\">t_buffers</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#start_journal_io\">start_journal_io</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Make sure we have a descriptor block in which to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   record the metadata buffer. */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#descriptor\">descriptor</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT\">J_ASSERT</a> (<a class=\"id\" href=\"#bufs\">bufs</a> == 0);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(4, \"JBD: get descriptor\\n\");", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#descriptor\">descriptor</a> = <a class=\"id\" href=\"#jbd2_journal_get_descriptor_buffer\">jbd2_journal_get_descriptor_buffer</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#descriptor\">descriptor</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_abort\">jbd2_journal_abort</a>(<a class=\"id\" href=\"#journal\">journal</a>, -<a class=\"id\" href=\"#EIO\">EIO</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#jh2bh\">jh2bh</a>(<a class=\"id\" href=\"#descriptor\">descriptor</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(4, \"JBD: got buffer %llu (%p)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long long)<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_blocknr\">b_blocknr</a>, <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#header\">header</a> = (<a class=\"id\" href=\"#journal_header_t\">journal_header_t</a> *)&amp;<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>[0];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#header\">header</a>-><a class=\"id\" href=\"#h_magic\">h_magic</a>     = <a class=\"id\" href=\"#cpu_to_be32\">cpu_to_be32</a>(<a class=\"id\" href=\"#JBD2_MAGIC_NUMBER\">JBD2_MAGIC_NUMBER</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#header\">header</a>-><a class=\"id\" href=\"#h_blocktype\">h_blocktype</a> = <a class=\"id\" href=\"#cpu_to_be32\">cpu_to_be32</a>(<a class=\"id\" href=\"#JBD2_DESCRIPTOR_BLOCK\">JBD2_DESCRIPTOR_BLOCK</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#header\">header</a>-><a class=\"id\" href=\"#h_sequence\">h_sequence</a>  = <a class=\"id\" href=\"#cpu_to_be32\">cpu_to_be32</a>(<a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>-><a class=\"id\" href=\"#t_tid\">t_tid</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tagp\">tagp</a> = &amp;<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>[sizeof(<a class=\"id\" href=\"#journal_header_t\">journal_header_t</a>)];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#space_left\">space_left</a> = <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_size\">b_size</a> - sizeof(<a class=\"id\" href=\"#journal_header_t\">journal_header_t</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#first_tag\">first_tag</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_buffer_jwrite\">set_buffer_jwrite</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_buffer_dirty\">set_buffer_dirty</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wbuf\">wbuf</a>[<a class=\"id\" href=\"#bufs\">bufs</a>++] = <a class=\"id\" href=\"#bh\">bh</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Record it so that we can wait for IO</span>", 
"<span class=\"comment\">                           completion later */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUFFER_TRACE\">BUFFER_TRACE</a>(<a class=\"id\" href=\"#bh\">bh</a>, \"ph3: file as descriptor\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_file_buffer\">jbd2_journal_file_buffer</a>(<a class=\"id\" href=\"#descriptor\">descriptor</a>, <a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BJ_LogCtl\">BJ_LogCtl</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Where is the buffer to be written? */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#jbd2_journal_next_log_block\">jbd2_journal_next_log_block</a>(<a class=\"id\" href=\"#journal\">journal</a>, &amp;<a class=\"id\" href=\"#blocknr\">blocknr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If the block mapping failed, just abandon the buffer</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   and repeat this loop: we'll fall into the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   refile-on-abort condition above. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_abort\">jbd2_journal_abort</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * start_this_handle() uses t_outstanding_credits to determine</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the free space in the log, but this counter is changed</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * by jbd2_journal_next_log_block() also.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_dec\">atomic_dec</a>(&amp;<a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>-><a class=\"id\" href=\"#t_outstanding_credits\">t_outstanding_credits</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Bump b_count to prevent truncate from stumbling over</span>", 
"<span class=\"comment\">                   the shadowed buffer!  @@@ This can go if we ever get</span>", 
"<span class=\"comment\">                   rid of the BJ_IO/BJ_Shadow pairing of buffers. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#jh2bh\">jh2bh</a>(<a class=\"id\" href=\"#jh\">jh</a>)-><a class=\"id\" href=\"#b_count\">b_count</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Make a temporary IO buffer with which to write it out</span>", 
"<span class=\"comment\">                   (this will requeue both the metadata buffer and the</span>", 
"<span class=\"comment\">                   temporary IO buffer). new_bh goes on BJ_IO*/</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#BH_JWrite\">BH_JWrite</a>, &amp;<a class=\"id\" href=\"#jh2bh\">jh2bh</a>(<a class=\"id\" href=\"#jh\">jh</a>)-><a class=\"id\" href=\"#b_state\">b_state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * akpm: jbd2_journal_write_metadata_buffer() sets</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * new_bh-&gt;b_transaction to commit_transaction.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We need to clean this up before we release new_bh</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * (which is of type BJ_IO)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#JBUFFER_TRACE\">JBUFFER_TRACE</a>(<a class=\"id\" href=\"#jh\">jh</a>, \"ph3: write metadata\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#jbd2_journal_write_metadata_buffer\">jbd2_journal_write_metadata_buffer</a>(<a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#jh\">jh</a>, &amp;<a class=\"id\" href=\"#new_jh\">new_jh</a>, <a class=\"id\" href=\"#blocknr\">blocknr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_abort\">jbd2_journal_abort</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#BH_JWrite\">BH_JWrite</a>, &amp;<a class=\"id\" href=\"#jh2bh\">jh2bh</a>(<a class=\"id\" href=\"#new_jh\">new_jh</a>)-><a class=\"id\" href=\"#b_state\">b_state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wbuf\">wbuf</a>[<a class=\"id\" href=\"#bufs\">bufs</a>++] = <a class=\"id\" href=\"#jh2bh\">jh2bh</a>(<a class=\"id\" href=\"#new_jh\">new_jh</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Record the new block's tag in the current descriptor</span>", 
"<span class=\"comment\">                   buffer */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tag_flag\">tag_flag</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tag_flag\">tag_flag</a> |= <a class=\"id\" href=\"#JBD2_FLAG_ESCAPE\">JBD2_FLAG_ESCAPE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#first_tag\">first_tag</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tag_flag\">tag_flag</a> |= <a class=\"id\" href=\"#JBD2_FLAG_SAME_UUID\">JBD2_FLAG_SAME_UUID</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tag\">tag</a> = (<a class=\"id\" href=\"#journal_block_tag_t\">journal_block_tag_t</a> *) <a class=\"id\" href=\"#tagp\">tagp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_tag_block\">write_tag_block</a>(<a class=\"id\" href=\"#tag_bytes\">tag_bytes</a>, <a class=\"id\" href=\"#tag\">tag</a>, <a class=\"id\" href=\"#jh2bh\">jh2bh</a>(<a class=\"id\" href=\"#jh\">jh</a>)-><a class=\"id\" href=\"#b_blocknr\">b_blocknr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tag\">tag</a>-><a class=\"id\" href=\"#t_flags\">t_flags</a> = <a class=\"id\" href=\"#cpu_to_be32\">cpu_to_be32</a>(<a class=\"id\" href=\"#tag_flag\">tag_flag</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tagp\">tagp</a> += <a class=\"id\" href=\"#tag_bytes\">tag_bytes</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#space_left\">space_left</a> -= <a class=\"id\" href=\"#tag_bytes\">tag_bytes</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#first_tag\">first_tag</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a> (<a class=\"id\" href=\"#tagp\">tagp</a>, <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_uuid\">j_uuid</a>, 16);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tagp\">tagp</a> += 16;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#space_left\">space_left</a> -= 16;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#first_tag\">first_tag</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If there's no more to do, or if the descriptor is full,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   let the IO rip! */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#bufs\">bufs</a> == <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_wbufsize\">j_wbufsize</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>-><a class=\"id\" href=\"#t_buffers\">t_buffers</a> == <a class=\"id\" href=\"#NULL\">NULL</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#space_left\">space_left</a> &lt; <a class=\"id\" href=\"#tag_bytes\">tag_bytes</a> + 16) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(4, \"JBD: Submit %d IOs\\n\", <a class=\"id\" href=\"#bufs\">bufs</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Write an end-of-descriptor marker before</span>", 
"<span class=\"comment\">                           submitting the IOs.  \"tag\" still points to</span>", 
"<span class=\"comment\">                           the last tag we set up. */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tag\">tag</a>-><a class=\"id\" href=\"#t_flags\">t_flags</a> |= <a class=\"id\" href=\"#cpu_to_be32\">cpu_to_be32</a>(<a class=\"id\" href=\"#JBD2_FLAG_LAST_TAG\">JBD2_FLAG_LAST_TAG</a>);", 
"", 
"<a class=\"id\" href=\"#start_journal_io\">start_journal_io</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#bufs\">bufs</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#wbuf\">wbuf</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Compute checksum.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#JBD2_HAS_COMPAT_FEATURE\">JBD2_HAS_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#journal\">journal</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#JBD2_FEATURE_COMPAT_CHECKSUM\">JBD2_FEATURE_COMPAT_CHECKSUM</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crc32_sum\">crc32_sum</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#jbd2_checksum_data\">jbd2_checksum_data</a>(<a class=\"id\" href=\"#crc32_sum\">crc32_sum</a>, <a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lock_buffer\">lock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_buffer_dirty\">clear_buffer_dirty</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_buffer_uptodate\">set_buffer_uptodate</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_end_io\">b_end_io</a> = <a class=\"id\" href=\"#journal_end_buffer_io_sync\">journal_end_buffer_io_sync</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#submit_bh\">submit_bh</a>(<a class=\"id\" href=\"#write_op\">write_op</a>, <a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cond_resched\">cond_resched</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#run\">run</a>.<a class=\"id\" href=\"#rs_blocks_logged\">rs_blocks_logged</a> += <a class=\"id\" href=\"#bufs\">bufs</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Force a new descriptor to be generated next</span>", 
"<span class=\"comment\">                           time round the loop. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#descriptor\">descriptor</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bufs\">bufs</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* </span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the journal is not located on the file system device,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * then we must flush the file system device before we issue</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the commit record</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>-><a class=\"id\" href=\"#t_flushed_data_blocks\">t_flushed_data_blocks</a> &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_fs_dev\">j_fs_dev</a> != <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_dev\">j_dev</a>) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_flags\">j_flags</a> &amp; <a class=\"id\" href=\"#JBD2_BARRIER\">JBD2_BARRIER</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blkdev_issue_flush\">blkdev_issue_flush</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_fs_dev\">j_fs_dev</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BLKDEV_IFL_WAIT\">BLKDEV_IFL_WAIT</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Done it all: now write the commit record asynchronously. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#JBD2_HAS_INCOMPAT_FEATURE\">JBD2_HAS_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#journal\">journal</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#JBD2_FEATURE_INCOMPAT_ASYNC_COMMIT\">JBD2_FEATURE_INCOMPAT_ASYNC_COMMIT</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#journal_submit_commit_record\">journal_submit_commit_record</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> &amp;<a class=\"id\" href=\"#cbh\">cbh</a>, <a class=\"id\" href=\"#crc32_sum\">crc32_sum</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__jbd2_journal_abort_hard\">__jbd2_journal_abort_hard</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_flags\">j_flags</a> &amp; <a class=\"id\" href=\"#JBD2_BARRIER\">JBD2_BARRIER</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blkdev_issue_flush\">blkdev_issue_flush</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_dev\">j_dev</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BLKDEV_IFL_WAIT\">BLKDEV_IFL_WAIT</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#journal_finish_inode_data_buffers\">journal_finish_inode_data_buffers</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#commit_transaction\">commit_transaction</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>", 
];
xr_frag_insert('l/8b/a686951e85b5a15d2e0c5d15f4d067f5200c76.xr', __xr_tmp);
