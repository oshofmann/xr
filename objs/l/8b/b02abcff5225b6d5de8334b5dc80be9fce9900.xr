var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * SELinux NetLabel Support</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file provides the necessary glue to tie NetLabel into the SELinux</span>", 
"<span class=\"comment\"> * subsystem.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Author: Paul Moore &lt;paul.moore@hp.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * (c) Copyright Hewlett-Packard Development Company, L.P., 2007, 2008</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software;  you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> * it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> * the Free Software Foundation; either version 2 of the License, or</span>", 
"<span class=\"comment\"> * (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\"> * but WITHOUT ANY WARRANTY;  without even the implied warranty of</span>", 
"<span class=\"comment\"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See</span>", 
"<span class=\"comment\"> * the GNU General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\"> * along with this program;  if not, write to the Free Software</span>", 
"<span class=\"comment\"> * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rcupdate\">rcupdate</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#gfp\">gfp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ip\">ip</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#sock\">sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#netlabel\">netlabel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip\">ip</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"objsec.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"security.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"netlabel.h\"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * selinux_netlbl_sidlookup_cached - Cache a SID lookup</span>", 
"<span class=\"comment\"> * @skb: the packet</span>", 
"<span class=\"comment\"> * @secattr: the NetLabel security attributes</span>", 
"<span class=\"comment\"> * @sid: the SID</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * Query the SELinux security server to lookup the correct SID for the given</span>", 
"<span class=\"comment\"> * security attributes.  If the query is successful, cache the result to speed</span>", 
"<span class=\"comment\"> * up future lookups.  Returns zero on success, negative values on failure.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#selinux_netlbl_sidlookup_cached\">selinux_netlbl_sidlookup_cached</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#netlbl_lsm_secattr\">netlbl_lsm_secattr</a> *<a class=\"id\" href=\"#secattr\">secattr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#sid\">sid</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#security_netlbl_secattr_to_sid\">security_netlbl_secattr_to_sid</a>(<a class=\"id\" href=\"#secattr\">secattr</a>, <a class=\"id\" href=\"#sid\">sid</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> == 0 &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#secattr\">secattr</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#NETLBL_SECATTR_CACHEABLE\">NETLBL_SECATTR_CACHEABLE</a>) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#secattr\">secattr</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#NETLBL_SECATTR_CACHE\">NETLBL_SECATTR_CACHE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netlbl_cache_add\">netlbl_cache_add</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#secattr\">secattr</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * selinux_netlbl_sock_genattr - Generate the NetLabel socket secattr</span>", 
"<span class=\"comment\"> * @sk: the socket</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * Generate the NetLabel security attributes for a socket, making full use of</span>", 
"<span class=\"comment\"> * the socket's attribute cache.  Returns a pointer to the security attributes</span>", 
"<span class=\"comment\"> * on success, NULL on failure.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#netlbl_lsm_secattr\">netlbl_lsm_secattr</a> *<a class=\"id\" href=\"#selinux_netlbl_sock_genattr\">selinux_netlbl_sock_genattr</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_security_struct\">sk_security_struct</a> *<a class=\"id\" href=\"#sksec\">sksec</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_security\">sk_security</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlbl_lsm_secattr\">netlbl_lsm_secattr</a> *<a class=\"id\" href=\"#secattr\">secattr</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#nlbl_secattr\">nlbl_secattr</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#nlbl_secattr\">nlbl_secattr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#secattr\">secattr</a> = <a class=\"id\" href=\"#netlbl_secattr_alloc\">netlbl_secattr_alloc</a>(<a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#secattr\">secattr</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#security_netlbl_sid_to_secattr\">security_netlbl_sid_to_secattr</a>(<a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#secattr\">secattr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> != 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netlbl_secattr_free\">netlbl_secattr_free</a>(<a class=\"id\" href=\"#secattr\">secattr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#nlbl_secattr\">nlbl_secattr</a> = <a class=\"id\" href=\"#secattr\">secattr</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#secattr\">secattr</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * selinux_netlbl_cache_invalidate - Invalidate the NetLabel cache</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * Invalidate the NetLabel security attribute mapping cache.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#selinux_netlbl_cache_invalidate\">selinux_netlbl_cache_invalidate</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netlbl_cache_invalidate\">netlbl_cache_invalidate</a>();", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * selinux_netlbl_err - Handle a NetLabel packet error</span>", 
"<span class=\"comment\"> * @skb: the packet</span>", 
"<span class=\"comment\"> * @error: the error code</span>", 
"<span class=\"comment\"> * @gateway: true if host is acting as a gateway, false otherwise</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * When a packet is dropped due to a call to avc_has_perm() pass the error</span>", 
"<span class=\"comment\"> * code to the NetLabel subsystem so any protocol specific processing can be</span>", 
"<span class=\"comment\"> * done.  This is safe to call even if you are unsure if NetLabel labeling is</span>", 
"<span class=\"comment\"> * present on the packet, NetLabel is smart enough to only act when it should.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#selinux_netlbl_err\">selinux_netlbl_err</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#error\">error</a>, int <a class=\"id\" href=\"#gateway\">gateway</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netlbl_skbuff_err\">netlbl_skbuff_err</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#error\">error</a>, <a class=\"id\" href=\"#gateway\">gateway</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * selinux_netlbl_sk_security_free - Free the NetLabel fields</span>", 
"<span class=\"comment\"> * @sksec: the sk_security_struct</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * Free all of the memory in the NetLabel fields of a sk_security_struct.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#selinux_netlbl_sk_security_free\">selinux_netlbl_sk_security_free</a>(struct <a class=\"id\" href=\"#sk_security_struct\">sk_security_struct</a> *<a class=\"id\" href=\"#sksec\">sksec</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#nlbl_secattr\">nlbl_secattr</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netlbl_secattr_free\">netlbl_secattr_free</a>(<a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#nlbl_secattr\">nlbl_secattr</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * selinux_netlbl_sk_security_reset - Reset the NetLabel fields</span>", 
"<span class=\"comment\"> * @sksec: the sk_security_struct</span>", 
"<span class=\"comment\"> * @family: the socket family</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * Called when the NetLabel state of a sk_security_struct needs to be reset.</span>", 
"<span class=\"comment\"> * The caller is responsibile for all the NetLabel sk_security_struct locking.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#selinux_netlbl_sk_security_reset\">selinux_netlbl_sk_security_reset</a>(struct <a class=\"id\" href=\"#sk_security_struct\">sk_security_struct</a> *<a class=\"id\" href=\"#sksec\">sksec</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#nlbl_state\">nlbl_state</a> = <a class=\"id\" href=\"#NLBL_UNSET\">NLBL_UNSET</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * selinux_netlbl_skbuff_getsid - Get the sid of a packet using NetLabel</span>", 
"<span class=\"comment\"> * @skb: the packet</span>", 
"<span class=\"comment\"> * @family: protocol family</span>", 
"<span class=\"comment\"> * @type: NetLabel labeling protocol type</span>", 
"<span class=\"comment\"> * @sid: the SID</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * Call the NetLabel mechanism to get the security attributes of the given</span>", 
"<span class=\"comment\"> * packet and use those attributes to determine the correct context/SID to</span>", 
"<span class=\"comment\"> * assign to the packet.  Returns zero on success, negative values on failure.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#selinux_netlbl_skbuff_getsid\">selinux_netlbl_skbuff_getsid</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#family\">family</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#sid\">sid</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlbl_lsm_secattr\">netlbl_lsm_secattr</a> <a class=\"id\" href=\"#secattr\">secattr</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#netlbl_enabled\">netlbl_enabled</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#SECSID_NULL\">SECSID_NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netlbl_secattr_init\">netlbl_secattr_init</a>(&amp;<a class=\"id\" href=\"#secattr\">secattr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#netlbl_skbuff_getattr\">netlbl_skbuff_getattr</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#family\">family</a>, &amp;<a class=\"id\" href=\"#secattr\">secattr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> == 0 && <a class=\"id\" href=\"#secattr\">secattr</a>.<a class=\"id\" href=\"#flags\">flags</a> != <a class=\"id\" href=\"#NETLBL_SECATTR_NONE\">NETLBL_SECATTR_NONE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#selinux_netlbl_sidlookup_cached\">selinux_netlbl_sidlookup_cached</a>(<a class=\"id\" href=\"#skb\">skb</a>, &amp;<a class=\"id\" href=\"#secattr\">secattr</a>, <a class=\"id\" href=\"#sid\">sid</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#sid\">sid</a> = <a class=\"id\" href=\"#SECSID_NULL\">SECSID_NULL</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#secattr\">secattr</a>.<a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netlbl_secattr_destroy\">netlbl_secattr_destroy</a>(&amp;<a class=\"id\" href=\"#secattr\">secattr</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * selinux_netlbl_skbuff_setsid - Set the NetLabel on a packet given a sid</span>", 
"<span class=\"comment\"> * @skb: the packet</span>", 
"<span class=\"comment\"> * @family: protocol family</span>", 
"<span class=\"comment\"> * @sid: the SID</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description</span>", 
"<span class=\"comment\"> * Call the NetLabel mechanism to set the label of a packet using @sid.</span>", 
"<span class=\"comment\"> * Returns zero on success, negative values on failure.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#selinux_netlbl_skbuff_setsid\">selinux_netlbl_skbuff_setsid</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#family\">family</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#sid\">sid</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlbl_lsm_secattr\">netlbl_lsm_secattr</a> <a class=\"id\" href=\"#secattr_storage\">secattr_storage</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlbl_lsm_secattr\">netlbl_lsm_secattr</a> *<a class=\"id\" href=\"#secattr\">secattr</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* if this is a locally generated packet check to see if it is already</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * being labeled by it's parent socket, if it is just exit */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_security_struct\">sk_security_struct</a> *<a class=\"id\" href=\"#sksec\">sksec</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_security\">sk_security</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#nlbl_state\">nlbl_state</a> != <a class=\"id\" href=\"#NLBL_REQSKB\">NLBL_REQSKB</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#secattr\">secattr</a> = <a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#nlbl_secattr\">nlbl_secattr</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#secattr\">secattr</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#secattr\">secattr</a> = &amp;<a class=\"id\" href=\"#secattr_storage\">secattr_storage</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netlbl_secattr_init\">netlbl_secattr_init</a>(<a class=\"id\" href=\"#secattr\">secattr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#security_netlbl_sid_to_secattr\">security_netlbl_sid_to_secattr</a>(<a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#secattr\">secattr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#skbuff_setsid_return\">skbuff_setsid_return</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#netlbl_skbuff_setattr\">netlbl_skbuff_setattr</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#family\">family</a>, <a class=\"id\" href=\"#secattr\">secattr</a>);", 
"", 
"<a class=\"id\" href=\"#skbuff_setsid_return\">skbuff_setsid_return</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#secattr\">secattr</a> == &amp;<a class=\"id\" href=\"#secattr_storage\">secattr_storage</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netlbl_secattr_destroy\">netlbl_secattr_destroy</a>(<a class=\"id\" href=\"#secattr\">secattr</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * selinux_netlbl_inet_conn_request - Label an incoming stream connection</span>", 
"<span class=\"comment\"> * @req: incoming connection request socket</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * A new incoming connection request is represented by @req, we need to label</span>", 
"<span class=\"comment\"> * the new request_sock here and the stack will ensure the on-the-wire label</span>", 
"<span class=\"comment\"> * will get preserved when a full sock is created once the connection handshake</span>", 
"<span class=\"comment\"> * is complete.  Returns zero on success, negative values on failure.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#selinux_netlbl_inet_conn_request\">selinux_netlbl_inet_conn_request</a>(struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#family\">family</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlbl_lsm_secattr\">netlbl_lsm_secattr</a> <a class=\"id\" href=\"#secattr\">secattr</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#family\">family</a> != <a class=\"id\" href=\"#PF_INET\">PF_INET</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netlbl_secattr_init\">netlbl_secattr_init</a>(&amp;<a class=\"id\" href=\"#secattr\">secattr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#security_netlbl_sid_to_secattr\">security_netlbl_sid_to_secattr</a>(<a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#secid\">secid</a>, &amp;<a class=\"id\" href=\"#secattr\">secattr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#inet_conn_request_return\">inet_conn_request_return</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#netlbl_req_setattr\">netlbl_req_setattr</a>(<a class=\"id\" href=\"#req\">req</a>, &amp;<a class=\"id\" href=\"#secattr\">secattr</a>);", 
"<a class=\"id\" href=\"#inet_conn_request_return\">inet_conn_request_return</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netlbl_secattr_destroy\">netlbl_secattr_destroy</a>(&amp;<a class=\"id\" href=\"#secattr\">secattr</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * selinux_netlbl_inet_csk_clone - Initialize the newly created sock</span>", 
"<span class=\"comment\"> * @sk: the new sock</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * A new connection has been established using @sk, we've already labeled the</span>", 
"<span class=\"comment\"> * socket via the request_sock struct in selinux_netlbl_inet_conn_request() but</span>", 
"<span class=\"comment\"> * we need to set the NetLabel state here since we now have a sock structure.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#selinux_netlbl_inet_csk_clone\">selinux_netlbl_inet_csk_clone</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#family\">family</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_security_struct\">sk_security_struct</a> *<a class=\"id\" href=\"#sksec\">sksec</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_security\">sk_security</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#family\">family</a> == <a class=\"id\" href=\"#PF_INET\">PF_INET</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#nlbl_state\">nlbl_state</a> = <a class=\"id\" href=\"#NLBL_LABELED\">NLBL_LABELED</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#nlbl_state\">nlbl_state</a> = <a class=\"id\" href=\"#NLBL_UNSET\">NLBL_UNSET</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * selinux_netlbl_socket_post_create - Label a socket using NetLabel</span>", 
"<span class=\"comment\"> * @sock: the socket to label</span>", 
"<span class=\"comment\"> * @family: protocol family</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * Attempt to label a socket using the NetLabel mechanism using the given</span>", 
"<span class=\"comment\"> * SID.  Returns zero values on success, negative values on failure.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#selinux_netlbl_socket_post_create\">selinux_netlbl_socket_post_create</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#family\">family</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_security_struct\">sk_security_struct</a> *<a class=\"id\" href=\"#sksec\">sksec</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_security\">sk_security</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlbl_lsm_secattr\">netlbl_lsm_secattr</a> *<a class=\"id\" href=\"#secattr\">secattr</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#family\">family</a> != <a class=\"id\" href=\"#PF_INET\">PF_INET</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#secattr\">secattr</a> = <a class=\"id\" href=\"#selinux_netlbl_sock_genattr\">selinux_netlbl_sock_genattr</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#secattr\">secattr</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#netlbl_sock_setattr\">netlbl_sock_setattr</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#family\">family</a>, <a class=\"id\" href=\"#secattr\">secattr</a>);", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#rc\">rc</a>) {", 
"<span class=\"ts\"/>case 0:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#nlbl_state\">nlbl_state</a> = <a class=\"id\" href=\"#NLBL_LABELED\">NLBL_LABELED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case -<a class=\"id\" href=\"#EDESTADDRREQ\">EDESTADDRREQ</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#nlbl_state\">nlbl_state</a> = <a class=\"id\" href=\"#NLBL_REQSKB\">NLBL_REQSKB</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * selinux_netlbl_sock_rcv_skb - Do an inbound access check using NetLabel</span>", 
"<span class=\"comment\"> * @sksec: the sock's sk_security_struct</span>", 
"<span class=\"comment\"> * @skb: the packet</span>", 
"<span class=\"comment\"> * @family: protocol family</span>", 
"<span class=\"comment\"> * @ad: the audit data</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * Fetch the NetLabel security attributes from @skb and perform an access check</span>", 
"<span class=\"comment\"> * against the receiving socket.  Returns zero on success, negative values on</span>", 
"<span class=\"comment\"> * error.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#selinux_netlbl_sock_rcv_skb\">selinux_netlbl_sock_rcv_skb</a>(struct <a class=\"id\" href=\"#sk_security_struct\">sk_security_struct</a> *<a class=\"id\" href=\"#sksec\">sksec</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#family\">family</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#common_audit_data\">common_audit_data</a> *<a class=\"id\" href=\"#ad\">ad</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#nlbl_sid\">nlbl_sid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#perm\">perm</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlbl_lsm_secattr\">netlbl_lsm_secattr</a> <a class=\"id\" href=\"#secattr\">secattr</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#netlbl_enabled\">netlbl_enabled</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netlbl_secattr_init\">netlbl_secattr_init</a>(&amp;<a class=\"id\" href=\"#secattr\">secattr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#netlbl_skbuff_getattr\">netlbl_skbuff_getattr</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#family\">family</a>, &amp;<a class=\"id\" href=\"#secattr\">secattr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> == 0 && <a class=\"id\" href=\"#secattr\">secattr</a>.<a class=\"id\" href=\"#flags\">flags</a> != <a class=\"id\" href=\"#NETLBL_SECATTR_NONE\">NETLBL_SECATTR_NONE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#selinux_netlbl_sidlookup_cached\">selinux_netlbl_sidlookup_cached</a>(<a class=\"id\" href=\"#skb\">skb</a>, &amp;<a class=\"id\" href=\"#secattr\">secattr</a>, &amp;<a class=\"id\" href=\"#nlbl_sid\">nlbl_sid</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nlbl_sid\">nlbl_sid</a> = <a class=\"id\" href=\"#SECINITSID_UNLABELED\">SECINITSID_UNLABELED</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netlbl_secattr_destroy\">netlbl_secattr_destroy</a>(&amp;<a class=\"id\" href=\"#secattr\">secattr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sclass\">sclass</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SECCLASS_UDP_SOCKET\">SECCLASS_UDP_SOCKET</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#perm\">perm</a> = <a class=\"id\" href=\"#UDP_SOCKET__RECVFROM\">UDP_SOCKET__RECVFROM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SECCLASS_TCP_SOCKET\">SECCLASS_TCP_SOCKET</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#perm\">perm</a> = <a class=\"id\" href=\"#TCP_SOCKET__RECVFROM\">TCP_SOCKET__RECVFROM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#perm\">perm</a> = <a class=\"id\" href=\"#RAWIP_SOCKET__RECVFROM\">RAWIP_SOCKET__RECVFROM</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#avc_has_perm\">avc_has_perm</a>(<a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sid\">sid</a>, <a class=\"id\" href=\"#nlbl_sid\">nlbl_sid</a>, <a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#sclass\">sclass</a>, <a class=\"id\" href=\"#perm\">perm</a>, <a class=\"id\" href=\"#ad\">ad</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nlbl_sid\">nlbl_sid</a> != <a class=\"id\" href=\"#SECINITSID_UNLABELED\">SECINITSID_UNLABELED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netlbl_skbuff_err\">netlbl_skbuff_err</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#rc\">rc</a>, 0);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * selinux_netlbl_socket_setsockopt - Do not allow users to remove a NetLabel</span>", 
"<span class=\"comment\"> * @sock: the socket</span>", 
"<span class=\"comment\"> * @level: the socket level or protocol</span>", 
"<span class=\"comment\"> * @optname: the socket option name</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * Check the setsockopt() call and if the user is trying to replace the IP</span>", 
"<span class=\"comment\"> * options on a socket and a NetLabel is in place for the socket deny the</span>", 
"<span class=\"comment\"> * access; otherwise allow the access.  Returns zero when the access is</span>", 
"<span class=\"comment\"> * allowed, -EACCES when denied, and other negative values on error.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#selinux_netlbl_socket_setsockopt\">selinux_netlbl_socket_setsockopt</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     int <a class=\"id\" href=\"#level\">level</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     int <a class=\"id\" href=\"#optname\">optname</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_security_struct\">sk_security_struct</a> *<a class=\"id\" href=\"#sksec\">sksec</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_security\">sk_security</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlbl_lsm_secattr\">netlbl_lsm_secattr</a> <a class=\"id\" href=\"#secattr\">secattr</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#level\">level</a> == <a class=\"id\" href=\"#IPPROTO_IP\">IPPROTO_IP</a> && <a class=\"id\" href=\"#optname\">optname</a> == <a class=\"id\" href=\"#IP_OPTIONS\">IP_OPTIONS</a> &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#nlbl_state\">nlbl_state</a> == <a class=\"id\" href=\"#NLBL_LABELED\">NLBL_LABELED</a> ||", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#nlbl_state\">nlbl_state</a> == <a class=\"id\" href=\"#NLBL_CONNLABELED\">NLBL_CONNLABELED</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netlbl_secattr_init\">netlbl_secattr_init</a>(&amp;<a class=\"id\" href=\"#secattr\">secattr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lock_sock\">lock_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#netlbl_sock_getattr\">netlbl_sock_getattr</a>(<a class=\"id\" href=\"#sk\">sk</a>, &amp;<a class=\"id\" href=\"#secattr\">secattr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#release_sock\">release_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#rc\">rc</a> == -<a class=\"id\" href=\"#ENOMSG\">ENOMSG</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netlbl_secattr_destroy\">netlbl_secattr_destroy</a>(&amp;<a class=\"id\" href=\"#secattr\">secattr</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * selinux_netlbl_socket_connect - Label a client-side socket on connect</span>", 
"<span class=\"comment\"> * @sk: the socket to label</span>", 
"<span class=\"comment\"> * @addr: the destination address</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * Attempt to label a connected socket with NetLabel using the given address.</span>", 
"<span class=\"comment\"> * Returns zero values on success, negative values on failure.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#selinux_netlbl_socket_connect\">selinux_netlbl_socket_connect</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *<a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_security_struct\">sk_security_struct</a> *<a class=\"id\" href=\"#sksec\">sksec</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_security\">sk_security</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlbl_lsm_secattr\">netlbl_lsm_secattr</a> *<a class=\"id\" href=\"#secattr\">secattr</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#nlbl_state\">nlbl_state</a> != <a class=\"id\" href=\"#NLBL_REQSKB\">NLBL_REQSKB</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#nlbl_state\">nlbl_state</a> != <a class=\"id\" href=\"#NLBL_CONNLABELED\">NLBL_CONNLABELED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_bh_disable\">local_bh_disable</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh_lock_sock_nested\">bh_lock_sock_nested</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* connected sockets are allowed to disconnect when the address family</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * is set to AF_UNSPEC, if that is what is happening we want to reset</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the socket */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#sa_family\">sa_family</a> == <a class=\"id\" href=\"#AF_UNSPEC\">AF_UNSPEC</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netlbl_sock_delattr\">netlbl_sock_delattr</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#nlbl_state\">nlbl_state</a> = <a class=\"id\" href=\"#NLBL_REQSKB\">NLBL_REQSKB</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#socket_connect_return\">socket_connect_return</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#secattr\">secattr</a> = <a class=\"id\" href=\"#selinux_netlbl_sock_genattr\">selinux_netlbl_sock_genattr</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#secattr\">secattr</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#socket_connect_return\">socket_connect_return</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#netlbl_conn_setattr\">netlbl_conn_setattr</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#secattr\">secattr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sksec\">sksec</a>-><a class=\"id\" href=\"#nlbl_state\">nlbl_state</a> = <a class=\"id\" href=\"#NLBL_CONNLABELED\">NLBL_CONNLABELED</a>;", 
"", 
"<a class=\"id\" href=\"#socket_connect_return\">socket_connect_return</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh_unlock_sock\">bh_unlock_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_bh_enable\">local_bh_enable</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
];
xr_frag_insert('l/8b/b02abcff5225b6d5de8334b5dc80be9fce9900.xr', __xr_tmp);
