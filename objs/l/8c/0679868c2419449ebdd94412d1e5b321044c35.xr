var __xr_tmp = [
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tracepoint_entry\">tracepoint_entry</a> *<a class=\"id\" href=\"#e\">e</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#name_len\">name_len</a> = <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#name\">name</a>) + 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#jhash\">jhash</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#name_len\">name_len</a>-1, 0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = &amp;<a class=\"id\" href=\"#tracepoint_table\">tracepoint_table</a>[<a class=\"id\" href=\"#hash\">hash</a> &amp; (<a class=\"id\" href=\"#TRACEPOINT_TABLE_SIZE\">TRACEPOINT_TABLE_SIZE</a> - 1)];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_for_each_entry\">hlist_for_each_entry</a>(<a class=\"id\" href=\"#e\">e</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#head\">head</a>, <a class=\"id\" href=\"#hlist\">hlist</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#name\">name</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"tracepoint %s busy\\n\", <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EEXIST\">EEXIST</a>);<span class=\"ts\"/><span class=\"comment\">/* Already there */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Using kmalloc here to allocate a variable length element. Could</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * cause some memory fragmentation if overused.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(struct <a class=\"id\" href=\"#tracepoint_entry\">tracepoint_entry</a>) + <a class=\"id\" href=\"#name_len\">name_len</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#e\">e</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#name\">name</a>[0], <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#name_len\">name_len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#funcs\">funcs</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#refcount\">refcount</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_add_head\">hlist_add_head</a>(&amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#hlist\">hlist</a>, <a class=\"id\" href=\"#head\">head</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#e\">e</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Remove the tracepoint from the tracepoint hash table. Must be called with</span>", 
"<span class=\"comment\"> * mutex_lock held.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#remove_tracepoint\">remove_tracepoint</a>(struct <a class=\"id\" href=\"#tracepoint_entry\">tracepoint_entry</a> *<a class=\"id\" href=\"#e\">e</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_del\">hlist_del</a>(&amp;<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#hlist\">hlist</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#e\">e</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Sets the probe callback corresponding to one tracepoint.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#set_tracepoint\">set_tracepoint</a>(struct <a class=\"id\" href=\"#tracepoint_entry\">tracepoint_entry</a> **<a class=\"id\" href=\"#entry\">entry</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tracepoint\">tracepoint</a> *<a class=\"id\" href=\"#elem\">elem</a>, int <a class=\"id\" href=\"#active\">active</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#strcmp\">strcmp</a>((*<a class=\"id\" href=\"#entry\">entry</a>)-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#elem\">elem</a>-><a class=\"id\" href=\"#name\">name</a>) != 0);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#elem\">elem</a>-><a class=\"id\" href=\"#regfunc\">regfunc</a> && !<a class=\"id\" href=\"#elem\">elem</a>-><a class=\"id\" href=\"#state\">state</a> && <a class=\"id\" href=\"#active\">active</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#elem\">elem</a>-><a class=\"id\" href=\"#regfunc\">regfunc</a>();", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#elem\">elem</a>-><a class=\"id\" href=\"#unregfunc\">unregfunc</a> && <a class=\"id\" href=\"#elem\">elem</a>-><a class=\"id\" href=\"#state\">state</a> && !<a class=\"id\" href=\"#active\">active</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#elem\">elem</a>-><a class=\"id\" href=\"#unregfunc\">unregfunc</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * rcu_assign_pointer has a smp_wmb() which makes sure that the new</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * probe callbacks array is consistent before setting a pointer to it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This array is referenced by __DO_TRACE from</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * include/linux/tracepoints.h. A matching smp_read_barrier_depends()</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * is used.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_assign_pointer\">rcu_assign_pointer</a>(<a class=\"id\" href=\"#elem\">elem</a>-><a class=\"id\" href=\"#funcs\">funcs</a>, (*<a class=\"id\" href=\"#entry\">entry</a>)-><a class=\"id\" href=\"#funcs\">funcs</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elem\">elem</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#active\">active</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Disable a tracepoint and its probe callback.</span>", 
"<span class=\"comment\"> * Note: only waiting an RCU period after setting elem-&gt;call to the empty</span>", 
"<span class=\"comment\"> * function insures that the original callback is not used anymore. This insured</span>", 
"<span class=\"comment\"> * by preempt_disable around the call site.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#disable_tracepoint\">disable_tracepoint</a>(struct <a class=\"id\" href=\"#tracepoint\">tracepoint</a> *<a class=\"id\" href=\"#elem\">elem</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#elem\">elem</a>-><a class=\"id\" href=\"#unregfunc\">unregfunc</a> && <a class=\"id\" href=\"#elem\">elem</a>-><a class=\"id\" href=\"#state\">state</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#elem\">elem</a>-><a class=\"id\" href=\"#unregfunc\">unregfunc</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elem\">elem</a>-><a class=\"id\" href=\"#state\">state</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_assign_pointer\">rcu_assign_pointer</a>(<a class=\"id\" href=\"#elem\">elem</a>-><a class=\"id\" href=\"#funcs\">funcs</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tracepoint_update_probe_range - Update a probe range</span>", 
"<span class=\"comment\"> * @begin: beginning of the range</span>", 
"<span class=\"comment\"> * @end: end of the range</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Updates the probe callback corresponding to a range of tracepoints.</span>", 
"<span class=\"comment\"> */</span>", 
"void", 
"<a class=\"id\" href=\"#tracepoint_update_probe_range\">tracepoint_update_probe_range</a>(struct <a class=\"id\" href=\"#tracepoint\">tracepoint</a> *<a class=\"id\" href=\"#begin\">begin</a>, struct <a class=\"id\" href=\"#tracepoint\">tracepoint</a> *<a class=\"id\" href=\"#end\">end</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tracepoint\">tracepoint</a> *<a class=\"id\" href=\"#iter\">iter</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tracepoint_entry\">tracepoint_entry</a> *<a class=\"id\" href=\"#mark_entry\">mark_entry</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#begin\">begin</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#tracepoints_mutex\">tracepoints_mutex</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#iter\">iter</a> = <a class=\"id\" href=\"#begin\">begin</a>; <a class=\"id\" href=\"#iter\">iter</a> &lt; <a class=\"id\" href=\"#end\">end</a>; <a class=\"id\" href=\"#iter\">iter</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mark_entry\">mark_entry</a> = <a class=\"id\" href=\"#get_tracepoint\">get_tracepoint</a>(<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mark_entry\">mark_entry</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_tracepoint\">set_tracepoint</a>(&amp;<a class=\"id\" href=\"#mark_entry\">mark_entry</a>, <a class=\"id\" href=\"#iter\">iter</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>!!<a class=\"id\" href=\"#mark_entry\">mark_entry</a>-><a class=\"id\" href=\"#refcount\">refcount</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#disable_tracepoint\">disable_tracepoint</a>(<a class=\"id\" href=\"#iter\">iter</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tracepoints_mutex\">tracepoints_mutex</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Update probes, removing the faulty probes.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#tracepoint_update_probes\">tracepoint_update_probes</a>(void)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Core kernel tracepoints */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tracepoint_update_probe_range\">tracepoint_update_probe_range</a>(<a class=\"id\" href=\"#__start___tracepoints\">__start___tracepoints</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__stop___tracepoints\">__stop___tracepoints</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* tracepoints in modules. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#module_update_tracepoints\">module_update_tracepoints</a>();", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#tracepoint_func\">tracepoint_func</a> *", 
"<a class=\"id\" href=\"#tracepoint_add_probe\">tracepoint_add_probe</a>(const char *<a class=\"id\" href=\"#name\">name</a>, void *<a class=\"id\" href=\"#probe\">probe</a>, void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tracepoint_entry\">tracepoint_entry</a> *<a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tracepoint_func\">tracepoint_func</a> *<a class=\"id\" href=\"#old\">old</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#get_tracepoint\">get_tracepoint</a>(<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#entry\">entry</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#add_tracepoint\">add_tracepoint</a>(<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#entry\">entry</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return (struct <a class=\"id\" href=\"#tracepoint_func\">tracepoint_func</a> *)<a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old\">old</a> = <a class=\"id\" href=\"#tracepoint_entry_add_probe\">tracepoint_entry_add_probe</a>(<a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#probe\">probe</a>, <a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#old\">old</a>) && !<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#refcount\">refcount</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#remove_tracepoint\">remove_tracepoint</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#old\">old</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tracepoint_probe_register -  Connect a probe to a tracepoint</span>", 
"<span class=\"comment\"> * @name: tracepoint name</span>", 
"<span class=\"comment\"> * @probe: probe handler</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 if ok, error value on error.</span>", 
"<span class=\"comment\"> * The probe address must at least be aligned on the architecture pointer size.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#tracepoint_probe_register\">tracepoint_probe_register</a>(const char *<a class=\"id\" href=\"#name\">name</a>, void *<a class=\"id\" href=\"#probe\">probe</a>, void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tracepoint_func\">tracepoint_func</a> *<a class=\"id\" href=\"#old\">old</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#tracepoints_mutex\">tracepoints_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old\">old</a> = <a class=\"id\" href=\"#tracepoint_add_probe\">tracepoint_add_probe</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#probe\">probe</a>, <a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tracepoints_mutex\">tracepoints_mutex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#old\">old</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#old\">old</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tracepoint_update_probes\">tracepoint_update_probes</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* may update entry */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_probes\">release_probes</a>(<a class=\"id\" href=\"#old\">old</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#tracepoint_probe_register\">tracepoint_probe_register</a>);", 
"", 
"static struct <a class=\"id\" href=\"#tracepoint_func\">tracepoint_func</a> *", 
"<a class=\"id\" href=\"#tracepoint_remove_probe\">tracepoint_remove_probe</a>(const char *<a class=\"id\" href=\"#name\">name</a>, void *<a class=\"id\" href=\"#probe\">probe</a>, void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tracepoint_entry\">tracepoint_entry</a> *<a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tracepoint_func\">tracepoint_func</a> *<a class=\"id\" href=\"#old\">old</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#get_tracepoint\">get_tracepoint</a>(<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#entry\">entry</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOENT\">ENOENT</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old\">old</a> = <a class=\"id\" href=\"#tracepoint_entry_remove_probe\">tracepoint_entry_remove_probe</a>(<a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#probe\">probe</a>, <a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#old\">old</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#old\">old</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#refcount\">refcount</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#remove_tracepoint\">remove_tracepoint</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#old\">old</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tracepoint_probe_unregister -  Disconnect a probe from a tracepoint</span>", 
"<span class=\"comment\"> * @name: tracepoint name</span>", 
"<span class=\"comment\"> * @probe: probe function pointer</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We do not need to call a synchronize_sched to make sure the probes have</span>", 
"<span class=\"comment\"> * finished running before doing a module unload, because the module unload</span>", 
"<span class=\"comment\"> * itself uses stop_machine(), which insures that every preempt disabled section</span>", 
"<span class=\"comment\"> * have finished.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#tracepoint_probe_unregister\">tracepoint_probe_unregister</a>(const char *<a class=\"id\" href=\"#name\">name</a>, void *<a class=\"id\" href=\"#probe\">probe</a>, void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tracepoint_func\">tracepoint_func</a> *<a class=\"id\" href=\"#old\">old</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#tracepoints_mutex\">tracepoints_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old\">old</a> = <a class=\"id\" href=\"#tracepoint_remove_probe\">tracepoint_remove_probe</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#probe\">probe</a>, <a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tracepoints_mutex\">tracepoints_mutex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#old\">old</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#old\">old</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tracepoint_update_probes\">tracepoint_update_probes</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* may update entry */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_probes\">release_probes</a>(<a class=\"id\" href=\"#old\">old</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#tracepoint_probe_unregister\">tracepoint_probe_unregister</a>);", 
"", 
"static <a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#old_probes\">old_probes</a>);", 
"static int <a class=\"id\" href=\"#need_update\">need_update</a>;", 
"", 
"static void <a class=\"id\" href=\"#tracepoint_add_old_probes\">tracepoint_add_old_probes</a>(void *<a class=\"id\" href=\"#old\">old</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#need_update\">need_update</a> = 1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#old\">old</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tp_probes\">tp_probes</a> *<a class=\"id\" href=\"#tp_probes\">tp_probes</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#old\">old</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tp_probes\">tp_probes</a>, <a class=\"id\" href=\"#probes\">probes</a>[0]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#tp_probes\">tp_probes</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#old_probes\">old_probes</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tracepoint_probe_register_noupdate -  register a probe but not connect</span>", 
"<span class=\"comment\"> * @name: tracepoint name</span>", 
"<span class=\"comment\"> * @probe: probe handler</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * caller must call tracepoint_probe_update_all()</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#tracepoint_probe_register_noupdate\">tracepoint_probe_register_noupdate</a>(const char *<a class=\"id\" href=\"#name\">name</a>, void *<a class=\"id\" href=\"#probe\">probe</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tracepoint_func\">tracepoint_func</a> *<a class=\"id\" href=\"#old\">old</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#tracepoints_mutex\">tracepoints_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old\">old</a> = <a class=\"id\" href=\"#tracepoint_add_probe\">tracepoint_add_probe</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#probe\">probe</a>, <a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#old\">old</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tracepoints_mutex\">tracepoints_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#old\">old</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tracepoint_add_old_probes\">tracepoint_add_old_probes</a>(<a class=\"id\" href=\"#old\">old</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tracepoints_mutex\">tracepoints_mutex</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#tracepoint_probe_register_noupdate\">tracepoint_probe_register_noupdate</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tracepoint_probe_unregister_noupdate -  remove a probe but not disconnect</span>", 
"<span class=\"comment\"> * @name: tracepoint name</span>", 
"<span class=\"comment\"> * @probe: probe function pointer</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * caller must call tracepoint_probe_update_all()</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#tracepoint_probe_unregister_noupdate\">tracepoint_probe_unregister_noupdate</a>(const char *<a class=\"id\" href=\"#name\">name</a>, void *<a class=\"id\" href=\"#probe\">probe</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tracepoint_func\">tracepoint_func</a> *<a class=\"id\" href=\"#old\">old</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#tracepoints_mutex\">tracepoints_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old\">old</a> = <a class=\"id\" href=\"#tracepoint_remove_probe\">tracepoint_remove_probe</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#probe\">probe</a>, <a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#old\">old</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tracepoints_mutex\">tracepoints_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#old\">old</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tracepoint_add_old_probes\">tracepoint_add_old_probes</a>(<a class=\"id\" href=\"#old\">old</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tracepoints_mutex\">tracepoints_mutex</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#tracepoint_probe_unregister_noupdate\">tracepoint_probe_unregister_noupdate</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tracepoint_probe_update_all -  update tracepoints</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#tracepoint_probe_update_all\">tracepoint_probe_update_all</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#release_probes\">release_probes</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tp_probes\">tp_probes</a> *<a class=\"id\" href=\"#pos\">pos</a>, *<a class=\"id\" href=\"#next\">next</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#tracepoints_mutex\">tracepoints_mutex</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#need_update\">need_update</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tracepoints_mutex\">tracepoints_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#old_probes\">old_probes</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_replace_init\">list_replace_init</a>(&amp;<a class=\"id\" href=\"#old_probes\">old_probes</a>, &amp;<a class=\"id\" href=\"#release_probes\">release_probes</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#need_update\">need_update</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tracepoints_mutex\">tracepoints_mutex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tracepoint_update_probes\">tracepoint_update_probes</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#next\">next</a>, &amp;<a class=\"id\" href=\"#release_probes\">release_probes</a>, <a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#pos\">pos</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#call_rcu_sched\">call_rcu_sched</a>(&amp;<a class=\"id\" href=\"#pos\">pos</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#rcu\">rcu</a>, <a class=\"id\" href=\"#rcu_free_old_probes\">rcu_free_old_probes</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#tracepoint_probe_update_all\">tracepoint_probe_update_all</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tracepoint_get_iter_range - Get a next tracepoint iterator given a range.</span>", 
"<span class=\"comment\"> * @tracepoint: current tracepoints (in), next tracepoint (out)</span>", 
"<span class=\"comment\"> * @begin: beginning of the range</span>", 
"<span class=\"comment\"> * @end: end of the range</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns whether a next tracepoint has been found (1) or not (0).</span>", 
"<span class=\"comment\"> * Will return the first tracepoint in the range if the input tracepoint is</span>", 
"<span class=\"comment\"> * NULL.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#tracepoint_get_iter_range\">tracepoint_get_iter_range</a>(struct <a class=\"id\" href=\"#tracepoint\">tracepoint</a> **<a class=\"id\" href=\"#tracepoint\">tracepoint</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tracepoint\">tracepoint</a> *<a class=\"id\" href=\"#begin\">begin</a>, struct <a class=\"id\" href=\"#tracepoint\">tracepoint</a> *<a class=\"id\" href=\"#end\">end</a>)", 
"{", 
"<span class=\"ts\"/>if (!*<a class=\"id\" href=\"#tracepoint\">tracepoint</a> && <a class=\"id\" href=\"#begin\">begin</a> != <a class=\"id\" href=\"#end\">end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#tracepoint\">tracepoint</a> = <a class=\"id\" href=\"#begin\">begin</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#tracepoint\">tracepoint</a> >= <a class=\"id\" href=\"#begin\">begin</a> && *<a class=\"id\" href=\"#tracepoint\">tracepoint</a> &lt; <a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#tracepoint_get_iter_range\">tracepoint_get_iter_range</a>);", 
"", 
"static void <a class=\"id\" href=\"#tracepoint_get_iter\">tracepoint_get_iter</a>(struct <a class=\"id\" href=\"#tracepoint_iter\">tracepoint_iter</a> *<a class=\"id\" href=\"#iter\">iter</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#found\">found</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Core kernel tracepoints */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#module\">module</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> = <a class=\"id\" href=\"#tracepoint_get_iter_range\">tracepoint_get_iter_range</a>(&amp;<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#tracepoint\">tracepoint</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__start___tracepoints\">__start___tracepoints</a>, <a class=\"id\" href=\"#__stop___tracepoints\">__stop___tracepoints</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#found\">found</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* tracepoints in modules. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> = <a class=\"id\" href=\"#module_get_iter_tracepoints\">module_get_iter_tracepoints</a>(<a class=\"id\" href=\"#iter\">iter</a>);", 
"<a class=\"id\" href=\"#end\">end</a>:", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#found\">found</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tracepoint_iter_reset\">tracepoint_iter_reset</a>(<a class=\"id\" href=\"#iter\">iter</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#tracepoint_iter_start\">tracepoint_iter_start</a>(struct <a class=\"id\" href=\"#tracepoint_iter\">tracepoint_iter</a> *<a class=\"id\" href=\"#iter\">iter</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tracepoint_get_iter\">tracepoint_get_iter</a>(<a class=\"id\" href=\"#iter\">iter</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#tracepoint_iter_start\">tracepoint_iter_start</a>);", 
"", 
"void <a class=\"id\" href=\"#tracepoint_iter_next\">tracepoint_iter_next</a>(struct <a class=\"id\" href=\"#tracepoint_iter\">tracepoint_iter</a> *<a class=\"id\" href=\"#iter\">iter</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#tracepoint\">tracepoint</a>++;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * iter-&gt;tracepoint may be invalid because we blindly incremented it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Make sure it is valid by marshalling on the tracepoints, getting the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * tracepoints from following modules if necessary.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tracepoint_get_iter\">tracepoint_get_iter</a>(<a class=\"id\" href=\"#iter\">iter</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#tracepoint_iter_next\">tracepoint_iter_next</a>);", 
"", 
"void <a class=\"id\" href=\"#tracepoint_iter_stop\">tracepoint_iter_stop</a>(struct <a class=\"id\" href=\"#tracepoint_iter\">tracepoint_iter</a> *<a class=\"id\" href=\"#iter\">iter</a>)", 
"{", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#tracepoint_iter_stop\">tracepoint_iter_stop</a>);", 
"", 
"void <a class=\"id\" href=\"#tracepoint_iter_reset\">tracepoint_iter_reset</a>(struct <a class=\"id\" href=\"#tracepoint_iter\">tracepoint_iter</a> *<a class=\"id\" href=\"#iter\">iter</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#module\">module</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#tracepoint\">tracepoint</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#tracepoint_iter_reset\">tracepoint_iter_reset</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_MODULES\">CONFIG_MODULES</a>", 
"", 
"int <a class=\"id\" href=\"#tracepoint_module_notify\">tracepoint_module_notify</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#self\">self</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned long <a class=\"id\" href=\"#val\">val</a>, void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#mod\">mod</a> = <a class=\"id\" href=\"#data\">data</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#val\">val</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MODULE_STATE_COMING\">MODULE_STATE_COMING</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MODULE_STATE_GOING\">MODULE_STATE_GOING</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tracepoint_update_probe_range\">tracepoint_update_probe_range</a>(<a class=\"id\" href=\"#mod\">mod</a>-><a class=\"id\" href=\"#tracepoints\">tracepoints</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mod\">mod</a>-><a class=\"id\" href=\"#tracepoints\">tracepoints</a> + <a class=\"id\" href=\"#mod\">mod</a>-><a class=\"id\" href=\"#num_tracepoints\">num_tracepoints</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> <a class=\"id\" href=\"#tracepoint_module_nb\">tracepoint_module_nb</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#notifier_call\">notifier_call</a> = <a class=\"id\" href=\"#tracepoint_module_notify\">tracepoint_module_notify</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#priority\">priority</a> = 0,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#init_tracepoints\">init_tracepoints</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#register_module_notifier\">register_module_notifier</a>(&amp;<a class=\"id\" href=\"#tracepoint_module_nb\">tracepoint_module_nb</a>);", 
"}", 
"<a class=\"id\" href=\"#__initcall\">__initcall</a>(<a class=\"id\" href=\"#init_tracepoints\">init_tracepoints</a>);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_MODULES */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HAVE_SYSCALL_TRACEPOINTS\">CONFIG_HAVE_SYSCALL_TRACEPOINTS</a>", 
"", 
"<span class=\"comment\">/* NB: reg/unreg are called while guarded with the tracepoints_mutex */</span>", 
"static int <a class=\"id\" href=\"#sys_tracepoint_refcount\">sys_tracepoint_refcount</a>;", 
"", 
"void <a class=\"id\" href=\"#syscall_regfunc\">syscall_regfunc</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#g\">g</a>, *<a class=\"id\" href=\"#t\">t</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sys_tracepoint_refcount\">sys_tracepoint_refcount</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_lock_irqsave\">read_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_each_thread\">do_each_thread</a>(<a class=\"id\" href=\"#g\">g</a>, <a class=\"id\" href=\"#t\">t</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Skip kernel threads. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#mm\">mm</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_tsk_thread_flag\">set_tsk_thread_flag</a>(<a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#TIF_SYSCALL_TRACEPOINT\">TIF_SYSCALL_TRACEPOINT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#while_each_thread\">while_each_thread</a>(<a class=\"id\" href=\"#g\">g</a>, <a class=\"id\" href=\"#t\">t</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_irqrestore\">read_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sys_tracepoint_refcount\">sys_tracepoint_refcount</a>++;", 
"}", 
"", 
"void <a class=\"id\" href=\"#syscall_unregfunc\">syscall_unregfunc</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#g\">g</a>, *<a class=\"id\" href=\"#t\">t</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sys_tracepoint_refcount\">sys_tracepoint_refcount</a>--;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sys_tracepoint_refcount\">sys_tracepoint_refcount</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_lock_irqsave\">read_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_each_thread\">do_each_thread</a>(<a class=\"id\" href=\"#g\">g</a>, <a class=\"id\" href=\"#t\">t</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_tsk_thread_flag\">clear_tsk_thread_flag</a>(<a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#TIF_SYSCALL_TRACEPOINT\">TIF_SYSCALL_TRACEPOINT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#while_each_thread\">while_each_thread</a>(<a class=\"id\" href=\"#g\">g</a>, <a class=\"id\" href=\"#t\">t</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_irqrestore\">read_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/8c/0679868c2419449ebdd94412d1e5b321044c35.xr', __xr_tmp);
