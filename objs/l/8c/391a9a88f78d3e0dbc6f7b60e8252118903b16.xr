var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * drivers/video/asiliantfb.c</span>", 
"<span class=\"comment\"> *  frame buffer driver for Asiliant 69000 chip</span>", 
"<span class=\"comment\"> *  Copyright (C) 2001-2003 Saito.K &amp; Jeanne</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  from driver/video/chipsfb.c and,</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  drivers/video/asiliantfb.c -- frame buffer device for</span>", 
"<span class=\"comment\"> *  Asiliant 69030 chip (formerly Intel, formerly Chips &amp; Technologies)</span>", 
"<span class=\"comment\"> *  Author: apc@agelectronics.co.uk</span>", 
"<span class=\"comment\"> *  Copyright (C) 2000 AG Electronics</span>", 
"<span class=\"comment\"> *  Note: the data sheets don't seem to be available from Asiliant.</span>", 
"<span class=\"comment\"> *  They are available by searching developer.intel.com, but are not otherwise</span>", 
"<span class=\"comment\"> *  linked to.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This driver should be portable with minimal effort to the 69000 display</span>", 
"<span class=\"comment\"> *  chip, and to the twin-display mode of the 69030.</span>", 
"<span class=\"comment\"> *  Contains code from Thomas Hhenleitner &lt;th@visuelle-maschinen.de&gt; (thanks)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Derived from the CT65550 driver chipsfb.c:</span>", 
"<span class=\"comment\"> *  Copyright (C) 1998 Paul Mackerras</span>", 
"<span class=\"comment\"> *  ...which was derived from the Powermac \"chips\" driver:</span>", 
"<span class=\"comment\"> *  Copyright (C) 1997 Fabio Riccardi.</span>", 
"<span class=\"comment\"> *  And from the frame buffer device for Open Firmware-initialized devices:</span>", 
"<span class=\"comment\"> *  Copyright (C) 1997 Geert Uytterhoeven.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This file is subject to the terms and conditions of the GNU General Public</span>", 
"<span class=\"comment\"> *  License. See the file COPYING in the main directory of this archive for</span>", 
"<span class=\"comment\"> *  more details.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#vmalloc\">vmalloc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fb\">fb</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#io\">io</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* Built in clock of the 69030 */</span>", 
"static const unsigned <a class=\"id\" href=\"#Fref\">Fref</a> = 14318180;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#mmio_base\">mmio_base</a> (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#screen_base\">screen_base</a> + 0x400000)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#mm_write_ind\">mm_write_ind</a>(<a class=\"id\" href=\"#num\">num</a>, <a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#dp\">dp</a>)<span class=\"ts\"/>do { \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#writeb\">writeb</a>((<a class=\"id\" href=\"#num\">num</a>), <a class=\"id\" href=\"#mmio_base\">mmio_base</a> + (<a class=\"id\" href=\"#ap\">ap</a>)); <a class=\"id\" href=\"#writeb\">writeb</a>((<a class=\"id\" href=\"#val\">val</a>), <a class=\"id\" href=\"#mmio_base\">mmio_base</a> + (<a class=\"id\" href=\"#dp\">dp</a>)); \\", 
"} while (0)", 
"", 
"static void <a class=\"id\" href=\"#mm_write_xr\">mm_write_xr</a>(struct <a class=\"id\" href=\"#fb_info\">fb_info</a> *<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mm_write_ind\">mm_write_ind</a>(<a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#data\">data</a>, 0x7ac, 0x7ad);", 
"}", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#write_xr\">write_xr</a>(<a class=\"id\" href=\"#num\">num</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#mm_write_xr\">mm_write_xr</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#num\">num</a>, <a class=\"id\" href=\"#val\">val</a>)", 
"", 
"static void <a class=\"id\" href=\"#mm_write_fr\">mm_write_fr</a>(struct <a class=\"id\" href=\"#fb_info\">fb_info</a> *<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mm_write_ind\">mm_write_ind</a>(<a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#data\">data</a>, 0x7a0, 0x7a1);", 
"}", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#write_fr\">write_fr</a>(<a class=\"id\" href=\"#num\">num</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#mm_write_fr\">mm_write_fr</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#num\">num</a>, <a class=\"id\" href=\"#val\">val</a>)", 
"", 
"static void <a class=\"id\" href=\"#mm_write_cr\">mm_write_cr</a>(struct <a class=\"id\" href=\"#fb_info\">fb_info</a> *<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mm_write_ind\">mm_write_ind</a>(<a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#data\">data</a>, 0x7a8, 0x7a9);", 
"}", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#write_cr\">write_cr</a>(<a class=\"id\" href=\"#num\">num</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#mm_write_cr\">mm_write_cr</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#num\">num</a>, <a class=\"id\" href=\"#val\">val</a>)", 
"", 
"static void <a class=\"id\" href=\"#mm_write_gr\">mm_write_gr</a>(struct <a class=\"id\" href=\"#fb_info\">fb_info</a> *<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mm_write_ind\">mm_write_ind</a>(<a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#data\">data</a>, 0x79c, 0x79d);", 
"}", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#write_gr\">write_gr</a>(<a class=\"id\" href=\"#num\">num</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#mm_write_gr\">mm_write_gr</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#num\">num</a>, <a class=\"id\" href=\"#val\">val</a>)", 
"", 
"static void <a class=\"id\" href=\"#mm_write_sr\">mm_write_sr</a>(struct <a class=\"id\" href=\"#fb_info\">fb_info</a> *<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mm_write_ind\">mm_write_ind</a>(<a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#data\">data</a>, 0x788, 0x789);", 
"}", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#write_sr\">write_sr</a>(<a class=\"id\" href=\"#num\">num</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#mm_write_sr\">mm_write_sr</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#num\">num</a>, <a class=\"id\" href=\"#val\">val</a>)", 
"", 
"static void <a class=\"id\" href=\"#mm_write_ar\">mm_write_ar</a>(struct <a class=\"id\" href=\"#fb_info\">fb_info</a> *<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#readb\">readb</a>(<a class=\"id\" href=\"#mmio_base\">mmio_base</a> + 0x7b4);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mm_write_ind\">mm_write_ind</a>(<a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#data\">data</a>, 0x780, 0x780);", 
"}", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#write_ar\">write_ar</a>(<a class=\"id\" href=\"#num\">num</a>, <a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><a class=\"id\" href=\"#mm_write_ar\">mm_write_ar</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#num\">num</a>, <a class=\"id\" href=\"#val\">val</a>)", 
"", 
"static int <a class=\"id\" href=\"#asiliantfb_pci_init\">asiliantfb_pci_init</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dp\">dp</a>, const struct <a class=\"id\" href=\"#pci_device_id\">pci_device_id</a> *);", 
"static int <a class=\"id\" href=\"#asiliantfb_check_var\">asiliantfb_check_var</a>(struct <a class=\"id\" href=\"#fb_var_screeninfo\">fb_var_screeninfo</a> *<a class=\"id\" href=\"#var\">var</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#fb_info\">fb_info</a> *<a class=\"id\" href=\"#info\">info</a>);", 
"static int <a class=\"id\" href=\"#asiliantfb_set_par\">asiliantfb_set_par</a>(struct <a class=\"id\" href=\"#fb_info\">fb_info</a> *<a class=\"id\" href=\"#info\">info</a>);", 
"static int <a class=\"id\" href=\"#asiliantfb_setcolreg\">asiliantfb_setcolreg</a>(<a class=\"id\" href=\"#u_int\">u_int</a> <a class=\"id\" href=\"#regno\">regno</a>, <a class=\"id\" href=\"#u_int\">u_int</a> <a class=\"id\" href=\"#red\">red</a>, <a class=\"id\" href=\"#u_int\">u_int</a> <a class=\"id\" href=\"#green\">green</a>, <a class=\"id\" href=\"#u_int\">u_int</a> <a class=\"id\" href=\"#blue\">blue</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u_int\">u_int</a> <a class=\"id\" href=\"#transp\">transp</a>, struct <a class=\"id\" href=\"#fb_info\">fb_info</a> *<a class=\"id\" href=\"#info\">info</a>);", 
"", 
"static struct <a class=\"id\" href=\"#fb_ops\">fb_ops</a> <a class=\"id\" href=\"#asiliantfb_ops\">asiliantfb_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#fb_check_var\">fb_check_var</a><span class=\"ts\"/>= <a class=\"id\" href=\"#asiliantfb_check_var\">asiliantfb_check_var</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#fb_set_par\">fb_set_par</a><span class=\"ts\"/>= <a class=\"id\" href=\"#asiliantfb_set_par\">asiliantfb_set_par</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#fb_setcolreg\">fb_setcolreg</a><span class=\"ts\"/>= <a class=\"id\" href=\"#asiliantfb_setcolreg\">asiliantfb_setcolreg</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#fb_fillrect\">fb_fillrect</a><span class=\"ts\"/>= <a class=\"id\" href=\"#cfb_fillrect\">cfb_fillrect</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#fb_copyarea\">fb_copyarea</a><span class=\"ts\"/>= <a class=\"id\" href=\"#cfb_copyarea\">cfb_copyarea</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#fb_imageblit\">fb_imageblit</a><span class=\"ts\"/>= <a class=\"id\" href=\"#cfb_imageblit\">cfb_imageblit</a>,", 
"};", 
"", 
"<span class=\"comment\">/* Calculate the ratios for the dot clocks without using a single long long</span>", 
"<span class=\"comment\"> * value */</span>", 
"static void <a class=\"id\" href=\"#asiliant_calc_dclk2\">asiliant_calc_dclk2</a>(<a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#ppixclock\">ppixclock</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#dclk2_m\">dclk2_m</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#dclk2_n\">dclk2_n</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#dclk2_div\">dclk2_div</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#pixclock\">pixclock</a> = *<a class=\"id\" href=\"#ppixclock\">ppixclock</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#Ftarget\">Ftarget</a> = 1000000 * (1000000 / <a class=\"id\" href=\"#pixclock\">pixclock</a>);", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#best_error\">best_error</a> = 0xffffffff;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#best_m\">best_m</a> = 0xffffffff,", 
"<span class=\"ts\"/>         <a class=\"id\" href=\"#best_n\">best_n</a> = 0xffffffff;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#ratio\">ratio</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#remainder\">remainder</a>;", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#divisor\">divisor</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Calculate the frequency required. This is hard enough. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ratio\">ratio</a> = 1000000 / <a class=\"id\" href=\"#pixclock\">pixclock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#remainder\">remainder</a> = 1000000 % <a class=\"id\" href=\"#pixclock\">pixclock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Ftarget\">Ftarget</a> = 1000000 * <a class=\"id\" href=\"#ratio\">ratio</a> + (1000000 * <a class=\"id\" href=\"#remainder\">remainder</a>) / <a class=\"id\" href=\"#pixclock\">pixclock</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#Ftarget\">Ftarget</a> &lt; 100000000) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#divisor\">divisor</a> += 0x10;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#Ftarget\">Ftarget</a> <<= 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ratio\">ratio</a> = <a class=\"id\" href=\"#Ftarget\">Ftarget</a> / <a class=\"id\" href=\"#Fref\">Fref</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#remainder\">remainder</a> = <a class=\"id\" href=\"#Ftarget\">Ftarget</a> % <a class=\"id\" href=\"#Fref\">Fref</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* This expresses the constraint that 150kHz &lt;= Fref/n &lt;= 5Mhz,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * together with 3 &lt;= n &lt;= 257. */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#n\">n</a> = 3; <a class=\"id\" href=\"#n\">n</a> <= 257; <a class=\"id\" href=\"#n\">n</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned <a class=\"id\" href=\"#m\">m</a> = <a class=\"id\" href=\"#n\">n</a> * <a class=\"id\" href=\"#ratio\">ratio</a> + (<a class=\"id\" href=\"#n\">n</a> * <a class=\"id\" href=\"#remainder\">remainder</a>) / <a class=\"id\" href=\"#Fref\">Fref</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 3 &lt;= m &lt;= 257 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#m\">m</a> >= 3 && <a class=\"id\" href=\"#m\">m</a> <= 257) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned <a class=\"id\" href=\"#new_error\">new_error</a> = <a class=\"id\" href=\"#Ftarget\">Ftarget</a> * <a class=\"id\" href=\"#n\">n</a> >= <a class=\"id\" href=\"#Fref\">Fref</a> * <a class=\"id\" href=\"#m\">m</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       ((<a class=\"id\" href=\"#Ftarget\">Ftarget</a> * <a class=\"id\" href=\"#n\">n</a>) - (<a class=\"id\" href=\"#Fref\">Fref</a> * <a class=\"id\" href=\"#m\">m</a>)) : ((<a class=\"id\" href=\"#Fref\">Fref</a> * <a class=\"id\" href=\"#m\">m</a>) - (<a class=\"id\" href=\"#Ftarget\">Ftarget</a> * <a class=\"id\" href=\"#n\">n</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#new_error\">new_error</a> &lt; <a class=\"id\" href=\"#best_error\">best_error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#best_n\">best_n</a> = <a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#best_m\">best_m</a> = <a class=\"id\" href=\"#m\">m</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#best_error\">best_error</a> = <a class=\"id\" href=\"#new_error\">new_error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* But if VLD = 4, then 4m &lt;= 1028 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#m\">m</a> <= 1028) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* remember there are still only 8-bits of precision in m, so</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * avoid over-optimistic error calculations */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned <a class=\"id\" href=\"#new_error\">new_error</a> = <a class=\"id\" href=\"#Ftarget\">Ftarget</a> * <a class=\"id\" href=\"#n\">n</a> >= <a class=\"id\" href=\"#Fref\">Fref</a> * (<a class=\"id\" href=\"#m\">m</a> &amp; ~3) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       ((<a class=\"id\" href=\"#Ftarget\">Ftarget</a> * <a class=\"id\" href=\"#n\">n</a>) - (<a class=\"id\" href=\"#Fref\">Fref</a> * (<a class=\"id\" href=\"#m\">m</a> &amp; ~3))) : ((<a class=\"id\" href=\"#Fref\">Fref</a> * (<a class=\"id\" href=\"#m\">m</a> &amp; ~3)) - (<a class=\"id\" href=\"#Ftarget\">Ftarget</a> * <a class=\"id\" href=\"#n\">n</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#new_error\">new_error</a> &lt; <a class=\"id\" href=\"#best_error\">best_error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#best_n\">best_n</a> = <a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#best_m\">best_m</a> = <a class=\"id\" href=\"#m\">m</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#best_error\">best_error</a> = <a class=\"id\" href=\"#new_error\">new_error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#best_m\">best_m</a> &gt; 257)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#best_m\">best_m</a> >>= 2;<span class=\"ts\"/><span class=\"comment\">/* divide m by 4, and leave VCO loop divide at 4 */</span>", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#divisor\">divisor</a> |= 4;<span class=\"ts\"/><span class=\"comment\">/* or set VCO loop divide to 1 */</span>", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#dclk2_m\">dclk2_m</a> = <a class=\"id\" href=\"#best_m\">best_m</a> - 2;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#dclk2_n\">dclk2_n</a> = <a class=\"id\" href=\"#best_n\">best_n</a> - 2;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#dclk2_div\">dclk2_div</a> = <a class=\"id\" href=\"#divisor\">divisor</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#ppixclock\">ppixclock</a> = <a class=\"id\" href=\"#pixclock\">pixclock</a>;", 
"<span class=\"ts\"/>return;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#asiliant_set_timing\">asiliant_set_timing</a>(struct <a class=\"id\" href=\"#fb_info\">fb_info</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#hd\">hd</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#xres\">xres</a> / 8;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#hs\">hs</a> = (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#xres\">xres</a> + <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#right_margin\">right_margin</a>) / 8;", 
"       <span class=\"ts\"/>unsigned <a class=\"id\" href=\"#he\">he</a> = (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#xres\">xres</a> + <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#right_margin\">right_margin</a> + <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#hsync_len\">hsync_len</a>) / 8;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#ht\">ht</a> = (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#left_margin\">left_margin</a> + <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#xres\">xres</a> + <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#right_margin\">right_margin</a> + <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#hsync_len\">hsync_len</a>) / 8;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#vd\">vd</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#yres\">yres</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#vs\">vs</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#yres\">yres</a> + <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#lower_margin\">lower_margin</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#ve\">ve</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#yres\">yres</a> + <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#lower_margin\">lower_margin</a> + <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#vsync_len\">vsync_len</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#vt\">vt</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#upper_margin\">upper_margin</a> + <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#yres\">yres</a> + <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#lower_margin\">lower_margin</a> + <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#vsync_len\">vsync_len</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#wd\">wd</a> = (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#xres_virtual\">xres_virtual</a> * ((<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#bits_per_pixel\">bits_per_pixel</a>+7)/8)) / 8;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#xres\">xres</a> == 640) && (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#yres\">yres</a> == 480) && (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#pixclock\">pixclock</a> == 39722)) {", 
"<span class=\"ts\"/>  <a class=\"id\" href=\"#write_fr\">write_fr</a>(0x01, 0x02);  <span class=\"comment\">/* LCD */</span>", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/>  <a class=\"id\" href=\"#write_fr\">write_fr</a>(0x01, 0x01);  <span class=\"comment\">/* CRT */</span>", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_cr\">write_cr</a>(0x11, (<a class=\"id\" href=\"#ve\">ve</a> - 1) &amp; 0x0f);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_cr\">write_cr</a>(0x00, (<a class=\"id\" href=\"#ht\">ht</a> - 5) &amp; 0xff);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_cr\">write_cr</a>(0x01, <a class=\"id\" href=\"#hd\">hd</a> - 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_cr\">write_cr</a>(0x02, <a class=\"id\" href=\"#hd\">hd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_cr\">write_cr</a>(0x03, ((<a class=\"id\" href=\"#ht\">ht</a> - 1) &amp; 0x1f) | 0x80);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_cr\">write_cr</a>(0x04, <a class=\"id\" href=\"#hs\">hs</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_cr\">write_cr</a>(0x05, (((<a class=\"id\" href=\"#ht\">ht</a> - 1) &amp; 0x20) <<2) | (<a class=\"id\" href=\"#he\">he</a> &amp; 0x1f));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_cr\">write_cr</a>(0x3c, (<a class=\"id\" href=\"#ht\">ht</a> - 1) &amp; 0xc0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_cr\">write_cr</a>(0x06, (<a class=\"id\" href=\"#vt\">vt</a> - 2) &amp; 0xff);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_cr\">write_cr</a>(0x30, (<a class=\"id\" href=\"#vt\">vt</a> - 2) >> 8);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_cr\">write_cr</a>(0x07, 0x00);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_cr\">write_cr</a>(0x08, 0x00);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_cr\">write_cr</a>(0x09, 0x00);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_cr\">write_cr</a>(0x10, (<a class=\"id\" href=\"#vs\">vs</a> - 1) &amp; 0xff);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_cr\">write_cr</a>(0x32, ((<a class=\"id\" href=\"#vs\">vs</a> - 1) >> 8) &amp; 0xf);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_cr\">write_cr</a>(0x11, ((<a class=\"id\" href=\"#ve\">ve</a> - 1) &amp; 0x0f) | 0x80);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_cr\">write_cr</a>(0x12, (<a class=\"id\" href=\"#vd\">vd</a> - 1) &amp; 0xff);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_cr\">write_cr</a>(0x31, ((<a class=\"id\" href=\"#vd\">vd</a> - 1) &amp; 0xf00) >> 8);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_cr\">write_cr</a>(0x13, <a class=\"id\" href=\"#wd\">wd</a> &amp; 0xff);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_cr\">write_cr</a>(0x41, (<a class=\"id\" href=\"#wd\">wd</a> &amp; 0xf00) >> 8);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_cr\">write_cr</a>(0x15, (<a class=\"id\" href=\"#vs\">vs</a> - 1) &amp; 0xff);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_cr\">write_cr</a>(0x33, ((<a class=\"id\" href=\"#vs\">vs</a> - 1) >> 8) &amp; 0xf);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_cr\">write_cr</a>(0x38, ((<a class=\"id\" href=\"#ht\">ht</a> - 5) &amp; 0x100) >> 8);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_cr\">write_cr</a>(0x16, (<a class=\"id\" href=\"#vt\">vt</a> - 1) &amp; 0xff);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_cr\">write_cr</a>(0x18, 0x00);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#xres\">xres</a> == 640) {", 
"<span class=\"ts\"/>  <a class=\"id\" href=\"#writeb\">writeb</a>(0xc7, <a class=\"id\" href=\"#mmio_base\">mmio_base</a> + 0x784);<span class=\"ts\"/><span class=\"comment\">/* set misc output reg */</span>", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/>  <a class=\"id\" href=\"#writeb\">writeb</a>(0x07, <a class=\"id\" href=\"#mmio_base\">mmio_base</a> + 0x784);<span class=\"ts\"/><span class=\"comment\">/* set misc output reg */</span>", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#asiliantfb_check_var\">asiliantfb_check_var</a>(struct <a class=\"id\" href=\"#fb_var_screeninfo\">fb_var_screeninfo</a> *<a class=\"id\" href=\"#var\">var</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#fb_info\">fb_info</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#Ftarget\">Ftarget</a>, <a class=\"id\" href=\"#ratio\">ratio</a>, <a class=\"id\" href=\"#remainder\">remainder</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ratio\">ratio</a> = 1000000 / <a class=\"id\" href=\"#var\">var</a>-><a class=\"id\" href=\"#pixclock\">pixclock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#remainder\">remainder</a> = 1000000 % <a class=\"id\" href=\"#var\">var</a>-><a class=\"id\" href=\"#pixclock\">pixclock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Ftarget\">Ftarget</a> = 1000000 * <a class=\"id\" href=\"#ratio\">ratio</a> + (1000000 * <a class=\"id\" href=\"#remainder\">remainder</a>) / <a class=\"id\" href=\"#var\">var</a>-><a class=\"id\" href=\"#pixclock\">pixclock</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* First check the constraint that the maximum post-VCO divisor is 32,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and the maximum Fvco is 220MHz */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#Ftarget\">Ftarget</a> &gt; 220000000 || <a class=\"id\" href=\"#Ftarget\">Ftarget</a> &lt; 3125000) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"asiliantfb dotclock must be between 3.125 and 220MHz\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#var\">var</a>-><a class=\"id\" href=\"#xres_virtual\">xres_virtual</a> = <a class=\"id\" href=\"#var\">var</a>-><a class=\"id\" href=\"#xres\">xres</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#var\">var</a>-><a class=\"id\" href=\"#yres_virtual\">yres_virtual</a> = <a class=\"id\" href=\"#var\">var</a>-><a class=\"id\" href=\"#yres\">yres</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#var\">var</a>-><a class=\"id\" href=\"#bits_per_pixel\">bits_per_pixel</a> == 24) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#var\">var</a>-><a class=\"id\" href=\"#red\">red</a>.<a class=\"id\" href=\"#offset\">offset</a> = 16;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#var\">var</a>-><a class=\"id\" href=\"#green\">green</a>.<a class=\"id\" href=\"#offset\">offset</a> = 8;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#var\">var</a>-><a class=\"id\" href=\"#blue\">blue</a>.<a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#var\">var</a>-><a class=\"id\" href=\"#red\">red</a>.<a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#var\">var</a>-><a class=\"id\" href=\"#blue\">blue</a>.<a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#var\">var</a>-><a class=\"id\" href=\"#green\">green</a>.<a class=\"id\" href=\"#length\">length</a> = 8;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#var\">var</a>-><a class=\"id\" href=\"#bits_per_pixel\">bits_per_pixel</a> == 16) {", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#var\">var</a>-><a class=\"id\" href=\"#red\">red</a>.<a class=\"id\" href=\"#offset\">offset</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case 11:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#var\">var</a>-><a class=\"id\" href=\"#green\">green</a>.<a class=\"id\" href=\"#length\">length</a> = 6;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case 10:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#var\">var</a>-><a class=\"id\" href=\"#green\">green</a>.<a class=\"id\" href=\"#length\">length</a> = 5;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#var\">var</a>-><a class=\"id\" href=\"#green\">green</a>.<a class=\"id\" href=\"#offset\">offset</a> = 5;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#var\">var</a>-><a class=\"id\" href=\"#blue\">blue</a>.<a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#var\">var</a>-><a class=\"id\" href=\"#red\">red</a>.<a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#var\">var</a>-><a class=\"id\" href=\"#blue\">blue</a>.<a class=\"id\" href=\"#length\">length</a> = 5;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#var\">var</a>-><a class=\"id\" href=\"#bits_per_pixel\">bits_per_pixel</a> == 8) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#var\">var</a>-><a class=\"id\" href=\"#red\">red</a>.<a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#var\">var</a>-><a class=\"id\" href=\"#green\">green</a>.<a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#var\">var</a>-><a class=\"id\" href=\"#blue\">blue</a>.<a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#var\">var</a>-><a class=\"id\" href=\"#red\">red</a>.<a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#var\">var</a>-><a class=\"id\" href=\"#green\">green</a>.<a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#var\">var</a>-><a class=\"id\" href=\"#blue\">blue</a>.<a class=\"id\" href=\"#length\">length</a> = 8;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#asiliantfb_set_par\">asiliantfb_set_par</a>(struct <a class=\"id\" href=\"#fb_info\">fb_info</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#dclk2_m\">dclk2_m</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Holds m-2 value for register */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#dclk2_n\">dclk2_n</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Holds n-2 value for register */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#dclk2_div\">dclk2_div</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Holds divisor bitmask */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Set pixclock */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asiliant_calc_dclk2\">asiliant_calc_dclk2</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#pixclock\">pixclock</a>, &amp;<a class=\"id\" href=\"#dclk2_m\">dclk2_m</a>, &amp;<a class=\"id\" href=\"#dclk2_n\">dclk2_n</a>, &amp;<a class=\"id\" href=\"#dclk2_div\">dclk2_div</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Set color depth */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#bits_per_pixel\">bits_per_pixel</a> == 24) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_xr\">write_xr</a>(0x81, 0x16);<span class=\"ts\"/><span class=\"comment\">/* 24 bit packed color mode */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_xr\">write_xr</a>(0x82, 0x00);<span class=\"ts\"/><span class=\"comment\">/* Disable palettes */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_xr\">write_xr</a>(0x20, 0x20);<span class=\"ts\"/><span class=\"comment\">/* 24 bit blitter mode */</span>", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#bits_per_pixel\">bits_per_pixel</a> == 16) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#red\">red</a>.<a class=\"id\" href=\"#offset\">offset</a> == 11)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_xr\">write_xr</a>(0x81, 0x15);<span class=\"ts\"/><span class=\"comment\">/* 16 bit color mode */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_xr\">write_xr</a>(0x81, 0x14);<span class=\"ts\"/><span class=\"comment\">/* 15 bit color mode */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_xr\">write_xr</a>(0x82, 0x00);<span class=\"ts\"/><span class=\"comment\">/* Disable palettes */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_xr\">write_xr</a>(0x20, 0x10);<span class=\"ts\"/><span class=\"comment\">/* 16 bit blitter mode */</span>", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#bits_per_pixel\">bits_per_pixel</a> == 8) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_xr\">write_xr</a>(0x0a, 0x02);<span class=\"ts\"/><span class=\"comment\">/* Linear */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_xr\">write_xr</a>(0x81, 0x12);<span class=\"ts\"/><span class=\"comment\">/* 8 bit color mode */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_xr\">write_xr</a>(0x82, 0x00);<span class=\"ts\"/><span class=\"comment\">/* Graphics gamma enable */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_xr\">write_xr</a>(0x20, 0x00);<span class=\"ts\"/><span class=\"comment\">/* 8 bit blitter mode */</span>", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#fix\">fix</a>.<a class=\"id\" href=\"#line_length\">line_length</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#xres\">xres</a> * (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#bits_per_pixel\">bits_per_pixel</a> >> 3);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#fix\">fix</a>.<a class=\"id\" href=\"#visual\">visual</a> = (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#bits_per_pixel\">bits_per_pixel</a> == 8) ? <a class=\"id\" href=\"#FB_VISUAL_PSEUDOCOLOR\">FB_VISUAL_PSEUDOCOLOR</a> : <a class=\"id\" href=\"#FB_VISUAL_TRUECOLOR\">FB_VISUAL_TRUECOLOR</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_xr\">write_xr</a>(0xc4, <a class=\"id\" href=\"#dclk2_m\">dclk2_m</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_xr\">write_xr</a>(0xc5, <a class=\"id\" href=\"#dclk2_n\">dclk2_n</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_xr\">write_xr</a>(0xc7, <a class=\"id\" href=\"#dclk2_div\">dclk2_div</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Set up the CR registers */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asiliant_set_timing\">asiliant_set_timing</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#asiliantfb_setcolreg\">asiliantfb_setcolreg</a>(<a class=\"id\" href=\"#u_int\">u_int</a> <a class=\"id\" href=\"#regno\">regno</a>, <a class=\"id\" href=\"#u_int\">u_int</a> <a class=\"id\" href=\"#red\">red</a>, <a class=\"id\" href=\"#u_int\">u_int</a> <a class=\"id\" href=\"#green\">green</a>, <a class=\"id\" href=\"#u_int\">u_int</a> <a class=\"id\" href=\"#blue\">blue</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#u_int\">u_int</a> <a class=\"id\" href=\"#transp\">transp</a>, struct <a class=\"id\" href=\"#fb_info\">fb_info</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#regno\">regno</a> &gt; 255)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#red\">red</a> >>= 8;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#green\">green</a> >>= 8;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blue\">blue</a> >>= 8;", 
"", 
"        <span class=\"comment\">/* Set hardware palete */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#writeb\">writeb</a>(<a class=\"id\" href=\"#regno\">regno</a>, <a class=\"id\" href=\"#mmio_base\">mmio_base</a> + 0x790);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#udelay\">udelay</a>(1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#writeb\">writeb</a>(<a class=\"id\" href=\"#red\">red</a>, <a class=\"id\" href=\"#mmio_base\">mmio_base</a> + 0x791);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#writeb\">writeb</a>(<a class=\"id\" href=\"#green\">green</a>, <a class=\"id\" href=\"#mmio_base\">mmio_base</a> + 0x791);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#writeb\">writeb</a>(<a class=\"id\" href=\"#blue\">blue</a>, <a class=\"id\" href=\"#mmio_base\">mmio_base</a> + 0x791);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#regno\">regno</a> &lt; 16) {", 
"<span class=\"ts\"/><span class=\"ts\"/>switch(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#red\">red</a>.<a class=\"id\" href=\"#offset\">offset</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case 10: <span class=\"comment\">/* RGB 555 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#u32\">u32</a> *)(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#pseudo_palette\">pseudo_palette</a>))[<a class=\"id\" href=\"#regno\">regno</a>] =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#red\">red</a> &amp; 0xf8) << 7) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#green\">green</a> &amp; 0xf8) << 2) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#blue\">blue</a> &amp; 0xf8) >> 3);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 11: <span class=\"comment\">/* RGB 565 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#u32\">u32</a> *)(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#pseudo_palette\">pseudo_palette</a>))[<a class=\"id\" href=\"#regno\">regno</a>] =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#red\">red</a> &amp; 0xf8) << 8) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#green\">green</a> &amp; 0xfc) << 3) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#blue\">blue</a> &amp; 0xf8) >> 3);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 16: <span class=\"comment\">/* RGB 888 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#u32\">u32</a> *)(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#pseudo_palette\">pseudo_palette</a>))[<a class=\"id\" href=\"#regno\">regno</a>] =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#red\">red</a> << 16)  |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#green\">green</a> << 8) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#blue\">blue</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#chips_init_reg\">chips_init_reg</a> {", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#data\">data</a>;", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#chips_init_reg\">chips_init_reg</a> <a class=\"id\" href=\"#chips_init_sr\">chips_init_sr</a>[] =", 
"{", 
"<span class=\"ts\"/>{0x00, 0x03},<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Reset register */</span>", 
"<span class=\"ts\"/>{0x01, 0x01},<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Clocking mode */</span>", 
"<span class=\"ts\"/>{0x02, 0x0f},<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Plane mask */</span>", 
"<span class=\"ts\"/>{0x04, 0x0e}<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Memory mode */</span>", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#chips_init_reg\">chips_init_reg</a> <a class=\"id\" href=\"#chips_init_gr\">chips_init_gr</a>[] =", 
"{", 
"        {0x03, 0x00},<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Data rotate */</span>", 
"<span class=\"ts\"/>{0x05, 0x00},<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Graphics mode */</span>", 
"<span class=\"ts\"/>{0x06, 0x01},<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Miscellaneous */</span>", 
"<span class=\"ts\"/>{0x08, 0x00}<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Bit mask */</span>", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#chips_init_reg\">chips_init_reg</a> <a class=\"id\" href=\"#chips_init_ar\">chips_init_ar</a>[] =", 
"{", 
"<span class=\"ts\"/>{0x10, 0x01},<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Mode control */</span>", 
"<span class=\"ts\"/>{0x11, 0x00},<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Overscan */</span>", 
"<span class=\"ts\"/>{0x12, 0x0f},<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Memory plane enable */</span>", 
"<span class=\"ts\"/>{0x13, 0x00}<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Horizontal pixel panning */</span>", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#chips_init_reg\">chips_init_reg</a> <a class=\"id\" href=\"#chips_init_cr\">chips_init_cr</a>[] =", 
"{", 
"<span class=\"ts\"/>{0x0c, 0x00},<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Start address high */</span>", 
"<span class=\"ts\"/>{0x0d, 0x00},<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Start address low */</span>", 
"<span class=\"ts\"/>{0x40, 0x00},<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Extended Start Address */</span>", 
"<span class=\"ts\"/>{0x41, 0x00},<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Extended Start Address */</span>", 
"<span class=\"ts\"/>{0x14, 0x00},<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Underline location */</span>", 
"<span class=\"ts\"/>{0x17, 0xe3},<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* CRT mode control */</span>", 
"<span class=\"ts\"/>{0x70, 0x00}<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Interlace control */</span>", 
"};", 
"", 
"", 
"static struct <a class=\"id\" href=\"#chips_init_reg\">chips_init_reg</a> <a class=\"id\" href=\"#chips_init_fr\">chips_init_fr</a>[] =", 
"{", 
"<span class=\"ts\"/>{0x01, 0x02},", 
"<span class=\"ts\"/>{0x03, 0x08},", 
"<span class=\"ts\"/>{0x08, 0xcc},", 
"<span class=\"ts\"/>{0x0a, 0x08},", 
"<span class=\"ts\"/>{0x18, 0x00},", 
"<span class=\"ts\"/>{0x1e, 0x80},", 
"<span class=\"ts\"/>{0x40, 0x83},", 
"<span class=\"ts\"/>{0x41, 0x00},", 
"<span class=\"ts\"/>{0x48, 0x13},", 
"<span class=\"ts\"/>{0x4d, 0x60},", 
"<span class=\"ts\"/>{0x4e, 0x0f},", 
"", 
"<span class=\"ts\"/>{0x0b, 0x01},", 
"", 
"<span class=\"ts\"/>{0x21, 0x51},", 
"<span class=\"ts\"/>{0x22, 0x1d},", 
"<span class=\"ts\"/>{0x23, 0x5f},", 
"<span class=\"ts\"/>{0x20, 0x4f},", 
"<span class=\"ts\"/>{0x34, 0x00},", 
"<span class=\"ts\"/>{0x24, 0x51},", 
"<span class=\"ts\"/>{0x25, 0x00},", 
"<span class=\"ts\"/>{0x27, 0x0b},", 
"<span class=\"ts\"/>{0x26, 0x00},", 
"<span class=\"ts\"/>{0x37, 0x80},", 
"<span class=\"ts\"/>{0x33, 0x0b},", 
"<span class=\"ts\"/>{0x35, 0x11},", 
"<span class=\"ts\"/>{0x36, 0x02},", 
"<span class=\"ts\"/>{0x31, 0xea},", 
"<span class=\"ts\"/>{0x32, 0x0c},", 
"<span class=\"ts\"/>{0x30, 0xdf},", 
"<span class=\"ts\"/>{0x10, 0x0c},", 
"<span class=\"ts\"/>{0x11, 0xe0},", 
"<span class=\"ts\"/>{0x12, 0x50},", 
"<span class=\"ts\"/>{0x13, 0x00},", 
"<span class=\"ts\"/>{0x16, 0x03},", 
"<span class=\"ts\"/>{0x17, 0xbd},", 
"<span class=\"ts\"/>{0x1a, 0x00},", 
"};", 
"", 
"", 
"static struct <a class=\"id\" href=\"#chips_init_reg\">chips_init_reg</a> <a class=\"id\" href=\"#chips_init_xr\">chips_init_xr</a>[] =", 
"{", 
"<span class=\"ts\"/>{0xce, 0x00},<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* set default memory clock */</span>", 
"<span class=\"ts\"/>{0xcc, 200 },<span class=\"ts\"/>        <span class=\"comment\">/* MCLK ratio M */</span>", 
"<span class=\"ts\"/>{0xcd, 18  },<span class=\"ts\"/>        <span class=\"comment\">/* MCLK ratio N */</span>", 
"<span class=\"ts\"/>{0xce, 0x90},<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* MCLK divisor = 2 */</span>", 
"", 
"<span class=\"ts\"/>{0xc4, 209 },", 
"<span class=\"ts\"/>{0xc5, 118 },", 
"<span class=\"ts\"/>{0xc7, 32  },", 
"<span class=\"ts\"/>{0xcf, 0x06},", 
"<span class=\"ts\"/>{0x09, 0x01},<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* IO Control - CRT controller extensions */</span>", 
"<span class=\"ts\"/>{0x0a, 0x02},<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Frame buffer mapping */</span>", 
"<span class=\"ts\"/>{0x0b, 0x01},<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* PCI burst write */</span>", 
"<span class=\"ts\"/>{0x40, 0x03},<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Memory access control */</span>", 
"<span class=\"ts\"/>{0x80, 0x82},<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Pixel pipeline configuration 0 */</span>", 
"<span class=\"ts\"/>{0x81, 0x12},<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Pixel pipeline configuration 1 */</span>", 
"<span class=\"ts\"/>{0x82, 0x08},<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Pixel pipeline configuration 2 */</span>", 
"", 
"<span class=\"ts\"/>{0xd0, 0x0f},", 
"<span class=\"ts\"/>{0xd1, 0x01},", 
"};", 
"", 
"static void <a class=\"id\" href=\"#__devinit\">__devinit</a> <a class=\"id\" href=\"#chips_hw_init\">chips_hw_init</a>(struct <a class=\"id\" href=\"#fb_info\">fb_info</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#chips_init_xr\">chips_init_xr</a>); ++<a class=\"id\" href=\"#i\">i</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_xr\">write_xr</a>(<a class=\"id\" href=\"#chips_init_xr\">chips_init_xr</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#chips_init_xr\">chips_init_xr</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_xr\">write_xr</a>(0x81, 0x12);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_xr\">write_xr</a>(0x82, 0x08);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_xr\">write_xr</a>(0x20, 0x00);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#chips_init_sr\">chips_init_sr</a>); ++<a class=\"id\" href=\"#i\">i</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_sr\">write_sr</a>(<a class=\"id\" href=\"#chips_init_sr\">chips_init_sr</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#chips_init_sr\">chips_init_sr</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#chips_init_gr\">chips_init_gr</a>); ++<a class=\"id\" href=\"#i\">i</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_gr\">write_gr</a>(<a class=\"id\" href=\"#chips_init_gr\">chips_init_gr</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#chips_init_gr\">chips_init_gr</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#chips_init_ar\">chips_init_ar</a>); ++<a class=\"id\" href=\"#i\">i</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_ar\">write_ar</a>(<a class=\"id\" href=\"#chips_init_ar\">chips_init_ar</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#chips_init_ar\">chips_init_ar</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Enable video output in attribute index register */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#writeb\">writeb</a>(0x20, <a class=\"id\" href=\"#mmio_base\">mmio_base</a> + 0x780);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#chips_init_cr\">chips_init_cr</a>); ++<a class=\"id\" href=\"#i\">i</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_cr\">write_cr</a>(<a class=\"id\" href=\"#chips_init_cr\">chips_init_cr</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#chips_init_cr\">chips_init_cr</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#chips_init_fr\">chips_init_fr</a>); ++<a class=\"id\" href=\"#i\">i</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_fr\">write_fr</a>(<a class=\"id\" href=\"#chips_init_fr\">chips_init_fr</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#chips_init_fr\">chips_init_fr</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#data\">data</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#fb_fix_screeninfo\">fb_fix_screeninfo</a> <a class=\"id\" href=\"#asiliantfb_fix\">asiliantfb_fix</a> <a class=\"id\" href=\"#__devinitdata\">__devinitdata</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#id\">id</a> =<span class=\"ts\"/><span class=\"ts\"/>\"Asiliant 69000\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#type\">type</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#FB_TYPE_PACKED_PIXELS\">FB_TYPE_PACKED_PIXELS</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#visual\">visual</a> =<span class=\"ts\"/><a class=\"id\" href=\"#FB_VISUAL_PSEUDOCOLOR\">FB_VISUAL_PSEUDOCOLOR</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#accel\">accel</a> =<span class=\"ts\"/><a class=\"id\" href=\"#FB_ACCEL_NONE\">FB_ACCEL_NONE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#line_length\">line_length</a> =<span class=\"ts\"/>640,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#smem_len\">smem_len</a> =<span class=\"ts\"/>0x200000,<span class=\"ts\"/><span class=\"comment\">/* 2MB */</span>", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#fb_var_screeninfo\">fb_var_screeninfo</a> <a class=\"id\" href=\"#asiliantfb_var\">asiliantfb_var</a> <a class=\"id\" href=\"#__devinitdata\">__devinitdata</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#xres\">xres</a> <span class=\"ts\"/><span class=\"ts\"/>= 640,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#yres\">yres</a> <span class=\"ts\"/><span class=\"ts\"/>= 480,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#xres_virtual\">xres_virtual</a> <span class=\"ts\"/>= 640,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#yres_virtual\">yres_virtual</a> <span class=\"ts\"/>= 480,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#bits_per_pixel\">bits_per_pixel</a> = 8,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#red\">red</a> <span class=\"ts\"/><span class=\"ts\"/>= { .<a class=\"id\" href=\"#length\">length</a> = 8 },", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#green\">green</a> <span class=\"ts\"/><span class=\"ts\"/>= { .<a class=\"id\" href=\"#length\">length</a> = 8 },", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#blue\">blue</a> <span class=\"ts\"/><span class=\"ts\"/>= { .<a class=\"id\" href=\"#length\">length</a> = 8 },", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#height\">height</a> <span class=\"ts\"/>= -1,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#width\">width</a> <span class=\"ts\"/><span class=\"ts\"/>= -1,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#vmode\">vmode</a> <span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#FB_VMODE_NONINTERLACED\">FB_VMODE_NONINTERLACED</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#pixclock\">pixclock</a> <span class=\"ts\"/>= 39722,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#left_margin\">left_margin</a> <span class=\"ts\"/>= 48,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#right_margin\">right_margin</a> <span class=\"ts\"/>= 16,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#upper_margin\">upper_margin</a> <span class=\"ts\"/>= 33,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#lower_margin\">lower_margin</a> <span class=\"ts\"/>= 10,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#hsync_len\">hsync_len</a> <span class=\"ts\"/>= 96,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#vsync_len\">vsync_len</a> <span class=\"ts\"/>= 2,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__devinit\">__devinit</a> <a class=\"id\" href=\"#init_asiliant\">init_asiliant</a>(struct <a class=\"id\" href=\"#fb_info\">fb_info</a> *<a class=\"id\" href=\"#p\">p</a>, unsigned long <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#fix\">fix</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#asiliantfb_fix\">asiliantfb_fix</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#fix\">fix</a>.<a class=\"id\" href=\"#smem_start\">smem_start</a><span class=\"ts\"/>= <a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#var\">var</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#asiliantfb_var\">asiliantfb_var</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#fbops\">fbops</a><span class=\"ts\"/><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#asiliantfb_ops\">asiliantfb_ops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#FBINFO_DEFAULT\">FBINFO_DEFAULT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#fb_alloc_cmap\">fb_alloc_cmap</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#cmap\">cmap</a>, 256, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"C&T 69000 fb failed to alloc cmap memory\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#register_framebuffer\">register_framebuffer</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"C&T 69000 framebuffer failed to register\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fb_dealloc_cmap\">fb_dealloc_cmap</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#cmap\">cmap</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"fb%d: Asiliant 69000 frame buffer (%dK RAM detected)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#fix\">fix</a>.<a class=\"id\" href=\"#smem_len\">smem_len</a> / 1024);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#writeb\">writeb</a>(0xff, <a class=\"id\" href=\"#mmio_base\">mmio_base</a> + 0x78c);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#chips_hw_init\">chips_hw_init</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__devinit\">__devinit</a>", 
"<a class=\"id\" href=\"#asiliantfb_pci_init\">asiliantfb_pci_init</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dp\">dp</a>, const struct <a class=\"id\" href=\"#pci_device_id\">pci_device_id</a> *<a class=\"id\" href=\"#ent\">ent</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fb_info\">fb_info</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#dp\">dp</a>-><a class=\"id\" href=\"#resource\">resource</a>[0].<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IORESOURCE_MEM\">IORESOURCE_MEM</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#pci_resource_start\">pci_resource_start</a>(<a class=\"id\" href=\"#dp\">dp</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#pci_resource_len\">pci_resource_len</a>(<a class=\"id\" href=\"#dp\">dp</a>, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr\">addr</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#request_mem_region\">request_mem_region</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#size\">size</a>, \"asiliantfb\"))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#framebuffer_alloc\">framebuffer_alloc</a>(sizeof(<a class=\"id\" href=\"#u32\">u32</a>) * 16, &amp;<a class=\"id\" href=\"#dp\">dp</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>)<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#release_mem_region\">release_mem_region</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#pseudo_palette\">pseudo_palette</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#par\">par</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#par\">par</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#screen_base\">screen_base</a> = <a class=\"id\" href=\"#ioremap\">ioremap</a>(<a class=\"id\" href=\"#addr\">addr</a>, 0x800000);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#screen_base\">screen_base</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#release_mem_region\">release_mem_region</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#framebuffer_release\">framebuffer_release</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_dword\">pci_write_config_dword</a>(<a class=\"id\" href=\"#dp\">dp</a>, 4, 0x02800083);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#writeb\">writeb</a>(3, <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#screen_base\">screen_base</a> + 0x400784);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#init_asiliant\">init_asiliant</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iounmap\">iounmap</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#screen_base\">screen_base</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#release_mem_region\">release_mem_region</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#framebuffer_release\">framebuffer_release</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_set_drvdata\">pci_set_drvdata</a>(<a class=\"id\" href=\"#dp\">dp</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__devexit\">__devexit</a> <a class=\"id\" href=\"#asiliantfb_remove\">asiliantfb_remove</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dp\">dp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fb_info\">fb_info</a> *<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#pci_get_drvdata\">pci_get_drvdata</a>(<a class=\"id\" href=\"#dp\">dp</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_framebuffer\">unregister_framebuffer</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fb_dealloc_cmap\">fb_dealloc_cmap</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#cmap\">cmap</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iounmap\">iounmap</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#screen_base\">screen_base</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_mem_region\">release_mem_region</a>(<a class=\"id\" href=\"#pci_resource_start\">pci_resource_start</a>(<a class=\"id\" href=\"#dp\">dp</a>, 0), <a class=\"id\" href=\"#pci_resource_len\">pci_resource_len</a>(<a class=\"id\" href=\"#dp\">dp</a>, 0));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_set_drvdata\">pci_set_drvdata</a>(<a class=\"id\" href=\"#dp\">dp</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#framebuffer_release\">framebuffer_release</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#pci_device_id\">pci_device_id</a> <a class=\"id\" href=\"#asiliantfb_pci_tbl\">asiliantfb_pci_tbl</a>[] <a class=\"id\" href=\"#__devinitdata\">__devinitdata</a> = {", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VENDOR_ID_CT\">PCI_VENDOR_ID_CT</a>, <a class=\"id\" href=\"#PCI_DEVICE_ID_CT_69000\">PCI_DEVICE_ID_CT_69000</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a> },", 
"<span class=\"ts\"/>{ 0 }", 
"};", 
"", 
"<a class=\"id\" href=\"#MODULE_DEVICE_TABLE\">MODULE_DEVICE_TABLE</a>(<a class=\"id\" href=\"#pci\">pci</a>, <a class=\"id\" href=\"#asiliantfb_pci_tbl\">asiliantfb_pci_tbl</a>);", 
"", 
"static struct <a class=\"id\" href=\"#pci_driver\">pci_driver</a> <a class=\"id\" href=\"#asiliantfb_driver\">asiliantfb_driver</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a> =<span class=\"ts\"/><span class=\"ts\"/>\"asiliantfb\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#id_table\">id_table</a> =<span class=\"ts\"/><a class=\"id\" href=\"#asiliantfb_pci_tbl\">asiliantfb_pci_tbl</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#probe\">probe</a> =<span class=\"ts\"/><a class=\"id\" href=\"#asiliantfb_pci_init\">asiliantfb_pci_init</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#remove\">remove</a> =<span class=\"ts\"/><a class=\"id\" href=\"#__devexit_p\">__devexit_p</a>(<a class=\"id\" href=\"#asiliantfb_remove\">asiliantfb_remove</a>),", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#asiliantfb_init\">asiliantfb_init</a>(void)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fb_get_options\">fb_get_options</a>(\"asiliantfb\", <a class=\"id\" href=\"#NULL\">NULL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pci_register_driver\">pci_register_driver</a>(&amp;<a class=\"id\" href=\"#asiliantfb_driver\">asiliantfb_driver</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#asiliantfb_init\">asiliantfb_init</a>);", 
"", 
"static void <a class=\"id\" href=\"#__exit\">__exit</a> <a class=\"id\" href=\"#asiliantfb_exit\">asiliantfb_exit</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_unregister_driver\">pci_unregister_driver</a>(&amp;<a class=\"id\" href=\"#asiliantfb_driver\">asiliantfb_driver</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
];
xr_frag_insert('l/8c/391a9a88f78d3e0dbc6f7b60e8252118903b16.xr', __xr_tmp);
