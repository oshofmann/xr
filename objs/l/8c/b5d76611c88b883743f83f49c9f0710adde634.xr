var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * NetLabel Domain Hash Table</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file manages the domain hash table that NetLabel uses to determine</span>", 
"<span class=\"comment\"> * which network labeling protocol to use for a given domain.  The NetLabel</span>", 
"<span class=\"comment\"> * system manages static and dynamic label mappings for network protocols such</span>", 
"<span class=\"comment\"> * as CIPSO and RIPSO.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Author: Paul Moore &lt;paul.moore@hp.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * (c) Copyright Hewlett-Packard Development Company, L.P., 2006, 2008</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software;  you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> * it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> * the Free Software Foundation; either version 2 of the License, or</span>", 
"<span class=\"comment\"> * (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\"> * but WITHOUT ANY WARRANTY;  without even the implied warranty of</span>", 
"<span class=\"comment\"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See</span>", 
"<span class=\"comment\"> * the GNU General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\"> * along with this program;  if not, write to the Free Software</span>", 
"<span class=\"comment\"> * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rculist\">rculist</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#skbuff\">skbuff</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#audit\">audit</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#netlabel\">netlabel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#cipso_ipv4\">cipso_ipv4</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#bug\">bug</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"netlabel_mgmt.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"netlabel_addrlist.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"netlabel_domainhash.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"netlabel_user.h\"", 
"", 
"struct <a class=\"id\" href=\"#netlbl_domhsh_tbl\">netlbl_domhsh_tbl</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#tbl\">tbl</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#size\">size</a>;", 
"};", 
"", 
"<span class=\"comment\">/* Domain hash table */</span>", 
"<span class=\"comment\">/* updates should be so rare that having one spinlock for the entire hash table</span>", 
"<span class=\"comment\"> * should be okay */</span>", 
"static <a class=\"id\" href=\"#DEFINE_SPINLOCK\">DEFINE_SPINLOCK</a>(<a class=\"id\" href=\"#netlbl_domhsh_lock\">netlbl_domhsh_lock</a>);", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#netlbl_domhsh_rcu_deref\">netlbl_domhsh_rcu_deref</a>(<a class=\"id\" href=\"#p\">p</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_dereference_check\">rcu_dereference_check</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#rcu_read_lock_held\">rcu_read_lock_held</a>() || \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#lockdep_is_held\">lockdep_is_held</a>(&amp;<a class=\"id\" href=\"#netlbl_domhsh_lock\">netlbl_domhsh_lock</a>))", 
"static struct <a class=\"id\" href=\"#netlbl_domhsh_tbl\">netlbl_domhsh_tbl</a> *<a class=\"id\" href=\"#netlbl_domhsh\">netlbl_domhsh</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"static struct <a class=\"id\" href=\"#netlbl_dom_map\">netlbl_dom_map</a> *<a class=\"id\" href=\"#netlbl_domhsh_def\">netlbl_domhsh_def</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Domain Hash Table Helper Functions</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * netlbl_domhsh_free_entry - Frees a domain hash table entry</span>", 
"<span class=\"comment\"> * @entry: the entry's RCU field</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * This function is designed to be used as a callback to the call_rcu()</span>", 
"<span class=\"comment\"> * function so that the memory allocated to a hash table entry can be released</span>", 
"<span class=\"comment\"> * safely.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#netlbl_domhsh_free_entry\">netlbl_domhsh_free_entry</a>(struct <a class=\"id\" href=\"#rcu_head\">rcu_head</a> *<a class=\"id\" href=\"#entry\">entry</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlbl_dom_map\">netlbl_dom_map</a> *<a class=\"id\" href=\"#ptr\">ptr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlbl_af4list\">netlbl_af4list</a> *<a class=\"id\" href=\"#iter4\">iter4</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlbl_af4list\">netlbl_af4list</a> *<a class=\"id\" href=\"#tmp4\">tmp4</a>;", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6\">CONFIG_IPV6</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MODULE\">CONFIG_IPV6_MODULE</a>)", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlbl_af6list\">netlbl_af6list</a> *<a class=\"id\" href=\"#iter6\">iter6</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlbl_af6list\">netlbl_af6list</a> *<a class=\"id\" href=\"#tmp6\">tmp6</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* IPv6 */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ptr\">ptr</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#entry\">entry</a>, struct <a class=\"id\" href=\"#netlbl_dom_map\">netlbl_dom_map</a>, <a class=\"id\" href=\"#rcu\">rcu</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#NETLBL_NLTYPE_ADDRSELECT\">NETLBL_NLTYPE_ADDRSELECT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netlbl_af4list_foreach_safe\">netlbl_af4list_foreach_safe</a>(<a class=\"id\" href=\"#iter4\">iter4</a>, <a class=\"id\" href=\"#tmp4\">tmp4</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    &amp;<a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#type_def\">type_def</a>.<a class=\"id\" href=\"#addrsel\">addrsel</a>-><a class=\"id\" href=\"#list4\">list4</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netlbl_af4list_remove_entry\">netlbl_af4list_remove_entry</a>(<a class=\"id\" href=\"#iter4\">iter4</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#netlbl_domhsh_addr4_entry\">netlbl_domhsh_addr4_entry</a>(<a class=\"id\" href=\"#iter4\">iter4</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6\">CONFIG_IPV6</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MODULE\">CONFIG_IPV6_MODULE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netlbl_af6list_foreach_safe\">netlbl_af6list_foreach_safe</a>(<a class=\"id\" href=\"#iter6\">iter6</a>, <a class=\"id\" href=\"#tmp6\">tmp6</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    &amp;<a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#type_def\">type_def</a>.<a class=\"id\" href=\"#addrsel\">addrsel</a>-><a class=\"id\" href=\"#list6\">list6</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netlbl_af6list_remove_entry\">netlbl_af6list_remove_entry</a>(<a class=\"id\" href=\"#iter6\">iter6</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#netlbl_domhsh_addr6_entry\">netlbl_domhsh_addr6_entry</a>(<a class=\"id\" href=\"#iter6\">iter6</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* IPv6 */</span>", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#domain\">domain</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ptr\">ptr</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * netlbl_domhsh_hash - Hashing function for the domain hash table</span>", 
"<span class=\"comment\"> * @domain: the domain name to hash</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * This is the hashing function for the domain hash table, it returns the</span>", 
"<span class=\"comment\"> * correct bucket number for the domain.  The caller is responsibile for</span>", 
"<span class=\"comment\"> * ensuring that the hash table is protected with either a RCU read lock or the</span>", 
"<span class=\"comment\"> * hash table lock.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#netlbl_domhsh_hash\">netlbl_domhsh_hash</a>(const char *<a class=\"id\" href=\"#key\">key</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#iter\">iter</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* This is taken (with slight modification) from</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * security/selinux/ss/symtab.c:symhash() */</span>", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#iter\">iter</a> = 0, <a class=\"id\" href=\"#val\">val</a> = 0, <a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#key\">key</a>); <a class=\"id\" href=\"#iter\">iter</a> &lt; <a class=\"id\" href=\"#len\">len</a>; <a class=\"id\" href=\"#iter\">iter</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = (<a class=\"id\" href=\"#val\">val</a> << 4 | (<a class=\"id\" href=\"#val\">val</a> >> (8 * sizeof(<a class=\"id\" href=\"#u32\">u32</a>) - 4))) ^ <a class=\"id\" href=\"#key\">key</a>[<a class=\"id\" href=\"#iter\">iter</a>];", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#val\">val</a> &amp; (<a class=\"id\" href=\"#netlbl_domhsh_rcu_deref\">netlbl_domhsh_rcu_deref</a>(<a class=\"id\" href=\"#netlbl_domhsh\">netlbl_domhsh</a>)-><a class=\"id\" href=\"#size\">size</a> - 1);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * netlbl_domhsh_search - Search for a domain entry</span>", 
"<span class=\"comment\"> * @domain: the domain</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * Searches the domain hash table and returns a pointer to the hash table</span>", 
"<span class=\"comment\"> * entry if found, otherwise NULL is returned.  The caller is responsibile for</span>", 
"<span class=\"comment\"> * ensuring that the hash table is protected with either a RCU read lock or the</span>", 
"<span class=\"comment\"> * hash table lock.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#netlbl_dom_map\">netlbl_dom_map</a> *<a class=\"id\" href=\"#netlbl_domhsh_search\">netlbl_domhsh_search</a>(const char *<a class=\"id\" href=\"#domain\">domain</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#bkt\">bkt</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#bkt_list\">bkt_list</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#netlbl_dom_map\">netlbl_dom_map</a> *<a class=\"id\" href=\"#iter\">iter</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#domain\">domain</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bkt\">bkt</a> = <a class=\"id\" href=\"#netlbl_domhsh_hash\">netlbl_domhsh_hash</a>(<a class=\"id\" href=\"#domain\">domain</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bkt_list\">bkt_list</a> = &amp;<a class=\"id\" href=\"#netlbl_domhsh_rcu_deref\">netlbl_domhsh_rcu_deref</a>(<a class=\"id\" href=\"#netlbl_domhsh\">netlbl_domhsh</a>)-><a class=\"id\" href=\"#tbl\">tbl</a>[<a class=\"id\" href=\"#bkt\">bkt</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_rcu\">list_for_each_entry_rcu</a>(<a class=\"id\" href=\"#iter\">iter</a>, <a class=\"id\" href=\"#bkt_list\">bkt_list</a>, <a class=\"id\" href=\"#list\">list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#valid\">valid</a> && <a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#domain\">domain</a>, <a class=\"id\" href=\"#domain\">domain</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#iter\">iter</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * netlbl_domhsh_search_def - Search for a domain entry</span>", 
"<span class=\"comment\"> * @domain: the domain</span>", 
"<span class=\"comment\"> * @def: return default if no match is found</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * Searches the domain hash table and returns a pointer to the hash table</span>", 
"<span class=\"comment\"> * entry if an exact match is found, if an exact match is not present in the</span>", 
"<span class=\"comment\"> * hash table then the default entry is returned if valid otherwise NULL is</span>", 
"<span class=\"comment\"> * returned.  The caller is responsibile ensuring that the hash table is</span>", 
"<span class=\"comment\"> * protected with either a RCU read lock or the hash table lock.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
];
xr_frag_insert('l/8c/b5d76611c88b883743f83f49c9f0710adde634.xr', __xr_tmp);
