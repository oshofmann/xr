var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#cpu_switch\">cpu_switch</a> = <a class=\"id\" href=\"#index\">index</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#cpu_port\">cpu_port</a> = <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#name\">name</a>, \"dsa\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#dsa_port_mask\">dsa_port_mask</a> |= 1 << <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#phys_port_mask\">phys_port_mask</a> |= 1 << <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the CPU connects to this switch, set the switch tree</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * tagging protocol to the preferred tagging format of this</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * switch.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#cpu_switch\">cpu_switch</a> == <a class=\"id\" href=\"#index\">index</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#tag_protocol\">tag_protocol</a> = <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#tag_protocol\">tag_protocol</a>;", 
"", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Do basic register setup.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#setup\">setup</a>(<a class=\"id\" href=\"#ds\">ds</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#set_addr\">set_addr</a>(<a class=\"id\" href=\"#ds\">ds</a>, <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#master_netdev\">master_netdev</a>-><a class=\"id\" href=\"#dev_addr\">dev_addr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#slave_mii_bus\">slave_mii_bus</a> = <a class=\"id\" href=\"#mdiobus_alloc\">mdiobus_alloc</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#slave_mii_bus\">slave_mii_bus</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dsa_slave_mii_bus_init\">dsa_slave_mii_bus_init</a>(<a class=\"id\" href=\"#ds\">ds</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#mdiobus_register\">mdiobus_register</a>(<a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#slave_mii_bus\">slave_mii_bus</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free\">out_free</a>;", 
"", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Create network devices for physical switch ports.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#DSA_MAX_PORTS\">DSA_MAX_PORTS</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#slave_dev\">slave_dev</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#phys_port_mask\">phys_port_mask</a> &amp; (1 << <a class=\"id\" href=\"#i\">i</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#slave_dev\">slave_dev</a> = <a class=\"id\" href=\"#dsa_slave_create\">dsa_slave_create</a>(<a class=\"id\" href=\"#ds\">ds</a>, <a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#port_names\">port_names</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#slave_dev\">slave_dev</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s[%d]: can't create dsa \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"slave device for port %d(%s)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#master_netdev\">master_netdev</a>-><a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#index\">index</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#port_names\">port_names</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#ports\">ports</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#slave_dev\">slave_dev</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ds\">ds</a>;", 
"", 
"<a class=\"id\" href=\"#out_free\">out_free</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mdiobus_free\">mdiobus_free</a>(<a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#slave_mii_bus\">slave_mii_bus</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ds\">ds</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#ret\">ret</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#dsa_switch_destroy\">dsa_switch_destroy</a>(struct <a class=\"id\" href=\"#dsa_switch\">dsa_switch</a> *<a class=\"id\" href=\"#ds\">ds</a>)", 
"{", 
"}", 
"", 
"", 
"<span class=\"comment\">/* hooks for ethertype-less tagging formats *********************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The original DSA tag format and some other tag formats have no</span>", 
"<span class=\"comment\"> * ethertype, which means that we need to add a little hack to the</span>", 
"<span class=\"comment\"> * networking receive path to make sure that received frames get</span>", 
"<span class=\"comment\"> * the right -&gt;protocol assigned to them when one of those tag</span>", 
"<span class=\"comment\"> * formats is in use.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#dsa_uses_dsa_tags\">dsa_uses_dsa_tags</a>(void *<a class=\"id\" href=\"#dsa_ptr\">dsa_ptr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dsa_switch_tree\">dsa_switch_tree</a> *<a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#dsa_ptr\">dsa_ptr</a>;", 
"", 
"<span class=\"ts\"/>return !!(<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#tag_protocol\">tag_protocol</a> == <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ETH_P_DSA\">ETH_P_DSA</a>));", 
"}", 
"", 
"<a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#dsa_uses_trailer_tags\">dsa_uses_trailer_tags</a>(void *<a class=\"id\" href=\"#dsa_ptr\">dsa_ptr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dsa_switch_tree\">dsa_switch_tree</a> *<a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#dsa_ptr\">dsa_ptr</a>;", 
"", 
"<span class=\"ts\"/>return !!(<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#tag_protocol\">tag_protocol</a> == <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ETH_P_TRAILER\">ETH_P_TRAILER</a>));", 
"}", 
"", 
"", 
"<span class=\"comment\">/* link polling *************************************************************/</span>", 
"static void <a class=\"id\" href=\"#dsa_link_poll_work\">dsa_link_poll_work</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#ugly\">ugly</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dsa_switch_tree\">dsa_switch_tree</a> *<a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#ugly\">ugly</a>, struct <a class=\"id\" href=\"#dsa_switch_tree\">dsa_switch_tree</a>, <a class=\"id\" href=\"#link_poll_work\">link_poll_work</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#nr_chips\">nr_chips</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#dsa_switch\">dsa_switch</a> *<a class=\"id\" href=\"#ds\">ds</a> = <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#ds\">ds</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ds\">ds</a> != <a class=\"id\" href=\"#NULL\">NULL</a> && <a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#poll_link\">poll_link</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ds\">ds</a>-><a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#poll_link\">poll_link</a>(<a class=\"id\" href=\"#ds\">ds</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mod_timer\">mod_timer</a>(&amp;<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#link_poll_timer\">link_poll_timer</a>, <a class=\"id\" href=\"#round_jiffies\">round_jiffies</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a> + <a class=\"id\" href=\"#HZ\">HZ</a>));", 
"}", 
"", 
"static void <a class=\"id\" href=\"#dsa_link_poll_timer\">dsa_link_poll_timer</a>(unsigned long <a class=\"id\" href=\"#_dst\">_dst</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dsa_switch_tree\">dsa_switch_tree</a> *<a class=\"id\" href=\"#dst\">dst</a> = (void *)<a class=\"id\" href=\"#_dst\">_dst</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#schedule_work\">schedule_work</a>(&amp;<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#link_poll_work\">link_poll_work</a>);", 
"}", 
"", 
"", 
"<span class=\"comment\">/* platform driver init and cleanup *****************************************/</span>", 
"static int <a class=\"id\" href=\"#dev_is_class\">dev_is_class</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, void *<a class=\"id\" href=\"#class\">class</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a> != <a class=\"id\" href=\"#NULL\">NULL</a> && !<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#class\">class</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev_find_class\">dev_find_class</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#parent\">parent</a>, char *<a class=\"id\" href=\"#class\">class</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev_is_class\">dev_is_class</a>(<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#class\">class</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_device\">get_device</a>(<a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#device_find_child\">device_find_child</a>(<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#class\">class</a>, <a class=\"id\" href=\"#dev_is_class\">dev_is_class</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#mii_bus\">mii_bus</a> *<a class=\"id\" href=\"#dev_to_mii_bus\">dev_to_mii_bus</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#d\">d</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#d\">d</a> = <a class=\"id\" href=\"#dev_find_class\">dev_find_class</a>(<a class=\"id\" href=\"#dev\">dev</a>, \"mdio_bus\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#d\">d</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#mii_bus\">mii_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a> = <a class=\"id\" href=\"#to_mii_bus\">to_mii_bus</a>(<a class=\"id\" href=\"#d\">d</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_device\">put_device</a>(<a class=\"id\" href=\"#d\">d</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#bus\">bus</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev_to_net_device\">dev_to_net_device</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#d\">d</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#d\">d</a> = <a class=\"id\" href=\"#dev_find_class\">dev_find_class</a>(<a class=\"id\" href=\"#dev\">dev</a>, \"net\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#d\">d</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#nd\">nd</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nd\">nd</a> = <a class=\"id\" href=\"#to_net_dev\">to_net_dev</a>(<a class=\"id\" href=\"#d\">d</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_hold\">dev_hold</a>(<a class=\"id\" href=\"#nd\">nd</a>);", 
];
xr_frag_insert('l/8d/180ee7b5d142c82f6b24c588cedea15f2d041c.xr', __xr_tmp);
