var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  ext4.h</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 1992, 1993, 1994, 1995</span>", 
"<span class=\"comment\"> * Remy Card (card@masi.ibp.fr)</span>", 
"<span class=\"comment\"> * Laboratoire MASI - Institut Blaise Pascal</span>", 
"<span class=\"comment\"> * Universite Pierre et Marie Curie (Paris VI)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  from</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  linux/include/linux/minix_fs.h</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 1991, 1992  Linus Torvalds</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_EXT4_H\">_EXT4_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_EXT4_H\">_EXT4_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blkdev\">blkdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#magic\">magic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jbd2\">jbd2</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#quota\">quota</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rwsem\">rwsem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rbtree\">rbtree</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seqlock\">seqlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mutex\">mutex</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#wait\">wait</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blockgroup_lock\">blockgroup_lock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#percpu_counter\">percpu_counter</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#compat\">compat</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The fourth extended filesystem constants/structures</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Define EXT4FS_DEBUG to produce debug messages</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#EXT4FS_DEBUG\">EXT4FS_DEBUG</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Debug code</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#EXT4FS_DEBUG\">EXT4FS_DEBUG</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ext4_debug\">ext4_debug</a>(<a class=\"id\" href=\"#f\">f</a>, <a class=\"id\" href=\"#a\">a</a>...)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"EXT4-fs DEBUG (%s, %d): %s:\",<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__FILE__\">__FILE__</a>, <a class=\"id\" href=\"#__LINE__\">__LINE__</a>, <a class=\"id\" href=\"#__func__\">__func__</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> <a class=\"id\" href=\"#f\">f</a>, ## <a class=\"id\" href=\"#a\">a</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>} while (0)", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ext4_debug\">ext4_debug</a>(<a class=\"id\" href=\"#f\">f</a>, <a class=\"id\" href=\"#a\">a</a>...)<span class=\"ts\"/>do {} while (0)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_ERROR_INODE\">EXT4_ERROR_INODE</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#a\">a</a>...) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_error_inode\">ext4_error_inode</a>((<a class=\"id\" href=\"#inode\">inode</a>), <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#__LINE__\">__LINE__</a>, 0, (<a class=\"id\" href=\"#fmt\">fmt</a>), ## <a class=\"id\" href=\"#a\">a</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_ERROR_INODE_BLOCK\">EXT4_ERROR_INODE_BLOCK</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#block\">block</a>, <a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#a\">a</a>...)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_error_inode\">ext4_error_inode</a>((<a class=\"id\" href=\"#inode\">inode</a>), <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#__LINE__\">__LINE__</a>, (<a class=\"id\" href=\"#block\">block</a>), (<a class=\"id\" href=\"#fmt\">fmt</a>), ## <a class=\"id\" href=\"#a\">a</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_ERROR_FILE\">EXT4_ERROR_FILE</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#a\">a</a>...)<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_error_file\">ext4_error_file</a>(<a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#__LINE__\">__LINE__</a>, (<a class=\"id\" href=\"#file\">file</a>), (<a class=\"id\" href=\"#fmt\">fmt</a>), ## <a class=\"id\" href=\"#a\">a</a>)", 
"", 
"<span class=\"comment\">/* data type for block offset of block group */</span>", 
"typedef int <a class=\"id\" href=\"#ext4_grpblk_t\">ext4_grpblk_t</a>;", 
"", 
"<span class=\"comment\">/* data type for filesystem-wide blocks number */</span>", 
"typedef unsigned long long <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a>;", 
"", 
"<span class=\"comment\">/* data type for file logical block number */</span>", 
"typedef <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a>;", 
"", 
"<span class=\"comment\">/* data type for block group number */</span>", 
"typedef unsigned int <a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Flags used in mballoc's allocation_context flags field.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Also used to show what's going on for debugging purposes when the</span>", 
"<span class=\"comment\"> * flag field is exported via the traceport interface</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/* prefer goal again. length */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MB_HINT_MERGE\">EXT4_MB_HINT_MERGE</a><span class=\"ts\"/><span class=\"ts\"/>0x0001", 
"<span class=\"comment\">/* blocks already reserved */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MB_HINT_RESERVED\">EXT4_MB_HINT_RESERVED</a><span class=\"ts\"/><span class=\"ts\"/>0x0002", 
"<span class=\"comment\">/* metadata is being allocated */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MB_HINT_METADATA\">EXT4_MB_HINT_METADATA</a><span class=\"ts\"/><span class=\"ts\"/>0x0004", 
"<span class=\"comment\">/* first blocks in the file */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MB_HINT_FIRST\">EXT4_MB_HINT_FIRST</a><span class=\"ts\"/><span class=\"ts\"/>0x0008", 
"<span class=\"comment\">/* search for the best chunk */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MB_HINT_BEST\">EXT4_MB_HINT_BEST</a><span class=\"ts\"/><span class=\"ts\"/>0x0010", 
"<span class=\"comment\">/* data is being allocated */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MB_HINT_DATA\">EXT4_MB_HINT_DATA</a><span class=\"ts\"/><span class=\"ts\"/>0x0020", 
"<span class=\"comment\">/* don't preallocate (for tails) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MB_HINT_NOPREALLOC\">EXT4_MB_HINT_NOPREALLOC</a><span class=\"ts\"/><span class=\"ts\"/>0x0040", 
"<span class=\"comment\">/* allocate for locality group */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MB_HINT_GROUP_ALLOC\">EXT4_MB_HINT_GROUP_ALLOC</a><span class=\"ts\"/>0x0080", 
"<span class=\"comment\">/* allocate goal blocks or none */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MB_HINT_GOAL_ONLY\">EXT4_MB_HINT_GOAL_ONLY</a><span class=\"ts\"/><span class=\"ts\"/>0x0100", 
"<span class=\"comment\">/* goal is meaningful */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MB_HINT_TRY_GOAL\">EXT4_MB_HINT_TRY_GOAL</a><span class=\"ts\"/><span class=\"ts\"/>0x0200", 
"<span class=\"comment\">/* blocks already pre-reserved by delayed allocation */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MB_DELALLOC_RESERVED\">EXT4_MB_DELALLOC_RESERVED</a><span class=\"ts\"/>0x0400", 
"<span class=\"comment\">/* We are doing stream allocation */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MB_STREAM_ALLOC\">EXT4_MB_STREAM_ALLOC</a><span class=\"ts\"/><span class=\"ts\"/>0x0800", 
"", 
"", 
"struct <a class=\"id\" href=\"#ext4_allocation_request\">ext4_allocation_request</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* target inode for block we're allocating */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* how many blocks we want to allocate */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* logical block in target inode */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#logical\">logical</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* the closest logical allocated block to the left */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#lleft\">lleft</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* the closest logical allocated block to the right */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#lright\">lright</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* phys. target (a hint) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#goal\">goal</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* phys. block for the closest logical allocated block to the left */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#pleft\">pleft</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* phys. block for the closest logical allocated block to the right */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#pright\">pright</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* flags. see above EXT4_MB_HINT_* */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#flags\">flags</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Logical to physical block mapping, used by ext4_map_blocks()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This structure is used to pass requests into ext4_map_blocks() as</span>", 
"<span class=\"comment\"> * well as to store the information returned by ext4_map_blocks().  It</span>", 
"<span class=\"comment\"> * takes less room on the stack than a struct buffer_head.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MAP_NEW\">EXT4_MAP_NEW</a><span class=\"ts\"/><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#BH_New\">BH_New</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MAP_MAPPED\">EXT4_MAP_MAPPED</a><span class=\"ts\"/><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#BH_Mapped\">BH_Mapped</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MAP_UNWRITTEN\">EXT4_MAP_UNWRITTEN</a><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#BH_Unwritten\">BH_Unwritten</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MAP_BOUNDARY\">EXT4_MAP_BOUNDARY</a><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#BH_Boundary\">BH_Boundary</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MAP_UNINIT\">EXT4_MAP_UNINIT</a><span class=\"ts\"/><span class=\"ts\"/>(1 << <a class=\"id\" href=\"#BH_Uninit\">BH_Uninit</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MAP_FLAGS\">EXT4_MAP_FLAGS</a><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#EXT4_MAP_NEW\">EXT4_MAP_NEW</a> | <a class=\"id\" href=\"#EXT4_MAP_MAPPED\">EXT4_MAP_MAPPED</a> |\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_MAP_UNWRITTEN\">EXT4_MAP_UNWRITTEN</a> | <a class=\"id\" href=\"#EXT4_MAP_BOUNDARY\">EXT4_MAP_BOUNDARY</a> |\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_MAP_UNINIT\">EXT4_MAP_UNINIT</a>)", 
"", 
"struct <a class=\"id\" href=\"#ext4_map_blocks\">ext4_map_blocks</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#m_pblk\">m_pblk</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#m_lblk\">m_lblk</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#m_len\">m_len</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#m_flags\">m_flags</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * For delayed allocation tracking</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#mpage_da_data\">mpage_da_data</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#b_blocknr\">b_blocknr</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* start block number of extent */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#b_size\">b_size</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* size of extent */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#b_state\">b_state</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* state of the extent */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#first_page\">first_page</a>, <a class=\"id\" href=\"#next_page\">next_page</a>;<span class=\"ts\"/><span class=\"comment\">/* extent of pages */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#writeback_control\">writeback_control</a> *<a class=\"id\" href=\"#wbc\">wbc</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#io_done\">io_done</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#pages_written\">pages_written</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"};", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_IO_UNWRITTEN\">EXT4_IO_UNWRITTEN</a><span class=\"ts\"/>0x1", 
"typedef struct <a class=\"id\" href=\"#ext4_io_end\">ext4_io_end</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#list\">list</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* per-file finished IO list */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#inode\">inode</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* file being written to */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flag\">flag</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* unwritten or not */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#page\">page</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* page struct for buffer write */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* offset in the file */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* size of the extent */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#work_struct\">work_struct</a><span class=\"ts\"/><a class=\"id\" href=\"#work\">work</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* data work queue */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kiocb\">kiocb</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#iocb\">iocb</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* iocb struct for AIO */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* error value for AIO */</span>", 
"} <a class=\"id\" href=\"#ext4_io_end_t\">ext4_io_end_t</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Special inodes numbers</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_BAD_INO\">EXT4_BAD_INO</a><span class=\"ts\"/><span class=\"ts\"/> 1<span class=\"ts\"/><span class=\"comment\">/* Bad blocks inode */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_ROOT_INO\">EXT4_ROOT_INO</a><span class=\"ts\"/><span class=\"ts\"/> 2<span class=\"ts\"/><span class=\"comment\">/* Root inode */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_BOOT_LOADER_INO\">EXT4_BOOT_LOADER_INO</a><span class=\"ts\"/> 5<span class=\"ts\"/><span class=\"comment\">/* Boot loader inode */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_UNDEL_DIR_INO\">EXT4_UNDEL_DIR_INO</a><span class=\"ts\"/> 6<span class=\"ts\"/><span class=\"comment\">/* Undelete directory inode */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_RESIZE_INO\">EXT4_RESIZE_INO</a><span class=\"ts\"/><span class=\"ts\"/> 7<span class=\"ts\"/><span class=\"comment\">/* Reserved group descriptors inode */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_JOURNAL_INO\">EXT4_JOURNAL_INO</a><span class=\"ts\"/> 8<span class=\"ts\"/><span class=\"comment\">/* Journal inode */</span>", 
"", 
"<span class=\"comment\">/* First non-reserved inode for old ext4 filesystems */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_GOOD_OLD_FIRST_INO\">EXT4_GOOD_OLD_FIRST_INO</a><span class=\"ts\"/>11", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Maximal count of links to a file</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_LINK_MAX\">EXT4_LINK_MAX</a><span class=\"ts\"/><span class=\"ts\"/>65000", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Macro-instructions used to manage several block sizes</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MIN_BLOCK_SIZE\">EXT4_MIN_BLOCK_SIZE</a><span class=\"ts\"/><span class=\"ts\"/>1024", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_MAX_BLOCK_SIZE\">EXT4_MAX_BLOCK_SIZE</a><span class=\"ts\"/><span class=\"ts\"/>65536", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MIN_BLOCK_LOG_SIZE\">EXT4_MIN_BLOCK_LOG_SIZE</a><span class=\"ts\"/><span class=\"ts\"/>10", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_BLOCK_SIZE\">EXT4_BLOCK_SIZE</a>(<a class=\"id\" href=\"#s\">s</a>)<span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#s\">s</a>)-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>)", 
"#else", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_BLOCK_SIZE\">EXT4_BLOCK_SIZE</a>(<a class=\"id\" href=\"#s\">s</a>)<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#EXT4_MIN_BLOCK_SIZE\">EXT4_MIN_BLOCK_SIZE</a> << (<a class=\"id\" href=\"#s\">s</a>)-><a class=\"id\" href=\"#s_log_block_size\">s_log_block_size</a>)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ADDR_PER_BLOCK\">EXT4_ADDR_PER_BLOCK</a>(<a class=\"id\" href=\"#s\">s</a>)<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#EXT4_BLOCK_SIZE\">EXT4_BLOCK_SIZE</a>(<a class=\"id\" href=\"#s\">s</a>) / sizeof(<a class=\"id\" href=\"#__u32\">__u32</a>))", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_BLOCK_SIZE_BITS\">EXT4_BLOCK_SIZE_BITS</a>(<a class=\"id\" href=\"#s\">s</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#s\">s</a>)-><a class=\"id\" href=\"#s_blocksize_bits\">s_blocksize_bits</a>)", 
"#else", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_BLOCK_SIZE_BITS\">EXT4_BLOCK_SIZE_BITS</a>(<a class=\"id\" href=\"#s\">s</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#s\">s</a>)-><a class=\"id\" href=\"#s_log_block_size\">s_log_block_size</a> + 10)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ADDR_PER_BLOCK_BITS\">EXT4_ADDR_PER_BLOCK_BITS</a>(<a class=\"id\" href=\"#s\">s</a>)<span class=\"ts\"/>(<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#s\">s</a>)-><a class=\"id\" href=\"#s_addr_per_block_bits\">s_addr_per_block_bits</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_INODE_SIZE\">EXT4_INODE_SIZE</a>(<a class=\"id\" href=\"#s\">s</a>)<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#s\">s</a>)-><a class=\"id\" href=\"#s_inode_size\">s_inode_size</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FIRST_INO\">EXT4_FIRST_INO</a>(<a class=\"id\" href=\"#s\">s</a>)<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#s\">s</a>)-><a class=\"id\" href=\"#s_first_ino\">s_first_ino</a>)", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_INODE_SIZE\">EXT4_INODE_SIZE</a>(<a class=\"id\" href=\"#s\">s</a>)<span class=\"ts\"/>(((<a class=\"id\" href=\"#s\">s</a>)-><a class=\"id\" href=\"#s_rev_level\">s_rev_level</a> == <a class=\"id\" href=\"#EXT4_GOOD_OLD_REV\">EXT4_GOOD_OLD_REV</a>) ? \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_GOOD_OLD_INODE_SIZE\">EXT4_GOOD_OLD_INODE_SIZE</a> : \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (<a class=\"id\" href=\"#s\">s</a>)-><a class=\"id\" href=\"#s_inode_size\">s_inode_size</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FIRST_INO\">EXT4_FIRST_INO</a>(<a class=\"id\" href=\"#s\">s</a>)<span class=\"ts\"/>(((<a class=\"id\" href=\"#s\">s</a>)-><a class=\"id\" href=\"#s_rev_level\">s_rev_level</a> == <a class=\"id\" href=\"#EXT4_GOOD_OLD_REV\">EXT4_GOOD_OLD_REV</a>) ? \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_GOOD_OLD_FIRST_INO\">EXT4_GOOD_OLD_FIRST_INO</a> : \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (<a class=\"id\" href=\"#s\">s</a>)-><a class=\"id\" href=\"#s_first_ino\">s_first_ino</a>)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_BLOCK_ALIGN\">EXT4_BLOCK_ALIGN</a>(<a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#blkbits\">blkbits</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ALIGN\">ALIGN</a>((<a class=\"id\" href=\"#size\">size</a>), (1 << (<a class=\"id\" href=\"#blkbits\">blkbits</a>)))", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Structure of a blocks group descriptor</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a>", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#bg_block_bitmap_lo\">bg_block_bitmap_lo</a>;<span class=\"ts\"/><span class=\"comment\">/* Blocks bitmap block */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#bg_inode_bitmap_lo\">bg_inode_bitmap_lo</a>;<span class=\"ts\"/><span class=\"comment\">/* Inodes bitmap block */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#bg_inode_table_lo\">bg_inode_table_lo</a>;<span class=\"ts\"/><span class=\"comment\">/* Inodes table block */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#bg_free_blocks_count_lo\">bg_free_blocks_count_lo</a>;<span class=\"comment\">/* Free blocks count */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#bg_free_inodes_count_lo\">bg_free_inodes_count_lo</a>;<span class=\"comment\">/* Free inodes count */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#bg_used_dirs_count_lo\">bg_used_dirs_count_lo</a>;<span class=\"ts\"/><span class=\"comment\">/* Directories count */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#bg_flags\">bg_flags</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* EXT4_BG_flags (INODE_UNINIT, etc) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#bg_reserved\">bg_reserved</a>[2];<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Likely block/inode bitmap checksum */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a>  <a class=\"id\" href=\"#bg_itable_unused_lo\">bg_itable_unused_lo</a>;<span class=\"ts\"/><span class=\"comment\">/* Unused inodes count */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a>  <a class=\"id\" href=\"#bg_checksum\">bg_checksum</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* crc16(sb_uuid+group+desc) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#bg_block_bitmap_hi\">bg_block_bitmap_hi</a>;<span class=\"ts\"/><span class=\"comment\">/* Blocks bitmap block MSB */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#bg_inode_bitmap_hi\">bg_inode_bitmap_hi</a>;<span class=\"ts\"/><span class=\"comment\">/* Inodes bitmap block MSB */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#bg_inode_table_hi\">bg_inode_table_hi</a>;<span class=\"ts\"/><span class=\"comment\">/* Inodes table block MSB */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#bg_free_blocks_count_hi\">bg_free_blocks_count_hi</a>;<span class=\"comment\">/* Free blocks count MSB */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#bg_free_inodes_count_hi\">bg_free_inodes_count_hi</a>;<span class=\"comment\">/* Free inodes count MSB */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#bg_used_dirs_count_hi\">bg_used_dirs_count_hi</a>;<span class=\"ts\"/><span class=\"comment\">/* Directories count MSB */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a>  <a class=\"id\" href=\"#bg_itable_unused_hi\">bg_itable_unused_hi</a>;    <span class=\"comment\">/* Unused inodes count MSB */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#bg_reserved2\">bg_reserved2</a>[3];", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Structure of a flex block group info</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#flex_groups\">flex_groups</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#free_inodes\">free_inodes</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#free_blocks\">free_blocks</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#used_dirs\">used_dirs</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_BG_INODE_UNINIT\">EXT4_BG_INODE_UNINIT</a><span class=\"ts\"/>0x0001 <span class=\"comment\">/* Inode table/bitmap not in use */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_BG_BLOCK_UNINIT\">EXT4_BG_BLOCK_UNINIT</a><span class=\"ts\"/>0x0002 <span class=\"comment\">/* Block bitmap not in use */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_BG_INODE_ZEROED\">EXT4_BG_INODE_ZEROED</a><span class=\"ts\"/>0x0004 <span class=\"comment\">/* On-disk itable initialized to zero */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Macro-instructions used to manage group descriptors</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MIN_DESC_SIZE\">EXT4_MIN_DESC_SIZE</a><span class=\"ts\"/><span class=\"ts\"/>32", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MIN_DESC_SIZE_64BIT\">EXT4_MIN_DESC_SIZE_64BIT</a><span class=\"ts\"/>64", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_MAX_DESC_SIZE\">EXT4_MAX_DESC_SIZE</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_MIN_BLOCK_SIZE\">EXT4_MIN_BLOCK_SIZE</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_DESC_SIZE\">EXT4_DESC_SIZE</a>(<a class=\"id\" href=\"#s\">s</a>)<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#s\">s</a>)-><a class=\"id\" href=\"#s_desc_size\">s_desc_size</a>)", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_BLOCKS_PER_GROUP\">EXT4_BLOCKS_PER_GROUP</a>(<a class=\"id\" href=\"#s\">s</a>)<span class=\"ts\"/>(<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#s\">s</a>)-><a class=\"id\" href=\"#s_blocks_per_group\">s_blocks_per_group</a>)", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_DESC_PER_BLOCK\">EXT4_DESC_PER_BLOCK</a>(<a class=\"id\" href=\"#s\">s</a>)<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#s\">s</a>)-><a class=\"id\" href=\"#s_desc_per_block\">s_desc_per_block</a>)", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_INODES_PER_GROUP\">EXT4_INODES_PER_GROUP</a>(<a class=\"id\" href=\"#s\">s</a>)<span class=\"ts\"/>(<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#s\">s</a>)-><a class=\"id\" href=\"#s_inodes_per_group\">s_inodes_per_group</a>)", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_DESC_PER_BLOCK_BITS\">EXT4_DESC_PER_BLOCK_BITS</a>(<a class=\"id\" href=\"#s\">s</a>)<span class=\"ts\"/>(<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#s\">s</a>)-><a class=\"id\" href=\"#s_desc_per_block_bits\">s_desc_per_block_bits</a>)", 
"#else", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_BLOCKS_PER_GROUP\">EXT4_BLOCKS_PER_GROUP</a>(<a class=\"id\" href=\"#s\">s</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#s\">s</a>)-><a class=\"id\" href=\"#s_blocks_per_group\">s_blocks_per_group</a>)", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_DESC_PER_BLOCK\">EXT4_DESC_PER_BLOCK</a>(<a class=\"id\" href=\"#s\">s</a>)<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#EXT4_BLOCK_SIZE\">EXT4_BLOCK_SIZE</a>(<a class=\"id\" href=\"#s\">s</a>) / <a class=\"id\" href=\"#EXT4_DESC_SIZE\">EXT4_DESC_SIZE</a>(<a class=\"id\" href=\"#s\">s</a>))", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_INODES_PER_GROUP\">EXT4_INODES_PER_GROUP</a>(<a class=\"id\" href=\"#s\">s</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#s\">s</a>)-><a class=\"id\" href=\"#s_inodes_per_group\">s_inodes_per_group</a>)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Constants relative to the data blocks</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_NDIR_BLOCKS\">EXT4_NDIR_BLOCKS</a><span class=\"ts\"/><span class=\"ts\"/>12", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_IND_BLOCK\">EXT4_IND_BLOCK</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_NDIR_BLOCKS\">EXT4_NDIR_BLOCKS</a>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_DIND_BLOCK\">EXT4_DIND_BLOCK</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#EXT4_IND_BLOCK\">EXT4_IND_BLOCK</a> + 1)", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_TIND_BLOCK\">EXT4_TIND_BLOCK</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#EXT4_DIND_BLOCK\">EXT4_DIND_BLOCK</a> + 1)", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_N_BLOCKS\">EXT4_N_BLOCKS</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#EXT4_TIND_BLOCK\">EXT4_TIND_BLOCK</a> + 1)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Inode flags</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_SECRM_FL\">EXT4_SECRM_FL</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0x00000001 <span class=\"comment\">/* Secure deletion */</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_UNRM_FL\">EXT4_UNRM_FL</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0x00000002 <span class=\"comment\">/* Undelete */</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_COMPR_FL\">EXT4_COMPR_FL</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0x00000004 <span class=\"comment\">/* Compress file */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_SYNC_FL\">EXT4_SYNC_FL</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0x00000008 <span class=\"comment\">/* Synchronous updates */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_IMMUTABLE_FL\">EXT4_IMMUTABLE_FL</a><span class=\"ts\"/><span class=\"ts\"/>0x00000010 <span class=\"comment\">/* Immutable file */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_APPEND_FL\">EXT4_APPEND_FL</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0x00000020 <span class=\"comment\">/* writes to file may only append */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_NODUMP_FL\">EXT4_NODUMP_FL</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0x00000040 <span class=\"comment\">/* do not dump file */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_NOATIME_FL\">EXT4_NOATIME_FL</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0x00000080 <span class=\"comment\">/* do not update atime */</span>", 
"<span class=\"comment\">/* Reserved for compression usage... */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_DIRTY_FL\">EXT4_DIRTY_FL</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0x00000100", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_COMPRBLK_FL\">EXT4_COMPRBLK_FL</a><span class=\"ts\"/><span class=\"ts\"/>0x00000200 <span class=\"comment\">/* One or more compressed clusters */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_NOCOMPR_FL\">EXT4_NOCOMPR_FL</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0x00000400 <span class=\"comment\">/* Don't compress */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_ECOMPR_FL\">EXT4_ECOMPR_FL</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0x00000800 <span class=\"comment\">/* Compression error */</span>", 
"<span class=\"comment\">/* End compression flags --- maybe not all used */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_INDEX_FL\">EXT4_INDEX_FL</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0x00001000 <span class=\"comment\">/* hash-indexed directory */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_IMAGIC_FL\">EXT4_IMAGIC_FL</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0x00002000 <span class=\"comment\">/* AFS directory */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_JOURNAL_DATA_FL\">EXT4_JOURNAL_DATA_FL</a><span class=\"ts\"/><span class=\"ts\"/>0x00004000 <span class=\"comment\">/* file data should be journaled */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_NOTAIL_FL\">EXT4_NOTAIL_FL</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0x00008000 <span class=\"comment\">/* file tail should not be merged */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_DIRSYNC_FL\">EXT4_DIRSYNC_FL</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0x00010000 <span class=\"comment\">/* dirsync behaviour (directories only) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_TOPDIR_FL\">EXT4_TOPDIR_FL</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0x00020000 <span class=\"comment\">/* Top of directory hierarchies*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_HUGE_FILE_FL\">EXT4_HUGE_FILE_FL</a>               0x00040000 <span class=\"comment\">/* Set to each huge file */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_EXTENTS_FL\">EXT4_EXTENTS_FL</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0x00080000 <span class=\"comment\">/* Inode uses extents */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_EA_INODE_FL\">EXT4_EA_INODE_FL</a><span class=\"ts\"/>        0x00200000 <span class=\"comment\">/* Inode used for large EA */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_EOFBLOCKS_FL\">EXT4_EOFBLOCKS_FL</a><span class=\"ts\"/><span class=\"ts\"/>0x00400000 <span class=\"comment\">/* Blocks allocated beyond EOF */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_RESERVED_FL\">EXT4_RESERVED_FL</a><span class=\"ts\"/><span class=\"ts\"/>0x80000000 <span class=\"comment\">/* reserved for ext4 lib */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FL_USER_VISIBLE\">EXT4_FL_USER_VISIBLE</a><span class=\"ts\"/><span class=\"ts\"/>0x004BDFFF <span class=\"comment\">/* User visible flags */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FL_USER_MODIFIABLE\">EXT4_FL_USER_MODIFIABLE</a><span class=\"ts\"/><span class=\"ts\"/>0x004B80FF <span class=\"comment\">/* User modifiable flags */</span>", 
"", 
"<span class=\"comment\">/* Flags that should be inherited by new inodes from their parent. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FL_INHERITED\">EXT4_FL_INHERITED</a> (<a class=\"id\" href=\"#EXT4_SECRM_FL\">EXT4_SECRM_FL</a> | <a class=\"id\" href=\"#EXT4_UNRM_FL\">EXT4_UNRM_FL</a> | <a class=\"id\" href=\"#EXT4_COMPR_FL\">EXT4_COMPR_FL</a> |\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#EXT4_SYNC_FL\">EXT4_SYNC_FL</a> | <a class=\"id\" href=\"#EXT4_IMMUTABLE_FL\">EXT4_IMMUTABLE_FL</a> | <a class=\"id\" href=\"#EXT4_APPEND_FL\">EXT4_APPEND_FL</a> |\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#EXT4_NODUMP_FL\">EXT4_NODUMP_FL</a> | <a class=\"id\" href=\"#EXT4_NOATIME_FL\">EXT4_NOATIME_FL</a> |\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#EXT4_NOCOMPR_FL\">EXT4_NOCOMPR_FL</a> | <a class=\"id\" href=\"#EXT4_JOURNAL_DATA_FL\">EXT4_JOURNAL_DATA_FL</a> |\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#EXT4_NOTAIL_FL\">EXT4_NOTAIL_FL</a> | <a class=\"id\" href=\"#EXT4_DIRSYNC_FL\">EXT4_DIRSYNC_FL</a>)", 
"", 
"<span class=\"comment\">/* Flags that are appropriate for regular files (all but dir-specific ones). */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_REG_FLMASK\">EXT4_REG_FLMASK</a> (~(<a class=\"id\" href=\"#EXT4_DIRSYNC_FL\">EXT4_DIRSYNC_FL</a> | <a class=\"id\" href=\"#EXT4_TOPDIR_FL\">EXT4_TOPDIR_FL</a>))", 
"", 
"<span class=\"comment\">/* Flags that are appropriate for non-directories/regular files. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_OTHER_FLMASK\">EXT4_OTHER_FLMASK</a> (<a class=\"id\" href=\"#EXT4_NODUMP_FL\">EXT4_NODUMP_FL</a> | <a class=\"id\" href=\"#EXT4_NOATIME_FL\">EXT4_NOATIME_FL</a>)", 
"", 
"<span class=\"comment\">/* Mask out flags that are inappropriate for the given type of inode. */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#ext4_mask_flags\">ext4_mask_flags</a>(<a class=\"id\" href=\"#umode_t\">umode_t</a> <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#S_ISDIR\">S_ISDIR</a>(<a class=\"id\" href=\"#mode\">mode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#S_ISREG\">S_ISREG</a>(<a class=\"id\" href=\"#mode\">mode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#EXT4_REG_FLMASK\">EXT4_REG_FLMASK</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#EXT4_OTHER_FLMASK\">EXT4_OTHER_FLMASK</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Inode flags used for atomic set/get</span>", 
"<span class=\"comment\"> */</span>", 
"enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_INODE_SECRM\">EXT4_INODE_SECRM</a><span class=\"ts\"/>= 0,<span class=\"ts\"/><span class=\"comment\">/* Secure deletion */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_INODE_UNRM\">EXT4_INODE_UNRM</a><span class=\"ts\"/><span class=\"ts\"/>= 1,<span class=\"ts\"/><span class=\"comment\">/* Undelete */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_INODE_COMPR\">EXT4_INODE_COMPR</a><span class=\"ts\"/>= 2,<span class=\"ts\"/><span class=\"comment\">/* Compress file */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_INODE_SYNC\">EXT4_INODE_SYNC</a><span class=\"ts\"/><span class=\"ts\"/>= 3,<span class=\"ts\"/><span class=\"comment\">/* Synchronous updates */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_INODE_IMMUTABLE\">EXT4_INODE_IMMUTABLE</a><span class=\"ts\"/>= 4,<span class=\"ts\"/><span class=\"comment\">/* Immutable file */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_INODE_APPEND\">EXT4_INODE_APPEND</a><span class=\"ts\"/>= 5,<span class=\"ts\"/><span class=\"comment\">/* writes to file may only append */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_INODE_NODUMP\">EXT4_INODE_NODUMP</a><span class=\"ts\"/>= 6,<span class=\"ts\"/><span class=\"comment\">/* do not dump file */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_INODE_NOATIME\">EXT4_INODE_NOATIME</a><span class=\"ts\"/>= 7,<span class=\"ts\"/><span class=\"comment\">/* do not update atime */</span>", 
"<span class=\"comment\">/* Reserved for compression usage... */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_INODE_DIRTY\">EXT4_INODE_DIRTY</a><span class=\"ts\"/>= 8,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_INODE_COMPRBLK\">EXT4_INODE_COMPRBLK</a><span class=\"ts\"/>= 9,<span class=\"ts\"/><span class=\"comment\">/* One or more compressed clusters */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_INODE_NOCOMPR\">EXT4_INODE_NOCOMPR</a><span class=\"ts\"/>= 10,<span class=\"ts\"/><span class=\"comment\">/* Don't compress */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_INODE_ECOMPR\">EXT4_INODE_ECOMPR</a><span class=\"ts\"/>= 11,<span class=\"ts\"/><span class=\"comment\">/* Compression error */</span>", 
"<span class=\"comment\">/* End compression flags --- maybe not all used */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_INODE_INDEX\">EXT4_INODE_INDEX</a><span class=\"ts\"/>= 12,<span class=\"ts\"/><span class=\"comment\">/* hash-indexed directory */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_INODE_IMAGIC\">EXT4_INODE_IMAGIC</a><span class=\"ts\"/>= 13,<span class=\"ts\"/><span class=\"comment\">/* AFS directory */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_INODE_JOURNAL_DATA\">EXT4_INODE_JOURNAL_DATA</a><span class=\"ts\"/>= 14,<span class=\"ts\"/><span class=\"comment\">/* file data should be journaled */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_INODE_NOTAIL\">EXT4_INODE_NOTAIL</a><span class=\"ts\"/>= 15,<span class=\"ts\"/><span class=\"comment\">/* file tail should not be merged */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_INODE_DIRSYNC\">EXT4_INODE_DIRSYNC</a><span class=\"ts\"/>= 16,<span class=\"ts\"/><span class=\"comment\">/* dirsync behaviour (directories only) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_INODE_TOPDIR\">EXT4_INODE_TOPDIR</a><span class=\"ts\"/>= 17,<span class=\"ts\"/><span class=\"comment\">/* Top of directory hierarchies*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_INODE_HUGE_FILE\">EXT4_INODE_HUGE_FILE</a><span class=\"ts\"/>= 18,<span class=\"ts\"/><span class=\"comment\">/* Set to each huge file */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_INODE_EXTENTS\">EXT4_INODE_EXTENTS</a><span class=\"ts\"/>= 19,<span class=\"ts\"/><span class=\"comment\">/* Inode uses extents */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_INODE_EA_INODE\">EXT4_INODE_EA_INODE</a><span class=\"ts\"/>= 21,<span class=\"ts\"/><span class=\"comment\">/* Inode used for large EA */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_INODE_EOFBLOCKS\">EXT4_INODE_EOFBLOCKS</a><span class=\"ts\"/>= 22,<span class=\"ts\"/><span class=\"comment\">/* Blocks allocated beyond EOF */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_INODE_RESERVED\">EXT4_INODE_RESERVED</a><span class=\"ts\"/>= 31,<span class=\"ts\"/><span class=\"comment\">/* reserved for ext4 lib */</span>", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TEST_FLAG_VALUE\">TEST_FLAG_VALUE</a>(<a class=\"id\" href=\"#FLAG\">FLAG</a>) (<a class=\"id\" href=\"#EXT4_\">EXT4_</a>##<a class=\"id\" href=\"#FLAG\">FLAG</a>##<a class=\"id\" href=\"#_FL\">_FL</a> == (1 << <a class=\"id\" href=\"#EXT4_INODE_\">EXT4_INODE_</a>##<a class=\"id\" href=\"#FLAG\">FLAG</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CHECK_FLAG_VALUE\">CHECK_FLAG_VALUE</a>(<a class=\"id\" href=\"#FLAG\">FLAG</a>) if (!<a class=\"id\" href=\"#TEST_FLAG_VALUE\">TEST_FLAG_VALUE</a>(<a class=\"id\" href=\"#FLAG\">FLAG</a>)) { \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_EMERG\">KERN_EMERG</a> \"EXT4 flag fail: \" #<a class=\"id\" href=\"#FLAG\">FLAG</a> \": %d %d\\n\", \\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_\">EXT4_</a>##<a class=\"id\" href=\"#FLAG\">FLAG</a>##<a class=\"id\" href=\"#_FL\">_FL</a>, <a class=\"id\" href=\"#EXT4_INODE_\">EXT4_INODE_</a>##<a class=\"id\" href=\"#FLAG\">FLAG</a>); <a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(1); }", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Since it's pretty easy to mix up bit numbers and hex values, and we</span>", 
"<span class=\"comment\"> * can't do a compile-time test for ENUM values, we use a run-time</span>", 
"<span class=\"comment\"> * test to make sure that EXT4_XXX_FL is consistent with respect to</span>", 
"<span class=\"comment\"> * EXT4_INODE_XXX.  If all is well the printk and BUG_ON will all drop</span>", 
"<span class=\"comment\"> * out so it won't cost any extra space in the compiled kernel image.</span>", 
"<span class=\"comment\"> * But it's important that these values are the same, since we are</span>", 
"<span class=\"comment\"> * using EXT4_INODE_XXX to test for the flag values, but EXT4_XX_FL</span>", 
"<span class=\"comment\"> * must be consistent with the values of FS_XXX_FL defined in</span>", 
"<span class=\"comment\"> * include/linux/fs.h and the on-disk values found in ext2, ext3, and</span>", 
"<span class=\"comment\"> * ext4 filesystems, and of course the values defined in e2fsprogs.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * It's not paranoia if the Murphy's Law really *is* out to get you.  :-)</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ext4_check_flag_values\">ext4_check_flag_values</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CHECK_FLAG_VALUE\">CHECK_FLAG_VALUE</a>(<a class=\"id\" href=\"#SECRM\">SECRM</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CHECK_FLAG_VALUE\">CHECK_FLAG_VALUE</a>(<a class=\"id\" href=\"#UNRM\">UNRM</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CHECK_FLAG_VALUE\">CHECK_FLAG_VALUE</a>(<a class=\"id\" href=\"#COMPR\">COMPR</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CHECK_FLAG_VALUE\">CHECK_FLAG_VALUE</a>(<a class=\"id\" href=\"#SYNC\">SYNC</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CHECK_FLAG_VALUE\">CHECK_FLAG_VALUE</a>(<a class=\"id\" href=\"#IMMUTABLE\">IMMUTABLE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CHECK_FLAG_VALUE\">CHECK_FLAG_VALUE</a>(<a class=\"id\" href=\"#APPEND\">APPEND</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CHECK_FLAG_VALUE\">CHECK_FLAG_VALUE</a>(<a class=\"id\" href=\"#NODUMP\">NODUMP</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CHECK_FLAG_VALUE\">CHECK_FLAG_VALUE</a>(<a class=\"id\" href=\"#NOATIME\">NOATIME</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CHECK_FLAG_VALUE\">CHECK_FLAG_VALUE</a>(<a class=\"id\" href=\"#DIRTY\">DIRTY</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CHECK_FLAG_VALUE\">CHECK_FLAG_VALUE</a>(<a class=\"id\" href=\"#COMPRBLK\">COMPRBLK</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CHECK_FLAG_VALUE\">CHECK_FLAG_VALUE</a>(<a class=\"id\" href=\"#NOCOMPR\">NOCOMPR</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CHECK_FLAG_VALUE\">CHECK_FLAG_VALUE</a>(<a class=\"id\" href=\"#ECOMPR\">ECOMPR</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CHECK_FLAG_VALUE\">CHECK_FLAG_VALUE</a>(<a class=\"id\" href=\"#INDEX\">INDEX</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CHECK_FLAG_VALUE\">CHECK_FLAG_VALUE</a>(<a class=\"id\" href=\"#IMAGIC\">IMAGIC</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CHECK_FLAG_VALUE\">CHECK_FLAG_VALUE</a>(<a class=\"id\" href=\"#JOURNAL_DATA\">JOURNAL_DATA</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CHECK_FLAG_VALUE\">CHECK_FLAG_VALUE</a>(<a class=\"id\" href=\"#NOTAIL\">NOTAIL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CHECK_FLAG_VALUE\">CHECK_FLAG_VALUE</a>(<a class=\"id\" href=\"#DIRSYNC\">DIRSYNC</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CHECK_FLAG_VALUE\">CHECK_FLAG_VALUE</a>(<a class=\"id\" href=\"#TOPDIR\">TOPDIR</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CHECK_FLAG_VALUE\">CHECK_FLAG_VALUE</a>(<a class=\"id\" href=\"#HUGE_FILE\">HUGE_FILE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CHECK_FLAG_VALUE\">CHECK_FLAG_VALUE</a>(<a class=\"id\" href=\"#EXTENTS\">EXTENTS</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CHECK_FLAG_VALUE\">CHECK_FLAG_VALUE</a>(<a class=\"id\" href=\"#EA_INODE\">EA_INODE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CHECK_FLAG_VALUE\">CHECK_FLAG_VALUE</a>(<a class=\"id\" href=\"#EOFBLOCKS\">EOFBLOCKS</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CHECK_FLAG_VALUE\">CHECK_FLAG_VALUE</a>(<a class=\"id\" href=\"#RESERVED\">RESERVED</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Used to pass group descriptor data when online resize is done */</span>", 
"struct <a class=\"id\" href=\"#ext4_new_group_input\">ext4_new_group_input</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#group\">group</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Group number for this data */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#block_bitmap\">block_bitmap</a>;<span class=\"ts\"/><span class=\"comment\">/* Absolute block number of block bitmap */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#inode_bitmap\">inode_bitmap</a>;<span class=\"ts\"/><span class=\"comment\">/* Absolute block number of inode bitmap */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#inode_table\">inode_table</a>;<span class=\"ts\"/><span class=\"comment\">/* Absolute block number of inode table start */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#blocks_count\">blocks_count</a>;<span class=\"ts\"/><span class=\"comment\">/* Total number of blocks in this group */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#reserved_blocks\">reserved_blocks</a>;<span class=\"ts\"/><span class=\"comment\">/* Number of reserved blocks in this group */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#unused\">unused</a>;", 
"};", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>) && <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>)", 
"struct <a class=\"id\" href=\"#compat_ext4_new_group_input\">compat_ext4_new_group_input</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#group\">group</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_u64\">compat_u64</a> <a class=\"id\" href=\"#block_bitmap\">block_bitmap</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_u64\">compat_u64</a> <a class=\"id\" href=\"#inode_bitmap\">inode_bitmap</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_u64\">compat_u64</a> <a class=\"id\" href=\"#inode_table\">inode_table</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#blocks_count\">blocks_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#reserved_blocks\">reserved_blocks</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#unused\">unused</a>;", 
"};", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/* The struct ext4_new_group_input in kernel space, with free_blocks_count */</span>", 
"struct <a class=\"id\" href=\"#ext4_new_group_data\">ext4_new_group_data</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#group\">group</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#block_bitmap\">block_bitmap</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#inode_bitmap\">inode_bitmap</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#inode_table\">inode_table</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#blocks_count\">blocks_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#reserved_blocks\">reserved_blocks</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#unused\">unused</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#free_blocks_count\">free_blocks_count</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Flags used by ext4_map_blocks()</span>", 
"<span class=\"comment\"> */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* Allocate any needed blocks and/or convert an unitialized</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   extent to be an initialized ext4 */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_GET_BLOCKS_CREATE\">EXT4_GET_BLOCKS_CREATE</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0x0001", 
"<span class=\"ts\"/><span class=\"comment\">/* Request the creation of an unitialized extent */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_GET_BLOCKS_UNINIT_EXT\">EXT4_GET_BLOCKS_UNINIT_EXT</a><span class=\"ts\"/><span class=\"ts\"/>0x0002", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_GET_BLOCKS_CREATE_UNINIT_EXT\">EXT4_GET_BLOCKS_CREATE_UNINIT_EXT</a><span class=\"ts\"/>(<a class=\"id\" href=\"#EXT4_GET_BLOCKS_UNINIT_EXT\">EXT4_GET_BLOCKS_UNINIT_EXT</a>|\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_GET_BLOCKS_CREATE\">EXT4_GET_BLOCKS_CREATE</a>)", 
"<span class=\"ts\"/><span class=\"comment\">/* Caller is from the delayed allocation writeout path,</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   so set the magic i_delalloc_reserve_flag after taking the</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   inode allocation semaphore for */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_GET_BLOCKS_DELALLOC_RESERVE\">EXT4_GET_BLOCKS_DELALLOC_RESERVE</a><span class=\"ts\"/>0x0004", 
"<span class=\"ts\"/><span class=\"comment\">/* caller is from the direct IO path, request to creation of an</span>", 
"<span class=\"comment\"><span class=\"ts\"/>unitialized extents if not allocated, split the uninitialized</span>", 
"<span class=\"comment\"><span class=\"ts\"/>extent if blocks has been preallocated already*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_GET_BLOCKS_PRE_IO\">EXT4_GET_BLOCKS_PRE_IO</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0x0008", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_GET_BLOCKS_CONVERT\">EXT4_GET_BLOCKS_CONVERT</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0x0010", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_GET_BLOCKS_IO_CREATE_EXT\">EXT4_GET_BLOCKS_IO_CREATE_EXT</a><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#EXT4_GET_BLOCKS_PRE_IO\">EXT4_GET_BLOCKS_PRE_IO</a>|\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_GET_BLOCKS_CREATE_UNINIT_EXT\">EXT4_GET_BLOCKS_CREATE_UNINIT_EXT</a>)", 
"<span class=\"ts\"/><span class=\"comment\">/* Convert extent to initialized after IO complete */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_GET_BLOCKS_IO_CONVERT_EXT\">EXT4_GET_BLOCKS_IO_CONVERT_EXT</a><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#EXT4_GET_BLOCKS_CONVERT\">EXT4_GET_BLOCKS_CONVERT</a>|\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_GET_BLOCKS_CREATE_UNINIT_EXT\">EXT4_GET_BLOCKS_CREATE_UNINIT_EXT</a>)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Flags used by ext4_free_blocks</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FREE_BLOCKS_METADATA\">EXT4_FREE_BLOCKS_METADATA</a><span class=\"ts\"/>0x0001", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FREE_BLOCKS_FORGET\">EXT4_FREE_BLOCKS_FORGET</a><span class=\"ts\"/><span class=\"ts\"/>0x0002", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FREE_BLOCKS_VALIDATED\">EXT4_FREE_BLOCKS_VALIDATED</a><span class=\"ts\"/>0x0004", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ioctl commands</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_IOC_GETFLAGS\">EXT4_IOC_GETFLAGS</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#FS_IOC_GETFLAGS\">FS_IOC_GETFLAGS</a>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_IOC_SETFLAGS\">EXT4_IOC_SETFLAGS</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#FS_IOC_SETFLAGS\">FS_IOC_SETFLAGS</a>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_IOC_GETVERSION\">EXT4_IOC_GETVERSION</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#_IOR\">_IOR</a>('f', 3, long)", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_IOC_SETVERSION\">EXT4_IOC_SETVERSION</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#_IOW\">_IOW</a>('f', 4, long)", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_IOC_GETVERSION_OLD\">EXT4_IOC_GETVERSION_OLD</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#FS_IOC_GETVERSION\">FS_IOC_GETVERSION</a>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_IOC_SETVERSION_OLD\">EXT4_IOC_SETVERSION_OLD</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#FS_IOC_SETVERSION\">FS_IOC_SETVERSION</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_JBD2_DEBUG\">CONFIG_JBD2_DEBUG</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_IOC_WAIT_FOR_READONLY\">EXT4_IOC_WAIT_FOR_READONLY</a><span class=\"ts\"/><a class=\"id\" href=\"#_IOR\">_IOR</a>('f', 99, long)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_IOC_GETRSVSZ\">EXT4_IOC_GETRSVSZ</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#_IOR\">_IOR</a>('f', 5, long)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_IOC_SETRSVSZ\">EXT4_IOC_SETRSVSZ</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#_IOW\">_IOW</a>('f', 6, long)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_IOC_GROUP_EXTEND\">EXT4_IOC_GROUP_EXTEND</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#_IOW\">_IOW</a>('f', 7, unsigned long)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_IOC_GROUP_ADD\">EXT4_IOC_GROUP_ADD</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#_IOW\">_IOW</a>('f', 8, struct <a class=\"id\" href=\"#ext4_new_group_input\">ext4_new_group_input</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_IOC_MIGRATE\">EXT4_IOC_MIGRATE</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#_IO\">_IO</a>('f', 9)", 
" <span class=\"comment\">/* note ioctl 10 reserved for an early version of the FIEMAP ioctl */</span>", 
" <span class=\"comment\">/* note ioctl 11 reserved for filesystem-independent FIEMAP ioctl */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_IOC_ALLOC_DA_BLKS\">EXT4_IOC_ALLOC_DA_BLKS</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#_IO\">_IO</a>('f', 12)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_IOC_MOVE_EXT\">EXT4_IOC_MOVE_EXT</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#_IOWR\">_IOWR</a>('f', 15, struct <a class=\"id\" href=\"#move_extent\">move_extent</a>)", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>) && <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>)", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ioctl commands in 32 bit emulation</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_IOC32_GETFLAGS\">EXT4_IOC32_GETFLAGS</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#FS_IOC32_GETFLAGS\">FS_IOC32_GETFLAGS</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_IOC32_SETFLAGS\">EXT4_IOC32_SETFLAGS</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#FS_IOC32_SETFLAGS\">FS_IOC32_SETFLAGS</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_IOC32_GETVERSION\">EXT4_IOC32_GETVERSION</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#_IOR\">_IOR</a>('f', 3, int)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_IOC32_SETVERSION\">EXT4_IOC32_SETVERSION</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#_IOW\">_IOW</a>('f', 4, int)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_IOC32_GETRSVSZ\">EXT4_IOC32_GETRSVSZ</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#_IOR\">_IOR</a>('f', 5, int)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_IOC32_SETRSVSZ\">EXT4_IOC32_SETRSVSZ</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#_IOW\">_IOW</a>('f', 6, int)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_IOC32_GROUP_EXTEND\">EXT4_IOC32_GROUP_EXTEND</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#_IOW\">_IOW</a>('f', 7, unsigned int)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_IOC32_GROUP_ADD\">EXT4_IOC32_GROUP_ADD</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#_IOW\">_IOW</a>('f', 8, struct <a class=\"id\" href=\"#compat_ext4_new_group_input\">compat_ext4_new_group_input</a>)", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_JBD2_DEBUG\">CONFIG_JBD2_DEBUG</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_IOC32_WAIT_FOR_READONLY\">EXT4_IOC32_WAIT_FOR_READONLY</a><span class=\"ts\"/><a class=\"id\" href=\"#_IOR\">_IOR</a>('f', 99, int)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_IOC32_GETVERSION_OLD\">EXT4_IOC32_GETVERSION_OLD</a><span class=\"ts\"/><a class=\"id\" href=\"#FS_IOC32_GETVERSION\">FS_IOC32_GETVERSION</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_IOC32_SETVERSION_OLD\">EXT4_IOC32_SETVERSION_OLD</a><span class=\"ts\"/><a class=\"id\" href=\"#FS_IOC32_SETVERSION\">FS_IOC32_SETVERSION</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  Mount options</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#ext4_mount_options\">ext4_mount_options</a> {", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uid_t\">uid_t</a> <a class=\"id\" href=\"#s_resuid\">s_resuid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gid_t\">gid_t</a> <a class=\"id\" href=\"#s_resgid\">s_resgid</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_commit_interval\">s_commit_interval</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#s_min_batch_time\">s_min_batch_time</a>, <a class=\"id\" href=\"#s_max_batch_time\">s_max_batch_time</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#s_jquota_fmt\">s_jquota_fmt</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>];", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"<span class=\"comment\">/* Max physical block we can addres w/o extents */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MAX_BLOCK_FILE_PHYS\">EXT4_MAX_BLOCK_FILE_PHYS</a><span class=\"ts\"/>0xFFFFFFFF", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Structure of an inode on the disk</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#ext4_inode\">ext4_inode</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#i_mode\">i_mode</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* File mode */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#i_uid\">i_uid</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Low 16 bits of Owner Uid */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#i_size_lo\">i_size_lo</a>;<span class=\"ts\"/><span class=\"comment\">/* Size in bytes */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#i_atime\">i_atime</a>;<span class=\"ts\"/><span class=\"comment\">/* Access time */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#i_ctime\">i_ctime</a>;<span class=\"ts\"/><span class=\"comment\">/* Inode Change time */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#i_mtime\">i_mtime</a>;<span class=\"ts\"/><span class=\"comment\">/* Modification time */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#i_dtime\">i_dtime</a>;<span class=\"ts\"/><span class=\"comment\">/* Deletion Time */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#i_gid\">i_gid</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Low 16 bits of Group Id */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#i_links_count\">i_links_count</a>;<span class=\"ts\"/><span class=\"comment\">/* Links count */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#i_blocks_lo\">i_blocks_lo</a>;<span class=\"ts\"/><span class=\"comment\">/* Blocks count */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#i_flags\">i_flags</a>;<span class=\"ts\"/><span class=\"comment\">/* File flags */</span>", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a>  <a class=\"id\" href=\"#l_i_version\">l_i_version</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#linux1\">linux1</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a>  <a class=\"id\" href=\"#h_i_translator\">h_i_translator</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#hurd1\">hurd1</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a>  <a class=\"id\" href=\"#m_i_reserved1\">m_i_reserved1</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#masix1\">masix1</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#osd1\">osd1</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* OS dependent 1 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#i_block\">i_block</a>[<a class=\"id\" href=\"#EXT4_N_BLOCKS\">EXT4_N_BLOCKS</a>];<span class=\"comment\">/* Pointers to blocks */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#i_generation\">i_generation</a>;<span class=\"ts\"/><span class=\"comment\">/* File version (for NFS) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#i_file_acl_lo\">i_file_acl_lo</a>;<span class=\"ts\"/><span class=\"comment\">/* File ACL */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#i_size_high\">i_size_high</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#i_obso_faddr\">i_obso_faddr</a>;<span class=\"ts\"/><span class=\"comment\">/* Obsoleted fragment address */</span>", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#l_i_blocks_high\">l_i_blocks_high</a>; <span class=\"comment\">/* were l_i_reserved1 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#l_i_file_acl_high\">l_i_file_acl_high</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#l_i_uid_high\">l_i_uid_high</a>;<span class=\"ts\"/><span class=\"comment\">/* these 2 fields */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#l_i_gid_high\">l_i_gid_high</a>;<span class=\"ts\"/><span class=\"comment\">/* were reserved2[0] */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#l_i_reserved2\">l_i_reserved2</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#linux2\">linux2</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#h_i_reserved1\">h_i_reserved1</a>;<span class=\"ts\"/><span class=\"comment\">/* Obsoleted fragment number/size which are removed in ext4 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><a class=\"id\" href=\"#h_i_mode_high\">h_i_mode_high</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><a class=\"id\" href=\"#h_i_uid_high\">h_i_uid_high</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><a class=\"id\" href=\"#h_i_gid_high\">h_i_gid_high</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#h_i_author\">h_i_author</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#hurd2\">hurd2</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#h_i_reserved1\">h_i_reserved1</a>;<span class=\"ts\"/><span class=\"comment\">/* Obsoleted fragment number/size which are removed in ext4 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#m_i_file_acl_high\">m_i_file_acl_high</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#m_i_reserved2\">m_i_reserved2</a>[2];", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#masix2\">masix2</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#osd2\">osd2</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* OS dependent 2 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#i_extra_isize\">i_extra_isize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#i_pad1\">i_pad1</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a>  <a class=\"id\" href=\"#i_ctime_extra\">i_ctime_extra</a>;  <span class=\"comment\">/* extra Change time      (nsec &lt;&lt; 2 | epoch) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a>  <a class=\"id\" href=\"#i_mtime_extra\">i_mtime_extra</a>;  <span class=\"comment\">/* extra Modification time(nsec &lt;&lt; 2 | epoch) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a>  <a class=\"id\" href=\"#i_atime_extra\">i_atime_extra</a>;  <span class=\"comment\">/* extra Access time      (nsec &lt;&lt; 2 | epoch) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a>  <a class=\"id\" href=\"#i_crtime\">i_crtime</a>;       <span class=\"comment\">/* File Creation time */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a>  <a class=\"id\" href=\"#i_crtime_extra\">i_crtime_extra</a>; <span class=\"comment\">/* extra FileCreationtime (nsec &lt;&lt; 2 | epoch) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a>  <a class=\"id\" href=\"#i_version_hi\">i_version_hi</a>;<span class=\"ts\"/><span class=\"comment\">/* high 32 bits for 64-bit version */</span>", 
"};", 
"", 
"struct <a class=\"id\" href=\"#move_extent\">move_extent</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#reserved\">reserved</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* should be zero */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#donor_fd\">donor_fd</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* donor file descriptor */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#orig_start\">orig_start</a>;<span class=\"ts\"/><span class=\"comment\">/* logical start offset in block for orig */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#donor_start\">donor_start</a>;<span class=\"ts\"/><span class=\"comment\">/* logical start offset in block for donor */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#len\">len</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* block length to be moved */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#moved_len\">moved_len</a>;<span class=\"ts\"/><span class=\"comment\">/* moved block length */</span>", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_EPOCH_BITS\">EXT4_EPOCH_BITS</a> 2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_EPOCH_MASK\">EXT4_EPOCH_MASK</a> ((1 << <a class=\"id\" href=\"#EXT4_EPOCH_BITS\">EXT4_EPOCH_BITS</a>) - 1)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_NSEC_MASK\">EXT4_NSEC_MASK</a>  (~0UL << <a class=\"id\" href=\"#EXT4_EPOCH_BITS\">EXT4_EPOCH_BITS</a>)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Extended fields will fit into an inode if the filesystem was formatted</span>", 
"<span class=\"comment\"> * with large inodes (-I 256 or larger) and there are not currently any EAs</span>", 
"<span class=\"comment\"> * consuming all of the available space. For new inodes we always reserve</span>", 
"<span class=\"comment\"> * enough space for the kernel's known extended fields, but for inodes</span>", 
"<span class=\"comment\"> * created with an old kernel this might not have been the case. None of</span>", 
"<span class=\"comment\"> * the extended inode fields is critical for correct filesystem operation.</span>", 
"<span class=\"comment\"> * This macro checks if a certain field fits in the inode. Note that</span>", 
"<span class=\"comment\"> * inode-size = GOOD_OLD_INODE_SIZE + i_extra_isize</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FITS_IN_INODE\">EXT4_FITS_IN_INODE</a>(<a class=\"id\" href=\"#ext4_inode\">ext4_inode</a>, <a class=\"id\" href=\"#einode\">einode</a>, <a class=\"id\" href=\"#field\">field</a>)<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>((<a class=\"id\" href=\"#offsetof\">offsetof</a>(<a class=\"id\" href=\"#typeof\">typeof</a>(*<a class=\"id\" href=\"#ext4_inode\">ext4_inode</a>), <a class=\"id\" href=\"#field\">field</a>) +<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>  sizeof((<a class=\"id\" href=\"#ext4_inode\">ext4_inode</a>)-><a class=\"id\" href=\"#field\">field</a>))<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><= (<a class=\"id\" href=\"#EXT4_GOOD_OLD_INODE_SIZE\">EXT4_GOOD_OLD_INODE_SIZE</a> +<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#einode\">einode</a>)-><a class=\"id\" href=\"#i_extra_isize\">i_extra_isize</a>))<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#__le32\">__le32</a> <a class=\"id\" href=\"#ext4_encode_extra_time\">ext4_encode_extra_time</a>(struct <a class=\"id\" href=\"#timespec\">timespec</a> *<a class=\"id\" href=\"#time\">time</a>)", 
"{", 
"       return <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>((sizeof(<a class=\"id\" href=\"#time\">time</a>-><a class=\"id\" href=\"#tv_sec\">tv_sec</a>) &gt; 4 ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (<a class=\"id\" href=\"#time\">time</a>-><a class=\"id\" href=\"#tv_sec\">tv_sec</a> >> 32) &amp; <a class=\"id\" href=\"#EXT4_EPOCH_MASK\">EXT4_EPOCH_MASK</a> : 0) |", 
"                          ((<a class=\"id\" href=\"#time\">time</a>-><a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> << <a class=\"id\" href=\"#EXT4_EPOCH_BITS\">EXT4_EPOCH_BITS</a>) &amp; <a class=\"id\" href=\"#EXT4_NSEC_MASK\">EXT4_NSEC_MASK</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ext4_decode_extra_time\">ext4_decode_extra_time</a>(struct <a class=\"id\" href=\"#timespec\">timespec</a> *<a class=\"id\" href=\"#time\">time</a>, <a class=\"id\" href=\"#__le32\">__le32</a> <a class=\"id\" href=\"#extra\">extra</a>)", 
"{", 
"       if (sizeof(<a class=\"id\" href=\"#time\">time</a>-><a class=\"id\" href=\"#tv_sec\">tv_sec</a>) &gt; 4)", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#time\">time</a>-><a class=\"id\" href=\"#tv_sec\">tv_sec</a> |= (<a class=\"id\" href=\"#__u64\">__u64</a>)(<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#extra\">extra</a>) &amp; <a class=\"id\" href=\"#EXT4_EPOCH_MASK\">EXT4_EPOCH_MASK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       << 32;", 
"       <a class=\"id\" href=\"#time\">time</a>-><a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> = (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#extra\">extra</a>) &amp; <a class=\"id\" href=\"#EXT4_NSEC_MASK\">EXT4_NSEC_MASK</a>) >> <a class=\"id\" href=\"#EXT4_EPOCH_BITS\">EXT4_EPOCH_BITS</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_INODE_SET_XTIME\">EXT4_INODE_SET_XTIME</a>(<a class=\"id\" href=\"#xtime\">xtime</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#raw_inode\">raw_inode</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \\", 
"do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \\", 
"<span class=\"ts\"/>(<a class=\"id\" href=\"#raw_inode\">raw_inode</a>)-><a class=\"id\" href=\"#xtime\">xtime</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>((<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#xtime\">xtime</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a>);<span class=\"ts\"/>       \\", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_FITS_IN_INODE\">EXT4_FITS_IN_INODE</a>(<a class=\"id\" href=\"#raw_inode\">raw_inode</a>, <a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>), <a class=\"id\" href=\"#xtime\">xtime</a> ## <a class=\"id\" href=\"#_extra\">_extra</a>))     \\", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#raw_inode\">raw_inode</a>)-><a class=\"id\" href=\"#xtime\">xtime</a> ## <a class=\"id\" href=\"#_extra\">_extra</a> =<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_encode_extra_time\">ext4_encode_extra_time</a>(&amp;(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#xtime\">xtime</a>);       \\", 
"} while (0)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_EINODE_SET_XTIME\">EXT4_EINODE_SET_XTIME</a>(<a class=\"id\" href=\"#xtime\">xtime</a>, <a class=\"id\" href=\"#einode\">einode</a>, <a class=\"id\" href=\"#raw_inode\">raw_inode</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \\", 
"do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \\", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_FITS_IN_INODE\">EXT4_FITS_IN_INODE</a>(<a class=\"id\" href=\"#raw_inode\">raw_inode</a>, <a class=\"id\" href=\"#einode\">einode</a>, <a class=\"id\" href=\"#xtime\">xtime</a>))<span class=\"ts\"/><span class=\"ts\"/>       \\", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#raw_inode\">raw_inode</a>)-><a class=\"id\" href=\"#xtime\">xtime</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>((<a class=\"id\" href=\"#einode\">einode</a>)-><a class=\"id\" href=\"#xtime\">xtime</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a>);      \\", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_FITS_IN_INODE\">EXT4_FITS_IN_INODE</a>(<a class=\"id\" href=\"#raw_inode\">raw_inode</a>, <a class=\"id\" href=\"#einode\">einode</a>, <a class=\"id\" href=\"#xtime\">xtime</a> ## <a class=\"id\" href=\"#_extra\">_extra</a>))<span class=\"ts\"/>       \\", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#raw_inode\">raw_inode</a>)-><a class=\"id\" href=\"#xtime\">xtime</a> ## <a class=\"id\" href=\"#_extra\">_extra</a> =<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_encode_extra_time\">ext4_encode_extra_time</a>(&amp;(<a class=\"id\" href=\"#einode\">einode</a>)-><a class=\"id\" href=\"#xtime\">xtime</a>);      \\", 
"} while (0)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_INODE_GET_XTIME\">EXT4_INODE_GET_XTIME</a>(<a class=\"id\" href=\"#xtime\">xtime</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#raw_inode\">raw_inode</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \\", 
"do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \\", 
"<span class=\"ts\"/>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#xtime\">xtime</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> = (signed)<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>((<a class=\"id\" href=\"#raw_inode\">raw_inode</a>)-><a class=\"id\" href=\"#xtime\">xtime</a>);       \\", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_FITS_IN_INODE\">EXT4_FITS_IN_INODE</a>(<a class=\"id\" href=\"#raw_inode\">raw_inode</a>, <a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>), <a class=\"id\" href=\"#xtime\">xtime</a> ## <a class=\"id\" href=\"#_extra\">_extra</a>))     \\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_decode_extra_time\">ext4_decode_extra_time</a>(&amp;(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#xtime\">xtime</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#xtime\">xtime</a> ## <a class=\"id\" href=\"#_extra\">_extra</a>);<span class=\"ts\"/>       \\", 
"} while (0)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_EINODE_GET_XTIME\">EXT4_EINODE_GET_XTIME</a>(<a class=\"id\" href=\"#xtime\">xtime</a>, <a class=\"id\" href=\"#einode\">einode</a>, <a class=\"id\" href=\"#raw_inode\">raw_inode</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \\", 
"do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \\", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_FITS_IN_INODE\">EXT4_FITS_IN_INODE</a>(<a class=\"id\" href=\"#raw_inode\">raw_inode</a>, <a class=\"id\" href=\"#einode\">einode</a>, <a class=\"id\" href=\"#xtime\">xtime</a>))<span class=\"ts\"/><span class=\"ts\"/>       \\", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#einode\">einode</a>)-><a class=\"id\" href=\"#xtime\">xtime</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> = <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(signed)<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>((<a class=\"id\" href=\"#raw_inode\">raw_inode</a>)-><a class=\"id\" href=\"#xtime\">xtime</a>);<span class=\"ts\"/>       \\", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_FITS_IN_INODE\">EXT4_FITS_IN_INODE</a>(<a class=\"id\" href=\"#raw_inode\">raw_inode</a>, <a class=\"id\" href=\"#einode\">einode</a>, <a class=\"id\" href=\"#xtime\">xtime</a> ## <a class=\"id\" href=\"#_extra\">_extra</a>))<span class=\"ts\"/>       \\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_decode_extra_time\">ext4_decode_extra_time</a>(&amp;(<a class=\"id\" href=\"#einode\">einode</a>)-><a class=\"id\" href=\"#xtime\">xtime</a>,<span class=\"ts\"/><span class=\"ts\"/>       \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#raw_inode\">raw_inode</a>-><a class=\"id\" href=\"#xtime\">xtime</a> ## <a class=\"id\" href=\"#_extra\">_extra</a>);<span class=\"ts\"/>       \\", 
"} while (0)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#i_disk_version\">i_disk_version</a> <a class=\"id\" href=\"#osd1\">osd1</a>.<a class=\"id\" href=\"#linux1\">linux1</a>.<a class=\"id\" href=\"#l_i_version\">l_i_version</a>", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#__linux__\">__linux__</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#i_reserved1\">i_reserved1</a><span class=\"ts\"/><a class=\"id\" href=\"#osd1\">osd1</a>.<a class=\"id\" href=\"#linux1\">linux1</a>.<a class=\"id\" href=\"#l_i_reserved1\">l_i_reserved1</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#i_file_acl_high\">i_file_acl_high</a><span class=\"ts\"/><a class=\"id\" href=\"#osd2\">osd2</a>.<a class=\"id\" href=\"#linux2\">linux2</a>.<a class=\"id\" href=\"#l_i_file_acl_high\">l_i_file_acl_high</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#i_blocks_high\">i_blocks_high</a><span class=\"ts\"/><a class=\"id\" href=\"#osd2\">osd2</a>.<a class=\"id\" href=\"#linux2\">linux2</a>.<a class=\"id\" href=\"#l_i_blocks_high\">l_i_blocks_high</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#i_uid_low\">i_uid_low</a><span class=\"ts\"/><a class=\"id\" href=\"#i_uid\">i_uid</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#i_gid_low\">i_gid_low</a><span class=\"ts\"/><a class=\"id\" href=\"#i_gid\">i_gid</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#i_uid_high\">i_uid_high</a><span class=\"ts\"/><a class=\"id\" href=\"#osd2\">osd2</a>.<a class=\"id\" href=\"#linux2\">linux2</a>.<a class=\"id\" href=\"#l_i_uid_high\">l_i_uid_high</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#i_gid_high\">i_gid_high</a><span class=\"ts\"/><a class=\"id\" href=\"#osd2\">osd2</a>.<a class=\"id\" href=\"#linux2\">linux2</a>.<a class=\"id\" href=\"#l_i_gid_high\">l_i_gid_high</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#i_reserved2\">i_reserved2</a><span class=\"ts\"/><a class=\"id\" href=\"#osd2\">osd2</a>.<a class=\"id\" href=\"#linux2\">linux2</a>.<a class=\"id\" href=\"#l_i_reserved2\">l_i_reserved2</a>", 
"", 
];
xr_frag_insert('l/8d/65528d623591fc1910ada3dc1d9d07be914515.xr', __xr_tmp);
