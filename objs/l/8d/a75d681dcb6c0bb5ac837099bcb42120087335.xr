var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Tty port functions</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#tty\">tty</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#tty_driver\">tty_driver</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#tty_flip\">tty_flip</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#serial\">serial</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#wait\">wait</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bitops\">bitops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"void <a class=\"id\" href=\"#tty_port_init\">tty_port_init</a>(struct <a class=\"id\" href=\"#tty_port\">tty_port</a> *<a class=\"id\" href=\"#port\">port</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#port\">port</a>, 0, sizeof(*<a class=\"id\" href=\"#port\">port</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_waitqueue_head\">init_waitqueue_head</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#open_wait\">open_wait</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_waitqueue_head\">init_waitqueue_head</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#close_wait\">close_wait</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_waitqueue_head\">init_waitqueue_head</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#delta_msr_wait\">delta_msr_wait</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_init\">mutex_init</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_init\">mutex_init</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#buf_mutex\">buf_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#close_delay\">close_delay</a> = (50 * <a class=\"id\" href=\"#HZ\">HZ</a>) / 100;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#closing_wait\">closing_wait</a> = (3000 * <a class=\"id\" href=\"#HZ\">HZ</a>) / 100;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kref_init\">kref_init</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#kref\">kref</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tty_port_init\">tty_port_init</a>);", 
"", 
"int <a class=\"id\" href=\"#tty_port_alloc_xmit_buf\">tty_port_alloc_xmit_buf</a>(struct <a class=\"id\" href=\"#tty_port\">tty_port</a> *<a class=\"id\" href=\"#port\">port</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* We may sleep in get_zeroed_page() */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#buf_mutex\">buf_mutex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#xmit_buf\">xmit_buf</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#xmit_buf\">xmit_buf</a> = (unsigned char *)<a class=\"id\" href=\"#get_zeroed_page\">get_zeroed_page</a>(<a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#buf_mutex\">buf_mutex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#xmit_buf\">xmit_buf</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tty_port_alloc_xmit_buf\">tty_port_alloc_xmit_buf</a>);", 
"", 
"void <a class=\"id\" href=\"#tty_port_free_xmit_buf\">tty_port_free_xmit_buf</a>(struct <a class=\"id\" href=\"#tty_port\">tty_port</a> *<a class=\"id\" href=\"#port\">port</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#buf_mutex\">buf_mutex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#xmit_buf\">xmit_buf</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_page\">free_page</a>((unsigned long)<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#xmit_buf\">xmit_buf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#xmit_buf\">xmit_buf</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#buf_mutex\">buf_mutex</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tty_port_free_xmit_buf\">tty_port_free_xmit_buf</a>);", 
"", 
"static void <a class=\"id\" href=\"#tty_port_destructor\">tty_port_destructor</a>(struct <a class=\"id\" href=\"#kref\">kref</a> *<a class=\"id\" href=\"#kref\">kref</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_port\">tty_port</a> *<a class=\"id\" href=\"#port\">port</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#kref\">kref</a>, struct <a class=\"id\" href=\"#tty_port\">tty_port</a>, <a class=\"id\" href=\"#kref\">kref</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#xmit_buf\">xmit_buf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_page\">free_page</a>((unsigned long)<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#xmit_buf\">xmit_buf</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#destruct\">destruct</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#destruct\">destruct</a>(<a class=\"id\" href=\"#port\">port</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#port\">port</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#tty_port_put\">tty_port_put</a>(struct <a class=\"id\" href=\"#tty_port\">tty_port</a> *<a class=\"id\" href=\"#port\">port</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kref_put\">kref_put</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#kref\">kref</a>, <a class=\"id\" href=\"#tty_port_destructor\">tty_port_destructor</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tty_port_put\">tty_port_put</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_port_tty_get<span class=\"ts\"/>-<span class=\"ts\"/>get a tty reference</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@port: tty port</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Return a refcount protected tty instance or NULL if the port is not</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>associated with a tty (eg due to close or hangup)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty_port_tty_get\">tty_port_tty_get</a>(struct <a class=\"id\" href=\"#tty_port\">tty_port</a> *<a class=\"id\" href=\"#port\">port</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a> = <a class=\"id\" href=\"#tty_kref_get\">tty_kref_get</a>(<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tty\">tty</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tty_port_tty_get\">tty_port_tty_get</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_port_tty_set<span class=\"ts\"/>-<span class=\"ts\"/>set the tty of a port</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@port: tty port</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: the tty</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Associate the port and tty pair. Manages any internal refcounts.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Pass NULL to deassociate a port</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#tty_port_tty_set\">tty_port_tty_set</a>(struct <a class=\"id\" href=\"#tty_port\">tty_port</a> *<a class=\"id\" href=\"#port\">port</a>, struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#tty\">tty</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_kref_put\">tty_kref_put</a>(<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#tty\">tty</a> = <a class=\"id\" href=\"#tty_kref_get\">tty_kref_get</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tty_port_tty_set\">tty_port_tty_set</a>);", 
"", 
"static void <a class=\"id\" href=\"#tty_port_shutdown\">tty_port_shutdown</a>(struct <a class=\"id\" href=\"#tty_port\">tty_port</a> *<a class=\"id\" href=\"#port\">port</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#shutdown\">shutdown</a> && !<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#console\">console</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#test_and_clear_bit\">test_and_clear_bit</a>(<a class=\"id\" href=\"#ASYNCB_INITIALIZED\">ASYNCB_INITIALIZED</a>, &amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#shutdown\">shutdown</a>(<a class=\"id\" href=\"#port\">port</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_port_hangup<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>hangup helper</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@port: tty port</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Perform port level tty hangup flag and count changes. Drop the tty</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>reference.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#tty_port_hangup\">tty_port_hangup</a>(struct <a class=\"id\" href=\"#tty_port\">tty_port</a> *<a class=\"id\" href=\"#port\">port</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#count\">count</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#ASYNC_NORMAL_ACTIVE\">ASYNC_NORMAL_ACTIVE</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#tty\">tty</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#TTY_IO_ERROR\">TTY_IO_ERROR</a>, &amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_kref_put\">tty_kref_put</a>(<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#tty\">tty</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible\">wake_up_interruptible</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#open_wait\">open_wait</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible\">wake_up_interruptible</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#delta_msr_wait\">delta_msr_wait</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_port_shutdown\">tty_port_shutdown</a>(<a class=\"id\" href=\"#port\">port</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tty_port_hangup\">tty_port_hangup</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_port_carrier_raised<span class=\"ts\"/>-<span class=\"ts\"/>carrier raised check</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@port: tty port</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Wrapper for the carrier detect logic. For the moment this is used</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>to hide some internal details. This will eventually become entirely</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>internal to the tty port.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#tty_port_carrier_raised\">tty_port_carrier_raised</a>(struct <a class=\"id\" href=\"#tty_port\">tty_port</a> *<a class=\"id\" href=\"#port\">port</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#carrier_raised\">carrier_raised</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#carrier_raised\">carrier_raised</a>(<a class=\"id\" href=\"#port\">port</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tty_port_carrier_raised\">tty_port_carrier_raised</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_port_raise_dtr_rts<span class=\"ts\"/>-<span class=\"ts\"/>Raise DTR/RTS</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@port: tty port</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Wrapper for the DTR/RTS raise logic. For the moment this is used</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>to hide some internal details. This will eventually become entirely</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>internal to the tty port.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#tty_port_raise_dtr_rts\">tty_port_raise_dtr_rts</a>(struct <a class=\"id\" href=\"#tty_port\">tty_port</a> *<a class=\"id\" href=\"#port\">port</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#dtr_rts\">dtr_rts</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#dtr_rts\">dtr_rts</a>(<a class=\"id\" href=\"#port\">port</a>, 1);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tty_port_raise_dtr_rts\">tty_port_raise_dtr_rts</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_port_lower_dtr_rts<span class=\"ts\"/>-<span class=\"ts\"/>Lower DTR/RTS</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@port: tty port</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Wrapper for the DTR/RTS raise logic. For the moment this is used</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>to hide some internal details. This will eventually become entirely</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>internal to the tty port.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#tty_port_lower_dtr_rts\">tty_port_lower_dtr_rts</a>(struct <a class=\"id\" href=\"#tty_port\">tty_port</a> *<a class=\"id\" href=\"#port\">port</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#dtr_rts\">dtr_rts</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#dtr_rts\">dtr_rts</a>(<a class=\"id\" href=\"#port\">port</a>, 0);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tty_port_lower_dtr_rts\">tty_port_lower_dtr_rts</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_port_block_til_ready<span class=\"ts\"/>-<span class=\"ts\"/>Waiting logic for tty open</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@port: the tty port being opened</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: the tty device being bound</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@filp: the file pointer of the opener</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Implement the core POSIX/SuS tty behaviour when opening a tty device.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Handles:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>- hangup (both before and during)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>- non blocking open</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>- rts/dtr/dcd</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>- signals</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>- port flags and counts</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>The passed tty_port must implement the carrier_raised method if it can</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>do carrier detect and the dtr_rts method if it supports software</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>management of these lines. Note that the dtr/rts raise is done each</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>iteration as a hangup may have previously dropped them while we wait.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#tty_port_block_til_ready\">tty_port_block_til_ready</a>(struct <a class=\"id\" href=\"#tty_port\">tty_port</a> *<a class=\"id\" href=\"#port\">port</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#do_clocal\">do_clocal</a> = 0, <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DEFINE_WAIT\">DEFINE_WAIT</a>(<a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cd\">cd</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* block if port is in the process of being closed */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty_hung_up_p\">tty_hung_up_p</a>(<a class=\"id\" href=\"#filp\">filp</a>) || <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ASYNC_CLOSING\">ASYNC_CLOSING</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wait_event_interruptible_tty\">wait_event_interruptible_tty</a>(<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#close_wait\">close_wait</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>!(<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ASYNC_CLOSING\">ASYNC_CLOSING</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ASYNC_HUP_NOTIFY\">ASYNC_HUP_NOTIFY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ERESTARTSYS\">ERESTARTSYS</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* if non-blocking mode is set we can pass directly to open unless</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   the port has just hung up or is in another error state */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; (1 << <a class=\"id\" href=\"#TTY_IO_ERROR\">TTY_IO_ERROR</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#ASYNC_NORMAL_ACTIVE\">ASYNC_NORMAL_ACTIVE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_flags\">f_flags</a> &amp; <a class=\"id\" href=\"#O_NONBLOCK\">O_NONBLOCK</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Indicate we are open */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios\">termios</a>-><a class=\"id\" href=\"#c_cflag\">c_cflag</a> &amp; <a class=\"id\" href=\"#CBAUD\">CBAUD</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_port_raise_dtr_rts\">tty_port_raise_dtr_rts</a>(<a class=\"id\" href=\"#port\">port</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#ASYNC_NORMAL_ACTIVE\">ASYNC_NORMAL_ACTIVE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#C_CLOCAL\">C_CLOCAL</a>(<a class=\"id\" href=\"#tty\">tty</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_clocal\">do_clocal</a> = 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Block waiting until we can proceed. We may need to wait for the</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   carrier, but we must also wait for any close that is in progress</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   before the next open may complete */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* The port lock protects the port counts */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tty_hung_up_p\">tty_hung_up_p</a>(<a class=\"id\" href=\"#filp\">filp</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#count\">count</a>--;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#blocked_open\">blocked_open</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>while (1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Indicate we are open */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios\">termios</a>-><a class=\"id\" href=\"#c_cflag\">c_cflag</a> &amp; <a class=\"id\" href=\"#CBAUD\">CBAUD</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_port_raise_dtr_rts\">tty_port_raise_dtr_rts</a>(<a class=\"id\" href=\"#port\">port</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prepare_to_wait\">prepare_to_wait</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#open_wait\">open_wait</a>, &amp;<a class=\"id\" href=\"#wait\">wait</a>, <a class=\"id\" href=\"#TASK_INTERRUPTIBLE\">TASK_INTERRUPTIBLE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Check for a hangup or uninitialised port.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>Return accordingly */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tty_hung_up_p\">tty_hung_up_p</a>(<a class=\"id\" href=\"#filp\">filp</a>) || !(<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ASYNC_INITIALIZED\">ASYNC_INITIALIZED</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ASYNC_HUP_NOTIFY\">ASYNC_HUP_NOTIFY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ERESTARTSYS\">ERESTARTSYS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Probe the carrier. For devices with no carrier detect this</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   will always return true */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cd\">cd</a> = <a class=\"id\" href=\"#tty_port_carrier_raised\">tty_port_carrier_raised</a>(<a class=\"id\" href=\"#port\">port</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ASYNC_CLOSING\">ASYNC_CLOSING</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#do_clocal\">do_clocal</a> || <a class=\"id\" href=\"#cd\">cd</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#signal_pending\">signal_pending</a>(<a class=\"id\" href=\"#current\">current</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ERESTARTSYS\">ERESTARTSYS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_unlock\">tty_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule\">schedule</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_lock\">tty_lock</a>();", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#finish_wait\">finish_wait</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#open_wait\">open_wait</a>, &amp;<a class=\"id\" href=\"#wait\">wait</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Update counts. A parallel hangup will have set count to zero and</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   we must not mess that up further */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tty_hung_up_p\">tty_hung_up_p</a>(<a class=\"id\" href=\"#filp\">filp</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#count\">count</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#blocked_open\">blocked_open</a>--;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#ASYNC_NORMAL_ACTIVE\">ASYNC_NORMAL_ACTIVE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tty_port_block_til_ready\">tty_port_block_til_ready</a>);", 
"", 
"int <a class=\"id\" href=\"#tty_port_close_start\">tty_port_close_start</a>(struct <a class=\"id\" href=\"#tty_port\">tty_port</a> *<a class=\"id\" href=\"#port\">port</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty_hung_up_p\">tty_hung_up_p</a>(<a class=\"id\" href=\"#filp\">filp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#count\">count</a> == 1 && <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#count\">count</a> != 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>    \"tty_port_close_start: tty->count = 1 port count = %d.\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#count\">count</a> = 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (--<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#count\">count</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"tty_port_close_start: count = %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#count\">count</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#count\">count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#drop\">drop</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#drop\">drop</a>(<a class=\"id\" href=\"#port\">port</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#ASYNCB_CLOSING\">ASYNCB_CLOSING</a>, &amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#closing\">closing</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Don't block on a stalled port, just pull the chain */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flow_stopped\">flow_stopped</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_driver_flush_buffer\">tty_driver_flush_buffer</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#ASYNCB_INITIALIZED\">ASYNCB_INITIALIZED</a>, &amp;<a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a>) &&", 
];
xr_frag_insert('l/8d/a75d681dcb6c0bb5ac837099bcb42120087335.xr', __xr_tmp);
