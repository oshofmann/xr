var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Macros for manipulating and testing flags related to a</span>", 
"<span class=\"comment\"> * pageblock_nr_pages number of pages.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> * it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> * the Free Software Foundation version 2 of the License</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>", 
"<span class=\"comment\"> * GNU General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\"> * along with this program; if not, write to the Free Software</span>", 
"<span class=\"comment\"> * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) IBM Corporation, 2006</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Original author, Mel Gorman</span>", 
"<span class=\"comment\"> * Major cleanups and reduction of bit operations, Andy Whitcroft</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#PAGEBLOCK_FLAGS_H\">PAGEBLOCK_FLAGS_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PAGEBLOCK_FLAGS_H\">PAGEBLOCK_FLAGS_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* Bit indices that affect a whole block of pages */</span>", 
"enum <a class=\"id\" href=\"#pageblock_bits\">pageblock_bits</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PB_migrate\">PB_migrate</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PB_migrate_end\">PB_migrate_end</a> = <a class=\"id\" href=\"#PB_migrate\">PB_migrate</a> + 3 - 1,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 3 bits required for migrate types */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NR_PAGEBLOCK_BITS\">NR_PAGEBLOCK_BITS</a>", 
"};", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HUGETLB_PAGE\">CONFIG_HUGETLB_PAGE</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HUGETLB_PAGE_SIZE_VARIABLE\">CONFIG_HUGETLB_PAGE_SIZE_VARIABLE</a>", 
"", 
"<span class=\"comment\">/* Huge page sizes are variable */</span>", 
"extern int <a class=\"id\" href=\"#pageblock_order\">pageblock_order</a>;", 
"", 
"#else <span class=\"comment\">/* CONFIG_HUGETLB_PAGE_SIZE_VARIABLE */</span>", 
"", 
"<span class=\"comment\">/* Huge pages are a constant size */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pageblock_order\">pageblock_order</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#HUGETLB_PAGE_ORDER\">HUGETLB_PAGE_ORDER</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_HUGETLB_PAGE_SIZE_VARIABLE */</span>", 
"", 
"#else <span class=\"comment\">/* CONFIG_HUGETLB_PAGE */</span>", 
"", 
"<span class=\"comment\">/* If huge pages are not used, group by MAX_ORDER_NR_PAGES */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pageblock_order\">pageblock_order</a><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#MAX_ORDER\">MAX_ORDER</a>-1)", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_HUGETLB_PAGE */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pageblock_nr_pages\">pageblock_nr_pages</a><span class=\"ts\"/>(1UL << <a class=\"id\" href=\"#pageblock_order\">pageblock_order</a>)", 
"", 
"<span class=\"comment\">/* Forward declaration */</span>", 
"struct <a class=\"id\" href=\"#page\">page</a>;", 
"", 
"<span class=\"comment\">/* Declarations for getting and setting flags. See mm/page_alloc.c */</span>", 
"unsigned long <a class=\"id\" href=\"#get_pageblock_flags_group\">get_pageblock_flags_group</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#start_bitidx\">start_bitidx</a>, int <a class=\"id\" href=\"#end_bitidx\">end_bitidx</a>);", 
"void <a class=\"id\" href=\"#set_pageblock_flags_group\">set_pageblock_flags_group</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, unsigned long <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#start_bitidx\">start_bitidx</a>, int <a class=\"id\" href=\"#end_bitidx\">end_bitidx</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#get_pageblock_flags\">get_pageblock_flags</a>(<a class=\"id\" href=\"#page\">page</a>) \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_pageblock_flags_group\">get_pageblock_flags_group</a>(<a class=\"id\" href=\"#page\">page</a>, 0, <a class=\"id\" href=\"#NR_PAGEBLOCK_BITS\">NR_PAGEBLOCK_BITS</a>-1)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#set_pageblock_flags\">set_pageblock_flags</a>(<a class=\"id\" href=\"#page\">page</a>) \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_pageblock_flags_group\">set_pageblock_flags_group</a>(<a class=\"id\" href=\"#page\">page</a>, 0, <a class=\"id\" href=\"#NR_PAGEBLOCK_BITS\">NR_PAGEBLOCK_BITS</a>-1)", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* PAGEBLOCK_FLAGS_H */</span>", 
];
xr_frag_insert('l/8e/111baadb40e70b6510a875bcbf9f589b3b7d82.xr', __xr_tmp);
