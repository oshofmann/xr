var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * linux/fs/jbd2/journal.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Written by Stephen C. Tweedie &lt;sct@redhat.com&gt;, 1998</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright 1998 Red Hat corp --- All Rights Reserved</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file is part of the Linux kernel and is made available under</span>", 
"<span class=\"comment\"> * the terms of the GNU General Public License, version 2, or at your</span>", 
"<span class=\"comment\"> * option, any later version, incorporated herein by reference.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Generic filesystem journal-writing code; part of the ext2fs</span>", 
"<span class=\"comment\"> * journaling system.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file manages journals: areas of disk reserved for logging</span>", 
"<span class=\"comment\"> * transactional updates.  This includes the kernel journaling thread</span>", 
"<span class=\"comment\"> * which is responsible for scheduling updates to the log.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We do not actually manage the physical storage of the journal in this</span>", 
"<span class=\"comment\"> * file: that is left to a per-journal policy function, which allows us</span>", 
"<span class=\"comment\"> * to store the journal within a filesystem-specified area for ext2</span>", 
"<span class=\"comment\"> * journaling (ext2 can use a reserved inode for storing the log).</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jbd2\">jbd2</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#freezer\">freezer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pagemap\">pagemap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kthread\">kthread</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#poison\">poison</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#debugfs\">debugfs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#math64\">math64</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#hash\">hash</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#log2\">log2</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#vmalloc\">vmalloc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#backing\">backing</a>-<a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CREATE_TRACE_POINTS\">CREATE_TRACE_POINTS</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#trace\">trace</a>/<a class=\"id\" href=\"#events\">events</a>/<a class=\"id\" href=\"#jbd2\">jbd2</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#page\">page</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#jbd2_journal_extend\">jbd2_journal_extend</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#jbd2_journal_stop\">jbd2_journal_stop</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#jbd2_journal_lock_updates\">jbd2_journal_lock_updates</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#jbd2_journal_unlock_updates\">jbd2_journal_unlock_updates</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#jbd2_journal_get_write_access\">jbd2_journal_get_write_access</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#jbd2_journal_get_create_access\">jbd2_journal_get_create_access</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#jbd2_journal_get_undo_access\">jbd2_journal_get_undo_access</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#jbd2_journal_set_triggers\">jbd2_journal_set_triggers</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#jbd2_journal_dirty_metadata\">jbd2_journal_dirty_metadata</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#jbd2_journal_release_buffer\">jbd2_journal_release_buffer</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#jbd2_journal_forget\">jbd2_journal_forget</a>);", 
"#if 0", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#journal_sync_buffer\">journal_sync_buffer</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#jbd2_journal_flush\">jbd2_journal_flush</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#jbd2_journal_revoke\">jbd2_journal_revoke</a>);", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#jbd2_journal_init_dev\">jbd2_journal_init_dev</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#jbd2_journal_init_inode\">jbd2_journal_init_inode</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#jbd2_journal_update_format\">jbd2_journal_update_format</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#jbd2_journal_check_used_features\">jbd2_journal_check_used_features</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#jbd2_journal_check_available_features\">jbd2_journal_check_available_features</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#jbd2_journal_set_features\">jbd2_journal_set_features</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#jbd2_journal_load\">jbd2_journal_load</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#jbd2_journal_destroy\">jbd2_journal_destroy</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#jbd2_journal_abort\">jbd2_journal_abort</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#jbd2_journal_errno\">jbd2_journal_errno</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#jbd2_journal_ack_err\">jbd2_journal_ack_err</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#jbd2_journal_clear_err\">jbd2_journal_clear_err</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#jbd2_log_wait_commit\">jbd2_log_wait_commit</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#jbd2_log_start_commit\">jbd2_log_start_commit</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#jbd2_journal_start_commit\">jbd2_journal_start_commit</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#jbd2_journal_force_commit_nested\">jbd2_journal_force_commit_nested</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#jbd2_journal_wipe\">jbd2_journal_wipe</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#jbd2_journal_blocks_per_page\">jbd2_journal_blocks_per_page</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#jbd2_journal_invalidatepage\">jbd2_journal_invalidatepage</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#jbd2_journal_try_to_free_buffers\">jbd2_journal_try_to_free_buffers</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#jbd2_journal_force_commit\">jbd2_journal_force_commit</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#jbd2_journal_file_inode\">jbd2_journal_file_inode</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#jbd2_journal_init_jbd_inode\">jbd2_journal_init_jbd_inode</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#jbd2_journal_release_jbd_inode\">jbd2_journal_release_jbd_inode</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#jbd2_journal_begin_ordered_truncate\">jbd2_journal_begin_ordered_truncate</a>);", 
"", 
"static int <a class=\"id\" href=\"#journal_convert_superblock_v1\">journal_convert_superblock_v1</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *, <a class=\"id\" href=\"#journal_superblock_t\">journal_superblock_t</a> *);", 
"static void <a class=\"id\" href=\"#__journal_abort_soft\">__journal_abort_soft</a> (<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>, int <a class=\"id\" href=\"#errno\">errno</a>);", 
"static int <a class=\"id\" href=\"#jbd2_journal_create_slab\">jbd2_journal_create_slab</a>(<a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#slab_size\">slab_size</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Helper function used to manage commit timeouts</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#commit_timeout\">commit_timeout</a>(unsigned long <a class=\"id\" href=\"#__data\">__data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> * <a class=\"id\" href=\"#p\">p</a> = (struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *) <a class=\"id\" href=\"#__data\">__data</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wake_up_process\">wake_up_process</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * kjournald2: The main thread function used to manage a logging device</span>", 
"<span class=\"comment\"> * journal.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This kernel thread is responsible for two things:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * 1) COMMIT:  Every so often we need to commit the current state of the</span>", 
"<span class=\"comment\"> *    filesystem to disk.  The journal thread is responsible for writing</span>", 
"<span class=\"comment\"> *    all of the metadata buffers to disk.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * 2) CHECKPOINT: We cannot reuse a used section of the log file until all</span>", 
"<span class=\"comment\"> *    of the data in that part of the log has been rewritten elsewhere on</span>", 
"<span class=\"comment\"> *    the disk.  Flushing these old buffers to reclaim space in the log is</span>", 
"<span class=\"comment\"> *    known as checkpointing, and this thread is responsible for that job.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#kjournald2\">kjournald2</a>(void *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a> = <a class=\"id\" href=\"#arg\">arg</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#transaction_t\">transaction_t</a> *<a class=\"id\" href=\"#transaction\">transaction</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Set up an interval timer which can be used to trigger a commit wakeup</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * after the commit interval expires</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#setup_timer\">setup_timer</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_commit_timer\">j_commit_timer</a>, <a class=\"id\" href=\"#commit_timeout\">commit_timeout</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long)<a class=\"id\" href=\"#current\">current</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Record that the journal thread is running */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_task\">j_task</a> = <a class=\"id\" href=\"#current\">current</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wake_up\">wake_up</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_wait_done_commit\">j_wait_done_commit</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * And now, wait forever for commit wakeup events.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock\">write_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"", 
"<a class=\"id\" href=\"#loop\">loop</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_flags\">j_flags</a> &amp; <a class=\"id\" href=\"#JBD2_UNMOUNT\">JBD2_UNMOUNT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end_loop\">end_loop</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(1, \"commit_sequence=%d, commit_request=%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_commit_sequence\">j_commit_sequence</a>, <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_commit_request\">j_commit_request</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_commit_sequence\">j_commit_sequence</a> != <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_commit_request\">j_commit_request</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(1, \"OK, requests differ\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock\">write_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#del_timer_sync\">del_timer_sync</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_commit_timer\">j_commit_timer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_commit_transaction\">jbd2_journal_commit_transaction</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_lock\">write_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#loop\">loop</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wake_up\">wake_up</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_wait_done_commit\">j_wait_done_commit</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#freezing\">freezing</a>(<a class=\"id\" href=\"#current\">current</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The simpler the better. Flushing journal isn't a</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * good idea, because that depends on threads that may</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * be already stopped.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(1, \"Now suspending kjournald2\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock\">write_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#refrigerator\">refrigerator</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_lock\">write_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We assume on resume that commits are already there,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * so we don't sleep</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DEFINE_WAIT\">DEFINE_WAIT</a>(<a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#should_sleep\">should_sleep</a> = 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prepare_to_wait\">prepare_to_wait</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_wait_commit\">j_wait_commit</a>, &amp;<a class=\"id\" href=\"#wait\">wait</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#TASK_INTERRUPTIBLE\">TASK_INTERRUPTIBLE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_commit_sequence\">j_commit_sequence</a> != <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_commit_request\">j_commit_request</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#should_sleep\">should_sleep</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transaction\">transaction</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_running_transaction\">j_running_transaction</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#transaction\">transaction</a> && <a class=\"id\" href=\"#time_after_eq\">time_after_eq</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_expires\">t_expires</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#should_sleep\">should_sleep</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_flags\">j_flags</a> &amp; <a class=\"id\" href=\"#JBD2_UNMOUNT\">JBD2_UNMOUNT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#should_sleep\">should_sleep</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#should_sleep\">should_sleep</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock\">write_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule\">schedule</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_lock\">write_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#finish_wait\">finish_wait</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_wait_commit\">j_wait_commit</a>, &amp;<a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(1, \"kjournald2 wakes\\n\");", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Were we woken up by a commit wakeup event?</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#transaction\">transaction</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_running_transaction\">j_running_transaction</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#transaction\">transaction</a> && <a class=\"id\" href=\"#time_after_eq\">time_after_eq</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a>, <a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_expires\">t_expires</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_commit_request\">j_commit_request</a> = <a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_tid\">t_tid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(1, \"woke because of timeout\\n\");", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#loop\">loop</a>;", 
"", 
"<a class=\"id\" href=\"#end_loop\">end_loop</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock\">write_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#del_timer_sync\">del_timer_sync</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_commit_timer\">j_commit_timer</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_task\">j_task</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wake_up\">wake_up</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_wait_done_commit\">j_wait_done_commit</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(1, \"Journal thread exiting.\\n\");", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#jbd2_journal_start_thread\">jbd2_journal_start_thread</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#t\">t</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a> = <a class=\"id\" href=\"#kthread_run\">kthread_run</a>(<a class=\"id\" href=\"#kjournald2\">kjournald2</a>, <a class=\"id\" href=\"#journal\">journal</a>, \"jbd2/%s\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_devname\">j_devname</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#t\">t</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#t\">t</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wait_event\">wait_event</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_wait_done_commit\">j_wait_done_commit</a>, <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_task\">j_task</a> != <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#journal_kill_thread\">journal_kill_thread</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock\">write_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_flags\">j_flags</a> |= <a class=\"id\" href=\"#JBD2_UNMOUNT\">JBD2_UNMOUNT</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_task\">j_task</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up\">wake_up</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_wait_commit\">j_wait_commit</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock\">write_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wait_event\">wait_event</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_wait_done_commit\">j_wait_done_commit</a>, <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_task\">j_task</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_lock\">write_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock\">write_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * jbd2_journal_write_metadata_buffer: write a metadata buffer to the journal.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Writes a metadata buffer to a given disk block.  The actual IO is not</span>", 
"<span class=\"comment\"> * performed but a new buffer_head is constructed which labels the data</span>", 
"<span class=\"comment\"> * to be written with the correct destination disk block.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Any magic-number escaping which needs to be done will cause a</span>", 
"<span class=\"comment\"> * copy-out here.  If the buffer happens to start with the</span>", 
"<span class=\"comment\"> * JBD2_MAGIC_NUMBER, then we can't write it to the log directly: the</span>", 
"<span class=\"comment\"> * magic number is only written to the log for descripter blocks.  In</span>", 
"<span class=\"comment\"> * this case, we copy the data and replace the first word with 0, and we</span>", 
"<span class=\"comment\"> * return a result code which indicates that this buffer needs to be</span>", 
"<span class=\"comment\"> * marked as an escaped buffer in the corresponding log descriptor</span>", 
"<span class=\"comment\"> * block.  The missing word can then be restored when the block is read</span>", 
"<span class=\"comment\"> * during recovery.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If the source buffer has already been modified by a new transaction</span>", 
"<span class=\"comment\"> * since we took the last commit snapshot, we use the frozen copy of</span>", 
"<span class=\"comment\"> * that data for IO.  If we end up using the existing buffer_head's data</span>", 
"<span class=\"comment\"> * for the write, then we *have* to lock the buffer to prevent anyone</span>", 
"<span class=\"comment\"> * else from using and possibly modifying it while the IO is in</span>", 
"<span class=\"comment\"> * progress.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The function returns a pointer to the buffer_heads to be used for IO.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We assume that the journal has already been locked in this function.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Return value:</span>", 
"<span class=\"comment\"> *  &lt;0: Error</span>", 
"<span class=\"comment\"> * &gt;=0: Finished OK</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * On success:</span>", 
"<span class=\"comment\"> * Bit 0 set == escape performed on the data</span>", 
"<span class=\"comment\"> * Bit 1 set == buffer copy-out performed (kfree the data after IO)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#jbd2_journal_write_metadata_buffer\">jbd2_journal_write_metadata_buffer</a>(<a class=\"id\" href=\"#transaction_t\">transaction_t</a> *<a class=\"id\" href=\"#transaction\">transaction</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#journal_head\">journal_head</a>  *<a class=\"id\" href=\"#jh_in\">jh_in</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#journal_head\">journal_head</a> **<a class=\"id\" href=\"#jh_out\">jh_out</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned long long <a class=\"id\" href=\"#blocknr\">blocknr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#need_copy_out\">need_copy_out</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#done_copy_out\">done_copy_out</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#do_escape\">do_escape</a> = 0;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#mapped_data\">mapped_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#new_bh\">new_bh</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *<a class=\"id\" href=\"#new_jh\">new_jh</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#new_page\">new_page</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#new_offset\">new_offset</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh_in\">bh_in</a> = <a class=\"id\" href=\"#jh2bh\">jh2bh</a>(<a class=\"id\" href=\"#jh_in\">jh_in</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a> = <a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_journal\">t_journal</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The buffer really shouldn't be locked: only the current committing</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * transaction is allowed to write it, so nobody else is allowed</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to do any IO.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * akpm: except if we're journalling data, and write() output is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * also part of a shared mapping, and another thread has</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * decided to launch a writepage() against this buffer.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT_BH\">J_ASSERT_BH</a>(<a class=\"id\" href=\"#bh_in\">bh_in</a>, <a class=\"id\" href=\"#buffer_jbddirty\">buffer_jbddirty</a>(<a class=\"id\" href=\"#bh_in\">bh_in</a>));", 
"", 
"<a class=\"id\" href=\"#retry_alloc\">retry_alloc</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_bh\">new_bh</a> = <a class=\"id\" href=\"#alloc_buffer_head\">alloc_buffer_head</a>(<a class=\"id\" href=\"#GFP_NOFS\">GFP_NOFS</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#new_bh\">new_bh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Failure is not an option, but __GFP_NOFAIL is going</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * away; so we retry ourselves here.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#congestion_wait\">congestion_wait</a>(<a class=\"id\" href=\"#BLK_RW_ASYNC\">BLK_RW_ASYNC</a>, <a class=\"id\" href=\"#HZ\">HZ</a>/50);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#retry_alloc\">retry_alloc</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* keep subsequent assertions sane */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_bh\">new_bh</a>-><a class=\"id\" href=\"#b_state\">b_state</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_buffer\">init_buffer</a>(<a class=\"id\" href=\"#new_bh\">new_bh</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#new_bh\">new_bh</a>-><a class=\"id\" href=\"#b_count\">b_count</a>, 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_jh\">new_jh</a> = <a class=\"id\" href=\"#jbd2_journal_add_journal_head\">jbd2_journal_add_journal_head</a>(<a class=\"id\" href=\"#new_bh\">new_bh</a>);<span class=\"ts\"/><span class=\"comment\">/* This sleeps */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If a new transaction has already done a buffer copy-out, then</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we use that version of the data for the commit.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd_lock_bh_state\">jbd_lock_bh_state</a>(<a class=\"id\" href=\"#bh_in\">bh_in</a>);", 
"<a class=\"id\" href=\"#repeat\">repeat</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#jh_in\">jh_in</a>-><a class=\"id\" href=\"#b_frozen_data\">b_frozen_data</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#done_copy_out\">done_copy_out</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_page\">new_page</a> = <a class=\"id\" href=\"#virt_to_page\">virt_to_page</a>(<a class=\"id\" href=\"#jh_in\">jh_in</a>-><a class=\"id\" href=\"#b_frozen_data\">b_frozen_data</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_offset\">new_offset</a> = <a class=\"id\" href=\"#offset_in_page\">offset_in_page</a>(<a class=\"id\" href=\"#jh_in\">jh_in</a>-><a class=\"id\" href=\"#b_frozen_data\">b_frozen_data</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_page\">new_page</a> = <a class=\"id\" href=\"#jh2bh\">jh2bh</a>(<a class=\"id\" href=\"#jh_in\">jh_in</a>)-><a class=\"id\" href=\"#b_page\">b_page</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_offset\">new_offset</a> = <a class=\"id\" href=\"#offset_in_page\">offset_in_page</a>(<a class=\"id\" href=\"#jh2bh\">jh2bh</a>(<a class=\"id\" href=\"#jh_in\">jh_in</a>)-><a class=\"id\" href=\"#b_data\">b_data</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mapped_data\">mapped_data</a> = <a class=\"id\" href=\"#kmap_atomic\">kmap_atomic</a>(<a class=\"id\" href=\"#new_page\">new_page</a>, <a class=\"id\" href=\"#KM_USER0\">KM_USER0</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Fire data frozen trigger if data already wasn't frozen.  Do this</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * before checking for escaping, as the trigger may modify the magic</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * offset.  If a copy-out happens afterwards, it will have the correct</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * data in the buffer.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#done_copy_out\">done_copy_out</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_buffer_frozen_trigger\">jbd2_buffer_frozen_trigger</a>(<a class=\"id\" href=\"#jh_in\">jh_in</a>, <a class=\"id\" href=\"#mapped_data\">mapped_data</a> + <a class=\"id\" href=\"#new_offset\">new_offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#jh_in\">jh_in</a>-><a class=\"id\" href=\"#b_triggers\">b_triggers</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Check for escaping</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (*((<a class=\"id\" href=\"#__be32\">__be32</a> *)(<a class=\"id\" href=\"#mapped_data\">mapped_data</a> + <a class=\"id\" href=\"#new_offset\">new_offset</a>)) ==", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu_to_be32\">cpu_to_be32</a>(<a class=\"id\" href=\"#JBD2_MAGIC_NUMBER\">JBD2_MAGIC_NUMBER</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#need_copy_out\">need_copy_out</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_escape\">do_escape</a> = 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kunmap_atomic\">kunmap_atomic</a>(<a class=\"id\" href=\"#mapped_data\">mapped_data</a>, <a class=\"id\" href=\"#KM_USER0\">KM_USER0</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Do we need to do a data copy?</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#need_copy_out\">need_copy_out</a> && !<a class=\"id\" href=\"#done_copy_out\">done_copy_out</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#tmp\">tmp</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_unlock_bh_state\">jbd_unlock_bh_state</a>(<a class=\"id\" href=\"#bh_in\">bh_in</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#jbd2_alloc\">jbd2_alloc</a>(<a class=\"id\" href=\"#bh_in\">bh_in</a>-><a class=\"id\" href=\"#b_size\">b_size</a>, <a class=\"id\" href=\"#GFP_NOFS\">GFP_NOFS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tmp\">tmp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_put_journal_head\">jbd2_journal_put_journal_head</a>(<a class=\"id\" href=\"#new_jh\">new_jh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_lock_bh_state\">jbd_lock_bh_state</a>(<a class=\"id\" href=\"#bh_in\">bh_in</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#jh_in\">jh_in</a>-><a class=\"id\" href=\"#b_frozen_data\">b_frozen_data</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_free\">jbd2_free</a>(<a class=\"id\" href=\"#tmp\">tmp</a>, <a class=\"id\" href=\"#bh_in\">bh_in</a>-><a class=\"id\" href=\"#b_size\">b_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#repeat\">repeat</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jh_in\">jh_in</a>-><a class=\"id\" href=\"#b_frozen_data\">b_frozen_data</a> = <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mapped_data\">mapped_data</a> = <a class=\"id\" href=\"#kmap_atomic\">kmap_atomic</a>(<a class=\"id\" href=\"#new_page\">new_page</a>, <a class=\"id\" href=\"#KM_USER0\">KM_USER0</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#tmp\">tmp</a>, <a class=\"id\" href=\"#mapped_data\">mapped_data</a> + <a class=\"id\" href=\"#new_offset\">new_offset</a>, <a class=\"id\" href=\"#jh2bh\">jh2bh</a>(<a class=\"id\" href=\"#jh_in\">jh_in</a>)-><a class=\"id\" href=\"#b_size\">b_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kunmap_atomic\">kunmap_atomic</a>(<a class=\"id\" href=\"#mapped_data\">mapped_data</a>, <a class=\"id\" href=\"#KM_USER0\">KM_USER0</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_page\">new_page</a> = <a class=\"id\" href=\"#virt_to_page\">virt_to_page</a>(<a class=\"id\" href=\"#tmp\">tmp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_offset\">new_offset</a> = <a class=\"id\" href=\"#offset_in_page\">offset_in_page</a>(<a class=\"id\" href=\"#tmp\">tmp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#done_copy_out\">done_copy_out</a> = 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * This isn't strictly necessary, as we're using frozen</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * data for the escaping, but it keeps consistency with</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * b_frozen_data usage.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jh_in\">jh_in</a>-><a class=\"id\" href=\"#b_frozen_triggers\">b_frozen_triggers</a> = <a class=\"id\" href=\"#jh_in\">jh_in</a>-><a class=\"id\" href=\"#b_triggers\">b_triggers</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Did we need to do an escaping?  Now we've done all the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * copying, we can finally do so.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#do_escape\">do_escape</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mapped_data\">mapped_data</a> = <a class=\"id\" href=\"#kmap_atomic\">kmap_atomic</a>(<a class=\"id\" href=\"#new_page\">new_page</a>, <a class=\"id\" href=\"#KM_USER0\">KM_USER0</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>*((unsigned int *)(<a class=\"id\" href=\"#mapped_data\">mapped_data</a> + <a class=\"id\" href=\"#new_offset\">new_offset</a>)) = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kunmap_atomic\">kunmap_atomic</a>(<a class=\"id\" href=\"#mapped_data\">mapped_data</a>, <a class=\"id\" href=\"#KM_USER0\">KM_USER0</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_bh_page\">set_bh_page</a>(<a class=\"id\" href=\"#new_bh\">new_bh</a>, <a class=\"id\" href=\"#new_page\">new_page</a>, <a class=\"id\" href=\"#new_offset\">new_offset</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_jh\">new_jh</a>-><a class=\"id\" href=\"#b_transaction\">b_transaction</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_bh\">new_bh</a>-><a class=\"id\" href=\"#b_size\">b_size</a> = <a class=\"id\" href=\"#jh2bh\">jh2bh</a>(<a class=\"id\" href=\"#jh_in\">jh_in</a>)-><a class=\"id\" href=\"#b_size\">b_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_bh\">new_bh</a>-><a class=\"id\" href=\"#b_bdev\">b_bdev</a> = <a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_journal\">t_journal</a>-><a class=\"id\" href=\"#j_dev\">j_dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_bh\">new_bh</a>-><a class=\"id\" href=\"#b_blocknr\">b_blocknr</a> = <a class=\"id\" href=\"#blocknr\">blocknr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_buffer_mapped\">set_buffer_mapped</a>(<a class=\"id\" href=\"#new_bh\">new_bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_buffer_dirty\">set_buffer_dirty</a>(<a class=\"id\" href=\"#new_bh\">new_bh</a>);", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#jh_out\">jh_out</a> = <a class=\"id\" href=\"#new_jh\">new_jh</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The to-be-written buffer needs to get moved to the io queue,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and the original buffer whose contents we are shadowing or</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * copying is moved to the transaction's shadow queue.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#JBUFFER_TRACE\">JBUFFER_TRACE</a>(<a class=\"id\" href=\"#jh_in\">jh_in</a>, \"file as BJ_Shadow\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__jbd2_journal_file_buffer\">__jbd2_journal_file_buffer</a>(<a class=\"id\" href=\"#jh_in\">jh_in</a>, <a class=\"id\" href=\"#transaction\">transaction</a>, <a class=\"id\" href=\"#BJ_Shadow\">BJ_Shadow</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd_unlock_bh_state\">jbd_unlock_bh_state</a>(<a class=\"id\" href=\"#bh_in\">bh_in</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#JBUFFER_TRACE\">JBUFFER_TRACE</a>(<a class=\"id\" href=\"#new_jh\">new_jh</a>, \"file as BJ_IO\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_file_buffer\">jbd2_journal_file_buffer</a>(<a class=\"id\" href=\"#new_jh\">new_jh</a>, <a class=\"id\" href=\"#transaction\">transaction</a>, <a class=\"id\" href=\"#BJ_IO\">BJ_IO</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#do_escape\">do_escape</a> | (<a class=\"id\" href=\"#done_copy_out\">done_copy_out</a> << 1);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Allocation code for the journal file.  Manage the space left in the</span>", 
"<span class=\"comment\"> * journal, so that we can begin checkpointing when appropriate.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * __jbd2_log_space_left: Return the number of free blocks left in the journal.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Called with the journal already locked.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Called under j_state_lock</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#__jbd2_log_space_left\">__jbd2_log_space_left</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#left\">left</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_free\">j_free</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* assert_spin_locked(&amp;journal-&gt;j_state_lock); */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Be pessimistic here about the number of those free blocks which</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * might be required for log descriptor control blocks.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MIN_LOG_RESERVED_BLOCKS\">MIN_LOG_RESERVED_BLOCKS</a> 32 <span class=\"comment\">/* Allow for rounding errors */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#left\">left</a> -= <a class=\"id\" href=\"#MIN_LOG_RESERVED_BLOCKS\">MIN_LOG_RESERVED_BLOCKS</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#left\">left</a> <= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#left\">left</a> -= (<a class=\"id\" href=\"#left\">left</a> >> 3);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#left\">left</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Called under j_state_lock.  Returns true if a transaction commit was started.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#__jbd2_log_start_commit\">__jbd2_log_start_commit</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#tid_t\">tid_t</a> <a class=\"id\" href=\"#target\">target</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Are we already doing a recent enough commit?</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tid_geq\">tid_geq</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_commit_request\">j_commit_request</a>, <a class=\"id\" href=\"#target\">target</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We want a new commit: OK, mark the request and wakup the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * commit thread.  We do _not_ do the commit ourselves.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_commit_request\">j_commit_request</a> = <a class=\"id\" href=\"#target\">target</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(1, \"JBD: requesting commit %d/%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_commit_request\">j_commit_request</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_commit_sequence\">j_commit_sequence</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up\">wake_up</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_wait_commit\">j_wait_commit</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#jbd2_log_start_commit\">jbd2_log_start_commit</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#tid_t\">tid_t</a> <a class=\"id\" href=\"#tid\">tid</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock\">write_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#__jbd2_log_start_commit\">__jbd2_log_start_commit</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#tid\">tid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock\">write_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Force and wait upon a commit if the calling process is not within</span>", 
"<span class=\"comment\"> * transaction.  This is used for forcing out undo-protected data which contains</span>", 
"<span class=\"comment\"> * bitmaps, when the fs is running out of space.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We can only force the running transaction if we don't have an active handle;</span>", 
"<span class=\"comment\"> * otherwise, we will deadlock.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns true if a transaction was started.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#jbd2_journal_force_commit_nested\">jbd2_journal_force_commit_nested</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#transaction_t\">transaction_t</a> *<a class=\"id\" href=\"#transaction\">transaction</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tid_t\">tid_t</a> <a class=\"id\" href=\"#tid\">tid</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_running_transaction\">j_running_transaction</a> && !<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#journal_info\">journal_info</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transaction\">transaction</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_running_transaction\">j_running_transaction</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__jbd2_log_start_commit\">__jbd2_log_start_commit</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_tid\">t_tid</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_committing_transaction\">j_committing_transaction</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transaction\">transaction</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_committing_transaction\">j_committing_transaction</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#transaction\">transaction</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;<span class=\"ts\"/><span class=\"comment\">/* Nothing to retry */</span>", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tid\">tid</a> = <a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_tid\">t_tid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd2_log_wait_commit\">jbd2_log_wait_commit</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#tid\">tid</a>);", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Start a commit of the current running transaction (if any).  Returns true</span>", 
"<span class=\"comment\"> * if a transaction is going to be committed (or is currently already</span>", 
"<span class=\"comment\"> * committing), and fills its tid in at *ptid</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#jbd2_journal_start_commit\">jbd2_journal_start_commit</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#tid_t\">tid_t</a> *<a class=\"id\" href=\"#ptid\">ptid</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock\">write_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_running_transaction\">j_running_transaction</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tid_t\">tid_t</a> <a class=\"id\" href=\"#tid\">tid</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_running_transaction\">j_running_transaction</a>-><a class=\"id\" href=\"#t_tid\">t_tid</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__jbd2_log_start_commit\">__jbd2_log_start_commit</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#tid\">tid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* There's a running transaction and we've just made sure</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * it's commit has been scheduled. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ptid\">ptid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#ptid\">ptid</a> = <a class=\"id\" href=\"#tid\">tid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 1;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_committing_transaction\">j_committing_transaction</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If ext3_write_super() recently started a commit, then we</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * have to wait for completion of that transaction</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ptid\">ptid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#ptid\">ptid</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_committing_transaction\">j_committing_transaction</a>-><a class=\"id\" href=\"#t_tid\">t_tid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock\">write_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Wait for a specified commit to complete.</span>", 
"<span class=\"comment\"> * The caller may not hold the journal lock.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#jbd2_log_wait_commit\">jbd2_log_wait_commit</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#tid_t\">tid_t</a> <a class=\"id\" href=\"#tid\">tid</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_JBD2_DEBUG\">CONFIG_JBD2_DEBUG</a>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tid_geq\">tid_geq</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_commit_request\">j_commit_request</a>, <a class=\"id\" href=\"#tid\">tid</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_EMERG\">KERN_EMERG</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"%s: error: j_commit_request=%d, tid=%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_commit_request\">j_commit_request</a>, <a class=\"id\" href=\"#tid\">tid</a>);", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#tid_gt\">tid_gt</a>(<a class=\"id\" href=\"#tid\">tid</a>, <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_commit_sequence\">j_commit_sequence</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(1, \"JBD: want %d, j_commit_sequence=%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#tid\">tid</a>, <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_commit_sequence\">j_commit_sequence</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up\">wake_up</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_wait_commit\">j_wait_commit</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wait_event\">wait_event</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_wait_done_commit\">j_wait_done_commit</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>!<a class=\"id\" href=\"#tid_gt\">tid_gt</a>(<a class=\"id\" href=\"#tid\">tid</a>, <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_commit_sequence\">j_commit_sequence</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#is_journal_aborted\">is_journal_aborted</a>(<a class=\"id\" href=\"#journal\">journal</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_EMERG\">KERN_EMERG</a> \"journal commit I/O error\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Log buffer allocation routines:</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#jbd2_journal_next_log_block\">jbd2_journal_next_log_block</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>, unsigned long long *<a class=\"id\" href=\"#retp\">retp</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#blocknr\">blocknr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock\">write_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT\">J_ASSERT</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_free\">j_free</a> &gt; 1);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blocknr\">blocknr</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_head\">j_head</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_head\">j_head</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_free\">j_free</a>--;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_head\">j_head</a> == <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_last\">j_last</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_head\">j_head</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_first\">j_first</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock\">write_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#jbd2_journal_bmap\">jbd2_journal_bmap</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#blocknr\">blocknr</a>, <a class=\"id\" href=\"#retp\">retp</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Conversion of logical to physical block numbers for the journal</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * On external journals the journal blocks are identity-mapped, so</span>", 
"<span class=\"comment\"> * this is a no-op.  If needed, we can use j_blk_offset - everything is</span>", 
"<span class=\"comment\"> * ready.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#jbd2_journal_bmap\">jbd2_journal_bmap</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>, unsigned long <a class=\"id\" href=\"#blocknr\">blocknr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> unsigned long long *<a class=\"id\" href=\"#retp\">retp</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_inode\">j_inode</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#bmap\">bmap</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_inode\">j_inode</a>, <a class=\"id\" href=\"#blocknr\">blocknr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#retp\">retp</a> = <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ALERT\">KERN_ALERT</a> \"%s: journal block not found \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"at offset %lu on %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#blocknr\">blocknr</a>, <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_devname\">j_devname</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__journal_abort_soft\">__journal_abort_soft</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#retp\">retp</a> = <a class=\"id\" href=\"#blocknr\">blocknr</a>; <span class=\"comment\">/* +journal-&gt;j_blk_offset */</span>", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * We play buffer_head aliasing tricks to write data/metadata blocks to</span>", 
"<span class=\"comment\"> * the journal without copying their contents, but for journal</span>", 
"<span class=\"comment\"> * descriptor blocks we do need to generate bona fide buffers.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * After the caller of jbd2_journal_get_descriptor_buffer() has finished modifying</span>", 
"<span class=\"comment\"> * the buffer's contents they really should run flush_dcache_page(bh-&gt;b_page).</span>", 
"<span class=\"comment\"> * But we don't bother doing that, so there will be coherency problems with</span>", 
"<span class=\"comment\"> * mmaps of blockdevs which hold live JBD-controlled filesystems.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *<a class=\"id\" href=\"#jbd2_journal_get_descriptor_buffer\">jbd2_journal_get_descriptor_buffer</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#blocknr\">blocknr</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#jbd2_journal_next_log_block\">jbd2_journal_next_log_block</a>(<a class=\"id\" href=\"#journal\">journal</a>, &amp;<a class=\"id\" href=\"#blocknr\">blocknr</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#__getblk\">__getblk</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_dev\">j_dev</a>, <a class=\"id\" href=\"#blocknr\">blocknr</a>, <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_blocksize\">j_blocksize</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_buffer\">lock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>, 0, <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_blocksize\">j_blocksize</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_buffer_uptodate\">set_buffer_uptodate</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_buffer\">unlock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUFFER_TRACE\">BUFFER_TRACE</a>(<a class=\"id\" href=\"#bh\">bh</a>, \"return this buffer\");", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#jbd2_journal_add_journal_head\">jbd2_journal_add_journal_head</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"}", 
"", 
"struct <a class=\"id\" href=\"#jbd2_stats_proc_session\">jbd2_stats_proc_session</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#transaction_stats_s\">transaction_stats_s</a> *<a class=\"id\" href=\"#stats\">stats</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#start\">start</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#max\">max</a>;", 
"};", 
"", 
"static void *<a class=\"id\" href=\"#jbd2_seq_info_start\">jbd2_seq_info_start</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>return *<a class=\"id\" href=\"#pos\">pos</a> ? <a class=\"id\" href=\"#NULL\">NULL</a> : <a class=\"id\" href=\"#SEQ_START_TOKEN\">SEQ_START_TOKEN</a>;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#jbd2_seq_info_next\">jbd2_seq_info_next</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#jbd2_seq_info_show\">jbd2_seq_info_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#jbd2_stats_proc_session\">jbd2_stats_proc_session</a> *<a class=\"id\" href=\"#s\">s</a> = <a class=\"id\" href=\"#seq\">seq</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#v\">v</a> != <a class=\"id\" href=\"#SEQ_START_TOKEN\">SEQ_START_TOKEN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"%lu transaction, each up to %u blocks\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#stats\">stats</a>-><a class=\"id\" href=\"#ts_tid\">ts_tid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_max_transaction_buffers\">j_max_transaction_buffers</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#stats\">stats</a>-><a class=\"id\" href=\"#ts_tid\">ts_tid</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"average: \\n  %ums waiting for transaction\\n\",", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#jiffies_to_msecs\">jiffies_to_msecs</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#stats\">stats</a>-><a class=\"id\" href=\"#run\">run</a>.<a class=\"id\" href=\"#rs_wait\">rs_wait</a> / <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#stats\">stats</a>-><a class=\"id\" href=\"#ts_tid\">ts_tid</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"  %ums running transaction\\n\",", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#jiffies_to_msecs\">jiffies_to_msecs</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#stats\">stats</a>-><a class=\"id\" href=\"#run\">run</a>.<a class=\"id\" href=\"#rs_running\">rs_running</a> / <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#stats\">stats</a>-><a class=\"id\" href=\"#ts_tid\">ts_tid</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"  %ums transaction was being locked\\n\",", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#jiffies_to_msecs\">jiffies_to_msecs</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#stats\">stats</a>-><a class=\"id\" href=\"#run\">run</a>.<a class=\"id\" href=\"#rs_locked\">rs_locked</a> / <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#stats\">stats</a>-><a class=\"id\" href=\"#ts_tid\">ts_tid</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"  %ums flushing data (in ordered mode)\\n\",", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#jiffies_to_msecs\">jiffies_to_msecs</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#stats\">stats</a>-><a class=\"id\" href=\"#run\">run</a>.<a class=\"id\" href=\"#rs_flushing\">rs_flushing</a> / <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#stats\">stats</a>-><a class=\"id\" href=\"#ts_tid\">ts_tid</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"  %ums logging transaction\\n\",", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#jiffies_to_msecs\">jiffies_to_msecs</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#stats\">stats</a>-><a class=\"id\" href=\"#run\">run</a>.<a class=\"id\" href=\"#rs_logging\">rs_logging</a> / <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#stats\">stats</a>-><a class=\"id\" href=\"#ts_tid\">ts_tid</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"  %lluus average transaction commit time\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#div_u64\">div_u64</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_average_commit_time\">j_average_commit_time</a>, 1000));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"  %lu handles per transaction\\n\",", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#stats\">stats</a>-><a class=\"id\" href=\"#run\">run</a>.<a class=\"id\" href=\"#rs_handle_count\">rs_handle_count</a> / <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#stats\">stats</a>-><a class=\"id\" href=\"#ts_tid\">ts_tid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"  %lu blocks per transaction\\n\",", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#stats\">stats</a>-><a class=\"id\" href=\"#run\">run</a>.<a class=\"id\" href=\"#rs_blocks\">rs_blocks</a> / <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#stats\">stats</a>-><a class=\"id\" href=\"#ts_tid\">ts_tid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"  %lu logged blocks per transaction\\n\",", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#stats\">stats</a>-><a class=\"id\" href=\"#run\">run</a>.<a class=\"id\" href=\"#rs_blocks_logged\">rs_blocks_logged</a> / <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#stats\">stats</a>-><a class=\"id\" href=\"#ts_tid\">ts_tid</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#jbd2_seq_info_stop\">jbd2_seq_info_stop</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> <a class=\"id\" href=\"#jbd2_seq_info_ops\">jbd2_seq_info_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a>  = <a class=\"id\" href=\"#jbd2_seq_info_start\">jbd2_seq_info_start</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#next\">next</a>   = <a class=\"id\" href=\"#jbd2_seq_info_next\">jbd2_seq_info_next</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a>   = <a class=\"id\" href=\"#jbd2_seq_info_stop\">jbd2_seq_info_stop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a>   = <a class=\"id\" href=\"#jbd2_seq_info_show\">jbd2_seq_info_show</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#jbd2_seq_info_open\">jbd2_seq_info_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a> = <a class=\"id\" href=\"#PDE\">PDE</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#jbd2_stats_proc_session\">jbd2_stats_proc_session</a> *<a class=\"id\" href=\"#s\">s</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>, <a class=\"id\" href=\"#size\">size</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#s\">s</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#s\">s</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = sizeof(struct <a class=\"id\" href=\"#transaction_stats_s\">transaction_stats_s</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#stats\">stats</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#stats\">stats</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#s\">s</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_history_lock\">j_history_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#stats\">stats</a>, &amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_stats\">j_stats</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#journal\">journal</a> = <a class=\"id\" href=\"#journal\">journal</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_history_lock\">j_history_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#seq_open\">seq_open</a>(<a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#jbd2_seq_info_ops\">jbd2_seq_info_ops</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#private\">private</a> = <a class=\"id\" href=\"#s\">s</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#stats\">stats</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#s\">s</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"}", 
"", 
"static int <a class=\"id\" href=\"#jbd2_seq_info_release\">jbd2_seq_info_release</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#jbd2_stats_proc_session\">jbd2_stats_proc_session</a> *<a class=\"id\" href=\"#s\">s</a> = <a class=\"id\" href=\"#seq\">seq</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#stats\">stats</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#s\">s</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#seq_release\">seq_release</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#file\">file</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#jbd2_seq_info_fops\">jbd2_seq_info_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a>           = <a class=\"id\" href=\"#jbd2_seq_info_open\">jbd2_seq_info_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a>           = <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a>         = <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a>        = <a class=\"id\" href=\"#jbd2_seq_info_release\">jbd2_seq_info_release</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#proc_dir_entry\">proc_dir_entry</a> *<a class=\"id\" href=\"#proc_jbd2_stats\">proc_jbd2_stats</a>;", 
"", 
"static void <a class=\"id\" href=\"#jbd2_stats_proc_init\">jbd2_stats_proc_init</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_proc_entry\">j_proc_entry</a> = <a class=\"id\" href=\"#proc_mkdir\">proc_mkdir</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_devname\">j_devname</a>, <a class=\"id\" href=\"#proc_jbd2_stats\">proc_jbd2_stats</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_proc_entry\">j_proc_entry</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#proc_create_data\">proc_create_data</a>(\"info\", <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_proc_entry\">j_proc_entry</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> &amp;<a class=\"id\" href=\"#jbd2_seq_info_fops\">jbd2_seq_info_fops</a>, <a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#jbd2_stats_proc_exit\">jbd2_stats_proc_exit</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#remove_proc_entry\">remove_proc_entry</a>(\"info\", <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_proc_entry\">j_proc_entry</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#remove_proc_entry\">remove_proc_entry</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_devname\">j_devname</a>, <a class=\"id\" href=\"#proc_jbd2_stats\">proc_jbd2_stats</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Management for journal control blocks: functions to create and</span>", 
"<span class=\"comment\"> * destroy journal_t structures, and to initialise and read existing</span>", 
"<span class=\"comment\"> * journal blocks from disk.  */</span>", 
"", 
"<span class=\"comment\">/* First: create and setup a journal_t object in memory.  We initialise</span>", 
"<span class=\"comment\"> * very few fields yet: that has to wait until we have created the</span>", 
"<span class=\"comment\"> * journal structures from from scratch, or loaded them from disk. */</span>", 
"", 
"static <a class=\"id\" href=\"#journal_t\">journal_t</a> * <a class=\"id\" href=\"#journal_init_common\">journal_init_common</a> (void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#journal\">journal</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#journal\">journal</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_waitqueue_head\">init_waitqueue_head</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_wait_transaction_locked\">j_wait_transaction_locked</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_waitqueue_head\">init_waitqueue_head</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_wait_logspace\">j_wait_logspace</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_waitqueue_head\">init_waitqueue_head</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_wait_done_commit\">j_wait_done_commit</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_waitqueue_head\">init_waitqueue_head</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_wait_checkpoint\">j_wait_checkpoint</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_waitqueue_head\">init_waitqueue_head</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_wait_commit\">j_wait_commit</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_waitqueue_head\">init_waitqueue_head</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_wait_updates\">j_wait_updates</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_init\">mutex_init</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_barrier\">j_barrier</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_init\">mutex_init</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_checkpoint_mutex\">j_checkpoint_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_revoke_lock\">j_revoke_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rwlock_init\">rwlock_init</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_commit_interval\">j_commit_interval</a> = (<a class=\"id\" href=\"#HZ\">HZ</a> * <a class=\"id\" href=\"#JBD2_DEFAULT_MAX_COMMIT_AGE\">JBD2_DEFAULT_MAX_COMMIT_AGE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_min_batch_time\">j_min_batch_time</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_max_batch_time\">j_max_batch_time</a> = 15000; <span class=\"comment\">/* 15ms */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* The journal is marked for error until we succeed with recovery! */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_flags\">j_flags</a> = <a class=\"id\" href=\"#JBD2_ABORT\">JBD2_ABORT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Set up a default-sized revoke table for the new mount. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#jbd2_journal_init_revoke\">jbd2_journal_init_revoke</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#JOURNAL_REVOKE_DEFAULT_HASH\">JOURNAL_REVOKE_DEFAULT_HASH</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_history_lock\">j_history_lock</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#journal\">journal</a>;", 
"<a class=\"id\" href=\"#fail\">fail</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<span class=\"comment\">/* jbd2_journal_init_dev and jbd2_journal_init_inode:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Create a journal structure assigned some fixed set of disk blocks to</span>", 
"<span class=\"comment\"> * the journal.  We don't actually touch those disk blocks yet, but we</span>", 
"<span class=\"comment\"> * need to set up all of the mapping information to tell the journaling</span>", 
"<span class=\"comment\"> * system where the journal blocks are.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *  journal_t * jbd2_journal_init_dev() - creates and initialises a journal structure</span>", 
"<span class=\"comment\"> *  @bdev: Block device on which to create the journal</span>", 
"<span class=\"comment\"> *  @fs_dev: Device which hold journalled filesystem for this journal.</span>", 
"<span class=\"comment\"> *  @start: Block nr Start of journal.</span>", 
"<span class=\"comment\"> *  @len:  Length of the journal in blocks.</span>", 
"<span class=\"comment\"> *  @blocksize: blocksize of journalling device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Returns: a newly created journal_t *</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  jbd2_journal_init_dev creates a journal which maps a fixed contiguous</span>", 
"<span class=\"comment\"> *  range of blocks on an arbitrary block device.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#journal_t\">journal_t</a> * <a class=\"id\" href=\"#jbd2_journal_init_dev\">jbd2_journal_init_dev</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#fs_dev\">fs_dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#start\">start</a>, int <a class=\"id\" href=\"#len\">len</a>, int <a class=\"id\" href=\"#blocksize\">blocksize</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a> = <a class=\"id\" href=\"#journal_init_common\">journal_init_common</a>();", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#n\">n</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#journal\">journal</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* journal descriptor can store up to n blocks -bzzz */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_blocksize\">j_blocksize</a> = <a class=\"id\" href=\"#blocksize\">blocksize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd2_stats_proc_init\">jbd2_stats_proc_init</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_blocksize\">j_blocksize</a> / sizeof(<a class=\"id\" href=\"#journal_block_tag_t\">journal_block_tag_t</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_wbufsize\">j_wbufsize</a> = <a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_wbuf\">j_wbuf</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#n\">n</a> * sizeof(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a>*), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_wbuf\">j_wbuf</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s: Cant allocate bhs for commit thread\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__func__\">__func__</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_err\">out_err</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_dev\">j_dev</a> = <a class=\"id\" href=\"#bdev\">bdev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_fs_dev\">j_fs_dev</a> = <a class=\"id\" href=\"#fs_dev\">fs_dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_blk_offset\">j_blk_offset</a> = <a class=\"id\" href=\"#start\">start</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_maxlen\">j_maxlen</a> = <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bdevname\">bdevname</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_dev\">j_dev</a>, <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_devname\">j_devname</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_devname\">j_devname</a>;", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#strchr\">strchr</a>(<a class=\"id\" href=\"#p\">p</a>, '/')))", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#p\">p</a> = '!';", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#__getblk\">__getblk</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_dev\">j_dev</a>, <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_blocksize\">j_blocksize</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"%s: Cannot get buffer for journal superblock\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#__func__\">__func__</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_err\">out_err</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_sb_buffer\">j_sb_buffer</a> = <a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_superblock\">j_superblock</a> = (<a class=\"id\" href=\"#journal_superblock_t\">journal_superblock_t</a> *)<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#journal\">journal</a>;", 
"<a class=\"id\" href=\"#out_err\">out_err</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_wbuf\">j_wbuf</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd2_stats_proc_exit\">jbd2_stats_proc_exit</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *  journal_t * jbd2_journal_init_inode () - creates a journal which maps to a inode.</span>", 
"<span class=\"comment\"> *  @inode: An inode to create the journal in</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * jbd2_journal_init_inode creates a journal which maps an on-disk inode as</span>", 
"<span class=\"comment\"> * the journal.  The inode must exist already, must support bmap() and</span>", 
"<span class=\"comment\"> * must have all data blocks preallocated.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#journal_t\">journal_t</a> * <a class=\"id\" href=\"#jbd2_journal_init_inode\">jbd2_journal_init_inode</a> (struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a> = <a class=\"id\" href=\"#journal_init_common\">journal_init_common</a>();", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#blocknr\">blocknr</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#journal\">journal</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_dev\">j_dev</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_fs_dev\">j_fs_dev</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_inode\">j_inode</a> = <a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bdevname\">bdevname</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_dev\">j_dev</a>, <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_devname\">j_devname</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_devname\">j_devname</a>;", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#strchr\">strchr</a>(<a class=\"id\" href=\"#p\">p</a>, '/')))", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#p\">p</a> = '!';", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_devname\">j_devname</a> + <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_devname\">j_devname</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#p\">p</a>, \"-%lu\", <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_inode\">j_inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(1,", 
"<span class=\"ts\"/><span class=\"ts\"/>  \"journal %p: inode %s/%ld, size %Ld, bits %d, blksize %ld\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_id\">s_id</a>, <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  (long long) <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_blocksize_bits\">s_blocksize_bits</a>, <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_maxlen\">j_maxlen</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a> >> <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_blocksize_bits\">s_blocksize_bits</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_blocksize\">j_blocksize</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd2_stats_proc_init\">jbd2_stats_proc_init</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* journal descriptor can store up to n blocks -bzzz */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_blocksize\">j_blocksize</a> / sizeof(<a class=\"id\" href=\"#journal_block_tag_t\">journal_block_tag_t</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_wbufsize\">j_wbufsize</a> = <a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_wbuf\">j_wbuf</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#n\">n</a> * sizeof(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a>*), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_wbuf\">j_wbuf</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s: Cant allocate bhs for commit thread\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__func__\">__func__</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_err\">out_err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#jbd2_journal_bmap\">jbd2_journal_bmap</a>(<a class=\"id\" href=\"#journal\">journal</a>, 0, &amp;<a class=\"id\" href=\"#blocknr\">blocknr</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* If that failed, give up */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s: Cannnot locate journal superblock\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#__func__\">__func__</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_err\">out_err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#__getblk\">__getblk</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_dev\">j_dev</a>, <a class=\"id\" href=\"#blocknr\">blocknr</a>, <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_blocksize\">j_blocksize</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"%s: Cannot get buffer for journal superblock\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#__func__\">__func__</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_err\">out_err</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_sb_buffer\">j_sb_buffer</a> = <a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_superblock\">j_superblock</a> = (<a class=\"id\" href=\"#journal_superblock_t\">journal_superblock_t</a> *)<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#journal\">journal</a>;", 
"<a class=\"id\" href=\"#out_err\">out_err</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_wbuf\">j_wbuf</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd2_stats_proc_exit\">jbd2_stats_proc_exit</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * If the journal init or create aborts, we need to mark the journal</span>", 
"<span class=\"comment\"> * superblock as being NULL to prevent the journal destroy from writing</span>", 
"<span class=\"comment\"> * back a bogus superblock.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#journal_fail_superblock\">journal_fail_superblock</a> (<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_sb_buffer\">j_sb_buffer</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_sb_buffer\">j_sb_buffer</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Given a journal_t structure, initialise the various fields for</span>", 
"<span class=\"comment\"> * startup of a new journaling session.  We use this both when creating</span>", 
"<span class=\"comment\"> * a journal, and after recovering an old journal to reset it for</span>", 
"<span class=\"comment\"> * subsequent use.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#journal_reset\">journal_reset</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_superblock_t\">journal_superblock_t</a> *<a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_superblock\">j_superblock</a>;", 
"<span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#first\">first</a>, <a class=\"id\" href=\"#last\">last</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#first\">first</a> = <a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_first\">s_first</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_maxlen\">s_maxlen</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#first\">first</a> + <a class=\"id\" href=\"#JBD2_MIN_JOURNAL_BLOCKS\">JBD2_MIN_JOURNAL_BLOCKS</a> &gt; <a class=\"id\" href=\"#last\">last</a> + 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"JBD: Journal too short (blocks %llu-%llu).\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#first\">first</a>, <a class=\"id\" href=\"#last\">last</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal_fail_superblock\">journal_fail_superblock</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_first\">j_first</a> = <a class=\"id\" href=\"#first\">first</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_last\">j_last</a> = <a class=\"id\" href=\"#last\">last</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_head\">j_head</a> = <a class=\"id\" href=\"#first\">first</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_tail\">j_tail</a> = <a class=\"id\" href=\"#first\">first</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_free\">j_free</a> = <a class=\"id\" href=\"#last\">last</a> - <a class=\"id\" href=\"#first\">first</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_tail_sequence\">j_tail_sequence</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_transaction_sequence\">j_transaction_sequence</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_commit_sequence\">j_commit_sequence</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_transaction_sequence\">j_transaction_sequence</a> - 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_commit_request\">j_commit_request</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_commit_sequence\">j_commit_sequence</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_max_transaction_buffers\">j_max_transaction_buffers</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_maxlen\">j_maxlen</a> / 4;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Add the dynamic fields and write it to disk. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_update_superblock\">jbd2_journal_update_superblock</a>(<a class=\"id\" href=\"#journal\">journal</a>, 1);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#jbd2_journal_start_thread\">jbd2_journal_start_thread</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * void jbd2_journal_update_superblock() - Update journal sb on disk.</span>", 
"<span class=\"comment\"> * @journal: The journal to update.</span>", 
"<span class=\"comment\"> * @wait: Set to '0' if you don't want to wait for IO completion.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Update a journal's dynamic superblock fields and write it to disk,</span>", 
"<span class=\"comment\"> * optionally waiting for the IO to complete.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#jbd2_journal_update_superblock\">jbd2_journal_update_superblock</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>, int <a class=\"id\" href=\"#wait\">wait</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_superblock_t\">journal_superblock_t</a> *<a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_superblock\">j_superblock</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_sb_buffer\">j_sb_buffer</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * As a special case, if the on-disk copy is already marked as needing</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * no recovery (s_start == 0) and there are no outstanding transactions</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * in the filesystem, then we can safely defer the superblock update</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * until the next commit by setting JBD2_FLUSHED.  This avoids</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * attempting a write to a potential-readonly device.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_start\">s_start</a> == 0 && <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_tail_sequence\">j_tail_sequence</a> ==", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_transaction_sequence\">j_transaction_sequence</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(1,\"JBD: Skipping superblock update on recovered sb \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"(start %ld, seq %d, errno %d)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_tail\">j_tail</a>, <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_tail_sequence\">j_tail_sequence</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_errno\">j_errno</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#buffer_write_io_error\">buffer_write_io_error</a>(<a class=\"id\" href=\"#bh\">bh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Oh, dear.  A previous attempt to write the journal</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * superblock failed.  This could happen because the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * USB device was yanked out.  Or it could happen to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * be a transient write error and maybe the block will</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * be remapped.  Nothing we can do but to retry the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * write and hope for the best.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"JBD2: previous I/O error detected \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"for journal superblock update for %s.\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_devname\">j_devname</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_buffer_write_io_error\">clear_buffer_write_io_error</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_buffer_uptodate\">set_buffer_uptodate</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(1,\"JBD: updating superblock (start %ld, seq %d, errno %d)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_tail\">j_tail</a>, <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_tail_sequence\">j_tail_sequence</a>, <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_errno\">j_errno</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_sequence\">s_sequence</a> = <a class=\"id\" href=\"#cpu_to_be32\">cpu_to_be32</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_tail_sequence\">j_tail_sequence</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_start\">s_start</a>    = <a class=\"id\" href=\"#cpu_to_be32\">cpu_to_be32</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_tail\">j_tail</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_errno\">s_errno</a>    = <a class=\"id\" href=\"#cpu_to_be32\">cpu_to_be32</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_errno\">j_errno</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUFFER_TRACE\">BUFFER_TRACE</a>(<a class=\"id\" href=\"#bh\">bh</a>, \"marking dirty\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mark_buffer_dirty\">mark_buffer_dirty</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#wait\">wait</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sync_dirty_buffer\">sync_dirty_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#buffer_write_io_error\">buffer_write_io_error</a>(<a class=\"id\" href=\"#bh\">bh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"JBD2: I/O error detected \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"when updating journal superblock for %s.\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_devname\">j_devname</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_buffer_write_io_error\">clear_buffer_write_io_error</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_buffer_uptodate\">set_buffer_uptodate</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_dirty_buffer\">write_dirty_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>, <a class=\"id\" href=\"#WRITE\">WRITE</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/* If we have just flushed the log (by marking s_start==0), then</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * any future commit will have to be careful to update the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * superblock again to re-record the true start of the log. */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock\">write_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_start\">s_start</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_flags\">j_flags</a> &= ~<a class=\"id\" href=\"#JBD2_FLUSHED\">JBD2_FLUSHED</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_flags\">j_flags</a> |= <a class=\"id\" href=\"#JBD2_FLUSHED\">JBD2_FLUSHED</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock\">write_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Read the superblock for a given journal, performing initial</span>", 
"<span class=\"comment\"> * validation of the format.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#journal_get_superblock\">journal_get_superblock</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_superblock_t\">journal_superblock_t</a> *<a class=\"id\" href=\"#sb\">sb</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_sb_buffer\">j_sb_buffer</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT\">J_ASSERT</a>(<a class=\"id\" href=\"#bh\">bh</a> != <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#buffer_uptodate\">buffer_uptodate</a>(<a class=\"id\" href=\"#bh\">bh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ll_rw_block\">ll_rw_block</a>(<a class=\"id\" href=\"#READ\">READ</a>, 1, &amp;<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wait_on_buffer\">wait_on_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#buffer_uptodate\">buffer_uptodate</a>(<a class=\"id\" href=\"#bh\">bh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a> (<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"JBD: IO error reading journal superblock\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_superblock\">j_superblock</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_header\">s_header</a>.<a class=\"id\" href=\"#h_magic\">h_magic</a> != <a class=\"id\" href=\"#cpu_to_be32\">cpu_to_be32</a>(<a class=\"id\" href=\"#JBD2_MAGIC_NUMBER\">JBD2_MAGIC_NUMBER</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> != <a class=\"id\" href=\"#cpu_to_be32\">cpu_to_be32</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_blocksize\">j_blocksize</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"JBD: no valid journal superblock found\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>switch(<a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_header\">s_header</a>.<a class=\"id\" href=\"#h_blocktype\">h_blocktype</a>)) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#JBD2_SUPERBLOCK_V1\">JBD2_SUPERBLOCK_V1</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_format_version\">j_format_version</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#JBD2_SUPERBLOCK_V2\">JBD2_SUPERBLOCK_V2</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_format_version\">j_format_version</a> = 2;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"JBD: unrecognised superblock format ID\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_maxlen\">s_maxlen</a>) &lt; <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_maxlen\">j_maxlen</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_maxlen\">j_maxlen</a> = <a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_maxlen\">s_maxlen</a>);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_maxlen\">s_maxlen</a>) &gt; <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_maxlen\">j_maxlen</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a> (<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"JBD: journal file too short\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_fail_superblock\">journal_fail_superblock</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Load the on-disk journal superblock and read the key fields into the</span>", 
"<span class=\"comment\"> * journal_t.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#load_superblock\">load_superblock</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_superblock_t\">journal_superblock_t</a> *<a class=\"id\" href=\"#sb\">sb</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#journal_get_superblock\">journal_get_superblock</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_superblock\">j_superblock</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_tail_sequence\">j_tail_sequence</a> = <a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_sequence\">s_sequence</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_tail\">j_tail</a> = <a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_start\">s_start</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_first\">j_first</a> = <a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_first\">s_first</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_last\">j_last</a> = <a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_maxlen\">s_maxlen</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_errno\">j_errno</a> = <a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_errno\">s_errno</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * int jbd2_journal_load() - Read journal from disk.</span>", 
"<span class=\"comment\"> * @journal: Journal to act on.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Given a journal_t structure which tells us which disk blocks contain</span>", 
"<span class=\"comment\"> * a journal, read the journal from disk to initialise the in-memory</span>", 
"<span class=\"comment\"> * structures.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#jbd2_journal_load\">jbd2_journal_load</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_superblock_t\">journal_superblock_t</a> *<a class=\"id\" href=\"#sb\">sb</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#load_superblock\">load_superblock</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_superblock\">j_superblock</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* If this is a V2 superblock, then we have to check the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * features flags on it. */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_format_version\">j_format_version</a> >= 2) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_feature_ro_compat\">s_feature_ro_compat</a> &amp;", 
"<span class=\"ts\"/><span class=\"ts\"/>     ~<a class=\"id\" href=\"#cpu_to_be32\">cpu_to_be32</a>(<a class=\"id\" href=\"#JBD2_KNOWN_ROCOMPAT_FEATURES\">JBD2_KNOWN_ROCOMPAT_FEATURES</a>)) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_feature_incompat\">s_feature_incompat</a> &amp;", 
"<span class=\"ts\"/><span class=\"ts\"/>     ~<a class=\"id\" href=\"#cpu_to_be32\">cpu_to_be32</a>(<a class=\"id\" href=\"#JBD2_KNOWN_INCOMPAT_FEATURES\">JBD2_KNOWN_INCOMPAT_FEATURES</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a> (<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"JBD: Unrecognised features on journal\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Create a slab for this blocksize</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#jbd2_journal_create_slab\">jbd2_journal_create_slab</a>(<a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Let the recovery code check whether it needs to recover any</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * data from the journal. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#jbd2_journal_recover\">jbd2_journal_recover</a>(<a class=\"id\" href=\"#journal\">journal</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#recovery_error\">recovery_error</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_failed_commit\">j_failed_commit</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"JBD2: journal transaction %u on %s \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"is corrupt.\\n\", <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_failed_commit\">j_failed_commit</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_devname\">j_devname</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* OK, we've finished with the dynamic journal bits:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * reinitialise the dynamic contents of the superblock in memory</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and reset them on disk. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal_reset\">journal_reset</a>(<a class=\"id\" href=\"#journal\">journal</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#recovery_error\">recovery_error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_flags\">j_flags</a> &= ~<a class=\"id\" href=\"#JBD2_ABORT\">JBD2_ABORT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_flags\">j_flags</a> |= <a class=\"id\" href=\"#JBD2_LOADED\">JBD2_LOADED</a>;", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#recovery_error\">recovery_error</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a> (<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"JBD: recovery failed\\n\");", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * void jbd2_journal_destroy() - Release a journal_t structure.</span>", 
"<span class=\"comment\"> * @journal: Journal to act on.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Release a journal_t structure once it is no longer in use by the</span>", 
"<span class=\"comment\"> * journaled object.</span>", 
"<span class=\"comment\"> * Return &lt;0 if we couldn't clean up the journal.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#jbd2_journal_destroy\">jbd2_journal_destroy</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Wait for the commit thread to wake up and die. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_kill_thread\">journal_kill_thread</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Force a final log commit */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_running_transaction\">j_running_transaction</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_commit_transaction\">jbd2_journal_commit_transaction</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Force any old transactions to disk */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Totally anal locking here... */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_checkpoint_transactions\">j_checkpoint_transactions</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_checkpoint_mutex\">j_checkpoint_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_log_do_checkpoint\">jbd2_log_do_checkpoint</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_checkpoint_mutex\">j_checkpoint_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT\">J_ASSERT</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_running_transaction\">j_running_transaction</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT\">J_ASSERT</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_committing_transaction\">j_committing_transaction</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT\">J_ASSERT</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_checkpoint_transactions\">j_checkpoint_transactions</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_sb_buffer\">j_sb_buffer</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_journal_aborted\">is_journal_aborted</a>(<a class=\"id\" href=\"#journal\">journal</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We can now mark the journal as empty. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_tail\">j_tail</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_tail_sequence\">j_tail_sequence</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>++<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_transaction_sequence\">j_transaction_sequence</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_update_superblock\">jbd2_journal_update_superblock</a>(<a class=\"id\" href=\"#journal\">journal</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_sb_buffer\">j_sb_buffer</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_proc_entry\">j_proc_entry</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_stats_proc_exit\">jbd2_stats_proc_exit</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_inode\">j_inode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_inode\">j_inode</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_revoke\">j_revoke</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_destroy_revoke\">jbd2_journal_destroy_revoke</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_wbuf\">j_wbuf</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *int jbd2_journal_check_used_features () - Check if features specified are used.</span>", 
"<span class=\"comment\"> * @journal: Journal to check.</span>", 
"<span class=\"comment\"> * @compat: bitmask of compatible features</span>", 
"<span class=\"comment\"> * @ro: bitmask of features that force read-only mount</span>", 
"<span class=\"comment\"> * @incompat: bitmask of incompatible features</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Check whether the journal uses all of a given set of</span>", 
"<span class=\"comment\"> * features.  Return true (non-zero) if it does.</span>", 
"<span class=\"comment\"> **/</span>", 
"", 
"int <a class=\"id\" href=\"#jbd2_journal_check_used_features\">jbd2_journal_check_used_features</a> (<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>, unsigned long <a class=\"id\" href=\"#compat\">compat</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned long <a class=\"id\" href=\"#ro\">ro</a>, unsigned long <a class=\"id\" href=\"#incompat\">incompat</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_superblock_t\">journal_superblock_t</a> *<a class=\"id\" href=\"#sb\">sb</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#compat\">compat</a> && !<a class=\"id\" href=\"#ro\">ro</a> && !<a class=\"id\" href=\"#incompat\">incompat</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_format_version\">j_format_version</a> == 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_superblock\">j_superblock</a>;", 
"", 
"<span class=\"ts\"/>if (((<a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_feature_compat\">s_feature_compat</a>) &amp; <a class=\"id\" href=\"#compat\">compat</a>) == <a class=\"id\" href=\"#compat\">compat</a>) &&", 
"<span class=\"ts\"/>    ((<a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_feature_ro_compat\">s_feature_ro_compat</a>) &amp; <a class=\"id\" href=\"#ro\">ro</a>) == <a class=\"id\" href=\"#ro\">ro</a>) &&", 
"<span class=\"ts\"/>    ((<a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_feature_incompat\">s_feature_incompat</a>) &amp; <a class=\"id\" href=\"#incompat\">incompat</a>) == <a class=\"id\" href=\"#incompat\">incompat</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * int jbd2_journal_check_available_features() - Check feature set in journalling layer</span>", 
"<span class=\"comment\"> * @journal: Journal to check.</span>", 
"<span class=\"comment\"> * @compat: bitmask of compatible features</span>", 
"<span class=\"comment\"> * @ro: bitmask of features that force read-only mount</span>", 
"<span class=\"comment\"> * @incompat: bitmask of incompatible features</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Check whether the journaling code supports the use of</span>", 
"<span class=\"comment\"> * all of a given set of features on this journal.  Return true</span>", 
"<span class=\"comment\"> * (non-zero) if it can. */</span>", 
"", 
"int <a class=\"id\" href=\"#jbd2_journal_check_available_features\">jbd2_journal_check_available_features</a> (<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>, unsigned long <a class=\"id\" href=\"#compat\">compat</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      unsigned long <a class=\"id\" href=\"#ro\">ro</a>, unsigned long <a class=\"id\" href=\"#incompat\">incompat</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#compat\">compat</a> && !<a class=\"id\" href=\"#ro\">ro</a> && !<a class=\"id\" href=\"#incompat\">incompat</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We can support any known requested features iff the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * superblock is in version 2.  Otherwise we fail to support any</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * extended sb features. */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_format_version\">j_format_version</a> != 2)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#compat\">compat</a>   &amp; <a class=\"id\" href=\"#JBD2_KNOWN_COMPAT_FEATURES\">JBD2_KNOWN_COMPAT_FEATURES</a>) == <a class=\"id\" href=\"#compat\">compat</a> &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#ro\">ro</a>       &amp; <a class=\"id\" href=\"#JBD2_KNOWN_ROCOMPAT_FEATURES\">JBD2_KNOWN_ROCOMPAT_FEATURES</a>) == <a class=\"id\" href=\"#ro\">ro</a> &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#incompat\">incompat</a> &amp; <a class=\"id\" href=\"#JBD2_KNOWN_INCOMPAT_FEATURES\">JBD2_KNOWN_INCOMPAT_FEATURES</a>) == <a class=\"id\" href=\"#incompat\">incompat</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * int jbd2_journal_set_features () - Mark a given journal feature in the superblock</span>", 
"<span class=\"comment\"> * @journal: Journal to act on.</span>", 
"<span class=\"comment\"> * @compat: bitmask of compatible features</span>", 
"<span class=\"comment\"> * @ro: bitmask of features that force read-only mount</span>", 
"<span class=\"comment\"> * @incompat: bitmask of incompatible features</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Mark a given journal feature as present on the</span>", 
"<span class=\"comment\"> * superblock.  Returns true if the requested features could be set.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#jbd2_journal_set_features\">jbd2_journal_set_features</a> (<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>, unsigned long <a class=\"id\" href=\"#compat\">compat</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned long <a class=\"id\" href=\"#ro\">ro</a>, unsigned long <a class=\"id\" href=\"#incompat\">incompat</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_superblock_t\">journal_superblock_t</a> *<a class=\"id\" href=\"#sb\">sb</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#jbd2_journal_check_used_features\">jbd2_journal_check_used_features</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#compat\">compat</a>, <a class=\"id\" href=\"#ro\">ro</a>, <a class=\"id\" href=\"#incompat\">incompat</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#jbd2_journal_check_available_features\">jbd2_journal_check_available_features</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#compat\">compat</a>, <a class=\"id\" href=\"#ro\">ro</a>, <a class=\"id\" href=\"#incompat\">incompat</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(1, \"Setting new features 0x%lx/0x%lx/0x%lx\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#compat\">compat</a>, <a class=\"id\" href=\"#ro\">ro</a>, <a class=\"id\" href=\"#incompat\">incompat</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_superblock\">j_superblock</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_feature_compat\">s_feature_compat</a>    |= <a class=\"id\" href=\"#cpu_to_be32\">cpu_to_be32</a>(<a class=\"id\" href=\"#compat\">compat</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_feature_ro_compat\">s_feature_ro_compat</a> |= <a class=\"id\" href=\"#cpu_to_be32\">cpu_to_be32</a>(<a class=\"id\" href=\"#ro\">ro</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_feature_incompat\">s_feature_incompat</a>  |= <a class=\"id\" href=\"#cpu_to_be32\">cpu_to_be32</a>(<a class=\"id\" href=\"#incompat\">incompat</a>);", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * jbd2_journal_clear_features () - Clear a given journal feature in the</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    superblock</span>", 
"<span class=\"comment\"> * @journal: Journal to act on.</span>", 
"<span class=\"comment\"> * @compat: bitmask of compatible features</span>", 
"<span class=\"comment\"> * @ro: bitmask of features that force read-only mount</span>", 
"<span class=\"comment\"> * @incompat: bitmask of incompatible features</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Clear a given journal feature as present on the</span>", 
"<span class=\"comment\"> * superblock.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#jbd2_journal_clear_features\">jbd2_journal_clear_features</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>, unsigned long <a class=\"id\" href=\"#compat\">compat</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#ro\">ro</a>, unsigned long <a class=\"id\" href=\"#incompat\">incompat</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_superblock_t\">journal_superblock_t</a> *<a class=\"id\" href=\"#sb\">sb</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(1, \"Clear features 0x%lx/0x%lx/0x%lx\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#compat\">compat</a>, <a class=\"id\" href=\"#ro\">ro</a>, <a class=\"id\" href=\"#incompat\">incompat</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_superblock\">j_superblock</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_feature_compat\">s_feature_compat</a>    &= ~<a class=\"id\" href=\"#cpu_to_be32\">cpu_to_be32</a>(<a class=\"id\" href=\"#compat\">compat</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_feature_ro_compat\">s_feature_ro_compat</a> &= ~<a class=\"id\" href=\"#cpu_to_be32\">cpu_to_be32</a>(<a class=\"id\" href=\"#ro\">ro</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_feature_incompat\">s_feature_incompat</a>  &= ~<a class=\"id\" href=\"#cpu_to_be32\">cpu_to_be32</a>(<a class=\"id\" href=\"#incompat\">incompat</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#jbd2_journal_clear_features\">jbd2_journal_clear_features</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * int jbd2_journal_update_format () - Update on-disk journal structure.</span>", 
"<span class=\"comment\"> * @journal: Journal to act on.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Given an initialised but unloaded journal struct, poke about in the</span>", 
"<span class=\"comment\"> * on-disk structure to update it to the most recent supported version.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#jbd2_journal_update_format\">jbd2_journal_update_format</a> (<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_superblock_t\">journal_superblock_t</a> *<a class=\"id\" href=\"#sb\">sb</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#journal_get_superblock\">journal_get_superblock</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_superblock\">j_superblock</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_header\">s_header</a>.<a class=\"id\" href=\"#h_blocktype\">h_blocktype</a>)) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#JBD2_SUPERBLOCK_V2\">JBD2_SUPERBLOCK_V2</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#JBD2_SUPERBLOCK_V1\">JBD2_SUPERBLOCK_V1</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#journal_convert_superblock_v1\">journal_convert_superblock_v1</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#journal_convert_superblock_v1\">journal_convert_superblock_v1</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#journal_superblock_t\">journal_superblock_t</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#blocksize\">blocksize</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>\"JBD: Converting superblock from version 1 to 2.\\n\");", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Pre-initialise new fields to zero */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = ((char *) &amp;(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_feature_compat\">s_feature_compat</a>)) - ((char *) <a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blocksize\">blocksize</a> = <a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_feature_compat\">s_feature_compat</a>, 0, <a class=\"id\" href=\"#blocksize\">blocksize</a>-<a class=\"id\" href=\"#offset\">offset</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_nr_users\">s_nr_users</a> = <a class=\"id\" href=\"#cpu_to_be32\">cpu_to_be32</a>(1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_header\">s_header</a>.<a class=\"id\" href=\"#h_blocktype\">h_blocktype</a> = <a class=\"id\" href=\"#cpu_to_be32\">cpu_to_be32</a>(<a class=\"id\" href=\"#JBD2_SUPERBLOCK_V2\">JBD2_SUPERBLOCK_V2</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_format_version\">j_format_version</a> = 2;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_sb_buffer\">j_sb_buffer</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUFFER_TRACE\">BUFFER_TRACE</a>(<a class=\"id\" href=\"#bh\">bh</a>, \"marking dirty\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mark_buffer_dirty\">mark_buffer_dirty</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sync_dirty_buffer\">sync_dirty_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * int jbd2_journal_flush () - Flush journal</span>", 
"<span class=\"comment\"> * @journal: Journal to act on.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Flush all data for a given journal to disk and empty the journal.</span>", 
"<span class=\"comment\"> * Filesystems can use this when remounting readonly to ensure that</span>", 
"<span class=\"comment\"> * recovery does not need to happen on remount.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#jbd2_journal_flush\">jbd2_journal_flush</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#transaction_t\">transaction_t</a> *<a class=\"id\" href=\"#transaction\">transaction</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#old_tail\">old_tail</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock\">write_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Force everything buffered to the log... */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_running_transaction\">j_running_transaction</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transaction\">transaction</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_running_transaction\">j_running_transaction</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__jbd2_log_start_commit\">__jbd2_log_start_commit</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_tid\">t_tid</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_committing_transaction\">j_committing_transaction</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transaction\">transaction</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_committing_transaction\">j_committing_transaction</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Wait for the log commit to complete... */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#transaction\">transaction</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tid_t\">tid_t</a> <a class=\"id\" href=\"#tid\">tid</a> = <a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_tid\">t_tid</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock\">write_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_log_wait_commit\">jbd2_log_wait_commit</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#tid\">tid</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock\">write_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* ...and flush everything in the log out to disk. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/>while (!<a class=\"id\" href=\"#err\">err</a> && <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_checkpoint_transactions\">j_checkpoint_transactions</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_checkpoint_mutex\">j_checkpoint_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#jbd2_log_do_checkpoint\">jbd2_log_do_checkpoint</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_checkpoint_mutex\">j_checkpoint_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_journal_aborted\">is_journal_aborted</a>(<a class=\"id\" href=\"#journal\">journal</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd2_cleanup_journal_tail\">jbd2_cleanup_journal_tail</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Finally, mark the journal as really needing no recovery.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This sets s_start==0 in the underlying superblock, which is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the magic code for a fully-recovered superblock.  Any future</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * commits of data to the journal will restore the current</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * s_start value. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock\">write_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_tail\">old_tail</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_tail\">j_tail</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_tail\">j_tail</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock\">write_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_update_superblock\">jbd2_journal_update_superblock</a>(<a class=\"id\" href=\"#journal\">journal</a>, 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock\">write_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_tail\">j_tail</a> = <a class=\"id\" href=\"#old_tail\">old_tail</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT\">J_ASSERT</a>(!<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_running_transaction\">j_running_transaction</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT\">J_ASSERT</a>(!<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_committing_transaction\">j_committing_transaction</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT\">J_ASSERT</a>(!<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_checkpoint_transactions\">j_checkpoint_transactions</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT\">J_ASSERT</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_head\">j_head</a> == <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_tail\">j_tail</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT\">J_ASSERT</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_tail_sequence\">j_tail_sequence</a> == <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_transaction_sequence\">j_transaction_sequence</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock\">write_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * int jbd2_journal_wipe() - Wipe journal contents</span>", 
"<span class=\"comment\"> * @journal: Journal to act on.</span>", 
"<span class=\"comment\"> * @write: flag (see below)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Wipe out all of the contents of a journal, safely.  This will produce</span>", 
"<span class=\"comment\"> * a warning if the journal contains any valid recovery information.</span>", 
"<span class=\"comment\"> * Must be called between journal_init_*() and jbd2_journal_load().</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If 'write' is non-zero, then we wipe out the journal on disk; otherwise</span>", 
"<span class=\"comment\"> * we merely suppress recovery.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#jbd2_journal_wipe\">jbd2_journal_wipe</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>, int <a class=\"id\" href=\"#write\">write</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT\">J_ASSERT</a> (!(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_flags\">j_flags</a> &amp; <a class=\"id\" href=\"#JBD2_LOADED\">JBD2_LOADED</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#load_superblock\">load_superblock</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_tail\">j_tail</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#no_recovery\">no_recovery</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a> (<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"JBD: %s recovery information on journal\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write\">write</a> ? \"Clearing\" : \"Ignoring\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#jbd2_journal_skip_recovery\">jbd2_journal_skip_recovery</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#write\">write</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_update_superblock\">jbd2_journal_update_superblock</a>(<a class=\"id\" href=\"#journal\">journal</a>, 1);", 
"", 
" <a class=\"id\" href=\"#no_recovery\">no_recovery</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Journal abort has very specific semantics, which we describe</span>", 
"<span class=\"comment\"> * for journal abort.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Two internal functions, which provide abort to the jbd layer</span>", 
"<span class=\"comment\"> * itself are here.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Quick version for internal journal use (doesn't lock the journal).</span>", 
"<span class=\"comment\"> * Aborts hard --- we mark the abort as occurred, but do _nothing_ else,</span>", 
"<span class=\"comment\"> * and don't attempt to make any other journal updates.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__jbd2_journal_abort_hard\">__jbd2_journal_abort_hard</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#transaction_t\">transaction_t</a> *<a class=\"id\" href=\"#transaction\">transaction</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_flags\">j_flags</a> &amp; <a class=\"id\" href=\"#JBD2_ABORT\">JBD2_ABORT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"Aborting journal on device %s.\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_devname\">j_devname</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock\">write_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_flags\">j_flags</a> |= <a class=\"id\" href=\"#JBD2_ABORT\">JBD2_ABORT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#transaction\">transaction</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_running_transaction\">j_running_transaction</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#transaction\">transaction</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__jbd2_log_start_commit\">__jbd2_log_start_commit</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#transaction\">transaction</a>-><a class=\"id\" href=\"#t_tid\">t_tid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock\">write_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Soft abort: record the abort error status in the journal superblock,</span>", 
"<span class=\"comment\"> * but don't do any other IO. */</span>", 
"static void <a class=\"id\" href=\"#__journal_abort_soft\">__journal_abort_soft</a> (<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>, int <a class=\"id\" href=\"#errno\">errno</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_flags\">j_flags</a> &amp; <a class=\"id\" href=\"#JBD2_ABORT\">JBD2_ABORT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_errno\">j_errno</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_errno\">j_errno</a> = <a class=\"id\" href=\"#errno\">errno</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__jbd2_journal_abort_hard\">__jbd2_journal_abort_hard</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#errno\">errno</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_update_superblock\">jbd2_journal_update_superblock</a>(<a class=\"id\" href=\"#journal\">journal</a>, 1);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * void jbd2_journal_abort () - Shutdown the journal immediately.</span>", 
"<span class=\"comment\"> * @journal: the journal to shutdown.</span>", 
"<span class=\"comment\"> * @errno:   an error number to record in the journal indicating</span>", 
"<span class=\"comment\"> *           the reason for the shutdown.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Perform a complete, immediate shutdown of the ENTIRE</span>", 
"<span class=\"comment\"> * journal (not of a single transaction).  This operation cannot be</span>", 
"<span class=\"comment\"> * undone without closing and reopening the journal.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The jbd2_journal_abort function is intended to support higher level error</span>", 
"<span class=\"comment\"> * recovery mechanisms such as the ext2/ext3 remount-readonly error</span>", 
"<span class=\"comment\"> * mode.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Journal abort has very specific semantics.  Any existing dirty,</span>", 
"<span class=\"comment\"> * unjournaled buffers in the main filesystem will still be written to</span>", 
"<span class=\"comment\"> * disk by bdflush, but the journaling mechanism will be suspended</span>", 
"<span class=\"comment\"> * immediately and no further transaction commits will be honoured.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Any dirty, journaled buffers will be written back to disk without</span>", 
"<span class=\"comment\"> * hitting the journal.  Atomicity cannot be guaranteed on an aborted</span>", 
"<span class=\"comment\"> * filesystem, but we _do_ attempt to leave as much data as possible</span>", 
"<span class=\"comment\"> * behind for fsck to use for cleanup.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Any attempt to get a new transaction handle on a journal which is in</span>", 
"<span class=\"comment\"> * ABORT state will just result in an -EROFS error return.  A</span>", 
"<span class=\"comment\"> * jbd2_journal_stop on an existing handle will return -EIO if we have</span>", 
"<span class=\"comment\"> * entered abort state during the update.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Recursive transactions are not disturbed by journal abort until the</span>", 
"<span class=\"comment\"> * final jbd2_journal_stop, which will receive the -EIO error.</span>", 
];
xr_frag_insert('l/8e/52d3344d877121ea6d92d8abe5f2391246989e.xr', __xr_tmp);
