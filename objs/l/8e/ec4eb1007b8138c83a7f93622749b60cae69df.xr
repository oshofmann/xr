var __xr_tmp = [
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#reaper\">reaper</a> = <a class=\"id\" href=\"#get_proc_task\">get_proc_task</a>(<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tgid_iter\">tgid_iter</a> <a class=\"id\" href=\"#iter\">iter</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pid_namespace\">pid_namespace</a> *<a class=\"id\" href=\"#ns\">ns</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#reaper\">reaper</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_no_task\">out_no_task</a>;", 
"", 
"<span class=\"ts\"/>for (; <a class=\"id\" href=\"#nr\">nr</a> &lt; <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#proc_base_stuff\">proc_base_stuff</a>); <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>++, <a class=\"id\" href=\"#nr\">nr</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#pid_entry\">pid_entry</a> *<a class=\"id\" href=\"#p\">p</a> = &amp;<a class=\"id\" href=\"#proc_base_stuff\">proc_base_stuff</a>[<a class=\"id\" href=\"#nr\">nr</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#proc_base_fill_cache\">proc_base_fill_cache</a>(<a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#dirent\">dirent</a>, <a class=\"id\" href=\"#filldir\">filldir</a>, <a class=\"id\" href=\"#reaper\">reaper</a>, <a class=\"id\" href=\"#p\">p</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ns\">ns</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_dentry\">f_dentry</a>-><a class=\"id\" href=\"#d_sb\">d_sb</a>-><a class=\"id\" href=\"#s_fs_info\">s_fs_info</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>.<a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>.<a class=\"id\" href=\"#tgid\">tgid</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a> - <a class=\"id\" href=\"#TGID_OFFSET\">TGID_OFFSET</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#iter\">iter</a> = <a class=\"id\" href=\"#next_tgid\">next_tgid</a>(<a class=\"id\" href=\"#ns\">ns</a>, <a class=\"id\" href=\"#iter\">iter</a>);", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#iter\">iter</a>.<a class=\"id\" href=\"#task\">task</a>;", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#iter\">iter</a>.<a class=\"id\" href=\"#tgid\">tgid</a> += 1, <a class=\"id\" href=\"#iter\">iter</a> = <a class=\"id\" href=\"#next_tgid\">next_tgid</a>(<a class=\"id\" href=\"#ns\">ns</a>, <a class=\"id\" href=\"#iter\">iter</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a> = <a class=\"id\" href=\"#iter\">iter</a>.<a class=\"id\" href=\"#tgid\">tgid</a> + <a class=\"id\" href=\"#TGID_OFFSET\">TGID_OFFSET</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#proc_pid_fill_cache\">proc_pid_fill_cache</a>(<a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#dirent\">dirent</a>, <a class=\"id\" href=\"#filldir\">filldir</a>, <a class=\"id\" href=\"#iter\">iter</a>) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#iter\">iter</a>.<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a> = <a class=\"id\" href=\"#PID_MAX_LIMIT\">PID_MAX_LIMIT</a> + <a class=\"id\" href=\"#TGID_OFFSET\">TGID_OFFSET</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#reaper\">reaper</a>);", 
"<a class=\"id\" href=\"#out_no_task\">out_no_task</a>:", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Tasks</span>", 
"<span class=\"comment\"> */</span>", 
"static const struct <a class=\"id\" href=\"#pid_entry\">pid_entry</a> <a class=\"id\" href=\"#tid_base_stuff\">tid_base_stuff</a>[] = {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DIR\">DIR</a>(\"fd\",        <a class=\"id\" href=\"#S_IRUSR\">S_IRUSR</a>|<a class=\"id\" href=\"#S_IXUSR\">S_IXUSR</a>, <a class=\"id\" href=\"#proc_fd_inode_operations\">proc_fd_inode_operations</a>, <a class=\"id\" href=\"#proc_fd_operations\">proc_fd_operations</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DIR\">DIR</a>(\"fdinfo\",    <a class=\"id\" href=\"#S_IRUSR\">S_IRUSR</a>|<a class=\"id\" href=\"#S_IXUSR\">S_IXUSR</a>, <a class=\"id\" href=\"#proc_fdinfo_inode_operations\">proc_fdinfo_inode_operations</a>, <a class=\"id\" href=\"#proc_fdinfo_operations\">proc_fdinfo_operations</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG\">REG</a>(\"environ\",   <a class=\"id\" href=\"#S_IRUSR\">S_IRUSR</a>, <a class=\"id\" href=\"#proc_environ_operations\">proc_environ_operations</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INF\">INF</a>(\"auxv\",      <a class=\"id\" href=\"#S_IRUSR\">S_IRUSR</a>, <a class=\"id\" href=\"#proc_pid_auxv\">proc_pid_auxv</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ONE\">ONE</a>(\"status\",    <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#proc_pid_status\">proc_pid_status</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ONE\">ONE</a>(\"personality\", <a class=\"id\" href=\"#S_IRUSR\">S_IRUSR</a>, <a class=\"id\" href=\"#proc_pid_personality\">proc_pid_personality</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INF\">INF</a>(\"limits\",<span class=\"ts\"/> <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#proc_pid_limits\">proc_pid_limits</a>),", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SCHED_DEBUG\">CONFIG_SCHED_DEBUG</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG\">REG</a>(\"sched\",     <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>|<a class=\"id\" href=\"#S_IWUSR\">S_IWUSR</a>, <a class=\"id\" href=\"#proc_pid_sched_operations\">proc_pid_sched_operations</a>),", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG\">REG</a>(\"comm\",      <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>|<a class=\"id\" href=\"#S_IWUSR\">S_IWUSR</a>, <a class=\"id\" href=\"#proc_pid_set_comm_operations\">proc_pid_set_comm_operations</a>),", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HAVE_ARCH_TRACEHOOK\">CONFIG_HAVE_ARCH_TRACEHOOK</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INF\">INF</a>(\"syscall\",   <a class=\"id\" href=\"#S_IRUSR\">S_IRUSR</a>, <a class=\"id\" href=\"#proc_pid_syscall\">proc_pid_syscall</a>),", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INF\">INF</a>(\"cmdline\",   <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#proc_pid_cmdline\">proc_pid_cmdline</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ONE\">ONE</a>(\"stat\",      <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#proc_tid_stat\">proc_tid_stat</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ONE\">ONE</a>(\"statm\",     <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#proc_pid_statm\">proc_pid_statm</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG\">REG</a>(\"maps\",      <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#proc_maps_operations\">proc_maps_operations</a>),", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NUMA\">CONFIG_NUMA</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG\">REG</a>(\"numa_maps\", <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#proc_numa_maps_operations\">proc_numa_maps_operations</a>),", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG\">REG</a>(\"mem\",       <a class=\"id\" href=\"#S_IRUSR\">S_IRUSR</a>|<a class=\"id\" href=\"#S_IWUSR\">S_IWUSR</a>, <a class=\"id\" href=\"#proc_mem_operations\">proc_mem_operations</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LNK\">LNK</a>(\"cwd\",       <a class=\"id\" href=\"#proc_cwd_link\">proc_cwd_link</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LNK\">LNK</a>(\"root\",      <a class=\"id\" href=\"#proc_root_link\">proc_root_link</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LNK\">LNK</a>(\"exe\",       <a class=\"id\" href=\"#proc_exe_link\">proc_exe_link</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG\">REG</a>(\"mounts\",    <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#proc_mounts_operations\">proc_mounts_operations</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG\">REG</a>(\"mountinfo\",  <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#proc_mountinfo_operations\">proc_mountinfo_operations</a>),", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROC_PAGE_MONITOR\">CONFIG_PROC_PAGE_MONITOR</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG\">REG</a>(\"clear_refs\", <a class=\"id\" href=\"#S_IWUSR\">S_IWUSR</a>, <a class=\"id\" href=\"#proc_clear_refs_operations\">proc_clear_refs_operations</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG\">REG</a>(\"smaps\",     <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#proc_smaps_operations\">proc_smaps_operations</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG\">REG</a>(\"pagemap\",    <a class=\"id\" href=\"#S_IRUSR\">S_IRUSR</a>, <a class=\"id\" href=\"#proc_pagemap_operations\">proc_pagemap_operations</a>),", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SECURITY\">CONFIG_SECURITY</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DIR\">DIR</a>(\"attr\",      <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>|<a class=\"id\" href=\"#S_IXUGO\">S_IXUGO</a>, <a class=\"id\" href=\"#proc_attr_dir_inode_operations\">proc_attr_dir_inode_operations</a>, <a class=\"id\" href=\"#proc_attr_dir_operations\">proc_attr_dir_operations</a>),", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_KALLSYMS\">CONFIG_KALLSYMS</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INF\">INF</a>(\"wchan\",     <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#proc_pid_wchan\">proc_pid_wchan</a>),", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_STACKTRACE\">CONFIG_STACKTRACE</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ONE\">ONE</a>(\"stack\",      <a class=\"id\" href=\"#S_IRUSR\">S_IRUSR</a>, <a class=\"id\" href=\"#proc_pid_stack\">proc_pid_stack</a>),", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SCHEDSTATS\">CONFIG_SCHEDSTATS</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INF\">INF</a>(\"schedstat\", <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#proc_pid_schedstat\">proc_pid_schedstat</a>),", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_LATENCYTOP\">CONFIG_LATENCYTOP</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG\">REG</a>(\"latency\",  <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#proc_lstats_operations\">proc_lstats_operations</a>),", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROC_PID_CPUSET\">CONFIG_PROC_PID_CPUSET</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG\">REG</a>(\"cpuset\",    <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#proc_cpuset_operations\">proc_cpuset_operations</a>),", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_CGROUPS\">CONFIG_CGROUPS</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG\">REG</a>(\"cgroup\",  <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#proc_cgroup_operations\">proc_cgroup_operations</a>),", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INF\">INF</a>(\"oom_score\", <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#proc_oom_score\">proc_oom_score</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG\">REG</a>(\"oom_adj\",   <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>|<a class=\"id\" href=\"#S_IWUSR\">S_IWUSR</a>, <a class=\"id\" href=\"#proc_oom_adjust_operations\">proc_oom_adjust_operations</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG\">REG</a>(\"oom_score_adj\", <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>|<a class=\"id\" href=\"#S_IWUSR\">S_IWUSR</a>, <a class=\"id\" href=\"#proc_oom_score_adj_operations\">proc_oom_score_adj_operations</a>),", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_AUDITSYSCALL\">CONFIG_AUDITSYSCALL</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG\">REG</a>(\"loginuid\",  <a class=\"id\" href=\"#S_IWUSR\">S_IWUSR</a>|<a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#proc_loginuid_operations\">proc_loginuid_operations</a>),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG\">REG</a>(\"sessionid\",  <a class=\"id\" href=\"#S_IRUSR\">S_IRUSR</a>, <a class=\"id\" href=\"#proc_sessionid_operations\">proc_sessionid_operations</a>),", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_FAULT_INJECTION\">CONFIG_FAULT_INJECTION</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#REG\">REG</a>(\"make-it-fail\", <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>|<a class=\"id\" href=\"#S_IWUSR\">S_IWUSR</a>, <a class=\"id\" href=\"#proc_fault_inject_operations\">proc_fault_inject_operations</a>),", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TASK_IO_ACCOUNTING\">CONFIG_TASK_IO_ACCOUNTING</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INF\">INF</a>(\"io\",<span class=\"ts\"/><a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, <a class=\"id\" href=\"#proc_tid_io_accounting\">proc_tid_io_accounting</a>),", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"static int <a class=\"id\" href=\"#proc_tid_base_readdir\">proc_tid_base_readdir</a>(struct <a class=\"id\" href=\"#file\">file</a> * <a class=\"id\" href=\"#filp\">filp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     void * <a class=\"id\" href=\"#dirent\">dirent</a>, <a class=\"id\" href=\"#filldir_t\">filldir_t</a> <a class=\"id\" href=\"#filldir\">filldir</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#proc_pident_readdir\">proc_pident_readdir</a>(<a class=\"id\" href=\"#filp\">filp</a>,<a class=\"id\" href=\"#dirent\">dirent</a>,<a class=\"id\" href=\"#filldir\">filldir</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#tid_base_stuff\">tid_base_stuff</a>,<a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#tid_base_stuff\">tid_base_stuff</a>));", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#proc_tid_base_lookup\">proc_tid_base_lookup</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, struct <a class=\"id\" href=\"#nameidata\">nameidata</a> *<a class=\"id\" href=\"#nd\">nd</a>){", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#proc_pident_lookup\">proc_pident_lookup</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#dentry\">dentry</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#tid_base_stuff\">tid_base_stuff</a>, <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#tid_base_stuff\">tid_base_stuff</a>));", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#proc_tid_base_operations\">proc_tid_base_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_read_dir\">generic_read_dir</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#readdir\">readdir</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_tid_base_readdir\">proc_tid_base_readdir</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#inode_operations\">inode_operations</a> <a class=\"id\" href=\"#proc_tid_base_inode_operations\">proc_tid_base_inode_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#lookup\">lookup</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_tid_base_lookup\">proc_tid_base_lookup</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#getattr\">getattr</a><span class=\"ts\"/>= <a class=\"id\" href=\"#pid_getattr\">pid_getattr</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#setattr\">setattr</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_setattr\">proc_setattr</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#proc_task_instantiate\">proc_task_instantiate</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>, const void *<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOENT\">ENOENT</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#proc_pid_make_inode\">proc_pid_make_inode</a>(<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#task\">task</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#inode\">inode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a> = <a class=\"id\" href=\"#S_IFDIR\">S_IFDIR</a>|<a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>|<a class=\"id\" href=\"#S_IXUGO\">S_IXUGO</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_op\">i_op</a> = &amp;<a class=\"id\" href=\"#proc_tid_base_inode_operations\">proc_tid_base_inode_operations</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_fop\">i_fop</a> = &amp;<a class=\"id\" href=\"#proc_tid_base_operations\">proc_tid_base_operations</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_flags\">i_flags</a>|=<a class=\"id\" href=\"#S_IMMUTABLE\">S_IMMUTABLE</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_nlink\">i_nlink</a> = 2 + <a class=\"id\" href=\"#pid_entry_count_dirs\">pid_entry_count_dirs</a>(<a class=\"id\" href=\"#tid_base_stuff\">tid_base_stuff</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#tid_base_stuff\">tid_base_stuff</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_op\">d_op</a> = &amp;<a class=\"id\" href=\"#pid_dentry_operations\">pid_dentry_operations</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#d_add\">d_add</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Close the race of the process dying before we return the dentry */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pid_revalidate\">pid_revalidate</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#NULL\">NULL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#proc_task_lookup\">proc_task_lookup</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> * <a class=\"id\" href=\"#dentry\">dentry</a>, struct <a class=\"id\" href=\"#nameidata\">nameidata</a> *<a class=\"id\" href=\"#nd\">nd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOENT\">ENOENT</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#leader\">leader</a> = <a class=\"id\" href=\"#get_proc_task\">get_proc_task</a>(<a class=\"id\" href=\"#dir\">dir</a>);", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#tid\">tid</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pid_namespace\">pid_namespace</a> *<a class=\"id\" href=\"#ns\">ns</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#leader\">leader</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_no_task\">out_no_task</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tid\">tid</a> = <a class=\"id\" href=\"#name_to_int\">name_to_int</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tid\">tid</a> == ~0U)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ns\">ns</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_sb\">d_sb</a>-><a class=\"id\" href=\"#s_fs_info\">s_fs_info</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#find_task_by_pid_ns\">find_task_by_pid_ns</a>(<a class=\"id\" href=\"#tid\">tid</a>, <a class=\"id\" href=\"#ns\">ns</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#task\">task</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_task_struct\">get_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#task\">task</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#same_thread_group\">same_thread_group</a>(<a class=\"id\" href=\"#leader\">leader</a>, <a class=\"id\" href=\"#task\">task</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_drop_task\">out_drop_task</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#proc_task_instantiate\">proc_task_instantiate</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<a class=\"id\" href=\"#out_drop_task\">out_drop_task</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#leader\">leader</a>);", 
"<a class=\"id\" href=\"#out_no_task\">out_no_task</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Find the first tid of a thread group to return to user space.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Usually this is just the thread group leader, but if the users</span>", 
"<span class=\"comment\"> * buffer was too small or there was a seek into the middle of the</span>", 
"<span class=\"comment\"> * directory we have more work todo.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * In the case of a short read we start with find_task_by_pid.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * In the case of a seek we start with the leader and walk nr</span>", 
"<span class=\"comment\"> * threads past it.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#first_tid\">first_tid</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#leader\">leader</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#tid\">tid</a>, int <a class=\"id\" href=\"#nr\">nr</a>, struct <a class=\"id\" href=\"#pid_namespace\">pid_namespace</a> *<a class=\"id\" href=\"#ns\">ns</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#pos\">pos</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><span class=\"comment\">/* Attempt to start with the pid of a thread */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tid\">tid</a> && (<a class=\"id\" href=\"#nr\">nr</a> &gt; 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#find_task_by_pid_ns\">find_task_by_pid_ns</a>(<a class=\"id\" href=\"#tid\">tid</a>, <a class=\"id\" href=\"#ns\">ns</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pos\">pos</a> && (<a class=\"id\" href=\"#pos\">pos</a>-><a class=\"id\" href=\"#group_leader\">group_leader</a> == <a class=\"id\" href=\"#leader\">leader</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#found\">found</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If nr exceeds the number of threads there is nothing todo */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nr\">nr</a> && <a class=\"id\" href=\"#nr\">nr</a> >= <a class=\"id\" href=\"#get_nr_threads\">get_nr_threads</a>(<a class=\"id\" href=\"#leader\">leader</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If we haven't found our starting place yet start</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * with the leader and walk nr threads forward.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#leader\">leader</a>; <a class=\"id\" href=\"#nr\">nr</a> &gt; 0; --<a class=\"id\" href=\"#nr\">nr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#next_thread\">next_thread</a>(<a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pos\">pos</a> == <a class=\"id\" href=\"#leader\">leader</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#found\">found</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_task_struct\">get_task_struct</a>(<a class=\"id\" href=\"#pos\">pos</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pos\">pos</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Find the next thread in the thread list.</span>", 
"<span class=\"comment\"> * Return NULL if there is an error or no next thread.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The reference to the input task_struct is released.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#next_tid\">next_tid</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#start\">start</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pid_alive\">pid_alive</a>(<a class=\"id\" href=\"#start\">start</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#next_thread\">next_thread</a>(<a class=\"id\" href=\"#start\">start</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#thread_group_leader\">thread_group_leader</a>(<a class=\"id\" href=\"#pos\">pos</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_task_struct\">get_task_struct</a>(<a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#start\">start</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pos\">pos</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#proc_task_fill_cache\">proc_task_fill_cache</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, void *<a class=\"id\" href=\"#dirent\">dirent</a>, <a class=\"id\" href=\"#filldir_t\">filldir_t</a> <a class=\"id\" href=\"#filldir\">filldir</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>, int <a class=\"id\" href=\"#tid\">tid</a>)", 
"{", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#name\">name</a>[<a class=\"id\" href=\"#PROC_NUMBUF\">PROC_NUMBUF</a>];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#name\">name</a>, sizeof(<a class=\"id\" href=\"#name\">name</a>), \"%d\", <a class=\"id\" href=\"#tid\">tid</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#proc_fill_cache\">proc_fill_cache</a>(<a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#dirent\">dirent</a>, <a class=\"id\" href=\"#filldir\">filldir</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#proc_task_instantiate\">proc_task_instantiate</a>, <a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"}", 
"", 
"<span class=\"comment\">/* for the /proc/TGID/task/ directories */</span>", 
"static int <a class=\"id\" href=\"#proc_task_readdir\">proc_task_readdir</a>(struct <a class=\"id\" href=\"#file\">file</a> * <a class=\"id\" href=\"#filp\">filp</a>, void * <a class=\"id\" href=\"#dirent\">dirent</a>, <a class=\"id\" href=\"#filldir_t\">filldir_t</a> <a class=\"id\" href=\"#filldir\">filldir</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#leader\">leader</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ino_t\">ino_t</a> <a class=\"id\" href=\"#ino\">ino</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#tid\">tid</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pid_namespace\">pid_namespace</a> *<a class=\"id\" href=\"#ns\">ns</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#get_proc_task\">get_proc_task</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#task\">task</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_no_task\">out_no_task</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pid_alive\">pid_alive</a>(<a class=\"id\" href=\"#task\">task</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#leader\">leader</a> = <a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#group_leader\">group_leader</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_task_struct\">get_task_struct</a>(<a class=\"id\" href=\"#leader\">leader</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#leader\">leader</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_no_task\">out_no_task</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"", 
"<span class=\"ts\"/>switch ((unsigned long)<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>) {", 
"<span class=\"ts\"/>case 0:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ino\">ino</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#filldir\">filldir</a>(<a class=\"id\" href=\"#dirent\">dirent</a>, \".\", 1, <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>, <a class=\"id\" href=\"#ino\">ino</a>, <a class=\"id\" href=\"#DT_DIR\">DT_DIR</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fall through */</span>", 
"<span class=\"ts\"/>case 1:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ino\">ino</a> = <a class=\"id\" href=\"#parent_ino\">parent_ino</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#filldir\">filldir</a>(<a class=\"id\" href=\"#dirent\">dirent</a>, \"..\", 2, <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>, <a class=\"id\" href=\"#ino\">ino</a>, <a class=\"id\" href=\"#DT_DIR\">DT_DIR</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fall through */</span>", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* f_version caches the tgid value that the last readdir call couldn't</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * return. lseek aka telldir automagically resets f_version to 0.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ns\">ns</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_dentry\">f_dentry</a>-><a class=\"id\" href=\"#d_sb\">d_sb</a>-><a class=\"id\" href=\"#s_fs_info\">s_fs_info</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tid\">tid</a> = (int)<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_version\">f_version</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_version\">f_version</a> = 0;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#first_tid\">first_tid</a>(<a class=\"id\" href=\"#leader\">leader</a>, <a class=\"id\" href=\"#tid\">tid</a>, <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a> - 2, <a class=\"id\" href=\"#ns\">ns</a>);", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#task\">task</a>;", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#next_tid\">next_tid</a>(<a class=\"id\" href=\"#task\">task</a>), <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tid\">tid</a> = <a class=\"id\" href=\"#task_pid_nr_ns\">task_pid_nr_ns</a>(<a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#ns\">ns</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#proc_task_fill_cache\">proc_task_fill_cache</a>(<a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#dirent\">dirent</a>, <a class=\"id\" href=\"#filldir\">filldir</a>, <a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#tid\">tid</a>) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* returning this tgid failed, save it as the first</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * pid for the next readir call */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_version\">f_version</a> = (<a class=\"id\" href=\"#u64\">u64</a>)<a class=\"id\" href=\"#tid\">tid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#leader\">leader</a>);", 
"<a class=\"id\" href=\"#out_no_task\">out_no_task</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#proc_task_getattr\">proc_task_getattr</a>(struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#mnt\">mnt</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, struct <a class=\"id\" href=\"#kstat\">kstat</a> *<a class=\"id\" href=\"#stat\">stat</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#get_proc_task\">get_proc_task</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#generic_fillattr\">generic_fillattr</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#stat\">stat</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stat\">stat</a>-><a class=\"id\" href=\"#nlink\">nlink</a> += <a class=\"id\" href=\"#get_nr_threads\">get_nr_threads</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#inode_operations\">inode_operations</a> <a class=\"id\" href=\"#proc_task_inode_operations\">proc_task_inode_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#lookup\">lookup</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_task_lookup\">proc_task_lookup</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#getattr\">getattr</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_task_getattr\">proc_task_getattr</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#setattr\">setattr</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_setattr\">proc_setattr</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#proc_task_operations\">proc_task_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_read_dir\">generic_read_dir</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#readdir\">readdir</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_task_readdir\">proc_task_readdir</a>,", 
"};", 
];
xr_frag_insert('l/8e/ec4eb1007b8138c83a7f93622749b60cae69df.xr', __xr_tmp);
