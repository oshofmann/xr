var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  linux/drivers/video/fb_defio.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 2006 Jaya Kumar</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file is subject to the terms and conditions of the GNU General Public</span>", 
"<span class=\"comment\"> * License. See the file COPYING in the main directory of this archive</span>", 
"<span class=\"comment\"> * for more details.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#vmalloc\">vmalloc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fb\">fb</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* to support deferred IO */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rmap\">rmap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pagemap\">pagemap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#fb_deferred_io_page\">fb_deferred_io_page</a>(struct <a class=\"id\" href=\"#fb_info\">fb_info</a> *<a class=\"id\" href=\"#info\">info</a>, unsigned long <a class=\"id\" href=\"#offs\">offs</a>)", 
"{", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#screen_base\">screen_base</a> = (void <a class=\"id\" href=\"#__force\">__force</a> *) <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#screen_base\">screen_base</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_vmalloc_addr\">is_vmalloc_addr</a>(<a class=\"id\" href=\"#screen_base\">screen_base</a> + <a class=\"id\" href=\"#offs\">offs</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#vmalloc_to_page\">vmalloc_to_page</a>(<a class=\"id\" href=\"#screen_base\">screen_base</a> + <a class=\"id\" href=\"#offs\">offs</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#pfn_to_page\">pfn_to_page</a>((<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#fix\">fix</a>.<a class=\"id\" href=\"#smem_start\">smem_start</a> + <a class=\"id\" href=\"#offs\">offs</a>) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#page\">page</a>;", 
"}", 
"", 
"<span class=\"comment\">/* this is to find and return the vmalloc-ed fb pages */</span>", 
"static int <a class=\"id\" href=\"#fb_deferred_io_fault\">fb_deferred_io_fault</a>(struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_fault\">vm_fault</a> *<a class=\"id\" href=\"#vmf\">vmf</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fb_info\">fb_info</a> *<a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_private_data\">vm_private_data</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#vmf\">vmf</a>-><a class=\"id\" href=\"#pgoff\">pgoff</a> << <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#offset\">offset</a> >= <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#fix\">fix</a>.<a class=\"id\" href=\"#smem_len\">smem_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#VM_FAULT_SIGBUS\">VM_FAULT_SIGBUS</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#fb_deferred_io_page\">fb_deferred_io_page</a>(<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#page\">page</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#VM_FAULT_SIGBUS\">VM_FAULT_SIGBUS</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_page\">get_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_file\">vm_file</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a>-><a class=\"id\" href=\"#mapping\">mapping</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_file\">vm_file</a>-><a class=\"id\" href=\"#f_mapping\">f_mapping</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"no mapping available\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#page\">page</a>-><a class=\"id\" href=\"#mapping\">mapping</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a>-><a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#vmf\">vmf</a>-><a class=\"id\" href=\"#pgoff\">pgoff</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vmf\">vmf</a>-><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#fb_deferred_io_fsync\">fb_deferred_io_fsync</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, int <a class=\"id\" href=\"#datasync\">datasync</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fb_info\">fb_info</a> *<a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Skip if deferred io is compiled-in but disabled on this fbdev */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#fbdefio\">fbdefio</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Kill off the delayed work */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cancel_rearming_delayed_work\">cancel_rearming_delayed_work</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#deferred_work\">deferred_work</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Run it immediately */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#schedule_delayed_work\">schedule_delayed_work</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#deferred_work\">deferred_work</a>, 0);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#fb_deferred_io_fsync\">fb_deferred_io_fsync</a>);", 
"", 
"<span class=\"comment\">/* vm_ops-&gt;page_mkwrite handler */</span>", 
"static int <a class=\"id\" href=\"#fb_deferred_io_mkwrite\">fb_deferred_io_mkwrite</a>(struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#vm_fault\">vm_fault</a> *<a class=\"id\" href=\"#vmf\">vmf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#vmf\">vmf</a>-><a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fb_info\">fb_info</a> *<a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_private_data\">vm_private_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fb_deferred_io\">fb_deferred_io</a> *<a class=\"id\" href=\"#fbdefio\">fbdefio</a> = <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#fbdefio\">fbdefio</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#cur\">cur</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* this is a callback we get when userspace first tries to</span>", 
"<span class=\"comment\"><span class=\"ts\"/>write to the page. we schedule a workqueue. that workqueue</span>", 
"<span class=\"comment\"><span class=\"ts\"/>will eventually mkclean the touched pages and execute the</span>", 
"<span class=\"comment\"><span class=\"ts\"/>deferred framebuffer IO. then if userspace touches a page</span>", 
"<span class=\"comment\"><span class=\"ts\"/>again, we repeat the same scheme */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* protect against the workqueue changing the page list */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#fbdefio\">fbdefio</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We want the page to remain locked from -&gt;page_mkwrite until</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the PTE is marked dirty to avoid page_mkclean() being called</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * before the PTE is updated, which would leave the page ignored</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * by defio.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Do this by locking the page here and informing the caller</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * about it with VM_FAULT_LOCKED.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_page\">lock_page</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* we loop through the pagelist before adding in order</span>", 
"<span class=\"comment\"><span class=\"ts\"/>to keep the pagelist sorted */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#cur\">cur</a>, &amp;<a class=\"id\" href=\"#fbdefio\">fbdefio</a>-><a class=\"id\" href=\"#pagelist\">pagelist</a>, <a class=\"id\" href=\"#lru\">lru</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* this check is to catch the case where a new</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>process could start writing to the same page</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>through a new pte. this new access can cause the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>mkwrite even when the original ps's pte is marked</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>writable */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#cur\">cur</a> == <a class=\"id\" href=\"#page\">page</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#page_already_added\">page_already_added</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#index\">index</a> &gt; <a class=\"id\" href=\"#page\">page</a>-><a class=\"id\" href=\"#index\">index</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#page\">page</a>-><a class=\"id\" href=\"#lru\">lru</a>, &amp;<a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#lru\">lru</a>);", 
"", 
"<a class=\"id\" href=\"#page_already_added\">page_already_added</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#fbdefio\">fbdefio</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* come back after delay to process the deferred IO */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#schedule_delayed_work\">schedule_delayed_work</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#deferred_work\">deferred_work</a>, <a class=\"id\" href=\"#fbdefio\">fbdefio</a>-><a class=\"id\" href=\"#delay\">delay</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#VM_FAULT_LOCKED\">VM_FAULT_LOCKED</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#vm_operations_struct\">vm_operations_struct</a> <a class=\"id\" href=\"#fb_deferred_io_vm_ops\">fb_deferred_io_vm_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#fault\">fault</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#fb_deferred_io_fault\">fb_deferred_io_fault</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#page_mkwrite\">page_mkwrite</a><span class=\"ts\"/>= <a class=\"id\" href=\"#fb_deferred_io_mkwrite\">fb_deferred_io_mkwrite</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#fb_deferred_io_set_page_dirty\">fb_deferred_io_set_page_dirty</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#PageDirty\">PageDirty</a>(<a class=\"id\" href=\"#page\">page</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SetPageDirty\">SetPageDirty</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#address_space_operations\">address_space_operations</a> <a class=\"id\" href=\"#fb_deferred_io_aops\">fb_deferred_io_aops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_page_dirty\">set_page_dirty</a> = <a class=\"id\" href=\"#fb_deferred_io_set_page_dirty\">fb_deferred_io_set_page_dirty</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#fb_deferred_io_mmap\">fb_deferred_io_mmap</a>(struct <a class=\"id\" href=\"#fb_info\">fb_info</a> *<a class=\"id\" href=\"#info\">info</a>, struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_ops\">vm_ops</a> = &amp;<a class=\"id\" href=\"#fb_deferred_io_vm_ops\">fb_deferred_io_vm_ops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_flags\">vm_flags</a> |= ( <a class=\"id\" href=\"#VM_RESERVED\">VM_RESERVED</a> | <a class=\"id\" href=\"#VM_DONTEXPAND\">VM_DONTEXPAND</a> );", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#FBINFO_VIRTFB\">FBINFO_VIRTFB</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_flags\">vm_flags</a> |= <a class=\"id\" href=\"#VM_IO\">VM_IO</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_private_data\">vm_private_data</a> = <a class=\"id\" href=\"#info\">info</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* workqueue callback */</span>", 
"static void <a class=\"id\" href=\"#fb_deferred_io_work\">fb_deferred_io_work</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fb_info\">fb_info</a> *<a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#work\">work</a>, struct <a class=\"id\" href=\"#fb_info\">fb_info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#deferred_work\">deferred_work</a>.<a class=\"id\" href=\"#work\">work</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#node\">node</a>, *<a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#cur\">cur</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fb_deferred_io\">fb_deferred_io</a> *<a class=\"id\" href=\"#fbdefio\">fbdefio</a> = <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#fbdefio\">fbdefio</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* here we mkclean the pages, then do all deferred IO */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#fbdefio\">fbdefio</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#cur\">cur</a>, &amp;<a class=\"id\" href=\"#fbdefio\">fbdefio</a>-><a class=\"id\" href=\"#pagelist\">pagelist</a>, <a class=\"id\" href=\"#lru\">lru</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lock_page\">lock_page</a>(<a class=\"id\" href=\"#cur\">cur</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_mkclean\">page_mkclean</a>(<a class=\"id\" href=\"#cur\">cur</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_page\">unlock_page</a>(<a class=\"id\" href=\"#cur\">cur</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* driver's callback with pagelist */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fbdefio\">fbdefio</a>-><a class=\"id\" href=\"#deferred_io\">deferred_io</a>(<a class=\"id\" href=\"#info\">info</a>, &amp;<a class=\"id\" href=\"#fbdefio\">fbdefio</a>-><a class=\"id\" href=\"#pagelist\">pagelist</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* clear the list */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_safe\">list_for_each_safe</a>(<a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#next\">next</a>, &amp;<a class=\"id\" href=\"#fbdefio\">fbdefio</a>-><a class=\"id\" href=\"#pagelist\">pagelist</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(<a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#fbdefio\">fbdefio</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#fb_deferred_io_init\">fb_deferred_io_init</a>(struct <a class=\"id\" href=\"#fb_info\">fb_info</a> *<a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fb_deferred_io\">fb_deferred_io</a> *<a class=\"id\" href=\"#fbdefio\">fbdefio</a> = <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#fbdefio\">fbdefio</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#fbdefio\">fbdefio</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_init\">mutex_init</a>(&amp;<a class=\"id\" href=\"#fbdefio\">fbdefio</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#fbops\">fbops</a>-><a class=\"id\" href=\"#fb_mmap\">fb_mmap</a> = <a class=\"id\" href=\"#fb_deferred_io_mmap\">fb_deferred_io_mmap</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_DELAYED_WORK\">INIT_DELAYED_WORK</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#deferred_work\">deferred_work</a>, <a class=\"id\" href=\"#fb_deferred_io_work\">fb_deferred_io_work</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#fbdefio\">fbdefio</a>-><a class=\"id\" href=\"#pagelist\">pagelist</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fbdefio\">fbdefio</a>-><a class=\"id\" href=\"#delay\">delay</a> == 0) <span class=\"comment\">/* set a default of 1 s */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fbdefio\">fbdefio</a>-><a class=\"id\" href=\"#delay\">delay</a> = <a class=\"id\" href=\"#HZ\">HZ</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#fb_deferred_io_init\">fb_deferred_io_init</a>);", 
"", 
"void <a class=\"id\" href=\"#fb_deferred_io_open\">fb_deferred_io_open</a>(struct <a class=\"id\" href=\"#fb_info\">fb_info</a> *<a class=\"id\" href=\"#info\">info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_mapping\">f_mapping</a>-><a class=\"id\" href=\"#a_ops\">a_ops</a> = &amp;<a class=\"id\" href=\"#fb_deferred_io_aops\">fb_deferred_io_aops</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#fb_deferred_io_open\">fb_deferred_io_open</a>);", 
"", 
"void <a class=\"id\" href=\"#fb_deferred_io_cleanup\">fb_deferred_io_cleanup</a>(struct <a class=\"id\" href=\"#fb_info\">fb_info</a> *<a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fb_deferred_io\">fb_deferred_io</a> *<a class=\"id\" href=\"#fbdefio\">fbdefio</a> = <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#fbdefio\">fbdefio</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#fbdefio\">fbdefio</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cancel_delayed_work\">cancel_delayed_work</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#deferred_work\">deferred_work</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flush_scheduled_work\">flush_scheduled_work</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* clear out the mapping that we setup */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0 ; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#fix\">fix</a>.<a class=\"id\" href=\"#smem_len\">smem_len</a>; <a class=\"id\" href=\"#i\">i</a> += <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#fb_deferred_io_page\">fb_deferred_io_page</a>(<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a>-><a class=\"id\" href=\"#mapping\">mapping</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#fbops\">fbops</a>-><a class=\"id\" href=\"#fb_mmap\">fb_mmap</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_destroy\">mutex_destroy</a>(&amp;<a class=\"id\" href=\"#fbdefio\">fbdefio</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#fb_deferred_io_cleanup\">fb_deferred_io_cleanup</a>);", 
"", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
];
xr_frag_insert('l/8e/f2fd337310db0af7d9f0fb5466849fa5e6c80a.xr', __xr_tmp);
