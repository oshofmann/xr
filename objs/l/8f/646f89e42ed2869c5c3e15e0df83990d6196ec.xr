var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#page_table_lock\">page_table_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#ret\">ret</a> &amp; <a class=\"id\" href=\"#VM_FAULT_ERROR\">VM_FAULT_ERROR</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#remainder\">remainder</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pfn_offset\">pfn_offset</a> = (<a class=\"id\" href=\"#vaddr\">vaddr</a> &amp; ~<a class=\"id\" href=\"#huge_page_mask\">huge_page_mask</a>(<a class=\"id\" href=\"#h\">h</a>)) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#pte_page\">pte_page</a>(<a class=\"id\" href=\"#huge_ptep_get\">huge_ptep_get</a>(<a class=\"id\" href=\"#pte\">pte</a>));", 
"<a class=\"id\" href=\"#same_page\">same_page</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pages\">pages</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#mem_map_offset\">mem_map_offset</a>(<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#pfn_offset\">pfn_offset</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_page\">get_page</a>(<a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#vmas\">vmas</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vmas\">vmas</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#vma\">vma</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vaddr\">vaddr</a> += <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>++<a class=\"id\" href=\"#pfn_offset\">pfn_offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>--<a class=\"id\" href=\"#remainder\">remainder</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>++<a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#vaddr\">vaddr</a> &lt; <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_end\">vm_end</a> && <a class=\"id\" href=\"#remainder\">remainder</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pfn_offset\">pfn_offset</a> &lt; <a class=\"id\" href=\"#pages_per_huge_page\">pages_per_huge_page</a>(<a class=\"id\" href=\"#h\">h</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * We use pfn_offset to avoid touching the pageframes</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * of this compound page.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#same_page\">same_page</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#page_table_lock\">page_table_lock</a>);", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#remainder\">remainder</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#position\">position</a> = <a class=\"id\" href=\"#vaddr\">vaddr</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#i\">i</a> ? <a class=\"id\" href=\"#i\">i</a> : -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#hugetlb_change_protection\">hugetlb_change_protection</a>(struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#address\">address</a>, unsigned long <a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#pgprot_t\">pgprot_t</a> <a class=\"id\" href=\"#newprot\">newprot</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_mm\">vm_mm</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#address\">address</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#ptep\">ptep</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hstate\">hstate</a> *<a class=\"id\" href=\"#h\">h</a> = <a class=\"id\" href=\"#hstate_vma\">hstate_vma</a>(<a class=\"id\" href=\"#vma\">vma</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#address\">address</a> >= <a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flush_cache_range\">flush_cache_range</a>(<a class=\"id\" href=\"#vma\">vma</a>, <a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#end\">end</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_file\">vm_file</a>-><a class=\"id\" href=\"#f_mapping\">f_mapping</a>-><a class=\"id\" href=\"#i_mmap_lock\">i_mmap_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#page_table_lock\">page_table_lock</a>);", 
"<span class=\"ts\"/>for (; <a class=\"id\" href=\"#address\">address</a> &lt; <a class=\"id\" href=\"#end\">end</a>; <a class=\"id\" href=\"#address\">address</a> += <a class=\"id\" href=\"#huge_page_size\">huge_page_size</a>(<a class=\"id\" href=\"#h\">h</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ptep\">ptep</a> = <a class=\"id\" href=\"#huge_pte_offset\">huge_pte_offset</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#address\">address</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ptep\">ptep</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#huge_pmd_unshare\">huge_pmd_unshare</a>(<a class=\"id\" href=\"#mm\">mm</a>, &amp;<a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#ptep\">ptep</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#huge_pte_none\">huge_pte_none</a>(<a class=\"id\" href=\"#huge_ptep_get\">huge_ptep_get</a>(<a class=\"id\" href=\"#ptep\">ptep</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pte\">pte</a> = <a class=\"id\" href=\"#huge_ptep_get_and_clear\">huge_ptep_get_and_clear</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#ptep\">ptep</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pte\">pte</a> = <a class=\"id\" href=\"#pte_mkhuge\">pte_mkhuge</a>(<a class=\"id\" href=\"#pte_modify\">pte_modify</a>(<a class=\"id\" href=\"#pte\">pte</a>, <a class=\"id\" href=\"#newprot\">newprot</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_huge_pte_at\">set_huge_pte_at</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#ptep\">ptep</a>, <a class=\"id\" href=\"#pte\">pte</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#page_table_lock\">page_table_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_file\">vm_file</a>-><a class=\"id\" href=\"#f_mapping\">f_mapping</a>-><a class=\"id\" href=\"#i_mmap_lock\">i_mmap_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flush_tlb_range\">flush_tlb_range</a>(<a class=\"id\" href=\"#vma\">vma</a>, <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#hugetlb_reserve_pages\">hugetlb_reserve_pages</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>long <a class=\"id\" href=\"#from\">from</a>, long <a class=\"id\" href=\"#to\">to</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#acctflag\">acctflag</a>)", 
"{", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#chg\">chg</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hstate\">hstate</a> *<a class=\"id\" href=\"#h\">h</a> = <a class=\"id\" href=\"#hstate_inode\">hstate_inode</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Only apply hugepage reservation if asked. At fault time, an</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * attempt will be made for VM_NORESERVE to allocate a page</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and filesystem quota without using reserves</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acctflag\">acctflag</a> &amp; <a class=\"id\" href=\"#VM_NORESERVE\">VM_NORESERVE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Shared mappings base their reservation on the number of pages that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * are already allocated on behalf of the file. Private mappings need</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to reserve the full area even if read-only as mprotect() may be</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * called to make the mapping read-write. Assume !vma is a shm mapping</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#vma\">vma</a> || <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_flags\">vm_flags</a> &amp; <a class=\"id\" href=\"#VM_MAYSHARE\">VM_MAYSHARE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#chg\">chg</a> = <a class=\"id\" href=\"#region_chg\">region_chg</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>-><a class=\"id\" href=\"#private_list\">private_list</a>, <a class=\"id\" href=\"#from\">from</a>, <a class=\"id\" href=\"#to\">to</a>);", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#resv_map\">resv_map</a> *<a class=\"id\" href=\"#resv_map\">resv_map</a> = <a class=\"id\" href=\"#resv_map_alloc\">resv_map_alloc</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#resv_map\">resv_map</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#chg\">chg</a> = <a class=\"id\" href=\"#to\">to</a> - <a class=\"id\" href=\"#from\">from</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_vma_resv_map\">set_vma_resv_map</a>(<a class=\"id\" href=\"#vma\">vma</a>, <a class=\"id\" href=\"#resv_map\">resv_map</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_vma_resv_flags\">set_vma_resv_flags</a>(<a class=\"id\" href=\"#vma\">vma</a>, <a class=\"id\" href=\"#HPAGE_RESV_OWNER\">HPAGE_RESV_OWNER</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#chg\">chg</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#chg\">chg</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* There must be enough filesystem quota for the mapping */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hugetlb_get_quota\">hugetlb_get_quota</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>, <a class=\"id\" href=\"#chg\">chg</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Check enough hugepages are available for the reservation.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Hand back the quota if there are not</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#hugetlb_acct_memory\">hugetlb_acct_memory</a>(<a class=\"id\" href=\"#h\">h</a>, <a class=\"id\" href=\"#chg\">chg</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hugetlb_put_quota\">hugetlb_put_quota</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>, <a class=\"id\" href=\"#chg\">chg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Account for the reservations made. Shared mappings record regions</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * that have reservations as they are shared by multiple VMAs.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * When the last VMA disappears, the region map says how much</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the reservation was and the page cache tells how much of</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the reservation was consumed. Private mappings are per-VMA and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * only the consumed reservations are tracked. When the VMA</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * disappears, the original reservation is the VMA size and the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * consumed reservations are stored in the map. Hence, nothing</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * else has to be done for private mappings here</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#vma\">vma</a> || <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_flags\">vm_flags</a> &amp; <a class=\"id\" href=\"#VM_MAYSHARE\">VM_MAYSHARE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#region_add\">region_add</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>-><a class=\"id\" href=\"#private_list\">private_list</a>, <a class=\"id\" href=\"#from\">from</a>, <a class=\"id\" href=\"#to\">to</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"void <a class=\"id\" href=\"#hugetlb_unreserve_pages\">hugetlb_unreserve_pages</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, long <a class=\"id\" href=\"#offset\">offset</a>, long <a class=\"id\" href=\"#freed\">freed</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hstate\">hstate</a> *<a class=\"id\" href=\"#h\">h</a> = <a class=\"id\" href=\"#hstate_inode\">hstate_inode</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#chg\">chg</a> = <a class=\"id\" href=\"#region_truncate\">region_truncate</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>-><a class=\"id\" href=\"#private_list\">private_list</a>, <a class=\"id\" href=\"#offset\">offset</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_lock\">i_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_blocks\">i_blocks</a> -= (<a class=\"id\" href=\"#blocks_per_huge_page\">blocks_per_huge_page</a>(<a class=\"id\" href=\"#h\">h</a>) * <a class=\"id\" href=\"#freed\">freed</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_lock\">i_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hugetlb_put_quota\">hugetlb_put_quota</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>, (<a class=\"id\" href=\"#chg\">chg</a> - <a class=\"id\" href=\"#freed\">freed</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hugetlb_acct_memory\">hugetlb_acct_memory</a>(<a class=\"id\" href=\"#h\">h</a>, -(<a class=\"id\" href=\"#chg\">chg</a> - <a class=\"id\" href=\"#freed\">freed</a>));", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This function is called from memory failure code.</span>", 
"<span class=\"comment\"> * Assume the caller holds page lock of the head page.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__isolate_hwpoisoned_huge_page\">__isolate_hwpoisoned_huge_page</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#hpage\">hpage</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hstate\">hstate</a> *<a class=\"id\" href=\"#h\">h</a> = <a class=\"id\" href=\"#page_hstate\">page_hstate</a>(<a class=\"id\" href=\"#hpage\">hpage</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nid\">nid</a> = <a class=\"id\" href=\"#page_to_nid\">page_to_nid</a>(<a class=\"id\" href=\"#hpage\">hpage</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#hugetlb_lock\">hugetlb_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#hpage\">hpage</a>-><a class=\"id\" href=\"#lru\">lru</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#free_huge_pages\">free_huge_pages</a>--;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#free_huge_pages_node\">free_huge_pages_node</a>[<a class=\"id\" href=\"#nid\">nid</a>]--;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#hugetlb_lock\">hugetlb_lock</a>);", 
"}", 
];
xr_frag_insert('l/8f/646f89e42ed2869c5c3e15e0df83990d6196ec.xr', __xr_tmp);
